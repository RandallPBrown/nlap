/*!
 * jQuery JavaScript Library v1.12.4
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-05-20T17:17Z
 */


(function( global, factory ) {

	if ( typeof module === "object" && typeof module.exports === "object" ) {
		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Support: Firefox 18+
// Can't be in strict mode, several libs including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
//"use strict";
var deletedIds = [];

var document = window.document;

var slice = deletedIds.slice;

var concat = deletedIds.concat;

var push = deletedIds.push;

var indexOf = deletedIds.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var support = {};



var
	version = "1.12.4",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android<4.1, IE<9
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// Start with an empty selector
	selector: "",

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num != null ?

			// Return just the one element from the set
			( num < 0 ? this[ num + this.length ] : this[ num ] ) :

			// Return all the elements in a clean array
			slice.call( this );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		ret.context = this.context;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: deletedIds.sort,
	splice: deletedIds.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var src, copyIsArray, copy, name, options, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction( target ) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = jQuery.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type( obj ) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type( obj ) === "array";
	},

	isWindow: function( obj ) {
		/* jshint eqeqeq: false */
		return obj != null && obj == obj.window;
	},

	isNumeric: function( obj ) {

		// parseFloat NaNs numeric-cast false positives (null|true|false|"")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		// adding 1 corrects loss of precision from parseFloat (#15100)
		var realStringObj = obj && obj.toString();
		return !jQuery.isArray( obj ) && ( realStringObj - parseFloat( realStringObj ) + 1 ) >= 0;
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	isPlainObject: function( obj ) {
		var key;

		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type( obj ) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		try {

			// Not own constructor property must be Object
			if ( obj.constructor &&
				!hasOwn.call( obj, "constructor" ) &&
				!hasOwn.call( obj.constructor.prototype, "isPrototypeOf" ) ) {
				return false;
			}
		} catch ( e ) {

			// IE8,9 Will throw exceptions on certain host objects #9897
			return false;
		}

		// Support: IE<9
		// Handle iteration over inherited properties before own properties.
		if ( !support.ownFirst ) {
			for ( key in obj ) {
				return hasOwn.call( obj, key );
			}
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
		for ( key in obj ) {}

		return key === undefined || hasOwn.call( obj, key );
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call( obj ) ] || "object" :
			typeof obj;
	},

	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && jQuery.trim( data ) ) {

			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data ); // jscs:ignore requireDotNotation
			} )( data );
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android<4.1, IE<9
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		var len;

		if ( arr ) {
			if ( indexOf ) {
				return indexOf.call( arr, elem, i );
			}

			len = arr.length;
			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

			for ( ; i < len; i++ ) {

				// Skip accessing in sparse arrays
				if ( i in arr && arr[ i ] === elem ) {
					return i;
				}
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		while ( j < len ) {
			first[ i++ ] = second[ j++ ];
		}

		// Support: IE<9
		// Workaround casting of .length to NaN on otherwise arraylike objects (e.g., NodeLists)
		if ( len !== len ) {
			while ( second[ j ] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var args, proxy, tmp;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: function() {
		return +( new Date() );
	},

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

// JSHint would error on this code due to the Symbol not being defined in ES5.
// Defining this global in .jshintrc would create a danger of using the global
// unguarded in another place, it seems safer to just disable JSHint for these
// three lines.
/* jshint ignore: start */
if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = deletedIds[ Symbol.iterator ];
}
/* jshint ignore: end */

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: iOS 8.2 (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.2.1
 * http://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2015-10-17
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// General-purpose constants
	MAX_NEGATIVE = 1 << 31,

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// http://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,
	rescape = /'|\\/g,

	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	};

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, nidselect, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rescape, "\\$&" );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					nidselect = ridentifier.test( nid ) ? "#" + nid : "[id='" + nid + "']";
					while ( i-- ) {
						groups[i] = nidselect + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
	var div = document.createElement("div");

	try {
		return !!fn( div );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( div.parentNode ) {
			div.parentNode.removeChild( div );
		}
		// release memory in IE
		div = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			( ~b.sourceIndex || MAX_NEGATIVE ) -
			( ~a.sourceIndex || MAX_NEGATIVE );

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, parent,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( (parent = document.defaultView) && parent.top !== parent ) {
		// Support: IE 11
		if ( parent.addEventListener ) {
			parent.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( parent.attachEvent ) {
			parent.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( div ) {
		div.className = "i";
		return !div.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( div ) {
		div.appendChild( document.createComment("") );
		return !div.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( div ) {
		docElem.appendChild( div ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var m = context.getElementById( id );
				return m ? [ m ] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See http://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			docElem.appendChild( div ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( div.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !div.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibing-combinator selector` fails
			if ( !div.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( div ) {
			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			div.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( div.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			div.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( div ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( div, "div" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( div, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( (oldCache = uniqueCache[ dir ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ dir ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				support.getById && context.nodeType === 9 && documentIsHTML &&
				Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
	// Should return 1, but returns 4 (following)
	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
	div.innerHTML = "<a href='#'></a>";
	return div.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
	div.innerHTML = "<input/>";
	div.firstChild.setAttribute( "value", "" );
	return div.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
	return div.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;



var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = ( /^<([\w-]+)\s*\/?>(?:<\/\1>|)$/ );



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			/* jshint -W018 */
			return !!qualifier.call( elem, i, elem ) !== not;
		} );

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );

	}

	if ( typeof qualifier === "string" ) {
		if ( risSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( jQuery.inArray( elem, qualifier ) > -1 ) !== not;
	} );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	return elems.length === 1 && elem.nodeType === 1 ?
		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
			return elem.nodeType === 1;
		} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i,
			ret = [],
			self = this,
			len = self.length;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		// Needed because $( selector, context ) becomes $( context ).find( selector )
		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
		ret.selector = this.selector ? this.selector + " " + selector : selector;
		return ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// init accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector.charAt( 0 ) === "<" &&
				selector.charAt( selector.length - 1 ) === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {

						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[ 2 ] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[ 0 ] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this.context = this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return typeof root.ready !== "undefined" ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var i,
			targets = jQuery( target, this ),
			len = targets.length;

		return this.filter( function() {
			for ( i = 0; i < len; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

				// Always skip document fragments
				if ( cur.nodeType < 11 && ( pos ?
					pos.index( cur ) > -1 :

					// Don't pass non-elements to Sizzle
					cur.nodeType === 1 &&
						jQuery.find.matchesSelector( cur, selectors ) ) ) {

					matched.push( cur );
					break;
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return jQuery.inArray( this[ 0 ], jQuery( elem ) );
		}

		// Locate the position of the desired element
		return jQuery.inArray(

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem, this );
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	do {
		cur = cur[ dir ];
	} while ( cur && cur.nodeType !== 1 );

	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				ret = jQuery.uniqueSort( ret );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				ret = ret.reverse();
			}
		}

		return this.pushStack( ret );
	};
} );
var rnotwhite = ( /\S+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( jQuery.isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && jQuery.type( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = true;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks( "once memory" ), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks( "memory" ) ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];

							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this === promise ? newDefer.promise() : this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add( function() {

					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 ||
				( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred.
			// If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( values === progressValues ) {
						deferred.notifyWith( contexts, values );

					} else if ( !( --remaining ) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.progress( updateFunc( i, progressContexts, progressValues ) )
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject );
				} else {
					--remaining;
				}
			}
		}

		// if we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
} );


// The deferred used on DOM ready
var readyList;

jQuery.fn.ready = function( fn ) {

	// Add the callback
	jQuery.ready.promise().done( fn );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.triggerHandler ) {
			jQuery( document ).triggerHandler( "ready" );
			jQuery( document ).off( "ready" );
		}
	}
} );

/**
 * Clean-up method for dom ready events
 */
function detach() {
	if ( document.addEventListener ) {
		document.removeEventListener( "DOMContentLoaded", completed );
		window.removeEventListener( "load", completed );

	} else {
		document.detachEvent( "onreadystatechange", completed );
		window.detachEvent( "onload", completed );
	}
}

/**
 * The ready event handler and self cleanup method
 */
function completed() {

	// readyState === "complete" is good enough for us to call the dom ready in oldIE
	if ( document.addEventListener ||
		window.event.type === "load" ||
		document.readyState === "complete" ) {

		detach();
		jQuery.ready();
	}
}

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called
		// after the browser event has already occurred.
		// Support: IE6-10
		// Older IE sometimes signals "interactive" too soon
		if ( document.readyState === "complete" ||
			( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

			// Handle it asynchronously to allow scripts the opportunity to delay ready
			window.setTimeout( jQuery.ready );

		// Standards-based browsers support DOMContentLoaded
		} else if ( document.addEventListener ) {

			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed );

		// If IE event model is used
		} else {

			// Ensure firing before onload, maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", completed );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", completed );

			// If IE and not a frame
			// continually check to see if the document is ready
			var top = false;

			try {
				top = window.frameElement == null && document.documentElement;
			} catch ( e ) {}

			if ( top && top.doScroll ) {
				( function doScrollCheck() {
					if ( !jQuery.isReady ) {

						try {

							// Use the trick by Diego Perini
							// http://javascript.nwbox.com/IEContentLoaded/
							top.doScroll( "left" );
						} catch ( e ) {
							return window.setTimeout( doScrollCheck, 50 );
						}

						// detach all dom ready events
						detach();

						// and execute any waiting functions
						jQuery.ready();
					}
				} )();
			}
		}
	}
	return readyList.promise( obj );
};

// Kick off the DOM ready check even if the user does not
jQuery.ready.promise();




// Support: IE<9
// Iteration over object's inherited properties before its own
var i;
for ( i in jQuery( support ) ) {
	break;
}
support.ownFirst = i === "0";

// Note: most support tests are defined in their respective modules.
// false until the test is run
support.inlineBlockNeedsLayout = false;

// Execute ASAP in case we need to set body.style.zoom
jQuery( function() {

	// Minified: var a,b,c,d
	var val, div, body, container;

	body = document.getElementsByTagName( "body" )[ 0 ];
	if ( !body || !body.style ) {

		// Return for frameset docs that don't have a body
		return;
	}

	// Setup
	div = document.createElement( "div" );
	container = document.createElement( "div" );
	container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
	body.appendChild( container ).appendChild( div );

	if ( typeof div.style.zoom !== "undefined" ) {

		// Support: IE<8
		// Check if natively block-level elements act like inline-block
		// elements when setting their display to 'inline' and giving
		// them layout
		div.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1";

		support.inlineBlockNeedsLayout = val = div.offsetWidth === 3;
		if ( val ) {

			// Prevent IE 6 from affecting layout for positioned elements #11048
			// Prevent IE from shrinking the body in IE 7 mode #12869
			// Support: IE<8
			body.style.zoom = 1;
		}
	}

	body.removeChild( container );
} );


( function() {
	var div = document.createElement( "div" );

	// Support: IE<9
	support.deleteExpando = true;
	try {
		delete div.test;
	} catch ( e ) {
		support.deleteExpando = false;
	}

	// Null elements to avoid leaks in IE.
	div = null;
} )();
var acceptData = function( elem ) {
	var noData = jQuery.noData[ ( elem.nodeName + " " ).toLowerCase() ],
		nodeType = +elem.nodeType || 1;

	// Do not set data on non-element DOM nodes because it will not be cleared (#8335).
	return nodeType !== 1 && nodeType !== 9 ?
		false :

		// Nodes accept data unless otherwise specified; rejection can be conditional
		!noData || noData !== true && elem.getAttribute( "classid" ) === noData;
};




var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /([A-Z])/g;

function dataAttr( elem, key, data ) {

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {

		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :

					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
	var name;
	for ( name in obj ) {

		// if the public data object is empty, the private is still empty
		if ( name === "data" && jQuery.isEmptyObject( obj[ name ] ) ) {
			continue;
		}
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}

function internalData( elem, name, data, pvt /* Internal Use Only */ ) {
	if ( !acceptData( elem ) ) {
		return;
	}

	var ret, thisCache,
		internalKey = jQuery.expando,

		// We have to handle DOM nodes and JS objects differently because IE6-7
		// can't GC object references properly across the DOM-JS boundary
		isNode = elem.nodeType,

		// Only DOM nodes need the global jQuery cache; JS object data is
		// attached directly to the object so GC can occur automatically
		cache = isNode ? jQuery.cache : elem,

		// Only defining an ID for JS objects if its cache already exists allows
		// the code to shortcut on the same path as a DOM node with no cache
		id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;

	// Avoid doing any more work than we need to when trying to get data on an
	// object that has no data at all
	if ( ( !id || !cache[ id ] || ( !pvt && !cache[ id ].data ) ) &&
		data === undefined && typeof name === "string" ) {
		return;
	}

	if ( !id ) {

		// Only DOM nodes need a new unique ID for each element since their data
		// ends up in the global cache
		if ( isNode ) {
			id = elem[ internalKey ] = deletedIds.pop() || jQuery.guid++;
		} else {
			id = internalKey;
		}
	}

	if ( !cache[ id ] ) {

		// Avoid exposing jQuery metadata on plain JS objects when the object
		// is serialized using JSON.stringify
		cache[ id ] = isNode ? {} : { toJSON: jQuery.noop };
	}

	// An object can be passed to jQuery.data instead of a key/value pair; this gets
	// shallow copied over onto the existing cache
	if ( typeof name === "object" || typeof name === "function" ) {
		if ( pvt ) {
			cache[ id ] = jQuery.extend( cache[ id ], name );
		} else {
			cache[ id ].data = jQuery.extend( cache[ id ].data, name );
		}
	}

	thisCache = cache[ id ];

	// jQuery data() is stored in a separate object inside the object's internal data
	// cache in order to avoid key collisions between internal data and user-defined
	// data.
	if ( !pvt ) {
		if ( !thisCache.data ) {
			thisCache.data = {};
		}

		thisCache = thisCache.data;
	}

	if ( data !== undefined ) {
		thisCache[ jQuery.camelCase( name ) ] = data;
	}

	// Check for both converted-to-camel and non-converted data property names
	// If a data property was specified
	if ( typeof name === "string" ) {

		// First Try to find as-is property data
		ret = thisCache[ name ];

		// Test for null|undefined property data
		if ( ret == null ) {

			// Try to find the camelCased property
			ret = thisCache[ jQuery.camelCase( name ) ];
		}
	} else {
		ret = thisCache;
	}

	return ret;
}

function internalRemoveData( elem, name, pvt ) {
	if ( !acceptData( elem ) ) {
		return;
	}

	var thisCache, i,
		isNode = elem.nodeType,

		// See jQuery.data for more information
		cache = isNode ? jQuery.cache : elem,
		id = isNode ? elem[ jQuery.expando ] : jQuery.expando;

	// If there is already no cache entry for this object, there is no
	// purpose in continuing
	if ( !cache[ id ] ) {
		return;
	}

	if ( name ) {

		thisCache = pvt ? cache[ id ] : cache[ id ].data;

		if ( thisCache ) {

			// Support array or space separated string names for data keys
			if ( !jQuery.isArray( name ) ) {

				// try the string as a key before any manipulation
				if ( name in thisCache ) {
					name = [ name ];
				} else {

					// split the camel cased version by spaces unless a key with the spaces exists
					name = jQuery.camelCase( name );
					if ( name in thisCache ) {
						name = [ name ];
					} else {
						name = name.split( " " );
					}
				}
			} else {

				// If "name" is an array of keys...
				// When data is initially created, via ("key", "val") signature,
				// keys will be converted to camelCase.
				// Since there is no way to tell _how_ a key was added, remove
				// both plain key and camelCase key. #12786
				// This will only penalize the array argument path.
				name = name.concat( jQuery.map( name, jQuery.camelCase ) );
			}

			i = name.length;
			while ( i-- ) {
				delete thisCache[ name[ i ] ];
			}

			// If there is no data left in the cache, we want to continue
			// and let the cache object itself get destroyed
			if ( pvt ? !isEmptyDataObject( thisCache ) : !jQuery.isEmptyObject( thisCache ) ) {
				return;
			}
		}
	}

	// See jQuery.data for more information
	if ( !pvt ) {
		delete cache[ id ].data;

		// Don't destroy the parent cache unless the internal data object
		// had been the only thing left in it
		if ( !isEmptyDataObject( cache[ id ] ) ) {
			return;
		}
	}

	// Destroy the cache
	if ( isNode ) {
		jQuery.cleanData( [ elem ], true );

	// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)
	/* jshint eqeqeq: false */
	} else if ( support.deleteExpando || cache != cache.window ) {
		/* jshint eqeqeq: true */
		delete cache[ id ];

	// When all else fails, undefined
	} else {
		cache[ id ] = undefined;
	}
}

jQuery.extend( {
	cache: {},

	// The following elements (space-suffixed to avoid Object.prototype collisions)
	// throw uncatchable exceptions if you attempt to set expando properties
	noData: {
		"applet ": true,
		"embed ": true,

		// ...but Flash objects (which have this classid) *can* handle expandos
		"object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[ jQuery.expando ] ] : elem[ jQuery.expando ];
		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data ) {
		return internalData( elem, name, data );
	},

	removeData: function( elem, name ) {
		return internalRemoveData( elem, name );
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return internalData( elem, name, data, true );
	},

	_removeData: function( elem, name ) {
		return internalRemoveData( elem, name, true );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Special expections of .data basically thwart jQuery.access,
		// so implement the relevant behavior ourselves

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = jQuery.data( elem );

				if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE11+
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					jQuery._data( elem, "parsedAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				jQuery.data( this, key );
			} );
		}

		return arguments.length > 1 ?

			// Sets one value
			this.each( function() {
				jQuery.data( this, key, value );
			} ) :

			// Gets one value
			// Try to fetch any internally stored data first
			elem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : undefined;
	},

	removeData: function( key ) {
		return this.each( function() {
			jQuery.removeData( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = jQuery._data( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray( data ) ) {
					queue = jQuery._data( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// not intended for public consumption - generates a queueHooks object,
	// or returns the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return jQuery._data( elem, key ) || jQuery._data( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				jQuery._removeData( elem, type + "queue" );
				jQuery._removeData( elem, key );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = jQuery._data( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );


( function() {
	var shrinkWrapBlocksVal;

	support.shrinkWrapBlocks = function() {
		if ( shrinkWrapBlocksVal != null ) {
			return shrinkWrapBlocksVal;
		}

		// Will be changed later if needed.
		shrinkWrapBlocksVal = false;

		// Minified: var b,c,d
		var div, body, container;

		body = document.getElementsByTagName( "body" )[ 0 ];
		if ( !body || !body.style ) {

			// Test fired too early or in an unsupported environment, exit.
			return;
		}

		// Setup
		div = document.createElement( "div" );
		container = document.createElement( "div" );
		container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
		body.appendChild( container ).appendChild( div );

		// Support: IE6
		// Check if elements with layout shrink-wrap their children
		if ( typeof div.style.zoom !== "undefined" ) {

			// Reset CSS: box-sizing; display; margin; border
			div.style.cssText =

				// Support: Firefox<29, Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
				"box-sizing:content-box;display:block;margin:0;border:0;" +
				"padding:1px;width:1px;zoom:1";
			div.appendChild( document.createElement( "div" ) ).style.width = "5px";
			shrinkWrapBlocksVal = div.offsetWidth !== 3;
		}

		body.removeChild( container );

		return shrinkWrapBlocksVal;
	};

} )();
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHidden = function( elem, el ) {

		// isHidden might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;
		return jQuery.css( elem, "display" ) === "none" ||
			!jQuery.contains( elem.ownerDocument, elem );
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted,
		scale = 1,
		maxIterations = 20,
		currentValue = tween ?
			function() { return tween.cur(); } :
			function() { return jQuery.css( elem, prop, "" ); },
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		do {

			// If previous iteration zeroed out, double until we get *something*.
			// Use string for doubling so we don't accidentally see scale as unchanged below
			scale = scale || ".5";

			// Adjust and apply
			initialInUnit = initialInUnit / scale;
			jQuery.style( elem, prop, initialInUnit + unit );

		// Update scale, tolerating zero or NaN from tween.cur()
		// Break the loop if scale is unchanged or perfect, or if we've just had enough.
		} while (
			scale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations
		);
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		length = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < length; i++ ) {
				fn(
					elems[ i ],
					key,
					raw ? value : value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	return chainable ?
		elems :

		// Gets
		bulk ?
			fn.call( elems ) :
			length ? fn( elems[ 0 ], key ) : emptyGet;
};
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([\w:-]+)/ );

var rscriptType = ( /^$|\/(?:java|ecma)script/i );

var rleadingWhitespace = ( /^\s+/ );

var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|" +
		"details|dialog|figcaption|figure|footer|header|hgroup|main|" +
		"mark|meter|nav|output|picture|progress|section|summary|template|time|video";



function createSafeFragment( document ) {
	var list = nodeNames.split( "|" ),
		safeFrag = document.createDocumentFragment();

	if ( safeFrag.createElement ) {
		while ( list.length ) {
			safeFrag.createElement(
				list.pop()
			);
		}
	}
	return safeFrag;
}


( function() {
	var div = document.createElement( "div" ),
		fragment = document.createDocumentFragment(),
		input = document.createElement( "input" );

	// Setup
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";

	// IE strips leading whitespace when .innerHTML is used
	support.leadingWhitespace = div.firstChild.nodeType === 3;

	// Make sure that tbody elements aren't automatically inserted
	// IE will insert them into empty tables
	support.tbody = !div.getElementsByTagName( "tbody" ).length;

	// Make sure that link elements get serialized correctly by innerHTML
	// This requires a wrapper element in IE
	support.htmlSerialize = !!div.getElementsByTagName( "link" ).length;

	// Makes sure cloning an html5 element does not cause problems
	// Where outerHTML is undefined, this still works
	support.html5Clone =
		document.createElement( "nav" ).cloneNode( true ).outerHTML !== "<:nav></:nav>";

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	input.type = "checkbox";
	input.checked = true;
	fragment.appendChild( input );
	support.appendChecked = input.checked;

	// Make sure textarea (and checkbox) defaultValue is properly cloned
	// Support: IE6-IE11+
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// #11217 - WebKit loses check when the name is after the checked attribute
	fragment.appendChild( div );

	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input = document.createElement( "input" );
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3
	// old WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE<9
	// Cloned elements keep attachEvent handlers, we use addEventListener on IE9+
	support.noCloneEvent = !!div.addEventListener;

	// Support: IE<9
	// Since attributes and properties are the same in IE,
	// cleanData must set properties to undefined rather than use removeAttribute
	div[ jQuery.expando ] = 1;
	support.attributes = !div.getAttribute( jQuery.expando );
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {
	option: [ 1, "<select multiple='multiple'>", "</select>" ],
	legend: [ 1, "<fieldset>", "</fieldset>" ],
	area: [ 1, "<map>", "</map>" ],

	// Support: IE8
	param: [ 1, "<object>", "</object>" ],
	thead: [ 1, "<table>", "</table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,
	// unless wrapped in a div with non-breaking characters in front of it.
	_default: support.htmlSerialize ? [ 0, "", "" ] : [ 1, "X<div>", "</div>" ]
};

// Support: IE8-IE9
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {
	var elems, elem,
		i = 0,
		found = typeof context.getElementsByTagName !== "undefined" ?
			context.getElementsByTagName( tag || "*" ) :
			typeof context.querySelectorAll !== "undefined" ?
				context.querySelectorAll( tag || "*" ) :
				undefined;

	if ( !found ) {
		for ( found = [], elems = context.childNodes || context;
			( elem = elems[ i ] ) != null;
			i++
		) {
			if ( !tag || jQuery.nodeName( elem, tag ) ) {
				found.push( elem );
			} else {
				jQuery.merge( found, getAll( elem, tag ) );
			}
		}
	}

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], found ) :
		found;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var elem,
		i = 0;
	for ( ; ( elem = elems[ i ] ) != null; i++ ) {
		jQuery._data(
			elem,
			"globalEval",
			!refElements || jQuery._data( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/,
	rtbody = /<tbody/i;

function fixDefaultChecked( elem ) {
	if ( rcheckableType.test( elem.type ) ) {
		elem.defaultChecked = elem.checked;
	}
}

function buildFragment( elems, context, scripts, selection, ignored ) {
	var j, elem, contains,
		tmp, tag, tbody, wrap,
		l = elems.length,

		// Ensure a safe fragment
		safe = createSafeFragment( context ),

		nodes = [],
		i = 0;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( jQuery.type( elem ) === "object" ) {
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || safe.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;

				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Manually add leading whitespace removed by IE
				if ( !support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
					nodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[ 0 ] ) );
				}

				// Remove IE's autoinserted <tbody> from table fragments
				if ( !support.tbody ) {

					// String was a <table>, *may* have spurious <tbody>
					elem = tag === "table" && !rtbody.test( elem ) ?
						tmp.firstChild :

						// String was a bare <thead> or <tfoot>
						wrap[ 1 ] === "<table>" && !rtbody.test( elem ) ?
							tmp :
							0;

					j = elem && elem.childNodes.length;
					while ( j-- ) {
						if ( jQuery.nodeName( ( tbody = elem.childNodes[ j ] ), "tbody" ) &&
							!tbody.childNodes.length ) {

							elem.removeChild( tbody );
						}
					}
				}

				jQuery.merge( nodes, tmp.childNodes );

				// Fix #12392 for WebKit and IE > 9
				tmp.textContent = "";

				// Fix #12392 for oldIE
				while ( tmp.firstChild ) {
					tmp.removeChild( tmp.firstChild );
				}

				// Remember the top-level container for proper cleanup
				tmp = safe.lastChild;
			}
		}
	}

	// Fix #11356: Clear elements from fragment
	if ( tmp ) {
		safe.removeChild( tmp );
	}

	// Reset defaultChecked for any radios and checkboxes
	// about to be appended to the DOM in IE 6/7 (#8060)
	if ( !support.appendChecked ) {
		jQuery.grep( getAll( nodes, "input" ), fixDefaultChecked );
	}

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}

			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( safe.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	tmp = null;

	return safe;
}


( function() {
	var i, eventName,
		div = document.createElement( "div" );

	// Support: IE<9 (lack submit/change bubble), Firefox (lack focus(in | out) events)
	for ( i in { submit: true, change: true, focusin: true } ) {
		eventName = "on" + i;

		if ( !( support[ i ] = eventName in window ) ) {

			// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)
			div.setAttribute( eventName, "t" );
			support[ i ] = div.attributes[ eventName ].expando === false;
		}
	}

	// Null elements to avoid leaks in IE.
	div = null;
} )();


var rformElems = /^(?:input|select|textarea)$/i,
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE9
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {
		var tmp, events, t, handleObjIn,
			special, eventHandle, handleObj,
			handlers, type, namespaces, origType,
			elemData = jQuery._data( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" &&
					( !e || jQuery.event.triggered !== e.type ) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};

			// Add elem as a property of the handle fn to prevent a memory leak
			// with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener/attachEvent if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {
		var j, handleObj, tmp,
			origCount, t, events,
			special, handlers, type,
			namespaces, origType,
			elemData = jQuery.hasData( elem ) && jQuery._data( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;

			// removeData also checks for emptiness and clears the expando if empty
			// so use it instead of delete
			jQuery._removeData( elem, "events" );
		}
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		var handle, ontype, cur,
			bubbleType, special, tmp, i,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] &&
				jQuery._data( cur, "handle" );

			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if (
				( !special._default ||
				 special._default.apply( eventPath.pop(), data ) === false
				) && acceptData( elem )
			) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction() check here because IE6/7 fails that test.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					try {
						elem[ type ]();
					} catch ( e ) {

						// IE<9 dies on focus/blur to hidden element (#1486,#12518)
						// only reproducible on winXP IE8 native, not IE9 in IE8 mode
					}
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event );

		var i, j, ret, matched, handleObj,
			handlerQueue = [],
			args = slice.call( arguments ),
			handlers = ( jQuery._data( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, matches, sel, handleObj,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Support (at least): Chrome, IE9
		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		//
		// Support: Firefox<=42+
		// Avoid non-left-click in FF but don't block IE radio events (#3861, gh-2343)
		if ( delegateCount && cur.nodeType &&
			( event.type !== "click" || isNaN( event.button ) || event.button < 1 ) ) {

			/* jshint eqeqeq: false */
			for ( ; cur != this; cur = cur.parentNode || this ) {
				/* jshint eqeqeq: true */

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && ( cur.disabled !== true || event.type !== "click" ) ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push( { elem: cur, handlers: matches } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: this, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop, copy,
			type = event.type,
			originalEvent = event,
			fixHook = this.fixHooks[ type ];

		if ( !fixHook ) {
			this.fixHooks[ type ] = fixHook =
				rmouseEvent.test( type ) ? this.mouseHooks :
				rkeyEvent.test( type ) ? this.keyHooks :
				{};
		}
		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = new jQuery.Event( originalEvent );

		i = copy.length;
		while ( i-- ) {
			prop = copy[ i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Support: IE<9
		// Fix target property (#1925)
		if ( !event.target ) {
			event.target = originalEvent.srcElement || document;
		}

		// Support: Safari 6-8+
		// Target should not be a text node (#504, #13143)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// Support: IE<9
		// For mouse/key events, metaKey==false if it's undefined (#3368, #11328)
		event.metaKey = !!event.metaKey;

		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	props: ( "altKey bubbles cancelable ctrlKey currentTarget detail eventPhase " +
		"metaKey relatedTarget shiftKey target timeStamp view which" ).split( " " ),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split( " " ),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: ( "button buttons clientX clientY fromElement offsetX offsetY " +
			"pageX pageY screenX screenY toElement" ).split( " " ),
		filter: function( event, original ) {
			var body, eventDoc, doc,
				button = original.button,
				fromElement = original.fromElement;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX +
					( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) -
					( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY +
					( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) -
					( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add relatedTarget, if necessary
			if ( !event.relatedTarget && fromElement ) {
				event.relatedTarget = fromElement === event.target ?
					original.toElement :
					fromElement;
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					try {
						this.focus();
						return false;
					} catch ( e ) {

						// Support: IE<9
						// If we error on focus to hidden element (#1486, #12518),
						// let .trigger() run the handlers
					}
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( jQuery.nodeName( this, "input" ) && this.type === "checkbox" && this.click ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	},

	// Piggyback on a donor event to simulate a different one
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true

				// Previously, `originalEvent: {}` was set here, so stopPropagation call
				// would not be triggered on donor event, since in our own
				// jQuery.event.stopPropagation function we had a check for existence of
				// originalEvent.stopPropagation method, so, consequently it would be a noop.
				//
				// Guard for simulated events was moved to jQuery.event.stopPropagation function
				// since `originalEvent` should point to the original event for the
				// constancy with other events and for more focused logic
			}
		);

		jQuery.event.trigger( e, null, elem );

		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {

		// This "if" is needed for plain objects
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle );
		}
	} :
	function( elem, type, handle ) {
		var name = "on" + type;

		if ( elem.detachEvent ) {

			// #8545, #7054, preventing memory leaks for custom events in IE6-8
			// detachEvent needed property on element, by name of that event,
			// to properly expose it to GC
			if ( typeof elem[ name ] === "undefined" ) {
				elem[ name ] = null;
			}

			elem.detachEvent( name, handle );
		}
	};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: IE < 9, Android < 4.0
				src.returnValue === false ?
			returnTrue :
			returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;
		if ( !e ) {
			return;
		}

		// If preventDefault exists, run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// Support: IE
		// Otherwise set the returnValue property of the original event to false
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( !e || this.isSimulated ) {
			return;
		}

		// If stopPropagation exists, run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}

		// Support: IE
		// Set the cancelBubble property of the original event to true
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && e.stopImmediatePropagation ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://code.google.com/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

// IE submit delegation
if ( !support.submit ) {

	jQuery.event.special.submit = {
		setup: function() {

			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Lazy-add a submit handler when a descendant form may potentially be submitted
			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {

				// Node name check avoids a VML-related crash in IE (#9807)
				var elem = e.target,
					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ?

						// Support: IE <=8
						// We use jQuery.prop instead of elem.form
						// to allow fixing the IE8 delegated submit issue (gh-2332)
						// by 3rd party polyfills/workarounds.
						jQuery.prop( elem, "form" ) :
						undefined;

				if ( form && !jQuery._data( form, "submit" ) ) {
					jQuery.event.add( form, "submit._submit", function( event ) {
						event._submitBubble = true;
					} );
					jQuery._data( form, "submit", true );
				}
			} );

			// return undefined since we don't need an event listener
		},

		postDispatch: function( event ) {

			// If form was submitted by the user, bubble the event up the tree
			if ( event._submitBubble ) {
				delete event._submitBubble;
				if ( this.parentNode && !event.isTrigger ) {
					jQuery.event.simulate( "submit", this.parentNode, event );
				}
			}
		},

		teardown: function() {

			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
			jQuery.event.remove( this, "._submit" );
		}
	};
}

// IE change delegation and checkbox/radio fix
if ( !support.change ) {

	jQuery.event.special.change = {

		setup: function() {

			if ( rformElems.test( this.nodeName ) ) {

				// IE doesn't fire change on a check/radio until blur; trigger it on click
				// after a propertychange. Eat the blur-change in special.change.handle.
				// This still fires onchange a second time for check/radio after blur.
				if ( this.type === "checkbox" || this.type === "radio" ) {
					jQuery.event.add( this, "propertychange._change", function( event ) {
						if ( event.originalEvent.propertyName === "checked" ) {
							this._justChanged = true;
						}
					} );
					jQuery.event.add( this, "click._change", function( event ) {
						if ( this._justChanged && !event.isTrigger ) {
							this._justChanged = false;
						}

						// Allow triggered, simulated change events (#11500)
						jQuery.event.simulate( "change", this, event );
					} );
				}
				return false;
			}

			// Delegated event; lazy-add a change handler on descendant inputs
			jQuery.event.add( this, "beforeactivate._change", function( e ) {
				var elem = e.target;

				if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "change" ) ) {
					jQuery.event.add( elem, "change._change", function( event ) {
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
							jQuery.event.simulate( "change", this.parentNode, event );
						}
					} );
					jQuery._data( elem, "change", true );
				}
			} );
		},

		handle: function( event ) {
			var elem = event.target;

			// Swallow native change events from checkbox/radio, we already triggered them above
			if ( this !== elem || event.isSimulated || event.isTrigger ||
				( elem.type !== "radio" && elem.type !== "checkbox" ) ) {

				return event.handleObj.handler.apply( this, arguments );
			}
		},

		teardown: function() {
			jQuery.event.remove( this, "._change" );

			return !rformElems.test( this.nodeName );
		}
	};
}

// Support: Firefox
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome, Safari
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://code.google.com/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = jQuery._data( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				jQuery._data( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = jQuery._data( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					jQuery._removeData( doc, fix );
				} else {
					jQuery._data( doc, fix, attaches );
				}
			}
		};
	} );
}

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	},

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


var rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
	rnoshimcache = new RegExp( "<(?:" + nodeNames + ")[\\s/>]", "i" ),
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,

	// Support: IE 10-11, Edge 10240+
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,
	safeFragment = createSafeFragment( document ),
	fragmentDiv = safeFragment.appendChild( document.createElement( "div" ) );

// Support: IE<8
// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
	return jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

		elem.getElementsByTagName( "tbody" )[ 0 ] ||
			elem.appendChild( elem.ownerDocument.createElement( "tbody" ) ) :
		elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( jQuery.find.attr( elem, "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );
	if ( match ) {
		elem.type = match[ 1 ];
	} else {
		elem.removeAttribute( "type" );
	}
	return elem;
}

function cloneCopyEvent( src, dest ) {
	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var type, i, l,
		oldData = jQuery._data( src ),
		curData = jQuery._data( dest, oldData ),
		events = oldData.events;

	if ( events ) {
		delete curData.handle;
		curData.events = {};

		for ( type in events ) {
			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
				jQuery.event.add( dest, type, events[ type ][ i ] );
			}
		}
	}

	// make the cloned public data object a copy from the original
	if ( curData.data ) {
		curData.data = jQuery.extend( {}, curData.data );
	}
}

function fixCloneNodeIssues( src, dest ) {
	var nodeName, e, data;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	nodeName = dest.nodeName.toLowerCase();

	// IE6-8 copies events bound via attachEvent when using cloneNode.
	if ( !support.noCloneEvent && dest[ jQuery.expando ] ) {
		data = jQuery._data( dest );

		for ( e in data.events ) {
			jQuery.removeEvent( dest, e, data.handle );
		}

		// Event data gets referenced instead of copied if the expando gets copied too
		dest.removeAttribute( jQuery.expando );
	}

	// IE blanks contents when cloning scripts, and tries to evaluate newly-set text
	if ( nodeName === "script" && dest.text !== src.text ) {
		disableScript( dest ).text = src.text;
		restoreScript( dest );

	// IE6-10 improperly clones children of object elements using classid.
	// IE10 throws NoModificationAllowedError if parent is null, #12132.
	} else if ( nodeName === "object" ) {
		if ( dest.parentNode ) {
			dest.outerHTML = src.outerHTML;
		}

		// This path appears unavoidable for IE9. When cloning an object
		// element in IE9, the outerHTML strategy above is not sufficient.
		// If the src has innerHTML and the destination does not,
		// copy the src.innerHTML into the dest.innerHTML. #10324
		if ( support.html5Clone && ( src.innerHTML && !jQuery.trim( dest.innerHTML ) ) ) {
			dest.innerHTML = src.innerHTML;
		}

	} else if ( nodeName === "input" && rcheckableType.test( src.type ) ) {

		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set

		dest.defaultChecked = dest.checked = src.checked;

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.defaultSelected = dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var first, node, hasScripts,
		scripts, doc, fragment,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		isFunction = jQuery.isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( isFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( isFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android<4.1, PhantomJS<2
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!jQuery._data( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							jQuery.globalEval(
								( node.text || node.textContent || node.innerHTML || "" )
									.replace( rcleanScript, "" )
							);
						}
					}
				}
			}

			// Fix #11809: Avoid leaking memory
			fragment = first = null;
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		elems = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = elems[ i ] ) != null; i++ ) {

		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var destElements, node, clone, i, srcElements,
			inPage = jQuery.contains( elem.ownerDocument, elem );

		if ( support.html5Clone || jQuery.isXMLDoc( elem ) ||
			!rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {

			clone = elem.cloneNode( true );

		// IE<=8 does not properly clone detached, unknown element nodes
		} else {
			fragmentDiv.innerHTML = elem.outerHTML;
			fragmentDiv.removeChild( clone = fragmentDiv.firstChild );
		}

		if ( ( !support.noCloneEvent || !support.noCloneChecked ) &&
				( elem.nodeType === 1 || elem.nodeType === 11 ) && !jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			// Fix all IE cloning issues
			for ( i = 0; ( node = srcElements[ i ] ) != null; ++i ) {

				// Ensure that the destination node is not null; Fixes #9587
				if ( destElements[ i ] ) {
					fixCloneNodeIssues( node, destElements[ i ] );
				}
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0; ( node = srcElements[ i ] ) != null; i++ ) {
					cloneCopyEvent( node, destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		destElements = srcElements = node = null;

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems, /* internal */ forceAcceptData ) {
		var elem, type, id, data,
			i = 0,
			internalKey = jQuery.expando,
			cache = jQuery.cache,
			attributes = support.attributes,
			special = jQuery.event.special;

		for ( ; ( elem = elems[ i ] ) != null; i++ ) {
			if ( forceAcceptData || acceptData( elem ) ) {

				id = elem[ internalKey ];
				data = id && cache[ id ];

				if ( data ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Remove cache only if it was not already removed by jQuery.event.remove
					if ( cache[ id ] ) {

						delete cache[ id ];

						// Support: IE<9
						// IE does not allow us to delete expando properties from nodes
						// IE creates expando attributes along with the property
						// IE does not have a removeAttribute function on Document nodes
						if ( !attributes && typeof elem.removeAttribute !== "undefined" ) {
							elem.removeAttribute( internalKey );

						// Webkit & Blink performance suffers when deleting properties
						// from DOM nodes, so set to undefined instead
						// https://code.google.com/p/chromium/issues/detail?id=378607
						} else {
							elem[ internalKey ] = undefined;
						}

						deletedIds.push( id );
					}
				}
			}
		}
	}
} );

jQuery.fn.extend( {

	// Keep domManip exposed until 3.0 (gh-2225)
	domManip: domManip,

	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().append(
					( this[ 0 ] && this[ 0 ].ownerDocument || document ).createTextNode( value )
				);
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {

			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem, false ) );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}

			// If this is a select, ensure that it displays empty (#12336)
			// Support: IE<9
			if ( elem.options && jQuery.nodeName( elem, "select" ) ) {
				elem.options.length = 0;
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined ) {
				return elem.nodeType === 1 ?
					elem.innerHTML.replace( rinlinejQuery, "" ) :
					undefined;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				( support.htmlSerialize || !rnoshimcache.test( value )  ) &&
				( support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {

						// Remove element nodes and prevent memory leaks
						elem = this[ i ] || {};
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			i = 0,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );


var iframe,
	elemdisplay = {

		// Support: Firefox
		// We have to pre-define these values for FF (#10227)
		HTML: "block",
		BODY: "block"
	};

/**
 * Retrieve the actual display of a element
 * @param {String} name nodeName of the element
 * @param {Object} doc Document object
 */

// Called only from within defaultDisplay
function actualDisplay( name, doc ) {
	var elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

		display = jQuery.css( elem[ 0 ], "display" );

	// We don't have any data stored on the element,
	// so use "detach" method as fast way to get rid of the element
	elem.detach();

	return display;
}

/**
 * Try to determine the default display value of an element
 * @param {String} nodeName
 */
function defaultDisplay( nodeName ) {
	var doc = document,
		display = elemdisplay[ nodeName ];

	if ( !display ) {
		display = actualDisplay( nodeName, doc );

		// If the simple way fails, read from inside an iframe
		if ( display === "none" || !display ) {

			// Use the already-created iframe if possible
			iframe = ( iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" ) )
				.appendTo( doc.documentElement );

			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
			doc = ( iframe[ 0 ].contentWindow || iframe[ 0 ].contentDocument ).document;

			// Support: IE
			doc.write();
			doc.close();

			display = actualDisplay( nodeName, doc );
			iframe.detach();
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return display;
}
var rmargin = ( /^margin/ );

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var documentElement = document.documentElement;



( function() {
	var pixelPositionVal, pixelMarginRightVal, boxSizingReliableVal,
		reliableHiddenOffsetsVal, reliableMarginRightVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	div.style.cssText = "float:left;opacity:.5";

	// Support: IE<9
	// Make sure that element opacity exists (as opposed to filter)
	support.opacity = div.style.opacity === "0.5";

	// Verify style float existence
	// (IE uses styleFloat instead of cssFloat)
	support.cssFloat = !!div.style.cssFloat;

	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	container = document.createElement( "div" );
	container.style.cssText = "border:0;width:8px;height:0;top:0;left:-9999px;" +
		"padding:0;margin-top:1px;position:absolute";
	div.innerHTML = "";
	container.appendChild( div );

	// Support: Firefox<29, Android 2.3
	// Vendor-prefix box-sizing
	support.boxSizing = div.style.boxSizing === "" || div.style.MozBoxSizing === "" ||
		div.style.WebkitBoxSizing === "";

	jQuery.extend( support, {
		reliableHiddenOffsets: function() {
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return reliableHiddenOffsetsVal;
		},

		boxSizingReliable: function() {

			// We're checking for pixelPositionVal here instead of boxSizingReliableVal
			// since that compresses better and they're computed together anyway.
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return boxSizingReliableVal;
		},

		pixelMarginRight: function() {

			// Support: Android 4.0-4.3
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return pixelMarginRightVal;
		},

		pixelPosition: function() {
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return pixelPositionVal;
		},

		reliableMarginRight: function() {

			// Support: Android 2.3
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return reliableMarginRightVal;
		},

		reliableMarginLeft: function() {

			// Support: IE <=8 only, Android 4.0 - 4.3 only, Firefox <=3 - 37
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return reliableMarginLeftVal;
		}
	} );

	function computeStyleTests() {
		var contents, divStyle,
			documentElement = document.documentElement;

		// Setup
		documentElement.appendChild( container );

		div.style.cssText =

			// Support: Android 2.3
			// Vendor-prefix box-sizing
			"-webkit-box-sizing:border-box;box-sizing:border-box;" +
			"position:relative;display:block;" +
			"margin:auto;border:1px;padding:1px;" +
			"top:1%;width:50%";

		// Support: IE<9
		// Assume reasonable values in the absence of getComputedStyle
		pixelPositionVal = boxSizingReliableVal = reliableMarginLeftVal = false;
		pixelMarginRightVal = reliableMarginRightVal = true;

		// Check for getComputedStyle so that this code is not run in IE<9.
		if ( window.getComputedStyle ) {
			divStyle = window.getComputedStyle( div );
			pixelPositionVal = ( divStyle || {} ).top !== "1%";
			reliableMarginLeftVal = ( divStyle || {} ).marginLeft === "2px";
			boxSizingReliableVal = ( divStyle || { width: "4px" } ).width === "4px";

			// Support: Android 4.0 - 4.3 only
			// Some styles come back with percentage values, even though they shouldn't
			div.style.marginRight = "50%";
			pixelMarginRightVal = ( divStyle || { marginRight: "4px" } ).marginRight === "4px";

			// Support: Android 2.3 only
			// Div with explicit width and no margin-right incorrectly
			// gets computed margin-right based on width of container (#3333)
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			contents = div.appendChild( document.createElement( "div" ) );

			// Reset CSS: box-sizing; display; margin; border; padding
			contents.style.cssText = div.style.cssText =

				// Support: Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
				"box-sizing:content-box;display:block;margin:0;border:0;padding:0";
			contents.style.marginRight = contents.style.width = "0";
			div.style.width = "1px";

			reliableMarginRightVal =
				!parseFloat( ( window.getComputedStyle( contents ) || {} ).marginRight );

			div.removeChild( contents );
		}

		// Support: IE6-8
		// First check that getClientRects works as expected
		// Check if table cells still have offsetWidth/Height when they are set
		// to display:none and there are still other visible table cells in a
		// table row; if so, offsetWidth/Height are not reliable for use when
		// determining if an element has been hidden directly using
		// display:none (it is still safe to use offsets if a parent element is
		// hidden; don safety goggles and see bug #4512 for more information).
		div.style.display = "none";
		reliableHiddenOffsetsVal = div.getClientRects().length === 0;
		if ( reliableHiddenOffsetsVal ) {
			div.style.display = "";
			div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
			div.childNodes[ 0 ].style.borderCollapse = "separate";
			contents = div.getElementsByTagName( "td" );
			contents[ 0 ].style.cssText = "margin:0;border:0;padding:0;display:none";
			reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
			if ( reliableHiddenOffsetsVal ) {
				contents[ 0 ].style.display = "";
				contents[ 1 ].style.display = "none";
				reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
			}
		}

		// Teardown
		documentElement.removeChild( container );
	}

} )();


var getStyles, curCSS,
	rposition = /^(top|right|bottom|left)$/;

if ( window.getComputedStyle ) {
	getStyles = function( elem ) {

		// Support: IE<=11+, Firefox<=30+ (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

	curCSS = function( elem, name, computed ) {
		var width, minWidth, maxWidth, ret,
			style = elem.style;

		computed = computed || getStyles( elem );

		// getPropertyValue is only needed for .css('filter') in IE9, see #12537
		ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;

		// Support: Opera 12.1x only
		// Fall back to style even without computed
		// computed is undefined for elems on document fragments
		if ( ( ret === "" || ret === undefined ) && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		if ( computed ) {

			// A tribute to the "awesome hack by Dean Edwards"
			// Chrome < 17 and Safari 5.0 uses "computed value"
			// instead of "used value" for margin-right
			// Safari 5.1.7 (at least) returns percentage for a larger set of values,
			// but width seems to be reliably pixels
			// this is against the CSSOM draft spec:
			// http://dev.w3.org/csswg/cssom/#resolved-values
			if ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {

				// Remember the original values
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				// Put in the new values to get a computed value out
				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				// Revert the changed values
				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		// Support: IE
		// IE returns zIndex value as an integer.
		return ret === undefined ?
			ret :
			ret + "";
	};
} else if ( documentElement.currentStyle ) {
	getStyles = function( elem ) {
		return elem.currentStyle;
	};

	curCSS = function( elem, name, computed ) {
		var left, rs, rsLeft, ret,
			style = elem.style;

		computed = computed || getStyles( elem );
		ret = computed ? computed[ name ] : undefined;

		// Avoid setting ret to empty string here
		// so we don't default to auto
		if ( ret == null && style && style[ name ] ) {
			ret = style[ name ];
		}

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		// but not position css attributes, as those are
		// proportional to the parent element instead
		// and we can't measure the parent instead because it
		// might trigger a "stacking dolls" problem
		if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {

			// Remember the original values
			left = style.left;
			rs = elem.runtimeStyle;
			rsLeft = rs && rs.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				rs.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : ret;
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				rs.left = rsLeft;
			}
		}

		// Support: IE
		// IE returns zIndex value as an integer.
		return ret === undefined ?
			ret :
			ret + "" || "auto";
	};
}




function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

		ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity\s*=\s*([^)]*)/i,

	// swappable if display is none or starts with table except
	// "table", "table-cell", or "table-caption"
	// see here for display values:
	// https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;


// return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// check for vendor prefixed names
	var capName = name.charAt( 0 ).toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

function showHide( elements, show ) {
	var display, elem, hidden,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		values[ index ] = jQuery._data( elem, "olddisplay" );
		display = elem.style.display;
		if ( show ) {

			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] =
					jQuery._data( elem, "olddisplay", defaultDisplay( elem.nodeName ) );
			}
		} else {
			hidden = isHidden( elem );

			if ( display && display !== "none" || !hidden ) {
				jQuery._data(
					elem,
					"olddisplay",
					hidden ? display : jQuery.css( elem, "display" )
				);
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?

		// If we already have the right measurement, avoid augmentation
		4 :

		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {

		// both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {

			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// at this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {

			// at this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// at this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var valueIsBorderBox = true,
		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		styles = getStyles( elem ),
		isBorderBox = support.boxSizing &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {

		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test( val ) ) {
			return val;
		}

		// we need the check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox &&
			( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {

		// normalize float css property
		"float": support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set. See: #7116
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,
			// but it would mean to define eight
			// (for every problematic property) identical functions
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				// Support: IE
				// Swallow errors from 'invalid' CSS values (#5509)
				try {
					style[ name ] = value;
				} catch ( e ) {}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var num, val, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] ||
			( jQuery.cssProps[ origName ] = vendorPropName( origName ) || origName );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		//convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Return, converting to number if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}
		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// certain elements can have dimension info if we invisibly show them
				// however, it must have a current display style that would benefit from this
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&
					elem.offsetWidth === 0 ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, name, extra );
						} ) :
						getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var styles = extra && getStyles( elem );
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					support.boxSizing &&
						jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				) : 0
			);
		}
	};
} );

if ( !support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {

			// IE uses filters for opacity
			return ropacity.test( ( computed && elem.currentStyle ?
				elem.currentStyle.filter :
				elem.style.filter ) || "" ) ?
					( 0.01 * parseFloat( RegExp.$1 ) ) + "" :
					computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle,
				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// if setting opacity to 1, and no other filters exist -
			// attempt to remove filter attribute #6652
			// if value === "", then remove inline opacity #12685
			if ( ( value >= 1 || value === "" ) &&
					jQuery.trim( filter.replace( ralpha, "" ) ) === "" &&
					style.removeAttribute ) {

				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
				// if "filter:" is present at all, clearType is disabled, we want to avoid this
				// style.removeAttribute is IE Only, but so apparently is this code path...
				style.removeAttribute( "filter" );

				// if there is no filter style applied in a css rule
				// or unset inline opacity, we are done
				if ( value === "" || currentStyle && !currentStyle.filter ) {
					return;
				}
			}

			// otherwise, set new filter values
			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
	function( elem, computed ) {
		if ( computed ) {
			return swap( elem, { "display": "inline-block" },
				curCSS, [ elem, "marginRight" ] );
		}
	}
);

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return (
				parseFloat( curCSS( elem, "marginLeft" ) ) ||

				// Support: IE<=11+
				// Running getBoundingClientRect on a disconnected node in IE throws an error
				// Support: IE8 only
				// getClientRects() errors on disconnected elems
				( jQuery.contains( elem.ownerDocument, elem ) ?
					elem.getBoundingClientRect().left -
						swap( elem, { marginLeft: 0 }, function() {
							return elem.getBoundingClientRect().left;
						} ) :
					0
				)
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails
			// so, simple values such as "10px" are parsed to Float.
			// complex values such as "rotate(1rad)" are returned as is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// use step hook for back compat - use cssHook if its there - use .style if its
			// available and use plain properties where available
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9
// Panic based approach to setting things on disconnected nodes

Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back Compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		attrs = { height: type },
		i = 0;

	// if we include width, step value is 1 to do all cssExpand values,
	// if we don't include width, step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// we're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	/* jshint validthis: true */
	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHidden( elem ),
		dataShow = jQuery._data( elem, "fxshow" );

	// handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// doing this makes sure that the complete handler will be called
			// before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {

		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE does not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		display = jQuery.css( elem, "display" );

		// Test default display if display is currently "none"
		checkDisplay = display === "none" ?
			jQuery._data( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

		if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {

			// inline-level elements accept inline-block;
			// block-level elements need to be inline with layout
			if ( !support.inlineBlockNeedsLayout || defaultDisplay( elem.nodeName ) === "inline" ) {
				style.display = "inline-block";
			} else {
				style.zoom = 1;
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		if ( !support.shrinkWrapBlocks() ) {
			anim.always( function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			} );
		}
	}

	// show/hide pass
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// If there is dataShow left over from a stopped hide or show
				// and we are going to proceed with show, we should pretend to be hidden
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

		// Any non-fx value stops us from restoring the original display value
		} else {
			display = undefined;
		}
	}

	if ( !jQuery.isEmptyObject( orig ) ) {
		if ( dataShow ) {
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}
		} else {
			dataShow = jQuery._data( elem, "fxshow", {} );
		}

		// store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done( function() {
				jQuery( elem ).hide();
			} );
		}
		anim.done( function() {
			var prop;
			jQuery._removeData( elem, "fxshow" );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		} );
		for ( prop in orig ) {
			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}

	// If this is a noop like .hide().hide(), restore an overwritten display value
	} else if ( ( display === "none" ? defaultDisplay( elem.nodeName ) : display ) === "inline" ) {
		style.display = display;
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// not quite $.extend, this wont overwrite keys already present.
			// also - reusing 'index' from above because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// if we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// resolve when we played the last frame
				// otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( jQuery.isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					jQuery.proxy( result.stop, result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnotwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ?
			jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || jQuery._data( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = jQuery._data( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = jQuery._data( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// enable finishing flag on private data
			data.finish = true;

			// empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		timers = jQuery.timers,
		i = 0;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;

jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = window.setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	window.clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// http://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var a,
		input = document.createElement( "input" ),
		div = document.createElement( "div" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	// Setup
	div = document.createElement( "div" );
	div.setAttribute( "className", "t" );
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
	a = div.getElementsByTagName( "a" )[ 0 ];

	// Support: Windows Web Apps (WWA)
	// `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "checkbox" );
	div.appendChild( input );

	a = div.getElementsByTagName( "a" )[ 0 ];

	// First batch of tests.
	a.style.cssText = "top:1px";

	// Test setAttribute on camelCase class.
	// If it works, we need attrFixes when doing get/setAttribute (ie6/7)
	support.getSetAttribute = div.className !== "t";

	// Get the style information from getAttribute
	// (IE uses .cssText instead)
	support.style = /top/.test( a.getAttribute( "style" ) );

	// Make sure that URLs aren't manipulated
	// (IE normalizes it by default)
	support.hrefNormalized = a.getAttribute( "href" ) === "/a";

	// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)
	support.checkOn = !!input.value;

	// Make sure that a selected-by-default option has a working selected property.
	// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
	support.optSelected = opt.selected;

	// Tests for enctype support on a form (#6743)
	support.enctype = !!document.createElement( "form" ).enctype;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Support: IE8 only
	// Check if we can trust getAttribute("value")
	input = document.createElement( "input" );
	input.setAttribute( "value", "" );
	support.input = input.getAttribute( "value" ) === "";

	// Check if an input maintains its value after becoming a radio
	input.value = "t";
	input.setAttribute( "type", "radio" );
	support.radioValue = input.value === "t";
} )();


var rreturn = /\r/g,
	rspaces = /[\x20\t\r\n\f]+/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if (
					hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?

					// handle most common string cases
					ret.replace( rreturn, "" ) :

					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {
				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE10-11+
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					jQuery.trim( jQuery.text( elem ) ).replace( rspaces, " " );
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// oldIE doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							( support.optDisabled ?
								!option.disabled :
								option.getAttribute( "disabled" ) === null ) &&
							( !option.parentNode.disabled ||
								!jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					if ( jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1 ) {

						// Support: IE6
						// When new option element is added to select box we need to
						// force reflow of newly added node in order to workaround delay
						// of initialization properties
						try {
							option.selected = optionSet = true;

						} catch ( _ ) {

							// Will be executed only in IE6
							option.scrollHeight;
						}

					} else {
						option.selected = false;
					}
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}

				return options;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




var nodeHook, boolHook,
	attrHandle = jQuery.expr.attrHandle,
	ruseDefault = /^(?:checked|selected)$/i,
	getSetAttribute = support.getSetAttribute,
	getSetInput = support.input;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					jQuery.nodeName( elem, "input" ) ) {

					// Setting the type on a radio button after the value resets the value in IE8-9
					// Reset value to default in case type is set after value during creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name, propName,
			i = 0,
			attrNames = value && value.match( rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				propName = jQuery.propFix[ name ] || name;

				// Boolean attributes get special treatment (#10870)
				if ( jQuery.expr.match.bool.test( name ) ) {

					// Set corresponding property to false
					if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
						elem[ propName ] = false;

					// Support: IE<9
					// Also clear defaultChecked/defaultSelected (if appropriate)
					} else {
						elem[ jQuery.camelCase( "default-" + name ) ] =
							elem[ propName ] = false;
					}

				// See #9699 for explanation of this approach (setting first, then removal)
				} else {
					jQuery.attr( elem, name, "" );
				}

				elem.removeAttribute( getSetAttribute ? name : propName );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {

			// IE<8 needs the *property* name
			elem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );

		} else {

			// Support: IE<9
			// Use defaultChecked and defaultSelected for oldIE
			elem[ jQuery.camelCase( "default-" + name ) ] = elem[ name ] = true;
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
		attrHandle[ name ] = function( elem, name, isXML ) {
			var ret, handle;
			if ( !isXML ) {

				// Avoid an infinite loop by temporarily removing this function from the getter
				handle = attrHandle[ name ];
				attrHandle[ name ] = ret;
				ret = getter( elem, name, isXML ) != null ?
					name.toLowerCase() :
					null;
				attrHandle[ name ] = handle;
			}
			return ret;
		};
	} else {
		attrHandle[ name ] = function( elem, name, isXML ) {
			if ( !isXML ) {
				return elem[ jQuery.camelCase( "default-" + name ) ] ?
					name.toLowerCase() :
					null;
			}
		};
	}
} );

// fix oldIE attroperties
if ( !getSetInput || !getSetAttribute ) {
	jQuery.attrHooks.value = {
		set: function( elem, value, name ) {
			if ( jQuery.nodeName( elem, "input" ) ) {

				// Does not return so that setAttribute is also used
				elem.defaultValue = value;
			} else {

				// Use nodeHook if defined (#1954); otherwise setAttribute is fine
				return nodeHook && nodeHook.set( elem, value, name );
			}
		}
	};
}

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

	// Use this for any attribute in IE6/7
	// This fixes almost every IE6/7 issue
	nodeHook = {
		set: function( elem, value, name ) {

			// Set the existing or create a new attribute node
			var ret = elem.getAttributeNode( name );
			if ( !ret ) {
				elem.setAttributeNode(
					( ret = elem.ownerDocument.createAttribute( name ) )
				);
			}

			ret.value = value += "";

			// Break association with cloned elements by also using setAttribute (#9646)
			if ( name === "value" || value === elem.getAttribute( name ) ) {
				return value;
			}
		}
	};

	// Some attributes are constructed with empty-string values when not defined
	attrHandle.id = attrHandle.name = attrHandle.coords =
		function( elem, name, isXML ) {
			var ret;
			if ( !isXML ) {
				return ( ret = elem.getAttributeNode( name ) ) && ret.value !== "" ?
					ret.value :
					null;
			}
		};

	// Fixing value retrieval on a button requires this module
	jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret = elem.getAttributeNode( name );
			if ( ret && ret.specified ) {
				return ret.value;
			}
		},
		set: nodeHook.set
	};

	// Set contenteditable to false on removals(#10429)
	// Setting to empty string throws an error as an invalid value
	jQuery.attrHooks.contenteditable = {
		set: function( elem, value, name ) {
			nodeHook.set( elem, value === "" ? false : value, name );
		}
	};

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each( [ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		};
	} );
}

if ( !support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {

			// Return undefined in the case of empty string
			// Note: IE uppercases css property names, but if we were to .toLowerCase()
			// .cssText, that would destroy case sensitivity in URL's, like in "background"
			return elem.style.cssText || undefined;
		},
		set: function( elem, value ) {
			return ( elem.style.cssText = value + "" );
		}
	};
}




var rfocusable = /^(?:input|select|textarea|button|object)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each( function() {

			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch ( e ) {}
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				return tabindex ?
					parseInt( tabindex, 10 ) :
					rfocusable.test( elem.nodeName ) ||
						rclickable.test( elem.nodeName ) && elem.href ?
							0 :
							-1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Some attributes require a special call on IE
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !support.hrefNormalized ) {

	// href/src property should get the full normalized URL (#10299/#12915)
	jQuery.each( [ "href", "src" ], function( i, name ) {
		jQuery.propHooks[ name ] = {
			get: function( elem ) {
				return elem.getAttribute( name, 4 );
			}
		};
	} );
}

// Support: Safari, IE9+
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
			return null;
		},
		set: function( elem ) {
			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );

// IE6/7 call enctype encoding
if ( !support.enctype ) {
	jQuery.propFix.enctype = "encoding";
}




var rclass = /[\t\r\n\f]/g;

function getClass( elem ) {
	return jQuery.attr( elem, "class" ) || "";
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnotwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 &&
					( " " + curValue + " " ).replace( rclass, " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( curValue !== finalValue ) {
						jQuery.attr( elem, "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		if ( typeof value === "string" && value ) {
			classes = value.match( rnotwhite ) || [];

			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 &&
					( " " + curValue + " " ).replace( rclass, " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( curValue !== finalValue ) {
						jQuery.attr( elem, "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( type === "string" ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = value.match( rnotwhite ) || [];

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// store className if set
					jQuery._data( this, "__className__", className );
				}

				// If the element has a class name or if we're passed "false",
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				jQuery.attr( this, "class",
					className || value === false ?
					"" :
					jQuery._data( this, "__className__" ) || ""
				);
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + getClass( elem ) + " " ).replace( rclass, " " )
					.indexOf( className ) > -1
			) {
				return true;
			}
		}

		return false;
	}
} );




// Return jQuery for attributes-only inclusion


jQuery.each( ( "blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );


var location = window.location;

var nonce = jQuery.now();

var rquery = ( /\?/ );



var rvalidtokens = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;

jQuery.parseJSON = function( data ) {

	// Attempt to parse using the native JSON parser first
	if ( window.JSON && window.JSON.parse ) {

		// Support: Android 2.3
		// Workaround failure to string-cast null input
		return window.JSON.parse( data + "" );
	}

	var requireNonComma,
		depth = null,
		str = jQuery.trim( data + "" );

	// Guard against invalid (and possibly dangerous) input by ensuring that nothing remains
	// after removing valid tokens
	return str && !jQuery.trim( str.replace( rvalidtokens, function( token, comma, open, close ) {

		// Force termination if we see a misplaced comma
		if ( requireNonComma && comma ) {
			depth = 0;
		}

		// Perform no more replacements after returning to outermost depth
		if ( depth === 0 ) {
			return token;
		}

		// Commas must not follow "[", "{", or ","
		requireNonComma = open || comma;

		// Determine new depth
		// array/object open ("[" or "{"): depth += true - false (increment)
		// array/object close ("]" or "}"): depth += false - true (decrement)
		// other cases ("," or primitive): depth += true - true (numeric cast)
		depth += !close - !open;

		// Remove this token
		return "";
	} ) ) ?
		( Function( "return " + str ) )() :
		jQuery.error( "Invalid JSON: " + data );
};


// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, tmp;
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	try {
		if ( window.DOMParser ) { // Standard
			tmp = new window.DOMParser();
			xml = tmp.parseFromString( data, "text/xml" );
		} else { // IE
			xml = new window.ActiveXObject( "Microsoft.XMLDOM" );
			xml.async = "false";
			xml.loadXML( data );
		}
	} catch ( e ) {
		xml = undefined;
	}
	if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,

	// IE leaves an \r character at EOL
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Document location
	ajaxLocation = location.href,

	// Segment location into parts
	ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType.charAt( 0 ) === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var deep, key,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {
	var firstDataType, ct, finalDataType, type,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s[ "throws" ] ) { // jscs:ignore requireDotNotation
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: ajaxLocation,
		type: "GET",
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var

			// Cross-domain detection vars
			parts,

			// Loop variable
			i,

			// URL without anti-cache param
			cacheURL,

			// Response headers as string
			responseHeadersString,

			// timeout handle
			timeoutTimer,

			// To know if global events are to be dispatched
			fireGlobals,

			transport,

			// Response headers
			responseHeaders,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// The jqXHR state
			state = 0,

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					var lname = name.toLowerCase();
					if ( !state ) {
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( state < 2 ) {
							for ( code in map ) {

								// Lazy-add the new callback in a way that preserves old ones
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						} else {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR ).complete = completeDeferred.add;
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || ajaxLocation ) + "" )
			.replace( rhash, "" )
			.replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		cacheURL = s.url;

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in url if needed
			if ( s.cache === false ) {
				s.url = rts.test( cacheURL ) ?

					// If there is already a '_' parameter, set its value
					cacheURL.replace( rts, "$1_=" + nonce++ ) :

					// Otherwise add one to the end
					cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
			}
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( state === 2 ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );

				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapAll( html.call( this, i ) );
			} );
		}

		if ( this[ 0 ] ) {

			// The elements to wrap the target around
			var wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function() {
		return this.parent().each( function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		} ).end();
	}
} );


function getDisplay( elem ) {
	return elem.style && elem.style.display || jQuery.css( elem, "display" );
}

function filterHidden( elem ) {

	// Disconnected elements are considered hidden
	if ( !jQuery.contains( elem.ownerDocument || document, elem ) ) {
		return true;
	}
	while ( elem && elem.nodeType === 1 ) {
		if ( getDisplay( elem ) === "none" || elem.type === "hidden" ) {
			return true;
		}
		elem = elem.parentNode;
	}
	return false;
}

jQuery.expr.filters.hidden = function( elem ) {

	// Support: Opera <= 12.12
	// Opera reports offsetWidths and offsetHeights less than zero on some elements
	return support.reliableHiddenOffsets() ?
		( elem.offsetWidth <= 0 && elem.offsetHeight <= 0 &&
			!elem.getClientRects().length ) :
			filterHidden( elem );
};

jQuery.expr.filters.visible = function( elem ) {
	return !jQuery.expr.filters.hidden( elem );
};




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {

			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is(":disabled") so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ) {
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					} ) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject !== undefined ?

	// Support: IE6-IE8
	function() {

		// XHR cannot access local files, always use ActiveX for that case
		if ( this.isLocal ) {
			return createActiveXHR();
		}

		// Support: IE 9-11
		// IE seems to error on cross-domain PATCH requests when ActiveX XHR
		// is used. In IE 9+ always use the native XHR.
		// Note: this condition won't catch Edge as it doesn't define
		// document.documentMode but it also doesn't support ActiveX so it won't
		// reach this code.
		if ( document.documentMode > 8 ) {
			return createStandardXHR();
		}

		// Support: IE<9
		// oldIE XHR does not support non-RFC2616 methods (#13240)
		// See http://msdn.microsoft.com/en-us/library/ie/ms536648(v=vs.85).aspx
		// and http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9
		// Although this check for six methods instead of eight
		// since IE also does not support "trace" and "connect"
		return /^(get|post|head|put|delete|options)$/i.test( this.type ) &&
			createStandardXHR() || createActiveXHR();
	} :

	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

var xhrId = 0,
	xhrCallbacks = {},
	xhrSupported = jQuery.ajaxSettings.xhr();

// Support: IE<10
// Open requests must be manually aborted on unload (#5280)
// See https://support.microsoft.com/kb/2856746 for more info
if ( window.attachEvent ) {
	window.attachEvent( "onunload", function() {
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]( undefined, true );
		}
	} );
}

// Determine support properties
support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
xhrSupported = support.ajax = !!xhrSupported;

// Create transport if the browser can provide an xhr
if ( xhrSupported ) {

	jQuery.ajaxTransport( function( options ) {

		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !options.crossDomain || support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {
					var i,
						xhr = options.xhr(),
						id = ++xhrId;

					// Open the socket
					xhr.open(
						options.type,
						options.url,
						options.async,
						options.username,
						options.password
					);

					// Apply custom fields if provided
					if ( options.xhrFields ) {
						for ( i in options.xhrFields ) {
							xhr[ i ] = options.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( options.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( options.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
						headers[ "X-Requested-With" ] = "XMLHttpRequest";
					}

					// Set headers
					for ( i in headers ) {

						// Support: IE<9
						// IE's ActiveXObject throws a 'Type Mismatch' exception when setting
						// request header to a null-value.
						//
						// To keep consistent with other XHR implementations, cast the value
						// to string and ignore `undefined`.
						if ( headers[ i ] !== undefined ) {
							xhr.setRequestHeader( i, headers[ i ] + "" );
						}
					}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( options.hasContent && options.data ) || null );

					// Listener
					callback = function( _, isAbort ) {
						var status, statusText, responses;

						// Was never called and is aborted or complete
						if ( callback && ( isAbort || xhr.readyState === 4 ) ) {

							// Clean up
							delete xhrCallbacks[ id ];
							callback = undefined;
							xhr.onreadystatechange = jQuery.noop;

							// Abort manually if needed
							if ( isAbort ) {
								if ( xhr.readyState !== 4 ) {
									xhr.abort();
								}
							} else {
								responses = {};
								status = xhr.status;

								// Support: IE<10
								// Accessing binary-data responseText throws an exception
								// (#11426)
								if ( typeof xhr.responseText === "string" ) {
									responses.text = xhr.responseText;
								}

								// Firefox throws an exception when accessing
								// statusText for faulty cross-domain requests
								try {
									statusText = xhr.statusText;
								} catch ( e ) {

									// We normalize with Webkit giving an empty statusText
									statusText = "";
								}

								// Filter status for non standard behaviors

								// If the request is local and we have data: assume a success
								// (success with no data won't get notified, that's the best we
								// can do given current implementations)
								if ( !status && options.isLocal && !options.crossDomain ) {
									status = responses.text ? 200 : 404;

								// IE - #1450: sometimes returns 1223 when it should be 204
								} else if ( status === 1223 ) {
									status = 204;
								}
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, xhr.getAllResponseHeaders() );
						}
					};

					// Do send the request
					// `xhr.send` may raise an exception, but it will be
					// handled in jQuery.ajax (so no try/catch here)
					if ( !options.async ) {

						// If we're in sync mode we fire the callback
						callback();
					} else if ( xhr.readyState === 4 ) {

						// (IE6 & IE7) if it's in cache and has been
						// retrieved directly we need to fire the callback
						window.setTimeout( callback );
					} else {

						// Register the callback, but delay it in case `xhr.send` throws
						// Add to the list of active xhr callbacks
						xhr.onreadystatechange = xhrCallbacks[ id ] = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback( undefined, true );
					}
				}
			};
		}
	} );
}

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject( "Microsoft.XMLHTTP" );
	} catch ( e ) {}
}




// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || jQuery( "head" )[ 0 ] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement( "script" );

				script.async = true;

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( script.parentNode ) {
							script.parentNode.removeChild( script );
						}

						// Dereference the script
						script = null;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};

				// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending
				// Use native DOM manipulation to avoid our domManip AJAX trickery
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( undefined, true );
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// data: string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}
	context = context || document;

	var parsed = rsingleTag.exec( data ),
		scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


// Keep a copy of the old load method
var _load = jQuery.fn.load;

/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = jQuery.trim( url.slice( off, url.length ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.filters.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};





/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			jQuery.inArray( "auto", [ curCSSTop, curCSSLeft ] ) > -1;

		// need to be able to calculate position if either top or left
		// is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {
	offset: function( options ) {
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var docElem, win,
			box = { top: 0, left: 0 },
			elem = this[ 0 ],
			doc = elem && elem.ownerDocument;

		if ( !doc ) {
			return;
		}

		docElem = doc.documentElement;

		// Make sure it's not a disconnected DOM node
		if ( !jQuery.contains( docElem, elem ) ) {
			return box;
		}

		// If we don't have gBCR, just use 0,0 rather than error
		// BlackBerry 5, iOS 3 (original iPhone)
		if ( typeof elem.getBoundingClientRect !== "undefined" ) {
			box = elem.getBoundingClientRect();
		}
		win = getWindow( doc );
		return {
			top: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),
			left: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )
		};
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			parentOffset = { top: 0, left: 0 },
			elem = this[ 0 ];

		// Fixed elements are offset from window (parentOffset = {top:0, left: 0},
		// because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// we assume that getBoundingClientRect is available when computed position is fixed
			offset = elem.getBoundingClientRect();
		} else {

			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset.top  += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
		}

		// Subtract parent offsets and element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		return {
			top:  offset.top  - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = /Y/.test( prop );

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? ( prop in win ) ? win[ prop ] :
					win.document.documentElement[ method ] :
					elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : jQuery( win ).scrollLeft(),
					top ? val : jQuery( win ).scrollTop()
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
} );

// Support: Safari<7-8+, Chrome<37-44+
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// getComputedStyle returns percent when specified for top/left/bottom/right
// rather than make the css module depend on the offset module, we just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// if curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
	function( defaultExtra, funcName ) {

		// margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {

					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					// unfortunately, this causes bug #3838 in IE6/8 only,
					// but there is currently no good, small way to fix it.
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	} );
} );


jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

// The number of elements contained in the matched element set
jQuery.fn.size = function() {
	return this.length;
};

jQuery.fn.andSelf = jQuery.fn.addBack;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}



var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in
// AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}

return jQuery;
}));
/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.14.5
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.Popper = factory());
}(this, (function () { 'use strict';

var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';

var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
var timeoutDuration = 0;
for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
    timeoutDuration = 1;
    break;
  }
}

function microtaskDebounce(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }
    called = true;
    window.Promise.resolve().then(function () {
      called = false;
      fn();
    });
  };
}

function taskDebounce(fn) {
  var scheduled = false;
  return function () {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function () {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}

var supportsMicroTasks = isBrowser && window.Promise;

/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/
var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */
function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}

/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */
function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  }
  // NOTE: 1 DOM access here
  var window = element.ownerDocument.defaultView;
  var css = window.getComputedStyle(element, null);
  return property ? css[property] : css;
}

/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */
function getParentNode(element) {
  if (element.nodeName === 'HTML') {
    return element;
  }
  return element.parentNode || element.host;
}

/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */
function getScrollParent(element) {
  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
  if (!element) {
    return document.body;
  }

  switch (element.nodeName) {
    case 'HTML':
    case 'BODY':
      return element.ownerDocument.body;
    case '#document':
      return element.body;
  }

  // Firefox want us to check `-x` and `-y` variations as well

  var _getStyleComputedProp = getStyleComputedProperty(element),
      overflow = _getStyleComputedProp.overflow,
      overflowX = _getStyleComputedProp.overflowX,
      overflowY = _getStyleComputedProp.overflowY;

  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }

  return getScrollParent(getParentNode(element));
}

var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);

/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */
function isIE(version) {
  if (version === 11) {
    return isIE11;
  }
  if (version === 10) {
    return isIE10;
  }
  return isIE11 || isIE10;
}

/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */
function getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }

  var noOffsetParent = isIE(10) ? document.body : null;

  // NOTE: 1 DOM access here
  var offsetParent = element.offsetParent || null;
  // Skip hidden elements which don't have an offsetParent
  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }

  var nodeName = offsetParent && offsetParent.nodeName;

  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  }

  // .offsetParent will return the closest TH, TD or TABLE in case
  // no offsetParent is present, I hate this job...
  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return getOffsetParent(offsetParent);
  }

  return offsetParent;
}

function isOffsetContainer(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY') {
    return false;
  }
  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}

/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */
function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }

  return node;
}

/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */
function findCommonOffsetParent(element1, element2) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  }

  // Here we make sure to give as "start" the element that comes first in the DOM
  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1;

  // Get common ancestor container
  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer;

  // Both nodes are inside #document

  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }

    return getOffsetParent(commonAncestorContainer);
  }

  // one of the nodes is inside shadowDOM, find which one
  var element1root = getRoot(element1);
  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}

/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */
function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }

  return element[upperSide];
}

/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */
function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var scrollTop = getScroll(element, 'top');
  var scrollLeft = getScroll(element, 'left');
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}

/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */

function getBordersSize(styles, axis) {
  var sideA = axis === 'x' ? 'Left' : 'Top';
  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

  return parseFloat(styles['border' + sideA + 'Width'], 10) + parseFloat(styles['border' + sideB + 'Width'], 10);
}

function getSize(axis, body, html, computedStyle) {
  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
}

function getWindowSizes(document) {
  var body = document.body;
  var html = document.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);

  return {
    height: getSize('Height', body, html, computedStyle),
    width: getSize('Width', body, html, computedStyle)
  };
}

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();





var defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */
function getClientRect(offsets) {
  return _extends({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}

/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */
function getBoundingClientRect(element) {
  var rect = {};

  // IE10 10 FIX: Please, don't ask, the element isn't
  // considered in DOM in some circumstances...
  // This isn't reproducible in IE10 compatibility mode of IE11
  try {
    if (isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, 'top');
      var scrollLeft = getScroll(element, 'left');
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e) {}

  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  };

  // subtract scrollbar size from sizes
  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
  var width = sizes.width || element.clientWidth || result.right - result.left;
  var height = sizes.height || element.clientHeight || result.bottom - result.top;

  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height;

  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
  // we make this check conditional for performance reasons
  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, 'x');
    vertScrollbar -= getBordersSize(styles, 'y');

    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }

  return getClientRect(result);
}

function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var isIE10 = isIE(10);
  var isHTML = parent.nodeName === 'HTML';
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);

  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth, 10);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);

  // In cases where the parent is fixed, we must ignore negative scroll in offset calc
  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }
  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0;

  // Subtract margins of documentElement in case it's being used as parent
  // we do this only on HTML because it's the only element that behaves
  // differently when margins are applied to it. The margins are included in
  // the box of the documentElement, in the other cases not.
  if (!isIE10 && isHTML) {
    var marginTop = parseFloat(styles.marginTop, 10);
    var marginLeft = parseFloat(styles.marginLeft, 10);

    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft;

    // Attach marginTop and marginLeft because in some circumstances we may need them
    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }

  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = includeScroll(offsets, parent);
  }

  return offsets;
}

function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var html = element.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);

  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;

  var offset = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width,
    height: height
  };

  return getClientRect(offset);
}

/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */
function isFixed(element) {
  var nodeName = element.nodeName;
  if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
  }
  if (getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
  }
  return isFixed(getParentNode(element));
}

/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */

function getFixedPositionOffsetParent(element) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
  }
  var el = element.parentElement;
  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
    el = el.parentElement;
  }
  return el || document.documentElement;
}

/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */
function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  // NOTE: 1 DOM access here

  var boundaries = { top: 0, left: 0 };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);

  // Handle viewport case
  if (boundariesElement === 'viewport') {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    // Handle other cases based on DOM element used as boundaries
    var boundariesNode = void 0;
    if (boundariesElement === 'scrollParent') {
      boundariesNode = getScrollParent(getParentNode(reference));
      if (boundariesNode.nodeName === 'BODY') {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === 'window') {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }

    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);

    // In case of HTML, we need a different computation
    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(popper.ownerDocument),
          height = _getWindowSizes.height,
          width = _getWindowSizes.width;

      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      // for all the other DOM elements, this one is good
      boundaries = offsets;
    }
  }

  // Add paddings
  padding = padding || 0;
  var isPaddingNumber = typeof padding === 'number';
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;

  return boundaries;
}

function getArea(_ref) {
  var width = _ref.width,
      height = _ref.height;

  return width * height;
}

/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

  if (placement.indexOf('auto') === -1) {
    return placement;
  }

  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);

  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };

  var sortedAreas = Object.keys(rects).map(function (key) {
    return _extends({
      key: key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function (a, b) {
    return b.area - a.area;
  });

  var filteredAreas = sortedAreas.filter(function (_ref2) {
    var width = _ref2.width,
        height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });

  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

  var variation = placement.split('-')[1];

  return computedPlacement + (variation ? '-' + variation : '');
}

/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */
function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}

/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */
function getOuterSizes(element) {
  var window = element.ownerDocument.defaultView;
  var styles = window.getComputedStyle(element);
  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);
  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}

/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */
function getOppositePlacement(placement) {
  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */
function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split('-')[0];

  // Get popper node sizes
  var popperRect = getOuterSizes(popper);

  // Add position, width and height to our offsets object
  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  };

  // depending by the popper placement we have to compute its offsets slightly differently
  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
  var mainSide = isHoriz ? 'top' : 'left';
  var secondarySide = isHoriz ? 'left' : 'top';
  var measurement = isHoriz ? 'height' : 'width';
  var secondaryMeasurement = !isHoriz ? 'height' : 'width';

  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }

  return popperOffsets;
}

/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function find(arr, check) {
  // use native find if supported
  if (Array.prototype.find) {
    return arr.find(check);
  }

  // use `filter` to obtain the same behavior of `find`
  return arr.filter(check)[0];
}

/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function findIndex(arr, prop, value) {
  // use native findIndex if supported
  if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) {
      return cur[prop] === value;
    });
  }

  // use `find` + `indexOf` if `findIndex` isn't supported
  var match = find(arr, function (obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}

/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */
function runModifiers(modifiers, data, ends) {
  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));

  modifiersToRun.forEach(function (modifier) {
    if (modifier['function']) {
      // eslint-disable-line dot-notation
      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
    }
    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
    if (modifier.enabled && isFunction(fn)) {
      // Add properties to offsets to make them a complete clientRect object
      // we do this before each modifier to make sure the previous one doesn't
      // mess with these values
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);

      data = fn(data, modifier);
    }
  });

  return data;
}

/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */
function update() {
  // if popper is destroyed, don't perform any further update
  if (this.state.isDestroyed) {
    return;
  }

  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  };

  // compute reference element offsets
  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

  // store the computed placement inside `originalPlacement`
  data.originalPlacement = data.placement;

  data.positionFixed = this.options.positionFixed;

  // compute the popper offsets
  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);

  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';

  // run the modifiers
  data = runModifiers(this.modifiers, data);

  // the first `update` will call `onCreate` callback
  // the other ones will call `onUpdate` callback
  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}

/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */
function isModifierEnabled(modifiers, modifierName) {
  return modifiers.some(function (_ref) {
    var name = _ref.name,
        enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}

/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */
function getSupportedPropertyName(property) {
  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;
    if (typeof document.body.style[toCheck] !== 'undefined') {
      return toCheck;
    }
  }
  return null;
}

/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */
function destroy() {
  this.state.isDestroyed = true;

  // touch DOM only if `applyStyle` modifier is enabled
  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style.left = '';
    this.popper.style.right = '';
    this.popper.style.bottom = '';
    this.popper.style.willChange = '';
    this.popper.style[getSupportedPropertyName('transform')] = '';
  }

  this.disableEventListeners();

  // remove the popper if user explicity asked for the deletion on destroy
  // do not use `remove` because IE11 doesn't support it
  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }
  return this;
}

/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */
function getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}

function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === 'BODY';
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, { passive: true });

  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }
  scrollParents.push(target);
}

/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function setupEventListeners(reference, options, state, updateBound) {
  // Resize event listener on window
  state.updateBound = updateBound;
  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });

  // Scroll event listener on scroll parents
  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;

  return state;
}

/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */
function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}

/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function removeEventListeners(reference, state) {
  // Remove resize event listener on window
  getWindow(reference).removeEventListener('resize', state.updateBound);

  // Remove scroll event listener on scroll parents
  state.scrollParents.forEach(function (target) {
    target.removeEventListener('scroll', state.updateBound);
  });

  // Reset state
  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}

/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */
function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}

/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */
function isNumeric(n) {
  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}

/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setStyles(element, styles) {
  Object.keys(styles).forEach(function (prop) {
    var unit = '';
    // add unit if the value is numeric and is one of the following
    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = 'px';
    }
    element.style[prop] = styles[prop] + unit;
  });
}

/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function (prop) {
    var value = attributes[prop];
    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */
function applyStyle(data) {
  // any property present in `data.styles` will be applied to the popper,
  // in this way we can make the 3rd party modifiers add custom styles to it
  // Be aware, modifiers could override the properties defined in the previous
  // lines of this modifier!
  setStyles(data.instance.popper, data.styles);

  // any property present in `data.attributes` will be applied to the popper,
  // they will be set as HTML attributes of the element
  setAttributes(data.instance.popper, data.attributes);

  // if arrowElement is defined and arrowStyles has some properties
  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}

/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */
function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  // compute reference element offsets
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

  popper.setAttribute('x-placement', placement);

  // Apply `position` to popper before anything else because
  // without the position applied we can't guarantee correct computations
  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });

  return options;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeStyle(data, options) {
  var x = options.x,
      y = options.y;
  var popper = data.offsets.popper;

  // Remove this legacy support in Popper.js v2

  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'applyStyle';
  }).gpuAcceleration;
  if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
  }
  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent);

  // Styles
  var styles = {
    position: popper.position
  };

  // Avoid blurry text by using full pixel integers.
  // For pixel-perfect positioning, top/bottom prefers rounded
  // values, while left/right prefers floored values.
  var offsets = {
    left: Math.floor(popper.left),
    top: Math.round(popper.top),
    bottom: Math.round(popper.bottom),
    right: Math.floor(popper.right)
  };

  var sideA = x === 'bottom' ? 'top' : 'bottom';
  var sideB = y === 'right' ? 'left' : 'right';

  // if gpuAcceleration is set to `true` and transform is supported,
  //  we use `translate3d` to apply the position to the popper we
  // automatically use the supported prefixed version if needed
  var prefixedProperty = getSupportedPropertyName('transform');

  // now, let's make a step back and look at this code closely (wtf?)
  // If the content of the popper grows once it's been positioned, it
  // may happen that the popper gets misplaced because of the new content
  // overflowing its reference element
  // To avoid this problem, we provide two options (x and y), which allow
  // the consumer to define the offset origin.
  // If we position a popper on top of a reference element, we can set
  // `x` to `top` to make the popper grow towards its top instead of
  // its bottom.
  var left = void 0,
      top = void 0;
  if (sideA === 'bottom') {
    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
    // and not the bottom of the html element
    if (offsetParent.nodeName === 'HTML') {
      top = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top = offsets.top;
  }
  if (sideB === 'right') {
    if (offsetParent.nodeName === 'HTML') {
      left = -offsetParent.clientWidth + offsets.right;
    } else {
      left = -offsetParentRect.width + offsets.right;
    }
  } else {
    left = offsets.left;
  }
  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
  } else {
    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
  }

  // Attributes
  var attributes = {
    'x-placement': data.placement
  };

  // Update `data` attributes, styles and arrowStyles
  data.attributes = _extends({}, attributes, data.attributes);
  data.styles = _extends({}, styles, data.styles);
  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);

  return data;
}

/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */
function isModifierRequired(modifiers, requestingName, requestedName) {
  var requesting = find(modifiers, function (_ref) {
    var name = _ref.name;
    return name === requestingName;
  });

  var isRequired = !!requesting && modifiers.some(function (modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });

  if (!isRequired) {
    var _requesting = '`' + requestingName + '`';
    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
  }
  return isRequired;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function arrow(data, options) {
  var _data$offsets$arrow;

  // arrow depends on keepTogether in order to work
  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
  }

  var arrowElement = options.element;

  // if arrowElement is a string, suppose it's a CSS selector
  if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement);

    // if arrowElement is not found, don't run the modifier
    if (!arrowElement) {
      return data;
    }
  } else {
    // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn('WARNING: `arrow.element` must be child of its popper element!');
      return data;
    }
  }

  var placement = data.placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isVertical = ['left', 'right'].indexOf(placement) !== -1;

  var len = isVertical ? 'height' : 'width';
  var sideCapitalized = isVertical ? 'Top' : 'Left';
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? 'left' : 'top';
  var opSide = isVertical ? 'bottom' : 'right';
  var arrowElementSize = getOuterSizes(arrowElement)[len];

  //
  // extends keepTogether behavior making sure the popper and its
  // reference have enough pixels in conjunction
  //

  // top/left side
  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  }
  // bottom/right side
  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }
  data.offsets.popper = getClientRect(data.offsets.popper);

  // compute center of the popper
  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

  // Compute the sideValue using the updated popper offsets
  // take popper margin in account because we don't have this info available
  var css = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css['margin' + sideCapitalized], 10);
  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width'], 10);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;

  // prevent arrowElement from being placed not contiguously to its popper
  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);

  return data;
}

/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */
function getOppositeVariation(variation) {
  if (variation === 'end') {
    return 'start';
  } else if (variation === 'start') {
    return 'end';
  }
  return variation;
}

/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */
var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

// Get rid of `auto` `auto-start` and `auto-end`
var validPlacements = placements.slice(3);

/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */
function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}

var BEHAVIORS = {
  FLIP: 'flip',
  CLOCKWISE: 'clockwise',
  COUNTERCLOCKWISE: 'counterclockwise'
};

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function flip(data, options) {
  // if `inner` modifier is enabled, we can't use the `flip` modifier
  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
  }

  if (data.flipped && data.placement === data.originalPlacement) {
    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
  }

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);

  var placement = data.placement.split('-')[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split('-')[1] || '';

  var flipOrder = [];

  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;
    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;
    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;
    default:
      flipOrder = options.behavior;
  }

  flipOrder.forEach(function (step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }

    placement = data.placement.split('-')[0];
    placementOpposite = getOppositePlacement(placement);

    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference;

    // using floor because the reference offsets may contain decimals we are not going to consider here
    var floor = Math.floor;
    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

    // flip the variation if required
    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      // this boolean to detect any flip loop
      data.flipped = true;

      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }

      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }

      data.placement = placement + (variation ? '-' + variation : '');

      // this object contains `position`, we want to preserve it along with
      // any additional property we may add in the future
      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

      data = runModifiers(data.instance.modifiers, data, 'flip');
    }
  });
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function keepTogether(data) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var placement = data.placement.split('-')[0];
  var floor = Math.floor;
  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  var side = isVertical ? 'right' : 'bottom';
  var opSide = isVertical ? 'left' : 'top';
  var measurement = isVertical ? 'width' : 'height';

  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }
  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }

  return data;
}

/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */
function toValue(str, measurement, popperOffsets, referenceOffsets) {
  // separate value from unit
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2];

  // If it's not a number it's an operator, I guess
  if (!value) {
    return str;
  }

  if (unit.indexOf('%') === 0) {
    var element = void 0;
    switch (unit) {
      case '%p':
        element = popperOffsets;
        break;
      case '%':
      case '%r':
      default:
        element = referenceOffsets;
    }

    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === 'vh' || unit === 'vw') {
    // if is a vh or vw, we calculate the size based on the viewport
    var size = void 0;
    if (unit === 'vh') {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    return size / 100 * value;
  } else {
    // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
  }
}

/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */
function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0];

  // Use height if placement is left or right and index is 0 otherwise use width
  // in this way the first offset will use an axis and the second one
  // will use the other one
  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

  // Split the offset string to obtain a list of values and operands
  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
    return frag.trim();
  });

  // Detect if the offset string contains a pair of values or a single one
  // they could be separated by comma or space
  var divider = fragments.indexOf(find(fragments, function (frag) {
    return frag.search(/,|\s/) !== -1;
  }));

  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
  }

  // If divider is found, we divide the list of values and operands to divide
  // them by ofset X and Y.
  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

  // Convert the values with units to absolute pixels to allow our computations
  ops = ops.map(function (op, index) {
    // Most of the units rely on the orientation of the popper
    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
    var mergeWithPrevious = false;
    return op
    // This aggregates any `+` or `-` sign that aren't considered operators
    // e.g.: 10 + +5 => [10, +, +5]
    .reduce(function (a, b) {
      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, [])
    // Here we convert the string values into number values (in px)
    .map(function (str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  });

  // Loop trough the offsets arrays and execute the operations
  ops.forEach(function (op, index) {
    op.forEach(function (frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
      }
    });
  });
  return offsets;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */
function offset(data, _ref) {
  var offset = _ref.offset;
  var placement = data.placement,
      _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var basePlacement = placement.split('-')[0];

  var offsets = void 0;
  if (isNumeric(+offset)) {
    offsets = [+offset, 0];
  } else {
    offsets = parseOffset(offset, popper, reference, basePlacement);
  }

  if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }

  data.popper = popper;
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

  // If offsetParent is the reference element, we really want to
  // go one step up and use the next offsetParent as reference to
  // avoid to make this modifier completely useless and look like broken
  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  }

  // NOTE: DOM access here
  // resets the popper's position so that the document size can be calculated excluding
  // the size of the popper element itself
  var transformProp = getSupportedPropertyName('transform');
  var popperStyles = data.instance.popper.style; // assignment to help minification
  var top = popperStyles.top,
      left = popperStyles.left,
      transform = popperStyles[transformProp];

  popperStyles.top = '';
  popperStyles.left = '';
  popperStyles[transformProp] = '';

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);

  // NOTE: DOM access here
  // restores the original style properties after the offsets have been computed
  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;

  options.boundaries = boundaries;

  var order = options.priority;
  var popper = data.offsets.popper;

  var check = {
    primary: function primary(placement) {
      var value = popper[placement];
      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }
      return defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === 'right' ? 'left' : 'top';
      var value = popper[mainSide];
      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
      }
      return defineProperty({}, mainSide, value);
    }
  };

  order.forEach(function (placement) {
    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
    popper = _extends({}, popper, check[side](placement));
  });

  data.offsets.popper = popper;

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var shiftvariation = placement.split('-')[1];

  // if shift shiftvariation is specified, run the modifier
  if (shiftvariation) {
    var _data$offsets = data.offsets,
        reference = _data$offsets.reference,
        popper = _data$offsets.popper;

    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';

    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };

    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
  }

  var refRect = data.offsets.reference;
  var bound = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'preventOverflow';
  }).boundaries;

  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === true) {
      return data;
    }

    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
  } else {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === false) {
      return data;
    }

    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);

  return data;
}

/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */
var modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: shift
  },

  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: offset,
    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },

  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: preventOverflow,
    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ['left', 'right', 'top', 'bottom'],
    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: 'scrollParent'
  },

  /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: keepTogether
  },

  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: arrow,
    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: '[x-arrow]'
  },

  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: flip,
    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */
    behavior: 'flip',
    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */
    boundariesElement: 'viewport'
  },

  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,
    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,
    /** @prop {ModifierFn} */
    fn: inner
  },

  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: hide
  },

  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: computeStyle,
    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: true,
    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: 'bottom',
    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: 'right'
  },

  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: applyStyle,
    /** @prop {Function} */
    onLoad: applyStyleOnLoad,
    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: undefined
  }
};

/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */
var Defaults = {
  /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */
  placement: 'bottom',

  /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
  positionFixed: false,

  /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,

  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,

  /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {},

  /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {},

  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */
  modifiers: modifiers
};

/**
 * @callback onCreate
 * @param {dataObject} data
 */

/**
 * @callback onUpdate
 * @param {dataObject} data
 */

// Utils
// Methods
var Popper = function () {
  /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper
   * @param {HTMLElement} popper - The HTML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
  function Popper(reference, popper) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    classCallCheck(this, Popper);

    this.scheduleUpdate = function () {
      return requestAnimationFrame(_this.update);
    };

    // make update() debounced, so that it only runs at most once-per-tick
    this.update = debounce(this.update.bind(this));

    // with {} we create a new object with the options inside it
    this.options = _extends({}, Popper.Defaults, options);

    // init state
    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    };

    // get reference and popper elements (allow jQuery wrappers)
    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper;

    // Deep merge modifiers options
    this.options.modifiers = {};
    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    });

    // Refactoring modifiers' list (Object => Array)
    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
      return _extends({
        name: name
      }, _this.options.modifiers[name]);
    })
    // sort the modifiers by order
    .sort(function (a, b) {
      return a.order - b.order;
    });

    // modifiers have the ability to execute arbitrary code when Popper.js get inited
    // such code is executed in the same order of its modifier
    // they could add new properties to their options configuration
    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
    this.modifiers.forEach(function (modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    });

    // fire the first update to position the popper in the right place
    this.update();

    var eventsEnabled = this.options.eventsEnabled;
    if (eventsEnabled) {
      // setup event listeners, they will take care of update the position in specific situations
      this.enableEventListeners();
    }

    this.state.eventsEnabled = eventsEnabled;
  }

  // We can't use class properties because they don't get listed in the
  // class prototype and break stuff like Sinon stubs


  createClass(Popper, [{
    key: 'update',
    value: function update$$1() {
      return update.call(this);
    }
  }, {
    key: 'destroy',
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: 'enableEventListeners',
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: 'disableEventListeners',
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }

    /**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */


    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

  }]);
  return Popper;
}();

/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */


Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults;

return Popper;

})));
/*
Unobtrusive JavaScript
https://github.com/rails/rails/blob/master/actionview/app/assets/javascripts
Released under the MIT license
 */


(function() {
  var context = this;

  (function() {
    (function() {
      this.Rails = {
        linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote]:not([disabled]), a[data-disable-with], a[data-disable]',
        buttonClickSelector: {
          selector: 'button[data-remote]:not([form]), button[data-confirm]:not([form])',
          exclude: 'form button'
        },
        inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',
        formSubmitSelector: 'form',
        formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',
        formDisableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',
        formEnableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',
        fileInputSelector: 'input[name][type=file]:not([disabled])',
        linkDisableSelector: 'a[data-disable-with], a[data-disable]',
        buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]'
      };

    }).call(this);
  }).call(context);

  var Rails = context.Rails;

  (function() {
    (function() {
      var expando, m;

      m = Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector;

      Rails.matches = function(element, selector) {
        if (selector.exclude != null) {
          return m.call(element, selector.selector) && !m.call(element, selector.exclude);
        } else {
          return m.call(element, selector);
        }
      };

      expando = '_ujsData';

      Rails.getData = function(element, key) {
        var ref;
        return (ref = element[expando]) != null ? ref[key] : void 0;
      };

      Rails.setData = function(element, key, value) {
        if (element[expando] == null) {
          element[expando] = {};
        }
        return element[expando][key] = value;
      };

      Rails.$ = function(selector) {
        return Array.prototype.slice.call(document.querySelectorAll(selector));
      };

    }).call(this);
    (function() {
      var $, csrfParam, csrfToken;

      $ = Rails.$;

      csrfToken = Rails.csrfToken = function() {
        var meta;
        meta = document.querySelector('meta[name=csrf-token]');
        return meta && meta.content;
      };

      csrfParam = Rails.csrfParam = function() {
        var meta;
        meta = document.querySelector('meta[name=csrf-param]');
        return meta && meta.content;
      };

      Rails.CSRFProtection = function(xhr) {
        var token;
        token = csrfToken();
        if (token != null) {
          return xhr.setRequestHeader('X-CSRF-Token', token);
        }
      };

      Rails.refreshCSRFTokens = function() {
        var param, token;
        token = csrfToken();
        param = csrfParam();
        if ((token != null) && (param != null)) {
          return $('form input[name="' + param + '"]').forEach(function(input) {
            return input.value = token;
          });
        }
      };

    }).call(this);
    (function() {
      var CustomEvent, fire, matches;

      matches = Rails.matches;

      CustomEvent = window.CustomEvent;

      if (typeof CustomEvent !== 'function') {
        CustomEvent = function(event, params) {
          var evt;
          evt = document.createEvent('CustomEvent');
          evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);
          return evt;
        };
        CustomEvent.prototype = window.Event.prototype;
      }

      fire = Rails.fire = function(obj, name, data) {
        var event;
        event = new CustomEvent(name, {
          bubbles: true,
          cancelable: true,
          detail: data
        });
        obj.dispatchEvent(event);
        return !event.defaultPrevented;
      };

      Rails.stopEverything = function(e) {
        fire(e.target, 'ujs:everythingStopped');
        e.preventDefault();
        e.stopPropagation();
        return e.stopImmediatePropagation();
      };

      Rails.delegate = function(element, selector, eventType, handler) {
        return element.addEventListener(eventType, function(e) {
          var target;
          target = e.target;
          while (!(!(target instanceof Element) || matches(target, selector))) {
            target = target.parentNode;
          }
          if (target instanceof Element && handler.call(target, e) === false) {
            e.preventDefault();
            return e.stopPropagation();
          }
        });
      };

    }).call(this);
    (function() {
      var AcceptHeaders, CSRFProtection, createXHR, fire, prepareOptions, processResponse;

      CSRFProtection = Rails.CSRFProtection, fire = Rails.fire;

      AcceptHeaders = {
        '*': '*/*',
        text: 'text/plain',
        html: 'text/html',
        xml: 'application/xml, text/xml',
        json: 'application/json, text/javascript',
        script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript'
      };

      Rails.ajax = function(options) {
        var xhr;
        options = prepareOptions(options);
        xhr = createXHR(options, function() {
          var response;
          response = processResponse(xhr.response, xhr.getResponseHeader('Content-Type'));
          if (Math.floor(xhr.status / 100) === 2) {
            if (typeof options.success === "function") {
              options.success(response, xhr.statusText, xhr);
            }
          } else {
            if (typeof options.error === "function") {
              options.error(response, xhr.statusText, xhr);
            }
          }
          return typeof options.complete === "function" ? options.complete(xhr, xhr.statusText) : void 0;
        });
        if (!(typeof options.beforeSend === "function" ? options.beforeSend(xhr, options) : void 0)) {
          return false;
        }
        if (xhr.readyState === XMLHttpRequest.OPENED) {
          return xhr.send(options.data);
        }
      };

      prepareOptions = function(options) {
        options.url = options.url || location.href;
        options.type = options.type.toUpperCase();
        if (options.type === 'GET' && options.data) {
          if (options.url.indexOf('?') < 0) {
            options.url += '?' + options.data;
          } else {
            options.url += '&' + options.data;
          }
        }
        if (AcceptHeaders[options.dataType] == null) {
          options.dataType = '*';
        }
        options.accept = AcceptHeaders[options.dataType];
        if (options.dataType !== '*') {
          options.accept += ', */*; q=0.01';
        }
        return options;
      };

      createXHR = function(options, done) {
        var xhr;
        xhr = new XMLHttpRequest();
        xhr.open(options.type, options.url, true);
        xhr.setRequestHeader('Accept', options.accept);
        if (typeof options.data === 'string') {
          xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');
        }
        if (!options.crossDomain) {
          xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
        }
        CSRFProtection(xhr);
        xhr.withCredentials = !!options.withCredentials;
        xhr.onreadystatechange = function() {
          if (xhr.readyState === XMLHttpRequest.DONE) {
            return done(xhr);
          }
        };
        return xhr;
      };

      processResponse = function(response, type) {
        var parser, script;
        if (typeof response === 'string' && typeof type === 'string') {
          if (type.match(/\bjson\b/)) {
            try {
              response = JSON.parse(response);
            } catch (error) {}
          } else if (type.match(/\b(?:java|ecma)script\b/)) {
            script = document.createElement('script');
            script.text = response;
            document.head.appendChild(script).parentNode.removeChild(script);
          } else if (type.match(/\b(xml|html|svg)\b/)) {
            parser = new DOMParser();
            type = type.replace(/;.+/, '');
            try {
              response = parser.parseFromString(response, type);
            } catch (error) {}
          }
        }
        return response;
      };

      Rails.href = function(element) {
        return element.href;
      };

      Rails.isCrossDomain = function(url) {
        var e, originAnchor, urlAnchor;
        originAnchor = document.createElement('a');
        originAnchor.href = location.href;
        urlAnchor = document.createElement('a');
        try {
          urlAnchor.href = url;
          return !(((!urlAnchor.protocol || urlAnchor.protocol === ':') && !urlAnchor.host) || (originAnchor.protocol + '//' + originAnchor.host === urlAnchor.protocol + '//' + urlAnchor.host));
        } catch (error) {
          e = error;
          return true;
        }
      };

    }).call(this);
    (function() {
      var matches, toArray;

      matches = Rails.matches;

      toArray = function(e) {
        return Array.prototype.slice.call(e);
      };

      Rails.serializeElement = function(element, additionalParam) {
        var inputs, params;
        inputs = [element];
        if (matches(element, 'form')) {
          inputs = toArray(element.elements);
        }
        params = [];
        inputs.forEach(function(input) {
          if (!input.name || input.disabled) {
            return;
          }
          if (matches(input, 'select')) {
            return toArray(input.options).forEach(function(option) {
              if (option.selected) {
                return params.push({
                  name: input.name,
                  value: option.value
                });
              }
            });
          } else if (input.checked || ['radio', 'checkbox', 'submit'].indexOf(input.type) === -1) {
            return params.push({
              name: input.name,
              value: input.value
            });
          }
        });
        if (additionalParam) {
          params.push(additionalParam);
        }
        return params.map(function(param) {
          if (param.name != null) {
            return (encodeURIComponent(param.name)) + "=" + (encodeURIComponent(param.value));
          } else {
            return param;
          }
        }).join('&');
      };

      Rails.formElements = function(form, selector) {
        if (matches(form, 'form')) {
          return toArray(form.elements).filter(function(el) {
            return matches(el, selector);
          });
        } else {
          return toArray(form.querySelectorAll(selector));
        }
      };

    }).call(this);
    (function() {
      var allowAction, fire, stopEverything;

      fire = Rails.fire, stopEverything = Rails.stopEverything;

      Rails.handleConfirm = function(e) {
        if (!allowAction(this)) {
          return stopEverything(e);
        }
      };

      allowAction = function(element) {
        var answer, callback, message;
        message = element.getAttribute('data-confirm');
        if (!message) {
          return true;
        }
        answer = false;
        if (fire(element, 'confirm')) {
          try {
            answer = confirm(message);
          } catch (error) {}
          callback = fire(element, 'confirm:complete', [answer]);
        }
        return answer && callback;
      };

    }).call(this);
    (function() {
      var disableFormElement, disableFormElements, disableLinkElement, enableFormElement, enableFormElements, enableLinkElement, formElements, getData, matches, setData, stopEverything;

      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, stopEverything = Rails.stopEverything, formElements = Rails.formElements;

      Rails.handleDisabledElement = function(e) {
        var element;
        element = this;
        if (element.disabled) {
          return stopEverything(e);
        }
      };

      Rails.enableElement = function(e) {
        var element;
        element = e instanceof Event ? e.target : e;
        if (matches(element, Rails.linkDisableSelector)) {
          return enableLinkElement(element);
        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formEnableSelector)) {
          return enableFormElement(element);
        } else if (matches(element, Rails.formSubmitSelector)) {
          return enableFormElements(element);
        }
      };

      Rails.disableElement = function(e) {
        var element;
        element = e instanceof Event ? e.target : e;
        if (matches(element, Rails.linkDisableSelector)) {
          return disableLinkElement(element);
        } else if (matches(element, Rails.buttonDisableSelector) || matches(element, Rails.formDisableSelector)) {
          return disableFormElement(element);
        } else if (matches(element, Rails.formSubmitSelector)) {
          return disableFormElements(element);
        }
      };

      disableLinkElement = function(element) {
        var replacement;
        replacement = element.getAttribute('data-disable-with');
        if (replacement != null) {
          setData(element, 'ujs:enable-with', element.innerHTML);
          element.innerHTML = replacement;
        }
        element.addEventListener('click', stopEverything);
        return setData(element, 'ujs:disabled', true);
      };

      enableLinkElement = function(element) {
        var originalText;
        originalText = getData(element, 'ujs:enable-with');
        if (originalText != null) {
          element.innerHTML = originalText;
          setData(element, 'ujs:enable-with', null);
        }
        element.removeEventListener('click', stopEverything);
        return setData(element, 'ujs:disabled', null);
      };

      disableFormElements = function(form) {
        return formElements(form, Rails.formDisableSelector).forEach(disableFormElement);
      };

      disableFormElement = function(element) {
        var replacement;
        replacement = element.getAttribute('data-disable-with');
        if (replacement != null) {
          if (matches(element, 'button')) {
            setData(element, 'ujs:enable-with', element.innerHTML);
            element.innerHTML = replacement;
          } else {
            setData(element, 'ujs:enable-with', element.value);
            element.value = replacement;
          }
        }
        element.disabled = true;
        return setData(element, 'ujs:disabled', true);
      };

      enableFormElements = function(form) {
        return formElements(form, Rails.formEnableSelector).forEach(enableFormElement);
      };

      enableFormElement = function(element) {
        var originalText;
        originalText = getData(element, 'ujs:enable-with');
        if (originalText != null) {
          if (matches(element, 'button')) {
            element.innerHTML = originalText;
          } else {
            element.value = originalText;
          }
          setData(element, 'ujs:enable-with', null);
        }
        element.disabled = false;
        return setData(element, 'ujs:disabled', null);
      };

    }).call(this);
    (function() {
      var stopEverything;

      stopEverything = Rails.stopEverything;

      Rails.handleMethod = function(e) {
        var csrfParam, csrfToken, form, formContent, href, link, method;
        link = this;
        method = link.getAttribute('data-method');
        if (!method) {
          return;
        }
        href = Rails.href(link);
        csrfToken = Rails.csrfToken();
        csrfParam = Rails.csrfParam();
        form = document.createElement('form');
        formContent = "<input name='_method' value='" + method + "' type='hidden' />";
        if ((csrfParam != null) && (csrfToken != null) && !Rails.isCrossDomain(href)) {
          formContent += "<input name='" + csrfParam + "' value='" + csrfToken + "' type='hidden' />";
        }
        formContent += '<input type="submit" />';
        form.method = 'post';
        form.action = href;
        form.target = link.target;
        form.innerHTML = formContent;
        form.style.display = 'none';
        document.body.appendChild(form);
        form.querySelector('[type="submit"]').click();
        return stopEverything(e);
      };

    }).call(this);
    (function() {
      var ajax, fire, getData, isCrossDomain, isRemote, matches, serializeElement, setData, stopEverything,
        slice = [].slice;

      matches = Rails.matches, getData = Rails.getData, setData = Rails.setData, fire = Rails.fire, stopEverything = Rails.stopEverything, ajax = Rails.ajax, isCrossDomain = Rails.isCrossDomain, serializeElement = Rails.serializeElement;

      isRemote = function(element) {
        var value;
        value = element.getAttribute('data-remote');
        return (value != null) && value !== 'false';
      };

      Rails.handleRemote = function(e) {
        var button, data, dataType, element, method, url, withCredentials;
        element = this;
        if (!isRemote(element)) {
          return true;
        }
        if (!fire(element, 'ajax:before')) {
          fire(element, 'ajax:stopped');
          return false;
        }
        withCredentials = element.getAttribute('data-with-credentials');
        dataType = element.getAttribute('data-type') || 'script';
        if (matches(element, Rails.formSubmitSelector)) {
          button = getData(element, 'ujs:submit-button');
          method = getData(element, 'ujs:submit-button-formmethod') || element.method;
          url = getData(element, 'ujs:submit-button-formaction') || element.getAttribute('action') || location.href;
          if (method.toUpperCase() === 'GET') {
            url = url.replace(/\?.*$/, '');
          }
          if (element.enctype === 'multipart/form-data') {
            data = new FormData(element);
            if (button != null) {
              data.append(button.name, button.value);
            }
          } else {
            data = serializeElement(element, button);
          }
          setData(element, 'ujs:submit-button', null);
          setData(element, 'ujs:submit-button-formmethod', null);
          setData(element, 'ujs:submit-button-formaction', null);
        } else if (matches(element, Rails.buttonClickSelector) || matches(element, Rails.inputChangeSelector)) {
          method = element.getAttribute('data-method');
          url = element.getAttribute('data-url');
          data = serializeElement(element, element.getAttribute('data-params'));
        } else {
          method = element.getAttribute('data-method');
          url = Rails.href(element);
          data = element.getAttribute('data-params');
        }
        ajax({
          type: method || 'GET',
          url: url,
          data: data,
          dataType: dataType,
          beforeSend: function(xhr, options) {
            if (fire(element, 'ajax:beforeSend', [xhr, options])) {
              return fire(element, 'ajax:send', [xhr]);
            } else {
              fire(element, 'ajax:stopped');
              return false;
            }
          },
          success: function() {
            var args;
            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
            return fire(element, 'ajax:success', args);
          },
          error: function() {
            var args;
            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
            return fire(element, 'ajax:error', args);
          },
          complete: function() {
            var args;
            args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
            return fire(element, 'ajax:complete', args);
          },
          crossDomain: isCrossDomain(url),
          withCredentials: (withCredentials != null) && withCredentials !== 'false'
        });
        return stopEverything(e);
      };

      Rails.formSubmitButtonClick = function(e) {
        var button, form;
        button = this;
        form = button.form;
        if (!form) {
          return;
        }
        if (button.name) {
          setData(form, 'ujs:submit-button', {
            name: button.name,
            value: button.value
          });
        }
        setData(form, 'ujs:formnovalidate-button', button.formNoValidate);
        setData(form, 'ujs:submit-button-formaction', button.getAttribute('formaction'));
        return setData(form, 'ujs:submit-button-formmethod', button.getAttribute('formmethod'));
      };

      Rails.handleMetaClick = function(e) {
        var data, link, metaClick, method;
        link = this;
        method = (link.getAttribute('data-method') || 'GET').toUpperCase();
        data = link.getAttribute('data-params');
        metaClick = e.metaKey || e.ctrlKey;
        if (metaClick && method === 'GET' && !data) {
          return e.stopImmediatePropagation();
        }
      };

    }).call(this);
    (function() {
      var $, CSRFProtection, delegate, disableElement, enableElement, fire, formSubmitButtonClick, getData, handleConfirm, handleDisabledElement, handleMetaClick, handleMethod, handleRemote, refreshCSRFTokens;

      fire = Rails.fire, delegate = Rails.delegate, getData = Rails.getData, $ = Rails.$, refreshCSRFTokens = Rails.refreshCSRFTokens, CSRFProtection = Rails.CSRFProtection, enableElement = Rails.enableElement, disableElement = Rails.disableElement, handleDisabledElement = Rails.handleDisabledElement, handleConfirm = Rails.handleConfirm, handleRemote = Rails.handleRemote, formSubmitButtonClick = Rails.formSubmitButtonClick, handleMetaClick = Rails.handleMetaClick, handleMethod = Rails.handleMethod;

      if ((typeof jQuery !== "undefined" && jQuery !== null) && (jQuery.ajax != null) && !jQuery.rails) {
        jQuery.rails = Rails;
        jQuery.ajaxPrefilter(function(options, originalOptions, xhr) {
          if (!options.crossDomain) {
            return CSRFProtection(xhr);
          }
        });
      }

      Rails.start = function() {
        if (window._rails_loaded) {
          throw new Error('rails-ujs has already been loaded!');
        }
        window.addEventListener('pageshow', function() {
          $(Rails.formEnableSelector).forEach(function(el) {
            if (getData(el, 'ujs:disabled')) {
              return enableElement(el);
            }
          });
          return $(Rails.linkDisableSelector).forEach(function(el) {
            if (getData(el, 'ujs:disabled')) {
              return enableElement(el);
            }
          });
        });
        delegate(document, Rails.linkDisableSelector, 'ajax:complete', enableElement);
        delegate(document, Rails.linkDisableSelector, 'ajax:stopped', enableElement);
        delegate(document, Rails.buttonDisableSelector, 'ajax:complete', enableElement);
        delegate(document, Rails.buttonDisableSelector, 'ajax:stopped', enableElement);
        delegate(document, Rails.linkClickSelector, 'click', handleDisabledElement);
        delegate(document, Rails.linkClickSelector, 'click', handleConfirm);
        delegate(document, Rails.linkClickSelector, 'click', handleMetaClick);
        delegate(document, Rails.linkClickSelector, 'click', disableElement);
        delegate(document, Rails.linkClickSelector, 'click', handleRemote);
        delegate(document, Rails.linkClickSelector, 'click', handleMethod);
        delegate(document, Rails.buttonClickSelector, 'click', handleDisabledElement);
        delegate(document, Rails.buttonClickSelector, 'click', handleConfirm);
        delegate(document, Rails.buttonClickSelector, 'click', disableElement);
        delegate(document, Rails.buttonClickSelector, 'click', handleRemote);
        delegate(document, Rails.inputChangeSelector, 'change', handleDisabledElement);
        delegate(document, Rails.inputChangeSelector, 'change', handleConfirm);
        delegate(document, Rails.inputChangeSelector, 'change', handleRemote);
        delegate(document, Rails.formSubmitSelector, 'submit', handleDisabledElement);
        delegate(document, Rails.formSubmitSelector, 'submit', handleConfirm);
        delegate(document, Rails.formSubmitSelector, 'submit', handleRemote);
        delegate(document, Rails.formSubmitSelector, 'submit', function(e) {
          return setTimeout((function() {
            return disableElement(e);
          }), 13);
        });
        delegate(document, Rails.formSubmitSelector, 'ajax:send', disableElement);
        delegate(document, Rails.formSubmitSelector, 'ajax:complete', enableElement);
        delegate(document, Rails.formInputClickSelector, 'click', handleDisabledElement);
        delegate(document, Rails.formInputClickSelector, 'click', handleConfirm);
        delegate(document, Rails.formInputClickSelector, 'click', formSubmitButtonClick);
        document.addEventListener('DOMContentLoaded', refreshCSRFTokens);
        return window._rails_loaded = true;
      };

      if (window.Rails === Rails && fire(document, 'rails:attachBindings')) {
        Rails.start();
      }

    }).call(this);
  }).call(this);

  if (typeof module === "object" && module.exports) {
    module.exports = Rails;
  } else if (typeof define === "function" && define.amd) {
    define(Rails);
  }
}).call(this);
/*
Turbolinks 5.2.0
Copyright © 2018 Basecamp, LLC
 */

(function(){var t=this;(function(){(function(){this.Turbolinks={supported:function(){return null!=window.history.pushState&&null!=window.requestAnimationFrame&&null!=window.addEventListener}(),visit:function(t,r){return e.controller.visit(t,r)},clearCache:function(){return e.controller.clearCache()},setProgressBarDelay:function(t){return e.controller.setProgressBarDelay(t)}}}).call(this)}).call(t);var e=t.Turbolinks;(function(){(function(){var t,r,n,o=[].slice;e.copyObject=function(t){var e,r,n;r={};for(e in t)n=t[e],r[e]=n;return r},e.closest=function(e,r){return t.call(e,r)},t=function(){var t,e;return t=document.documentElement,null!=(e=t.closest)?e:function(t){var e;for(e=this;e;){if(e.nodeType===Node.ELEMENT_NODE&&r.call(e,t))return e;e=e.parentNode}}}(),e.defer=function(t){return setTimeout(t,1)},e.throttle=function(t){var e;return e=null,function(){var r;return r=1<=arguments.length?o.call(arguments,0):[],null!=e?e:e=requestAnimationFrame(function(n){return function(){return e=null,t.apply(n,r)}}(this))}},e.dispatch=function(t,e){var r,o,i,s,a,u;return a=null!=e?e:{},u=a.target,r=a.cancelable,o=a.data,i=document.createEvent("Events"),i.initEvent(t,!0,r===!0),i.data=null!=o?o:{},i.cancelable&&!n&&(s=i.preventDefault,i.preventDefault=function(){return this.defaultPrevented||Object.defineProperty(this,"defaultPrevented",{get:function(){return!0}}),s.call(this)}),(null!=u?u:document).dispatchEvent(i),i},n=function(){var t;return t=document.createEvent("Events"),t.initEvent("test",!0,!0),t.preventDefault(),t.defaultPrevented}(),e.match=function(t,e){return r.call(t,e)},r=function(){var t,e,r,n;return t=document.documentElement,null!=(e=null!=(r=null!=(n=t.matchesSelector)?n:t.webkitMatchesSelector)?r:t.msMatchesSelector)?e:t.mozMatchesSelector}(),e.uuid=function(){var t,e,r;for(r="",t=e=1;36>=e;t=++e)r+=9===t||14===t||19===t||24===t?"-":15===t?"4":20===t?(Math.floor(4*Math.random())+8).toString(16):Math.floor(15*Math.random()).toString(16);return r}}).call(this),function(){e.Location=function(){function t(t){var e,r;null==t&&(t=""),r=document.createElement("a"),r.href=t.toString(),this.absoluteURL=r.href,e=r.hash.length,2>e?this.requestURL=this.absoluteURL:(this.requestURL=this.absoluteURL.slice(0,-e),this.anchor=r.hash.slice(1))}var e,r,n,o;return t.wrap=function(t){return t instanceof this?t:new this(t)},t.prototype.getOrigin=function(){return this.absoluteURL.split("/",3).join("/")},t.prototype.getPath=function(){var t,e;return null!=(t=null!=(e=this.requestURL.match(/\/\/[^\/]*(\/[^?;]*)/))?e[1]:void 0)?t:"/"},t.prototype.getPathComponents=function(){return this.getPath().split("/").slice(1)},t.prototype.getLastPathComponent=function(){return this.getPathComponents().slice(-1)[0]},t.prototype.getExtension=function(){var t,e;return null!=(t=null!=(e=this.getLastPathComponent().match(/\.[^.]*$/))?e[0]:void 0)?t:""},t.prototype.isHTML=function(){return this.getExtension().match(/^(?:|\.(?:htm|html|xhtml))$/)},t.prototype.isPrefixedBy=function(t){var e;return e=r(t),this.isEqualTo(t)||o(this.absoluteURL,e)},t.prototype.isEqualTo=function(t){return this.absoluteURL===(null!=t?t.absoluteURL:void 0)},t.prototype.toCacheKey=function(){return this.requestURL},t.prototype.toJSON=function(){return this.absoluteURL},t.prototype.toString=function(){return this.absoluteURL},t.prototype.valueOf=function(){return this.absoluteURL},r=function(t){return e(t.getOrigin()+t.getPath())},e=function(t){return n(t,"/")?t:t+"/"},o=function(t,e){return t.slice(0,e.length)===e},n=function(t,e){return t.slice(-e.length)===e},t}()}.call(this),function(){var t=function(t,e){return function(){return t.apply(e,arguments)}};e.HttpRequest=function(){function r(r,n,o){this.delegate=r,this.requestCanceled=t(this.requestCanceled,this),this.requestTimedOut=t(this.requestTimedOut,this),this.requestFailed=t(this.requestFailed,this),this.requestLoaded=t(this.requestLoaded,this),this.requestProgressed=t(this.requestProgressed,this),this.url=e.Location.wrap(n).requestURL,this.referrer=e.Location.wrap(o).absoluteURL,this.createXHR()}return r.NETWORK_FAILURE=0,r.TIMEOUT_FAILURE=-1,r.timeout=60,r.prototype.send=function(){var t;return this.xhr&&!this.sent?(this.notifyApplicationBeforeRequestStart(),this.setProgress(0),this.xhr.send(),this.sent=!0,"function"==typeof(t=this.delegate).requestStarted?t.requestStarted():void 0):void 0},r.prototype.cancel=function(){return this.xhr&&this.sent?this.xhr.abort():void 0},r.prototype.requestProgressed=function(t){return t.lengthComputable?this.setProgress(t.loaded/t.total):void 0},r.prototype.requestLoaded=function(){return this.endRequest(function(t){return function(){var e;return 200<=(e=t.xhr.status)&&300>e?t.delegate.requestCompletedWithResponse(t.xhr.responseText,t.xhr.getResponseHeader("Turbolinks-Location")):(t.failed=!0,t.delegate.requestFailedWithStatusCode(t.xhr.status,t.xhr.responseText))}}(this))},r.prototype.requestFailed=function(){return this.endRequest(function(t){return function(){return t.failed=!0,t.delegate.requestFailedWithStatusCode(t.constructor.NETWORK_FAILURE)}}(this))},r.prototype.requestTimedOut=function(){return this.endRequest(function(t){return function(){return t.failed=!0,t.delegate.requestFailedWithStatusCode(t.constructor.TIMEOUT_FAILURE)}}(this))},r.prototype.requestCanceled=function(){return this.endRequest()},r.prototype.notifyApplicationBeforeRequestStart=function(){return e.dispatch("turbolinks:request-start",{data:{url:this.url,xhr:this.xhr}})},r.prototype.notifyApplicationAfterRequestEnd=function(){return e.dispatch("turbolinks:request-end",{data:{url:this.url,xhr:this.xhr}})},r.prototype.createXHR=function(){return this.xhr=new XMLHttpRequest,this.xhr.open("GET",this.url,!0),this.xhr.timeout=1e3*this.constructor.timeout,this.xhr.setRequestHeader("Accept","text/html, application/xhtml+xml"),this.xhr.setRequestHeader("Turbolinks-Referrer",this.referrer),this.xhr.onprogress=this.requestProgressed,this.xhr.onload=this.requestLoaded,this.xhr.onerror=this.requestFailed,this.xhr.ontimeout=this.requestTimedOut,this.xhr.onabort=this.requestCanceled},r.prototype.endRequest=function(t){return this.xhr?(this.notifyApplicationAfterRequestEnd(),null!=t&&t.call(this),this.destroy()):void 0},r.prototype.setProgress=function(t){var e;return this.progress=t,"function"==typeof(e=this.delegate).requestProgressed?e.requestProgressed(this.progress):void 0},r.prototype.destroy=function(){var t;return this.setProgress(1),"function"==typeof(t=this.delegate).requestFinished&&t.requestFinished(),this.delegate=null,this.xhr=null},r}()}.call(this),function(){var t=function(t,e){return function(){return t.apply(e,arguments)}};e.ProgressBar=function(){function e(){this.trickle=t(this.trickle,this),this.stylesheetElement=this.createStylesheetElement(),this.progressElement=this.createProgressElement()}var r;return r=300,e.defaultCSS=".turbolinks-progress-bar {\n  position: fixed;\n  display: block;\n  top: 0;\n  left: 0;\n  height: 3px;\n  background: #0076ff;\n  z-index: 9999;\n  transition: width "+r+"ms ease-out, opacity "+r/2+"ms "+r/2+"ms ease-in;\n  transform: translate3d(0, 0, 0);\n}",e.prototype.show=function(){return this.visible?void 0:(this.visible=!0,this.installStylesheetElement(),this.installProgressElement(),this.startTrickling())},e.prototype.hide=function(){return this.visible&&!this.hiding?(this.hiding=!0,this.fadeProgressElement(function(t){return function(){return t.uninstallProgressElement(),t.stopTrickling(),t.visible=!1,t.hiding=!1}}(this))):void 0},e.prototype.setValue=function(t){return this.value=t,this.refresh()},e.prototype.installStylesheetElement=function(){return document.head.insertBefore(this.stylesheetElement,document.head.firstChild)},e.prototype.installProgressElement=function(){return this.progressElement.style.width=0,this.progressElement.style.opacity=1,document.documentElement.insertBefore(this.progressElement,document.body),this.refresh()},e.prototype.fadeProgressElement=function(t){return this.progressElement.style.opacity=0,setTimeout(t,1.5*r)},e.prototype.uninstallProgressElement=function(){return this.progressElement.parentNode?document.documentElement.removeChild(this.progressElement):void 0},e.prototype.startTrickling=function(){return null!=this.trickleInterval?this.trickleInterval:this.trickleInterval=setInterval(this.trickle,r)},e.prototype.stopTrickling=function(){return clearInterval(this.trickleInterval),this.trickleInterval=null},e.prototype.trickle=function(){return this.setValue(this.value+Math.random()/100)},e.prototype.refresh=function(){return requestAnimationFrame(function(t){return function(){return t.progressElement.style.width=10+90*t.value+"%"}}(this))},e.prototype.createStylesheetElement=function(){var t;return t=document.createElement("style"),t.type="text/css",t.textContent=this.constructor.defaultCSS,t},e.prototype.createProgressElement=function(){var t;return t=document.createElement("div"),t.className="turbolinks-progress-bar",t},e}()}.call(this),function(){var t=function(t,e){return function(){return t.apply(e,arguments)}};e.BrowserAdapter=function(){function r(r){this.controller=r,this.showProgressBar=t(this.showProgressBar,this),this.progressBar=new e.ProgressBar}var n,o,i;return i=e.HttpRequest,n=i.NETWORK_FAILURE,o=i.TIMEOUT_FAILURE,r.prototype.visitProposedToLocationWithAction=function(t,e){return this.controller.startVisitToLocationWithAction(t,e)},r.prototype.visitStarted=function(t){return t.issueRequest(),t.changeHistory(),t.loadCachedSnapshot()},r.prototype.visitRequestStarted=function(t){return this.progressBar.setValue(0),t.hasCachedSnapshot()||"restore"!==t.action?this.showProgressBarAfterDelay():this.showProgressBar()},r.prototype.visitRequestProgressed=function(t){return this.progressBar.setValue(t.progress)},r.prototype.visitRequestCompleted=function(t){return t.loadResponse()},r.prototype.visitRequestFailedWithStatusCode=function(t,e){switch(e){case n:case o:return this.reload();default:return t.loadResponse()}},r.prototype.visitRequestFinished=function(t){return this.hideProgressBar()},r.prototype.visitCompleted=function(t){return t.followRedirect()},r.prototype.pageInvalidated=function(){return this.reload()},r.prototype.showProgressBarAfterDelay=function(){return this.progressBarTimeout=setTimeout(this.showProgressBar,this.controller.progressBarDelay)},r.prototype.showProgressBar=function(){return this.progressBar.show()},r.prototype.hideProgressBar=function(){return this.progressBar.hide(),clearTimeout(this.progressBarTimeout)},r.prototype.reload=function(){return window.location.reload()},r}()}.call(this),function(){var t=function(t,e){return function(){return t.apply(e,arguments)}};e.History=function(){function r(e){this.delegate=e,this.onPageLoad=t(this.onPageLoad,this),this.onPopState=t(this.onPopState,this)}return r.prototype.start=function(){return this.started?void 0:(addEventListener("popstate",this.onPopState,!1),addEventListener("load",this.onPageLoad,!1),this.started=!0)},r.prototype.stop=function(){return this.started?(removeEventListener("popstate",this.onPopState,!1),removeEventListener("load",this.onPageLoad,!1),this.started=!1):void 0},r.prototype.push=function(t,r){return t=e.Location.wrap(t),this.update("push",t,r)},r.prototype.replace=function(t,r){return t=e.Location.wrap(t),this.update("replace",t,r)},r.prototype.onPopState=function(t){var r,n,o,i;return this.shouldHandlePopState()&&(i=null!=(n=t.state)?n.turbolinks:void 0)?(r=e.Location.wrap(window.location),o=i.restorationIdentifier,this.delegate.historyPoppedToLocationWithRestorationIdentifier(r,o)):void 0},r.prototype.onPageLoad=function(t){return e.defer(function(t){return function(){return t.pageLoaded=!0}}(this))},r.prototype.shouldHandlePopState=function(){return this.pageIsLoaded()},r.prototype.pageIsLoaded=function(){return this.pageLoaded||"complete"===document.readyState},r.prototype.update=function(t,e,r){var n;return n={turbolinks:{restorationIdentifier:r}},history[t+"State"](n,null,e)},r}()}.call(this),function(){e.HeadDetails=function(){function t(t){var e,r,n,s,a,u;for(this.elements={},n=0,a=t.length;a>n;n++)u=t[n],u.nodeType===Node.ELEMENT_NODE&&(s=u.outerHTML,r=null!=(e=this.elements)[s]?e[s]:e[s]={type:i(u),tracked:o(u),elements:[]},r.elements.push(u))}var e,r,n,o,i;return t.fromHeadElement=function(t){var e;return new this(null!=(e=null!=t?t.childNodes:void 0)?e:[])},t.prototype.hasElementWithKey=function(t){return t in this.elements},t.prototype.getTrackedElementSignature=function(){var t,e;return function(){var r,n;r=this.elements,n=[];for(t in r)e=r[t].tracked,e&&n.push(t);return n}.call(this).join("")},t.prototype.getScriptElementsNotInDetails=function(t){return this.getElementsMatchingTypeNotInDetails("script",t)},t.prototype.getStylesheetElementsNotInDetails=function(t){return this.getElementsMatchingTypeNotInDetails("stylesheet",t)},t.prototype.getElementsMatchingTypeNotInDetails=function(t,e){var r,n,o,i,s,a;o=this.elements,s=[];for(n in o)i=o[n],a=i.type,r=i.elements,a!==t||e.hasElementWithKey(n)||s.push(r[0]);return s},t.prototype.getProvisionalElements=function(){var t,e,r,n,o,i,s;r=[],n=this.elements;for(e in n)o=n[e],s=o.type,i=o.tracked,t=o.elements,null!=s||i?t.length>1&&r.push.apply(r,t.slice(1)):r.push.apply(r,t);return r},t.prototype.getMetaValue=function(t){var e;return null!=(e=this.findMetaElementByName(t))?e.getAttribute("content"):void 0},t.prototype.findMetaElementByName=function(t){var r,n,o,i;r=void 0,i=this.elements;for(o in i)n=i[o].elements,e(n[0],t)&&(r=n[0]);return r},i=function(t){return r(t)?"script":n(t)?"stylesheet":void 0},o=function(t){return"reload"===t.getAttribute("data-turbolinks-track")},r=function(t){var e;return e=t.tagName.toLowerCase(),"script"===e},n=function(t){var e;return e=t.tagName.toLowerCase(),"style"===e||"link"===e&&"stylesheet"===t.getAttribute("rel")},e=function(t,e){var r;return r=t.tagName.toLowerCase(),"meta"===r&&t.getAttribute("name")===e},t}()}.call(this),function(){e.Snapshot=function(){function t(t,e){this.headDetails=t,this.bodyElement=e}return t.wrap=function(t){return t instanceof this?t:"string"==typeof t?this.fromHTMLString(t):this.fromHTMLElement(t)},t.fromHTMLString=function(t){var e;return e=document.createElement("html"),e.innerHTML=t,this.fromHTMLElement(e)},t.fromHTMLElement=function(t){var r,n,o,i;return o=t.querySelector("head"),r=null!=(i=t.querySelector("body"))?i:document.createElement("body"),n=e.HeadDetails.fromHeadElement(o),new this(n,r)},t.prototype.clone=function(){return new this.constructor(this.headDetails,this.bodyElement.cloneNode(!0))},t.prototype.getRootLocation=function(){var t,r;return r=null!=(t=this.getSetting("root"))?t:"/",new e.Location(r)},t.prototype.getCacheControlValue=function(){return this.getSetting("cache-control")},t.prototype.getElementForAnchor=function(t){try{return this.bodyElement.querySelector("[id='"+t+"'], a[name='"+t+"']")}catch(e){}},t.prototype.getPermanentElements=function(){return this.bodyElement.querySelectorAll("[id][data-turbolinks-permanent]")},t.prototype.getPermanentElementById=function(t){return this.bodyElement.querySelector("#"+t+"[data-turbolinks-permanent]")},t.prototype.getPermanentElementsPresentInSnapshot=function(t){var e,r,n,o,i;for(o=this.getPermanentElements(),i=[],r=0,n=o.length;n>r;r++)e=o[r],t.getPermanentElementById(e.id)&&i.push(e);return i},t.prototype.findFirstAutofocusableElement=function(){return this.bodyElement.querySelector("[autofocus]")},t.prototype.hasAnchor=function(t){return null!=this.getElementForAnchor(t)},t.prototype.isPreviewable=function(){return"no-preview"!==this.getCacheControlValue()},t.prototype.isCacheable=function(){return"no-cache"!==this.getCacheControlValue()},t.prototype.isVisitable=function(){return"reload"!==this.getSetting("visit-control")},t.prototype.getSetting=function(t){return this.headDetails.getMetaValue("turbolinks-"+t)},t}()}.call(this),function(){var t=[].slice;e.Renderer=function(){function e(){}var r;return e.render=function(){var e,r,n,o;return n=arguments[0],r=arguments[1],e=3<=arguments.length?t.call(arguments,2):[],o=function(t,e,r){r.prototype=t.prototype;var n=new r,o=t.apply(n,e);return Object(o)===o?o:n}(this,e,function(){}),o.delegate=n,o.render(r),o},e.prototype.renderView=function(t){return this.delegate.viewWillRender(this.newBody),t(),this.delegate.viewRendered(this.newBody)},e.prototype.invalidateView=function(){return this.delegate.viewInvalidated()},e.prototype.createScriptElement=function(t){var e;return"false"===t.getAttribute("data-turbolinks-eval")?t:(e=document.createElement("script"),e.textContent=t.textContent,e.async=!1,r(e,t),e)},r=function(t,e){var r,n,o,i,s,a,u;for(i=e.attributes,a=[],r=0,n=i.length;n>r;r++)s=i[r],o=s.name,u=s.value,a.push(t.setAttribute(o,u));return a},e}()}.call(this),function(){var t,r,n=function(t,e){function r(){this.constructor=t}for(var n in e)o.call(e,n)&&(t[n]=e[n]);return r.prototype=e.prototype,t.prototype=new r,t.__super__=e.prototype,t},o={}.hasOwnProperty;e.SnapshotRenderer=function(e){function o(t,e,r){this.currentSnapshot=t,this.newSnapshot=e,this.isPreview=r,this.currentHeadDetails=this.currentSnapshot.headDetails,this.newHeadDetails=this.newSnapshot.headDetails,this.currentBody=this.currentSnapshot.bodyElement,this.newBody=this.newSnapshot.bodyElement}return n(o,e),o.prototype.render=function(t){return this.shouldRender()?(this.mergeHead(),this.renderView(function(e){return function(){return e.replaceBody(),e.isPreview||e.focusFirstAutofocusableElement(),t()}}(this))):this.invalidateView()},o.prototype.mergeHead=function(){return this.copyNewHeadStylesheetElements(),this.copyNewHeadScriptElements(),this.removeCurrentHeadProvisionalElements(),this.copyNewHeadProvisionalElements()},o.prototype.replaceBody=function(){var t;return t=this.relocateCurrentBodyPermanentElements(),this.activateNewBodyScriptElements(),this.assignNewBody(),this.replacePlaceholderElementsWithClonedPermanentElements(t)},o.prototype.shouldRender=function(){return this.newSnapshot.isVisitable()&&this.trackedElementsAreIdentical()},o.prototype.trackedElementsAreIdentical=function(){return this.currentHeadDetails.getTrackedElementSignature()===this.newHeadDetails.getTrackedElementSignature()},o.prototype.copyNewHeadStylesheetElements=function(){var t,e,r,n,o;for(n=this.getNewHeadStylesheetElements(),o=[],e=0,r=n.length;r>e;e++)t=n[e],o.push(document.head.appendChild(t));return o},o.prototype.copyNewHeadScriptElements=function(){var t,e,r,n,o;for(n=this.getNewHeadScriptElements(),o=[],e=0,r=n.length;r>e;e++)t=n[e],o.push(document.head.appendChild(this.createScriptElement(t)));return o},o.prototype.removeCurrentHeadProvisionalElements=function(){var t,e,r,n,o;for(n=this.getCurrentHeadProvisionalElements(),o=[],e=0,r=n.length;r>e;e++)t=n[e],o.push(document.head.removeChild(t));return o},o.prototype.copyNewHeadProvisionalElements=function(){var t,e,r,n,o;for(n=this.getNewHeadProvisionalElements(),o=[],e=0,r=n.length;r>e;e++)t=n[e],o.push(document.head.appendChild(t));return o},o.prototype.relocateCurrentBodyPermanentElements=function(){var e,n,o,i,s,a,u;for(a=this.getCurrentBodyPermanentElements(),u=[],e=0,n=a.length;n>e;e++)i=a[e],s=t(i),o=this.newSnapshot.getPermanentElementById(i.id),r(i,s.element),r(o,i),u.push(s);return u},o.prototype.replacePlaceholderElementsWithClonedPermanentElements=function(t){var e,n,o,i,s,a,u;for(u=[],o=0,i=t.length;i>o;o++)a=t[o],n=a.element,s=a.permanentElement,e=s.cloneNode(!0),u.push(r(n,e));return u},o.prototype.activateNewBodyScriptElements=function(){var t,e,n,o,i,s;for(i=this.getNewBodyScriptElements(),s=[],e=0,o=i.length;o>e;e++)n=i[e],t=this.createScriptElement(n),s.push(r(n,t));return s},o.prototype.assignNewBody=function(){return document.body=this.newBody},o.prototype.focusFirstAutofocusableElement=function(){var t;return null!=(t=this.newSnapshot.findFirstAutofocusableElement())?t.focus():void 0},o.prototype.getNewHeadStylesheetElements=function(){return this.newHeadDetails.getStylesheetElementsNotInDetails(this.currentHeadDetails)},o.prototype.getNewHeadScriptElements=function(){return this.newHeadDetails.getScriptElementsNotInDetails(this.currentHeadDetails)},o.prototype.getCurrentHeadProvisionalElements=function(){return this.currentHeadDetails.getProvisionalElements()},o.prototype.getNewHeadProvisionalElements=function(){return this.newHeadDetails.getProvisionalElements()},o.prototype.getCurrentBodyPermanentElements=function(){return this.currentSnapshot.getPermanentElementsPresentInSnapshot(this.newSnapshot)},o.prototype.getNewBodyScriptElements=function(){return this.newBody.querySelectorAll("script")},o}(e.Renderer),t=function(t){var e;return e=document.createElement("meta"),e.setAttribute("name","turbolinks-permanent-placeholder"),e.setAttribute("content",t.id),{element:e,permanentElement:t}},r=function(t,e){var r;return(r=t.parentNode)?r.replaceChild(e,t):void 0}}.call(this),function(){var t=function(t,e){function n(){this.constructor=t}for(var o in e)r.call(e,o)&&(t[o]=e[o]);return n.prototype=e.prototype,t.prototype=new n,t.__super__=e.prototype,t},r={}.hasOwnProperty;e.ErrorRenderer=function(e){function r(t){var e;e=document.createElement("html"),e.innerHTML=t,this.newHead=e.querySelector("head"),this.newBody=e.querySelector("body")}return t(r,e),r.prototype.render=function(t){return this.renderView(function(e){return function(){return e.replaceHeadAndBody(),e.activateBodyScriptElements(),t()}}(this))},r.prototype.replaceHeadAndBody=function(){var t,e;return e=document.head,t=document.body,e.parentNode.replaceChild(this.newHead,e),t.parentNode.replaceChild(this.newBody,t)},r.prototype.activateBodyScriptElements=function(){var t,e,r,n,o,i;for(n=this.getScriptElements(),i=[],e=0,r=n.length;r>e;e++)o=n[e],t=this.createScriptElement(o),i.push(o.parentNode.replaceChild(t,o));return i},r.prototype.getScriptElements=function(){return document.documentElement.querySelectorAll("script")},r}(e.Renderer)}.call(this),function(){e.View=function(){function t(t){this.delegate=t,this.htmlElement=document.documentElement}return t.prototype.getRootLocation=function(){return this.getSnapshot().getRootLocation()},t.prototype.getElementForAnchor=function(t){return this.getSnapshot().getElementForAnchor(t)},t.prototype.getSnapshot=function(){return e.Snapshot.fromHTMLElement(this.htmlElement)},t.prototype.render=function(t,e){var r,n,o;return o=t.snapshot,r=t.error,n=t.isPreview,this.markAsPreview(n),null!=o?this.renderSnapshot(o,n,e):this.renderError(r,e)},t.prototype.markAsPreview=function(t){return t?this.htmlElement.setAttribute("data-turbolinks-preview",""):this.htmlElement.removeAttribute("data-turbolinks-preview")},t.prototype.renderSnapshot=function(t,r,n){return e.SnapshotRenderer.render(this.delegate,n,this.getSnapshot(),e.Snapshot.wrap(t),r)},t.prototype.renderError=function(t,r){return e.ErrorRenderer.render(this.delegate,r,t)},t}()}.call(this),function(){var t=function(t,e){return function(){return t.apply(e,arguments)}};e.ScrollManager=function(){function r(r){this.delegate=r,this.onScroll=t(this.onScroll,this),this.onScroll=e.throttle(this.onScroll)}return r.prototype.start=function(){return this.started?void 0:(addEventListener("scroll",this.onScroll,!1),this.onScroll(),this.started=!0)},r.prototype.stop=function(){return this.started?(removeEventListener("scroll",this.onScroll,!1),this.started=!1):void 0},r.prototype.scrollToElement=function(t){return t.scrollIntoView()},r.prototype.scrollToPosition=function(t){var e,r;return e=t.x,r=t.y,window.scrollTo(e,r)},r.prototype.onScroll=function(t){return this.updatePosition({x:window.pageXOffset,y:window.pageYOffset})},r.prototype.updatePosition=function(t){var e;return this.position=t,null!=(e=this.delegate)?e.scrollPositionChanged(this.position):void 0},r}()}.call(this),function(){e.SnapshotCache=function(){function t(t){this.size=t,this.keys=[],this.snapshots={}}var r;return t.prototype.has=function(t){var e;return e=r(t),e in this.snapshots},t.prototype.get=function(t){var e;if(this.has(t))return e=this.read(t),this.touch(t),e},t.prototype.put=function(t,e){return this.write(t,e),this.touch(t),e},t.prototype.read=function(t){var e;return e=r(t),this.snapshots[e]},t.prototype.write=function(t,e){var n;return n=r(t),this.snapshots[n]=e},t.prototype.touch=function(t){var e,n;return n=r(t),e=this.keys.indexOf(n),e>-1&&this.keys.splice(e,1),this.keys.unshift(n),this.trim()},t.prototype.trim=function(){var t,e,r,n,o;for(n=this.keys.splice(this.size),o=[],t=0,r=n.length;r>t;t++)e=n[t],o.push(delete this.snapshots[e]);return o},r=function(t){return e.Location.wrap(t).toCacheKey()},t}()}.call(this),function(){var t=function(t,e){return function(){return t.apply(e,arguments)}};e.Visit=function(){function r(r,n,o){this.controller=r,this.action=o,this.performScroll=t(this.performScroll,this),this.identifier=e.uuid(),this.location=e.Location.wrap(n),this.adapter=this.controller.adapter,this.state="initialized",this.timingMetrics={}}var n;return r.prototype.start=function(){return"initialized"===this.state?(this.recordTimingMetric("visitStart"),this.state="started",this.adapter.visitStarted(this)):void 0},r.prototype.cancel=function(){var t;return"started"===this.state?(null!=(t=this.request)&&t.cancel(),this.cancelRender(),this.state="canceled"):void 0},r.prototype.complete=function(){var t;return"started"===this.state?(this.recordTimingMetric("visitEnd"),this.state="completed","function"==typeof(t=this.adapter).visitCompleted&&t.visitCompleted(this),this.controller.visitCompleted(this)):void 0},r.prototype.fail=function(){var t;return"started"===this.state?(this.state="failed","function"==typeof(t=this.adapter).visitFailed?t.visitFailed(this):void 0):void 0},r.prototype.changeHistory=function(){var t,e;return this.historyChanged?void 0:(t=this.location.isEqualTo(this.referrer)?"replace":this.action,e=n(t),this.controller[e](this.location,this.restorationIdentifier),this.historyChanged=!0)},r.prototype.issueRequest=function(){return this.shouldIssueRequest()&&null==this.request?(this.progress=0,this.request=new e.HttpRequest(this,this.location,this.referrer),this.request.send()):void 0},r.prototype.getCachedSnapshot=function(){var t;return!(t=this.controller.getCachedSnapshotForLocation(this.location))||null!=this.location.anchor&&!t.hasAnchor(this.location.anchor)||"restore"!==this.action&&!t.isPreviewable()?void 0:t},r.prototype.hasCachedSnapshot=function(){return null!=this.getCachedSnapshot()},r.prototype.loadCachedSnapshot=function(){var t,e;return(e=this.getCachedSnapshot())?(t=this.shouldIssueRequest(),this.render(function(){var r;return this.cacheSnapshot(),this.controller.render({snapshot:e,isPreview:t},this.performScroll),"function"==typeof(r=this.adapter).visitRendered&&r.visitRendered(this),t?void 0:this.complete()})):void 0},r.prototype.loadResponse=function(){return null!=this.response?this.render(function(){var t,e;return this.cacheSnapshot(),this.request.failed?(this.controller.render({error:this.response},this.performScroll),"function"==typeof(t=this.adapter).visitRendered&&t.visitRendered(this),this.fail()):(this.controller.render({snapshot:this.response},this.performScroll),"function"==typeof(e=this.adapter).visitRendered&&e.visitRendered(this),this.complete())}):void 0},r.prototype.followRedirect=function(){return this.redirectedToLocation&&!this.followedRedirect?(this.location=this.redirectedToLocation,this.controller.replaceHistoryWithLocationAndRestorationIdentifier(this.redirectedToLocation,this.restorationIdentifier),this.followedRedirect=!0):void 0},r.prototype.requestStarted=function(){var t;return this.recordTimingMetric("requestStart"),"function"==typeof(t=this.adapter).visitRequestStarted?t.visitRequestStarted(this):void 0},r.prototype.requestProgressed=function(t){var e;return this.progress=t,"function"==typeof(e=this.adapter).visitRequestProgressed?e.visitRequestProgressed(this):void 0},r.prototype.requestCompletedWithResponse=function(t,r){return this.response=t,null!=r&&(this.redirectedToLocation=e.Location.wrap(r)),this.adapter.visitRequestCompleted(this)},r.prototype.requestFailedWithStatusCode=function(t,e){return this.response=e,this.adapter.visitRequestFailedWithStatusCode(this,t)},r.prototype.requestFinished=function(){var t;return this.recordTimingMetric("requestEnd"),"function"==typeof(t=this.adapter).visitRequestFinished?t.visitRequestFinished(this):void 0},r.prototype.performScroll=function(){return this.scrolled?void 0:("restore"===this.action?this.scrollToRestoredPosition()||this.scrollToTop():this.scrollToAnchor()||this.scrollToTop(),this.scrolled=!0)},r.prototype.scrollToRestoredPosition=function(){var t,e;return t=null!=(e=this.restorationData)?e.scrollPosition:void 0,null!=t?(this.controller.scrollToPosition(t),!0):void 0},r.prototype.scrollToAnchor=function(){return null!=this.location.anchor?(this.controller.scrollToAnchor(this.location.anchor),!0):void 0},r.prototype.scrollToTop=function(){return this.controller.scrollToPosition({x:0,y:0})},r.prototype.recordTimingMetric=function(t){var e;return null!=(e=this.timingMetrics)[t]?e[t]:e[t]=(new Date).getTime()},r.prototype.getTimingMetrics=function(){return e.copyObject(this.timingMetrics)},n=function(t){switch(t){case"replace":return"replaceHistoryWithLocationAndRestorationIdentifier";case"advance":case"restore":return"pushHistoryWithLocationAndRestorationIdentifier"}},r.prototype.shouldIssueRequest=function(){return"restore"===this.action?!this.hasCachedSnapshot():!0},r.prototype.cacheSnapshot=function(){return this.snapshotCached?void 0:(this.controller.cacheSnapshot(),this.snapshotCached=!0)},r.prototype.render=function(t){return this.cancelRender(),this.frame=requestAnimationFrame(function(e){return function(){return e.frame=null,t.call(e)}}(this))},r.prototype.cancelRender=function(){return this.frame?cancelAnimationFrame(this.frame):void 0},r}()}.call(this),function(){var t=function(t,e){return function(){return t.apply(e,arguments)}};e.Controller=function(){function r(){this.clickBubbled=t(this.clickBubbled,this),this.clickCaptured=t(this.clickCaptured,this),this.pageLoaded=t(this.pageLoaded,this),this.history=new e.History(this),this.view=new e.View(this),this.scrollManager=new e.ScrollManager(this),this.restorationData={},this.clearCache(),this.setProgressBarDelay(500)}return r.prototype.start=function(){return e.supported&&!this.started?(addEventListener("click",this.clickCaptured,!0),addEventListener("DOMContentLoaded",this.pageLoaded,!1),this.scrollManager.start(),this.startHistory(),this.started=!0,this.enabled=!0):void 0},r.prototype.disable=function(){return this.enabled=!1},r.prototype.stop=function(){return this.started?(removeEventListener("click",this.clickCaptured,!0),removeEventListener("DOMContentLoaded",this.pageLoaded,!1),this.scrollManager.stop(),this.stopHistory(),this.started=!1):void 0},r.prototype.clearCache=function(){return this.cache=new e.SnapshotCache(10)},r.prototype.visit=function(t,r){var n,o;return null==r&&(r={}),t=e.Location.wrap(t),this.applicationAllowsVisitingLocation(t)?this.locationIsVisitable(t)?(n=null!=(o=r.action)?o:"advance",this.adapter.visitProposedToLocationWithAction(t,n)):window.location=t:void 0},r.prototype.startVisitToLocationWithAction=function(t,r,n){var o;return e.supported?(o=this.getRestorationDataForIdentifier(n),this.startVisit(t,r,{restorationData:o})):window.location=t},r.prototype.setProgressBarDelay=function(t){return this.progressBarDelay=t},r.prototype.startHistory=function(){return this.location=e.Location.wrap(window.location),this.restorationIdentifier=e.uuid(),this.history.start(),this.history.replace(this.location,this.restorationIdentifier)},r.prototype.stopHistory=function(){return this.history.stop()},r.prototype.pushHistoryWithLocationAndRestorationIdentifier=function(t,r){return this.restorationIdentifier=r,this.location=e.Location.wrap(t),this.history.push(this.location,this.restorationIdentifier)},r.prototype.replaceHistoryWithLocationAndRestorationIdentifier=function(t,r){return this.restorationIdentifier=r,this.location=e.Location.wrap(t),this.history.replace(this.location,this.restorationIdentifier)},r.prototype.historyPoppedToLocationWithRestorationIdentifier=function(t,r){var n;return this.restorationIdentifier=r,this.enabled?(n=this.getRestorationDataForIdentifier(this.restorationIdentifier),this.startVisit(t,"restore",{restorationIdentifier:this.restorationIdentifier,restorationData:n,historyChanged:!0}),this.location=e.Location.wrap(t)):this.adapter.pageInvalidated()},r.prototype.getCachedSnapshotForLocation=function(t){var e;return null!=(e=this.cache.get(t))?e.clone():void 0},r.prototype.shouldCacheSnapshot=function(){return this.view.getSnapshot().isCacheable();
},r.prototype.cacheSnapshot=function(){var t,r;return this.shouldCacheSnapshot()?(this.notifyApplicationBeforeCachingSnapshot(),r=this.view.getSnapshot(),t=this.lastRenderedLocation,e.defer(function(e){return function(){return e.cache.put(t,r.clone())}}(this))):void 0},r.prototype.scrollToAnchor=function(t){var e;return(e=this.view.getElementForAnchor(t))?this.scrollToElement(e):this.scrollToPosition({x:0,y:0})},r.prototype.scrollToElement=function(t){return this.scrollManager.scrollToElement(t)},r.prototype.scrollToPosition=function(t){return this.scrollManager.scrollToPosition(t)},r.prototype.scrollPositionChanged=function(t){var e;return e=this.getCurrentRestorationData(),e.scrollPosition=t},r.prototype.render=function(t,e){return this.view.render(t,e)},r.prototype.viewInvalidated=function(){return this.adapter.pageInvalidated()},r.prototype.viewWillRender=function(t){return this.notifyApplicationBeforeRender(t)},r.prototype.viewRendered=function(){return this.lastRenderedLocation=this.currentVisit.location,this.notifyApplicationAfterRender()},r.prototype.pageLoaded=function(){return this.lastRenderedLocation=this.location,this.notifyApplicationAfterPageLoad()},r.prototype.clickCaptured=function(){return removeEventListener("click",this.clickBubbled,!1),addEventListener("click",this.clickBubbled,!1)},r.prototype.clickBubbled=function(t){var e,r,n;return this.enabled&&this.clickEventIsSignificant(t)&&(r=this.getVisitableLinkForNode(t.target))&&(n=this.getVisitableLocationForLink(r))&&this.applicationAllowsFollowingLinkToLocation(r,n)?(t.preventDefault(),e=this.getActionForLink(r),this.visit(n,{action:e})):void 0},r.prototype.applicationAllowsFollowingLinkToLocation=function(t,e){var r;return r=this.notifyApplicationAfterClickingLinkToLocation(t,e),!r.defaultPrevented},r.prototype.applicationAllowsVisitingLocation=function(t){var e;return e=this.notifyApplicationBeforeVisitingLocation(t),!e.defaultPrevented},r.prototype.notifyApplicationAfterClickingLinkToLocation=function(t,r){return e.dispatch("turbolinks:click",{target:t,data:{url:r.absoluteURL},cancelable:!0})},r.prototype.notifyApplicationBeforeVisitingLocation=function(t){return e.dispatch("turbolinks:before-visit",{data:{url:t.absoluteURL},cancelable:!0})},r.prototype.notifyApplicationAfterVisitingLocation=function(t){return e.dispatch("turbolinks:visit",{data:{url:t.absoluteURL}})},r.prototype.notifyApplicationBeforeCachingSnapshot=function(){return e.dispatch("turbolinks:before-cache")},r.prototype.notifyApplicationBeforeRender=function(t){return e.dispatch("turbolinks:before-render",{data:{newBody:t}})},r.prototype.notifyApplicationAfterRender=function(){return e.dispatch("turbolinks:render")},r.prototype.notifyApplicationAfterPageLoad=function(t){return null==t&&(t={}),e.dispatch("turbolinks:load",{data:{url:this.location.absoluteURL,timing:t}})},r.prototype.startVisit=function(t,e,r){var n;return null!=(n=this.currentVisit)&&n.cancel(),this.currentVisit=this.createVisit(t,e,r),this.currentVisit.start(),this.notifyApplicationAfterVisitingLocation(t)},r.prototype.createVisit=function(t,r,n){var o,i,s,a,u;return i=null!=n?n:{},a=i.restorationIdentifier,s=i.restorationData,o=i.historyChanged,u=new e.Visit(this,t,r),u.restorationIdentifier=null!=a?a:e.uuid(),u.restorationData=e.copyObject(s),u.historyChanged=o,u.referrer=this.location,u},r.prototype.visitCompleted=function(t){return this.notifyApplicationAfterPageLoad(t.getTimingMetrics())},r.prototype.clickEventIsSignificant=function(t){return!(t.defaultPrevented||t.target.isContentEditable||t.which>1||t.altKey||t.ctrlKey||t.metaKey||t.shiftKey)},r.prototype.getVisitableLinkForNode=function(t){return this.nodeIsVisitable(t)?e.closest(t,"a[href]:not([target]):not([download])"):void 0},r.prototype.getVisitableLocationForLink=function(t){var r;return r=new e.Location(t.getAttribute("href")),this.locationIsVisitable(r)?r:void 0},r.prototype.getActionForLink=function(t){var e;return null!=(e=t.getAttribute("data-turbolinks-action"))?e:"advance"},r.prototype.nodeIsVisitable=function(t){var r;return(r=e.closest(t,"[data-turbolinks]"))?"false"!==r.getAttribute("data-turbolinks"):!0},r.prototype.locationIsVisitable=function(t){return t.isPrefixedBy(this.view.getRootLocation())&&t.isHTML()},r.prototype.getCurrentRestorationData=function(){return this.getRestorationDataForIdentifier(this.restorationIdentifier)},r.prototype.getRestorationDataForIdentifier=function(t){var e;return null!=(e=this.restorationData)[t]?e[t]:e[t]={}},r}()}.call(this),function(){!function(){var t,e;if((t=e=document.currentScript)&&!e.hasAttribute("data-turbolinks-suppress-warning"))for(;t=t.parentNode;)if(t===document.body)return console.warn("You are loading Turbolinks from a <script> element inside the <body> element. This is probably not what you meant to do!\n\nLoad your application\u2019s JavaScript bundle inside the <head> element instead. <script> elements in <body> are evaluated with each page change.\n\nFor more information, see: https://github.com/turbolinks/turbolinks#working-with-script-elements\n\n\u2014\u2014\nSuppress this warning by adding a `data-turbolinks-suppress-warning` attribute to: %s",e.outerHTML)}()}.call(this),function(){var t,r,n;e.start=function(){return r()?(null==e.controller&&(e.controller=t()),e.controller.start()):void 0},r=function(){return null==window.Turbolinks&&(window.Turbolinks=e),n()},t=function(){var t;return t=new e.Controller,t.adapter=new e.BrowserAdapter(t),t},n=function(){return window.Turbolinks===e},n()&&e.start()}.call(this)}).call(this),"object"==typeof module&&module.exports?module.exports=e:"function"==typeof define&&define.amd&&define(e)}).call(this);
/*!
 * Datepicker for Bootstrap v1.8.0 (https://github.com/uxsolutions/bootstrap-datepicker)
 *
 * Licensed under the Apache License v2.0 (http://www.apache.org/licenses/LICENSE-2.0)
 */


(function(factory){
    if (typeof define === 'function' && define.amd) {
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        factory(require('jquery'));
    } else {
        factory(jQuery);
    }
}(function($, undefined){
	function UTCDate(){
		return new Date(Date.UTC.apply(Date, arguments));
	}
	function UTCToday(){
		var today = new Date();
		return UTCDate(today.getFullYear(), today.getMonth(), today.getDate());
	}
	function isUTCEquals(date1, date2) {
		return (
			date1.getUTCFullYear() === date2.getUTCFullYear() &&
			date1.getUTCMonth() === date2.getUTCMonth() &&
			date1.getUTCDate() === date2.getUTCDate()
		);
	}
	function alias(method, deprecationMsg){
		return function(){
			if (deprecationMsg !== undefined) {
				$.fn.datepicker.deprecated(deprecationMsg);
			}

			return this[method].apply(this, arguments);
		};
	}
	function isValidDate(d) {
		return d && !isNaN(d.getTime());
	}

	var DateArray = (function(){
		var extras = {
			get: function(i){
				return this.slice(i)[0];
			},
			contains: function(d){
				// Array.indexOf is not cross-browser;
				// $.inArray doesn't work with Dates
				var val = d && d.valueOf();
				for (var i=0, l=this.length; i < l; i++)
          // Use date arithmetic to allow dates with different times to match
          if (0 <= this[i].valueOf() - val && this[i].valueOf() - val < 1000*60*60*24)
						return i;
				return -1;
			},
			remove: function(i){
				this.splice(i,1);
			},
			replace: function(new_array){
				if (!new_array)
					return;
				if (!$.isArray(new_array))
					new_array = [new_array];
				this.clear();
				this.push.apply(this, new_array);
			},
			clear: function(){
				this.length = 0;
			},
			copy: function(){
				var a = new DateArray();
				a.replace(this);
				return a;
			}
		};

		return function(){
			var a = [];
			a.push.apply(a, arguments);
			$.extend(a, extras);
			return a;
		};
	})();


	// Picker object

	var Datepicker = function(element, options){
		$.data(element, 'datepicker', this);
		this._process_options(options);

		this.dates = new DateArray();
		this.viewDate = this.o.defaultViewDate;
		this.focusDate = null;

		this.element = $(element);
		this.isInput = this.element.is('input');
		this.inputField = this.isInput ? this.element : this.element.find('input');
		this.component = this.element.hasClass('date') ? this.element.find('.add-on, .input-group-addon, .btn') : false;
		if (this.component && this.component.length === 0)
			this.component = false;
		this.isInline = !this.component && this.element.is('div');

		this.picker = $(DPGlobal.template);

		// Checking templates and inserting
		if (this._check_template(this.o.templates.leftArrow)) {
			this.picker.find('.prev').html(this.o.templates.leftArrow);
		}

		if (this._check_template(this.o.templates.rightArrow)) {
			this.picker.find('.next').html(this.o.templates.rightArrow);
		}

		this._buildEvents();
		this._attachEvents();

		if (this.isInline){
			this.picker.addClass('datepicker-inline').appendTo(this.element);
		}
		else {
			this.picker.addClass('datepicker-dropdown dropdown-menu');
		}

		if (this.o.rtl){
			this.picker.addClass('datepicker-rtl');
		}

		if (this.o.calendarWeeks) {
			this.picker.find('.datepicker-days .datepicker-switch, thead .datepicker-title, tfoot .today, tfoot .clear')
				.attr('colspan', function(i, val){
					return Number(val) + 1;
				});
		}

		this._process_options({
			startDate: this._o.startDate,
			endDate: this._o.endDate,
			daysOfWeekDisabled: this.o.daysOfWeekDisabled,
			daysOfWeekHighlighted: this.o.daysOfWeekHighlighted,
			datesDisabled: this.o.datesDisabled
		});

		this._allow_update = false;
		this.setViewMode(this.o.startView);
		this._allow_update = true;

		this.fillDow();
		this.fillMonths();

		this.update();

		if (this.isInline){
			this.show();
		}
	};

	Datepicker.prototype = {
		constructor: Datepicker,

		_resolveViewName: function(view){
			$.each(DPGlobal.viewModes, function(i, viewMode){
				if (view === i || $.inArray(view, viewMode.names) !== -1){
					view = i;
					return false;
				}
			});

			return view;
		},

		_resolveDaysOfWeek: function(daysOfWeek){
			if (!$.isArray(daysOfWeek))
				daysOfWeek = daysOfWeek.split(/[,\s]*/);
			return $.map(daysOfWeek, Number);
		},

		_check_template: function(tmp){
			try {
				// If empty
				if (tmp === undefined || tmp === "") {
					return false;
				}
				// If no html, everything ok
				if ((tmp.match(/[<>]/g) || []).length <= 0) {
					return true;
				}
				// Checking if html is fine
				var jDom = $(tmp);
				return jDom.length > 0;
			}
			catch (ex) {
				return false;
			}
		},

		_process_options: function(opts){
			// Store raw options for reference
			this._o = $.extend({}, this._o, opts);
			// Processed options
			var o = this.o = $.extend({}, this._o);

			// Check if "de-DE" style date is available, if not language should
			// fallback to 2 letter code eg "de"
			var lang = o.language;
			if (!dates[lang]){
				lang = lang.split('-')[0];
				if (!dates[lang])
					lang = defaults.language;
			}
			o.language = lang;

			// Retrieve view index from any aliases
			o.startView = this._resolveViewName(o.startView);
			o.minViewMode = this._resolveViewName(o.minViewMode);
			o.maxViewMode = this._resolveViewName(o.maxViewMode);

			// Check view is between min and max
			o.startView = Math.max(this.o.minViewMode, Math.min(this.o.maxViewMode, o.startView));

			// true, false, or Number > 0
			if (o.multidate !== true){
				o.multidate = Number(o.multidate) || false;
				if (o.multidate !== false)
					o.multidate = Math.max(0, o.multidate);
			}
			o.multidateSeparator = String(o.multidateSeparator);

			o.weekStart %= 7;
			o.weekEnd = (o.weekStart + 6) % 7;

			var format = DPGlobal.parseFormat(o.format);
			if (o.startDate !== -Infinity){
				if (!!o.startDate){
					if (o.startDate instanceof Date)
						o.startDate = this._local_to_utc(this._zero_time(o.startDate));
					else
						o.startDate = DPGlobal.parseDate(o.startDate, format, o.language, o.assumeNearbyYear);
				}
				else {
					o.startDate = -Infinity;
				}
			}
			if (o.endDate !== Infinity){
				if (!!o.endDate){
					if (o.endDate instanceof Date)
						o.endDate = this._local_to_utc(this._zero_time(o.endDate));
					else
						o.endDate = DPGlobal.parseDate(o.endDate, format, o.language, o.assumeNearbyYear);
				}
				else {
					o.endDate = Infinity;
				}
			}

			o.daysOfWeekDisabled = this._resolveDaysOfWeek(o.daysOfWeekDisabled||[]);
			o.daysOfWeekHighlighted = this._resolveDaysOfWeek(o.daysOfWeekHighlighted||[]);

			o.datesDisabled = o.datesDisabled||[];
			if (!$.isArray(o.datesDisabled)) {
				o.datesDisabled = o.datesDisabled.split(',');
			}
			o.datesDisabled = $.map(o.datesDisabled, function(d){
				return DPGlobal.parseDate(d, format, o.language, o.assumeNearbyYear);
			});

			var plc = String(o.orientation).toLowerCase().split(/\s+/g),
				_plc = o.orientation.toLowerCase();
			plc = $.grep(plc, function(word){
				return /^auto|left|right|top|bottom$/.test(word);
			});
			o.orientation = {x: 'auto', y: 'auto'};
			if (!_plc || _plc === 'auto')
				; // no action
			else if (plc.length === 1){
				switch (plc[0]){
					case 'top':
					case 'bottom':
						o.orientation.y = plc[0];
						break;
					case 'left':
					case 'right':
						o.orientation.x = plc[0];
						break;
				}
			}
			else {
				_plc = $.grep(plc, function(word){
					return /^left|right$/.test(word);
				});
				o.orientation.x = _plc[0] || 'auto';

				_plc = $.grep(plc, function(word){
					return /^top|bottom$/.test(word);
				});
				o.orientation.y = _plc[0] || 'auto';
			}
			if (o.defaultViewDate instanceof Date || typeof o.defaultViewDate === 'string') {
				o.defaultViewDate = DPGlobal.parseDate(o.defaultViewDate, format, o.language, o.assumeNearbyYear);
			} else if (o.defaultViewDate) {
				var year = o.defaultViewDate.year || new Date().getFullYear();
				var month = o.defaultViewDate.month || 0;
				var day = o.defaultViewDate.day || 1;
				o.defaultViewDate = UTCDate(year, month, day);
			} else {
				o.defaultViewDate = UTCToday();
			}
		},
		_events: [],
		_secondaryEvents: [],
		_applyEvents: function(evs){
			for (var i=0, el, ch, ev; i < evs.length; i++){
				el = evs[i][0];
				if (evs[i].length === 2){
					ch = undefined;
					ev = evs[i][1];
				} else if (evs[i].length === 3){
					ch = evs[i][1];
					ev = evs[i][2];
				}
				el.on(ev, ch);
			}
		},
		_unapplyEvents: function(evs){
			for (var i=0, el, ev, ch; i < evs.length; i++){
				el = evs[i][0];
				if (evs[i].length === 2){
					ch = undefined;
					ev = evs[i][1];
				} else if (evs[i].length === 3){
					ch = evs[i][1];
					ev = evs[i][2];
				}
				el.off(ev, ch);
			}
		},
		_buildEvents: function(){
            var events = {
                keyup: $.proxy(function(e){
                    if ($.inArray(e.keyCode, [27, 37, 39, 38, 40, 32, 13, 9]) === -1)
                        this.update();
                }, this),
                keydown: $.proxy(this.keydown, this),
                paste: $.proxy(this.paste, this)
            };

            if (this.o.showOnFocus === true) {
                events.focus = $.proxy(this.show, this);
            }

            if (this.isInput) { // single input
                this._events = [
                    [this.element, events]
                ];
            }
            // component: input + button
            else if (this.component && this.inputField.length) {
                this._events = [
                    // For components that are not readonly, allow keyboard nav
                    [this.inputField, events],
                    [this.component, {
                        click: $.proxy(this.show, this)
                    }]
                ];
            }
			else {
				this._events = [
					[this.element, {
						click: $.proxy(this.show, this),
						keydown: $.proxy(this.keydown, this)
					}]
				];
			}
			this._events.push(
				// Component: listen for blur on element descendants
				[this.element, '*', {
					blur: $.proxy(function(e){
						this._focused_from = e.target;
					}, this)
				}],
				// Input: listen for blur on element
				[this.element, {
					blur: $.proxy(function(e){
						this._focused_from = e.target;
					}, this)
				}]
			);

			if (this.o.immediateUpdates) {
				// Trigger input updates immediately on changed year/month
				this._events.push([this.element, {
					'changeYear changeMonth': $.proxy(function(e){
						this.update(e.date);
					}, this)
				}]);
			}

			this._secondaryEvents = [
				[this.picker, {
					click: $.proxy(this.click, this)
				}],
				[this.picker, '.prev, .next', {
					click: $.proxy(this.navArrowsClick, this)
				}],
				[this.picker, '.day:not(.disabled)', {
					click: $.proxy(this.dayCellClick, this)
				}],
				[$(window), {
					resize: $.proxy(this.place, this)
				}],
				[$(document), {
					'mousedown touchstart': $.proxy(function(e){
						// Clicked outside the datepicker, hide it
						if (!(
							this.element.is(e.target) ||
							this.element.find(e.target).length ||
							this.picker.is(e.target) ||
							this.picker.find(e.target).length ||
							this.isInline
						)){
							this.hide();
						}
					}, this)
				}]
			];
		},
		_attachEvents: function(){
			this._detachEvents();
			this._applyEvents(this._events);
		},
		_detachEvents: function(){
			this._unapplyEvents(this._events);
		},
		_attachSecondaryEvents: function(){
			this._detachSecondaryEvents();
			this._applyEvents(this._secondaryEvents);
		},
		_detachSecondaryEvents: function(){
			this._unapplyEvents(this._secondaryEvents);
		},
		_trigger: function(event, altdate){
			var date = altdate || this.dates.get(-1),
				local_date = this._utc_to_local(date);

			this.element.trigger({
				type: event,
				date: local_date,
				viewMode: this.viewMode,
				dates: $.map(this.dates, this._utc_to_local),
				format: $.proxy(function(ix, format){
					if (arguments.length === 0){
						ix = this.dates.length - 1;
						format = this.o.format;
					} else if (typeof ix === 'string'){
						format = ix;
						ix = this.dates.length - 1;
					}
					format = format || this.o.format;
					var date = this.dates.get(ix);
					return DPGlobal.formatDate(date, format, this.o.language);
				}, this)
			});
		},

		show: function(){
			if (this.inputField.prop('disabled') || (this.inputField.prop('readonly') && this.o.enableOnReadonly === false))
				return;
			if (!this.isInline)
				this.picker.appendTo(this.o.container);
			this.place();
			this.picker.show();
			this._attachSecondaryEvents();
			this._trigger('show');
			if ((window.navigator.msMaxTouchPoints || 'ontouchstart' in document) && this.o.disableTouchKeyboard) {
				$(this.element).blur();
			}
			return this;
		},

		hide: function(){
			if (this.isInline || !this.picker.is(':visible'))
				return this;
			this.focusDate = null;
			this.picker.hide().detach();
			this._detachSecondaryEvents();
			this.setViewMode(this.o.startView);

			if (this.o.forceParse && this.inputField.val())
				this.setValue();
			this._trigger('hide');
			return this;
		},

		destroy: function(){
			this.hide();
			this._detachEvents();
			this._detachSecondaryEvents();
			this.picker.remove();
			delete this.element.data().datepicker;
			if (!this.isInput){
				delete this.element.data().date;
			}
			return this;
		},

		paste: function(e){
			var dateString;
			if (e.originalEvent.clipboardData && e.originalEvent.clipboardData.types
				&& $.inArray('text/plain', e.originalEvent.clipboardData.types) !== -1) {
				dateString = e.originalEvent.clipboardData.getData('text/plain');
			} else if (window.clipboardData) {
				dateString = window.clipboardData.getData('Text');
			} else {
				return;
			}
			this.setDate(dateString);
			this.update();
			e.preventDefault();
		},

		_utc_to_local: function(utc){
			if (!utc) {
				return utc;
			}

			var local = new Date(utc.getTime() + (utc.getTimezoneOffset() * 60000));

			if (local.getTimezoneOffset() !== utc.getTimezoneOffset()) {
				local = new Date(utc.getTime() + (local.getTimezoneOffset() * 60000));
			}

			return local;
		},
		_local_to_utc: function(local){
			return local && new Date(local.getTime() - (local.getTimezoneOffset()*60000));
		},
		_zero_time: function(local){
			return local && new Date(local.getFullYear(), local.getMonth(), local.getDate());
		},
		_zero_utc_time: function(utc){
			return utc && UTCDate(utc.getUTCFullYear(), utc.getUTCMonth(), utc.getUTCDate());
		},

		getDates: function(){
			return $.map(this.dates, this._utc_to_local);
		},

		getUTCDates: function(){
			return $.map(this.dates, function(d){
				return new Date(d);
			});
		},

		getDate: function(){
			return this._utc_to_local(this.getUTCDate());
		},

		getUTCDate: function(){
			var selected_date = this.dates.get(-1);
			if (selected_date !== undefined) {
				return new Date(selected_date);
			} else {
				return null;
			}
		},

		clearDates: function(){
			this.inputField.val('');
			this.update();
			this._trigger('changeDate');

			if (this.o.autoclose) {
				this.hide();
			}
		},

		setDates: function(){
			var args = $.isArray(arguments[0]) ? arguments[0] : arguments;
			this.update.apply(this, args);
			this._trigger('changeDate');
			this.setValue();
			return this;
		},

		setUTCDates: function(){
			var args = $.isArray(arguments[0]) ? arguments[0] : arguments;
			this.setDates.apply(this, $.map(args, this._utc_to_local));
			return this;
		},

		setDate: alias('setDates'),
		setUTCDate: alias('setUTCDates'),
		remove: alias('destroy', 'Method `remove` is deprecated and will be removed in version 2.0. Use `destroy` instead'),

		setValue: function(){
			var formatted = this.getFormattedDate();
			this.inputField.val(formatted);
			return this;
		},

		getFormattedDate: function(format){
			if (format === undefined)
				format = this.o.format;

			var lang = this.o.language;
			return $.map(this.dates, function(d){
				return DPGlobal.formatDate(d, format, lang);
			}).join(this.o.multidateSeparator);
		},

		getStartDate: function(){
			return this.o.startDate;
		},

		setStartDate: function(startDate){
			this._process_options({startDate: startDate});
			this.update();
			this.updateNavArrows();
			return this;
		},

		getEndDate: function(){
			return this.o.endDate;
		},

		setEndDate: function(endDate){
			this._process_options({endDate: endDate});
			this.update();
			this.updateNavArrows();
			return this;
		},

		setDaysOfWeekDisabled: function(daysOfWeekDisabled){
			this._process_options({daysOfWeekDisabled: daysOfWeekDisabled});
			this.update();
			return this;
		},

		setDaysOfWeekHighlighted: function(daysOfWeekHighlighted){
			this._process_options({daysOfWeekHighlighted: daysOfWeekHighlighted});
			this.update();
			return this;
		},

		setDatesDisabled: function(datesDisabled){
			this._process_options({datesDisabled: datesDisabled});
			this.update();
			return this;
		},

		place: function(){
			if (this.isInline)
				return this;
			var calendarWidth = this.picker.outerWidth(),
				calendarHeight = this.picker.outerHeight(),
				visualPadding = 10,
				container = $(this.o.container),
				windowWidth = container.width(),
				scrollTop = this.o.container === 'body' ? $(document).scrollTop() : container.scrollTop(),
				appendOffset = container.offset();

			var parentsZindex = [0];
			this.element.parents().each(function(){
				var itemZIndex = $(this).css('z-index');
				if (itemZIndex !== 'auto' && Number(itemZIndex) !== 0) parentsZindex.push(Number(itemZIndex));
			});
			var zIndex = Math.max.apply(Math, parentsZindex) + this.o.zIndexOffset;
			var offset = this.component ? this.component.parent().offset() : this.element.offset();
			var height = this.component ? this.component.outerHeight(true) : this.element.outerHeight(false);
			var width = this.component ? this.component.outerWidth(true) : this.element.outerWidth(false);
			var left = offset.left - appendOffset.left;
			var top = offset.top - appendOffset.top;

			if (this.o.container !== 'body') {
				top += scrollTop;
			}

			this.picker.removeClass(
				'datepicker-orient-top datepicker-orient-bottom '+
				'datepicker-orient-right datepicker-orient-left'
			);

			if (this.o.orientation.x !== 'auto'){
				this.picker.addClass('datepicker-orient-' + this.o.orientation.x);
				if (this.o.orientation.x === 'right')
					left -= calendarWidth - width;
			}
			// auto x orientation is best-placement: if it crosses a window
			// edge, fudge it sideways
			else {
				if (offset.left < 0) {
					// component is outside the window on the left side. Move it into visible range
					this.picker.addClass('datepicker-orient-left');
					left -= offset.left - visualPadding;
				} else if (left + calendarWidth > windowWidth) {
					// the calendar passes the widow right edge. Align it to component right side
					this.picker.addClass('datepicker-orient-right');
					left += width - calendarWidth;
				} else {
					if (this.o.rtl) {
						// Default to right
						this.picker.addClass('datepicker-orient-right');
					} else {
						// Default to left
						this.picker.addClass('datepicker-orient-left');
					}
				}
			}

			// auto y orientation is best-situation: top or bottom, no fudging,
			// decision based on which shows more of the calendar
			var yorient = this.o.orientation.y,
				top_overflow;
			if (yorient === 'auto'){
				top_overflow = -scrollTop + top - calendarHeight;
				yorient = top_overflow < 0 ? 'bottom' : 'top';
			}

			this.picker.addClass('datepicker-orient-' + yorient);
			if (yorient === 'top')
				top -= calendarHeight + parseInt(this.picker.css('padding-top'));
			else
				top += height;

			if (this.o.rtl) {
				var right = windowWidth - (left + width);
				this.picker.css({
					top: top,
					right: right,
					zIndex: zIndex
				});
			} else {
				this.picker.css({
					top: top,
					left: left,
					zIndex: zIndex
				});
			}
			return this;
		},

		_allow_update: true,
		update: function(){
			if (!this._allow_update)
				return this;

			var oldDates = this.dates.copy(),
				dates = [],
				fromArgs = false;
			if (arguments.length){
				$.each(arguments, $.proxy(function(i, date){
					if (date instanceof Date)
						date = this._local_to_utc(date);
					dates.push(date);
				}, this));
				fromArgs = true;
			} else {
				dates = this.isInput
						? this.element.val()
						: this.element.data('date') || this.inputField.val();
				if (dates && this.o.multidate)
					dates = dates.split(this.o.multidateSeparator);
				else
					dates = [dates];
				delete this.element.data().date;
			}

			dates = $.map(dates, $.proxy(function(date){
				return DPGlobal.parseDate(date, this.o.format, this.o.language, this.o.assumeNearbyYear);
			}, this));
			dates = $.grep(dates, $.proxy(function(date){
				return (
					!this.dateWithinRange(date) ||
					!date
				);
			}, this), true);
			this.dates.replace(dates);

			if (this.o.updateViewDate) {
				if (this.dates.length)
					this.viewDate = new Date(this.dates.get(-1));
				else if (this.viewDate < this.o.startDate)
					this.viewDate = new Date(this.o.startDate);
				else if (this.viewDate > this.o.endDate)
					this.viewDate = new Date(this.o.endDate);
				else
					this.viewDate = this.o.defaultViewDate;
			}

			if (fromArgs){
				// setting date by clicking
				this.setValue();
				this.element.change();
			}
			else if (this.dates.length){
				// setting date by typing
				if (String(oldDates) !== String(this.dates) && fromArgs) {
					this._trigger('changeDate');
					this.element.change();
				}
			}
			if (!this.dates.length && oldDates.length) {
				this._trigger('clearDate');
				this.element.change();
			}

			this.fill();
			return this;
		},

		fillDow: function(){
      if (this.o.showWeekDays) {
			var dowCnt = this.o.weekStart,
				html = '<tr>';
			if (this.o.calendarWeeks){
				html += '<th class="cw">&#160;</th>';
			}
			while (dowCnt < this.o.weekStart + 7){
				html += '<th class="dow';
        if ($.inArray(dowCnt, this.o.daysOfWeekDisabled) !== -1)
          html += ' disabled';
        html += '">'+dates[this.o.language].daysMin[(dowCnt++)%7]+'</th>';
			}
			html += '</tr>';
			this.picker.find('.datepicker-days thead').append(html);
      }
		},

		fillMonths: function(){
      var localDate = this._utc_to_local(this.viewDate);
			var html = '';
			var focused;
			for (var i = 0; i < 12; i++){
				focused = localDate && localDate.getMonth() === i ? ' focused' : '';
				html += '<span class="month' + focused + '">' + dates[this.o.language].monthsShort[i] + '</span>';
			}
			this.picker.find('.datepicker-months td').html(html);
		},

		setRange: function(range){
			if (!range || !range.length)
				delete this.range;
			else
				this.range = $.map(range, function(d){
					return d.valueOf();
				});
			this.fill();
		},

		getClassNames: function(date){
			var cls = [],
				year = this.viewDate.getUTCFullYear(),
				month = this.viewDate.getUTCMonth(),
				today = UTCToday();
			if (date.getUTCFullYear() < year || (date.getUTCFullYear() === year && date.getUTCMonth() < month)){
				cls.push('old');
			} else if (date.getUTCFullYear() > year || (date.getUTCFullYear() === year && date.getUTCMonth() > month)){
				cls.push('new');
			}
			if (this.focusDate && date.valueOf() === this.focusDate.valueOf())
				cls.push('focused');
			// Compare internal UTC date with UTC today, not local today
			if (this.o.todayHighlight && isUTCEquals(date, today)) {
				cls.push('today');
			}
			if (this.dates.contains(date) !== -1)
				cls.push('active');
			if (!this.dateWithinRange(date)){
				cls.push('disabled');
			}
			if (this.dateIsDisabled(date)){
				cls.push('disabled', 'disabled-date');
			}
			if ($.inArray(date.getUTCDay(), this.o.daysOfWeekHighlighted) !== -1){
				cls.push('highlighted');
			}

			if (this.range){
				if (date > this.range[0] && date < this.range[this.range.length-1]){
					cls.push('range');
				}
				if ($.inArray(date.valueOf(), this.range) !== -1){
					cls.push('selected');
				}
				if (date.valueOf() === this.range[0]){
          cls.push('range-start');
        }
        if (date.valueOf() === this.range[this.range.length-1]){
          cls.push('range-end');
        }
			}
			return cls;
		},

		_fill_yearsView: function(selector, cssClass, factor, year, startYear, endYear, beforeFn){
			var html = '';
			var step = factor / 10;
			var view = this.picker.find(selector);
			var startVal = Math.floor(year / factor) * factor;
			var endVal = startVal + step * 9;
			var focusedVal = Math.floor(this.viewDate.getFullYear() / step) * step;
			var selected = $.map(this.dates, function(d){
				return Math.floor(d.getUTCFullYear() / step) * step;
			});

			var classes, tooltip, before;
			for (var currVal = startVal - step; currVal <= endVal + step; currVal += step) {
				classes = [cssClass];
				tooltip = null;

				if (currVal === startVal - step) {
					classes.push('old');
				} else if (currVal === endVal + step) {
					classes.push('new');
				}
				if ($.inArray(currVal, selected) !== -1) {
					classes.push('active');
				}
				if (currVal < startYear || currVal > endYear) {
					classes.push('disabled');
				}
				if (currVal === focusedVal) {
				  classes.push('focused');
        }

				if (beforeFn !== $.noop) {
					before = beforeFn(new Date(currVal, 0, 1));
					if (before === undefined) {
						before = {};
					} else if (typeof before === 'boolean') {
						before = {enabled: before};
					} else if (typeof before === 'string') {
						before = {classes: before};
					}
					if (before.enabled === false) {
						classes.push('disabled');
					}
					if (before.classes) {
						classes = classes.concat(before.classes.split(/\s+/));
					}
					if (before.tooltip) {
						tooltip = before.tooltip;
					}
				}

				html += '<span class="' + classes.join(' ') + '"' + (tooltip ? ' title="' + tooltip + '"' : '') + '>' + currVal + '</span>';
			}

			view.find('.datepicker-switch').text(startVal + '-' + endVal);
			view.find('td').html(html);
		},

		fill: function(){
			var d = new Date(this.viewDate),
				year = d.getUTCFullYear(),
				month = d.getUTCMonth(),
				startYear = this.o.startDate !== -Infinity ? this.o.startDate.getUTCFullYear() : -Infinity,
				startMonth = this.o.startDate !== -Infinity ? this.o.startDate.getUTCMonth() : -Infinity,
				endYear = this.o.endDate !== Infinity ? this.o.endDate.getUTCFullYear() : Infinity,
				endMonth = this.o.endDate !== Infinity ? this.o.endDate.getUTCMonth() : Infinity,
				todaytxt = dates[this.o.language].today || dates['en'].today || '',
				cleartxt = dates[this.o.language].clear || dates['en'].clear || '',
				titleFormat = dates[this.o.language].titleFormat || dates['en'].titleFormat,
				tooltip,
				before;
			if (isNaN(year) || isNaN(month))
				return;
			this.picker.find('.datepicker-days .datepicker-switch')
						.text(DPGlobal.formatDate(d, titleFormat, this.o.language));
			this.picker.find('tfoot .today')
						.text(todaytxt)
						.css('display', this.o.todayBtn === true || this.o.todayBtn === 'linked' ? 'table-cell' : 'none');
			this.picker.find('tfoot .clear')
						.text(cleartxt)
						.css('display', this.o.clearBtn === true ? 'table-cell' : 'none');
			this.picker.find('thead .datepicker-title')
						.text(this.o.title)
						.css('display', typeof this.o.title === 'string' && this.o.title !== '' ? 'table-cell' : 'none');
			this.updateNavArrows();
			this.fillMonths();
			var prevMonth = UTCDate(year, month, 0),
				day = prevMonth.getUTCDate();
			prevMonth.setUTCDate(day - (prevMonth.getUTCDay() - this.o.weekStart + 7)%7);
			var nextMonth = new Date(prevMonth);
			if (prevMonth.getUTCFullYear() < 100){
        nextMonth.setUTCFullYear(prevMonth.getUTCFullYear());
      }
			nextMonth.setUTCDate(nextMonth.getUTCDate() + 42);
			nextMonth = nextMonth.valueOf();
			var html = [];
			var weekDay, clsName;
			while (prevMonth.valueOf() < nextMonth){
				weekDay = prevMonth.getUTCDay();
				if (weekDay === this.o.weekStart){
					html.push('<tr>');
					if (this.o.calendarWeeks){
						// ISO 8601: First week contains first thursday.
						// ISO also states week starts on Monday, but we can be more abstract here.
						var
							// Start of current week: based on weekstart/current date
							ws = new Date(+prevMonth + (this.o.weekStart - weekDay - 7) % 7 * 864e5),
							// Thursday of this week
							th = new Date(Number(ws) + (7 + 4 - ws.getUTCDay()) % 7 * 864e5),
							// First Thursday of year, year from thursday
							yth = new Date(Number(yth = UTCDate(th.getUTCFullYear(), 0, 1)) + (7 + 4 - yth.getUTCDay()) % 7 * 864e5),
							// Calendar week: ms between thursdays, div ms per day, div 7 days
							calWeek = (th - yth) / 864e5 / 7 + 1;
						html.push('<td class="cw">'+ calWeek +'</td>');
					}
				}
				clsName = this.getClassNames(prevMonth);
				clsName.push('day');

				var content = prevMonth.getUTCDate();

				if (this.o.beforeShowDay !== $.noop){
					before = this.o.beforeShowDay(this._utc_to_local(prevMonth));
					if (before === undefined)
						before = {};
					else if (typeof before === 'boolean')
						before = {enabled: before};
					else if (typeof before === 'string')
						before = {classes: before};
					if (before.enabled === false)
						clsName.push('disabled');
					if (before.classes)
						clsName = clsName.concat(before.classes.split(/\s+/));
					if (before.tooltip)
						tooltip = before.tooltip;
					if (before.content)
						content = before.content;
				}

				//Check if uniqueSort exists (supported by jquery >=1.12 and >=2.2)
				//Fallback to unique function for older jquery versions
				if ($.isFunction($.uniqueSort)) {
					clsName = $.uniqueSort(clsName);
				} else {
					clsName = $.unique(clsName);
				}

				html.push('<td class="'+clsName.join(' ')+'"' + (tooltip ? ' title="'+tooltip+'"' : '') + ' data-date="' + prevMonth.getTime().toString() + '">' + content + '</td>');
				tooltip = null;
				if (weekDay === this.o.weekEnd){
					html.push('</tr>');
				}
				prevMonth.setUTCDate(prevMonth.getUTCDate() + 1);
			}
			this.picker.find('.datepicker-days tbody').html(html.join(''));

			var monthsTitle = dates[this.o.language].monthsTitle || dates['en'].monthsTitle || 'Months';
			var months = this.picker.find('.datepicker-months')
						.find('.datepicker-switch')
							.text(this.o.maxViewMode < 2 ? monthsTitle : year)
							.end()
						.find('tbody span').removeClass('active');

			$.each(this.dates, function(i, d){
				if (d.getUTCFullYear() === year)
					months.eq(d.getUTCMonth()).addClass('active');
			});

			if (year < startYear || year > endYear){
				months.addClass('disabled');
			}
			if (year === startYear){
				months.slice(0, startMonth).addClass('disabled');
			}
			if (year === endYear){
				months.slice(endMonth+1).addClass('disabled');
			}

			if (this.o.beforeShowMonth !== $.noop){
				var that = this;
				$.each(months, function(i, month){
          var moDate = new Date(year, i, 1);
          var before = that.o.beforeShowMonth(moDate);
					if (before === undefined)
						before = {};
					else if (typeof before === 'boolean')
						before = {enabled: before};
					else if (typeof before === 'string')
						before = {classes: before};
					if (before.enabled === false && !$(month).hasClass('disabled'))
					    $(month).addClass('disabled');
					if (before.classes)
					    $(month).addClass(before.classes);
					if (before.tooltip)
					    $(month).prop('title', before.tooltip);
				});
			}

			// Generating decade/years picker
			this._fill_yearsView(
				'.datepicker-years',
				'year',
				10,
				year,
				startYear,
				endYear,
				this.o.beforeShowYear
			);

			// Generating century/decades picker
			this._fill_yearsView(
				'.datepicker-decades',
				'decade',
				100,
				year,
				startYear,
				endYear,
				this.o.beforeShowDecade
			);

			// Generating millennium/centuries picker
			this._fill_yearsView(
				'.datepicker-centuries',
				'century',
				1000,
				year,
				startYear,
				endYear,
				this.o.beforeShowCentury
			);
		},

		updateNavArrows: function(){
			if (!this._allow_update)
				return;

			var d = new Date(this.viewDate),
				year = d.getUTCFullYear(),
				month = d.getUTCMonth(),
				startYear = this.o.startDate !== -Infinity ? this.o.startDate.getUTCFullYear() : -Infinity,
				startMonth = this.o.startDate !== -Infinity ? this.o.startDate.getUTCMonth() : -Infinity,
				endYear = this.o.endDate !== Infinity ? this.o.endDate.getUTCFullYear() : Infinity,
				endMonth = this.o.endDate !== Infinity ? this.o.endDate.getUTCMonth() : Infinity,
				prevIsDisabled,
				nextIsDisabled,
				factor = 1;
			switch (this.viewMode){
				case 4:
					factor *= 10;
					/* falls through */
				case 3:
					factor *= 10;
					/* falls through */
				case 2:
					factor *= 10;
					/* falls through */
				case 1:
					prevIsDisabled = Math.floor(year / factor) * factor < startYear;
					nextIsDisabled = Math.floor(year / factor) * factor + factor > endYear;
					break;
				case 0:
					prevIsDisabled = year <= startYear && month < startMonth;
					nextIsDisabled = year >= endYear && month > endMonth;
					break;
			}

			this.picker.find('.prev').toggleClass('disabled', prevIsDisabled);
			this.picker.find('.next').toggleClass('disabled', nextIsDisabled);
		},

		click: function(e){
			e.preventDefault();
			e.stopPropagation();

			var target, dir, day, year, month;
			target = $(e.target);

			// Clicked on the switch
			if (target.hasClass('datepicker-switch') && this.viewMode !== this.o.maxViewMode){
				this.setViewMode(this.viewMode + 1);
			}

			// Clicked on today button
			if (target.hasClass('today') && !target.hasClass('day')){
				this.setViewMode(0);
				this._setDate(UTCToday(), this.o.todayBtn === 'linked' ? null : 'view');
			}

			// Clicked on clear button
			if (target.hasClass('clear')){
				this.clearDates();
			}

			if (!target.hasClass('disabled')){
				// Clicked on a month, year, decade, century
				if (target.hasClass('month')
						|| target.hasClass('year')
						|| target.hasClass('decade')
						|| target.hasClass('century')) {
					this.viewDate.setUTCDate(1);

					day = 1;
					if (this.viewMode === 1){
						month = target.parent().find('span').index(target);
						year = this.viewDate.getUTCFullYear();
						this.viewDate.setUTCMonth(month);
					} else {
						month = 0;
						year = Number(target.text());
						this.viewDate.setUTCFullYear(year);
					}

					this._trigger(DPGlobal.viewModes[this.viewMode - 1].e, this.viewDate);

					if (this.viewMode === this.o.minViewMode){
						this._setDate(UTCDate(year, month, day));
					} else {
						this.setViewMode(this.viewMode - 1);
						this.fill();
					}
				}
			}

			if (this.picker.is(':visible') && this._focused_from){
				this._focused_from.focus();
			}
			delete this._focused_from;
		},

		dayCellClick: function(e){
			var $target = $(e.currentTarget);
			var timestamp = $target.data('date');
			var date = new Date(timestamp);

			if (this.o.updateViewDate) {
				if (date.getUTCFullYear() !== this.viewDate.getUTCFullYear()) {
					this._trigger('changeYear', this.viewDate);
				}

				if (date.getUTCMonth() !== this.viewDate.getUTCMonth()) {
					this._trigger('changeMonth', this.viewDate);
				}
			}
			this._setDate(date);
		},

		// Clicked on prev or next
		navArrowsClick: function(e){
			var $target = $(e.currentTarget);
			var dir = $target.hasClass('prev') ? -1 : 1;
			if (this.viewMode !== 0){
				dir *= DPGlobal.viewModes[this.viewMode].navStep * 12;
			}
			this.viewDate = this.moveMonth(this.viewDate, dir);
			this._trigger(DPGlobal.viewModes[this.viewMode].e, this.viewDate);
			this.fill();
		},

		_toggle_multidate: function(date){
			var ix = this.dates.contains(date);
			if (!date){
				this.dates.clear();
			}

			if (ix !== -1){
				if (this.o.multidate === true || this.o.multidate > 1 || this.o.toggleActive){
					this.dates.remove(ix);
				}
			} else if (this.o.multidate === false) {
				this.dates.clear();
				this.dates.push(date);
			}
			else {
				this.dates.push(date);
			}

			if (typeof this.o.multidate === 'number')
				while (this.dates.length > this.o.multidate)
					this.dates.remove(0);
		},

		_setDate: function(date, which){
			if (!which || which === 'date')
				this._toggle_multidate(date && new Date(date));
			if ((!which && this.o.updateViewDate) || which === 'view')
				this.viewDate = date && new Date(date);

			this.fill();
			this.setValue();
			if (!which || which !== 'view') {
				this._trigger('changeDate');
			}
			this.inputField.trigger('change');
			if (this.o.autoclose && (!which || which === 'date')){
				this.hide();
			}
		},

		moveDay: function(date, dir){
			var newDate = new Date(date);
			newDate.setUTCDate(date.getUTCDate() + dir);

			return newDate;
		},

		moveWeek: function(date, dir){
			return this.moveDay(date, dir * 7);
		},

		moveMonth: function(date, dir){
			if (!isValidDate(date))
				return this.o.defaultViewDate;
			if (!dir)
				return date;
			var new_date = new Date(date.valueOf()),
				day = new_date.getUTCDate(),
				month = new_date.getUTCMonth(),
				mag = Math.abs(dir),
				new_month, test;
			dir = dir > 0 ? 1 : -1;
			if (mag === 1){
				test = dir === -1
					// If going back one month, make sure month is not current month
					// (eg, Mar 31 -> Feb 31 == Feb 28, not Mar 02)
					? function(){
						return new_date.getUTCMonth() === month;
					}
					// If going forward one month, make sure month is as expected
					// (eg, Jan 31 -> Feb 31 == Feb 28, not Mar 02)
					: function(){
						return new_date.getUTCMonth() !== new_month;
					};
				new_month = month + dir;
				new_date.setUTCMonth(new_month);
				// Dec -> Jan (12) or Jan -> Dec (-1) -- limit expected date to 0-11
				new_month = (new_month + 12) % 12;
			}
			else {
				// For magnitudes >1, move one month at a time...
				for (var i=0; i < mag; i++)
					// ...which might decrease the day (eg, Jan 31 to Feb 28, etc)...
					new_date = this.moveMonth(new_date, dir);
				// ...then reset the day, keeping it in the new month
				new_month = new_date.getUTCMonth();
				new_date.setUTCDate(day);
				test = function(){
					return new_month !== new_date.getUTCMonth();
				};
			}
			// Common date-resetting loop -- if date is beyond end of month, make it
			// end of month
			while (test()){
				new_date.setUTCDate(--day);
				new_date.setUTCMonth(new_month);
			}
			return new_date;
		},

		moveYear: function(date, dir){
			return this.moveMonth(date, dir*12);
		},

		moveAvailableDate: function(date, dir, fn){
			do {
				date = this[fn](date, dir);

				if (!this.dateWithinRange(date))
					return false;

				fn = 'moveDay';
			}
			while (this.dateIsDisabled(date));

			return date;
		},

		weekOfDateIsDisabled: function(date){
			return $.inArray(date.getUTCDay(), this.o.daysOfWeekDisabled) !== -1;
		},

		dateIsDisabled: function(date){
			return (
				this.weekOfDateIsDisabled(date) ||
				$.grep(this.o.datesDisabled, function(d){
					return isUTCEquals(date, d);
				}).length > 0
			);
		},

		dateWithinRange: function(date){
			return date >= this.o.startDate && date <= this.o.endDate;
		},

		keydown: function(e){
			if (!this.picker.is(':visible')){
				if (e.keyCode === 40 || e.keyCode === 27) { // allow down to re-show picker
					this.show();
					e.stopPropagation();
        }
				return;
			}
			var dateChanged = false,
				dir, newViewDate,
				focusDate = this.focusDate || this.viewDate;
			switch (e.keyCode){
				case 27: // escape
					if (this.focusDate){
						this.focusDate = null;
						this.viewDate = this.dates.get(-1) || this.viewDate;
						this.fill();
					}
					else
						this.hide();
					e.preventDefault();
					e.stopPropagation();
					break;
				case 37: // left
				case 38: // up
				case 39: // right
				case 40: // down
					if (!this.o.keyboardNavigation || this.o.daysOfWeekDisabled.length === 7)
						break;
					dir = e.keyCode === 37 || e.keyCode === 38 ? -1 : 1;
          if (this.viewMode === 0) {
  					if (e.ctrlKey){
  						newViewDate = this.moveAvailableDate(focusDate, dir, 'moveYear');

  						if (newViewDate)
  							this._trigger('changeYear', this.viewDate);
  					} else if (e.shiftKey){
  						newViewDate = this.moveAvailableDate(focusDate, dir, 'moveMonth');

  						if (newViewDate)
  							this._trigger('changeMonth', this.viewDate);
  					} else if (e.keyCode === 37 || e.keyCode === 39){
  						newViewDate = this.moveAvailableDate(focusDate, dir, 'moveDay');
  					} else if (!this.weekOfDateIsDisabled(focusDate)){
  						newViewDate = this.moveAvailableDate(focusDate, dir, 'moveWeek');
  					}
          } else if (this.viewMode === 1) {
            if (e.keyCode === 38 || e.keyCode === 40) {
              dir = dir * 4;
            }
            newViewDate = this.moveAvailableDate(focusDate, dir, 'moveMonth');
          } else if (this.viewMode === 2) {
            if (e.keyCode === 38 || e.keyCode === 40) {
              dir = dir * 4;
            }
            newViewDate = this.moveAvailableDate(focusDate, dir, 'moveYear');
          }
					if (newViewDate){
						this.focusDate = this.viewDate = newViewDate;
						this.setValue();
						this.fill();
						e.preventDefault();
					}
					break;
				case 13: // enter
					if (!this.o.forceParse)
						break;
					focusDate = this.focusDate || this.dates.get(-1) || this.viewDate;
					if (this.o.keyboardNavigation) {
						this._toggle_multidate(focusDate);
						dateChanged = true;
					}
					this.focusDate = null;
					this.viewDate = this.dates.get(-1) || this.viewDate;
					this.setValue();
					this.fill();
					if (this.picker.is(':visible')){
						e.preventDefault();
						e.stopPropagation();
						if (this.o.autoclose)
							this.hide();
					}
					break;
				case 9: // tab
					this.focusDate = null;
					this.viewDate = this.dates.get(-1) || this.viewDate;
					this.fill();
					this.hide();
					break;
			}
			if (dateChanged){
				if (this.dates.length)
					this._trigger('changeDate');
				else
					this._trigger('clearDate');
				this.inputField.trigger('change');
			}
		},

		setViewMode: function(viewMode){
			this.viewMode = viewMode;
			this.picker
				.children('div')
				.hide()
				.filter('.datepicker-' + DPGlobal.viewModes[this.viewMode].clsName)
					.show();
			this.updateNavArrows();
      this._trigger('changeViewMode', new Date(this.viewDate));
		}
	};

	var DateRangePicker = function(element, options){
		$.data(element, 'datepicker', this);
		this.element = $(element);
		this.inputs = $.map(options.inputs, function(i){
			return i.jquery ? i[0] : i;
		});
		delete options.inputs;

		this.keepEmptyValues = options.keepEmptyValues;
		delete options.keepEmptyValues;

		datepickerPlugin.call($(this.inputs), options)
			.on('changeDate', $.proxy(this.dateUpdated, this));

		this.pickers = $.map(this.inputs, function(i){
			return $.data(i, 'datepicker');
		});
		this.updateDates();
	};
	DateRangePicker.prototype = {
		updateDates: function(){
			this.dates = $.map(this.pickers, function(i){
				return i.getUTCDate();
			});
			this.updateRanges();
		},
		updateRanges: function(){
			var range = $.map(this.dates, function(d){
				return d.valueOf();
			});
			$.each(this.pickers, function(i, p){
				p.setRange(range);
			});
		},
		clearDates: function(){
			$.each(this.pickers, function(i, p){
				p.clearDates();
			});
		},
		dateUpdated: function(e){
			// `this.updating` is a workaround for preventing infinite recursion
			// between `changeDate` triggering and `setUTCDate` calling.  Until
			// there is a better mechanism.
			if (this.updating)
				return;
			this.updating = true;

			var dp = $.data(e.target, 'datepicker');

			if (dp === undefined) {
				return;
			}

			var new_date = dp.getUTCDate(),
				keep_empty_values = this.keepEmptyValues,
				i = $.inArray(e.target, this.inputs),
				j = i - 1,
				k = i + 1,
				l = this.inputs.length;
			if (i === -1)
				return;

			$.each(this.pickers, function(i, p){
				if (!p.getUTCDate() && (p === dp || !keep_empty_values))
					p.setUTCDate(new_date);
			});

			if (new_date < this.dates[j]){
				// Date being moved earlier/left
				while (j >= 0 && new_date < this.dates[j]){
					this.pickers[j--].setUTCDate(new_date);
				}
			} else if (new_date > this.dates[k]){
				// Date being moved later/right
				while (k < l && new_date > this.dates[k]){
					this.pickers[k++].setUTCDate(new_date);
				}
			}
			this.updateDates();

			delete this.updating;
		},
		destroy: function(){
			$.map(this.pickers, function(p){ p.destroy(); });
			$(this.inputs).off('changeDate', this.dateUpdated);
			delete this.element.data().datepicker;
		},
		remove: alias('destroy', 'Method `remove` is deprecated and will be removed in version 2.0. Use `destroy` instead')
	};

	function opts_from_el(el, prefix){
		// Derive options from element data-attrs
		var data = $(el).data(),
			out = {}, inkey,
			replace = new RegExp('^' + prefix.toLowerCase() + '([A-Z])');
		prefix = new RegExp('^' + prefix.toLowerCase());
		function re_lower(_,a){
			return a.toLowerCase();
		}
		for (var key in data)
			if (prefix.test(key)){
				inkey = key.replace(replace, re_lower);
				out[inkey] = data[key];
			}
		return out;
	}

	function opts_from_locale(lang){
		// Derive options from locale plugins
		var out = {};
		// Check if "de-DE" style date is available, if not language should
		// fallback to 2 letter code eg "de"
		if (!dates[lang]){
			lang = lang.split('-')[0];
			if (!dates[lang])
				return;
		}
		var d = dates[lang];
		$.each(locale_opts, function(i,k){
			if (k in d)
				out[k] = d[k];
		});
		return out;
	}

	var old = $.fn.datepicker;
	var datepickerPlugin = function(option){
		var args = Array.apply(null, arguments);
		args.shift();
		var internal_return;
		this.each(function(){
			var $this = $(this),
				data = $this.data('datepicker'),
				options = typeof option === 'object' && option;
			if (!data){
				var elopts = opts_from_el(this, 'date'),
					// Preliminary otions
					xopts = $.extend({}, defaults, elopts, options),
					locopts = opts_from_locale(xopts.language),
					// Options priority: js args, data-attrs, locales, defaults
					opts = $.extend({}, defaults, locopts, elopts, options);
				if ($this.hasClass('input-daterange') || opts.inputs){
					$.extend(opts, {
						inputs: opts.inputs || $this.find('input').toArray()
					});
					data = new DateRangePicker(this, opts);
				}
				else {
					data = new Datepicker(this, opts);
				}
				$this.data('datepicker', data);
			}
			if (typeof option === 'string' && typeof data[option] === 'function'){
				internal_return = data[option].apply(data, args);
			}
		});

		if (
			internal_return === undefined ||
			internal_return instanceof Datepicker ||
			internal_return instanceof DateRangePicker
		)
			return this;

		if (this.length > 1)
			throw new Error('Using only allowed for the collection of a single element (' + option + ' function)');
		else
			return internal_return;
	};
	$.fn.datepicker = datepickerPlugin;

	var defaults = $.fn.datepicker.defaults = {
		assumeNearbyYear: false,
		autoclose: false,
		beforeShowDay: $.noop,
		beforeShowMonth: $.noop,
		beforeShowYear: $.noop,
		beforeShowDecade: $.noop,
		beforeShowCentury: $.noop,
		calendarWeeks: false,
		clearBtn: false,
		toggleActive: false,
		daysOfWeekDisabled: [],
		daysOfWeekHighlighted: [],
		datesDisabled: [],
		endDate: Infinity,
		forceParse: true,
		format: 'mm/dd/yyyy',
		keepEmptyValues: false,
		keyboardNavigation: true,
		language: 'en',
		minViewMode: 0,
		maxViewMode: 4,
		multidate: false,
		multidateSeparator: ',',
		orientation: "auto",
		rtl: false,
		startDate: -Infinity,
		startView: 0,
		todayBtn: false,
		todayHighlight: false,
		updateViewDate: true,
		weekStart: 0,
		disableTouchKeyboard: false,
		enableOnReadonly: true,
		showOnFocus: true,
		zIndexOffset: 10,
		container: 'body',
		immediateUpdates: false,
		title: '',
		templates: {
			leftArrow: '&#x00AB;',
			rightArrow: '&#x00BB;'
		},
    showWeekDays: true
	};
	var locale_opts = $.fn.datepicker.locale_opts = [
		'format',
		'rtl',
		'weekStart'
	];
	$.fn.datepicker.Constructor = Datepicker;
	var dates = $.fn.datepicker.dates = {
		en: {
			days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
			daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
			daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
			months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
			monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
			today: "Today",
			clear: "Clear",
			titleFormat: "MM yyyy"
		}
	};

	var DPGlobal = {
		viewModes: [
			{
				names: ['days', 'month'],
				clsName: 'days',
				e: 'changeMonth'
			},
			{
				names: ['months', 'year'],
				clsName: 'months',
				e: 'changeYear',
				navStep: 1
			},
			{
				names: ['years', 'decade'],
				clsName: 'years',
				e: 'changeDecade',
				navStep: 10
			},
			{
				names: ['decades', 'century'],
				clsName: 'decades',
				e: 'changeCentury',
				navStep: 100
			},
			{
				names: ['centuries', 'millennium'],
				clsName: 'centuries',
				e: 'changeMillennium',
				navStep: 1000
			}
		],
		validParts: /dd?|DD?|mm?|MM?|yy(?:yy)?/g,
		nonpunctuation: /[^ -\/:-@\u5e74\u6708\u65e5\[-`{-~\t\n\r]+/g,
		parseFormat: function(format){
			if (typeof format.toValue === 'function' && typeof format.toDisplay === 'function')
                return format;
            // IE treats \0 as a string end in inputs (truncating the value),
			// so it's a bad format delimiter, anyway
			var separators = format.replace(this.validParts, '\0').split('\0'),
				parts = format.match(this.validParts);
			if (!separators || !separators.length || !parts || parts.length === 0){
				throw new Error("Invalid date format.");
			}
			return {separators: separators, parts: parts};
		},
		parseDate: function(date, format, language, assumeNearby){
			if (!date)
				return undefined;
			if (date instanceof Date)
				return date;
			if (typeof format === 'string')
				format = DPGlobal.parseFormat(format);
			if (format.toValue)
				return format.toValue(date, format, language);
			var fn_map = {
					d: 'moveDay',
					m: 'moveMonth',
					w: 'moveWeek',
					y: 'moveYear'
				},
				dateAliases = {
					yesterday: '-1d',
					today: '+0d',
					tomorrow: '+1d'
				},
				parts, part, dir, i, fn;
			if (date in dateAliases){
				date = dateAliases[date];
			}
			if (/^[\-+]\d+[dmwy]([\s,]+[\-+]\d+[dmwy])*$/i.test(date)){
				parts = date.match(/([\-+]\d+)([dmwy])/gi);
				date = new Date();
				for (i=0; i < parts.length; i++){
					part = parts[i].match(/([\-+]\d+)([dmwy])/i);
					dir = Number(part[1]);
					fn = fn_map[part[2].toLowerCase()];
					date = Datepicker.prototype[fn](date, dir);
				}
				return Datepicker.prototype._zero_utc_time(date);
			}

			parts = date && date.match(this.nonpunctuation) || [];

			function applyNearbyYear(year, threshold){
				if (threshold === true)
					threshold = 10;

				// if year is 2 digits or less, than the user most likely is trying to get a recent century
				if (year < 100){
					year += 2000;
					// if the new year is more than threshold years in advance, use last century
					if (year > ((new Date()).getFullYear()+threshold)){
						year -= 100;
					}
				}

				return year;
			}

			var parsed = {},
				setters_order = ['yyyy', 'yy', 'M', 'MM', 'm', 'mm', 'd', 'dd'],
				setters_map = {
					yyyy: function(d,v){
						return d.setUTCFullYear(assumeNearby ? applyNearbyYear(v, assumeNearby) : v);
					},
					m: function(d,v){
						if (isNaN(d))
							return d;
						v -= 1;
						while (v < 0) v += 12;
						v %= 12;
						d.setUTCMonth(v);
						while (d.getUTCMonth() !== v)
							d.setUTCDate(d.getUTCDate()-1);
						return d;
					},
					d: function(d,v){
						return d.setUTCDate(v);
					}
				},
				val, filtered;
			setters_map['yy'] = setters_map['yyyy'];
			setters_map['M'] = setters_map['MM'] = setters_map['mm'] = setters_map['m'];
			setters_map['dd'] = setters_map['d'];
			date = UTCToday();
			var fparts = format.parts.slice();
			// Remove noop parts
			if (parts.length !== fparts.length){
				fparts = $(fparts).filter(function(i,p){
					return $.inArray(p, setters_order) !== -1;
				}).toArray();
			}
			// Process remainder
			function match_part(){
				var m = this.slice(0, parts[i].length),
					p = parts[i].slice(0, m.length);
				return m.toLowerCase() === p.toLowerCase();
			}
			if (parts.length === fparts.length){
				var cnt;
				for (i=0, cnt = fparts.length; i < cnt; i++){
					val = parseInt(parts[i], 10);
					part = fparts[i];
					if (isNaN(val)){
						switch (part){
							case 'MM':
								filtered = $(dates[language].months).filter(match_part);
								val = $.inArray(filtered[0], dates[language].months) + 1;
								break;
							case 'M':
								filtered = $(dates[language].monthsShort).filter(match_part);
								val = $.inArray(filtered[0], dates[language].monthsShort) + 1;
								break;
						}
					}
					parsed[part] = val;
				}
				var _date, s;
				for (i=0; i < setters_order.length; i++){
					s = setters_order[i];
					if (s in parsed && !isNaN(parsed[s])){
						_date = new Date(date);
						setters_map[s](_date, parsed[s]);
						if (!isNaN(_date))
							date = _date;
					}
				}
			}
			return date;
		},
		formatDate: function(date, format, language){
			if (!date)
				return '';
			if (typeof format === 'string')
				format = DPGlobal.parseFormat(format);
			if (format.toDisplay)
                return format.toDisplay(date, format, language);
            var val = {
				d: date.getUTCDate(),
				D: dates[language].daysShort[date.getUTCDay()],
				DD: dates[language].days[date.getUTCDay()],
				m: date.getUTCMonth() + 1,
				M: dates[language].monthsShort[date.getUTCMonth()],
				MM: dates[language].months[date.getUTCMonth()],
				yy: date.getUTCFullYear().toString().substring(2),
				yyyy: date.getUTCFullYear()
			};
			val.dd = (val.d < 10 ? '0' : '') + val.d;
			val.mm = (val.m < 10 ? '0' : '') + val.m;
			date = [];
			var seps = $.extend([], format.separators);
			for (var i=0, cnt = format.parts.length; i <= cnt; i++){
				if (seps.length)
					date.push(seps.shift());
				date.push(val[format.parts[i]]);
			}
			return date.join('');
		},
		headTemplate: '<thead>'+
			              '<tr>'+
			                '<th colspan="7" class="datepicker-title"></th>'+
			              '</tr>'+
							'<tr>'+
								'<th class="prev">'+defaults.templates.leftArrow+'</th>'+
								'<th colspan="5" class="datepicker-switch"></th>'+
								'<th class="next">'+defaults.templates.rightArrow+'</th>'+
							'</tr>'+
						'</thead>',
		contTemplate: '<tbody><tr><td colspan="7"></td></tr></tbody>',
		footTemplate: '<tfoot>'+
							'<tr>'+
								'<th colspan="7" class="today"></th>'+
							'</tr>'+
							'<tr>'+
								'<th colspan="7" class="clear"></th>'+
							'</tr>'+
						'</tfoot>'
	};
	DPGlobal.template = '<div class="datepicker">'+
							'<div class="datepicker-days">'+
								'<table class="table-condensed">'+
									DPGlobal.headTemplate+
									'<tbody></tbody>'+
									DPGlobal.footTemplate+
								'</table>'+
							'</div>'+
							'<div class="datepicker-months">'+
								'<table class="table-condensed">'+
									DPGlobal.headTemplate+
									DPGlobal.contTemplate+
									DPGlobal.footTemplate+
								'</table>'+
							'</div>'+
							'<div class="datepicker-years">'+
								'<table class="table-condensed">'+
									DPGlobal.headTemplate+
									DPGlobal.contTemplate+
									DPGlobal.footTemplate+
								'</table>'+
							'</div>'+
							'<div class="datepicker-decades">'+
								'<table class="table-condensed">'+
									DPGlobal.headTemplate+
									DPGlobal.contTemplate+
									DPGlobal.footTemplate+
								'</table>'+
							'</div>'+
							'<div class="datepicker-centuries">'+
								'<table class="table-condensed">'+
									DPGlobal.headTemplate+
									DPGlobal.contTemplate+
									DPGlobal.footTemplate+
								'</table>'+
							'</div>'+
						'</div>';

	$.fn.datepicker.DPGlobal = DPGlobal;


	/* DATEPICKER NO CONFLICT
	* =================== */

	$.fn.datepicker.noConflict = function(){
		$.fn.datepicker = old;
		return this;
	};

	/* DATEPICKER VERSION
	 * =================== */
	$.fn.datepicker.version = '1.8.0';

	$.fn.datepicker.deprecated = function(msg){
		var console = window.console;
		if (console && console.warn) {
			console.warn('DEPRECATED: ' + msg);
		}
	};


	/* DATEPICKER DATA-API
	* ================== */

	$(document).on(
		'focus.datepicker.data-api click.datepicker.data-api',
		'[data-provide="datepicker"]',
		function(e){
			var $this = $(this);
			if ($this.data('datepicker'))
				return;
			e.preventDefault();
			// component click requires us to explicitly show it
			datepickerPlugin.call($this, 'show');
		}
	);
	$(function(){
		datepickerPlugin.call($('[data-provide="datepicker-inline"]'));
	});

}));
/**
 * Canadian English translation for bootstrap-datepicker
 * Mike Nacey <mnacey@gmail.com>
 * DEPRECATED: This filename doesn't follow the convention, use bootstrap-datepicker.en-CA.js instead
 */

;(function($){
	$.fn.datepicker.dates['en-CA'] = {
		days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
		daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
		daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
		months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
		today: "Today",
		monthsTitle: "Months",
		clear: "Clear",
		weekStart: 0,
		format: "yyyy-mm-dd"
	};

	$.fn.datepicker.deprecated('This filename doesn\'t follow the convention, use bootstrap-datepicker.en-CA.js instead.');

}(jQuery));
/**
 * Arabic-Tunisia translation for bootstrap-datepicker
 * Souhaieb Besbes <besbes.souhaieb@gmail.com>
 */

;(function($){
    $.fn.datepicker.dates['ar-tn'] = {
        days: ["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت", "الأحد"],
        daysShort: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت", "أحد"],
        daysMin: ["ح", "ن", "ث", "ع", "خ", "ج", "س", "ح"],
        months: ["جانفي","فيفري","مارس","أفريل","ماي","جوان","جويليه","أوت","سبتمبر","أكتوبر","نوفمبر","ديسمبر"],
        monthsShort: ["جانفي","فيفري","مارس","أفريل","ماي","جوان","جويليه","أوت","سبتمبر","أكتوبر","نوفمبر","ديسمبر"],
        today: "هذا اليوم",
        rtl: true
    };
}(jQuery));
/**
 * Arabic translation for bootstrap-datepicker
 * Mohammed Alshehri <alshehri866@gmail.com>
 */

;(function($){
    $.fn.datepicker.dates['ar'] = {
        days: ["الأحد", "الاثنين", "الثلاثاء", "الأربعاء", "الخميس", "الجمعة", "السبت", "الأحد"],
        daysShort: ["أحد", "اثنين", "ثلاثاء", "أربعاء", "خميس", "جمعة", "سبت", "أحد"],
        daysMin: ["ح", "ن", "ث", "ع", "خ", "ج", "س", "ح"],
        months: ["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"],
        monthsShort: ["يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر"],
        today: "هذا اليوم",
        rtl: true
    };
}(jQuery));
// Azerbaijani
;(function($){
    $.fn.datepicker.dates['az'] = {
        days: ["Bazar", "Bazar ertəsi", "Çərşənbə axşamı", "Çərşənbə", "Cümə axşamı", "Cümə", "Şənbə"],
        daysShort: ["B.", "B.e", "Ç.a", "Ç.", "C.a", "C.", "Ş."],
        daysMin: ["B.", "B.e", "Ç.a", "Ç.", "C.a", "C.", "Ş."],
        months: ["Yanvar", "Fevral", "Mart", "Aprel", "May", "İyun", "İyul", "Avqust", "Sentyabr", "Oktyabr", "Noyabr", "Dekabr"],
        monthsShort: ["Yan", "Fev", "Mar", "Apr", "May", "İyun", "İyul", "Avq", "Sen", "Okt", "Noy", "Dek"],
        today: "Bu gün",
        weekStart: 1
    };
}(jQuery));
/**
 * Bulgarian translation for bootstrap-datepicker
 * Apostol Apostolov <apostol.s.apostolov@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['bg'] = {
		days: ["Неделя", "Понеделник", "Вторник", "Сряда", "Четвъртък", "Петък", "Събота"],
		daysShort: ["Нед", "Пон", "Вто", "Сря", "Чет", "Пет", "Съб"],
		daysMin: ["Н", "П", "В", "С", "Ч", "П", "С"],
		months: ["Януари", "Февруари", "Март", "Април", "Май", "Юни", "Юли", "Август", "Септември", "Октомври", "Ноември", "Декември"],
		monthsShort: ["Ян", "Фев", "Мар", "Апр", "Май", "Юни", "Юли", "Авг", "Сеп", "Окт", "Ное", "Дек"],
		today: "днес"
	};
}(jQuery));
/**
 * Bengali (Bangla) translation for bootstrap-datepicker
 * Karim Khan <kkhancse91@gmail.com>
 * Orif N. Jr. <orif.zade@gmail.com>
 */

;(function($){
  $.fn.datepicker.dates['bn'] = {
		days: ["রবিবার","সোমবার","মঙ্গলবার","বুধবার","বৃহস্পতিবার","শুক্রবার","শনিবার"],
		daysShort: ["রবিবার","সোমবার","মঙ্গলবার","বুধবার","বৃহস্পতিবার","শুক্রবার","শনিবার"],
		daysMin: ["রবি","সোম","মঙ্গল","বুধ","বৃহস্পতি","শুক্র","শনি"],
		months: ["জানুয়ারী","ফেব্রুয়ারি","মার্চ","এপ্রিল","মে","জুন","জুলাই","অগাস্ট","সেপ্টেম্বর","অক্টোবর","নভেম্বর","ডিসেম্বর"],
		monthsShort: ["জানুয়ারী","ফেব্রুয়ারি","মার্চ","এপ্রিল","মে","জুন","জুলাই","অগাস্ট","সেপ্টেম্বর","অক্টোবর","নভেম্বর","ডিসেম্বর"],
		today: "আজ",
		monthsTitle: "মাস",
		clear: "পরিষ্কার",
		weekStart: 0,
		format: "mm/dd/yyyy"
	};
}(jQuery));
/**
 * Breton translation for bootstrap-datepicker
 * Gwenn Meynier <tornoz@laposte.net>
 */

;(function($){
	$.fn.datepicker.dates['br'] = {
		days: ["Sul", "Lun", "Meurzh", "Merc'her", "Yaou", "Gwener", "Sadorn"],
		daysShort: ["Sul", "Lun", "Meu.", "Mer.", "Yao.", "Gwe.", "Sad."],
		daysMin: ["Su", "L", "Meu", "Mer", "Y", "G", "Sa"],
		months: ["Genver", "C'hwevrer", "Meurzh", "Ebrel", "Mae", "Mezheven", "Gouere", "Eost", "Gwengolo", "Here", "Du", "Kerzu"],
		monthsShort: ["Genv.", "C'hw.", "Meur.", "Ebre.", "Mae", "Mezh.", "Goue.", "Eost", "Gwen.", "Here", "Du", "Kerz."],
		today: "Hiziv",
		monthsTitle: "Miz",
		clear: "Dilemel",
		weekStart: 1,
		format: "dd/mm/yyyy"
	};
}(jQuery));
/**
 * Bosnian translation for bootstrap-datepicker
 */

;(function($){
	$.fn.datepicker.dates['bs'] = {
		days: ["Nedjelja","Ponedjeljak", "Utorak", "Srijeda", "Četvrtak", "Petak", "Subota"],
		daysShort: ["Ned", "Pon", "Uto", "Sri", "Čet", "Pet", "Sub"],
		daysMin: ["N", "Po", "U", "Sr", "Č", "Pe", "Su"],
		months: ["Januar", "Februar", "Mart", "April", "Maj", "Juni", "Juli", "August", "Septembar", "Oktobar", "Novembar", "Decembar"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"],
		today: "Danas",
		weekStart: 1,
		format: "dd.mm.yyyy"
	};
}(jQuery));
/**
 * Catalan translation for bootstrap-datepicker
 * J. Garcia <jogaco.en@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['ca'] = {
		days: ["Diumenge", "Dilluns", "Dimarts", "Dimecres", "Dijous", "Divendres", "Dissabte"],
		daysShort: ["Diu",  "Dil", "Dmt", "Dmc", "Dij", "Div", "Dis"],
		daysMin: ["dg", "dl", "dt", "dc", "dj", "dv", "ds"],
		months: ["Gener", "Febrer", "Març", "Abril", "Maig", "Juny", "Juliol", "Agost", "Setembre", "Octubre", "Novembre", "Desembre"],
		monthsShort: ["Gen", "Feb", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Oct", "Nov", "Des"],
		today: "Avui",
		monthsTitle: "Mesos",
		clear: "Esborrar",
		weekStart: 1,
		format: "dd/mm/yyyy"
	};
}(jQuery));
/**
 * Czech translation for bootstrap-datepicker
 * Matěj Koubík <matej@koubik.name>
 * Fixes by Michal Remiš <michal.remis@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['cs'] = {
		days: ["Neděle", "Pondělí", "Úterý", "Středa", "Čtvrtek", "Pátek", "Sobota"],
		daysShort: ["Ned", "Pon", "Úte", "Stř", "Čtv", "Pát", "Sob"],
		daysMin: ["Ne", "Po", "Út", "St", "Čt", "Pá", "So"],
		months: ["Leden", "Únor", "Březen", "Duben", "Květen", "Červen", "Červenec", "Srpen", "Září", "Říjen", "Listopad", "Prosinec"],
		monthsShort: ["Led", "Úno", "Bře", "Dub", "Kvě", "Čer", "Čnc", "Srp", "Zář", "Říj", "Lis", "Pro"],
		today: "Dnes",
		clear: "Vymazat",
		monthsTitle: "Měsíc",
		weekStart: 1,
		format: "dd.mm.yyyy"
	};
}(jQuery));
/**
 * Welsh translation for bootstrap-datepicker
 * S. Morris <s.morris@bangor.ac.uk>
 */

;(function($){
	$.fn.datepicker.dates['cy'] = {
		days: ["Sul", "Llun", "Mawrth", "Mercher", "Iau", "Gwener", "Sadwrn"],
		daysShort: ["Sul", "Llu", "Maw", "Mer", "Iau", "Gwe", "Sad"],
		daysMin: ["Su", "Ll", "Ma", "Me", "Ia", "Gwe", "Sa"],
		months: ["Ionawr", "Chewfror", "Mawrth", "Ebrill", "Mai", "Mehefin", "Gorfennaf", "Awst", "Medi", "Hydref", "Tachwedd", "Rhagfyr"],
		monthsShort: ["Ion", "Chw", "Maw", "Ebr", "Mai", "Meh", "Gor", "Aws", "Med", "Hyd", "Tach", "Rha"],
		today: "Heddiw"
	};
}(jQuery));
/**
 * Danish translation for bootstrap-datepicker
 * Christian Pedersen <http://github.com/chripede>
 * Ivan Mylyanyk <https://github.com/imylyanyk>
 */

;(function($){
	$.fn.datepicker.dates['da'] = {
		days: ["Søndag", "Mandag", "Tirsdag", "Onsdag", "Torsdag", "Fredag", "Lørdag"],
		daysShort: ["Søn", "Man", "Tir", "Ons", "Tor", "Fre", "Lør"],
		daysMin: ["Sø", "Ma", "Ti", "On", "To", "Fr", "Lø"],
		months: ["Januar", "Februar", "Marts", "April", "Maj", "Juni", "Juli", "August", "September", "Oktober", "November", "December"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"],
		today: "I Dag",
		weekStart: 1,
		clear: "Nulstil",
        format: "dd/mm/yyyy",
        monthsTitle:"Måneder"
	};
}(jQuery));
/**
 * German translation for bootstrap-datepicker
 * Sam Zurcher <sam@orelias.ch>
 */

;(function($){
	$.fn.datepicker.dates['de'] = {
		days: ["Sonntag", "Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag"],
		daysShort: ["Son", "Mon", "Die", "Mit", "Don", "Fre", "Sam"],
		daysMin: ["So", "Mo", "Di", "Mi", "Do", "Fr", "Sa"],
		months: ["Januar", "Februar", "März", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Dezember"],
		monthsShort: ["Jan", "Feb", "Mär", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dez"],
		today: "Heute",
		monthsTitle: "Monate",
		clear: "Löschen",
		weekStart: 1,
		format: "dd.mm.yyyy"
	};
}(jQuery));
/**
 * Greek translation for bootstrap-datepicker
 */

;(function($){
  $.fn.datepicker.dates['el'] = {
    days: ["Κυριακή", "Δευτέρα", "Τρίτη", "Τετάρτη", "Πέμπτη", "Παρασκευή", "Σάββατο"],
    daysShort: ["Κυρ", "Δευ", "Τρι", "Τετ", "Πεμ", "Παρ", "Σαβ"],
    daysMin: ["Κυ", "Δε", "Τρ", "Τε", "Πε", "Πα", "Σα"],
    months: ["Ιανουάριος", "Φεβρουάριος", "Μάρτιος", "Απρίλιος", "Μάιος", "Ιούνιος", "Ιούλιος", "Αύγουστος", "Σεπτέμβριος", "Οκτώβριος", "Νοέμβριος", "Δεκέμβριος"],
    monthsShort: ["Ιαν", "Φεβ", "Μαρ", "Απρ", "Μάι", "Ιουν", "Ιουλ", "Αυγ", "Σεπ", "Οκτ", "Νοε", "Δεκ"],
    today: "Σήμερα",
    clear: "Καθαρισμός",
    weekStart: 1,
    format: "d/m/yyyy"
  };
}(jQuery));
/**
 * Australian English translation for bootstrap-datepicker
 * Steve Chapman <steven.p.chapman@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['en-AU'] = {
		days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
		daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
		daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
		months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
		today: "Today",
		monthsTitle: "Months",
		clear: "Clear",
		weekStart: 1,
		format: "d/mm/yyyy"
	};
}(jQuery));
/**
 * Canadian English translation for bootstrap-datepicker
 * Mike Nacey <mnacey@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['en-CA'] = {
		days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
		daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
		daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
		months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
		today: "Today",
		monthsTitle: "Months",
		clear: "Clear",
		weekStart: 0,
		format: "yyyy-mm-dd"
	};
}(jQuery));
/**
 * British English translation for bootstrap-datepicker
 * Xavier Dutreilh <xavier@dutreilh.com>
 */

;(function($){
	$.fn.datepicker.dates['en-GB'] = {
		days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
		daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
		daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
		months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
		today: "Today",
		monthsTitle: "Months",
		clear: "Clear",
		weekStart: 1,
		format: "dd/mm/yyyy"
	};
}(jQuery));
/**
 * Irish English translation for bootstrap-datepicker
 */

;(function($){
	$.fn.datepicker.dates['en-IE'] = {
		days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
		daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
		daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
		months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
		today: "Today",
		monthsTitle: "Months",
		clear: "Clear",
		weekStart: 1,
		format: "dd/mm/yyyy"
	};
}(jQuery));
/**
 * New Zealand English translation for bootstrap-datepicker
 */

;(function($){
	$.fn.datepicker.dates['en-NZ'] = {
		days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
		daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
		daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
		months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
		today: "Today",
		monthsTitle: "Months",
		clear: "Clear",
		weekStart: 1,
		format: "d/mm/yyyy"
	};
}(jQuery));
/**
 * South African English translation for bootstrap-datepicker
 */

;(function($){
	$.fn.datepicker.dates['en-ZA'] = {
		days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
		daysShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
		daysMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
		months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
		today: "Today",
		monthsTitle: "Months",
		clear: "Clear",
		weekStart: 1,
		format: "yyyy/mm/d"
	};
}(jQuery));
/**
 * Esperanto translation for bootstrap-datepicker
 * Emmanuel Debanne <https://github.com/debanne>
 */

;(function($){
	$.fn.datepicker.dates['eo'] = {
		days: ["dimanĉo", "lundo", "mardo", "merkredo", "ĵaŭdo", "vendredo", "sabato"],
		daysShort: ["dim.", "lun.", "mar.", "mer.", "ĵaŭ.", "ven.", "sam."],
		daysMin: ["d", "l", "ma", "me", "ĵ", "v", "s"],
		months: ["januaro", "februaro", "marto", "aprilo", "majo", "junio", "julio", "aŭgusto", "septembro", "oktobro", "novembro", "decembro"],
		monthsShort: ["jan.", "feb.", "mar.", "apr.", "majo", "jun.", "jul.", "aŭg.", "sep.", "okt.", "nov.", "dec."],
		today: "Hodiaŭ",
		clear: "Nuligi",
		weekStart: 1,
		format: "yyyy-mm-dd"
	};
}(jQuery));
/**
 * Spanish translation for bootstrap-datepicker
 * Bruno Bonamin <bruno.bonamin@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['es'] = {
		days: ["Domingo", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado"],
		daysShort: ["Dom", "Lun", "Mar", "Mié", "Jue", "Vie", "Sáb"],
		daysMin: ["Do", "Lu", "Ma", "Mi", "Ju", "Vi", "Sa"],
		months: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"],
		monthsShort: ["Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul", "Ago", "Sep", "Oct", "Nov", "Dic"],
		today: "Hoy",
		monthsTitle: "Meses",
		clear: "Borrar",
		weekStart: 1,
		format: "dd/mm/yyyy"
	};
}(jQuery));
/**
 * Estonian translation for bootstrap-datepicker
 * Ando Roots <https://github.com/anroots>
 * Fixes by Illimar Tambek <<https://github.com/ragulka>
 */

;(function($){
	$.fn.datepicker.dates['et'] = {
		days: ["Pühapäev", "Esmaspäev", "Teisipäev", "Kolmapäev", "Neljapäev", "Reede", "Laupäev"],
		daysShort: ["Pühap", "Esmasp", "Teisip", "Kolmap", "Neljap", "Reede", "Laup"],
		daysMin: ["P", "E", "T", "K", "N", "R", "L"],
		months: ["Jaanuar", "Veebruar", "Märts", "Aprill", "Mai", "Juuni", "Juuli", "August", "September", "Oktoober", "November", "Detsember"],
		monthsShort: ["Jaan", "Veebr", "Märts", "Apr", "Mai", "Juuni", "Juuli", "Aug", "Sept", "Okt", "Nov", "Dets"],
		today: "Täna",
		clear: "Tühjenda",
		weekStart: 1,
		format: "dd.mm.yyyy"
	};
}(jQuery));
/**
 * Basque translation for bootstrap-datepicker
 * Arkaitz Etxeberria <kondi80@gmail.com>
 */

;(function($){
    $.fn.datepicker.dates['eu'] = {
        days: ['Igandea', 'Astelehena', 'Asteartea', 'Asteazkena', 'Osteguna', 'Ostirala', 'Larunbata'],
        daysShort: ['Ig', 'Al', 'Ar', 'Az', 'Og', 'Ol', 'Lr'],
        daysMin: ['Ig', 'Al', 'Ar', 'Az', 'Og', 'Ol', 'Lr'],
        months: ['Urtarrila', 'Otsaila', 'Martxoa', 'Apirila', 'Maiatza', 'Ekaina', 'Uztaila', 'Abuztua', 'Iraila', 'Urria', 'Azaroa', 'Abendua'],
        monthsShort: ['Urt', 'Ots', 'Mar', 'Api', 'Mai', 'Eka', 'Uzt', 'Abu', 'Ira', 'Urr', 'Aza', 'Abe'],
        today: "Gaur",
        monthsTitle: "Hilabeteak",
        clear: "Ezabatu",
        weekStart: 1,
        format: "yyyy/mm/dd"
    };
}(jQuery));

/**
 * Persian translation for bootstrap-datepicker
 * Mostafa Rokooie <mostafa.rokooie@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['fa'] = {
		days: ["یک‌شنبه", "دوشنبه", "سه‌شنبه", "چهارشنبه", "پنج‌شنبه", "جمعه", "شنبه", "یک‌شنبه"],
		daysShort: ["یک", "دو", "سه", "چهار", "پنج", "جمعه", "شنبه", "یک"],
		daysMin: ["ی", "د", "س", "چ", "پ", "ج", "ش", "ی"],
		months: ["ژانویه", "فوریه", "مارس", "آوریل", "مه", "ژوئن", "ژوئیه", "اوت", "سپتامبر", "اکتبر", "نوامبر", "دسامبر"],
		monthsShort: ["ژان", "فور", "مار", "آور", "مه", "ژون", "ژوی", "اوت", "سپت", "اکت", "نوا", "دسا"],
		today: "امروز",
		clear: "پاک کن",
		weekStart: 1,
		format: "yyyy/mm/dd"
	};
}(jQuery));
/**
 * Finnish translation for bootstrap-datepicker
 * Jaakko Salonen <https://github.com/jsalonen>
 */

;(function($){
	$.fn.datepicker.dates['fi'] = {
		days: ["sunnuntai", "maanantai", "tiistai", "keskiviikko", "torstai", "perjantai", "lauantai"],
		daysShort: ["sun", "maa", "tii", "kes", "tor", "per", "lau"],
		daysMin: ["su", "ma", "ti", "ke", "to", "pe", "la"],
		months: ["tammikuu", "helmikuu", "maaliskuu", "huhtikuu", "toukokuu", "kesäkuu", "heinäkuu", "elokuu", "syyskuu", "lokakuu", "marraskuu", "joulukuu"],
		monthsShort: ["tam", "hel", "maa", "huh", "tou", "kes", "hei", "elo", "syy", "lok", "mar", "jou"],
		today: "tänään",
		clear: "Tyhjennä",
		weekStart: 1,
		format: "d.m.yyyy"
	};
}(jQuery));
/**
 * Faroese translation for bootstrap-datepicker
 * Theodor Johannesen <http://github.com/theodorjohannesen>
 */

;(function($){
	$.fn.datepicker.dates['fo'] = {
		days: ["Sunnudagur", "Mánadagur", "Týsdagur", "Mikudagur", "Hósdagur", "Fríggjadagur", "Leygardagur"],
		daysShort: ["Sun", "Mán", "Týs", "Mik", "Hós", "Frí", "Ley"],
		daysMin: ["Su", "Má", "Tý", "Mi", "Hó", "Fr", "Le"],
		months: ["Januar", "Februar", "Marts", "Apríl", "Mei", "Juni", "Juli", "August", "Septembur", "Oktobur", "Novembur", "Desembur"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"],
		today: "Í Dag",
		clear: "Reinsa"
	};
}(jQuery));
/**
 * French (Switzerland) translation for bootstrap-datepicker
 * Christoph Jossi <c.jossi@ascami.ch>
 * Based on 
 * French translation for bootstrap-datepicker
 * Nico Mollet <nico.mollet@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['fr'] = {
		days: ["Dimanche", "Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi", "Samedi"],
		daysShort: ["Dim", "Lun", "Mar", "Mer", "Jeu", "Ven", "Sam"],
		daysMin: ["D", "L", "Ma", "Me", "J", "V", "S"],
		months: ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"],
		monthsShort: ["Jan", "Fév", "Mar", "Avr", "Mai", "Jui", "Jul", "Aou", "Sep", "Oct", "Nov", "Déc"],
		today: "Aujourd'hui",
		monthsTitle: "Mois",
		clear: "Effacer",
		weekStart: 1,
		format: "dd.mm.yyyy"
	};
}(jQuery));
/**
 * French translation for bootstrap-datepicker
 * Nico Mollet <nico.mollet@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['fr'] = {
		days: ["dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"],
		daysShort: ["dim.", "lun.", "mar.", "mer.", "jeu.", "ven.", "sam."],
		daysMin: ["d", "l", "ma", "me", "j", "v", "s"],
		months: ["janvier", "février", "mars", "avril", "mai", "juin", "juillet", "août", "septembre", "octobre", "novembre", "décembre"],
		monthsShort: ["janv.", "févr.", "mars", "avril", "mai", "juin", "juil.", "août", "sept.", "oct.", "nov.", "déc."],
		today: "Aujourd'hui",
		monthsTitle: "Mois",
		clear: "Effacer",
		weekStart: 1,
		format: "dd/mm/yyyy"
	};
}(jQuery));
;(function($){
	$.fn.datepicker.dates['gl'] = {
		days: ["Domingo", "Luns", "Martes", "Mércores", "Xoves", "Venres", "Sábado"],
		daysShort: ["Dom", "Lun", "Mar", "Mér", "Xov", "Ven", "Sáb"],
		daysMin: ["Do", "Lu", "Ma", "Me", "Xo", "Ve", "Sa"],
		months: ["Xaneiro", "Febreiro", "Marzo", "Abril", "Maio", "Xuño", "Xullo", "Agosto", "Setembro", "Outubro", "Novembro", "Decembro"],
		monthsShort: ["Xan", "Feb", "Mar", "Abr", "Mai", "Xun", "Xul", "Ago", "Sep", "Out", "Nov", "Dec"],
		today: "Hoxe",
		clear: "Limpar",
		weekStart: 1,
		format: "dd/mm/yyyy"
	};
}(jQuery));
/**
 * Hebrew translation for bootstrap-datepicker
 * Sagie Maoz <sagie@maoz.info>
 */

;(function($){
  $.fn.datepicker.dates['he'] = {
      days: ["ראשון", "שני", "שלישי", "רביעי", "חמישי", "שישי", "שבת", "ראשון"],
      daysShort: ["א", "ב", "ג", "ד", "ה", "ו", "ש", "א"],
      daysMin: ["א", "ב", "ג", "ד", "ה", "ו", "ש", "א"],
      months: ["ינואר", "פברואר", "מרץ", "אפריל", "מאי", "יוני", "יולי", "אוגוסט", "ספטמבר", "אוקטובר", "נובמבר", "דצמבר"],
      monthsShort: ["ינו", "פבר", "מרץ", "אפר", "מאי", "יונ", "יול", "אוג", "ספט", "אוק", "נוב", "דצמ"],
      today: "היום",
      rtl: true
  };
}(jQuery));
/**
 * Hindi translation for bootstrap-datepicker
 * Visar Uruqi <visar.uruqi@gmail.com>
 */

; (function($){
	$.fn.datepicker.dates['hi'] = {
		days: ["रविवार", "सोमवार", "मंगलवार", "बुधवार", "गुरुवार", "शुक्रवार", "शनिवार"],
		daysShort: ["सूर्य", "सोम", "मंगल", "बुध", "गुरु", "शुक्र", "शनि"],
		daysMin: ["र", "सो", "मं", "बु", "गु", "शु", "श"],
		months: ["जनवरी", "फ़रवरी", "मार्च", "अप्रैल", "मई", "जून", "जुलाई", "अगस्त", "सितम्बर", "अक्टूबर", "नवंबर", "दिसम्बर"],
		monthsShort: ["जन", "फ़रवरी", "मार्च", "अप्रैल", "मई", "जून", "जुलाई", "अगस्त", "सितं", "अक्टूबर", "नवं", "दिसम्बर"],
		today: "आज",
		monthsTitle: "महीने",
		clear: "साफ",
		weekStart: 1,
		format: "dd / mm / yyyy"
	};
}(jQuery));
/**
 * Croatian localisation
 */

;(function($){
	$.fn.datepicker.dates['hr'] = {
		days: ["Nedjelja", "Ponedjeljak", "Utorak", "Srijeda", "Četvrtak", "Petak", "Subota"],
		daysShort: ["Ned", "Pon", "Uto", "Sri", "Čet", "Pet", "Sub"],
		daysMin: ["Ne", "Po", "Ut", "Sr", "Če", "Pe", "Su"],
		months: ["Siječanj", "Veljača", "Ožujak", "Travanj", "Svibanj", "Lipanj", "Srpanj", "Kolovoz", "Rujan", "Listopad", "Studeni", "Prosinac"],
		monthsShort: ["Sij", "Velj", "Ožu", "Tra", "Svi", "Lip", "Srp", "Kol", "Ruj", "Lis", "Stu", "Pro"],
		today: "Danas"
	};
}(jQuery));
/**
 * Hungarian translation for bootstrap-datepicker
 * Sotus László <lacisan@gmail.com>
 */

;(function($){
  $.fn.datepicker.dates['hu'] = {
		days: ["vasárnap", "hétfő", "kedd", "szerda", "csütörtök", "péntek", "szombat"],
		daysShort: ["vas", "hét", "ked", "sze", "csü", "pén", "szo"],
		daysMin: ["V", "H", "K", "Sze", "Cs", "P", "Szo"],
		months: ["január", "február", "március", "április", "május", "június", "július", "augusztus", "szeptember", "október", "november", "december"],
		monthsShort: ["jan", "feb", "már", "ápr", "máj", "jún", "júl", "aug", "sze", "okt", "nov", "dec"],
		today: "ma",
		weekStart: 1,
		clear: "töröl",
		titleFormat: "yyyy. MM",
		format: "yyyy.mm.dd"
	};
}(jQuery));
/**
 * Armenian translation for bootstrap-datepicker
 * Hayk Chamyan <hamshen@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['hy'] = {
		days: ["Կիրակի", "Երկուշաբթի", "Երեքշաբթի", "Չորեքշաբթի", "Հինգշաբթի", "Ուրբաթ", "Շաբաթ"],
		daysShort: ["Կիր", "Երկ", "Երե", "Չոր", "Հին", "Ուրբ", "Շաբ"],
		daysMin: ["Կի", "Եկ", "Եք", "Չո", "Հի", "Ու", "Շա"],
		months: ["Հունվար", "Փետրվար", "Մարտ", "Ապրիլ", "Մայիս", "Հունիս", "Հուլիս", "Օգոստոս", "Սեպտեմբեր", "Հոկտեմբեր", "Նոյեմբեր", "Դեկտեմբեր"],
		monthsShort: ["Հնվ", "Փետ", "Մար", "Ապր", "Մայ", "Հուն", "Հուլ", "Օգս", "Սեպ", "Հոկ", "Նոյ", "Դեկ"],
		today: "Այսօր",
		clear: "Ջնջել",
		format: "dd.mm.yyyy",
		weekStart: 1,
    monthsTitle: 'Ամիսնէր'
	};
}(jQuery));
/**
 * Bahasa translation for bootstrap-datepicker
 * Azwar Akbar <azwar.akbar@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['id'] = {
		days: ["Minggu", "Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu"],
		daysShort: ["Mgu", "Sen", "Sel", "Rab", "Kam", "Jum", "Sab"],
		daysMin: ["Mg", "Sn", "Sl", "Ra", "Ka", "Ju", "Sa"],
		months: ["Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Ags", "Sep", "Okt", "Nov", "Des"],
		today: "Hari Ini",
		clear: "Kosongkan"
	};
}(jQuery));
/**
 * Icelandic translation for bootstrap-datepicker
 * Hinrik Örn Sigurðsson <hinrik.sig@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['is'] = {
		days: ["Sunnudagur", "Mánudagur", "Þriðjudagur", "Miðvikudagur", "Fimmtudagur", "Föstudagur", "Laugardagur"],
		daysShort: ["Sun", "Mán", "Þri", "Mið", "Fim", "Fös", "Lau"],
		daysMin: ["Su", "Má", "Þr", "Mi", "Fi", "Fö", "La"],
		months: ["Janúar", "Febrúar", "Mars", "Apríl", "Maí", "Júní", "Júlí", "Ágúst", "September", "Október", "Nóvember", "Desember"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "Maí", "Jún", "Júl", "Ágú", "Sep", "Okt", "Nóv", "Des"],
		today: "Í Dag"
	};
}(jQuery));
/**
 * Italian (Switzerland) translation for bootstrap-datepicker
 * Christoph Jossi <c.jossi@ascami.ch>
 * Based on 
 * Italian translation for bootstrap-datepicker
 * Enrico Rubboli <rubboli@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['it'] = {
		days: ["Domenica", "Lunedì", "Martedì", "Mercoledì", "Giovedì", "Venerdì", "Sabato"],
		daysShort: ["Dom", "Lun", "Mar", "Mer", "Gio", "Ven", "Sab"],
		daysMin: ["Do", "Lu", "Ma", "Me", "Gi", "Ve", "Sa"],
		months: ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"],
		monthsShort: ["Gen", "Feb", "Mar", "Apr", "Mag", "Giu", "Lug", "Ago", "Set", "Ott", "Nov", "Dic"],
		today: "Oggi",
		clear: "Cancella",
		weekStart: 1,
		format: "dd.mm.yyyy"
	};
}(jQuery));
/**
 * Italian translation for bootstrap-datepicker
 * Enrico Rubboli <rubboli@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['it'] = {
		days: ["Domenica", "Lunedì", "Martedì", "Mercoledì", "Giovedì", "Venerdì", "Sabato"],
		daysShort: ["Dom", "Lun", "Mar", "Mer", "Gio", "Ven", "Sab"],
		daysMin: ["Do", "Lu", "Ma", "Me", "Gi", "Ve", "Sa"],
		months: ["Gennaio", "Febbraio", "Marzo", "Aprile", "Maggio", "Giugno", "Luglio", "Agosto", "Settembre", "Ottobre", "Novembre", "Dicembre"],
		monthsShort: ["Gen", "Feb", "Mar", "Apr", "Mag", "Giu", "Lug", "Ago", "Set", "Ott", "Nov", "Dic"],
		today: "Oggi",
		monthsTitle: "Mesi",
		clear: "Cancella",
		weekStart: 1,
		format: "dd/mm/yyyy"
	};
}(jQuery));
/**
 * Japanese translation for bootstrap-datepicker
 * Norio Suzuki <https://github.com/suzuki/>
 */

;(function($){
	$.fn.datepicker.dates['ja'] = {
		days: ["日曜", "月曜", "火曜", "水曜", "木曜", "金曜", "土曜"],
		daysShort: ["日", "月", "火", "水", "木", "金", "土"],
		daysMin: ["日", "月", "火", "水", "木", "金", "土"],
		months: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
		monthsShort: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
		today: "今日",
		format: "yyyy/mm/dd",
		titleFormat: "yyyy年mm月",
		clear: "クリア"
	};
}(jQuery));
/**
 * Georgian translation for bootstrap-datepicker
 * Levan Melikishvili <levani0101@yahoo.com>
 */

;(function($){
    $.fn.datepicker.dates['ka'] = {
        days: ["კვირა", "ორშაბათი", "სამშაბათი", "ოთხშაბათი", "ხუთშაბათი", "პარასკევი", "შაბათი"],
        daysShort: ["კვი", "ორშ", "სამ", "ოთხ", "ხუთ", "პარ", "შაბ"],
        daysMin: ["კვ", "ორ", "სა", "ოთ", "ხუ", "პა", "შა"],
        months: ["იანვარი", "თებერვალი", "მარტი", "აპრილი", "მაისი", "ივნისი", "ივლისი", "აგვისტო", "სექტემბერი", "ოქტომბერი", "ნოემბერი", "დეკემბერი"],
        monthsShort: ["იან", "თებ", "მარ", "აპრ", "მაი", "ივნ", "ივლ", "აგვ", "სექ", "ოქტ", "ნოე", "დეკ"],
        today: "დღეს",
        clear: "გასუფთავება",
        weekStart: 1,
        format: "dd.mm.yyyy"
    };
}(jQuery));
/**
 * Cambodia (Khmer) translation for bootstrap-datepicker
 * Lytay TOUCH <lytaytouch@gmail.com>
 *
 * DEPRECATED: This language code 'kh' is deprecated and will be removed in 2.0.
 * Khmer support is now in a 'km' translation file to follow the ISO language
 * code - http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
 */

;(function($){
	$.fn.datepicker.dates['kh'] = {
		days: ["អាទិត្យ", "ចន្ទ", "អង្គារ", "ពុធ", "ព្រហស្បតិ៍", "សុក្រ", "សៅរ៍"],
		daysShort: ["អា.ទិ", "ចន្ទ", "អង្គារ", "ពុធ", "ព្រ.ហ", "សុក្រ", "សៅរ៍"],
		daysMin: ["អា.ទិ", "ចន្ទ", "អង្គារ", "ពុធ", "ព្រ.ហ", "សុក្រ", "សៅរ៍"],
		months: ["មករា", "កុម្ភះ", "មិនា", "មេសា", "ឧសភា", "មិថុនា", "កក្កដា", "សីហា", "កញ្ញា", "តុលា", "វិច្ឆិកា", "ធ្នូ"],
		monthsShort: ["មករា", "កុម្ភះ", "មិនា", "មេសា", "ឧសភា", "មិថុនា", "កក្កដា", "សីហា", "កញ្ញា", "តុលា", "វិច្ឆិកា", "ធ្នូ"],
		today: "ថ្ងៃនេះ",
		clear: "សំអាត"
	};

	$.fn.datepicker.deprecated('The language code "kh" is deprecated and will be removed in 2.0. For Khmer support use "km" instead.');
}(jQuery));
/**
 * Kazakh translation for bootstrap-datepicker
 * Yerzhan Tolekov <era.tolekov@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['kk'] = {
		days: ["Жексенбі", "Дүйсенбі", "Сейсенбі", "Сәрсенбі", "Бейсенбі", "Жұма", "Сенбі"],
		daysShort: ["Жек", "Дүй", "Сей", "Сәр", "Бей", "Жұм", "Сен"],
		daysMin: ["Жк", "Дс", "Сс", "Ср", "Бс", "Жм", "Сн"],
		months: ["Қаңтар", "Ақпан", "Наурыз", "Сәуір", "Мамыр", "Маусым", "Шілде", "Тамыз", "Қыркүйек", "Қазан", "Қараша", "Желтоқсан"],
		monthsShort: ["Қаң", "Ақп", "Нау", "Сәу", "Мам", "Мау", "Шіл", "Там", "Қыр", "Қаз", "Қар", "Жел"],
		today: "Бүгін",
		weekStart: 1
	};
}(jQuery));
/**
 * Khmer translation for bootstrap-datepicker
 * This is the Updated Version of: https://github.com/uxsolutions/bootstrap-datepicker/blob/71308d42cce9524284c50c6fac50422d1790ac0f/js/locales/bootstrap-datepicker.kh.js
 */

;(function($){
  $.fn.datepicker.dates['km'] = {
    days: ["អាទិត្យ", "ចន្ទ", "អង្គារ", "ពុធ", "ព្រហស្បតិ៍", "សុក្រ", "សៅរ៍"],
    daysShort: ["អា.ទិ", "ចន្ទ", "អង្គារ", "ពុធ", "ព្រ.ហ", "សុក្រ", "សៅរ៍"],
    daysMin: ["អា.ទិ", "ចន្ទ", "អង្គារ", "ពុធ", "ព្រ.ហ", "សុក្រ", "សៅរ៍"],
    months: ["មករា", "កុម្ភះ", "មិនា", "មេសា", "ឧសភា", "មិថុនា", "កក្កដា", "សីហា", "កញ្ញា", "តុលា", "វិច្ឆិកា", "ធ្នូ"],
    monthsShort: ["មករា", "កុម្ភះ", "មិនា", "មេសា", "ឧសភា", "មិថុនា", "កក្កដា", "សីហា", "កញ្ញា", "តុលា", "វិច្ឆិកា", "ធ្នូ"],
    today: "ថ្ងៃនេះ",
    clear: "សំអាត"
  };
}(jQuery));
/**
 * Korean translation for bootstrap-datepicker
 * This is a port from https://github.com/moment/moment/blob/develop/src/locale/ko.js
 */

;(function($){
	$.fn.datepicker.dates['ko'] = {
		days: ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"],
		daysShort: ["일", "월", "화", "수", "목", "금", "토"],
		daysMin: ["일", "월", "화", "수", "목", "금", "토"],
		months: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"],
		monthsShort: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"],
		today: "오늘",
		clear: "삭제",
		format: "yyyy-mm-dd",
		titleFormat: "yyyy년mm월",
		weekStart: 0
	};
}(jQuery));
/**
 * Korean translation for bootstrap-datepicker
 * Gu Youn <http://github.com/guyoun>
 *
 * DEPRECATED: This language code 'kr' is deprecated and will be removed in 2.0.
 * Korean support is now in a 'ko' translation file to follow the ISO language
 * code - http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes
 */

;(function($){
	$.fn.datepicker.dates['kr'] = {
		days: ["일요일", "월요일", "화요일", "수요일", "목요일", "금요일", "토요일"],
		daysShort: ["일", "월", "화", "수", "목", "금", "토"],
		daysMin: ["일", "월", "화", "수", "목", "금", "토"],
		months: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"],
		monthsShort: ["1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월"]
	};

	$.fn.datepicker.deprecated('The language code "kr" is deprecated and will be removed in 2.0. For korean support use "ko" instead.');
}(jQuery));
/**
 * Lithuanian translation for bootstrap-datepicker
 * Šarūnas Gliebus <ssharunas@yahoo.co.uk>
 */


;(function($){
    $.fn.datepicker.dates['lt'] = {
        days: ["Sekmadienis", "Pirmadienis", "Antradienis", "Trečiadienis", "Ketvirtadienis", "Penktadienis", "Šeštadienis"],
        daysShort: ["S", "Pr", "A", "T", "K", "Pn", "Š"],
        daysMin: ["Sk", "Pr", "An", "Tr", "Ke", "Pn", "Št"],
        months: ["Sausis", "Vasaris", "Kovas", "Balandis", "Gegužė", "Birželis", "Liepa", "Rugpjūtis", "Rugsėjis", "Spalis", "Lapkritis", "Gruodis"],
        monthsShort: ["Sau", "Vas", "Kov", "Bal", "Geg", "Bir", "Lie", "Rugp", "Rugs", "Spa", "Lap", "Gru"],
        today: "Šiandien",
        monthsTitle:"Mėnesiai",
        clear:"Išvalyti",
        weekStart: 1,
        format:"yyyy-mm-dd"
    };
}(jQuery));
/**
 * Latvian translation for bootstrap-datepicker
 * Artis Avotins <artis@apit.lv>
 */


;(function($){
    $.fn.datepicker.dates['lv'] = {
        days: ["Svētdiena", "Pirmdiena", "Otrdiena", "Trešdiena", "Ceturtdiena", "Piektdiena", "Sestdiena"],
        daysShort: ["Sv", "P", "O", "T", "C", "Pk", "S"],
        daysMin: ["Sv", "Pr", "Ot", "Tr", "Ce", "Pk", "Se"],
        months: ["Janvāris", "Februāris", "Marts", "Aprīlis", "Maijs", "Jūnijs", "Jūlijs", "Augusts", "Septembris", "Oktobris", "Novembris", "Decembris"],
        monthsShort: ["Jan", "Feb", "Mar", "Apr", "Mai", "Jūn", "Jūl", "Aug", "Sep", "Okt", "Nov", "Dec"],
        monthsTitle: "Mēneši",
        today: "Šodien",
        clear: "Nodzēst",
        weekStart: 1
    };
}(jQuery));
/**
 * Montenegrin translation for bootstrap-datepicker
 * Miodrag Nikač <miodrag@restartit.me>
 */

;(function($){
	$.fn.datepicker.dates['me'] = {
		days: ["Nedjelja","Ponedjeljak", "Utorak", "Srijeda", "Četvrtak", "Petak", "Subota"],
		daysShort: ["Ned", "Pon", "Uto", "Sri", "Čet", "Pet", "Sub"],
		daysMin: ["Ne", "Po", "Ut", "Sr", "Če", "Pe", "Su"],
		months: ["Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Avg", "Sep", "Okt", "Nov", "Dec"],
		today: "Danas",
		weekStart: 1,
		clear: "Izbriši",
		format: "dd.mm.yyyy"
	};
}(jQuery));
/**
 * Macedonian translation for bootstrap-datepicker
 * Marko Aleksic <psybaron@gmail.com>
 */

;(function($){
    $.fn.datepicker.dates['mk'] = {
        days: ["Недела", "Понеделник", "Вторник", "Среда", "Четврток", "Петок", "Сабота"],
        daysShort: ["Нед", "Пон", "Вто", "Сре", "Чет", "Пет", "Саб"],
        daysMin: ["Не", "По", "Вт", "Ср", "Че", "Пе", "Са"],
        months: ["Јануари", "Февруари", "Март", "Април", "Мај", "Јуни", "Јули", "Август", "Септември", "Октомври", "Ноември", "Декември"],
        monthsShort: ["Јан", "Фев", "Мар", "Апр", "Мај", "Јун", "Јул", "Авг", "Сеп", "Окт", "Ное", "Дек"],
        today: "Денес",
        format: "dd.mm.yyyy"
    };
}(jQuery));
/**
 * Mongolian translation for bootstrap-datepicker
 * Andrey Torsunov <andrey.torsunov@gmail.com>
 */

;(function($){
    $.fn.datepicker.dates['mn'] = {
        days: ["Ням", "Даваа", "Мягмар", "Лхагва", "Пүрэв", "Баасан", "Бямба"],
        daysShort: ["Ням", "Дав", "Мяг", "Лха", "Пүр", "Баа", "Бям"],
        daysMin: ["Ня", "Да", "Мя", "Лх", "Пү", "Ба", "Бя"],
        months: ["Хулгана", "Үхэр", "Бар", "Туулай", "Луу", "Могой", "Морь", "Хонь", "Бич", "Тахиа", "Нохой", "Гахай"],
        monthsShort: ["Хул", "Үхэ", "Бар", "Туу", "Луу", "Мог", "Мор", "Хон", "Бич", "Тах", "Нох", "Гах"],
        today: "Өнөөдөр",
        clear: "Тодорхой",
        format: "yyyy.mm.dd",
        weekStart: 1
    };
}(jQuery));
/**
 * Malay translation for bootstrap-datepicker
 * Ateman Faiz <noorulfaiz@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['ms'] = {
		days: ["Ahad", "Isnin", "Selasa", "Rabu", "Khamis", "Jumaat", "Sabtu"],
		daysShort: ["Aha", "Isn", "Sel", "Rab", "Kha", "Jum", "Sab"],
		daysMin: ["Ah", "Is", "Se", "Ra", "Kh", "Ju", "Sa"],
		months: ["Januari", "Februari", "Mac", "April", "Mei", "Jun", "Julai", "Ogos", "September", "Oktober", "November", "Disember"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "Mei", "Jun", "Jul", "Ogo", "Sep", "Okt", "Nov", "Dis"],
		today: "Hari Ini",
        clear: "Bersihkan"
	};
}(jQuery));
/**
 * Norwegian (bokmål) translation for bootstrap-datepicker
 * Fredrik Sundmyhr <http://github.com/fsundmyhr>
 */

;(function($){
	$.fn.datepicker.dates['nb'] = {
		days: ["Søndag", "Mandag", "Tirsdag", "Onsdag", "Torsdag", "Fredag", "Lørdag"],
		daysShort: ["Søn", "Man", "Tir", "Ons", "Tor", "Fre", "Lør"],
		daysMin: ["Sø", "Ma", "Ti", "On", "To", "Fr", "Lø"],
		months: ["Januar", "Februar", "Mars", "April", "Mai", "Juni", "Juli", "August", "September", "Oktober", "November", "Desember"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "Mai", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Des"],
		today: "I Dag",
		format: "dd.mm.yyyy"
	};
}(jQuery));
/**
 * Belgium-Dutch translation for bootstrap-datepicker
 * Julien Poulin <poulin_julien@hotmail.com>
 */

;(function($){
  $.fn.datepicker.dates['nl-BE'] = {
    days: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"],
    daysShort: ["zo", "ma", "di", "wo", "do", "vr", "za"],
    daysMin: ["zo", "ma", "di", "wo", "do", "vr", "za"],
    months: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"],
    monthsShort: ["jan", "feb", "mrt", "apr", "mei", "jun", "jul", "aug", "sep", "okt", "nov", "dec"],
    today: "Vandaag",
    monthsTitle: "Maanden",
    clear: "Leegmaken",
    weekStart: 1,
    format: "dd/mm/yyyy"
  };
}(jQuery));
/**
 * Dutch translation for bootstrap-datepicker
 * Reinier Goltstein <mrgoltstein@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['nl'] = {
		days: ["zondag", "maandag", "dinsdag", "woensdag", "donderdag", "vrijdag", "zaterdag"],
		daysShort: ["zo", "ma", "di", "wo", "do", "vr", "za"],
		daysMin: ["zo", "ma", "di", "wo", "do", "vr", "za"],
		months: ["januari", "februari", "maart", "april", "mei", "juni", "juli", "augustus", "september", "oktober", "november", "december"],
		monthsShort: ["jan", "feb", "mrt", "apr", "mei", "jun", "jul", "aug", "sep", "okt", "nov", "dec"],
		today: "Vandaag",
		monthsTitle: "Maanden",
		clear: "Wissen",
		weekStart: 1,
		format: "dd-mm-yyyy"
	};
}(jQuery));
/**
 * Norwegian translation for bootstrap-datepicker
 * George Gooding <george@nettsentrisk.no>
 */

;(function($){
  $.fn.datepicker.dates['no'] = {
    days: ['søndag', 'mandag', 'tirsdag', 'onsdag', 'torsdag', 'fredag', 'lørdag'],
    daysShort: ['søn', 'man', 'tir', 'ons', 'tor', 'fre', 'lør'],
    daysMin: ['sø', 'ma', 'ti', 'on', 'to', 'fr', 'lø'],
    months: ['januar', 'februar', 'mars', 'april', 'mai', 'juni', 'juli', 'august', 'september', 'oktober', 'vovember', 'desember'],
    monthsShort: ['jan', 'feb', 'mar', 'apr', 'mai', 'jun', 'jul', 'aug', 'sep', 'okt', 'nov', 'des'],
    today: 'i dag',
    monthsTitle: 'Måneder',
    clear: 'Nullstill',
    weekStart: 1,
    format: 'dd.mm.yyyy'
  };
}(jQuery));
/**
 * Occitan translation for bootstrap-datepicker
 */

;(function($){
	$.fn.datepicker.dates['oc'] = {
		days: ["Dimenge", "Diluns", "Dimars", "Dimècres", "Dijòus", "Divendres", "Dissabte"],
		daysShort: ["Dim",  "Dil", "Dmr", "Dmc", "Dij", "Div", "Dis"],
		daysMin: ["dg", "dl", "dr", "dc", "dj", "dv", "ds"],
		months: ["Genièr", "Febrièr", "Març", "Abrial", "Mai", "Junh", "Julhet", "Agost", "Setembre", "Octobre", "Novembre", "Decembre"],
		monthsShort: ["Gen", "Feb", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Oct", "Nov", "Dec"],
		today: "Uèi",
		monthsTitle: "Meses",
		clear: "Escafar",
		weekStart: 1,
		format: "dd/mm/yyyy"
	};
}(jQuery));
/**
 * Polish translation for bootstrap-datepicker
 * Robert <rtpm@gazeta.pl>
 */

;(function($){
    $.fn.datepicker.dates['pl'] = {
        days: ["Niedziela", "Poniedziałek", "Wtorek", "Środa", "Czwartek", "Piątek", "Sobota"],
        daysShort: ["Niedz.", "Pon.", "Wt.", "Śr.", "Czw.", "Piąt.", "Sob."],
        daysMin: ["Ndz.", "Pn.", "Wt.", "Śr.", "Czw.", "Pt.", "Sob."],
        months: ["Styczeń", "Luty", "Marzec", "Kwiecień", "Maj", "Czerwiec", "Lipiec", "Sierpień", "Wrzesień", "Październik", "Listopad", "Grudzień"],
        monthsShort: ["Sty.", "Lut.", "Mar.", "Kwi.", "Maj", "Cze.", "Lip.", "Sie.", "Wrz.", "Paź.", "Lis.", "Gru."],
        today: "Dzisiaj",
        weekStart: 1,
        clear: "Wyczyść",
        format: "dd.mm.yyyy"
    };
}(jQuery));
/**
 * Brazilian translation for bootstrap-datepicker
 * Cauan Cabral <cauan@radig.com.br>
 */

;(function($){
	$.fn.datepicker.dates['pt-BR'] = {
		days: ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"],
		daysShort: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"],
		daysMin: ["Do", "Se", "Te", "Qu", "Qu", "Se", "Sa"],
		months: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
		monthsShort: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"],
		today: "Hoje",
		monthsTitle: "Meses",
		clear: "Limpar",
		format: "dd/mm/yyyy"
	};
}(jQuery));
/**
 * Portuguese translation for bootstrap-datepicker
 * Original code: Cauan Cabral <cauan@radig.com.br>
 * Tiago Melo <tiago.blackcode@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['pt'] = {
		days: ["Domingo", "Segunda", "Terça", "Quarta", "Quinta", "Sexta", "Sábado"],
		daysShort: ["Dom", "Seg", "Ter", "Qua", "Qui", "Sex", "Sáb"],
		daysMin: ["Do", "Se", "Te", "Qu", "Qu", "Se", "Sa"],
		months: ["Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"],
		monthsShort: ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"],
		today: "Hoje",
		monthsTitle: "Meses",
		clear: "Limpar",
		format: "dd/mm/yyyy"
	};
}(jQuery));
/**
 * Romanian translation for bootstrap-datepicker
 * Cristian Vasile <cristi.mie@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['ro'] = {
		days: ["Duminică", "Luni", "Marţi", "Miercuri", "Joi", "Vineri", "Sâmbătă"],
		daysShort: ["Dum", "Lun", "Mar", "Mie", "Joi", "Vin", "Sâm"],
		daysMin: ["Du", "Lu", "Ma", "Mi", "Jo", "Vi", "Sâ"],
		months: ["Ianuarie", "Februarie", "Martie", "Aprilie", "Mai", "Iunie", "Iulie", "August", "Septembrie", "Octombrie", "Noiembrie", "Decembrie"],
		monthsShort: ["Ian", "Feb", "Mar", "Apr", "Mai", "Iun", "Iul", "Aug", "Sep", "Oct", "Nov", "Dec"],
		today: "Astăzi",
		clear: "Șterge",
		weekStart: 1,
		format: "dd/mm/yyyy"
	};
}(jQuery));
/**
 * Serbian latin translation for bootstrap-datepicker
 * Bojan Milosavlević <milboj@gmail.com>
 *
 * DEPRECATED: This language code 'rs-latin' is deprecated (invalid serbian language code) and will be removed in 2.0.
 */

;(function($){
	$.fn.datepicker.dates['rs-latin'] = {
		days: ["Nedelja","Ponedeljak", "Utorak", "Sreda", "Četvrtak", "Petak", "Subota"],
		daysShort: ["Ned", "Pon", "Uto", "Sre", "Čet", "Pet", "Sub"],
		daysMin: ["N", "Po", "U", "Sr", "Č", "Pe", "Su"],
		months: ["Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Avg", "Sep", "Okt", "Nov", "Dec"],
		today: "Danas",
		weekStart: 1,
		format: "dd.mm.yyyy"
	};

	$.fn.datepicker.deprecated('This language code "rs-latin" is deprecated (invalid serbian language code) and will be removed in 2.0. For Serbian latin support use "sr-latin" instead.');
}(jQuery));
/**
 * Serbian cyrillic translation for bootstrap-datepicker
 * Bojan Milosavlević <milboj@gmail.com>
 *
 * DEPRECATED: This language code 'rs' is deprecated (invalid serbian language code) and will be removed in 2.0.
 */

;(function($){
	$.fn.datepicker.dates['rs'] = {
		days: ["Недеља","Понедељак", "Уторак", "Среда", "Четвртак", "Петак", "Субота"],
		daysShort: ["Нед", "Пон", "Уто", "Сре", "Чет", "Пет", "Суб"],
		daysMin: ["Н", "По", "У", "Ср", "Ч", "Пе", "Су"],
		months: ["Јануар", "Фебруар", "Март", "Април", "Мај", "Јун", "Јул", "Август", "Септембар", "Октобар", "Новембар", "Децембар"],
		monthsShort: ["Јан", "Феб", "Мар", "Апр", "Мај", "Јун", "Јул", "Авг", "Сеп", "Окт", "Нов", "Дец"],
		today: "Данас",
		weekStart: 1,
		format: "dd.mm.yyyy"
	};

	$.fn.datepicker.deprecated('This language code "rs" is deprecated (invalid serbian language code) and will be removed in 2.0. For Serbian support use "sr" instead.');
}(jQuery));
/**
 * Russian translation for bootstrap-datepicker
 * Victor Taranenko <darwin@snowdale.com>
 */

;(function($){
	$.fn.datepicker.dates['ru'] = {
		days: ["Воскресенье", "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота"],
		daysShort: ["Вск", "Пнд", "Втр", "Срд", "Чтв", "Птн", "Суб"],
		daysMin: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
		months: ["Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"],
		monthsShort: ["Янв", "Фев", "Мар", "Апр", "Май", "Июн", "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек"],
		today: "Сегодня",
		clear: "Очистить",
		format: "dd.mm.yyyy",
		weekStart: 1,
    monthsTitle: 'Месяцы'
	};
}(jQuery));
/**
 * Sinhala translation for bootstrap-datepicker
 * Chanaka Fernando <chanaka.fernando@hotmail.com>
 */

;(function($){
	$.fn.datepicker.dates['si'] = {
		days: ["ඉරිදා", "සඳුදා", "අඟහරුවාදා", "බදාදා", "බ්‍රහස්පතින්දා", "සිකුරාදා", "සෙනසුරාදා"],
		daysShort: ["ඉරි", "සඳු", "අඟ", "බදා", "බ්‍රහ", "සිකු", "සෙන"],
		daysMin: ["ඉ", "ස", "අ", "බ", "බ්‍ර", "සි", "සෙ"],
		months: ["ජනවාරි", "පෙබරවාරි", "මාර්තු", "අප්‍රේල්", "මැයි", "ජුනි", "ජූලි", "අගෝස්තු", "සැප්තැම්බර්", "ඔක්තෝබර්", "නොවැම්බර්", "දෙසැම්බර්"],
		monthsShort: ["ජන", "පෙබ", "මාර්", "අප්‍රේ", "මැයි", "ජුනි", "ජූලි", "අගෝ", "සැප්", "ඔක්", "නොවැ", "දෙසැ"],
		today: "අද",
		monthsTitle: "මාස",
		clear: "මකන්න",
		weekStart: 0,
		format: "yyyy-mm-dd"
	};
}(jQuery));
/**
 * Slovak translation for bootstrap-datepicker
 * Marek Lichtner <marek@licht.sk>
 * Fixes by Michal Remiš <michal.remis@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates["sk"] = {
		days: ["Nedeľa", "Pondelok", "Utorok", "Streda", "Štvrtok", "Piatok", "Sobota"],
		daysShort: ["Ned", "Pon", "Uto", "Str", "Štv", "Pia", "Sob"],
		daysMin: ["Ne", "Po", "Ut", "St", "Št", "Pia", "So"],
		months: ["Január", "Február", "Marec", "Apríl", "Máj", "Jún", "Júl", "August", "September", "Október", "November", "December"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "Máj", "Jún", "Júl", "Aug", "Sep", "Okt", "Nov", "Dec"],
		today: "Dnes",
		clear: "Vymazať",
		weekStart: 1,
		format: "d.m.yyyy"
	};
}(jQuery));
/**
 * Slovene translation for bootstrap-datepicker
 * Gregor Rudolf <gregor.rudolf@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['sl'] = {
		days: ["Nedelja", "Ponedeljek", "Torek", "Sreda", "Četrtek", "Petek", "Sobota"],
		daysShort: ["Ned", "Pon", "Tor", "Sre", "Čet", "Pet", "Sob"],
		daysMin: ["Ne", "Po", "To", "Sr", "Če", "Pe", "So"],
		months: ["Januar", "Februar", "Marec", "April", "Maj", "Junij", "Julij", "Avgust", "September", "Oktober", "November", "December"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Avg", "Sep", "Okt", "Nov", "Dec"],
		today: "Danes",
		weekStart: 1
	};
}(jQuery));
/**
 * Albanian translation for bootstrap-datepicker
 * Tomor Pupovci <http://www.github.com/ttomor>
 */

;(function($){
	$.fn.datepicker.dates['sq'] = {
		days: ["E Diel", "E Hënë", "E Martē", "E Mërkurë", "E Enjte", "E Premte", "E Shtunë"],
		daysShort: ["Die", "Hën", "Mar", "Mër", "Enj", "Pre", "Shtu"],
		daysMin: ["Di", "Hë", "Ma", "Më", "En", "Pr", "Sht"],
		months: ["Janar", "Shkurt", "Mars", "Prill", "Maj", "Qershor", "Korrik", "Gusht", "Shtator", "Tetor", "Nëntor", "Dhjetor"],
		monthsShort: ["Jan", "Shk", "Mar", "Pri", "Maj", "Qer", "Korr", "Gu", "Sht", "Tet", "Nën", "Dhjet"],
		today: "Sot"
	};
}(jQuery));

/**
 * Serbian latin translation for bootstrap-datepicker
 * Bojan Milosavlević <milboj@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['sr-latin'] = {
		days: ["Nedelja","Ponedeljak", "Utorak", "Sreda", "Četvrtak", "Petak", "Subota"],
		daysShort: ["Ned", "Pon", "Uto", "Sre", "Čet", "Pet", "Sub"],
		daysMin: ["N", "Po", "U", "Sr", "Č", "Pe", "Su"],
		months: ["Januar", "Februar", "Mart", "April", "Maj", "Jun", "Jul", "Avgust", "Septembar", "Oktobar", "Novembar", "Decembar"],
		monthsShort: ["Jan", "Feb", "Mar", "Apr", "Maj", "Jun", "Jul", "Avg", "Sep", "Okt", "Nov", "Dec"],
		today: "Danas",
		weekStart: 1,
		format: "dd.mm.yyyy"
	};
}(jQuery));
/**
 * Serbian cyrillic translation for bootstrap-datepicker
 * Bojan Milosavlević <milboj@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['sr'] = {
		days: ["Недеља","Понедељак", "Уторак", "Среда", "Четвртак", "Петак", "Субота"],
		daysShort: ["Нед", "Пон", "Уто", "Сре", "Чет", "Пет", "Суб"],
		daysMin: ["Н", "По", "У", "Ср", "Ч", "Пе", "Су"],
		months: ["Јануар", "Фебруар", "Март", "Април", "Мај", "Јун", "Јул", "Август", "Септембар", "Октобар", "Новембар", "Децембар"],
		monthsShort: ["Јан", "Феб", "Мар", "Апр", "Мај", "Јун", "Јул", "Авг", "Сеп", "Окт", "Нов", "Дец"],
		today: "Данас",
		weekStart: 1,
		format: "dd.mm.yyyy"
	};
}(jQuery));
/**
 * Swedish translation for bootstrap-datepicker
 * Patrik Ragnarsson <patrik@starkast.net>
 */

;(function($){
	$.fn.datepicker.dates['sv'] = {
		days: ["söndag", "måndag", "tisdag", "onsdag", "torsdag", "fredag", "lördag"],
		daysShort: ["sön", "mån", "tis", "ons", "tor", "fre", "lör"],
		daysMin: ["sö", "må", "ti", "on", "to", "fr", "lö"],
		months: ["januari", "februari", "mars", "april", "maj", "juni", "juli", "augusti", "september", "oktober", "november", "december"],
		monthsShort: ["jan", "feb", "mar", "apr", "maj", "jun", "jul", "aug", "sep", "okt", "nov", "dec"],
		today: "Idag",
		format: "yyyy-mm-dd",
		weekStart: 1,
		clear: "Rensa"
	};
}(jQuery));
/**
 * Swahili translation for bootstrap-datepicker
 * Edwin Mugendi <https://github.com/edwinmugendi>
 * Source: http://scriptsource.org/cms/scripts/page.php?item_id=entry_detail&uid=xnfaqyzcku
 */

;(function($){
    $.fn.datepicker.dates['sw'] = {
        days: ["Jumapili", "Jumatatu", "Jumanne", "Jumatano", "Alhamisi", "Ijumaa", "Jumamosi"],
        daysShort: ["J2", "J3", "J4", "J5", "Alh", "Ij", "J1"],
        daysMin: ["2", "3", "4", "5", "A", "I", "1"],
        months: ["Januari", "Februari", "Machi", "Aprili", "Mei", "Juni", "Julai", "Agosti", "Septemba", "Oktoba", "Novemba", "Desemba"],
        monthsShort: ["Jan", "Feb", "Mac", "Apr", "Mei", "Jun", "Jul", "Ago", "Sep", "Okt", "Nov", "Des"],
        today: "Leo"
    };
}(jQuery));
/**
 * Tamil translation for bootstrap-datepicker
 * Abubacker Siddik A <abuabdul86@hotmail.com>
 */

;(function($){
	$.fn.datepicker.dates['ta'] = {
		days: ["ஞாயிறு", "திங்கள்", "செவ்வாய்", "புதன்", "வியாழன்", "வெள்ளி", "சனி"],
		daysShort: ["ஞாயி", "திங்", "செவ்", "புத", "வியா", "வெள்", "சனி"],
		daysMin: ["ஞா", "தி", "செ", "பு", "வி", "வெ", "ச"],
		months: ["ஜனவரி", "பிப்ரவரி", "மார்ச்", "ஏப்ரல்", "மே", "ஜூன்", "ஜூலை", "ஆகஸ்டு", "செப்டம்பர்", "அக்டோபர்", "நவம்பர்", "டிசம்பர்"],
		monthsShort: ["ஜன", "பிப்", "மார்", "ஏப்", "மே", "ஜூன்", "ஜூலை", "ஆக", "செப்", "அக்", "நவ", "டிச"],
		today: "இன்று",
		monthsTitle: "மாதங்கள்",
		clear: "நீக்கு",
		weekStart: 1,
		format: "dd/mm/yyyy"
	};
}(jQuery));
/**
 * Tajik (cyrillic) translation for bootstrap-datepicker
 * Bakhtiyor Bahritidinov <i@bakhtiyor.tj>
 * Orif N. Jr. <orif.zade@gmail.com>
 */

;(function($){
    $.fn.datepicker.dates['tg'] = {
        days: ["Якшанбе", "Душанбе", "Сешанбе", "Чоршанбе", "Панҷшанбе", "Ҷумъа", "Шанбе"],
        daysShort: ["Яшб", "Дшб", "Сшб", "Чшб", "Пшб", "Ҷум", "Шнб"],
        daysMin: ["Яш", "Дш", "Сш", "Чш", "Пш", "Ҷм", "Шб"],
        months: ["Январ", "Феврал", "Март", "Апрел", "Май", "Июн", "Июл", "Август", "Сентябр", "Октябр", "Ноябр", "Декабр"],
        monthsShort: ["Янв", "Фев", "Мар", "Апр", "Май", "Июн", "Июл", "Авг", "Сен", "Окт", "Ноя", "Дек"],
        today: "Имрӯз",
        monthsTitle: "Моҳҳо",
        clear: "Тоза намудан",
        weekStart: 1,
        format: "dd.mm.yyyy"
    };
}(jQuery));
/**
 * Thai translation for bootstrap-datepicker
 * Suchau Jiraprapot <seroz24@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['th'] = {
		days: ["อาทิตย์", "จันทร์", "อังคาร", "พุธ", "พฤหัส", "ศุกร์", "เสาร์", "อาทิตย์"],
		daysShort: ["อา", "จ", "อ", "พ", "พฤ", "ศ", "ส", "อา"],
		daysMin: ["อา", "จ", "อ", "พ", "พฤ", "ศ", "ส", "อา"],
		months: ["มกราคม", "กุมภาพันธ์", "มีนาคม", "เมษายน", "พฤษภาคม", "มิถุนายน", "กรกฎาคม", "สิงหาคม", "กันยายน", "ตุลาคม", "พฤศจิกายน", "ธันวาคม"],
		monthsShort: ["ม.ค.", "ก.พ.", "มี.ค.", "เม.ย.", "พ.ค.", "มิ.ย.", "ก.ค.", "ส.ค.", "ก.ย.", "ต.ค.", "พ.ย.", "ธ.ค."],
		today: "วันนี้"
	};
}(jQuery));
/**
 * Turkmen translation for bootstrap-datepicker
 * N'Bayramberdiyev <nbayramberdiyev@outlook.com>
 */

;(function($){
	$.fn.datepicker.dates['tk'] = {
		days: ["Ýekşenbe", "Duşenbe", "Sişenbe", "Çarşenbe", "Penşenbe", "Anna", "Şenbe"],
		daysShort: ["Ýek", "Duş", "Siş", "Çar", "Pen", "Ann", "Şen"],
		daysMin: ["Ýe", "Du", "Si", "Ça", "Pe", "An", "Şe"],
		months: ["Ýanwar", "Fewral", "Mart", "Aprel", "Maý", "Iýun", "Iýul", "Awgust", "Sentýabr", "Oktýabr", "Noýabr", "Dekabr"],
		monthsShort: ["Ýan", "Few", "Mar", "Apr", "Maý", "Iýn", "Iýl", "Awg", "Sen", "Okt", "Noý", "Dek"],
		today: "Bu gün",
		monthsTitle: "Aýlar",
		clear: "Aýyr",
		weekStart: 1,
		format: "dd.mm.yyyy"
	};
}(jQuery));
/**
 * Turkish translation for bootstrap-datepicker
 * Serkan Algur <kaisercrazy_2@hotmail.com>
 */

;(function($){
	$.fn.datepicker.dates['tr'] = {
		days: ["Pazar", "Pazartesi", "Salı", "Çarşamba", "Perşembe", "Cuma", "Cumartesi"],
		daysShort: ["Pz", "Pzt", "Sal", "Çrş", "Prş", "Cu", "Cts"],
		daysMin: ["Pz", "Pzt", "Sa", "Çr", "Pr", "Cu", "Ct"],
		months: ["Ocak", "Şubat", "Mart", "Nisan", "Mayıs", "Haziran", "Temmuz", "Ağustos", "Eylül", "Ekim", "Kasım", "Aralık"],
		monthsShort: ["Oca", "Şub", "Mar", "Nis", "May", "Haz", "Tem", "Ağu", "Eyl", "Eki", "Kas", "Ara"],
		today: "Bugün",
		clear: "Temizle",
		weekStart: 1,
		format: "dd.mm.yyyy"
	};
}(jQuery));

/**
 * Ukrainian translation for bootstrap-datepicker
 * Igor Polynets
 */

;(function($){
	$.fn.datepicker.dates['ua'] = {
		days: ["Неділя", "Понеділок", "Вівторок", "Середа", "Четвер", "П'ятница", "Субота", "Неділя"],
		daysShort: ["Нед", "Пнд", "Втр", "Срд", "Чтв", "Птн", "Суб", "Нед"],
		daysMin: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб", "Нд"],
		months: ["Cічень", "Лютий", "Березень", "Квітень", "Травень", "Червень", "Липень", "Серпень", "Вересень", "Жовтень", "Листопад", "Грудень"],
		monthsShort: ["Січ", "Лют", "Бер", "Кві", "Тра", "Чер", "Лип", "Сер", "Вер", "Жов", "Лис", "Гру"],
		today: "Сьогодні",
		weekStart: 1
	};
}(jQuery));
/**
 * Ukrainian translation for bootstrap-datepicker
 * Igor Polynets
 */

;(function($){
	$.fn.datepicker.dates['uk'] = {
		days: ["Неділя", "Понеділок", "Вівторок", "Середа", "Четвер", "П'ятниця", "Субота"],
		daysShort: ["Нед", "Пнд", "Втр", "Срд", "Чтв", "Птн", "Суб"],
		daysMin: ["Нд", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
		months: ["Cічень", "Лютий", "Березень", "Квітень", "Травень", "Червень", "Липень", "Серпень", "Вересень", "Жовтень", "Листопад", "Грудень"],
		monthsShort: ["Січ", "Лют", "Бер", "Кві", "Тра", "Чер", "Лип", "Сер", "Вер", "Жов", "Лис", "Гру"],
		today: "Сьогодні",
		clear: "Очистити",
		format: "dd.mm.yyyy",
		weekStart: 1
	};
}(jQuery));
/**
 * Uzbek latin translation for bootstrap-datepicker
 * Kakhramonov Javlonbek <kakjavlon@gmail.com>
 */

;(function($){
    $.fn.datepicker.dates['uz-cyrl'] = {
        days: ["Якшанба", "Душанба", "Сешанба", "Чоршанба", "Пайшанба", "Жума", "Шанба"],
        daysShort: ["Якш", "Ду", "Се", "Чор", "Пай", "Жу", "Ша"],
        daysMin: ["Як", "Ду", "Се", "Чо", "Па", "Жу", "Ша"],
        months: ["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],
        monthsShort: ["Янв","Фев","Мар","Апр","Май","Июн","Июл","Авг","Сен","Окт","Ноя","Дек"],
        today: "Бугун",
        clear: "Ўчириш",
        format: "dd.mm.yyyy",
        weekStart: 1,
        monthsTitle: 'Ойлар'
    };
}(jQuery));
/**
 * Uzbek latin translation for bootstrap-datepicker
 * Kakhramonov Javlonbek <kakjavlon@gmail.com>
 */

;(function($){
    $.fn.datepicker.dates['uz-latn'] = {
        days: ["Yakshanba", "Dushanba", "Seshanba", "Chorshanba", "Payshanba", "Juma", "Shanba"],
        daysShort: ["Yak", "Du", "Se", "Chor", "Pay", "Ju", "Sha"],
        daysMin: ["Ya", "Du", "Se", "Cho", "Pa", "Ju", "Sha"],
        months: ["Yanvar", "Fevral", "Mart", "Aprel", "May", "Iyun", "Iyul", "Avgust", "Sentabr", "Oktabr", "Noyabr", "Dekabr"],
        monthsShort: ["Yan", "Fev", "Mar", "Apr", "May", "Iyn", "Iyl", "Avg", "Sen", "Okt", "Noy", "Dek"],
        today: "Bugun",
        clear: "O'chirish",
        format: "dd.mm.yyyy",
        weekStart: 1,
        monthsTitle: 'Oylar'
    };
}(jQuery));
/**
 * Vietnamese translation for bootstrap-datepicker
 * An Vo <https://github.com/anvoz/>
 */

;(function($){
	$.fn.datepicker.dates['vi'] = {
		days: ["Chủ nhật", "Thứ hai", "Thứ ba", "Thứ tư", "Thứ năm", "Thứ sáu", "Thứ bảy"],
		daysShort: ["CN", "Thứ 2", "Thứ 3", "Thứ 4", "Thứ 5", "Thứ 6", "Thứ 7"],
		daysMin: ["CN", "T2", "T3", "T4", "T5", "T6", "T7"],
		months: ["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"],
		monthsShort: ["Th1", "Th2", "Th3", "Th4", "Th5", "Th6", "Th7", "Th8", "Th9", "Th10", "Th11", "Th12"],
		today: "Hôm nay",
		clear: "Xóa",
		format: "dd/mm/yyyy"
	};
}(jQuery));
/**
 * Simplified Chinese translation for bootstrap-datepicker
 * Yuan Cheung <advanimal@gmail.com>
 */

;(function($){
	$.fn.datepicker.dates['zh-CN'] = {
		days: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
		daysShort: ["周日", "周一", "周二", "周三", "周四", "周五", "周六"],
		daysMin:  ["日", "一", "二", "三", "四", "五", "六"],
		months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
		monthsShort: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
		today: "今日",
		clear: "清除",
		format: "yyyy年mm月dd日",
		titleFormat: "yyyy年mm月",
		weekStart: 1
	};
}(jQuery));
/**
 * Traditional Chinese translation for bootstrap-datepicker
 * Rung-Sheng Jang <daniel@i-trend.co.cc>
 * FrankWu  <frankwu100@gmail.com> Fix more appropriate use of Traditional Chinese habit
 */

;(function($){
	$.fn.datepicker.dates['zh-TW'] = {
		days: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
		daysShort: ["週日", "週一", "週二", "週三", "週四", "週五", "週六"],
		daysMin:  ["日", "一", "二", "三", "四", "五", "六"],
		months: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
		monthsShort: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
		today: "今天",
		format: "yyyy年mm月dd日",
		weekStart: 1,
		clear: "清除"
	};
}(jQuery));



window.RRT || (window.RRT = {});

// Get the features array
RRT.jsLibs = function() {
  var jsLibs = $('body').data('js-libs');
  var jsLibsArray = [];
  if(jsLibs) {
    jsLibsArray = jsLibs.split(' ');
  }
  return jsLibsArray;
};

RRT.hookOnPageLoad = function( callback ) {
  if (typeof window.Turbolinks === 'object') {
    $(document).on('turbolinks:load', function() { callback(); });
  } else {
    $(function() { callback(); });
  }
}

RRT.jsLibIsActive = function( jsLibName ) {
  return $.inArray(jsLibName, RRT.jsLibs()) >= 0
}

RRT.getRootCssVariable = function( varName ) {
  return RRT.getCssVariable( 'body', varName )
}

RRT.getCssVariable = function( el, varName ) {
  var elStyles = window.getComputedStyle(document.querySelector(el));
  return elStyles.getPropertyValue(varName);
}

RRT.debounce = function (func, wait, immediate) {
	var timeout;
	return function() {
		var context = this, args = arguments;
		var later = function() {
			timeout = null;
			if (!immediate) func.apply(context, args);
		};
		var callNow = immediate && !timeout;
		clearTimeout(timeout);
		timeout = setTimeout(later, wait);
		if (callNow) func.apply(context, args);
	};
};
;(function () {
  'use strict';

  /**
   * @preserve FastClick: polyfill to remove click delays on browsers with touch UIs.
   *
   * @codingstandard ftlabs-jsv2
   * @copyright The Financial Times Limited [All Rights Reserved]
   * @license MIT License (see LICENSE.txt)
   */

  /*jslint browser:true, node:true*/
  /*global define, Event, Node*/


  /**
   * Instantiate fast-clicking listeners on the specified layer.
   *
   * @constructor
   * @param {Element} layer The layer to listen on
   * @param {Object} [options={}] The options to override the defaults
   */
  function FastClick(layer, options) {
    var oldOnClick;

    options = options || {};

    /**
     * Whether a click is currently being tracked.
     *
     * @type boolean
     */
    this.trackingClick = false;


    /**
     * Timestamp for when click tracking started.
     *
     * @type number
     */
    this.trackingClickStart = 0;


    /**
     * The element being tracked for a click.
     *
     * @type EventTarget
     */
    this.targetElement = null;


    /**
     * X-coordinate of touch start event.
     *
     * @type number
     */
    this.touchStartX = 0;


    /**
     * Y-coordinate of touch start event.
     *
     * @type number
     */
    this.touchStartY = 0;


    /**
     * ID of the last touch, retrieved from Touch.identifier.
     *
     * @type number
     */
    this.lastTouchIdentifier = 0;


    /**
     * Touchmove boundary, beyond which a click will be cancelled.
     *
     * @type number
     */
    this.touchBoundary = options.touchBoundary || 10;


    /**
     * The FastClick layer.
     *
     * @type Element
     */
    this.layer = layer;

    /**
     * The minimum time between tap(touchstart and touchend) events
     *
     * @type number
     */
    this.tapDelay = options.tapDelay || 200;

    /**
     * The maximum time for a tap
     *
     * @type number
     */
    this.tapTimeout = options.tapTimeout || 700;

    if (FastClick.notNeeded(layer)) {
      return;
    }

    // Some old versions of Android don't have Function.prototype.bind
    function bind(method, context) {
      return function() { return method.apply(context, arguments); };
    }


    var methods = ['onMouse', 'onClick', 'onTouchStart', 'onTouchMove', 'onTouchEnd', 'onTouchCancel'];
    var context = this;
    for (var i = 0, l = methods.length; i < l; i++) {
      context[methods[i]] = bind(context[methods[i]], context);
    }

    // Set up event handlers as required
    if (deviceIsAndroid) {
      layer.addEventListener('mouseover', this.onMouse, true);
      layer.addEventListener('mousedown', this.onMouse, true);
      layer.addEventListener('mouseup', this.onMouse, true);
    }

    layer.addEventListener('click', this.onClick, true);
    layer.addEventListener('touchstart', this.onTouchStart, false);
    layer.addEventListener('touchmove', this.onTouchMove, false);
    layer.addEventListener('touchend', this.onTouchEnd, false);
    layer.addEventListener('touchcancel', this.onTouchCancel, false);

    // Hack is required for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
    // which is how FastClick normally stops click events bubbling to callbacks registered on the FastClick
    // layer when they are cancelled.
    if (!Event.prototype.stopImmediatePropagation) {
      layer.removeEventListener = function(type, callback, capture) {
        var rmv = Node.prototype.removeEventListener;
        if (type === 'click') {
          rmv.call(layer, type, callback.hijacked || callback, capture);
        } else {
          rmv.call(layer, type, callback, capture);
        }
      };

      layer.addEventListener = function(type, callback, capture) {
        var adv = Node.prototype.addEventListener;
        if (type === 'click') {
          adv.call(layer, type, callback.hijacked || (callback.hijacked = function(event) {
            if (!event.propagationStopped) {
              callback(event);
            }
          }), capture);
        } else {
          adv.call(layer, type, callback, capture);
        }
      };
    }

    // If a handler is already declared in the element's onclick attribute, it will be fired before
    // FastClick's onClick handler. Fix this by pulling out the user-defined handler function and
    // adding it as listener.
    if (typeof layer.onclick === 'function') {

      // Android browser on at least 3.2 requires a new reference to the function in layer.onclick
      // - the old one won't work if passed to addEventListener directly.
      oldOnClick = layer.onclick;
      layer.addEventListener('click', function(event) {
        oldOnClick(event);
      }, false);
      layer.onclick = null;
    }
  }

  /**
  * Windows Phone 8.1 fakes user agent string to look like Android and iPhone.
  *
  * @type boolean
  */
  var deviceIsWindowsPhone = navigator.userAgent.indexOf("Windows Phone") >= 0;

  /**
   * Android requires exceptions.
   *
   * @type boolean
   */
  var deviceIsAndroid = navigator.userAgent.indexOf('Android') > 0 && !deviceIsWindowsPhone;


  /**
   * iOS requires exceptions.
   *
   * @type boolean
   */
  var deviceIsIOS = /iP(ad|hone|od)/.test(navigator.userAgent) && !deviceIsWindowsPhone;


  /**
   * iOS 4 requires an exception for select elements.
   *
   * @type boolean
   */
  var deviceIsIOS4 = deviceIsIOS && (/OS 4_\d(_\d)?/).test(navigator.userAgent);


  /**
   * iOS 6.0-7.* requires the target element to be manually derived
   *
   * @type boolean
   */
  var deviceIsIOSWithBadTarget = deviceIsIOS && (/OS [6-7]_\d/).test(navigator.userAgent);

  /**
   * BlackBerry requires exceptions.
   *
   * @type boolean
   */
  var deviceIsBlackBerry10 = navigator.userAgent.indexOf('BB10') > 0;

  /**
   * Determine whether a given element requires a native click.
   *
   * @param {EventTarget|Element} target Target DOM element
   * @returns {boolean} Returns true if the element needs a native click
   */
  FastClick.prototype.needsClick = function(target) {
    switch (target.nodeName.toLowerCase()) {

    // Don't send a synthetic click to disabled inputs (issue #62)
    case 'button':
    case 'select':
    case 'textarea':
      if (target.disabled) {
        return true;
      }

      break;
    case 'input':

      // File inputs need real clicks on iOS 6 due to a browser bug (issue #68)
      if ((deviceIsIOS && target.type === 'file') || target.disabled) {
        return true;
      }

      break;
    case 'label':
    case 'iframe': // iOS8 homescreen apps can prevent events bubbling into frames
    case 'video':
      return true;
    }

    return (/\bneedsclick\b/).test(target.className);
  };


  /**
   * Determine whether a given element requires a call to focus to simulate click into element.
   *
   * @param {EventTarget|Element} target Target DOM element
   * @returns {boolean} Returns true if the element requires a call to focus to simulate native click.
   */
  FastClick.prototype.needsFocus = function(target) {
    switch (target.nodeName.toLowerCase()) {
    case 'textarea':
      return true;
    case 'select':
      return !deviceIsAndroid;
    case 'input':
      switch (target.type) {
      case 'button':
      case 'checkbox':
      case 'file':
      case 'image':
      case 'radio':
      case 'submit':
        return false;
      }

      // No point in attempting to focus disabled inputs
      return !target.disabled && !target.readOnly;
    default:
      return (/\bneedsfocus\b/).test(target.className);
    }
  };


  /**
   * Send a click event to the specified element.
   *
   * @param {EventTarget|Element} targetElement
   * @param {Event} event
   */
  FastClick.prototype.sendClick = function(targetElement, event) {
    var clickEvent, touch;

    // On some Android devices activeElement needs to be blurred otherwise the synthetic click will have no effect (#24)
    if (document.activeElement && document.activeElement !== targetElement) {
      document.activeElement.blur();
    }

    touch = event.changedTouches[0];

    // Synthesise a click event, with an extra attribute so it can be tracked
    clickEvent = document.createEvent('MouseEvents');
    clickEvent.initMouseEvent(this.determineEventType(targetElement), true, true, window, 1, touch.screenX, touch.screenY, touch.clientX, touch.clientY, false, false, false, false, 0, null);
    clickEvent.forwardedTouchEvent = true;
    targetElement.dispatchEvent(clickEvent);
  };

  FastClick.prototype.determineEventType = function(targetElement) {

    //Issue #159: Android Chrome Select Box does not open with a synthetic click event
    if (deviceIsAndroid && targetElement.tagName.toLowerCase() === 'select') {
      return 'mousedown';
    }

    return 'click';
  };


  /**
   * @param {EventTarget|Element} targetElement
   */
  FastClick.prototype.focus = function(targetElement) {
    var length;

    // Issue #160: on iOS 7, some input elements (e.g. date datetime month) throw a vague TypeError on setSelectionRange. These elements don't have an integer value for the selectionStart and selectionEnd properties, but unfortunately that can't be used for detection because accessing the properties also throws a TypeError. Just check the type instead. Filed as Apple bug #15122724.
    if (deviceIsIOS && targetElement.setSelectionRange && targetElement.type.indexOf('date') !== 0 && targetElement.type !== 'time' && targetElement.type !== 'month') {
      length = targetElement.value.length;
      targetElement.setSelectionRange(length, length);
    } else {
      targetElement.focus();
    }
  };


  /**
   * Check whether the given target element is a child of a scrollable layer and if so, set a flag on it.
   *
   * @param {EventTarget|Element} targetElement
   */
  FastClick.prototype.updateScrollParent = function(targetElement) {
    var scrollParent, parentElement;

    scrollParent = targetElement.fastClickScrollParent;

    // Attempt to discover whether the target element is contained within a scrollable layer. Re-check if the
    // target element was moved to another parent.
    if (!scrollParent || !scrollParent.contains(targetElement)) {
      parentElement = targetElement;
      do {
        if (parentElement.scrollHeight > parentElement.offsetHeight) {
          scrollParent = parentElement;
          targetElement.fastClickScrollParent = parentElement;
          break;
        }

        parentElement = parentElement.parentElement;
      } while (parentElement);
    }

    // Always update the scroll top tracker if possible.
    if (scrollParent) {
      scrollParent.fastClickLastScrollTop = scrollParent.scrollTop;
    }
  };


  /**
   * @param {EventTarget} targetElement
   * @returns {Element|EventTarget}
   */
  FastClick.prototype.getTargetElementFromEventTarget = function(eventTarget) {

    // On some older browsers (notably Safari on iOS 4.1 - see issue #56) the event target may be a text node.
    if (eventTarget.nodeType === Node.TEXT_NODE) {
      return eventTarget.parentNode;
    }

    return eventTarget;
  };


  /**
   * On touch start, record the position and scroll offset.
   *
   * @param {Event} event
   * @returns {boolean}
   */
  FastClick.prototype.onTouchStart = function(event) {
    var targetElement, touch, selection;

    // Ignore multiple touches, otherwise pinch-to-zoom is prevented if both fingers are on the FastClick element (issue #111).
    if (event.targetTouches.length > 1) {
      return true;
    }

    targetElement = this.getTargetElementFromEventTarget(event.target);
    touch = event.targetTouches[0];

    if (deviceIsIOS) {

      // Only trusted events will deselect text on iOS (issue #49)
      selection = window.getSelection();
      if (selection.rangeCount && !selection.isCollapsed) {
        return true;
      }

      if (!deviceIsIOS4) {

        // Weird things happen on iOS when an alert or confirm dialog is opened from a click event callback (issue #23):
        // when the user next taps anywhere else on the page, new touchstart and touchend events are dispatched
        // with the same identifier as the touch event that previously triggered the click that triggered the alert.
        // Sadly, there is an issue on iOS 4 that causes some normal touch events to have the same identifier as an
        // immediately preceeding touch event (issue #52), so this fix is unavailable on that platform.
        // Issue 120: touch.identifier is 0 when Chrome dev tools 'Emulate touch events' is set with an iOS device UA string,
        // which causes all touch events to be ignored. As this block only applies to iOS, and iOS identifiers are always long,
        // random integers, it's safe to to continue if the identifier is 0 here.
        if (touch.identifier && touch.identifier === this.lastTouchIdentifier) {
          event.preventDefault();
          return false;
        }

        this.lastTouchIdentifier = touch.identifier;

        // If the target element is a child of a scrollable layer (using -webkit-overflow-scrolling: touch) and:
        // 1) the user does a fling scroll on the scrollable layer
        // 2) the user stops the fling scroll with another tap
        // then the event.target of the last 'touchend' event will be the element that was under the user's finger
        // when the fling scroll was started, causing FastClick to send a click event to that layer - unless a check
        // is made to ensure that a parent layer was not scrolled before sending a synthetic click (issue #42).
        this.updateScrollParent(targetElement);
      }
    }

    this.trackingClick = true;
    this.trackingClickStart = event.timeStamp;
    this.targetElement = targetElement;

    this.touchStartX = touch.pageX;
    this.touchStartY = touch.pageY;

    // Prevent phantom clicks on fast double-tap (issue #36)
    if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
      event.preventDefault();
    }

    return true;
  };


  /**
   * Based on a touchmove event object, check whether the touch has moved past a boundary since it started.
   *
   * @param {Event} event
   * @returns {boolean}
   */
  FastClick.prototype.touchHasMoved = function(event) {
    var touch = event.changedTouches[0], boundary = this.touchBoundary;

    if (Math.abs(touch.pageX - this.touchStartX) > boundary || Math.abs(touch.pageY - this.touchStartY) > boundary) {
      return true;
    }

    return false;
  };


  /**
   * Update the last position.
   *
   * @param {Event} event
   * @returns {boolean}
   */
  FastClick.prototype.onTouchMove = function(event) {
    if (!this.trackingClick) {
      return true;
    }

    // If the touch has moved, cancel the click tracking
    if (this.targetElement !== this.getTargetElementFromEventTarget(event.target) || this.touchHasMoved(event)) {
      this.trackingClick = false;
      this.targetElement = null;
    }

    return true;
  };


  /**
   * Attempt to find the labelled control for the given label element.
   *
   * @param {EventTarget|HTMLLabelElement} labelElement
   * @returns {Element|null}
   */
  FastClick.prototype.findControl = function(labelElement) {

    // Fast path for newer browsers supporting the HTML5 control attribute
    if (labelElement.control !== undefined) {
      return labelElement.control;
    }

    // All browsers under test that support touch events also support the HTML5 htmlFor attribute
    if (labelElement.htmlFor) {
      return document.getElementById(labelElement.htmlFor);
    }

    // If no for attribute exists, attempt to retrieve the first labellable descendant element
    // the list of which is defined here: http://www.w3.org/TR/html5/forms.html#category-label
    return labelElement.querySelector('button, input:not([type=hidden]), keygen, meter, output, progress, select, textarea');
  };


  /**
   * On touch end, determine whether to send a click event at once.
   *
   * @param {Event} event
   * @returns {boolean}
   */
  FastClick.prototype.onTouchEnd = function(event) {
    var forElement, trackingClickStart, targetTagName, scrollParent, touch, targetElement = this.targetElement;

    if (!this.trackingClick) {
      return true;
    }

    // Prevent phantom clicks on fast double-tap (issue #36)
    if ((event.timeStamp - this.lastClickTime) < this.tapDelay) {
      this.cancelNextClick = true;
      return true;
    }

    if ((event.timeStamp - this.trackingClickStart) > this.tapTimeout) {
      return true;
    }

    // Reset to prevent wrong click cancel on input (issue #156).
    this.cancelNextClick = false;

    this.lastClickTime = event.timeStamp;

    trackingClickStart = this.trackingClickStart;
    this.trackingClick = false;
    this.trackingClickStart = 0;

    // On some iOS devices, the targetElement supplied with the event is invalid if the layer
    // is performing a transition or scroll, and has to be re-detected manually. Note that
    // for this to function correctly, it must be called *after* the event target is checked!
    // See issue #57; also filed as rdar://13048589 .
    if (deviceIsIOSWithBadTarget) {
      touch = event.changedTouches[0];

      // In certain cases arguments of elementFromPoint can be negative, so prevent setting targetElement to null
      targetElement = document.elementFromPoint(touch.pageX - window.pageXOffset, touch.pageY - window.pageYOffset) || targetElement;
      targetElement.fastClickScrollParent = this.targetElement.fastClickScrollParent;
    }

    targetTagName = targetElement.tagName.toLowerCase();
    if (targetTagName === 'label') {
      forElement = this.findControl(targetElement);
      if (forElement) {
        this.focus(targetElement);
        if (deviceIsAndroid) {
          return false;
        }

        targetElement = forElement;
      }
    } else if (this.needsFocus(targetElement)) {

      // Case 1: If the touch started a while ago (best guess is 100ms based on tests for issue #36) then focus will be triggered anyway. Return early and unset the target element reference so that the subsequent click will be allowed through.
      // Case 2: Without this exception for input elements tapped when the document is contained in an iframe, then any inputted text won't be visible even though the value attribute is updated as the user types (issue #37).
      if ((event.timeStamp - trackingClickStart) > 100 || (deviceIsIOS && window.top !== window && targetTagName === 'input')) {
        this.targetElement = null;
        return false;
      }

      this.focus(targetElement);
      this.sendClick(targetElement, event);

      // Select elements need the event to go through on iOS 4, otherwise the selector menu won't open.
      // Also this breaks opening selects when VoiceOver is active on iOS6, iOS7 (and possibly others)
      if (!deviceIsIOS || targetTagName !== 'select') {
        this.targetElement = null;
        event.preventDefault();
      }

      return false;
    }

    if (deviceIsIOS && !deviceIsIOS4) {

      // Don't send a synthetic click event if the target element is contained within a parent layer that was scrolled
      // and this tap is being used to stop the scrolling (usually initiated by a fling - issue #42).
      scrollParent = targetElement.fastClickScrollParent;
      if (scrollParent && scrollParent.fastClickLastScrollTop !== scrollParent.scrollTop) {
        return true;
      }
    }

    // Prevent the actual click from going though - unless the target node is marked as requiring
    // real clicks or if it is in the whitelist in which case only non-programmatic clicks are permitted.
    if (!this.needsClick(targetElement)) {
      event.preventDefault();
      this.sendClick(targetElement, event);
    }

    return false;
  };


  /**
   * On touch cancel, stop tracking the click.
   *
   * @returns {void}
   */
  FastClick.prototype.onTouchCancel = function() {
    this.trackingClick = false;
    this.targetElement = null;
  };


  /**
   * Determine mouse events which should be permitted.
   *
   * @param {Event} event
   * @returns {boolean}
   */
  FastClick.prototype.onMouse = function(event) {

    // If a target element was never set (because a touch event was never fired) allow the event
    if (!this.targetElement) {
      return true;
    }

    if (event.forwardedTouchEvent) {
      return true;
    }

    // Programmatically generated events targeting a specific element should be permitted
    if (!event.cancelable) {
      return true;
    }

    // Derive and check the target element to see whether the mouse event needs to be permitted;
    // unless explicitly enabled, prevent non-touch click events from triggering actions,
    // to prevent ghost/doubleclicks.
    if (!this.needsClick(this.targetElement) || this.cancelNextClick) {

      // Prevent any user-added listeners declared on FastClick element from being fired.
      if (event.stopImmediatePropagation) {
        event.stopImmediatePropagation();
      } else {

        // Part of the hack for browsers that don't support Event#stopImmediatePropagation (e.g. Android 2)
        event.propagationStopped = true;
      }

      // Cancel the event
      event.stopPropagation();
      event.preventDefault();

      return false;
    }

    // If the mouse event is permitted, return true for the action to go through.
    return true;
  };


  /**
   * On actual clicks, determine whether this is a touch-generated click, a click action occurring
   * naturally after a delay after a touch (which needs to be cancelled to avoid duplication), or
   * an actual click which should be permitted.
   *
   * @param {Event} event
   * @returns {boolean}
   */
  FastClick.prototype.onClick = function(event) {
    var permitted;

    // It's possible for another FastClick-like library delivered with third-party code to fire a click event before FastClick does (issue #44). In that case, set the click-tracking flag back to false and return early. This will cause onTouchEnd to return early.
    if (this.trackingClick) {
      this.targetElement = null;
      this.trackingClick = false;
      return true;
    }

    // Very odd behaviour on iOS (issue #18): if a submit element is present inside a form and the user hits enter in the iOS simulator or clicks the Go button on the pop-up OS keyboard the a kind of 'fake' click event will be triggered with the submit-type input element as the target.
    if (event.target.type === 'submit' && event.detail === 0) {
      return true;
    }

    permitted = this.onMouse(event);

    // Only unset targetElement if the click is not permitted. This will ensure that the check for !targetElement in onMouse fails and the browser's click doesn't go through.
    if (!permitted) {
      this.targetElement = null;
    }

    // If clicks are permitted, return true for the action to go through.
    return permitted;
  };


  /**
   * Remove all FastClick's event listeners.
   *
   * @returns {void}
   */
  FastClick.prototype.destroy = function() {
    var layer = this.layer;

    if (deviceIsAndroid) {
      layer.removeEventListener('mouseover', this.onMouse, true);
      layer.removeEventListener('mousedown', this.onMouse, true);
      layer.removeEventListener('mouseup', this.onMouse, true);
    }

    layer.removeEventListener('click', this.onClick, true);
    layer.removeEventListener('touchstart', this.onTouchStart, false);
    layer.removeEventListener('touchmove', this.onTouchMove, false);
    layer.removeEventListener('touchend', this.onTouchEnd, false);
    layer.removeEventListener('touchcancel', this.onTouchCancel, false);
  };


  /**
   * Check whether FastClick is needed.
   *
   * @param {Element} layer The layer to listen on
   */
  FastClick.notNeeded = function(layer) {
    var metaViewport;
    var chromeVersion;
    var blackberryVersion;
    var firefoxVersion;

    // Devices that don't support touch don't need FastClick
    if (typeof window.ontouchstart === 'undefined') {
      return true;
    }

    // Chrome version - zero for other browsers
    chromeVersion = +(/Chrome\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];

    if (chromeVersion) {

      if (deviceIsAndroid) {
        metaViewport = document.querySelector('meta[name=viewport]');

        if (metaViewport) {
          // Chrome on Android with user-scalable="no" doesn't need FastClick (issue #89)
          if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
            return true;
          }
          // Chrome 32 and above with width=device-width or less don't need FastClick
          if (chromeVersion > 31 && document.documentElement.scrollWidth <= window.outerWidth) {
            return true;
          }
        }

      // Chrome desktop doesn't need FastClick (issue #15)
      } else {
        return true;
      }
    }

    if (deviceIsBlackBerry10) {
      blackberryVersion = navigator.userAgent.match(/Version\/([0-9]*)\.([0-9]*)/);

      // BlackBerry 10.3+ does not require Fastclick library.
      // https://github.com/ftlabs/fastclick/issues/251
      if (blackberryVersion[1] >= 10 && blackberryVersion[2] >= 3) {
        metaViewport = document.querySelector('meta[name=viewport]');

        if (metaViewport) {
          // user-scalable=no eliminates click delay.
          if (metaViewport.content.indexOf('user-scalable=no') !== -1) {
            return true;
          }
          // width=device-width (or less than device-width) eliminates click delay.
          if (document.documentElement.scrollWidth <= window.outerWidth) {
            return true;
          }
        }
      }
    }

    // IE10 with -ms-touch-action: none or manipulation, which disables double-tap-to-zoom (issue #97)
    if (layer.style.msTouchAction === 'none' || layer.style.touchAction === 'manipulation') {
      return true;
    }

    // Firefox version - zero for other browsers
    firefoxVersion = +(/Firefox\/([0-9]+)/.exec(navigator.userAgent) || [,0])[1];

    if (firefoxVersion >= 27) {
      // Firefox 27+ does not have tap delay if the content is not zoomable - https://bugzilla.mozilla.org/show_bug.cgi?id=922896

      metaViewport = document.querySelector('meta[name=viewport]');
      if (metaViewport && (metaViewport.content.indexOf('user-scalable=no') !== -1 || document.documentElement.scrollWidth <= window.outerWidth)) {
        return true;
      }
    }

    // IE11: prefixed -ms-touch-action is no longer supported and it's recomended to use non-prefixed version
    // http://msdn.microsoft.com/en-us/library/windows/apps/Hh767313.aspx
    if (layer.style.touchAction === 'none' || layer.style.touchAction === 'manipulation') {
      return true;
    }

    return false;
  };


  /**
   * Factory method for creating a FastClick object
   *
   * @param {Element} layer The layer to listen on
   * @param {Object} [options={}] The options to override the defaults
   */
  FastClick.attach = function(layer, options) {
    return new FastClick(layer, options);
  };


  if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {

    // AMD. Register as an anonymous module.
    define(function() {
      return FastClick;
    });
  } else if (typeof module !== 'undefined' && module.exports) {
    module.exports = FastClick.attach;
    module.exports.FastClick = FastClick;
  } else {
    window.FastClick = FastClick;
  }
}());

(function() {

  function initFastclick() {
    if (Modernizr.touch) {
      FastClick.attach(document.body);
    }
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('fastclick') && initFastclick.call(this)
  })

})()

;
/*! Copyright (c) 2011 Piotr Rochala (http://rocha.la)
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 *
 * Version: 1.3.8
 *
 */

(function(e) {
  e.fn.extend({
    slimScroll: function(f) {
      var a = e.extend(
        {
          width: 'auto',
          height: '250px',
          size: '7px',
          color: '#000',
          position: 'right',
          distance: '1px',
          start: 'top',
          opacity: 0.4,
          alwaysVisible: !1,
          disableFadeOut: !1,
          railVisible: !1,
          railColor: '#333',
          railOpacity: 0.2,
          railDraggable: !0,
          railClass: 'slimScrollRail',
          barClass: 'slimScrollBar',
          wrapperClass: 'slimScrollDiv',
          allowPageScroll: !1,
          wheelStep: 20,
          touchScrollStep: 200,
          borderRadius: '7px',
          railBorderRadius: '7px'
        },
        f
      );
      this.each(function() {
        function v(d) {
          if (r) {
            d = d || window.event;
            var c = 0;
            d.wheelDelta && (c = -d.wheelDelta / 120);
            d.detail && (c = d.detail / 3);
            e(d.target || d.srcTarget || d.srcElement)
              .closest('.' + a.wrapperClass)
              .is(b.parent()) && n(c, !0);
            d.preventDefault && !k && d.preventDefault();
            k || (d.returnValue = !1);
          }
        }
        function n(d, g, e) {
          k = !1;
          var f = b.outerHeight() - c.outerHeight();
          g &&
            (
              (g =
                parseInt(c.css('top')) +
                d * parseInt(a.wheelStep) / 100 * c.outerHeight()),
              (g = Math.min(Math.max(g, 0), f)),
              (g = 0 < d ? Math.ceil(g) : Math.floor(g)),
              c.css({ top: g + 'px' })
            );
          l = parseInt(c.css('top')) / (b.outerHeight() - c.outerHeight());
          g = l * (b[0].scrollHeight - b.outerHeight());
          e &&
            (
              (g = d),
              (d = g / b[0].scrollHeight * b.outerHeight()),
              (d = Math.min(Math.max(d, 0), f)),
              c.css({ top: d + 'px' })
            );
          b.scrollTop(g);
          b.trigger('slimscrolling', ~~g);
          w();
          p();
        }
        function x() {
          u = Math.max(
            b.outerHeight() / b[0].scrollHeight * b.outerHeight(),
            30
          );
          c.css({ height: u + 'px' });
          var a = u == b.outerHeight() ? 'none' : 'block';
          c.css({ display: a });
        }
        function w() {
          x();
          clearTimeout(B);
          l == ~~l
            ? (
                (k = a.allowPageScroll),
                C != l && b.trigger('slimscroll', 0 == ~~l ? 'top' : 'bottom')
              )
            : (k = !1);
          C = l;
          u >= b.outerHeight()
            ? (k = !0)
            : (
                c.stop(!0, !0).fadeIn('fast'),
                a.railVisible && m.stop(!0, !0).fadeIn('fast')
              );
        }
        function p() {
          a.alwaysVisible ||
            (B = setTimeout(function() {
              (a.disableFadeOut && r) ||
                y ||
                z ||
                (c.fadeOut('slow'), m.fadeOut('slow'));
            }, 1e3));
        }
        var r,
          y,
          z,
          B,
          A,
          u,
          l,
          C,
          k = !1,
          b = e(this);
        if (b.parent().hasClass(a.wrapperClass)) {
          var q = b.scrollTop(),
            c = b.siblings('.' + a.barClass),
            m = b.siblings('.' + a.railClass);
          x();
          if (e.isPlainObject(f)) {
            if ('height' in f && 'auto' == f.height) {
              b.parent().css('height', 'auto');
              b.css('height', 'auto');
              var h = b.parent().parent().height();
              b.parent().css('height', h);
              b.css('height', h);
            } else
              'height' in f &&
                (
                  (h = f.height),
                  b.parent().css('height', h),
                  b.css('height', h)
                );
            if ('scrollTo' in f) q = parseInt(a.scrollTo);
            else if ('scrollBy' in f) q += parseInt(a.scrollBy);
            else if ('destroy' in f) {
              c.remove();
              m.remove();
              b.unwrap();
              return;
            }
            n(q, !1, !0);
          }
        } else if (!(e.isPlainObject(f) && 'destroy' in f)) {
          a.height = 'auto' == a.height ? b.parent().height() : a.height;
          q = e('<div></div>')
            .addClass(a.wrapperClass)
            .css({
              position: 'relative',
              overflow: 'hidden',
              width: a.width,
              height: a.height
            });
          b.css({
            overflow: 'hidden',
            width: a.width,
            height: a.height
          });
          var m = e('<div></div>')
              .addClass(a.railClass)
              .css({
                width: a.size,
                height: '100%',
                position: 'absolute',
                top: 0,
                display: a.alwaysVisible && a.railVisible ? 'block' : 'none',
                'border-radius': a.railBorderRadius,
                background: a.railColor,
                opacity: a.railOpacity,
                zIndex: 90
              }),
            c = e('<div></div>').addClass(a.barClass).css({
              background: a.color,
              width: a.size,
              position: 'absolute',
              top: 0,
              opacity: a.opacity,
              display: a.alwaysVisible ? 'block' : 'none',
              'border-radius': a.borderRadius,
              BorderRadius: a.borderRadius,
              MozBorderRadius: a.borderRadius,
              WebkitBorderRadius: a.borderRadius,
              zIndex: 99
            }),
            h =
              'right' == a.position
                ? { right: a.distance }
                : { left: a.distance };
          m.css(h);
          c.css(h);
          b.wrap(q);
          b.parent().append(c);
          b.parent().append(m);
          a.railDraggable &&
            c
              .bind('mousedown', function(a) {
                var b = e(document);
                z = !0;
                t = parseFloat(c.css('top'));
                pageY = a.pageY;
                b.bind('mousemove.slimscroll', function(a) {
                  currTop = t + a.pageY - pageY;
                  c.css('top', currTop);
                  n(0, c.position().top, !1);
                });
                b.bind('mouseup.slimscroll', function(a) {
                  z = !1;
                  p();
                  b.unbind('.slimscroll');
                });
                return !1;
              })
              .bind('selectstart.slimscroll', function(a) {
                a.stopPropagation();
                a.preventDefault();
                return !1;
              });
          m.hover(
            function() {
              w();
            },
            function() {
              p();
            }
          );
          c.hover(
            function() {
              y = !0;
            },
            function() {
              y = !1;
            }
          );
          b.hover(
            function() {
              r = !0;
              w();
              p();
            },
            function() {
              r = !1;
              p();
            }
          );
          b.bind('touchstart', function(a, b) {
            a.originalEvent.touches.length &&
              (A = a.originalEvent.touches[0].pageY);
          });
          b.bind('touchmove', function(b) {
            k || b.originalEvent.preventDefault();
            b.originalEvent.touches.length &&
              (
                n(
                  (A - b.originalEvent.touches[0].pageY) / a.touchScrollStep,
                  !0
                ),
                (A = b.originalEvent.touches[0].pageY)
              );
          });
          x();
          'bottom' === a.start
            ? (c.css({ top: b.outerHeight() - c.outerHeight() }), n(0, !0))
            : 'top' !== a.start &&
              (
                n(e(a.start).position().top, null, !0),
                a.alwaysVisible || c.hide()
              );
          window.addEventListener
            ? (
                this.addEventListener('DOMMouseScroll', v, !1),
                this.addEventListener('mousewheel', v, !1)
              )
            : document.attachEvent('onmousewheel', v);
        }
      });
      return this;
    }
  });
  e.fn.extend({ slimscroll: e.fn.slimScroll });
})(jQuery);
/*
 * metismenu - v2.7.2
 * A jQuery menu plugin
 * https://github.com/onokumus/metismenu#readme
 *
 * Made by Osman Nuri Okumus <onokumus@gmail.com> (https://github.com/onokumus)
 * Under MIT License
 */


(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['jquery'], factory);
  } else if (typeof exports !== "undefined") {
    factory(require('jquery'));
  } else {
    var mod = {
      exports: {}
    };
    factory(global.jquery);
    global.metisMenu = mod.exports;
  }
})(this, function (_jquery) {
  'use strict';

  var _jquery2 = _interopRequireDefault(_jquery);

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      default: obj
    };
  }

  var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) {
    return typeof obj;
  } : function (obj) {
    return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
  };

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  var Util = function ($) {
    var transition = false;

    function getSpecialTransitionEndEvent() {
      return {
        bindType: transition.end,
        delegateType: transition.end,
        handle: function handle(event) {
          if ($(event.target).is(this)) {
            return event.handleObj.handler.apply(this, arguments);
          }
          return undefined;
        }
      };
    }

    function transitionEndTest() {
      if (window.QUnit) {
        return false;
      }

      return {
        end: 'transitionend'
      };
    }

    function transitionEndEmulator(duration) {
      var _this2 = this;

      var called = false;

      $(this).one(Util.TRANSITION_END, function () {
        called = true;
      });

      setTimeout(function () {
        if (!called) {
          Util.triggerTransitionEnd(_this2);
        }
      }, duration);

      return this;
    }

    function setTransitionEndSupport() {
      transition = transitionEndTest();
      $.fn.mmEmulateTransitionEnd = transitionEndEmulator;

      if (Util.supportsTransitionEnd()) {
        $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();
      }
    }

    var Util = {
      TRANSITION_END: 'mmTransitionEnd',

      triggerTransitionEnd: function triggerTransitionEnd(element) {
        $(element).trigger(transition.end);
      },
      supportsTransitionEnd: function supportsTransitionEnd() {
        return Boolean(transition);
      }
    };

    setTransitionEndSupport();

    return Util;
  }(jQuery);

  var MetisMenu = function ($) {

    var NAME = 'metisMenu';
    var DATA_KEY = 'metisMenu';
    var EVENT_KEY = '.' + DATA_KEY;
    var DATA_API_KEY = '.data-api';
    var JQUERY_NO_CONFLICT = $.fn[NAME];
    var TRANSITION_DURATION = 350;

    var Default = {
      toggle: true,
      preventDefault: true,
      activeClass: 'active',
      collapseClass: 'collapse',
      collapseInClass: 'in',
      collapsingClass: 'collapsing',
      triggerElement: 'a',
      parentTrigger: 'li',
      subMenu: 'ul'
    };

    var Event = {
      SHOW: 'show' + EVENT_KEY,
      SHOWN: 'shown' + EVENT_KEY,
      HIDE: 'hide' + EVENT_KEY,
      HIDDEN: 'hidden' + EVENT_KEY,
      CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY
    };

    var MetisMenu = function () {
      function MetisMenu(element, config) {
        _classCallCheck(this, MetisMenu);

        this._element = element;
        this._config = this._getConfig(config);
        this._transitioning = null;

        this.init();
      }

      MetisMenu.prototype.init = function init() {
        var self = this;
        $(this._element).find(this._config.parentTrigger + '.' + this._config.activeClass).has(this._config.subMenu).children(this._config.subMenu).attr('aria-expanded', true).addClass(this._config.collapseClass + ' ' + this._config.collapseInClass);

        $(this._element).find(this._config.parentTrigger).not('.' + this._config.activeClass).has(this._config.subMenu).children(this._config.subMenu).attr('aria-expanded', false).addClass(this._config.collapseClass);

        $(this._element).find(this._config.parentTrigger).has(this._config.subMenu).children(this._config.triggerElement).on(Event.CLICK_DATA_API, function (e) {
          var _this = $(this);
          var _parent = _this.parent(self._config.parentTrigger);
          var _siblings = _parent.siblings(self._config.parentTrigger).children(self._config.triggerElement);
          var _list = _parent.children(self._config.subMenu);
          if (self._config.preventDefault) {
            e.preventDefault();
          }
          if (_this.attr('aria-disabled') === 'true') {
            return;
          }
          if (_parent.hasClass(self._config.activeClass)) {
            _this.attr('aria-expanded', false);
            self._hide(_list);
          } else {
            self._show(_list);
            _this.attr('aria-expanded', true);
            if (self._config.toggle) {
              _siblings.attr('aria-expanded', false);
            }
          }

          if (self._config.onTransitionStart) {
            self._config.onTransitionStart(e);
          }
        });
      };

      MetisMenu.prototype._show = function _show(element) {
        if (this._transitioning || $(element).hasClass(this._config.collapsingClass)) {
          return;
        }
        var _this = this;
        var _el = $(element);

        var startEvent = $.Event(Event.SHOW);
        _el.trigger(startEvent);

        if (startEvent.isDefaultPrevented()) {
          return;
        }

        _el.parent(this._config.parentTrigger).addClass(this._config.activeClass);

        if (this._config.toggle) {
          this._hide(_el.parent(this._config.parentTrigger).siblings().children(this._config.subMenu + '.' + this._config.collapseInClass).attr('aria-expanded', false));
        }

        _el.removeClass(this._config.collapseClass).addClass(this._config.collapsingClass).height(0);

        this.setTransitioning(true);

        var complete = function complete() {
          // check if disposed
          if (!_this._config || !_this._element) {
            return;
          }
          _el.removeClass(_this._config.collapsingClass).addClass(_this._config.collapseClass + ' ' + _this._config.collapseInClass).height('').attr('aria-expanded', true);

          _this.setTransitioning(false);

          _el.trigger(Event.SHOWN);
        };

        if (!Util.supportsTransitionEnd()) {
          complete();
          return;
        }

        _el.height(_el[0].scrollHeight).one(Util.TRANSITION_END, complete).mmEmulateTransitionEnd(TRANSITION_DURATION);
      };

      MetisMenu.prototype._hide = function _hide(element) {

        if (this._transitioning || !$(element).hasClass(this._config.collapseInClass)) {
          return;
        }
        var _this = this;
        var _el = $(element);

        var startEvent = $.Event(Event.HIDE);
        _el.trigger(startEvent);

        if (startEvent.isDefaultPrevented()) {
          return;
        }

        _el.parent(this._config.parentTrigger).removeClass(this._config.activeClass);
        _el.height(_el.height())[0].offsetHeight;

        _el.addClass(this._config.collapsingClass).removeClass(this._config.collapseClass).removeClass(this._config.collapseInClass);

        this.setTransitioning(true);

        var complete = function complete() {
          // check if disposed
          if (!_this._config || !_this._element) {
            return;
          }
          if (_this._transitioning && _this._config.onTransitionEnd) {
            _this._config.onTransitionEnd();
          }

          _this.setTransitioning(false);
          _el.trigger(Event.HIDDEN);

          _el.removeClass(_this._config.collapsingClass).addClass(_this._config.collapseClass).attr('aria-expanded', false);
        };

        if (!Util.supportsTransitionEnd()) {
          complete();
          return;
        }

        _el.height() == 0 || _el.css('display') == 'none' ? complete() : _el.height(0).one(Util.TRANSITION_END, complete).mmEmulateTransitionEnd(TRANSITION_DURATION);
      };

      MetisMenu.prototype.setTransitioning = function setTransitioning(isTransitioning) {
        this._transitioning = isTransitioning;
      };

      MetisMenu.prototype.dispose = function dispose() {
        $.removeData(this._element, DATA_KEY);

        $(this._element).find(this._config.parentTrigger).has(this._config.subMenu).children(this._config.triggerElement).off('click');

        this._transitioning = null;
        this._config = null;
        this._element = null;
      };

      MetisMenu.prototype._getConfig = function _getConfig(config) {
        config = $.extend({}, Default, config);
        return config;
      };

      MetisMenu._jQueryInterface = function _jQueryInterface(config) {
        return this.each(function () {
          var $this = $(this);
          var data = $this.data(DATA_KEY);
          var _config = $.extend({}, Default, $this.data(), (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config);

          if (!data && /dispose/.test(config)) {
            this.dispose();
          }

          if (!data) {
            data = new MetisMenu(this, _config);
            $this.data(DATA_KEY, data);
          }

          if (typeof config === 'string') {
            if (data[config] === undefined) {
              throw new Error('No method named "' + config + '"');
            }
            data[config]();
          }
        });
      };

      return MetisMenu;
    }();

    /**
     * ------------------------------------------------------------------------
     * jQuery
     * ------------------------------------------------------------------------
     */

    $.fn[NAME] = MetisMenu._jQueryInterface;
    $.fn[NAME].Constructor = MetisMenu;
    $.fn[NAME].noConflict = function () {
      $.fn[NAME] = JQUERY_NO_CONFLICT;
      return MetisMenu._jQueryInterface;
    };
    return MetisMenu;
  }(jQuery);
});

(function() {
  function initMetisMenu() {
    $('.nav-side-menu').metisMenu({
      triggerElement: '.nav-link', // bootstrap 4
      parentTrigger: '.nav-item', // bootstrap 4
      collapseInClass: 'show'
    });
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('metis') && initMetisMenu.call(this)
  })
})()

;
/*
 Copyright (C) Federico Zivolo 2017
 Distributed under the MIT License (license terms are at http://opensource.org/licenses/MIT).
 */
(function(e,t){'object'==typeof exports&&'undefined'!=typeof module?module.exports=t():'function'==typeof define&&define.amd?define(t):e.Popper=t()})(this,function(){'use strict';function e(e){return e&&'[object Function]'==={}.toString.call(e)}function t(e,t){if(1!==e.nodeType)return[];var o=getComputedStyle(e,null);return t?o[t]:o}function o(e){return'HTML'===e.nodeName?e:e.parentNode||e.host}function n(e){if(!e)return document.body;switch(e.nodeName){case'HTML':case'BODY':return e.ownerDocument.body;case'#document':return e.body;}var i=t(e),r=i.overflow,p=i.overflowX,s=i.overflowY;return /(auto|scroll)/.test(r+s+p)?e:n(o(e))}function r(e){var o=e&&e.offsetParent,i=o&&o.nodeName;return i&&'BODY'!==i&&'HTML'!==i?-1!==['TD','TABLE'].indexOf(o.nodeName)&&'static'===t(o,'position')?r(o):o:e?e.ownerDocument.documentElement:document.documentElement}function p(e){var t=e.nodeName;return'BODY'!==t&&('HTML'===t||r(e.firstElementChild)===e)}function s(e){return null===e.parentNode?e:s(e.parentNode)}function d(e,t){if(!e||!e.nodeType||!t||!t.nodeType)return document.documentElement;var o=e.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_FOLLOWING,i=o?e:t,n=o?t:e,a=document.createRange();a.setStart(i,0),a.setEnd(n,0);var l=a.commonAncestorContainer;if(e!==l&&t!==l||i.contains(n))return p(l)?l:r(l);var f=s(e);return f.host?d(f.host,t):d(e,s(t).host)}function a(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:'top',o='top'===t?'scrollTop':'scrollLeft',i=e.nodeName;if('BODY'===i||'HTML'===i){var n=e.ownerDocument.documentElement,r=e.ownerDocument.scrollingElement||n;return r[o]}return e[o]}function l(e,t){var o=2<arguments.length&&void 0!==arguments[2]&&arguments[2],i=a(t,'top'),n=a(t,'left'),r=o?-1:1;return e.top+=i*r,e.bottom+=i*r,e.left+=n*r,e.right+=n*r,e}function f(e,t){var o='x'===t?'Left':'Top',i='Left'==o?'Right':'Bottom';return parseFloat(e['border'+o+'Width'],10)+parseFloat(e['border'+i+'Width'],10)}function m(e,t,o,i){return J(t['offset'+e],t['scroll'+e],o['client'+e],o['offset'+e],o['scroll'+e],ie()?o['offset'+e]+i['margin'+('Height'===e?'Top':'Left')]+i['margin'+('Height'===e?'Bottom':'Right')]:0)}function h(){var e=document.body,t=document.documentElement,o=ie()&&getComputedStyle(t);return{height:m('Height',e,t,o),width:m('Width',e,t,o)}}function c(e){return se({},e,{right:e.left+e.width,bottom:e.top+e.height})}function g(e){var o={};if(ie())try{o=e.getBoundingClientRect();var i=a(e,'top'),n=a(e,'left');o.top+=i,o.left+=n,o.bottom+=i,o.right+=n}catch(e){}else o=e.getBoundingClientRect();var r={left:o.left,top:o.top,width:o.right-o.left,height:o.bottom-o.top},p='HTML'===e.nodeName?h():{},s=p.width||e.clientWidth||r.right-r.left,d=p.height||e.clientHeight||r.bottom-r.top,l=e.offsetWidth-s,m=e.offsetHeight-d;if(l||m){var g=t(e);l-=f(g,'x'),m-=f(g,'y'),r.width-=l,r.height-=m}return c(r)}function u(e,o){var i=ie(),r='HTML'===o.nodeName,p=g(e),s=g(o),d=n(e),a=t(o),f=parseFloat(a.borderTopWidth,10),m=parseFloat(a.borderLeftWidth,10),h=c({top:p.top-s.top-f,left:p.left-s.left-m,width:p.width,height:p.height});if(h.marginTop=0,h.marginLeft=0,!i&&r){var u=parseFloat(a.marginTop,10),b=parseFloat(a.marginLeft,10);h.top-=f-u,h.bottom-=f-u,h.left-=m-b,h.right-=m-b,h.marginTop=u,h.marginLeft=b}return(i?o.contains(d):o===d&&'BODY'!==d.nodeName)&&(h=l(h,o)),h}function b(e){var t=e.ownerDocument.documentElement,o=u(e,t),i=J(t.clientWidth,window.innerWidth||0),n=J(t.clientHeight,window.innerHeight||0),r=a(t),p=a(t,'left'),s={top:r-o.top+o.marginTop,left:p-o.left+o.marginLeft,width:i,height:n};return c(s)}function w(e){var i=e.nodeName;return'BODY'===i||'HTML'===i?!1:'fixed'===t(e,'position')||w(o(e))}function y(e,t,i,r){var p={top:0,left:0},s=d(e,t);if('viewport'===r)p=b(s);else{var a;'scrollParent'===r?(a=n(o(t)),'BODY'===a.nodeName&&(a=e.ownerDocument.documentElement)):'window'===r?a=e.ownerDocument.documentElement:a=r;var l=u(a,s);if('HTML'===a.nodeName&&!w(s)){var f=h(),m=f.height,c=f.width;p.top+=l.top-l.marginTop,p.bottom=m+l.top,p.left+=l.left-l.marginLeft,p.right=c+l.left}else p=l}return p.left+=i,p.top+=i,p.right-=i,p.bottom-=i,p}function E(e){var t=e.width,o=e.height;return t*o}function v(e,t,o,i,n){var r=5<arguments.length&&void 0!==arguments[5]?arguments[5]:0;if(-1===e.indexOf('auto'))return e;var p=y(o,i,r,n),s={top:{width:p.width,height:t.top-p.top},right:{width:p.right-t.right,height:p.height},bottom:{width:p.width,height:p.bottom-t.bottom},left:{width:t.left-p.left,height:p.height}},d=Object.keys(s).map(function(e){return se({key:e},s[e],{area:E(s[e])})}).sort(function(e,t){return t.area-e.area}),a=d.filter(function(e){var t=e.width,i=e.height;return t>=o.clientWidth&&i>=o.clientHeight}),l=0<a.length?a[0].key:d[0].key,f=e.split('-')[1];return l+(f?'-'+f:'')}function O(e,t,o){var i=d(t,o);return u(o,i)}function L(e){var t=getComputedStyle(e),o=parseFloat(t.marginTop)+parseFloat(t.marginBottom),i=parseFloat(t.marginLeft)+parseFloat(t.marginRight),n={width:e.offsetWidth+i,height:e.offsetHeight+o};return n}function x(e){var t={left:'right',right:'left',bottom:'top',top:'bottom'};return e.replace(/left|right|bottom|top/g,function(e){return t[e]})}function S(e,t,o){o=o.split('-')[0];var i=L(e),n={width:i.width,height:i.height},r=-1!==['right','left'].indexOf(o),p=r?'top':'left',s=r?'left':'top',d=r?'height':'width',a=r?'width':'height';return n[p]=t[p]+t[d]/2-i[d]/2,n[s]=o===s?t[s]-i[a]:t[x(s)],n}function T(e,t){return Array.prototype.find?e.find(t):e.filter(t)[0]}function D(e,t,o){if(Array.prototype.findIndex)return e.findIndex(function(e){return e[t]===o});var i=T(e,function(e){return e[t]===o});return e.indexOf(i)}function C(t,o,i){var n=void 0===i?t:t.slice(0,D(t,'name',i));return n.forEach(function(t){t['function']&&console.warn('`modifier.function` is deprecated, use `modifier.fn`!');var i=t['function']||t.fn;t.enabled&&e(i)&&(o.offsets.popper=c(o.offsets.popper),o.offsets.reference=c(o.offsets.reference),o=i(o,t))}),o}function N(){if(!this.state.isDestroyed){var e={instance:this,styles:{},arrowStyles:{},attributes:{},flipped:!1,offsets:{}};e.offsets.reference=O(this.state,this.popper,this.reference),e.placement=v(this.options.placement,e.offsets.reference,this.popper,this.reference,this.options.modifiers.flip.boundariesElement,this.options.modifiers.flip.padding),e.originalPlacement=e.placement,e.offsets.popper=S(this.popper,e.offsets.reference,e.placement),e.offsets.popper.position='absolute',e=C(this.modifiers,e),this.state.isCreated?this.options.onUpdate(e):(this.state.isCreated=!0,this.options.onCreate(e))}}function k(e,t){return e.some(function(e){var o=e.name,i=e.enabled;return i&&o===t})}function W(e){for(var t=[!1,'ms','Webkit','Moz','O'],o=e.charAt(0).toUpperCase()+e.slice(1),n=0;n<t.length-1;n++){var i=t[n],r=i?''+i+o:e;if('undefined'!=typeof document.body.style[r])return r}return null}function P(){return this.state.isDestroyed=!0,k(this.modifiers,'applyStyle')&&(this.popper.removeAttribute('x-placement'),this.popper.style.left='',this.popper.style.position='',this.popper.style.top='',this.popper.style[W('transform')]=''),this.disableEventListeners(),this.options.removeOnDestroy&&this.popper.parentNode.removeChild(this.popper),this}function B(e){var t=e.ownerDocument;return t?t.defaultView:window}function H(e,t,o,i){var r='BODY'===e.nodeName,p=r?e.ownerDocument.defaultView:e;p.addEventListener(t,o,{passive:!0}),r||H(n(p.parentNode),t,o,i),i.push(p)}function A(e,t,o,i){o.updateBound=i,B(e).addEventListener('resize',o.updateBound,{passive:!0});var r=n(e);return H(r,'scroll',o.updateBound,o.scrollParents),o.scrollElement=r,o.eventsEnabled=!0,o}function I(){this.state.eventsEnabled||(this.state=A(this.reference,this.options,this.state,this.scheduleUpdate))}function M(e,t){return B(e).removeEventListener('resize',t.updateBound),t.scrollParents.forEach(function(e){e.removeEventListener('scroll',t.updateBound)}),t.updateBound=null,t.scrollParents=[],t.scrollElement=null,t.eventsEnabled=!1,t}function R(){this.state.eventsEnabled&&(cancelAnimationFrame(this.scheduleUpdate),this.state=M(this.reference,this.state))}function U(e){return''!==e&&!isNaN(parseFloat(e))&&isFinite(e)}function Y(e,t){Object.keys(t).forEach(function(o){var i='';-1!==['width','height','top','right','bottom','left'].indexOf(o)&&U(t[o])&&(i='px'),e.style[o]=t[o]+i})}function j(e,t){Object.keys(t).forEach(function(o){var i=t[o];!1===i?e.removeAttribute(o):e.setAttribute(o,t[o])})}function F(e,t,o){var i=T(e,function(e){var o=e.name;return o===t}),n=!!i&&e.some(function(e){return e.name===o&&e.enabled&&e.order<i.order});if(!n){var r='`'+t+'`';console.warn('`'+o+'`'+' modifier is required by '+r+' modifier in order to work, be sure to include it before '+r+'!')}return n}function K(e){return'end'===e?'start':'start'===e?'end':e}function q(e){var t=1<arguments.length&&void 0!==arguments[1]&&arguments[1],o=ae.indexOf(e),i=ae.slice(o+1).concat(ae.slice(0,o));return t?i.reverse():i}function V(e,t,o,i){var n=e.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),r=+n[1],p=n[2];if(!r)return e;if(0===p.indexOf('%')){var s;switch(p){case'%p':s=o;break;case'%':case'%r':default:s=i;}var d=c(s);return d[t]/100*r}if('vh'===p||'vw'===p){var a;return a='vh'===p?J(document.documentElement.clientHeight,window.innerHeight||0):J(document.documentElement.clientWidth,window.innerWidth||0),a/100*r}return r}function z(e,t,o,i){var n=[0,0],r=-1!==['right','left'].indexOf(i),p=e.split(/(\+|\-)/).map(function(e){return e.trim()}),s=p.indexOf(T(p,function(e){return-1!==e.search(/,|\s/)}));p[s]&&-1===p[s].indexOf(',')&&console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');var d=/\s*,\s*|\s+/,a=-1===s?[p]:[p.slice(0,s).concat([p[s].split(d)[0]]),[p[s].split(d)[1]].concat(p.slice(s+1))];return a=a.map(function(e,i){var n=(1===i?!r:r)?'height':'width',p=!1;return e.reduce(function(e,t){return''===e[e.length-1]&&-1!==['+','-'].indexOf(t)?(e[e.length-1]=t,p=!0,e):p?(e[e.length-1]+=t,p=!1,e):e.concat(t)},[]).map(function(e){return V(e,n,t,o)})}),a.forEach(function(e,t){e.forEach(function(o,i){U(o)&&(n[t]+=o*('-'===e[i-1]?-1:1))})}),n}function G(e,t){var o,i=t.offset,n=e.placement,r=e.offsets,p=r.popper,s=r.reference,d=n.split('-')[0];return o=U(+i)?[+i,0]:z(i,p,s,d),'left'===d?(p.top+=o[0],p.left-=o[1]):'right'===d?(p.top+=o[0],p.left+=o[1]):'top'===d?(p.left+=o[0],p.top-=o[1]):'bottom'===d&&(p.left+=o[0],p.top+=o[1]),e.popper=p,e}for(var _=Math.min,X=Math.floor,J=Math.max,Q='undefined'!=typeof window&&'undefined'!=typeof document,Z=['Edge','Trident','Firefox'],$=0,ee=0;ee<Z.length;ee+=1)if(Q&&0<=navigator.userAgent.indexOf(Z[ee])){$=1;break}var i,te=Q&&window.Promise,oe=te?function(e){var t=!1;return function(){t||(t=!0,window.Promise.resolve().then(function(){t=!1,e()}))}}:function(e){var t=!1;return function(){t||(t=!0,setTimeout(function(){t=!1,e()},$))}},ie=function(){return void 0==i&&(i=-1!==navigator.appVersion.indexOf('MSIE 10')),i},ne=function(e,t){if(!(e instanceof t))throw new TypeError('Cannot call a class as a function')},re=function(){function e(e,t){for(var o,n=0;n<t.length;n++)o=t[n],o.enumerable=o.enumerable||!1,o.configurable=!0,'value'in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}return function(t,o,i){return o&&e(t.prototype,o),i&&e(t,i),t}}(),pe=function(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e},se=Object.assign||function(e){for(var t,o=1;o<arguments.length;o++)for(var i in t=arguments[o],t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e},de=['auto-start','auto','auto-end','top-start','top','top-end','right-start','right','right-end','bottom-end','bottom','bottom-start','left-end','left','left-start'],ae=de.slice(3),le={FLIP:'flip',CLOCKWISE:'clockwise',COUNTERCLOCKWISE:'counterclockwise'},fe=function(){function t(o,i){var n=this,r=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{};ne(this,t),this.scheduleUpdate=function(){return requestAnimationFrame(n.update)},this.update=oe(this.update.bind(this)),this.options=se({},t.Defaults,r),this.state={isDestroyed:!1,isCreated:!1,scrollParents:[]},this.reference=o&&o.jquery?o[0]:o,this.popper=i&&i.jquery?i[0]:i,this.options.modifiers={},Object.keys(se({},t.Defaults.modifiers,r.modifiers)).forEach(function(e){n.options.modifiers[e]=se({},t.Defaults.modifiers[e]||{},r.modifiers?r.modifiers[e]:{})}),this.modifiers=Object.keys(this.options.modifiers).map(function(e){return se({name:e},n.options.modifiers[e])}).sort(function(e,t){return e.order-t.order}),this.modifiers.forEach(function(t){t.enabled&&e(t.onLoad)&&t.onLoad(n.reference,n.popper,n.options,t,n.state)}),this.update();var p=this.options.eventsEnabled;p&&this.enableEventListeners(),this.state.eventsEnabled=p}return re(t,[{key:'update',value:function(){return N.call(this)}},{key:'destroy',value:function(){return P.call(this)}},{key:'enableEventListeners',value:function(){return I.call(this)}},{key:'disableEventListeners',value:function(){return R.call(this)}}]),t}();return fe.Utils=('undefined'==typeof window?global:window).PopperUtils,fe.placements=de,fe.Defaults={placement:'bottom',eventsEnabled:!0,removeOnDestroy:!1,onCreate:function(){},onUpdate:function(){},modifiers:{shift:{order:100,enabled:!0,fn:function(e){var t=e.placement,o=t.split('-')[0],i=t.split('-')[1];if(i){var n=e.offsets,r=n.reference,p=n.popper,s=-1!==['bottom','top'].indexOf(o),d=s?'left':'top',a=s?'width':'height',l={start:pe({},d,r[d]),end:pe({},d,r[d]+r[a]-p[a])};e.offsets.popper=se({},p,l[i])}return e}},offset:{order:200,enabled:!0,fn:G,offset:0},preventOverflow:{order:300,enabled:!0,fn:function(e,t){var o=t.boundariesElement||r(e.instance.popper);e.instance.reference===o&&(o=r(o));var i=y(e.instance.popper,e.instance.reference,t.padding,o);t.boundaries=i;var n=t.priority,p=e.offsets.popper,s={primary:function(e){var o=p[e];return p[e]<i[e]&&!t.escapeWithReference&&(o=J(p[e],i[e])),pe({},e,o)},secondary:function(e){var o='right'===e?'left':'top',n=p[o];return p[e]>i[e]&&!t.escapeWithReference&&(n=_(p[o],i[e]-('right'===e?p.width:p.height))),pe({},o,n)}};return n.forEach(function(e){var t=-1===['left','top'].indexOf(e)?'secondary':'primary';p=se({},p,s[t](e))}),e.offsets.popper=p,e},priority:['left','right','top','bottom'],padding:5,boundariesElement:'scrollParent'},keepTogether:{order:400,enabled:!0,fn:function(e){var t=e.offsets,o=t.popper,i=t.reference,n=e.placement.split('-')[0],r=X,p=-1!==['top','bottom'].indexOf(n),s=p?'right':'bottom',d=p?'left':'top',a=p?'width':'height';return o[s]<r(i[d])&&(e.offsets.popper[d]=r(i[d])-o[a]),o[d]>r(i[s])&&(e.offsets.popper[d]=r(i[s])),e}},arrow:{order:500,enabled:!0,fn:function(e,o){var i;if(!F(e.instance.modifiers,'arrow','keepTogether'))return e;var n=o.element;if('string'==typeof n){if(n=e.instance.popper.querySelector(n),!n)return e;}else if(!e.instance.popper.contains(n))return console.warn('WARNING: `arrow.element` must be child of its popper element!'),e;var r=e.placement.split('-')[0],p=e.offsets,s=p.popper,d=p.reference,a=-1!==['left','right'].indexOf(r),l=a?'height':'width',f=a?'Top':'Left',m=f.toLowerCase(),h=a?'left':'top',g=a?'bottom':'right',u=L(n)[l];d[g]-u<s[m]&&(e.offsets.popper[m]-=s[m]-(d[g]-u)),d[m]+u>s[g]&&(e.offsets.popper[m]+=d[m]+u-s[g]),e.offsets.popper=c(e.offsets.popper);var b=d[m]+d[l]/2-u/2,w=t(e.instance.popper),y=parseFloat(w['margin'+f],10),E=parseFloat(w['border'+f+'Width'],10),v=b-e.offsets.popper[m]-y-E;return v=J(_(s[l]-u,v),0),e.arrowElement=n,e.offsets.arrow=(i={},pe(i,m,Math.round(v)),pe(i,h,''),i),e},element:'[x-arrow]'},flip:{order:600,enabled:!0,fn:function(e,t){if(k(e.instance.modifiers,'inner'))return e;if(e.flipped&&e.placement===e.originalPlacement)return e;var o=y(e.instance.popper,e.instance.reference,t.padding,t.boundariesElement),i=e.placement.split('-')[0],n=x(i),r=e.placement.split('-')[1]||'',p=[];switch(t.behavior){case le.FLIP:p=[i,n];break;case le.CLOCKWISE:p=q(i);break;case le.COUNTERCLOCKWISE:p=q(i,!0);break;default:p=t.behavior;}return p.forEach(function(s,d){if(i!==s||p.length===d+1)return e;i=e.placement.split('-')[0],n=x(i);var a=e.offsets.popper,l=e.offsets.reference,f=X,m='left'===i&&f(a.right)>f(l.left)||'right'===i&&f(a.left)<f(l.right)||'top'===i&&f(a.bottom)>f(l.top)||'bottom'===i&&f(a.top)<f(l.bottom),h=f(a.left)<f(o.left),c=f(a.right)>f(o.right),g=f(a.top)<f(o.top),u=f(a.bottom)>f(o.bottom),b='left'===i&&h||'right'===i&&c||'top'===i&&g||'bottom'===i&&u,w=-1!==['top','bottom'].indexOf(i),y=!!t.flipVariations&&(w&&'start'===r&&h||w&&'end'===r&&c||!w&&'start'===r&&g||!w&&'end'===r&&u);(m||b||y)&&(e.flipped=!0,(m||b)&&(i=p[d+1]),y&&(r=K(r)),e.placement=i+(r?'-'+r:''),e.offsets.popper=se({},e.offsets.popper,S(e.instance.popper,e.offsets.reference,e.placement)),e=C(e.instance.modifiers,e,'flip'))}),e},behavior:'flip',padding:5,boundariesElement:'viewport'},inner:{order:700,enabled:!1,fn:function(e){var t=e.placement,o=t.split('-')[0],i=e.offsets,n=i.popper,r=i.reference,p=-1!==['left','right'].indexOf(o),s=-1===['top','left'].indexOf(o);return n[p?'left':'top']=r[o]-(s?n[p?'width':'height']:0),e.placement=x(t),e.offsets.popper=c(n),e}},hide:{order:800,enabled:!0,fn:function(e){if(!F(e.instance.modifiers,'hide','preventOverflow'))return e;var t=e.offsets.reference,o=T(e.instance.modifiers,function(e){return'preventOverflow'===e.name}).boundaries;if(t.bottom<o.top||t.left>o.right||t.top>o.bottom||t.right<o.left){if(!0===e.hide)return e;e.hide=!0,e.attributes['x-out-of-boundaries']=''}else{if(!1===e.hide)return e;e.hide=!1,e.attributes['x-out-of-boundaries']=!1}return e}},computeStyle:{order:850,enabled:!0,fn:function(e,t){var o=t.x,i=t.y,n=e.offsets.popper,p=T(e.instance.modifiers,function(e){return'applyStyle'===e.name}).gpuAcceleration;void 0!==p&&console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');var s,d,a=void 0===p?t.gpuAcceleration:p,l=r(e.instance.popper),f=g(l),m={position:n.position},h={left:X(n.left),top:X(n.top),bottom:X(n.bottom),right:X(n.right)},c='bottom'===o?'top':'bottom',u='right'===i?'left':'right',b=W('transform');if(d='bottom'==c?-f.height+h.bottom:h.top,s='right'==u?-f.width+h.right:h.left,a&&b)m[b]='translate3d('+s+'px, '+d+'px, 0)',m[c]=0,m[u]=0,m.willChange='transform';else{var w='bottom'==c?-1:1,y='right'==u?-1:1;m[c]=d*w,m[u]=s*y,m.willChange=c+', '+u}var E={"x-placement":e.placement};return e.attributes=se({},E,e.attributes),e.styles=se({},m,e.styles),e.arrowStyles=se({},e.offsets.arrow,e.arrowStyles),e},gpuAcceleration:!0,x:'bottom',y:'right'},applyStyle:{order:900,enabled:!0,fn:function(e){return Y(e.instance.popper,e.styles),j(e.instance.popper,e.attributes),e.arrowElement&&Object.keys(e.arrowStyles).length&&Y(e.arrowElement,e.arrowStyles),e},onLoad:function(e,t,o,i,n){var r=O(n,t,e),p=v(o.placement,r,t,e,o.modifiers.flip.boundariesElement,o.modifiers.flip.padding);return t.setAttribute('x-placement',p),Y(t,{position:'absolute'}),o},gpuAcceleration:void 0}}},fe});
/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.1.1): util.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */

var Util = function ($) {
  /**
   * ------------------------------------------------------------------------
   * Private TransitionEnd Helpers
   * ------------------------------------------------------------------------
   */
  var TRANSITION_END = 'transitionend';
  var MAX_UID = 1000000;
  var MILLISECONDS_MULTIPLIER = 1000; // Shoutout AngusCroll (https://goo.gl/pxwQGp)

  function toType(obj) {
    return {}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();
  }

  function getSpecialTransitionEndEvent() {
    return {
      bindType: TRANSITION_END,
      delegateType: TRANSITION_END,
      handle: function handle(event) {
        if ($(event.target).is(this)) {
          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params
        }

        return undefined; // eslint-disable-line no-undefined
      }
    };
  }

  function transitionEndEmulator(duration) {
    var _this = this;

    var called = false;
    $(this).one(Util.TRANSITION_END, function () {
      called = true;
    });
    setTimeout(function () {
      if (!called) {
        Util.triggerTransitionEnd(_this);
      }
    }, duration);
    return this;
  }

  function setTransitionEndSupport() {
    $.fn.emulateTransitionEnd = transitionEndEmulator;
    $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();
  }
  /**
   * --------------------------------------------------------------------------
   * Public Util Api
   * --------------------------------------------------------------------------
   */


  var Util = {
    TRANSITION_END: 'bsTransitionEnd',
    getUID: function getUID(prefix) {
      do {
        // eslint-disable-next-line no-bitwise
        prefix += ~~(Math.random() * MAX_UID); // "~~" acts like a faster Math.floor() here
      } while (document.getElementById(prefix));

      return prefix;
    },
    getSelectorFromElement: function getSelectorFromElement(element) {
      var selector = element.getAttribute('data-target');

      if (!selector || selector === '#') {
        selector = element.getAttribute('href') || '';
      }

      try {
        var $selector = $(document).find(selector);
        return $selector.length > 0 ? selector : null;
      } catch (err) {
        return null;
      }
    },
    getTransitionDurationFromElement: function getTransitionDurationFromElement(element) {
      if (!element) {
        return 0;
      } // Get transition-duration of the element


      var transitionDuration = $(element).css('transition-duration');
      var floatTransitionDuration = parseFloat(transitionDuration); // Return 0 if element or transition duration is not found

      if (!floatTransitionDuration) {
        return 0;
      } // If multiple durations are defined, take the first


      transitionDuration = transitionDuration.split(',')[0];
      return parseFloat(transitionDuration) * MILLISECONDS_MULTIPLIER;
    },
    reflow: function reflow(element) {
      return element.offsetHeight;
    },
    triggerTransitionEnd: function triggerTransitionEnd(element) {
      $(element).trigger(TRANSITION_END);
    },
    // TODO: Remove in v5
    supportsTransitionEnd: function supportsTransitionEnd() {
      return Boolean(TRANSITION_END);
    },
    isElement: function isElement(obj) {
      return (obj[0] || obj).nodeType;
    },
    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {
      for (var property in configTypes) {
        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {
          var expectedTypes = configTypes[property];
          var value = config[property];
          var valueType = value && Util.isElement(value) ? 'element' : toType(value);

          if (!new RegExp(expectedTypes).test(valueType)) {
            throw new Error(componentName.toUpperCase() + ": " + ("Option \"" + property + "\" provided type \"" + valueType + "\" ") + ("but expected type \"" + expectedTypes + "\"."));
          }
        }
      }
    }
  };
  setTransitionEndSupport();
  return Util;
}($);
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.1.1): alert.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Alert = function ($) {
  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */
  var NAME = 'alert';
  var VERSION = '4.1.1';
  var DATA_KEY = 'bs.alert';
  var EVENT_KEY = "." + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var Selector = {
    DISMISS: '[data-dismiss="alert"]'
  };
  var Event = {
    CLOSE: "close" + EVENT_KEY,
    CLOSED: "closed" + EVENT_KEY,
    CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY
  };
  var ClassName = {
    ALERT: 'alert',
    FADE: 'fade',
    SHOW: 'show'
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */

  };

  var Alert =
  /*#__PURE__*/
  function () {
    function Alert(element) {
      this._element = element;
    } // Getters


    var _proto = Alert.prototype;

    // Public
    _proto.close = function close(element) {
      var rootElement = this._element;

      if (element) {
        rootElement = this._getRootElement(element);
      }

      var customEvent = this._triggerCloseEvent(rootElement);

      if (customEvent.isDefaultPrevented()) {
        return;
      }

      this._removeElement(rootElement);
    };

    _proto.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY);
      this._element = null;
    }; // Private


    _proto._getRootElement = function _getRootElement(element) {
      var selector = Util.getSelectorFromElement(element);
      var parent = false;

      if (selector) {
        parent = $(selector)[0];
      }

      if (!parent) {
        parent = $(element).closest("." + ClassName.ALERT)[0];
      }

      return parent;
    };

    _proto._triggerCloseEvent = function _triggerCloseEvent(element) {
      var closeEvent = $.Event(Event.CLOSE);
      $(element).trigger(closeEvent);
      return closeEvent;
    };

    _proto._removeElement = function _removeElement(element) {
      var _this = this;

      $(element).removeClass(ClassName.SHOW);

      if (!$(element).hasClass(ClassName.FADE)) {
        this._destroyElement(element);

        return;
      }

      var transitionDuration = Util.getTransitionDurationFromElement(element);
      $(element).one(Util.TRANSITION_END, function (event) {
        return _this._destroyElement(element, event);
      }).emulateTransitionEnd(transitionDuration);
    };

    _proto._destroyElement = function _destroyElement(element) {
      $(element).detach().trigger(Event.CLOSED).remove();
    }; // Static


    Alert._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $element = $(this);
        var data = $element.data(DATA_KEY);

        if (!data) {
          data = new Alert(this);
          $element.data(DATA_KEY, data);
        }

        if (config === 'close') {
          data[config](this);
        }
      });
    };

    Alert._handleDismiss = function _handleDismiss(alertInstance) {
      return function (event) {
        if (event) {
          event.preventDefault();
        }

        alertInstance.close(this);
      };
    };

    _createClass(Alert, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION;
      }
    }]);

    return Alert;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(document).on(Event.CLICK_DATA_API, Selector.DISMISS, Alert._handleDismiss(new Alert()));
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Alert._jQueryInterface;
  $.fn[NAME].Constructor = Alert;

  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Alert._jQueryInterface;
  };

  return Alert;
}($);
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.1.1): button.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Button = function ($) {
  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */
  var NAME = 'button';
  var VERSION = '4.1.1';
  var DATA_KEY = 'bs.button';
  var EVENT_KEY = "." + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var ClassName = {
    ACTIVE: 'active',
    BUTTON: 'btn',
    FOCUS: 'focus'
  };
  var Selector = {
    DATA_TOGGLE_CARROT: '[data-toggle^="button"]',
    DATA_TOGGLE: '[data-toggle="buttons"]',
    INPUT: 'input',
    ACTIVE: '.active',
    BUTTON: '.btn'
  };
  var Event = {
    CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY,
    FOCUS_BLUR_DATA_API: "focus" + EVENT_KEY + DATA_API_KEY + " " + ("blur" + EVENT_KEY + DATA_API_KEY)
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */

  };

  var Button =
  /*#__PURE__*/
  function () {
    function Button(element) {
      this._element = element;
    } // Getters


    var _proto = Button.prototype;

    // Public
    _proto.toggle = function toggle() {
      var triggerChangeEvent = true;
      var addAriaPressed = true;
      var rootElement = $(this._element).closest(Selector.DATA_TOGGLE)[0];

      if (rootElement) {
        var input = $(this._element).find(Selector.INPUT)[0];

        if (input) {
          if (input.type === 'radio') {
            if (input.checked && $(this._element).hasClass(ClassName.ACTIVE)) {
              triggerChangeEvent = false;
            } else {
              var activeElement = $(rootElement).find(Selector.ACTIVE)[0];

              if (activeElement) {
                $(activeElement).removeClass(ClassName.ACTIVE);
              }
            }
          }

          if (triggerChangeEvent) {
            if (input.hasAttribute('disabled') || rootElement.hasAttribute('disabled') || input.classList.contains('disabled') || rootElement.classList.contains('disabled')) {
              return;
            }

            input.checked = !$(this._element).hasClass(ClassName.ACTIVE);
            $(input).trigger('change');
          }

          input.focus();
          addAriaPressed = false;
        }
      }

      if (addAriaPressed) {
        this._element.setAttribute('aria-pressed', !$(this._element).hasClass(ClassName.ACTIVE));
      }

      if (triggerChangeEvent) {
        $(this._element).toggleClass(ClassName.ACTIVE);
      }
    };

    _proto.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY);
      this._element = null;
    }; // Static


    Button._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY);

        if (!data) {
          data = new Button(this);
          $(this).data(DATA_KEY, data);
        }

        if (config === 'toggle') {
          data[config]();
        }
      });
    };

    _createClass(Button, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION;
      }
    }]);

    return Button;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {
    event.preventDefault();
    var button = event.target;

    if (!$(button).hasClass(ClassName.BUTTON)) {
      button = $(button).closest(Selector.BUTTON);
    }

    Button._jQueryInterface.call($(button), 'toggle');
  }).on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {
    var button = $(event.target).closest(Selector.BUTTON)[0];
    $(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type));
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Button._jQueryInterface;
  $.fn[NAME].Constructor = Button;

  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Button._jQueryInterface;
  };

  return Button;
}($);
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.1.1): carousel.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Carousel = function ($) {
  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */
  var NAME = 'carousel';
  var VERSION = '4.1.1';
  var DATA_KEY = 'bs.carousel';
  var EVENT_KEY = "." + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key

  var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key

  var TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch

  var Default = {
    interval: 5000,
    keyboard: true,
    slide: false,
    pause: 'hover',
    wrap: true
  };
  var DefaultType = {
    interval: '(number|boolean)',
    keyboard: 'boolean',
    slide: '(boolean|string)',
    pause: '(string|boolean)',
    wrap: 'boolean'
  };
  var Direction = {
    NEXT: 'next',
    PREV: 'prev',
    LEFT: 'left',
    RIGHT: 'right'
  };
  var Event = {
    SLIDE: "slide" + EVENT_KEY,
    SLID: "slid" + EVENT_KEY,
    KEYDOWN: "keydown" + EVENT_KEY,
    MOUSEENTER: "mouseenter" + EVENT_KEY,
    MOUSELEAVE: "mouseleave" + EVENT_KEY,
    TOUCHEND: "touchend" + EVENT_KEY,
    LOAD_DATA_API: "load" + EVENT_KEY + DATA_API_KEY,
    CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY
  };
  var ClassName = {
    CAROUSEL: 'carousel',
    ACTIVE: 'active',
    SLIDE: 'slide',
    RIGHT: 'carousel-item-right',
    LEFT: 'carousel-item-left',
    NEXT: 'carousel-item-next',
    PREV: 'carousel-item-prev',
    ITEM: 'carousel-item'
  };
  var Selector = {
    ACTIVE: '.active',
    ACTIVE_ITEM: '.active.carousel-item',
    ITEM: '.carousel-item',
    NEXT_PREV: '.carousel-item-next, .carousel-item-prev',
    INDICATORS: '.carousel-indicators',
    DATA_SLIDE: '[data-slide], [data-slide-to]',
    DATA_RIDE: '[data-ride="carousel"]'
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */

  };

  var Carousel =
  /*#__PURE__*/
  function () {
    function Carousel(element, config) {
      this._items = null;
      this._interval = null;
      this._activeElement = null;
      this._isPaused = false;
      this._isSliding = false;
      this.touchTimeout = null;
      this._config = this._getConfig(config);
      this._element = $(element)[0];
      this._indicatorsElement = $(this._element).find(Selector.INDICATORS)[0];

      this._addEventListeners();
    } // Getters


    var _proto = Carousel.prototype;

    // Public
    _proto.next = function next() {
      if (!this._isSliding) {
        this._slide(Direction.NEXT);
      }
    };

    _proto.nextWhenVisible = function nextWhenVisible() {
      // Don't call next when the page isn't visible
      // or the carousel or its parent isn't visible
      if (!document.hidden && $(this._element).is(':visible') && $(this._element).css('visibility') !== 'hidden') {
        this.next();
      }
    };

    _proto.prev = function prev() {
      if (!this._isSliding) {
        this._slide(Direction.PREV);
      }
    };

    _proto.pause = function pause(event) {
      if (!event) {
        this._isPaused = true;
      }

      if ($(this._element).find(Selector.NEXT_PREV)[0]) {
        Util.triggerTransitionEnd(this._element);
        this.cycle(true);
      }

      clearInterval(this._interval);
      this._interval = null;
    };

    _proto.cycle = function cycle(event) {
      if (!event) {
        this._isPaused = false;
      }

      if (this._interval) {
        clearInterval(this._interval);
        this._interval = null;
      }

      if (this._config.interval && !this._isPaused) {
        this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);
      }
    };

    _proto.to = function to(index) {
      var _this = this;

      this._activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];

      var activeIndex = this._getItemIndex(this._activeElement);

      if (index > this._items.length - 1 || index < 0) {
        return;
      }

      if (this._isSliding) {
        $(this._element).one(Event.SLID, function () {
          return _this.to(index);
        });
        return;
      }

      if (activeIndex === index) {
        this.pause();
        this.cycle();
        return;
      }

      var direction = index > activeIndex ? Direction.NEXT : Direction.PREV;

      this._slide(direction, this._items[index]);
    };

    _proto.dispose = function dispose() {
      $(this._element).off(EVENT_KEY);
      $.removeData(this._element, DATA_KEY);
      this._items = null;
      this._config = null;
      this._element = null;
      this._interval = null;
      this._isPaused = null;
      this._isSliding = null;
      this._activeElement = null;
      this._indicatorsElement = null;
    }; // Private


    _proto._getConfig = function _getConfig(config) {
      config = _objectSpread({}, Default, config);
      Util.typeCheckConfig(NAME, config, DefaultType);
      return config;
    };

    _proto._addEventListeners = function _addEventListeners() {
      var _this2 = this;

      if (this._config.keyboard) {
        $(this._element).on(Event.KEYDOWN, function (event) {
          return _this2._keydown(event);
        });
      }

      if (this._config.pause === 'hover') {
        $(this._element).on(Event.MOUSEENTER, function (event) {
          return _this2.pause(event);
        }).on(Event.MOUSELEAVE, function (event) {
          return _this2.cycle(event);
        });

        if ('ontouchstart' in document.documentElement) {
          // If it's a touch-enabled device, mouseenter/leave are fired as
          // part of the mouse compatibility events on first tap - the carousel
          // would stop cycling until user tapped out of it;
          // here, we listen for touchend, explicitly pause the carousel
          // (as if it's the second time we tap on it, mouseenter compat event
          // is NOT fired) and after a timeout (to allow for mouse compatibility
          // events to fire) we explicitly restart cycling
          $(this._element).on(Event.TOUCHEND, function () {
            _this2.pause();

            if (_this2.touchTimeout) {
              clearTimeout(_this2.touchTimeout);
            }

            _this2.touchTimeout = setTimeout(function (event) {
              return _this2.cycle(event);
            }, TOUCHEVENT_COMPAT_WAIT + _this2._config.interval);
          });
        }
      }
    };

    _proto._keydown = function _keydown(event) {
      if (/input|textarea/i.test(event.target.tagName)) {
        return;
      }

      switch (event.which) {
        case ARROW_LEFT_KEYCODE:
          event.preventDefault();
          this.prev();
          break;

        case ARROW_RIGHT_KEYCODE:
          event.preventDefault();
          this.next();
          break;

        default:
      }
    };

    _proto._getItemIndex = function _getItemIndex(element) {
      this._items = $.makeArray($(element).parent().find(Selector.ITEM));
      return this._items.indexOf(element);
    };

    _proto._getItemByDirection = function _getItemByDirection(direction, activeElement) {
      var isNextDirection = direction === Direction.NEXT;
      var isPrevDirection = direction === Direction.PREV;

      var activeIndex = this._getItemIndex(activeElement);

      var lastItemIndex = this._items.length - 1;
      var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;

      if (isGoingToWrap && !this._config.wrap) {
        return activeElement;
      }

      var delta = direction === Direction.PREV ? -1 : 1;
      var itemIndex = (activeIndex + delta) % this._items.length;
      return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];
    };

    _proto._triggerSlideEvent = function _triggerSlideEvent(relatedTarget, eventDirectionName) {
      var targetIndex = this._getItemIndex(relatedTarget);

      var fromIndex = this._getItemIndex($(this._element).find(Selector.ACTIVE_ITEM)[0]);

      var slideEvent = $.Event(Event.SLIDE, {
        relatedTarget: relatedTarget,
        direction: eventDirectionName,
        from: fromIndex,
        to: targetIndex
      });
      $(this._element).trigger(slideEvent);
      return slideEvent;
    };

    _proto._setActiveIndicatorElement = function _setActiveIndicatorElement(element) {
      if (this._indicatorsElement) {
        $(this._indicatorsElement).find(Selector.ACTIVE).removeClass(ClassName.ACTIVE);

        var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];

        if (nextIndicator) {
          $(nextIndicator).addClass(ClassName.ACTIVE);
        }
      }
    };

    _proto._slide = function _slide(direction, element) {
      var _this3 = this;

      var activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];

      var activeElementIndex = this._getItemIndex(activeElement);

      var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);

      var nextElementIndex = this._getItemIndex(nextElement);

      var isCycling = Boolean(this._interval);
      var directionalClassName;
      var orderClassName;
      var eventDirectionName;

      if (direction === Direction.NEXT) {
        directionalClassName = ClassName.LEFT;
        orderClassName = ClassName.NEXT;
        eventDirectionName = Direction.LEFT;
      } else {
        directionalClassName = ClassName.RIGHT;
        orderClassName = ClassName.PREV;
        eventDirectionName = Direction.RIGHT;
      }

      if (nextElement && $(nextElement).hasClass(ClassName.ACTIVE)) {
        this._isSliding = false;
        return;
      }

      var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);

      if (slideEvent.isDefaultPrevented()) {
        return;
      }

      if (!activeElement || !nextElement) {
        // Some weirdness is happening, so we bail
        return;
      }

      this._isSliding = true;

      if (isCycling) {
        this.pause();
      }

      this._setActiveIndicatorElement(nextElement);

      var slidEvent = $.Event(Event.SLID, {
        relatedTarget: nextElement,
        direction: eventDirectionName,
        from: activeElementIndex,
        to: nextElementIndex
      });

      if ($(this._element).hasClass(ClassName.SLIDE)) {
        $(nextElement).addClass(orderClassName);
        Util.reflow(nextElement);
        $(activeElement).addClass(directionalClassName);
        $(nextElement).addClass(directionalClassName);
        var transitionDuration = Util.getTransitionDurationFromElement(activeElement);
        $(activeElement).one(Util.TRANSITION_END, function () {
          $(nextElement).removeClass(directionalClassName + " " + orderClassName).addClass(ClassName.ACTIVE);
          $(activeElement).removeClass(ClassName.ACTIVE + " " + orderClassName + " " + directionalClassName);
          _this3._isSliding = false;
          setTimeout(function () {
            return $(_this3._element).trigger(slidEvent);
          }, 0);
        }).emulateTransitionEnd(transitionDuration);
      } else {
        $(activeElement).removeClass(ClassName.ACTIVE);
        $(nextElement).addClass(ClassName.ACTIVE);
        this._isSliding = false;
        $(this._element).trigger(slidEvent);
      }

      if (isCycling) {
        this.cycle();
      }
    }; // Static


    Carousel._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY);

        var _config = _objectSpread({}, Default, $(this).data());

        if (typeof config === 'object') {
          _config = _objectSpread({}, _config, config);
        }

        var action = typeof config === 'string' ? config : _config.slide;

        if (!data) {
          data = new Carousel(this, _config);
          $(this).data(DATA_KEY, data);
        }

        if (typeof config === 'number') {
          data.to(config);
        } else if (typeof action === 'string') {
          if (typeof data[action] === 'undefined') {
            throw new TypeError("No method named \"" + action + "\"");
          }

          data[action]();
        } else if (_config.interval) {
          data.pause();
          data.cycle();
        }
      });
    };

    Carousel._dataApiClickHandler = function _dataApiClickHandler(event) {
      var selector = Util.getSelectorFromElement(this);

      if (!selector) {
        return;
      }

      var target = $(selector)[0];

      if (!target || !$(target).hasClass(ClassName.CAROUSEL)) {
        return;
      }

      var config = _objectSpread({}, $(target).data(), $(this).data());

      var slideIndex = this.getAttribute('data-slide-to');

      if (slideIndex) {
        config.interval = false;
      }

      Carousel._jQueryInterface.call($(target), config);

      if (slideIndex) {
        $(target).data(DATA_KEY).to(slideIndex);
      }

      event.preventDefault();
    };

    _createClass(Carousel, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default;
      }
    }]);

    return Carousel;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(document).on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler);
  $(window).on(Event.LOAD_DATA_API, function () {
    $(Selector.DATA_RIDE).each(function () {
      var $carousel = $(this);

      Carousel._jQueryInterface.call($carousel, $carousel.data());
    });
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Carousel._jQueryInterface;
  $.fn[NAME].Constructor = Carousel;

  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Carousel._jQueryInterface;
  };

  return Carousel;
}($);
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.1.1): collapse.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Collapse = function ($) {
  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */
  var NAME = 'collapse';
  var VERSION = '4.1.1';
  var DATA_KEY = 'bs.collapse';
  var EVENT_KEY = "." + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var Default = {
    toggle: true,
    parent: ''
  };
  var DefaultType = {
    toggle: 'boolean',
    parent: '(string|element)'
  };
  var Event = {
    SHOW: "show" + EVENT_KEY,
    SHOWN: "shown" + EVENT_KEY,
    HIDE: "hide" + EVENT_KEY,
    HIDDEN: "hidden" + EVENT_KEY,
    CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY
  };
  var ClassName = {
    SHOW: 'show',
    COLLAPSE: 'collapse',
    COLLAPSING: 'collapsing',
    COLLAPSED: 'collapsed'
  };
  var Dimension = {
    WIDTH: 'width',
    HEIGHT: 'height'
  };
  var Selector = {
    ACTIVES: '.show, .collapsing',
    DATA_TOGGLE: '[data-toggle="collapse"]'
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */

  };

  var Collapse =
  /*#__PURE__*/
  function () {
    function Collapse(element, config) {
      this._isTransitioning = false;
      this._element = element;
      this._config = this._getConfig(config);
      this._triggerArray = $.makeArray($("[data-toggle=\"collapse\"][href=\"#" + element.id + "\"]," + ("[data-toggle=\"collapse\"][data-target=\"#" + element.id + "\"]")));
      var tabToggles = $(Selector.DATA_TOGGLE);

      for (var i = 0; i < tabToggles.length; i++) {
        var elem = tabToggles[i];
        var selector = Util.getSelectorFromElement(elem);

        if (selector !== null && $(selector).filter(element).length > 0) {
          this._selector = selector;

          this._triggerArray.push(elem);
        }
      }

      this._parent = this._config.parent ? this._getParent() : null;

      if (!this._config.parent) {
        this._addAriaAndCollapsedClass(this._element, this._triggerArray);
      }

      if (this._config.toggle) {
        this.toggle();
      }
    } // Getters


    var _proto = Collapse.prototype;

    // Public
    _proto.toggle = function toggle() {
      if ($(this._element).hasClass(ClassName.SHOW)) {
        this.hide();
      } else {
        this.show();
      }
    };

    _proto.show = function show() {
      var _this = this;

      if (this._isTransitioning || $(this._element).hasClass(ClassName.SHOW)) {
        return;
      }

      var actives;
      var activesData;

      if (this._parent) {
        actives = $.makeArray($(this._parent).find(Selector.ACTIVES).filter("[data-parent=\"" + this._config.parent + "\"]"));

        if (actives.length === 0) {
          actives = null;
        }
      }

      if (actives) {
        activesData = $(actives).not(this._selector).data(DATA_KEY);

        if (activesData && activesData._isTransitioning) {
          return;
        }
      }

      var startEvent = $.Event(Event.SHOW);
      $(this._element).trigger(startEvent);

      if (startEvent.isDefaultPrevented()) {
        return;
      }

      if (actives) {
        Collapse._jQueryInterface.call($(actives).not(this._selector), 'hide');

        if (!activesData) {
          $(actives).data(DATA_KEY, null);
        }
      }

      var dimension = this._getDimension();

      $(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);
      this._element.style[dimension] = 0;

      if (this._triggerArray.length > 0) {
        $(this._triggerArray).removeClass(ClassName.COLLAPSED).attr('aria-expanded', true);
      }

      this.setTransitioning(true);

      var complete = function complete() {
        $(_this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.SHOW);
        _this._element.style[dimension] = '';

        _this.setTransitioning(false);

        $(_this._element).trigger(Event.SHOWN);
      };

      var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);
      var scrollSize = "scroll" + capitalizedDimension;
      var transitionDuration = Util.getTransitionDurationFromElement(this._element);
      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      this._element.style[dimension] = this._element[scrollSize] + "px";
    };

    _proto.hide = function hide() {
      var _this2 = this;

      if (this._isTransitioning || !$(this._element).hasClass(ClassName.SHOW)) {
        return;
      }

      var startEvent = $.Event(Event.HIDE);
      $(this._element).trigger(startEvent);

      if (startEvent.isDefaultPrevented()) {
        return;
      }

      var dimension = this._getDimension();

      this._element.style[dimension] = this._element.getBoundingClientRect()[dimension] + "px";
      Util.reflow(this._element);
      $(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.SHOW);

      if (this._triggerArray.length > 0) {
        for (var i = 0; i < this._triggerArray.length; i++) {
          var trigger = this._triggerArray[i];
          var selector = Util.getSelectorFromElement(trigger);

          if (selector !== null) {
            var $elem = $(selector);

            if (!$elem.hasClass(ClassName.SHOW)) {
              $(trigger).addClass(ClassName.COLLAPSED).attr('aria-expanded', false);
            }
          }
        }
      }

      this.setTransitioning(true);

      var complete = function complete() {
        _this2.setTransitioning(false);

        $(_this2._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);
      };

      this._element.style[dimension] = '';
      var transitionDuration = Util.getTransitionDurationFromElement(this._element);
      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
    };

    _proto.setTransitioning = function setTransitioning(isTransitioning) {
      this._isTransitioning = isTransitioning;
    };

    _proto.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY);
      this._config = null;
      this._parent = null;
      this._element = null;
      this._triggerArray = null;
      this._isTransitioning = null;
    }; // Private


    _proto._getConfig = function _getConfig(config) {
      config = _objectSpread({}, Default, config);
      config.toggle = Boolean(config.toggle); // Coerce string values

      Util.typeCheckConfig(NAME, config, DefaultType);
      return config;
    };

    _proto._getDimension = function _getDimension() {
      var hasWidth = $(this._element).hasClass(Dimension.WIDTH);
      return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;
    };

    _proto._getParent = function _getParent() {
      var _this3 = this;

      var parent = null;

      if (Util.isElement(this._config.parent)) {
        parent = this._config.parent; // It's a jQuery object

        if (typeof this._config.parent.jquery !== 'undefined') {
          parent = this._config.parent[0];
        }
      } else {
        parent = $(this._config.parent)[0];
      }

      var selector = "[data-toggle=\"collapse\"][data-parent=\"" + this._config.parent + "\"]";
      $(parent).find(selector).each(function (i, element) {
        _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);
      });
      return parent;
    };

    _proto._addAriaAndCollapsedClass = function _addAriaAndCollapsedClass(element, triggerArray) {
      if (element) {
        var isOpen = $(element).hasClass(ClassName.SHOW);

        if (triggerArray.length > 0) {
          $(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);
        }
      }
    }; // Static


    Collapse._getTargetFromElement = function _getTargetFromElement(element) {
      var selector = Util.getSelectorFromElement(element);
      return selector ? $(selector)[0] : null;
    };

    Collapse._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $this = $(this);
        var data = $this.data(DATA_KEY);

        var _config = _objectSpread({}, Default, $this.data(), typeof config === 'object' && config ? config : {});

        if (!data && _config.toggle && /show|hide/.test(config)) {
          _config.toggle = false;
        }

        if (!data) {
          data = new Collapse(this, _config);
          $this.data(DATA_KEY, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Collapse, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default;
      }
    }]);

    return Collapse;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {
    // preventDefault only for <a> elements (which change the URL) not inside the collapsible element
    if (event.currentTarget.tagName === 'A') {
      event.preventDefault();
    }

    var $trigger = $(this);
    var selector = Util.getSelectorFromElement(this);
    $(selector).each(function () {
      var $target = $(this);
      var data = $target.data(DATA_KEY);
      var config = data ? 'toggle' : $trigger.data();

      Collapse._jQueryInterface.call($target, config);
    });
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Collapse._jQueryInterface;
  $.fn[NAME].Constructor = Collapse;

  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Collapse._jQueryInterface;
  };

  return Collapse;
}($);
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.1.1): dropdown.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Dropdown = function ($) {
  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */
  var NAME = 'dropdown';
  var VERSION = '4.1.1';
  var DATA_KEY = 'bs.dropdown';
  var EVENT_KEY = "." + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key

  var SPACE_KEYCODE = 32; // KeyboardEvent.which value for space key

  var TAB_KEYCODE = 9; // KeyboardEvent.which value for tab key

  var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key

  var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key

  var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)

  var REGEXP_KEYDOWN = new RegExp(ARROW_UP_KEYCODE + "|" + ARROW_DOWN_KEYCODE + "|" + ESCAPE_KEYCODE);
  var Event = {
    HIDE: "hide" + EVENT_KEY,
    HIDDEN: "hidden" + EVENT_KEY,
    SHOW: "show" + EVENT_KEY,
    SHOWN: "shown" + EVENT_KEY,
    CLICK: "click" + EVENT_KEY,
    CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY,
    KEYDOWN_DATA_API: "keydown" + EVENT_KEY + DATA_API_KEY,
    KEYUP_DATA_API: "keyup" + EVENT_KEY + DATA_API_KEY
  };
  var ClassName = {
    DISABLED: 'disabled',
    SHOW: 'show',
    DROPUP: 'dropup',
    DROPRIGHT: 'dropright',
    DROPLEFT: 'dropleft',
    MENURIGHT: 'dropdown-menu-right',
    MENULEFT: 'dropdown-menu-left',
    POSITION_STATIC: 'position-static'
  };
  var Selector = {
    DATA_TOGGLE: '[data-toggle="dropdown"]',
    FORM_CHILD: '.dropdown form',
    MENU: '.dropdown-menu',
    NAVBAR_NAV: '.navbar-nav',
    VISIBLE_ITEMS: '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)'
  };
  var AttachmentMap = {
    TOP: 'top-start',
    TOPEND: 'top-end',
    BOTTOM: 'bottom-start',
    BOTTOMEND: 'bottom-end',
    RIGHT: 'right-start',
    RIGHTEND: 'right-end',
    LEFT: 'left-start',
    LEFTEND: 'left-end'
  };
  var Default = {
    offset: 0,
    flip: true,
    boundary: 'scrollParent',
    reference: 'toggle',
    display: 'dynamic'
  };
  var DefaultType = {
    offset: '(number|string|function)',
    flip: 'boolean',
    boundary: '(string|element)',
    reference: '(string|element)',
    display: 'string'
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */

  };

  var Dropdown =
  /*#__PURE__*/
  function () {
    function Dropdown(element, config) {
      this._element = element;
      this._popper = null;
      this._config = this._getConfig(config);
      this._menu = this._getMenuElement();
      this._inNavbar = this._detectNavbar();

      this._addEventListeners();
    } // Getters


    var _proto = Dropdown.prototype;

    // Public
    _proto.toggle = function toggle() {
      if (this._element.disabled || $(this._element).hasClass(ClassName.DISABLED)) {
        return;
      }

      var parent = Dropdown._getParentFromElement(this._element);

      var isActive = $(this._menu).hasClass(ClassName.SHOW);

      Dropdown._clearMenus();

      if (isActive) {
        return;
      }

      var relatedTarget = {
        relatedTarget: this._element
      };
      var showEvent = $.Event(Event.SHOW, relatedTarget);
      $(parent).trigger(showEvent);

      if (showEvent.isDefaultPrevented()) {
        return;
      } // Disable totally Popper.js for Dropdown in Navbar


      if (!this._inNavbar) {
        /**
         * Check for Popper dependency
         * Popper - https://popper.js.org
         */
        if (typeof Popper === 'undefined') {
          throw new TypeError('Bootstrap dropdown require Popper.js (https://popper.js.org)');
        }

        var referenceElement = this._element;

        if (this._config.reference === 'parent') {
          referenceElement = parent;
        } else if (Util.isElement(this._config.reference)) {
          referenceElement = this._config.reference; // Check if it's jQuery element

          if (typeof this._config.reference.jquery !== 'undefined') {
            referenceElement = this._config.reference[0];
          }
        } // If boundary is not `scrollParent`, then set position to `static`
        // to allow the menu to "escape" the scroll parent's boundaries
        // https://github.com/twbs/bootstrap/issues/24251


        if (this._config.boundary !== 'scrollParent') {
          $(parent).addClass(ClassName.POSITION_STATIC);
        }

        this._popper = new Popper(referenceElement, this._menu, this._getPopperConfig());
      } // If this is a touch-enabled device we add extra
      // empty mouseover listeners to the body's immediate children;
      // only needed because of broken event delegation on iOS
      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html


      if ('ontouchstart' in document.documentElement && $(parent).closest(Selector.NAVBAR_NAV).length === 0) {
        $(document.body).children().on('mouseover', null, $.noop);
      }

      this._element.focus();

      this._element.setAttribute('aria-expanded', true);

      $(this._menu).toggleClass(ClassName.SHOW);
      $(parent).toggleClass(ClassName.SHOW).trigger($.Event(Event.SHOWN, relatedTarget));
    };

    _proto.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY);
      $(this._element).off(EVENT_KEY);
      this._element = null;
      this._menu = null;

      if (this._popper !== null) {
        this._popper.destroy();

        this._popper = null;
      }
    };

    _proto.update = function update() {
      this._inNavbar = this._detectNavbar();

      if (this._popper !== null) {
        this._popper.scheduleUpdate();
      }
    }; // Private


    _proto._addEventListeners = function _addEventListeners() {
      var _this = this;

      $(this._element).on(Event.CLICK, function (event) {
        event.preventDefault();
        event.stopPropagation();

        _this.toggle();
      });
    };

    _proto._getConfig = function _getConfig(config) {
      config = _objectSpread({}, this.constructor.Default, $(this._element).data(), config);
      Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);
      return config;
    };

    _proto._getMenuElement = function _getMenuElement() {
      if (!this._menu) {
        var parent = Dropdown._getParentFromElement(this._element);

        this._menu = $(parent).find(Selector.MENU)[0];
      }

      return this._menu;
    };

    _proto._getPlacement = function _getPlacement() {
      var $parentDropdown = $(this._element).parent();
      var placement = AttachmentMap.BOTTOM; // Handle dropup

      if ($parentDropdown.hasClass(ClassName.DROPUP)) {
        placement = AttachmentMap.TOP;

        if ($(this._menu).hasClass(ClassName.MENURIGHT)) {
          placement = AttachmentMap.TOPEND;
        }
      } else if ($parentDropdown.hasClass(ClassName.DROPRIGHT)) {
        placement = AttachmentMap.RIGHT;
      } else if ($parentDropdown.hasClass(ClassName.DROPLEFT)) {
        placement = AttachmentMap.LEFT;
      } else if ($(this._menu).hasClass(ClassName.MENURIGHT)) {
        placement = AttachmentMap.BOTTOMEND;
      }

      return placement;
    };

    _proto._detectNavbar = function _detectNavbar() {
      return $(this._element).closest('.navbar').length > 0;
    };

    _proto._getPopperConfig = function _getPopperConfig() {
      var _this2 = this;

      var offsetConf = {};

      if (typeof this._config.offset === 'function') {
        offsetConf.fn = function (data) {
          data.offsets = _objectSpread({}, data.offsets, _this2._config.offset(data.offsets) || {});
          return data;
        };
      } else {
        offsetConf.offset = this._config.offset;
      }

      var popperConfig = {
        placement: this._getPlacement(),
        modifiers: {
          offset: offsetConf,
          flip: {
            enabled: this._config.flip
          },
          preventOverflow: {
            boundariesElement: this._config.boundary
          }
        } // Disable Popper.js if we have a static display

      };

      if (this._config.display === 'static') {
        popperConfig.modifiers.applyStyle = {
          enabled: false
        };
      }

      return popperConfig;
    }; // Static


    Dropdown._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY);

        var _config = typeof config === 'object' ? config : null;

        if (!data) {
          data = new Dropdown(this, _config);
          $(this).data(DATA_KEY, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    Dropdown._clearMenus = function _clearMenus(event) {
      if (event && (event.which === RIGHT_MOUSE_BUTTON_WHICH || event.type === 'keyup' && event.which !== TAB_KEYCODE)) {
        return;
      }

      var toggles = $.makeArray($(Selector.DATA_TOGGLE));

      for (var i = 0; i < toggles.length; i++) {
        var parent = Dropdown._getParentFromElement(toggles[i]);

        var context = $(toggles[i]).data(DATA_KEY);
        var relatedTarget = {
          relatedTarget: toggles[i]
        };

        if (!context) {
          continue;
        }

        var dropdownMenu = context._menu;

        if (!$(parent).hasClass(ClassName.SHOW)) {
          continue;
        }

        if (event && (event.type === 'click' && /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.which === TAB_KEYCODE) && $.contains(parent, event.target)) {
          continue;
        }

        var hideEvent = $.Event(Event.HIDE, relatedTarget);
        $(parent).trigger(hideEvent);

        if (hideEvent.isDefaultPrevented()) {
          continue;
        } // If this is a touch-enabled device we remove the extra
        // empty mouseover listeners we added for iOS support


        if ('ontouchstart' in document.documentElement) {
          $(document.body).children().off('mouseover', null, $.noop);
        }

        toggles[i].setAttribute('aria-expanded', 'false');
        $(dropdownMenu).removeClass(ClassName.SHOW);
        $(parent).removeClass(ClassName.SHOW).trigger($.Event(Event.HIDDEN, relatedTarget));
      }
    };

    Dropdown._getParentFromElement = function _getParentFromElement(element) {
      var parent;
      var selector = Util.getSelectorFromElement(element);

      if (selector) {
        parent = $(selector)[0];
      }

      return parent || element.parentNode;
    }; // eslint-disable-next-line complexity


    Dropdown._dataApiKeydownHandler = function _dataApiKeydownHandler(event) {
      // If not input/textarea:
      //  - And not a key in REGEXP_KEYDOWN => not a dropdown command
      // If input/textarea:
      //  - If space key => not a dropdown command
      //  - If key is other than escape
      //    - If key is not up or down => not a dropdown command
      //    - If trigger inside the menu => not a dropdown command
      if (/input|textarea/i.test(event.target.tagName) ? event.which === SPACE_KEYCODE || event.which !== ESCAPE_KEYCODE && (event.which !== ARROW_DOWN_KEYCODE && event.which !== ARROW_UP_KEYCODE || $(event.target).closest(Selector.MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {
        return;
      }

      event.preventDefault();
      event.stopPropagation();

      if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {
        return;
      }

      var parent = Dropdown._getParentFromElement(this);

      var isActive = $(parent).hasClass(ClassName.SHOW);

      if (!isActive && (event.which !== ESCAPE_KEYCODE || event.which !== SPACE_KEYCODE) || isActive && (event.which === ESCAPE_KEYCODE || event.which === SPACE_KEYCODE)) {
        if (event.which === ESCAPE_KEYCODE) {
          var toggle = $(parent).find(Selector.DATA_TOGGLE)[0];
          $(toggle).trigger('focus');
        }

        $(this).trigger('click');
        return;
      }

      var items = $(parent).find(Selector.VISIBLE_ITEMS).get();

      if (items.length === 0) {
        return;
      }

      var index = items.indexOf(event.target);

      if (event.which === ARROW_UP_KEYCODE && index > 0) {
        // Up
        index--;
      }

      if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {
        // Down
        index++;
      }

      if (index < 0) {
        index = 0;
      }

      items[index].focus();
    };

    _createClass(Dropdown, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return DefaultType;
      }
    }]);

    return Dropdown;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(document).on(Event.KEYDOWN_DATA_API, Selector.DATA_TOGGLE, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.MENU, Dropdown._dataApiKeydownHandler).on(Event.CLICK_DATA_API + " " + Event.KEYUP_DATA_API, Dropdown._clearMenus).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {
    event.preventDefault();
    event.stopPropagation();

    Dropdown._jQueryInterface.call($(this), 'toggle');
  }).on(Event.CLICK_DATA_API, Selector.FORM_CHILD, function (e) {
    e.stopPropagation();
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Dropdown._jQueryInterface;
  $.fn[NAME].Constructor = Dropdown;

  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Dropdown._jQueryInterface;
  };

  return Dropdown;
}($, Popper);
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.1.1): modal.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Modal = function ($) {
  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */
  var NAME = 'modal';
  var VERSION = '4.1.1';
  var DATA_KEY = 'bs.modal';
  var EVENT_KEY = "." + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key

  var Default = {
    backdrop: true,
    keyboard: true,
    focus: true,
    show: true
  };
  var DefaultType = {
    backdrop: '(boolean|string)',
    keyboard: 'boolean',
    focus: 'boolean',
    show: 'boolean'
  };
  var Event = {
    HIDE: "hide" + EVENT_KEY,
    HIDDEN: "hidden" + EVENT_KEY,
    SHOW: "show" + EVENT_KEY,
    SHOWN: "shown" + EVENT_KEY,
    FOCUSIN: "focusin" + EVENT_KEY,
    RESIZE: "resize" + EVENT_KEY,
    CLICK_DISMISS: "click.dismiss" + EVENT_KEY,
    KEYDOWN_DISMISS: "keydown.dismiss" + EVENT_KEY,
    MOUSEUP_DISMISS: "mouseup.dismiss" + EVENT_KEY,
    MOUSEDOWN_DISMISS: "mousedown.dismiss" + EVENT_KEY,
    CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY
  };
  var ClassName = {
    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',
    BACKDROP: 'modal-backdrop',
    OPEN: 'modal-open',
    FADE: 'fade',
    SHOW: 'show'
  };
  var Selector = {
    DIALOG: '.modal-dialog',
    DATA_TOGGLE: '[data-toggle="modal"]',
    DATA_DISMISS: '[data-dismiss="modal"]',
    FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',
    STICKY_CONTENT: '.sticky-top',
    NAVBAR_TOGGLER: '.navbar-toggler'
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */

  };

  var Modal =
  /*#__PURE__*/
  function () {
    function Modal(element, config) {
      this._config = this._getConfig(config);
      this._element = element;
      this._dialog = $(element).find(Selector.DIALOG)[0];
      this._backdrop = null;
      this._isShown = false;
      this._isBodyOverflowing = false;
      this._ignoreBackdropClick = false;
      this._scrollbarWidth = 0;
    } // Getters


    var _proto = Modal.prototype;

    // Public
    _proto.toggle = function toggle(relatedTarget) {
      return this._isShown ? this.hide() : this.show(relatedTarget);
    };

    _proto.show = function show(relatedTarget) {
      var _this = this;

      if (this._isTransitioning || this._isShown) {
        return;
      }

      if ($(this._element).hasClass(ClassName.FADE)) {
        this._isTransitioning = true;
      }

      var showEvent = $.Event(Event.SHOW, {
        relatedTarget: relatedTarget
      });
      $(this._element).trigger(showEvent);

      if (this._isShown || showEvent.isDefaultPrevented()) {
        return;
      }

      this._isShown = true;

      this._checkScrollbar();

      this._setScrollbar();

      this._adjustDialog();

      $(document.body).addClass(ClassName.OPEN);

      this._setEscapeEvent();

      this._setResizeEvent();

      $(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, function (event) {
        return _this.hide(event);
      });
      $(this._dialog).on(Event.MOUSEDOWN_DISMISS, function () {
        $(_this._element).one(Event.MOUSEUP_DISMISS, function (event) {
          if ($(event.target).is(_this._element)) {
            _this._ignoreBackdropClick = true;
          }
        });
      });

      this._showBackdrop(function () {
        return _this._showElement(relatedTarget);
      });
    };

    _proto.hide = function hide(event) {
      var _this2 = this;

      if (event) {
        event.preventDefault();
      }

      if (this._isTransitioning || !this._isShown) {
        return;
      }

      var hideEvent = $.Event(Event.HIDE);
      $(this._element).trigger(hideEvent);

      if (!this._isShown || hideEvent.isDefaultPrevented()) {
        return;
      }

      this._isShown = false;
      var transition = $(this._element).hasClass(ClassName.FADE);

      if (transition) {
        this._isTransitioning = true;
      }

      this._setEscapeEvent();

      this._setResizeEvent();

      $(document).off(Event.FOCUSIN);
      $(this._element).removeClass(ClassName.SHOW);
      $(this._element).off(Event.CLICK_DISMISS);
      $(this._dialog).off(Event.MOUSEDOWN_DISMISS);

      if (transition) {
        var transitionDuration = Util.getTransitionDurationFromElement(this._element);
        $(this._element).one(Util.TRANSITION_END, function (event) {
          return _this2._hideModal(event);
        }).emulateTransitionEnd(transitionDuration);
      } else {
        this._hideModal();
      }
    };

    _proto.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY);
      $(window, document, this._element, this._backdrop).off(EVENT_KEY);
      this._config = null;
      this._element = null;
      this._dialog = null;
      this._backdrop = null;
      this._isShown = null;
      this._isBodyOverflowing = null;
      this._ignoreBackdropClick = null;
      this._scrollbarWidth = null;
    };

    _proto.handleUpdate = function handleUpdate() {
      this._adjustDialog();
    }; // Private


    _proto._getConfig = function _getConfig(config) {
      config = _objectSpread({}, Default, config);
      Util.typeCheckConfig(NAME, config, DefaultType);
      return config;
    };

    _proto._showElement = function _showElement(relatedTarget) {
      var _this3 = this;

      var transition = $(this._element).hasClass(ClassName.FADE);

      if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {
        // Don't move modal's DOM position
        document.body.appendChild(this._element);
      }

      this._element.style.display = 'block';

      this._element.removeAttribute('aria-hidden');

      this._element.scrollTop = 0;

      if (transition) {
        Util.reflow(this._element);
      }

      $(this._element).addClass(ClassName.SHOW);

      if (this._config.focus) {
        this._enforceFocus();
      }

      var shownEvent = $.Event(Event.SHOWN, {
        relatedTarget: relatedTarget
      });

      var transitionComplete = function transitionComplete() {
        if (_this3._config.focus) {
          _this3._element.focus();
        }

        _this3._isTransitioning = false;
        $(_this3._element).trigger(shownEvent);
      };

      if (transition) {
        var transitionDuration = Util.getTransitionDurationFromElement(this._element);
        $(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(transitionDuration);
      } else {
        transitionComplete();
      }
    };

    _proto._enforceFocus = function _enforceFocus() {
      var _this4 = this;

      $(document).off(Event.FOCUSIN) // Guard against infinite focus loop
      .on(Event.FOCUSIN, function (event) {
        if (document !== event.target && _this4._element !== event.target && $(_this4._element).has(event.target).length === 0) {
          _this4._element.focus();
        }
      });
    };

    _proto._setEscapeEvent = function _setEscapeEvent() {
      var _this5 = this;

      if (this._isShown && this._config.keyboard) {
        $(this._element).on(Event.KEYDOWN_DISMISS, function (event) {
          if (event.which === ESCAPE_KEYCODE) {
            event.preventDefault();

            _this5.hide();
          }
        });
      } else if (!this._isShown) {
        $(this._element).off(Event.KEYDOWN_DISMISS);
      }
    };

    _proto._setResizeEvent = function _setResizeEvent() {
      var _this6 = this;

      if (this._isShown) {
        $(window).on(Event.RESIZE, function (event) {
          return _this6.handleUpdate(event);
        });
      } else {
        $(window).off(Event.RESIZE);
      }
    };

    _proto._hideModal = function _hideModal() {
      var _this7 = this;

      this._element.style.display = 'none';

      this._element.setAttribute('aria-hidden', true);

      this._isTransitioning = false;

      this._showBackdrop(function () {
        $(document.body).removeClass(ClassName.OPEN);

        _this7._resetAdjustments();

        _this7._resetScrollbar();

        $(_this7._element).trigger(Event.HIDDEN);
      });
    };

    _proto._removeBackdrop = function _removeBackdrop() {
      if (this._backdrop) {
        $(this._backdrop).remove();
        this._backdrop = null;
      }
    };

    _proto._showBackdrop = function _showBackdrop(callback) {
      var _this8 = this;

      var animate = $(this._element).hasClass(ClassName.FADE) ? ClassName.FADE : '';

      if (this._isShown && this._config.backdrop) {
        this._backdrop = document.createElement('div');
        this._backdrop.className = ClassName.BACKDROP;

        if (animate) {
          $(this._backdrop).addClass(animate);
        }

        $(this._backdrop).appendTo(document.body);
        $(this._element).on(Event.CLICK_DISMISS, function (event) {
          if (_this8._ignoreBackdropClick) {
            _this8._ignoreBackdropClick = false;
            return;
          }

          if (event.target !== event.currentTarget) {
            return;
          }

          if (_this8._config.backdrop === 'static') {
            _this8._element.focus();
          } else {
            _this8.hide();
          }
        });

        if (animate) {
          Util.reflow(this._backdrop);
        }

        $(this._backdrop).addClass(ClassName.SHOW);

        if (!callback) {
          return;
        }

        if (!animate) {
          callback();
          return;
        }

        var backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);
        $(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(backdropTransitionDuration);
      } else if (!this._isShown && this._backdrop) {
        $(this._backdrop).removeClass(ClassName.SHOW);

        var callbackRemove = function callbackRemove() {
          _this8._removeBackdrop();

          if (callback) {
            callback();
          }
        };

        if ($(this._element).hasClass(ClassName.FADE)) {
          var _backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);

          $(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(_backdropTransitionDuration);
        } else {
          callbackRemove();
        }
      } else if (callback) {
        callback();
      }
    }; // ----------------------------------------------------------------------
    // the following methods are used to handle overflowing modals
    // todo (fat): these should probably be refactored out of modal.js
    // ----------------------------------------------------------------------


    _proto._adjustDialog = function _adjustDialog() {
      var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;

      if (!this._isBodyOverflowing && isModalOverflowing) {
        this._element.style.paddingLeft = this._scrollbarWidth + "px";
      }

      if (this._isBodyOverflowing && !isModalOverflowing) {
        this._element.style.paddingRight = this._scrollbarWidth + "px";
      }
    };

    _proto._resetAdjustments = function _resetAdjustments() {
      this._element.style.paddingLeft = '';
      this._element.style.paddingRight = '';
    };

    _proto._checkScrollbar = function _checkScrollbar() {
      var rect = document.body.getBoundingClientRect();
      this._isBodyOverflowing = rect.left + rect.right < window.innerWidth;
      this._scrollbarWidth = this._getScrollbarWidth();
    };

    _proto._setScrollbar = function _setScrollbar() {
      var _this9 = this;

      if (this._isBodyOverflowing) {
        // Note: DOMNode.style.paddingRight returns the actual value or '' if not set
        //   while $(DOMNode).css('padding-right') returns the calculated value or 0 if not set
        // Adjust fixed content padding
        $(Selector.FIXED_CONTENT).each(function (index, element) {
          var actualPadding = $(element)[0].style.paddingRight;
          var calculatedPadding = $(element).css('padding-right');
          $(element).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + _this9._scrollbarWidth + "px");
        }); // Adjust sticky content margin

        $(Selector.STICKY_CONTENT).each(function (index, element) {
          var actualMargin = $(element)[0].style.marginRight;
          var calculatedMargin = $(element).css('margin-right');
          $(element).data('margin-right', actualMargin).css('margin-right', parseFloat(calculatedMargin) - _this9._scrollbarWidth + "px");
        }); // Adjust navbar-toggler margin

        $(Selector.NAVBAR_TOGGLER).each(function (index, element) {
          var actualMargin = $(element)[0].style.marginRight;
          var calculatedMargin = $(element).css('margin-right');
          $(element).data('margin-right', actualMargin).css('margin-right', parseFloat(calculatedMargin) + _this9._scrollbarWidth + "px");
        }); // Adjust body padding

        var actualPadding = document.body.style.paddingRight;
        var calculatedPadding = $(document.body).css('padding-right');
        $(document.body).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + this._scrollbarWidth + "px");
      }
    };

    _proto._resetScrollbar = function _resetScrollbar() {
      // Restore fixed content padding
      $(Selector.FIXED_CONTENT).each(function (index, element) {
        var padding = $(element).data('padding-right');

        if (typeof padding !== 'undefined') {
          $(element).css('padding-right', padding).removeData('padding-right');
        }
      }); // Restore sticky content and navbar-toggler margin

      $(Selector.STICKY_CONTENT + ", " + Selector.NAVBAR_TOGGLER).each(function (index, element) {
        var margin = $(element).data('margin-right');

        if (typeof margin !== 'undefined') {
          $(element).css('margin-right', margin).removeData('margin-right');
        }
      }); // Restore body padding

      var padding = $(document.body).data('padding-right');

      if (typeof padding !== 'undefined') {
        $(document.body).css('padding-right', padding).removeData('padding-right');
      }
    };

    _proto._getScrollbarWidth = function _getScrollbarWidth() {
      // thx d.walsh
      var scrollDiv = document.createElement('div');
      scrollDiv.className = ClassName.SCROLLBAR_MEASURER;
      document.body.appendChild(scrollDiv);
      var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;
      document.body.removeChild(scrollDiv);
      return scrollbarWidth;
    }; // Static


    Modal._jQueryInterface = function _jQueryInterface(config, relatedTarget) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY);

        var _config = _objectSpread({}, Default, $(this).data(), typeof config === 'object' && config ? config : {});

        if (!data) {
          data = new Modal(this, _config);
          $(this).data(DATA_KEY, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config](relatedTarget);
        } else if (_config.show) {
          data.show(relatedTarget);
        }
      });
    };

    _createClass(Modal, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default;
      }
    }]);

    return Modal;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {
    var _this10 = this;

    var target;
    var selector = Util.getSelectorFromElement(this);

    if (selector) {
      target = $(selector)[0];
    }

    var config = $(target).data(DATA_KEY) ? 'toggle' : _objectSpread({}, $(target).data(), $(this).data());

    if (this.tagName === 'A' || this.tagName === 'AREA') {
      event.preventDefault();
    }

    var $target = $(target).one(Event.SHOW, function (showEvent) {
      if (showEvent.isDefaultPrevented()) {
        // Only register focus restorer if modal will actually get shown
        return;
      }

      $target.one(Event.HIDDEN, function () {
        if ($(_this10).is(':visible')) {
          _this10.focus();
        }
      });
    });

    Modal._jQueryInterface.call($(target), config, this);
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Modal._jQueryInterface;
  $.fn[NAME].Constructor = Modal;

  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Modal._jQueryInterface;
  };

  return Modal;
}($);
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.1.1): scrollspy.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var ScrollSpy = function ($) {
  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */
  var NAME = 'scrollspy';
  var VERSION = '4.1.1';
  var DATA_KEY = 'bs.scrollspy';
  var EVENT_KEY = "." + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var Default = {
    offset: 10,
    method: 'auto',
    target: ''
  };
  var DefaultType = {
    offset: 'number',
    method: 'string',
    target: '(string|element)'
  };
  var Event = {
    ACTIVATE: "activate" + EVENT_KEY,
    SCROLL: "scroll" + EVENT_KEY,
    LOAD_DATA_API: "load" + EVENT_KEY + DATA_API_KEY
  };
  var ClassName = {
    DROPDOWN_ITEM: 'dropdown-item',
    DROPDOWN_MENU: 'dropdown-menu',
    ACTIVE: 'active'
  };
  var Selector = {
    DATA_SPY: '[data-spy="scroll"]',
    ACTIVE: '.active',
    NAV_LIST_GROUP: '.nav, .list-group',
    NAV_LINKS: '.nav-link',
    NAV_ITEMS: '.nav-item',
    LIST_ITEMS: '.list-group-item',
    DROPDOWN: '.dropdown',
    DROPDOWN_ITEMS: '.dropdown-item',
    DROPDOWN_TOGGLE: '.dropdown-toggle'
  };
  var OffsetMethod = {
    OFFSET: 'offset',
    POSITION: 'position'
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */

  };

  var ScrollSpy =
  /*#__PURE__*/
  function () {
    function ScrollSpy(element, config) {
      var _this = this;

      this._element = element;
      this._scrollElement = element.tagName === 'BODY' ? window : element;
      this._config = this._getConfig(config);
      this._selector = this._config.target + " " + Selector.NAV_LINKS + "," + (this._config.target + " " + Selector.LIST_ITEMS + ",") + (this._config.target + " " + Selector.DROPDOWN_ITEMS);
      this._offsets = [];
      this._targets = [];
      this._activeTarget = null;
      this._scrollHeight = 0;
      $(this._scrollElement).on(Event.SCROLL, function (event) {
        return _this._process(event);
      });
      this.refresh();

      this._process();
    } // Getters


    var _proto = ScrollSpy.prototype;

    // Public
    _proto.refresh = function refresh() {
      var _this2 = this;

      var autoMethod = this._scrollElement === this._scrollElement.window ? OffsetMethod.OFFSET : OffsetMethod.POSITION;
      var offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;
      var offsetBase = offsetMethod === OffsetMethod.POSITION ? this._getScrollTop() : 0;
      this._offsets = [];
      this._targets = [];
      this._scrollHeight = this._getScrollHeight();
      var targets = $.makeArray($(this._selector));
      targets.map(function (element) {
        var target;
        var targetSelector = Util.getSelectorFromElement(element);

        if (targetSelector) {
          target = $(targetSelector)[0];
        }

        if (target) {
          var targetBCR = target.getBoundingClientRect();

          if (targetBCR.width || targetBCR.height) {
            // TODO (fat): remove sketch reliance on jQuery position/offset
            return [$(target)[offsetMethod]().top + offsetBase, targetSelector];
          }
        }

        return null;
      }).filter(function (item) {
        return item;
      }).sort(function (a, b) {
        return a[0] - b[0];
      }).forEach(function (item) {
        _this2._offsets.push(item[0]);

        _this2._targets.push(item[1]);
      });
    };

    _proto.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY);
      $(this._scrollElement).off(EVENT_KEY);
      this._element = null;
      this._scrollElement = null;
      this._config = null;
      this._selector = null;
      this._offsets = null;
      this._targets = null;
      this._activeTarget = null;
      this._scrollHeight = null;
    }; // Private


    _proto._getConfig = function _getConfig(config) {
      config = _objectSpread({}, Default, typeof config === 'object' && config ? config : {});

      if (typeof config.target !== 'string') {
        var id = $(config.target).attr('id');

        if (!id) {
          id = Util.getUID(NAME);
          $(config.target).attr('id', id);
        }

        config.target = "#" + id;
      }

      Util.typeCheckConfig(NAME, config, DefaultType);
      return config;
    };

    _proto._getScrollTop = function _getScrollTop() {
      return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
    };

    _proto._getScrollHeight = function _getScrollHeight() {
      return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
    };

    _proto._getOffsetHeight = function _getOffsetHeight() {
      return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
    };

    _proto._process = function _process() {
      var scrollTop = this._getScrollTop() + this._config.offset;

      var scrollHeight = this._getScrollHeight();

      var maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();

      if (this._scrollHeight !== scrollHeight) {
        this.refresh();
      }

      if (scrollTop >= maxScroll) {
        var target = this._targets[this._targets.length - 1];

        if (this._activeTarget !== target) {
          this._activate(target);
        }

        return;
      }

      if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {
        this._activeTarget = null;

        this._clear();

        return;
      }

      for (var i = this._offsets.length; i--;) {
        var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (typeof this._offsets[i + 1] === 'undefined' || scrollTop < this._offsets[i + 1]);

        if (isActiveTarget) {
          this._activate(this._targets[i]);
        }
      }
    };

    _proto._activate = function _activate(target) {
      this._activeTarget = target;

      this._clear();

      var queries = this._selector.split(','); // eslint-disable-next-line arrow-body-style


      queries = queries.map(function (selector) {
        return selector + "[data-target=\"" + target + "\"]," + (selector + "[href=\"" + target + "\"]");
      });
      var $link = $(queries.join(','));

      if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {
        $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);
        $link.addClass(ClassName.ACTIVE);
      } else {
        // Set triggered link as active
        $link.addClass(ClassName.ACTIVE); // Set triggered links parents as active
        // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor

        $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_LINKS + ", " + Selector.LIST_ITEMS).addClass(ClassName.ACTIVE); // Handle special case when .nav-link is inside .nav-item

        $link.parents(Selector.NAV_LIST_GROUP).prev(Selector.NAV_ITEMS).children(Selector.NAV_LINKS).addClass(ClassName.ACTIVE);
      }

      $(this._scrollElement).trigger(Event.ACTIVATE, {
        relatedTarget: target
      });
    };

    _proto._clear = function _clear() {
      $(this._selector).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE);
    }; // Static


    ScrollSpy._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY);

        var _config = typeof config === 'object' && config;

        if (!data) {
          data = new ScrollSpy(this, _config);
          $(this).data(DATA_KEY, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(ScrollSpy, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default;
      }
    }]);

    return ScrollSpy;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(window).on(Event.LOAD_DATA_API, function () {
    var scrollSpys = $.makeArray($(Selector.DATA_SPY));

    for (var i = scrollSpys.length; i--;) {
      var $spy = $(scrollSpys[i]);

      ScrollSpy._jQueryInterface.call($spy, $spy.data());
    }
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = ScrollSpy._jQueryInterface;
  $.fn[NAME].Constructor = ScrollSpy;

  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return ScrollSpy._jQueryInterface;
  };

  return ScrollSpy;
}($);
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.1.1): tab.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Tab = function ($) {
  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */
  var NAME = 'tab';
  var VERSION = '4.1.1';
  var DATA_KEY = 'bs.tab';
  var EVENT_KEY = "." + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var Event = {
    HIDE: "hide" + EVENT_KEY,
    HIDDEN: "hidden" + EVENT_KEY,
    SHOW: "show" + EVENT_KEY,
    SHOWN: "shown" + EVENT_KEY,
    CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY
  };
  var ClassName = {
    DROPDOWN_MENU: 'dropdown-menu',
    ACTIVE: 'active',
    DISABLED: 'disabled',
    FADE: 'fade',
    SHOW: 'show'
  };
  var Selector = {
    DROPDOWN: '.dropdown',
    NAV_LIST_GROUP: '.nav, .list-group',
    ACTIVE: '.active',
    ACTIVE_UL: '> li > .active',
    DATA_TOGGLE: '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]',
    DROPDOWN_TOGGLE: '.dropdown-toggle',
    DROPDOWN_ACTIVE_CHILD: '> .dropdown-menu .active'
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */

  };

  var Tab =
  /*#__PURE__*/
  function () {
    function Tab(element) {
      this._element = element;
    } // Getters


    var _proto = Tab.prototype;

    // Public
    _proto.show = function show() {
      var _this = this;

      if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $(this._element).hasClass(ClassName.ACTIVE) || $(this._element).hasClass(ClassName.DISABLED)) {
        return;
      }

      var target;
      var previous;
      var listElement = $(this._element).closest(Selector.NAV_LIST_GROUP)[0];
      var selector = Util.getSelectorFromElement(this._element);

      if (listElement) {
        var itemSelector = listElement.nodeName === 'UL' ? Selector.ACTIVE_UL : Selector.ACTIVE;
        previous = $.makeArray($(listElement).find(itemSelector));
        previous = previous[previous.length - 1];
      }

      var hideEvent = $.Event(Event.HIDE, {
        relatedTarget: this._element
      });
      var showEvent = $.Event(Event.SHOW, {
        relatedTarget: previous
      });

      if (previous) {
        $(previous).trigger(hideEvent);
      }

      $(this._element).trigger(showEvent);

      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {
        return;
      }

      if (selector) {
        target = $(selector)[0];
      }

      this._activate(this._element, listElement);

      var complete = function complete() {
        var hiddenEvent = $.Event(Event.HIDDEN, {
          relatedTarget: _this._element
        });
        var shownEvent = $.Event(Event.SHOWN, {
          relatedTarget: previous
        });
        $(previous).trigger(hiddenEvent);
        $(_this._element).trigger(shownEvent);
      };

      if (target) {
        this._activate(target, target.parentNode, complete);
      } else {
        complete();
      }
    };

    _proto.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY);
      this._element = null;
    }; // Private


    _proto._activate = function _activate(element, container, callback) {
      var _this2 = this;

      var activeElements;

      if (container.nodeName === 'UL') {
        activeElements = $(container).find(Selector.ACTIVE_UL);
      } else {
        activeElements = $(container).children(Selector.ACTIVE);
      }

      var active = activeElements[0];
      var isTransitioning = callback && active && $(active).hasClass(ClassName.FADE);

      var complete = function complete() {
        return _this2._transitionComplete(element, active, callback);
      };

      if (active && isTransitioning) {
        var transitionDuration = Util.getTransitionDurationFromElement(active);
        $(active).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      } else {
        complete();
      }
    };

    _proto._transitionComplete = function _transitionComplete(element, active, callback) {
      if (active) {
        $(active).removeClass(ClassName.SHOW + " " + ClassName.ACTIVE);
        var dropdownChild = $(active.parentNode).find(Selector.DROPDOWN_ACTIVE_CHILD)[0];

        if (dropdownChild) {
          $(dropdownChild).removeClass(ClassName.ACTIVE);
        }

        if (active.getAttribute('role') === 'tab') {
          active.setAttribute('aria-selected', false);
        }
      }

      $(element).addClass(ClassName.ACTIVE);

      if (element.getAttribute('role') === 'tab') {
        element.setAttribute('aria-selected', true);
      }

      Util.reflow(element);
      $(element).addClass(ClassName.SHOW);

      if (element.parentNode && $(element.parentNode).hasClass(ClassName.DROPDOWN_MENU)) {
        var dropdownElement = $(element).closest(Selector.DROPDOWN)[0];

        if (dropdownElement) {
          $(dropdownElement).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);
        }

        element.setAttribute('aria-expanded', true);
      }

      if (callback) {
        callback();
      }
    }; // Static


    Tab._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $this = $(this);
        var data = $this.data(DATA_KEY);

        if (!data) {
          data = new Tab(this);
          $this.data(DATA_KEY, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Tab, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION;
      }
    }]);

    return Tab;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {
    event.preventDefault();

    Tab._jQueryInterface.call($(this), 'show');
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Tab._jQueryInterface;
  $.fn[NAME].Constructor = Tab;

  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Tab._jQueryInterface;
  };

  return Tab;
}($);
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.1.1): tooltip.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Tooltip = function ($) {
  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */
  var NAME = 'tooltip';
  var VERSION = '4.1.1';
  var DATA_KEY = 'bs.tooltip';
  var EVENT_KEY = "." + DATA_KEY;
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var CLASS_PREFIX = 'bs-tooltip';
  var BSCLS_PREFIX_REGEX = new RegExp("(^|\\s)" + CLASS_PREFIX + "\\S+", 'g');
  var DefaultType = {
    animation: 'boolean',
    template: 'string',
    title: '(string|element|function)',
    trigger: 'string',
    delay: '(number|object)',
    html: 'boolean',
    selector: '(string|boolean)',
    placement: '(string|function)',
    offset: '(number|string)',
    container: '(string|element|boolean)',
    fallbackPlacement: '(string|array)',
    boundary: '(string|element)'
  };
  var AttachmentMap = {
    AUTO: 'auto',
    TOP: 'top',
    RIGHT: 'right',
    BOTTOM: 'bottom',
    LEFT: 'left'
  };
  var Default = {
    animation: true,
    template: '<div class="tooltip" role="tooltip">' + '<div class="arrow"></div>' + '<div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    selector: false,
    placement: 'top',
    offset: 0,
    container: false,
    fallbackPlacement: 'flip',
    boundary: 'scrollParent'
  };
  var HoverState = {
    SHOW: 'show',
    OUT: 'out'
  };
  var Event = {
    HIDE: "hide" + EVENT_KEY,
    HIDDEN: "hidden" + EVENT_KEY,
    SHOW: "show" + EVENT_KEY,
    SHOWN: "shown" + EVENT_KEY,
    INSERTED: "inserted" + EVENT_KEY,
    CLICK: "click" + EVENT_KEY,
    FOCUSIN: "focusin" + EVENT_KEY,
    FOCUSOUT: "focusout" + EVENT_KEY,
    MOUSEENTER: "mouseenter" + EVENT_KEY,
    MOUSELEAVE: "mouseleave" + EVENT_KEY
  };
  var ClassName = {
    FADE: 'fade',
    SHOW: 'show'
  };
  var Selector = {
    TOOLTIP: '.tooltip',
    TOOLTIP_INNER: '.tooltip-inner',
    ARROW: '.arrow'
  };
  var Trigger = {
    HOVER: 'hover',
    FOCUS: 'focus',
    CLICK: 'click',
    MANUAL: 'manual'
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */

  };

  var Tooltip =
  /*#__PURE__*/
  function () {
    function Tooltip(element, config) {
      /**
       * Check for Popper dependency
       * Popper - https://popper.js.org
       */
      if (typeof Popper === 'undefined') {
        throw new TypeError('Bootstrap tooltips require Popper.js (https://popper.js.org)');
      } // private


      this._isEnabled = true;
      this._timeout = 0;
      this._hoverState = '';
      this._activeTrigger = {};
      this._popper = null; // Protected

      this.element = element;
      this.config = this._getConfig(config);
      this.tip = null;

      this._setListeners();
    } // Getters


    var _proto = Tooltip.prototype;

    // Public
    _proto.enable = function enable() {
      this._isEnabled = true;
    };

    _proto.disable = function disable() {
      this._isEnabled = false;
    };

    _proto.toggleEnabled = function toggleEnabled() {
      this._isEnabled = !this._isEnabled;
    };

    _proto.toggle = function toggle(event) {
      if (!this._isEnabled) {
        return;
      }

      if (event) {
        var dataKey = this.constructor.DATA_KEY;
        var context = $(event.currentTarget).data(dataKey);

        if (!context) {
          context = new this.constructor(event.currentTarget, this._getDelegateConfig());
          $(event.currentTarget).data(dataKey, context);
        }

        context._activeTrigger.click = !context._activeTrigger.click;

        if (context._isWithActiveTrigger()) {
          context._enter(null, context);
        } else {
          context._leave(null, context);
        }
      } else {
        if ($(this.getTipElement()).hasClass(ClassName.SHOW)) {
          this._leave(null, this);

          return;
        }

        this._enter(null, this);
      }
    };

    _proto.dispose = function dispose() {
      clearTimeout(this._timeout);
      $.removeData(this.element, this.constructor.DATA_KEY);
      $(this.element).off(this.constructor.EVENT_KEY);
      $(this.element).closest('.modal').off('hide.bs.modal');

      if (this.tip) {
        $(this.tip).remove();
      }

      this._isEnabled = null;
      this._timeout = null;
      this._hoverState = null;
      this._activeTrigger = null;

      if (this._popper !== null) {
        this._popper.destroy();
      }

      this._popper = null;
      this.element = null;
      this.config = null;
      this.tip = null;
    };

    _proto.show = function show() {
      var _this = this;

      if ($(this.element).css('display') === 'none') {
        throw new Error('Please use show on visible elements');
      }

      var showEvent = $.Event(this.constructor.Event.SHOW);

      if (this.isWithContent() && this._isEnabled) {
        $(this.element).trigger(showEvent);
        var isInTheDom = $.contains(this.element.ownerDocument.documentElement, this.element);

        if (showEvent.isDefaultPrevented() || !isInTheDom) {
          return;
        }

        var tip = this.getTipElement();
        var tipId = Util.getUID(this.constructor.NAME);
        tip.setAttribute('id', tipId);
        this.element.setAttribute('aria-describedby', tipId);
        this.setContent();

        if (this.config.animation) {
          $(tip).addClass(ClassName.FADE);
        }

        var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;

        var attachment = this._getAttachment(placement);

        this.addAttachmentClass(attachment);
        var container = this.config.container === false ? document.body : $(this.config.container);
        $(tip).data(this.constructor.DATA_KEY, this);

        if (!$.contains(this.element.ownerDocument.documentElement, this.tip)) {
          $(tip).appendTo(container);
        }

        $(this.element).trigger(this.constructor.Event.INSERTED);
        this._popper = new Popper(this.element, tip, {
          placement: attachment,
          modifiers: {
            offset: {
              offset: this.config.offset
            },
            flip: {
              behavior: this.config.fallbackPlacement
            },
            arrow: {
              element: Selector.ARROW
            },
            preventOverflow: {
              boundariesElement: this.config.boundary
            }
          },
          onCreate: function onCreate(data) {
            if (data.originalPlacement !== data.placement) {
              _this._handlePopperPlacementChange(data);
            }
          },
          onUpdate: function onUpdate(data) {
            _this._handlePopperPlacementChange(data);
          }
        });
        $(tip).addClass(ClassName.SHOW); // If this is a touch-enabled device we add extra
        // empty mouseover listeners to the body's immediate children;
        // only needed because of broken event delegation on iOS
        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html

        if ('ontouchstart' in document.documentElement) {
          $(document.body).children().on('mouseover', null, $.noop);
        }

        var complete = function complete() {
          if (_this.config.animation) {
            _this._fixTransition();
          }

          var prevHoverState = _this._hoverState;
          _this._hoverState = null;
          $(_this.element).trigger(_this.constructor.Event.SHOWN);

          if (prevHoverState === HoverState.OUT) {
            _this._leave(null, _this);
          }
        };

        if ($(this.tip).hasClass(ClassName.FADE)) {
          var transitionDuration = Util.getTransitionDurationFromElement(this.tip);
          $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
        } else {
          complete();
        }
      }
    };

    _proto.hide = function hide(callback) {
      var _this2 = this;

      var tip = this.getTipElement();
      var hideEvent = $.Event(this.constructor.Event.HIDE);

      var complete = function complete() {
        if (_this2._hoverState !== HoverState.SHOW && tip.parentNode) {
          tip.parentNode.removeChild(tip);
        }

        _this2._cleanTipClass();

        _this2.element.removeAttribute('aria-describedby');

        $(_this2.element).trigger(_this2.constructor.Event.HIDDEN);

        if (_this2._popper !== null) {
          _this2._popper.destroy();
        }

        if (callback) {
          callback();
        }
      };

      $(this.element).trigger(hideEvent);

      if (hideEvent.isDefaultPrevented()) {
        return;
      }

      $(tip).removeClass(ClassName.SHOW); // If this is a touch-enabled device we remove the extra
      // empty mouseover listeners we added for iOS support

      if ('ontouchstart' in document.documentElement) {
        $(document.body).children().off('mouseover', null, $.noop);
      }

      this._activeTrigger[Trigger.CLICK] = false;
      this._activeTrigger[Trigger.FOCUS] = false;
      this._activeTrigger[Trigger.HOVER] = false;

      if ($(this.tip).hasClass(ClassName.FADE)) {
        var transitionDuration = Util.getTransitionDurationFromElement(tip);
        $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      } else {
        complete();
      }

      this._hoverState = '';
    };

    _proto.update = function update() {
      if (this._popper !== null) {
        this._popper.scheduleUpdate();
      }
    }; // Protected


    _proto.isWithContent = function isWithContent() {
      return Boolean(this.getTitle());
    };

    _proto.addAttachmentClass = function addAttachmentClass(attachment) {
      $(this.getTipElement()).addClass(CLASS_PREFIX + "-" + attachment);
    };

    _proto.getTipElement = function getTipElement() {
      this.tip = this.tip || $(this.config.template)[0];
      return this.tip;
    };

    _proto.setContent = function setContent() {
      var $tip = $(this.getTipElement());
      this.setElementContent($tip.find(Selector.TOOLTIP_INNER), this.getTitle());
      $tip.removeClass(ClassName.FADE + " " + ClassName.SHOW);
    };

    _proto.setElementContent = function setElementContent($element, content) {
      var html = this.config.html;

      if (typeof content === 'object' && (content.nodeType || content.jquery)) {
        // Content is a DOM node or a jQuery
        if (html) {
          if (!$(content).parent().is($element)) {
            $element.empty().append(content);
          }
        } else {
          $element.text($(content).text());
        }
      } else {
        $element[html ? 'html' : 'text'](content);
      }
    };

    _proto.getTitle = function getTitle() {
      var title = this.element.getAttribute('data-original-title');

      if (!title) {
        title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;
      }

      return title;
    }; // Private


    _proto._getAttachment = function _getAttachment(placement) {
      return AttachmentMap[placement.toUpperCase()];
    };

    _proto._setListeners = function _setListeners() {
      var _this3 = this;

      var triggers = this.config.trigger.split(' ');
      triggers.forEach(function (trigger) {
        if (trigger === 'click') {
          $(_this3.element).on(_this3.constructor.Event.CLICK, _this3.config.selector, function (event) {
            return _this3.toggle(event);
          });
        } else if (trigger !== Trigger.MANUAL) {
          var eventIn = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSEENTER : _this3.constructor.Event.FOCUSIN;
          var eventOut = trigger === Trigger.HOVER ? _this3.constructor.Event.MOUSELEAVE : _this3.constructor.Event.FOCUSOUT;
          $(_this3.element).on(eventIn, _this3.config.selector, function (event) {
            return _this3._enter(event);
          }).on(eventOut, _this3.config.selector, function (event) {
            return _this3._leave(event);
          });
        }

        $(_this3.element).closest('.modal').on('hide.bs.modal', function () {
          return _this3.hide();
        });
      });

      if (this.config.selector) {
        this.config = _objectSpread({}, this.config, {
          trigger: 'manual',
          selector: ''
        });
      } else {
        this._fixTitle();
      }
    };

    _proto._fixTitle = function _fixTitle() {
      var titleType = typeof this.element.getAttribute('data-original-title');

      if (this.element.getAttribute('title') || titleType !== 'string') {
        this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');
        this.element.setAttribute('title', '');
      }
    };

    _proto._enter = function _enter(event, context) {
      var dataKey = this.constructor.DATA_KEY;
      context = context || $(event.currentTarget).data(dataKey);

      if (!context) {
        context = new this.constructor(event.currentTarget, this._getDelegateConfig());
        $(event.currentTarget).data(dataKey, context);
      }

      if (event) {
        context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;
      }

      if ($(context.getTipElement()).hasClass(ClassName.SHOW) || context._hoverState === HoverState.SHOW) {
        context._hoverState = HoverState.SHOW;
        return;
      }

      clearTimeout(context._timeout);
      context._hoverState = HoverState.SHOW;

      if (!context.config.delay || !context.config.delay.show) {
        context.show();
        return;
      }

      context._timeout = setTimeout(function () {
        if (context._hoverState === HoverState.SHOW) {
          context.show();
        }
      }, context.config.delay.show);
    };

    _proto._leave = function _leave(event, context) {
      var dataKey = this.constructor.DATA_KEY;
      context = context || $(event.currentTarget).data(dataKey);

      if (!context) {
        context = new this.constructor(event.currentTarget, this._getDelegateConfig());
        $(event.currentTarget).data(dataKey, context);
      }

      if (event) {
        context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;
      }

      if (context._isWithActiveTrigger()) {
        return;
      }

      clearTimeout(context._timeout);
      context._hoverState = HoverState.OUT;

      if (!context.config.delay || !context.config.delay.hide) {
        context.hide();
        return;
      }

      context._timeout = setTimeout(function () {
        if (context._hoverState === HoverState.OUT) {
          context.hide();
        }
      }, context.config.delay.hide);
    };

    _proto._isWithActiveTrigger = function _isWithActiveTrigger() {
      for (var trigger in this._activeTrigger) {
        if (this._activeTrigger[trigger]) {
          return true;
        }
      }

      return false;
    };

    _proto._getConfig = function _getConfig(config) {
      config = _objectSpread({}, this.constructor.Default, $(this.element).data(), typeof config === 'object' && config ? config : {});

      if (typeof config.delay === 'number') {
        config.delay = {
          show: config.delay,
          hide: config.delay
        };
      }

      if (typeof config.title === 'number') {
        config.title = config.title.toString();
      }

      if (typeof config.content === 'number') {
        config.content = config.content.toString();
      }

      Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);
      return config;
    };

    _proto._getDelegateConfig = function _getDelegateConfig() {
      var config = {};

      if (this.config) {
        for (var key in this.config) {
          if (this.constructor.Default[key] !== this.config[key]) {
            config[key] = this.config[key];
          }
        }
      }

      return config;
    };

    _proto._cleanTipClass = function _cleanTipClass() {
      var $tip = $(this.getTipElement());
      var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);

      if (tabClass !== null && tabClass.length > 0) {
        $tip.removeClass(tabClass.join(''));
      }
    };

    _proto._handlePopperPlacementChange = function _handlePopperPlacementChange(data) {
      this._cleanTipClass();

      this.addAttachmentClass(this._getAttachment(data.placement));
    };

    _proto._fixTransition = function _fixTransition() {
      var tip = this.getTipElement();
      var initConfigAnimation = this.config.animation;

      if (tip.getAttribute('x-placement') !== null) {
        return;
      }

      $(tip).removeClass(ClassName.FADE);
      this.config.animation = false;
      this.hide();
      this.show();
      this.config.animation = initConfigAnimation;
    }; // Static


    Tooltip._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY);

        var _config = typeof config === 'object' && config;

        if (!data && /dispose|hide/.test(config)) {
          return;
        }

        if (!data) {
          data = new Tooltip(this, _config);
          $(this).data(DATA_KEY, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Tooltip, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default;
      }
    }, {
      key: "NAME",
      get: function get() {
        return NAME;
      }
    }, {
      key: "DATA_KEY",
      get: function get() {
        return DATA_KEY;
      }
    }, {
      key: "Event",
      get: function get() {
        return Event;
      }
    }, {
      key: "EVENT_KEY",
      get: function get() {
        return EVENT_KEY;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return DefaultType;
      }
    }]);

    return Tooltip;
  }();
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */


  $.fn[NAME] = Tooltip._jQueryInterface;
  $.fn[NAME].Constructor = Tooltip;

  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Tooltip._jQueryInterface;
  };

  return Tooltip;
}($, Popper);
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.1.1): popover.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Popover = function ($) {
  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */
  var NAME = 'popover';
  var VERSION = '4.1.1';
  var DATA_KEY = 'bs.popover';
  var EVENT_KEY = "." + DATA_KEY;
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var CLASS_PREFIX = 'bs-popover';
  var BSCLS_PREFIX_REGEX = new RegExp("(^|\\s)" + CLASS_PREFIX + "\\S+", 'g');

  var Default = _objectSpread({}, Tooltip.Default, {
    placement: 'right',
    trigger: 'click',
    content: '',
    template: '<div class="popover" role="tooltip">' + '<div class="arrow"></div>' + '<h3 class="popover-header"></h3>' + '<div class="popover-body"></div></div>'
  });

  var DefaultType = _objectSpread({}, Tooltip.DefaultType, {
    content: '(string|element|function)'
  });

  var ClassName = {
    FADE: 'fade',
    SHOW: 'show'
  };
  var Selector = {
    TITLE: '.popover-header',
    CONTENT: '.popover-body'
  };
  var Event = {
    HIDE: "hide" + EVENT_KEY,
    HIDDEN: "hidden" + EVENT_KEY,
    SHOW: "show" + EVENT_KEY,
    SHOWN: "shown" + EVENT_KEY,
    INSERTED: "inserted" + EVENT_KEY,
    CLICK: "click" + EVENT_KEY,
    FOCUSIN: "focusin" + EVENT_KEY,
    FOCUSOUT: "focusout" + EVENT_KEY,
    MOUSEENTER: "mouseenter" + EVENT_KEY,
    MOUSELEAVE: "mouseleave" + EVENT_KEY
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */

  };

  var Popover =
  /*#__PURE__*/
  function (_Tooltip) {
    _inheritsLoose(Popover, _Tooltip);

    function Popover() {
      return _Tooltip.apply(this, arguments) || this;
    }

    var _proto = Popover.prototype;

    // Overrides
    _proto.isWithContent = function isWithContent() {
      return this.getTitle() || this._getContent();
    };

    _proto.addAttachmentClass = function addAttachmentClass(attachment) {
      $(this.getTipElement()).addClass(CLASS_PREFIX + "-" + attachment);
    };

    _proto.getTipElement = function getTipElement() {
      this.tip = this.tip || $(this.config.template)[0];
      return this.tip;
    };

    _proto.setContent = function setContent() {
      var $tip = $(this.getTipElement()); // We use append for html objects to maintain js events

      this.setElementContent($tip.find(Selector.TITLE), this.getTitle());

      var content = this._getContent();

      if (typeof content === 'function') {
        content = content.call(this.element);
      }

      this.setElementContent($tip.find(Selector.CONTENT), content);
      $tip.removeClass(ClassName.FADE + " " + ClassName.SHOW);
    }; // Private


    _proto._getContent = function _getContent() {
      return this.element.getAttribute('data-content') || this.config.content;
    };

    _proto._cleanTipClass = function _cleanTipClass() {
      var $tip = $(this.getTipElement());
      var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);

      if (tabClass !== null && tabClass.length > 0) {
        $tip.removeClass(tabClass.join(''));
      }
    }; // Static


    Popover._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $(this).data(DATA_KEY);

        var _config = typeof config === 'object' ? config : null;

        if (!data && /destroy|hide/.test(config)) {
          return;
        }

        if (!data) {
          data = new Popover(this, _config);
          $(this).data(DATA_KEY, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Popover, null, [{
      key: "VERSION",
      // Getters
      get: function get() {
        return VERSION;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default;
      }
    }, {
      key: "NAME",
      get: function get() {
        return NAME;
      }
    }, {
      key: "DATA_KEY",
      get: function get() {
        return DATA_KEY;
      }
    }, {
      key: "Event",
      get: function get() {
        return Event;
      }
    }, {
      key: "EVENT_KEY",
      get: function get() {
        return EVENT_KEY;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return DefaultType;
      }
    }]);

    return Popover;
  }(Tooltip);
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */


  $.fn[NAME] = Popover._jQueryInterface;
  $.fn[NAME].Constructor = Popover;

  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Popover._jQueryInterface;
  };

  return Popover;
}($);












(function() {

  function initBootstrap() {
    $('[data-toggle="popover"]').popover({
      container: 'body'
    });

    $('[data-toggle="tooltip"]').tooltip({
      container: 'body'
    });
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('bootstrap') && initBootstrap.call(this)
  })

})()

;
(function (){

  function getSideNavHeight() {
    var hasSideNavHeader = $('.navbar-header').length > 0
    return hasSideNavHeader ? $('.nav-side-menu').outerHeight() - $('.navbar-header').outerHeight() : $('.nav-side-menu').outerHeight()
  }

  function initSidenav() {
    var width = document.body.clientWidth;
    var sideNavTrackColor = RRT.getRootCssVariable('--sidenav-track-color');

    var sideNavContainer = $('.nav-side-container')

    $('.SideNavToggle').on('click', function() {
      $('body').toggleClass(
        'show-sidebar'
      )
    })

    if (!Modernizr.touch && width > 992) {
      sideNavContainer.slimScroll({
        height: getSideNavHeight(),
        color: sideNavTrackColor,
        size: '4px',
        opacity: 0.9,
        wheelStep: 15,
        distance: '0',
        railVisible: false,
        railOpacity: 1
      });

      sideNavContainer.mouseover();
    } else {
      sideNavContainer.slimScroll({ destroy: 'true' });

      sideNavContainer.mouseover();
    }

    $(window).on('resize', RRT.debounce(function() {
      if (Modernizr.touch) return;

      width = document.body.clientWidth;

      if (width < 992) {
        sideNavContainer.slimScroll({ destroy: 'true' });
        sideNavContainer.height('auto')

        sideNavContainer.mouseover();
      } else {
        sideNavContainer.slimScroll({ destroy: 'true' });
        sideNavContainer.slimScroll({
          height: getSideNavHeight(),
          color: sideNavTrackColor,
          size: '4px',
          opacity: 0.9,
          wheelStep: 15,
          distance: '0',
          railVisible: false,
          railOpacity: 1
        });

        sideNavContainer.mouseover();
      }
    }, 250));
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('sidenav') && initSidenav.call(this)
  })
})()

;
!function( $ ) {

  $(function () {
    
    // fix sub nav on scroll
    var $win = $(window)
      , $bar = $('header hr')
      , barTop = $('header hr').length && $('header hr').offset().top - 58
      , isFixed = 0

    function processScroll() {
      var i, scrollTop = $win.scrollTop()
      if (scrollTop >= barTop && !isFixed) {
        isFixed = 1
        $bar.addClass('bar-fixed')
      } else if (scrollTop <= barTop && isFixed) {
        isFixed = 0
        $bar.removeClass('bar-fixed')
      }
    }
    
    if (!$("header .navbar").hasClass("navbar-fixed-top")) {
      // Navbar is static, bar should be too
    } else if ($("header #featured")[0]) {
      processScroll()
      $win.on('scroll', processScroll)
    } else {
      $bar.addClass('bar-fixed')
    }

  })

}( window.jQuery )
;
(function() {
  function initForms() {
    $('.form-control').on('focus', function() {
      $(this).parent('.input-group').addClass('input-group-focus');
    }).on('blur', function() {
      $(this).parent('.input-group').removeClass('input-group-focus');
    });
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('forms') && initForms.call(this)
  })
})()
;
/* ========================================================================
 * bootstrap-switch - v3.3.2
 * http://www.bootstrap-switch.org
 * ========================================================================
 * Copyright 2012-2013 Mattia Larentis
 *
 * ========================================================================
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================================
 */


(function() {
    var slice = [].slice;

    (function($, window) {
        "use strict";
        var BootstrapSwitch;
        BootstrapSwitch = (function() {
            function BootstrapSwitch(element, options) {
                if (options == null) {
                    options = {};
                }
                this.$element = $(element);
                this.options = $.extend({}, $.fn.bootstrapSwitch.defaults, {
                    state: this.$element.is(":checked"),
                    size: this.$element.data("size"),
                    animate: this.$element.data("animate"),
                    disabled: this.$element.is(":disabled"),
                    readonly: this.$element.is("[readonly]"),
                    indeterminate: this.$element.data("indeterminate"),
                    inverse: this.$element.data("inverse"),
                    radioAllOff: this.$element.data("radio-all-off"),
                    onColor: this.$element.data("on-color"),
                    offColor: this.$element.data("off-color"),
                    onText: this.$element.data("on-text"),
                    offText: this.$element.data("off-text"),
                    labelText: this.$element.data("label-text"),
                    handleWidth: this.$element.data("handle-width"),
                    labelWidth: this.$element.data("label-width"),
                    baseClass: this.$element.data("base-class"),
                    wrapperClass: this.$element.data("wrapper-class")
                }, options);
                this.prevOptions = {};
                this.$wrapper = $("<div>", {
                    "class": (function(_this) {
                        return function() {
                            var classes;
                            classes = ["" + _this.options.baseClass].concat(_this._getClasses(_this.options.wrapperClass));
                            classes.push(_this.options.state ? _this.options.baseClass + "-on" : _this.options.baseClass + "-off");
                            if (_this.options.size != null) {
                                classes.push(_this.options.baseClass + "-" + _this.options.size);
                            }
                            if (_this.options.disabled) {
                                classes.push(_this.options.baseClass + "-disabled");
                            }
                            if (_this.options.readonly) {
                                classes.push(_this.options.baseClass + "-readonly");
                            }
                            if (_this.options.indeterminate) {
                                classes.push(_this.options.baseClass + "-indeterminate");
                            }
                            if (_this.options.inverse) {
                                classes.push(_this.options.baseClass + "-inverse");
                            }
                            if (_this.$element.attr("id")) {
                                classes.push(_this.options.baseClass + "-id-" + (_this.$element.attr("id")));
                            }
                            return classes.join(" ");
                        };
                    })(this)()
                });
                this.$container = $("<div>", {
                    "class": this.options.baseClass + "-container"
                });
                this.$on = $("<span>", {
                    html: this.options.onText,
                    "class": this.options.baseClass + "-handle-on " + this.options.baseClass + "-" + this.options.onColor
                });
                this.$off = $("<span>", {
                    html: this.options.offText,
                    "class": this.options.baseClass + "-handle-off " + this.options.baseClass + "-" + this.options.offColor
                });
                this.$label = $("<span>", {
                    html: this.options.labelText,
                    "class": this.options.baseClass + "-label"
                });
                this.$element.on("init.bootstrapSwitch", (function(_this) {
                    return function() {
                        return _this.options.onInit.apply(element, arguments);
                    };
                })(this));
                this.$element.on("switchChange.bootstrapSwitch", (function(_this) {
                    return function(e) {
                        if (false === _this.options.onSwitchChange.apply(element, arguments)) {
                            if (_this.$element.is(":radio")) {
                                return $("[name='" + (_this.$element.attr('name')) + "']").trigger("previousState.bootstrapSwitch", true);
                            } else {
                                return _this.$element.trigger("previousState.bootstrapSwitch", true);
                            }
                        }
                    };
                })(this));
                this.$container = this.$element.wrap(this.$container).parent();
                this.$wrapper = this.$container.wrap(this.$wrapper).parent();
                this.$element.before(this.options.inverse ? this.$off : this.$on).before(this.$label).before(this.options.inverse ? this.$on : this.$off);
                if (this.options.indeterminate) {
                    this.$element.prop("indeterminate", true);
                }
                this._init();
                this._elementHandlers();
                this._handleHandlers();
                this._labelHandlers();
                this._formHandler();
                this._externalLabelHandler();
                this.$element.trigger("init.bootstrapSwitch", this.options.state);
            }

            BootstrapSwitch.prototype._constructor = BootstrapSwitch;

            BootstrapSwitch.prototype.setPrevOptions = function() {
                return this.prevOptions = $.extend(true, {}, this.options);
            };

            BootstrapSwitch.prototype.state = function(value, skip) {
                if (typeof value === "undefined") {
                    return this.options.state;
                }
                if (this.options.disabled || this.options.readonly) {
                    return this.$element;
                }
                if (this.options.state && !this.options.radioAllOff && this.$element.is(":radio")) {
                    return this.$element;
                }
                if (this.$element.is(":radio")) {
                    $("[name='" + (this.$element.attr('name')) + "']").trigger("setPreviousOptions.bootstrapSwitch");
                } else {
                    this.$element.trigger("setPreviousOptions.bootstrapSwitch");
                }
                if (this.options.indeterminate) {
                    this.indeterminate(false);
                }
                value = !!value;
                this.$element.prop("checked", value).trigger("change.bootstrapSwitch", skip);
                return this.$element;
            };

            BootstrapSwitch.prototype.toggleState = function(skip) {
                if (this.options.disabled || this.options.readonly) {
                    return this.$element;
                }
                if (this.options.indeterminate) {
                    this.indeterminate(false);
                    return this.state(true);
                } else {
                    return this.$element.prop("checked", !this.options.state).trigger("change.bootstrapSwitch", skip);
                }
            };

            BootstrapSwitch.prototype.size = function(value) {
                if (typeof value === "undefined") {
                    return this.options.size;
                }
                if (this.options.size != null) {
                    this.$wrapper.removeClass(this.options.baseClass + "-" + this.options.size);
                }
                if (value) {
                    this.$wrapper.addClass(this.options.baseClass + "-" + value);
                }
                this._width();
                this._containerPosition();
                this.options.size = value;
                return this.$element;
            };

            BootstrapSwitch.prototype.animate = function(value) {
                if (typeof value === "undefined") {
                    return this.options.animate;
                }
                value = !!value;
                if (value === this.options.animate) {
                    return this.$element;
                }
                return this.toggleAnimate();
            };

            BootstrapSwitch.prototype.toggleAnimate = function() {
                this.options.animate = !this.options.animate;
                this.$wrapper.toggleClass(this.options.baseClass + "-animate");
                return this.$element;
            };

            BootstrapSwitch.prototype.disabled = function(value) {
                if (typeof value === "undefined") {
                    return this.options.disabled;
                }
                value = !!value;
                if (value === this.options.disabled) {
                    return this.$element;
                }
                return this.toggleDisabled();
            };

            BootstrapSwitch.prototype.toggleDisabled = function() {
                this.options.disabled = !this.options.disabled;
                this.$element.prop("disabled", this.options.disabled);
                this.$wrapper.toggleClass(this.options.baseClass + "-disabled");
                return this.$element;
            };

            BootstrapSwitch.prototype.readonly = function(value) {
                if (typeof value === "undefined") {
                    return this.options.readonly;
                }
                value = !!value;
                if (value === this.options.readonly) {
                    return this.$element;
                }
                return this.toggleReadonly();
            };

            BootstrapSwitch.prototype.toggleReadonly = function() {
                this.options.readonly = !this.options.readonly;
                this.$element.prop("readonly", this.options.readonly);
                this.$wrapper.toggleClass(this.options.baseClass + "-readonly");
                return this.$element;
            };

            BootstrapSwitch.prototype.indeterminate = function(value) {
                if (typeof value === "undefined") {
                    return this.options.indeterminate;
                }
                value = !!value;
                if (value === this.options.indeterminate) {
                    return this.$element;
                }
                return this.toggleIndeterminate();
            };

            BootstrapSwitch.prototype.toggleIndeterminate = function() {
                this.options.indeterminate = !this.options.indeterminate;
                this.$element.prop("indeterminate", this.options.indeterminate);
                this.$wrapper.toggleClass(this.options.baseClass + "-indeterminate");
                this._containerPosition();
                return this.$element;
            };

            BootstrapSwitch.prototype.inverse = function(value) {
                if (typeof value === "undefined") {
                    return this.options.inverse;
                }
                value = !!value;
                if (value === this.options.inverse) {
                    return this.$element;
                }
                return this.toggleInverse();
            };

            BootstrapSwitch.prototype.toggleInverse = function() {
                var $off, $on;
                this.$wrapper.toggleClass(this.options.baseClass + "-inverse");
                $on = this.$on.clone(true);
                $off = this.$off.clone(true);
                this.$on.replaceWith($off);
                this.$off.replaceWith($on);
                this.$on = $off;
                this.$off = $on;
                this.options.inverse = !this.options.inverse;
                return this.$element;
            };

            BootstrapSwitch.prototype.onColor = function(value) {
                var color;
                color = this.options.onColor;
                if (typeof value === "undefined") {
                    return color;
                }
                if (color != null) {
                    this.$on.removeClass(this.options.baseClass + "-" + color);
                }
                this.$on.addClass(this.options.baseClass + "-" + value);
                this.options.onColor = value;
                return this.$element;
            };

            BootstrapSwitch.prototype.offColor = function(value) {
                var color;
                color = this.options.offColor;
                if (typeof value === "undefined") {
                    return color;
                }
                if (color != null) {
                    this.$off.removeClass(this.options.baseClass + "-" + color);
                }
                this.$off.addClass(this.options.baseClass + "-" + value);
                this.options.offColor = value;
                return this.$element;
            };

            BootstrapSwitch.prototype.onText = function(value) {
                if (typeof value === "undefined") {
                    return this.options.onText;
                }
                this.$on.html(value);
                this._width();
                this._containerPosition();
                this.options.onText = value;
                return this.$element;
            };

            BootstrapSwitch.prototype.offText = function(value) {
                if (typeof value === "undefined") {
                    return this.options.offText;
                }
                this.$off.html(value);
                this._width();
                this._containerPosition();
                this.options.offText = value;
                return this.$element;
            };

            BootstrapSwitch.prototype.labelText = function(value) {
                if (typeof value === "undefined") {
                    return this.options.labelText;
                }
                this.$label.html(value);
                this._width();
                this.options.labelText = value;
                return this.$element;
            };

            BootstrapSwitch.prototype.handleWidth = function(value) {
                if (typeof value === "undefined") {
                    return this.options.handleWidth;
                }
                this.options.handleWidth = value;
                this._width();
                this._containerPosition();
                return this.$element;
            };

            BootstrapSwitch.prototype.labelWidth = function(value) {
                if (typeof value === "undefined") {
                    return this.options.labelWidth;
                }
                this.options.labelWidth = value;
                this._width();
                this._containerPosition();
                return this.$element;
            };

            BootstrapSwitch.prototype.baseClass = function(value) {
                return this.options.baseClass;
            };

            BootstrapSwitch.prototype.wrapperClass = function(value) {
                if (typeof value === "undefined") {
                    return this.options.wrapperClass;
                }
                if (!value) {
                    value = $.fn.bootstrapSwitch.defaults.wrapperClass;
                }
                this.$wrapper.removeClass(this._getClasses(this.options.wrapperClass).join(" "));
                this.$wrapper.addClass(this._getClasses(value).join(" "));
                this.options.wrapperClass = value;
                return this.$element;
            };

            BootstrapSwitch.prototype.radioAllOff = function(value) {
                if (typeof value === "undefined") {
                    return this.options.radioAllOff;
                }
                value = !!value;
                if (value === this.options.radioAllOff) {
                    return this.$element;
                }
                this.options.radioAllOff = value;
                return this.$element;
            };

            BootstrapSwitch.prototype.onInit = function(value) {
                if (typeof value === "undefined") {
                    return this.options.onInit;
                }
                if (!value) {
                    value = $.fn.bootstrapSwitch.defaults.onInit;
                }
                this.options.onInit = value;
                return this.$element;
            };

            BootstrapSwitch.prototype.onSwitchChange = function(value) {
                if (typeof value === "undefined") {
                    return this.options.onSwitchChange;
                }
                if (!value) {
                    value = $.fn.bootstrapSwitch.defaults.onSwitchChange;
                }
                this.options.onSwitchChange = value;
                return this.$element;
            };

            BootstrapSwitch.prototype.destroy = function() {
                var $form;
                $form = this.$element.closest("form");
                if ($form.length) {
                    $form.off("reset.bootstrapSwitch").removeData("bootstrap-switch");
                }
                this.$container.children().not(this.$element).remove();
                this.$element.unwrap().unwrap().off(".bootstrapSwitch").removeData("bootstrap-switch");
                return this.$element;
            };

            BootstrapSwitch.prototype._width = function() {
                var $handles, handleWidth;
                $handles = this.$on.add(this.$off);
                $handles.add(this.$label).css("width", "");
                handleWidth = this.options.handleWidth === "auto" ? Math.max(this.$on.width(), this.$off.width()) : this.options.handleWidth;
                $handles.width(handleWidth);
                this.$label.width((function(_this) {
                    return function(index, width) {
                        if (_this.options.labelWidth !== "auto") {
                            return _this.options.labelWidth;
                        }
                        if (width < handleWidth) {
                            return handleWidth;
                        } else {
                            return width;
                        }
                    };
                })(this));
                this._handleWidth = this.$on.outerWidth();
                this._labelWidth = this.$label.outerWidth();
                this.$container.width((this._handleWidth * 2) + this._labelWidth);
                return this.$wrapper.width(this._handleWidth + this._labelWidth);
            };

            BootstrapSwitch.prototype._containerPosition = function(state, callback) {
                if (state == null) {
                    state = this.options.state;
                }
                this.$container.css("margin-left", (function(_this) {
                    return function() {
                        var values;
                        values = [0, "-" + _this._handleWidth + "px"];
                        if (_this.options.indeterminate) {
                            return "-" + (_this._handleWidth / 2) + "px";
                        }
                        if (state) {
                            if (_this.options.inverse) {
                                return values[1];
                            } else {
                                return values[0];
                            }
                        } else {
                            if (_this.options.inverse) {
                                return values[0];
                            } else {
                                return values[1];
                            }
                        }
                    };
                })(this));
                if (!callback) {
                    return;
                }
                return setTimeout(function() {
                    return callback();
                }, 50);
            };

            BootstrapSwitch.prototype._init = function() {
                var init, initInterval;
                init = (function(_this) {
                    return function() {
                        _this.setPrevOptions();
                        _this._width();
                        return _this._containerPosition(null, function() {
                            if (_this.options.animate) {
                                return _this.$wrapper.addClass(_this.options.baseClass + "-animate");
                            }
                        });
                    };
                })(this);
                if (this.$wrapper.is(":visible")) {
                    return init();
                }
                return initInterval = window.setInterval((function(_this) {
                    return function() {
                        if (_this.$wrapper.is(":visible")) {
                            init();
                            return window.clearInterval(initInterval);
                        }
                    };
                })(this), 50);
            };

            BootstrapSwitch.prototype._elementHandlers = function() {
                return this.$element.on({
                    "setPreviousOptions.bootstrapSwitch": (function(_this) {
                        return function(e) {
                            return _this.setPrevOptions();
                        };
                    })(this),
                    "previousState.bootstrapSwitch": (function(_this) {
                        return function(e) {
                            _this.options = _this.prevOptions;
                            if (_this.options.indeterminate) {
                                _this.$wrapper.addClass(_this.options.baseClass + "-indeterminate");
                            }
                            return _this.$element.prop("checked", _this.options.state).trigger("change.bootstrapSwitch", true);
                        };
                    })(this),
                    "change.bootstrapSwitch": (function(_this) {
                        return function(e, skip) {
                            var state;
                            e.preventDefault();
                            e.stopImmediatePropagation();
                            state = _this.$element.is(":checked");
                            _this._containerPosition(state);
                            if (state === _this.options.state) {
                                return;
                            }
                            _this.options.state = state;
                            _this.$wrapper.toggleClass(_this.options.baseClass + "-off").toggleClass(_this.options.baseClass + "-on");
                            if (!skip) {
                                if (_this.$element.is(":radio")) {
                                    $("[name='" + (_this.$element.attr('name')) + "']").not(_this.$element).prop("checked", false).trigger("change.bootstrapSwitch", true);
                                }
                                return _this.$element.trigger("switchChange.bootstrapSwitch", [state]);
                            }
                        };
                    })(this),
                    "focus.bootstrapSwitch": (function(_this) {
                        return function(e) {
                            e.preventDefault();
                            return _this.$wrapper.addClass(_this.options.baseClass + "-focused");
                        };
                    })(this),
                    "blur.bootstrapSwitch": (function(_this) {
                        return function(e) {
                            e.preventDefault();
                            return _this.$wrapper.removeClass(_this.options.baseClass + "-focused");
                        };
                    })(this),
                    "keydown.bootstrapSwitch": (function(_this) {
                        return function(e) {
                            if (!e.which || _this.options.disabled || _this.options.readonly) {
                                return;
                            }
                            switch (e.which) {
                                case 37:
                                    e.preventDefault();
                                    e.stopImmediatePropagation();
                                    return _this.state(false);
                                case 39:
                                    e.preventDefault();
                                    e.stopImmediatePropagation();
                                    return _this.state(true);
                            }
                        };
                    })(this)
                });
            };

            BootstrapSwitch.prototype._handleHandlers = function() {
                this.$on.on("click.bootstrapSwitch", (function(_this) {
                    return function(event) {
                        event.preventDefault();
                        event.stopPropagation();
                        _this.state(false);
                        return _this.$element.trigger("focus.bootstrapSwitch");
                    };
                })(this));
                return this.$off.on("click.bootstrapSwitch", (function(_this) {
                    return function(event) {
                        event.preventDefault();
                        event.stopPropagation();
                        _this.state(true);
                        return _this.$element.trigger("focus.bootstrapSwitch");
                    };
                })(this));
            };

            BootstrapSwitch.prototype._labelHandlers = function() {
                return this.$label.on({
                    "click": function(e) {
                        return e.stopPropagation();
                    },
                    "mousedown.bootstrapSwitch touchstart.bootstrapSwitch": (function(_this) {
                        return function(e) {
                            if (_this._dragStart || _this.options.disabled || _this.options.readonly) {
                                return;
                            }
                            e.preventDefault();
                            e.stopPropagation();
                            _this._dragStart = (e.pageX || e.originalEvent.touches[0].pageX) - parseInt(_this.$container.css("margin-left"), 10);
                            if (_this.options.animate) {
                                _this.$wrapper.removeClass(_this.options.baseClass + "-animate");
                            }
                            return _this.$element.trigger("focus.bootstrapSwitch");
                        };
                    })(this),
                    "mousemove.bootstrapSwitch touchmove.bootstrapSwitch": (function(_this) {
                        return function(e) {
                            var difference;
                            if (_this._dragStart == null) {
                                return;
                            }
                            e.preventDefault();
                            difference = (e.pageX || e.originalEvent.touches[0].pageX) - _this._dragStart;
                            if (difference < -_this._handleWidth || difference > 0) {
                                return;
                            }
                            _this._dragEnd = difference;
                            return _this.$container.css("margin-left", _this._dragEnd + "px");
                        };
                    })(this),
                    "mouseup.bootstrapSwitch touchend.bootstrapSwitch": (function(_this) {
                        return function(e) {
                            var state;
                            if (!_this._dragStart) {
                                return;
                            }
                            e.preventDefault();
                            if (_this.options.animate) {
                                _this.$wrapper.addClass(_this.options.baseClass + "-animate");
                            }
                            if (_this._dragEnd) {
                                state = _this._dragEnd > -(_this._handleWidth / 2);
                                _this._dragEnd = false;
                                _this.state(_this.options.inverse ? !state : state);
                            } else {
                                _this.state(!_this.options.state);
                            }
                            return _this._dragStart = false;
                        };
                    })(this),
                    "mouseleave.bootstrapSwitch": (function(_this) {
                        return function(e) {
                            return _this.$label.trigger("mouseup.bootstrapSwitch");
                        };
                    })(this)
                });
            };

            BootstrapSwitch.prototype._externalLabelHandler = function() {
                var $externalLabel;
                $externalLabel = this.$element.closest("label");
                return $externalLabel.on("click", (function(_this) {
                    return function(event) {
                        event.preventDefault();
                        event.stopImmediatePropagation();
                        if (event.target === $externalLabel[0]) {
                            return _this.toggleState();
                        }
                    };
                })(this));
            };

            BootstrapSwitch.prototype._formHandler = function() {
                var $form;
                $form = this.$element.closest("form");
                if ($form.data("bootstrap-switch")) {
                    return;
                }
                return $form.on("reset.bootstrapSwitch", function() {
                    return window.setTimeout(function() {
                        return $form.find("input").filter(function() {
                            return $(this).data("bootstrap-switch");
                        }).each(function() {
                            return $(this).bootstrapSwitch("state", this.checked);
                        });
                    }, 1);
                }).data("bootstrap-switch", true);
            };

            BootstrapSwitch.prototype._getClasses = function(classes) {
                var c, cls, i, len;
                if (!$.isArray(classes)) {
                    return [this.options.baseClass + "-" + classes];
                }
                cls = [];
                for (i = 0, len = classes.length; i < len; i++) {
                    c = classes[i];
                    cls.push(this.options.baseClass + "-" + c);
                }
                return cls;
            };

            return BootstrapSwitch;

        })();
        $.fn.bootstrapSwitch = function() {
            var args, option, ret;
            option = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
            ret = this;
            this.each(function() {
                var $this, data;
                $this = $(this);
                data = $this.data("bootstrap-switch");
                if (!data) {
                    $this.data("bootstrap-switch", data = new BootstrapSwitch(this, option));
                }
                if (typeof option === "string") {
                    return ret = data[option].apply(data, args);
                }
            });
            return ret;
        };
        $.fn.bootstrapSwitch.Constructor = BootstrapSwitch;
        return $.fn.bootstrapSwitch.defaults = {
            state: true,
            size: null,
            animate: true,
            disabled: false,
            readonly: false,
            indeterminate: false,
            inverse: false,
            radioAllOff: false,
            onColor: "primary",
            offColor: "default",
            onText: "ON",
            offText: "OFF",
            labelText: "&nbsp;",
            handleWidth: "auto",
            labelWidth: "auto",
            baseClass: "bootstrap-switch",
            wrapperClass: "wrapper",
            onInit: function() {},
            onSwitchChange: function() {}
        };
    })(window.jQuery, window);

}).call(this);

(function() {

  function initBootstrapSwitch() {
    $('.bootstrap-switch').each(function() {
      $this = $(this);
      data_on_label = $this.data('on-label') || '';
      data_off_label = $this.data('off-label') || '';

      $this.bootstrapSwitch({
        onText: data_on_label,
        offText: data_off_label
      });
    });
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('bs-switch') && initBootstrapSwitch.call(this)
  })

})()

;

(function() {
  function initFormSheets() {
    // This is the fix for when Webkit decides to autofill a field,
    // and it causes the label being used as a placeholder to be seen underneath
    // the autofilled text.
    var attemptCount = 0;
    var intervalId = window.setInterval(function(){
      try {
        $('.form-sheet').find('input:-webkit-autofill').each(function(){
          hideLabel(this);
          attemptCount++;

          if(attemptCount > 3) {
            clearInterval(intervalId);
          }
        });
      } catch( e ) { /* Do Nothing */ }
    }, 300);

    // Use label as placeholder in sheet forms, as placeholder can't be styled fully in most browsers.

    $(".form-sheet").find("input, textarea")

    .bind("keydown.formsheet", function(e) {
      checkForChange(e)
    })

    .change(function() {
      if (this.value == "") {
        showLabel(this)
      } else {
        hideLabel(this)
      }
    })

    .focus(function() {
      findLabel(this).addClass("focused")
    })

    .blur(function() {
      if (this.value == "") {
        showLabel(this)
      } else {
        hideLabel(this)
      }

      findLabel(this).removeClass("focused")
    })

    // Ensure inputs with some values on load have their label hidden.
    .each(function() {
      $(this).triggerHandler("blur")
    })

    // Apply .focused class to inputs already focused on page load.
    .filter(":focus")
    .each(function() {
      findLabel(this).addClass("focused")
    })
    .end()

    function checkForChange(e) {
      if(	e.keyCode == 9  || // Skip Tab
         e.keyCode == 16 || // Skip Shift
           e.keyCode == 17 || // Skip Control
             e.keyCode == 18 || // Skip Option
               e.keyCode == 91 || // Skip LCommand
                 e.keyCode == 93    // Skip RCommand
        ) return;

      hideLabel(e.target)
    }

    function hideLabel(input) {
      findLabel(input).hide()
      $(input).unbind("keydown.formsheet")
    }

    function showLabel(input) {
      findLabel(input).show()
      $(input).bind("keydown.form-sheet", function(e) {
        checkForChange(e)
      })
    }

    function findLabel(input) {
      return $(input).parents(".form-group").find("label.form-label")
    }
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('form-sheets') && initFormSheets.call(this)
  })


})()

;

(function() {
  function initGMaps() {
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('gmaps') && initGMaps.call(this)
  })
})()
;
/**
 * jVectorMap version 2.0.4
 *
 * Copyright 2011-2014, Kirill Lebedev
 *
 */


(function( $ ){
  var apiParams = {
        set: {
          colors: 1,
          values: 1,
          backgroundColor: 1,
          scaleColors: 1,
          normalizeFunction: 1,
          focus: 1
        },
        get: {
          selectedRegions: 1,
          selectedMarkers: 1,
          mapObject: 1,
          regionName: 1
        }
      };

  $.fn.vectorMap = function(options) {
    var map,
        methodName,
        map = this.children('.jvectormap-container').data('mapObject');

    if (options === 'addMap') {
      jvm.Map.maps[arguments[1]] = arguments[2];
    } else if ((options === 'set' || options === 'get') && apiParams[options][arguments[1]]) {
      methodName = arguments[1].charAt(0).toUpperCase()+arguments[1].substr(1);
      return map[options+methodName].apply(map, Array.prototype.slice.call(arguments, 2));
    } else {
      options = options || {};
      options.container = this;
      map = new jvm.Map(options);
    }

    return this;
  };
})( jQuery );
/*! Copyright (c) 2013 Brandon Aaron (http://brandon.aaron.sh)
 * Licensed under the MIT License (LICENSE.txt).
 *
 * Version: 3.1.9
 *
 * Requires: jQuery 1.2.2+
 */

(function (factory) {
    if ( typeof define === 'function' && define.amd ) {
        // AMD. Register as an anonymous module.
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        // Node/CommonJS style for Browserify
        module.exports = factory;
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function ($) {

    var toFix  = ['wheel', 'mousewheel', 'DOMMouseScroll', 'MozMousePixelScroll'],
        toBind = ( 'onwheel' in document || document.documentMode >= 9 ) ?
                    ['wheel'] : ['mousewheel', 'DomMouseScroll', 'MozMousePixelScroll'],
        slice  = Array.prototype.slice,
        nullLowestDeltaTimeout, lowestDelta;

    if ( $.event.fixHooks ) {
        for ( var i = toFix.length; i; ) {
            $.event.fixHooks[ toFix[--i] ] = $.event.mouseHooks;
        }
    }

    var special = $.event.special.mousewheel = {
        version: '3.1.9',

        setup: function() {
            if ( this.addEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.addEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = handler;
            }
            // Store the line height and page height for this particular element
            $.data(this, 'mousewheel-line-height', special.getLineHeight(this));
            $.data(this, 'mousewheel-page-height', special.getPageHeight(this));
        },

        teardown: function() {
            if ( this.removeEventListener ) {
                for ( var i = toBind.length; i; ) {
                    this.removeEventListener( toBind[--i], handler, false );
                }
            } else {
                this.onmousewheel = null;
            }
        },

        getLineHeight: function(elem) {
            return parseInt($(elem)['offsetParent' in $.fn ? 'offsetParent' : 'parent']().css('fontSize'), 10);
        },

        getPageHeight: function(elem) {
            return $(elem).height();
        },

        settings: {
            adjustOldDeltas: true
        }
    };

    $.fn.extend({
        mousewheel: function(fn) {
            return fn ? this.bind('mousewheel', fn) : this.trigger('mousewheel');
        },

        unmousewheel: function(fn) {
            return this.unbind('mousewheel', fn);
        }
    });


    function handler(event) {
        var orgEvent   = event || window.event,
            args       = slice.call(arguments, 1),
            delta      = 0,
            deltaX     = 0,
            deltaY     = 0,
            absDelta   = 0;
        event = $.event.fix(orgEvent);
        event.type = 'mousewheel';

        // Old school scrollwheel delta
        if ( 'detail'      in orgEvent ) { deltaY = orgEvent.detail * -1;      }
        if ( 'wheelDelta'  in orgEvent ) { deltaY = orgEvent.wheelDelta;       }
        if ( 'wheelDeltaY' in orgEvent ) { deltaY = orgEvent.wheelDeltaY;      }
        if ( 'wheelDeltaX' in orgEvent ) { deltaX = orgEvent.wheelDeltaX * -1; }

        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event
        if ( 'axis' in orgEvent && orgEvent.axis === orgEvent.HORIZONTAL_AXIS ) {
            deltaX = deltaY * -1;
            deltaY = 0;
        }

        // Set delta to be deltaY or deltaX if deltaY is 0 for backwards compatabilitiy
        delta = deltaY === 0 ? deltaX : deltaY;

        // New school wheel delta (wheel event)
        if ( 'deltaY' in orgEvent ) {
            deltaY = orgEvent.deltaY * -1;
            delta  = deltaY;
        }
        if ( 'deltaX' in orgEvent ) {
            deltaX = orgEvent.deltaX;
            if ( deltaY === 0 ) { delta  = deltaX * -1; }
        }

        // No change actually happened, no reason to go any further
        if ( deltaY === 0 && deltaX === 0 ) { return; }

        // Need to convert lines and pages to pixels if we aren't already in pixels
        // There are three delta modes:
        //   * deltaMode 0 is by pixels, nothing to do
        //   * deltaMode 1 is by lines
        //   * deltaMode 2 is by pages
        if ( orgEvent.deltaMode === 1 ) {
            var lineHeight = $.data(this, 'mousewheel-line-height');
            delta  *= lineHeight;
            deltaY *= lineHeight;
            deltaX *= lineHeight;
        } else if ( orgEvent.deltaMode === 2 ) {
            var pageHeight = $.data(this, 'mousewheel-page-height');
            delta  *= pageHeight;
            deltaY *= pageHeight;
            deltaX *= pageHeight;
        }

        // Store lowest absolute delta to normalize the delta values
        absDelta = Math.max( Math.abs(deltaY), Math.abs(deltaX) );

        if ( !lowestDelta || absDelta < lowestDelta ) {
            lowestDelta = absDelta;

            // Adjust older deltas if necessary
            if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
                lowestDelta /= 40;
            }
        }

        // Adjust older deltas if necessary
        if ( shouldAdjustOldDeltas(orgEvent, absDelta) ) {
            // Divide all the things by 40!
            delta  /= 40;
            deltaX /= 40;
            deltaY /= 40;
        }

        // Get a whole, normalized value for the deltas
        delta  = Math[ delta  >= 1 ? 'floor' : 'ceil' ](delta  / lowestDelta);
        deltaX = Math[ deltaX >= 1 ? 'floor' : 'ceil' ](deltaX / lowestDelta);
        deltaY = Math[ deltaY >= 1 ? 'floor' : 'ceil' ](deltaY / lowestDelta);

        // Add information to the event object
        event.deltaX = deltaX;
        event.deltaY = deltaY;
        event.deltaFactor = lowestDelta;
        // Go ahead and set deltaMode to 0 since we converted to pixels
        // Although this is a little odd since we overwrite the deltaX/Y
        // properties with normalized deltas.
        event.deltaMode = 0;

        // Add event and delta to the front of the arguments
        args.unshift(event, delta, deltaX, deltaY);

        // Clearout lowestDelta after sometime to better
        // handle multiple device types that give different
        // a different lowestDelta
        // Ex: trackpad = 3 and mouse wheel = 120
        if (nullLowestDeltaTimeout) { clearTimeout(nullLowestDeltaTimeout); }
        nullLowestDeltaTimeout = setTimeout(nullLowestDelta, 200);

        return ($.event.dispatch || $.event.handle).apply(this, args);
    }

    function nullLowestDelta() {
        lowestDelta = null;
    }

    function shouldAdjustOldDeltas(orgEvent, absDelta) {
        // If this is an older event and the delta is divisable by 120,
        // then we are assuming that the browser is treating this as an
        // older mouse wheel event and that we should divide the deltas
        // by 40 to try and get a more usable deltaFactor.
        // Side note, this actually impacts the reported scroll distance
        // in older browsers and can cause scrolling to be slower than native.
        // Turn this off by setting $.event.special.mousewheel.settings.adjustOldDeltas to false.
        return special.settings.adjustOldDeltas && orgEvent.type === 'mousewheel' && absDelta % 120 === 0;
    }

}));/**
 * @namespace jvm Holds core methods and classes used by jVectorMap.
 */
var jvm = {

  /**
   * Inherits child's prototype from the parent's one.
   * @param {Function} child
   * @param {Function} parent
   */
  inherits: function(child, parent) {
    function temp() {}
    temp.prototype = parent.prototype;
    child.prototype = new temp();
    child.prototype.constructor = child;
    child.parentClass = parent;
  },

  /**
   * Mixes in methods from the source constructor to the target one.
   * @param {Function} target
   * @param {Function} source
   */
  mixin: function(target, source){
    var prop;

    for (prop in source.prototype) {
      if (source.prototype.hasOwnProperty(prop)) {
        target.prototype[prop] = source.prototype[prop];
      }
    }
  },

  min: function(values){
    var min = Number.MAX_VALUE,
        i;

    if (values instanceof Array) {
      for (i = 0; i < values.length; i++) {
        if (values[i] < min) {
          min = values[i];
        }
      }
    } else {
      for (i in values) {
        if (values[i] < min) {
          min = values[i];
        }
      }
    }
    return min;
  },

  max: function(values){
    var max = Number.MIN_VALUE,
        i;

    if (values instanceof Array) {
      for (i = 0; i < values.length; i++) {
        if (values[i] > max) {
          max = values[i];
        }
      }
    } else {
      for (i in values) {
        if (values[i] > max) {
          max = values[i];
        }
      }
    }
    return max;
  },

  keys: function(object){
    var keys = [],
        key;

    for (key in object) {
      keys.push(key);
    }
    return keys;
  },

  values: function(object){
    var values = [],
        key,
        i;

    for (i = 0; i < arguments.length; i++) {
      object = arguments[i];
      for (key in object) {
        values.push(object[key]);
      }
    }
    return values;
  },

  whenImageLoaded: function(url){
    var deferred = new jvm.$.Deferred(),
        img = jvm.$('<img/>');

    img.error(function(){
      deferred.reject();
    }).load(function(){
      deferred.resolve(img);
    });
    img.attr('src', url);

    return deferred;
  },

  isImageUrl: function(s){
    return /\.\w{3,4}$/.test(s);
  }
};

jvm.$ = jQuery;

/**
 * indexOf polyfill for IE < 9
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/indexOf
 */
if (!Array.prototype.indexOf) {
  Array.prototype.indexOf = function (searchElement, fromIndex) {

    var k;

    // 1. Let O be the result of calling ToObject passing
    //    the this value as the argument.
    if (this == null) {
      throw new TypeError('"this" is null or not defined');
    }

    var O = Object(this);

    // 2. Let lenValue be the result of calling the Get
    //    internal method of O with the argument "length".
    // 3. Let len be ToUint32(lenValue).
    var len = O.length >>> 0;

    // 4. If len is 0, return -1.
    if (len === 0) {
      return -1;
    }

    // 5. If argument fromIndex was passed let n be
    //    ToInteger(fromIndex); else let n be 0.
    var n = +fromIndex || 0;

    if (Math.abs(n) === Infinity) {
      n = 0;
    }

    // 6. If n >= len, return -1.
    if (n >= len) {
      return -1;
    }

    // 7. If n >= 0, then Let k be n.
    // 8. Else, n<0, Let k be len - abs(n).
    //    If k is less than 0, then let k be 0.
    k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);

    // 9. Repeat, while k < len
    while (k < len) {
      // a. Let Pk be ToString(k).
      //   This is implicit for LHS operands of the in operator
      // b. Let kPresent be the result of calling the
      //    HasProperty internal method of O with argument Pk.
      //   This step can be combined with c
      // c. If kPresent is true, then
      //    i.  Let elementK be the result of calling the Get
      //        internal method of O with the argument ToString(k).
      //   ii.  Let same be the result of applying the
      //        Strict Equality Comparison Algorithm to
      //        searchElement and elementK.
      //  iii.  If same is true, return k.
      if (k in O && O[k] === searchElement) {
        return k;
      }
      k++;
    }
    return -1;
  };
}/**
 * Basic wrapper for DOM element.
 * @constructor
 * @param {String} name Tag name of the element
 * @param {Object} config Set of parameters to initialize element with
 */
jvm.AbstractElement = function(name, config){
  /**
   * Underlying DOM element
   * @type {DOMElement}
   * @private
   */
  this.node = this.createElement(name);

  /**
   * Name of underlying element
   * @type {String}
   * @private
   */
  this.name = name;

  /**
   * Internal store of attributes
   * @type {Object}
   * @private
   */
  this.properties = {};

  if (config) {
    this.set(config);
  }
};

/**
 * Set attribute of the underlying DOM element.
 * @param {String} name Name of attribute
 * @param {Number|String} config Set of parameters to initialize element with
 */
jvm.AbstractElement.prototype.set = function(property, value){
  var key;

  if (typeof property === 'object') {
    for (key in property) {
      this.properties[key] = property[key];
      this.applyAttr(key, property[key]);
    }
  } else {
    this.properties[property] = value;
    this.applyAttr(property, value);
  }
};

/**
 * Returns value of attribute.
 * @param {String} name Name of attribute
 */
jvm.AbstractElement.prototype.get = function(property){
  return this.properties[property];
};

/**
 * Applies attribute value to the underlying DOM element.
 * @param {String} name Name of attribute
 * @param {Number|String} config Value of attribute to apply
 * @private
 */
jvm.AbstractElement.prototype.applyAttr = function(property, value){
  this.node.setAttribute(property, value);
};

jvm.AbstractElement.prototype.remove = function(){
  jvm.$(this.node).remove();
};/**
 * Implements abstract vector canvas.
 * @constructor
 * @param {HTMLElement} container Container to put element to.
 * @param {Number} width Width of canvas.
 * @param {Number} height Height of canvas.
 */
jvm.AbstractCanvasElement = function(container, width, height){
  this.container = container;
  this.setSize(width, height);
  this.rootElement = new jvm[this.classPrefix+'GroupElement']();
  this.node.appendChild( this.rootElement.node );
  this.container.appendChild(this.node);
}

/**
 * Add element to the certain group inside of the canvas.
 * @param {HTMLElement} element Element to add to canvas.
 * @param {HTMLElement} group Group to add element into or into root group if not provided.
 */
jvm.AbstractCanvasElement.prototype.add = function(element, group){
  group = group || this.rootElement;
  group.add(element);
  element.canvas = this;
}

/**
 * Create path and add it to the canvas.
 * @param {Object} config Parameters of path to create.
 * @param {Object} style Styles of the path to create.
 * @param {HTMLElement} group Group to add path into.
 */
jvm.AbstractCanvasElement.prototype.addPath = function(config, style, group){
  var el = new jvm[this.classPrefix+'PathElement'](config, style);

  this.add(el, group);
  return el;
};

/**
 * Create circle and add it to the canvas.
 * @param {Object} config Parameters of path to create.
 * @param {Object} style Styles of the path to create.
 * @param {HTMLElement} group Group to add circle into.
 */
jvm.AbstractCanvasElement.prototype.addCircle = function(config, style, group){
  var el = new jvm[this.classPrefix+'CircleElement'](config, style);

  this.add(el, group);
  return el;
};

/**
 * Create circle and add it to the canvas.
 * @param {Object} config Parameters of path to create.
 * @param {Object} style Styles of the path to create.
 * @param {HTMLElement} group Group to add circle into.
 */
jvm.AbstractCanvasElement.prototype.addImage = function(config, style, group){
  var el = new jvm[this.classPrefix+'ImageElement'](config, style);

  this.add(el, group);
  return el;
};

/**
 * Create text and add it to the canvas.
 * @param {Object} config Parameters of path to create.
 * @param {Object} style Styles of the path to create.
 * @param {HTMLElement} group Group to add circle into.
 */
jvm.AbstractCanvasElement.prototype.addText = function(config, style, group){
  var el = new jvm[this.classPrefix+'TextElement'](config, style);

  this.add(el, group);
  return el;
};

/**
 * Add group to the another group inside of the canvas.
 * @param {HTMLElement} group Group to add circle into or root group if not provided.
 */
jvm.AbstractCanvasElement.prototype.addGroup = function(parentGroup){
  var el = new jvm[this.classPrefix+'GroupElement']();

  if (parentGroup) {
    parentGroup.node.appendChild(el.node);
  } else {
    this.node.appendChild(el.node);
  }
  el.canvas = this;
  return el;
};/**
 * Abstract shape element. Shape element represents some visual vector or raster object.
 * @constructor
 * @param {String} name Tag name of the element.
 * @param {Object} config Set of parameters to initialize element with.
 * @param {Object} style Object with styles to set on element initialization.
 */
jvm.AbstractShapeElement = function(name, config, style){
  this.style = style || {};
  this.style.current = this.style.current || {};
  this.isHovered = false;
  this.isSelected = false;
  this.updateStyle();
};

/**
 * Set element's style.
 * @param {Object|String} property Could be string to set only one property or object to set several style properties at once.
 * @param {String} value Value to set in case only one property should be set.
 */
jvm.AbstractShapeElement.prototype.setStyle = function(property, value){
  var styles = {};

  if (typeof property === 'object') {
    styles = property;
  } else {
    styles[property] = value;
  }
  jvm.$.extend(this.style.current, styles);
  this.updateStyle();
};


jvm.AbstractShapeElement.prototype.updateStyle = function(){
  var attrs = {};

  jvm.AbstractShapeElement.mergeStyles(attrs, this.style.initial);
  jvm.AbstractShapeElement.mergeStyles(attrs, this.style.current);
  if (this.isHovered) {
    jvm.AbstractShapeElement.mergeStyles(attrs, this.style.hover);
  }
  if (this.isSelected) {
    jvm.AbstractShapeElement.mergeStyles(attrs, this.style.selected);
    if (this.isHovered) {
      jvm.AbstractShapeElement.mergeStyles(attrs, this.style.selectedHover);
    }
  }
  this.set(attrs);
};

jvm.AbstractShapeElement.mergeStyles = function(styles, newStyles){
  var key;

  newStyles = newStyles || {};
  for (key in newStyles) {
    if (newStyles[key] === null) {
      delete styles[key];
    } else {
      styles[key] = newStyles[key];
    }
  }
}/**
 * Wrapper for SVG element.
 * @constructor
 * @extends jvm.AbstractElement
 * @param {String} name Tag name of the element
 * @param {Object} config Set of parameters to initialize element with
 */

jvm.SVGElement = function(name, config){
  jvm.SVGElement.parentClass.apply(this, arguments);
}

jvm.inherits(jvm.SVGElement, jvm.AbstractElement);

jvm.SVGElement.svgns = "http://www.w3.org/2000/svg";

/**
 * Creates DOM element.
 * @param {String} tagName Name of element
 * @private
 * @returns DOMElement
 */
jvm.SVGElement.prototype.createElement = function( tagName ){
  return document.createElementNS( jvm.SVGElement.svgns, tagName );
};

/**
 * Adds CSS class for underlying DOM element.
 * @param {String} className Name of CSS class name
 */
jvm.SVGElement.prototype.addClass = function( className ){
  this.node.setAttribute('class', className);
};

/**
 * Returns constructor for element by name prefixed with 'VML'.
 * @param {String} ctr Name of basic constructor to return
 * proper implementation for.
 * @returns Function
 * @private
 */
jvm.SVGElement.prototype.getElementCtr = function( ctr ){
  return jvm['SVG'+ctr];
};

jvm.SVGElement.prototype.getBBox = function(){
  return this.node.getBBox();
};jvm.SVGGroupElement = function(){
  jvm.SVGGroupElement.parentClass.call(this, 'g');
}

jvm.inherits(jvm.SVGGroupElement, jvm.SVGElement);

jvm.SVGGroupElement.prototype.add = function(element){
  this.node.appendChild( element.node );
};jvm.SVGCanvasElement = function(container, width, height){
  this.classPrefix = 'SVG';
  jvm.SVGCanvasElement.parentClass.call(this, 'svg');

  this.defsElement = new jvm.SVGElement('defs');
  this.node.appendChild( this.defsElement.node );

  jvm.AbstractCanvasElement.apply(this, arguments);
}

jvm.inherits(jvm.SVGCanvasElement, jvm.SVGElement);
jvm.mixin(jvm.SVGCanvasElement, jvm.AbstractCanvasElement);

jvm.SVGCanvasElement.prototype.setSize = function(width, height){
  this.width = width;
  this.height = height;
  this.node.setAttribute('width', width);
  this.node.setAttribute('height', height);
};

jvm.SVGCanvasElement.prototype.applyTransformParams = function(scale, transX, transY) {
  this.scale = scale;
  this.transX = transX;
  this.transY = transY;
  this.rootElement.node.setAttribute('transform', 'scale('+scale+') translate('+transX+', '+transY+')');
};jvm.SVGShapeElement = function(name, config, style){
  jvm.SVGShapeElement.parentClass.call(this, name, config);
  jvm.AbstractShapeElement.apply(this, arguments);
};

jvm.inherits(jvm.SVGShapeElement, jvm.SVGElement);
jvm.mixin(jvm.SVGShapeElement, jvm.AbstractShapeElement);

jvm.SVGShapeElement.prototype.applyAttr = function(attr, value){
  var patternEl,
      imageEl,
      that = this;

  if (attr === 'fill' && jvm.isImageUrl(value)) {
    if (!jvm.SVGShapeElement.images[value]) {
      jvm.whenImageLoaded(value).then(function(img){
        imageEl = new jvm.SVGElement('image');
        imageEl.node.setAttributeNS('http://www.w3.org/1999/xlink', 'href', value);
        imageEl.applyAttr('x', '0');
        imageEl.applyAttr('y', '0');
        imageEl.applyAttr('width', img[0].width);
        imageEl.applyAttr('height', img[0].height);

        patternEl = new jvm.SVGElement('pattern');
        patternEl.applyAttr('id', 'image'+jvm.SVGShapeElement.imageCounter);
        patternEl.applyAttr('x', 0);
        patternEl.applyAttr('y', 0);
        patternEl.applyAttr('width', img[0].width / 2);
        patternEl.applyAttr('height', img[0].height / 2);
        patternEl.applyAttr('viewBox', '0 0 '+img[0].width+' '+img[0].height);
        patternEl.applyAttr('patternUnits', 'userSpaceOnUse');
        patternEl.node.appendChild( imageEl.node );

        that.canvas.defsElement.node.appendChild( patternEl.node );

        jvm.SVGShapeElement.images[value] = jvm.SVGShapeElement.imageCounter++;

        that.applyAttr('fill', 'url(#image'+jvm.SVGShapeElement.images[value]+')');
      });
    } else {
      this.applyAttr('fill', 'url(#image'+jvm.SVGShapeElement.images[value]+')');
    }
  } else {
    jvm.SVGShapeElement.parentClass.prototype.applyAttr.apply(this, arguments);
  }
};

jvm.SVGShapeElement.imageCounter = 1;
jvm.SVGShapeElement.images = {};jvm.SVGPathElement = function(config, style){
  jvm.SVGPathElement.parentClass.call(this, 'path', config, style);
  this.node.setAttribute('fill-rule', 'evenodd');
}

jvm.inherits(jvm.SVGPathElement, jvm.SVGShapeElement);jvm.SVGCircleElement = function(config, style){
  jvm.SVGCircleElement.parentClass.call(this, 'circle', config, style);
};

jvm.inherits(jvm.SVGCircleElement, jvm.SVGShapeElement);jvm.SVGImageElement = function(config, style){
  jvm.SVGImageElement.parentClass.call(this, 'image', config, style);
};

jvm.inherits(jvm.SVGImageElement, jvm.SVGShapeElement);

jvm.SVGImageElement.prototype.applyAttr = function(attr, value){
  var that = this;

  if (attr == 'image') {
    jvm.whenImageLoaded(value).then(function(img){
      that.node.setAttributeNS('http://www.w3.org/1999/xlink', 'href', value);
      that.width = img[0].width;
      that.height = img[0].height;
      that.applyAttr('width', that.width);
      that.applyAttr('height', that.height);

      that.applyAttr('x', that.cx - that.width / 2);
      that.applyAttr('y', that.cy - that.height / 2);

      jvm.$(that.node).trigger('imageloaded', [img]);
    });
  } else if(attr == 'cx') {
    this.cx = value;
    if (this.width) {
      this.applyAttr('x', value - this.width / 2);
    }
  } else if(attr == 'cy') {
    this.cy = value;
    if (this.height) {
      this.applyAttr('y', value - this.height / 2);
    }
  } else {
    jvm.SVGImageElement.parentClass.prototype.applyAttr.apply(this, arguments);
  }
};jvm.SVGTextElement = function(config, style){
  jvm.SVGTextElement.parentClass.call(this, 'text', config, style);
}

jvm.inherits(jvm.SVGTextElement, jvm.SVGShapeElement);

jvm.SVGTextElement.prototype.applyAttr = function(attr, value){
  if (attr === 'text') {
    this.node.textContent = value;
  } else {
    jvm.SVGTextElement.parentClass.prototype.applyAttr.apply(this, arguments);
  }
};/**
 * Wrapper for VML element.
 * @constructor
 * @extends jvm.AbstractElement
 * @param {String} name Tag name of the element
 * @param {Object} config Set of parameters to initialize element with
 */

jvm.VMLElement = function(name, config){
  if (!jvm.VMLElement.VMLInitialized) {
    jvm.VMLElement.initializeVML();
  }

  jvm.VMLElement.parentClass.apply(this, arguments);
};

jvm.inherits(jvm.VMLElement, jvm.AbstractElement);

/**
 * Shows if VML was already initialized for the current document or not.
 * @static
 * @private
 * @type {Boolean}
 */
jvm.VMLElement.VMLInitialized = false;

/**
 * Initializes VML handling before creating the first element
 * (adds CSS class and creates namespace). Adds one of two forms
 * of createElement method depending of support by browser.
 * @static
 * @private
 */

 // The following method of VML handling is borrowed from the
 // Raphael library by Dmitry Baranovsky.

jvm.VMLElement.initializeVML = function(){
  try {
    if (!document.namespaces.rvml) {
      document.namespaces.add("rvml","urn:schemas-microsoft-com:vml");
    }
    /**
     * Creates DOM element.
     * @param {String} tagName Name of element
     * @private
     * @returns DOMElement
     */
    jvm.VMLElement.prototype.createElement = function (tagName) {
      return document.createElement('<rvml:' + tagName + ' class="rvml">');
    };
  } catch (e) {
    /**
     * @private
     */
    jvm.VMLElement.prototype.createElement = function (tagName) {
      return document.createElement('<' + tagName + ' xmlns="urn:schemas-microsoft.com:vml" class="rvml">');
    };
  }
  document.createStyleSheet().addRule(".rvml", "behavior:url(#default#VML)");
  jvm.VMLElement.VMLInitialized = true;
};

/**
 * Returns constructor for element by name prefixed with 'VML'.
 * @param {String} ctr Name of basic constructor to return
 * proper implementation for.
 * @returns Function
 * @private
 */
jvm.VMLElement.prototype.getElementCtr = function( ctr ){
  return jvm['VML'+ctr];
};

/**
 * Adds CSS class for underlying DOM element.
 * @param {String} className Name of CSS class name
 */
jvm.VMLElement.prototype.addClass = function( className ){
  jvm.$(this.node).addClass(className);
};

/**
 * Applies attribute value to the underlying DOM element.
 * @param {String} name Name of attribute
 * @param {Number|String} config Value of attribute to apply
 * @private
 */
jvm.VMLElement.prototype.applyAttr = function( attr, value ){
  this.node[attr] = value;
};

/**
 * Returns boundary box for the element.
 * @returns {Object} Boundary box with numeric fields: x, y, width, height
 * @override
 */
jvm.VMLElement.prototype.getBBox = function(){
  var node = jvm.$(this.node);

  return {
    x: node.position().left / this.canvas.scale,
    y: node.position().top / this.canvas.scale,
    width: node.width() / this.canvas.scale,
    height: node.height() / this.canvas.scale
  };
};jvm.VMLGroupElement = function(){
  jvm.VMLGroupElement.parentClass.call(this, 'group');

  this.node.style.left = '0px';
  this.node.style.top = '0px';
  this.node.coordorigin = "0 0";
};

jvm.inherits(jvm.VMLGroupElement, jvm.VMLElement);

jvm.VMLGroupElement.prototype.add = function(element){
  this.node.appendChild( element.node );
};jvm.VMLCanvasElement = function(container, width, height){
  this.classPrefix = 'VML';
  jvm.VMLCanvasElement.parentClass.call(this, 'group');
  jvm.AbstractCanvasElement.apply(this, arguments);
  this.node.style.position = 'absolute';
};

jvm.inherits(jvm.VMLCanvasElement, jvm.VMLElement);
jvm.mixin(jvm.VMLCanvasElement, jvm.AbstractCanvasElement);

jvm.VMLCanvasElement.prototype.setSize = function(width, height){
  var paths,
      groups,
      i,
      l;

  this.width = width;
  this.height = height;
  this.node.style.width = width + "px";
  this.node.style.height = height + "px";
  this.node.coordsize = width+' '+height;
  this.node.coordorigin = "0 0";
  if (this.rootElement) {
    paths = this.rootElement.node.getElementsByTagName('shape');
    for(i = 0, l = paths.length; i < l; i++) {
      paths[i].coordsize = width+' '+height;
      paths[i].style.width = width+'px';
      paths[i].style.height = height+'px';
    }
    groups = this.node.getElementsByTagName('group');
    for(i = 0, l = groups.length; i < l; i++) {
      groups[i].coordsize = width+' '+height;
      groups[i].style.width = width+'px';
      groups[i].style.height = height+'px';
    }
  }
};

jvm.VMLCanvasElement.prototype.applyTransformParams = function(scale, transX, transY) {
  this.scale = scale;
  this.transX = transX;
  this.transY = transY;
  this.rootElement.node.coordorigin = (this.width-transX-this.width/100)+','+(this.height-transY-this.height/100);
  this.rootElement.node.coordsize = this.width/scale+','+this.height/scale;
};jvm.VMLShapeElement = function(name, config){
  jvm.VMLShapeElement.parentClass.call(this, name, config);

  this.fillElement = new jvm.VMLElement('fill');
  this.strokeElement = new jvm.VMLElement('stroke');
  this.node.appendChild(this.fillElement.node);
  this.node.appendChild(this.strokeElement.node);
  this.node.stroked = false;

  jvm.AbstractShapeElement.apply(this, arguments);
};

jvm.inherits(jvm.VMLShapeElement, jvm.VMLElement);
jvm.mixin(jvm.VMLShapeElement, jvm.AbstractShapeElement);

jvm.VMLShapeElement.prototype.applyAttr = function(attr, value){
  switch (attr) {
    case 'fill':
      this.node.fillcolor = value;
      break;
    case 'fill-opacity':
      this.fillElement.node.opacity = Math.round(value*100)+'%';
      break;
    case 'stroke':
      if (value === 'none') {
        this.node.stroked = false;
      } else {
        this.node.stroked = true;
      }
      this.node.strokecolor = value;
      break;
    case 'stroke-opacity':
      this.strokeElement.node.opacity = Math.round(value*100)+'%';
      break;
    case 'stroke-width':
      if (parseInt(value, 10) === 0) {
        this.node.stroked = false;
      } else {
        this.node.stroked = true;
      }
      this.node.strokeweight = value;
      break;
    case 'd':
      this.node.path = jvm.VMLPathElement.pathSvgToVml(value);
      break;
    default:
      jvm.VMLShapeElement.parentClass.prototype.applyAttr.apply(this, arguments);
  }
};jvm.VMLPathElement = function(config, style){
  var scale = new jvm.VMLElement('skew');

  jvm.VMLPathElement.parentClass.call(this, 'shape', config, style);

  this.node.coordorigin = "0 0";

  scale.node.on = true;
  scale.node.matrix = '0.01,0,0,0.01,0,0';
  scale.node.offset = '0,0';

  this.node.appendChild(scale.node);
};

jvm.inherits(jvm.VMLPathElement, jvm.VMLShapeElement);

jvm.VMLPathElement.prototype.applyAttr = function(attr, value){
  if (attr === 'd') {
    this.node.path = jvm.VMLPathElement.pathSvgToVml(value);
  } else {
    jvm.VMLShapeElement.prototype.applyAttr.call(this, attr, value);
  }
};

jvm.VMLPathElement.pathSvgToVml = function(path) {
  var cx = 0, cy = 0, ctrlx, ctrly;

  path = path.replace(/(-?\d+)e(-?\d+)/g, '0');
  return path.replace(/([MmLlHhVvCcSs])\s*((?:-?\d*(?:\.\d+)?\s*,?\s*)+)/g, function(segment, letter, coords, index){
    coords = coords.replace(/(\d)-/g, '$1,-')
            .replace(/^\s+/g, '')
            .replace(/\s+$/g, '')
            .replace(/\s+/g, ',').split(',');
    if (!coords[0]) coords.shift();
    for (var i=0, l=coords.length; i<l; i++) {
      coords[i] = Math.round(100*coords[i]);
    }
    switch (letter) {
      case 'm':
        cx += coords[0];
        cy += coords[1];
        return 't'+coords.join(',');
      case 'M':
        cx = coords[0];
        cy = coords[1];
        return 'm'+coords.join(',');
      case 'l':
        cx += coords[0];
        cy += coords[1];
        return 'r'+coords.join(',');
      case 'L':
        cx = coords[0];
        cy = coords[1];
        return 'l'+coords.join(',');
      case 'h':
        cx += coords[0];
        return 'r'+coords[0]+',0';
      case 'H':
        cx = coords[0];
        return 'l'+cx+','+cy;
      case 'v':
        cy += coords[0];
        return 'r0,'+coords[0];
      case 'V':
        cy = coords[0];
        return 'l'+cx+','+cy;
      case 'c':
        ctrlx = cx + coords[coords.length-4];
        ctrly = cy + coords[coords.length-3];
        cx += coords[coords.length-2];
        cy += coords[coords.length-1];
        return 'v'+coords.join(',');
      case 'C':
        ctrlx = coords[coords.length-4];
        ctrly = coords[coords.length-3];
        cx = coords[coords.length-2];
        cy = coords[coords.length-1];
        return 'c'+coords.join(',');
      case 's':
        coords.unshift(cy-ctrly);
        coords.unshift(cx-ctrlx);
        ctrlx = cx + coords[coords.length-4];
        ctrly = cy + coords[coords.length-3];
        cx += coords[coords.length-2];
        cy += coords[coords.length-1];
        return 'v'+coords.join(',');
      case 'S':
        coords.unshift(cy+cy-ctrly);
        coords.unshift(cx+cx-ctrlx);
        ctrlx = coords[coords.length-4];
        ctrly = coords[coords.length-3];
        cx = coords[coords.length-2];
        cy = coords[coords.length-1];
        return 'c'+coords.join(',');
    }
    return '';
  }).replace(/z/g, 'e');
};jvm.VMLCircleElement = function(config, style){
  jvm.VMLCircleElement.parentClass.call(this, 'oval', config, style);
};

jvm.inherits(jvm.VMLCircleElement, jvm.VMLShapeElement);

jvm.VMLCircleElement.prototype.applyAttr = function(attr, value){
  switch (attr) {
    case 'r':
      this.node.style.width = value*2+'px';
      this.node.style.height = value*2+'px';
      this.applyAttr('cx', this.get('cx') || 0);
      this.applyAttr('cy', this.get('cy') || 0);
      break;
    case 'cx':
      if (!value) return;
      this.node.style.left = value - (this.get('r') || 0) + 'px';
      break;
    case 'cy':
      if (!value) return;
      this.node.style.top = value - (this.get('r') || 0) + 'px';
      break;
    default:
      jvm.VMLCircleElement.parentClass.prototype.applyAttr.call(this, attr, value);
  }
};/**
 * Class for vector images manipulations.
 * @constructor
 * @param {DOMElement} container to place canvas to
 * @param {Number} width
 * @param {Number} height
 */
jvm.VectorCanvas = function(container, width, height) {
  this.mode = window.SVGAngle ? 'svg' : 'vml';

  if (this.mode == 'svg') {
    this.impl = new jvm.SVGCanvasElement(container, width, height);
  } else {
    this.impl = new jvm.VMLCanvasElement(container, width, height);
  }
  this.impl.mode = this.mode;
  return this.impl;
};jvm.SimpleScale = function(scale){
  this.scale = scale;
};

jvm.SimpleScale.prototype.getValue = function(value){
  return value;
};jvm.OrdinalScale = function(scale){
  this.scale = scale;
};

jvm.OrdinalScale.prototype.getValue = function(value){
  return this.scale[value];
};

jvm.OrdinalScale.prototype.getTicks = function(){
  var ticks = [],
      key;

  for (key in this.scale) {
    ticks.push({
      label: key,
      value: this.scale[key]
    });
  }

  return ticks;
};jvm.NumericScale = function(scale, normalizeFunction, minValue, maxValue) {
  this.scale = [];

  normalizeFunction = normalizeFunction || 'linear';

  if (scale) this.setScale(scale);
  if (normalizeFunction) this.setNormalizeFunction(normalizeFunction);
  if (typeof minValue !== 'undefined' ) this.setMin(minValue);
  if (typeof maxValue !== 'undefined' ) this.setMax(maxValue);
};

jvm.NumericScale.prototype = {
  setMin: function(min) {
    this.clearMinValue = min;
    if (typeof this.normalize === 'function') {
      this.minValue = this.normalize(min);
    } else {
      this.minValue = min;
    }
  },

  setMax: function(max) {
    this.clearMaxValue = max;
    if (typeof this.normalize === 'function') {
      this.maxValue = this.normalize(max);
    } else {
      this.maxValue = max;
    }
  },

  setScale: function(scale) {
    var i;

    this.scale = [];
    for (i = 0; i < scale.length; i++) {
      this.scale[i] = [scale[i]];
    }
  },

  setNormalizeFunction: function(f) {
    if (f === 'polynomial') {
      this.normalize = function(value) {
        return Math.pow(value, 0.2);
      }
    } else if (f === 'linear') {
      delete this.normalize;
    } else {
      this.normalize = f;
    }
    this.setMin(this.clearMinValue);
    this.setMax(this.clearMaxValue);
  },

  getValue: function(value) {
    var lengthes = [],
        fullLength = 0,
        l,
        i = 0,
        c;

    if (typeof this.normalize === 'function') {
      value = this.normalize(value);
    }
    for (i = 0; i < this.scale.length-1; i++) {
      l = this.vectorLength(this.vectorSubtract(this.scale[i+1], this.scale[i]));
      lengthes.push(l);
      fullLength += l;
    }

    c = (this.maxValue - this.minValue) / fullLength;
    for (i=0; i<lengthes.length; i++) {
      lengthes[i] *= c;
    }

    i = 0;
    value -= this.minValue;
    while (value - lengthes[i] >= 0) {
      value -= lengthes[i];
      i++;
    }

    if (i == this.scale.length - 1) {
      value = this.vectorToNum(this.scale[i])
    } else {
      value = (
        this.vectorToNum(
          this.vectorAdd(this.scale[i],
            this.vectorMult(
              this.vectorSubtract(this.scale[i+1], this.scale[i]),
              (value) / (lengthes[i])
            )
          )
        )
      );
    }

    return value;
  },

  vectorToNum: function(vector) {
    var num = 0,
        i;

    for (i = 0; i < vector.length; i++) {
      num += Math.round(vector[i])*Math.pow(256, vector.length-i-1);
    }
    return num;
  },

  vectorSubtract: function(vector1, vector2) {
    var vector = [],
        i;

    for (i = 0; i < vector1.length; i++) {
      vector[i] = vector1[i] - vector2[i];
    }
    return vector;
  },

  vectorAdd: function(vector1, vector2) {
    var vector = [],
        i;

    for (i = 0; i < vector1.length; i++) {
      vector[i] = vector1[i] + vector2[i];
    }
    return vector;
  },

  vectorMult: function(vector, num) {
    var result = [],
        i;

    for (i = 0; i < vector.length; i++) {
      result[i] = vector[i] * num;
    }
    return result;
  },

  vectorLength: function(vector) {
    var result = 0,
        i;
    for (i = 0; i < vector.length; i++) {
      result += vector[i] * vector[i];
    }
    return Math.sqrt(result);
  },

  /* Derived from d3 implementation https://github.com/mbostock/d3/blob/master/src/scale/linear.js#L94 */
  getTicks: function(){
    var m = 5,
        extent = [this.clearMinValue, this.clearMaxValue],
        span = extent[1] - extent[0],
        step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)),
        err = m / span * step,
        ticks = [],
        tick,
        v;

    if (err <= .15) step *= 10;
    else if (err <= .35) step *= 5;
    else if (err <= .75) step *= 2;

    extent[0] = Math.floor(extent[0] / step) * step;
    extent[1] = Math.ceil(extent[1] / step) * step;

    tick = extent[0];
    while (tick <= extent[1]) {
      if (tick == extent[0]) {
        v = this.clearMinValue;
      } else if (tick == extent[1]) {
        v = this.clearMaxValue;
      } else {
        v = tick;
      }
      ticks.push({
        label: tick,
        value: this.getValue(v)
      });
      tick += step;
    }

    return ticks;
  }
};
jvm.ColorScale = function(colors, normalizeFunction, minValue, maxValue) {
  jvm.ColorScale.parentClass.apply(this, arguments);
}

jvm.inherits(jvm.ColorScale, jvm.NumericScale);

jvm.ColorScale.prototype.setScale = function(scale) {
  var i;

  for (i = 0; i < scale.length; i++) {
    this.scale[i] = jvm.ColorScale.rgbToArray(scale[i]);
  }
};

jvm.ColorScale.prototype.getValue = function(value) {
  return jvm.ColorScale.numToRgb(jvm.ColorScale.parentClass.prototype.getValue.call(this, value));
};

jvm.ColorScale.arrayToRgb = function(ar) {
  var rgb = '#',
      d,
      i;

  for (i = 0; i < ar.length; i++) {
    d = ar[i].toString(16);
    rgb += d.length == 1 ? '0'+d : d;
  }
  return rgb;
};

jvm.ColorScale.numToRgb = function(num) {
  num = num.toString(16);

  while (num.length < 6) {
    num = '0' + num;
  }

  return '#'+num;
};

jvm.ColorScale.rgbToArray = function(rgb) {
  rgb = rgb.substr(1);
  return [parseInt(rgb.substr(0, 2), 16), parseInt(rgb.substr(2, 2), 16), parseInt(rgb.substr(4, 2), 16)];
};/**
 * Represents map legend.
 * @constructor
 * @param {Object} params Configuration parameters.
 * @param {String} params.cssClass Additional CSS class to apply to legend element.
 * @param {Boolean} params.vertical If <code>true</code> legend will be rendered as vertical.
 * @param {String} params.title Legend title.
 * @param {Function} params.labelRender Method to convert series values to legend labels.
 */
jvm.Legend = function(params) {
  this.params = params || {};
  this.map = this.params.map;
  this.series = this.params.series;
  this.body = jvm.$('<div/>');
  this.body.addClass('jvectormap-legend');
  if (this.params.cssClass) {
    this.body.addClass(this.params.cssClass);
  }

  if (params.vertical) {
    this.map.legendCntVertical.append( this.body );
  } else {
    this.map.legendCntHorizontal.append( this.body );
  }

  this.render();
}

jvm.Legend.prototype.render = function(){
  var ticks = this.series.scale.getTicks(),
      i,
      inner = jvm.$('<div/>').addClass('jvectormap-legend-inner'),
      tick,
      sample,
      label;

  this.body.html('');
  if (this.params.title) {
    this.body.append(
      jvm.$('<div/>').addClass('jvectormap-legend-title').html(this.params.title)
    );
  }
  this.body.append(inner);

  for (i = 0; i < ticks.length; i++) {
    tick = jvm.$('<div/>').addClass('jvectormap-legend-tick');
    sample = jvm.$('<div/>').addClass('jvectormap-legend-tick-sample');

    switch (this.series.params.attribute) {
      case 'fill':
        if (jvm.isImageUrl(ticks[i].value)) {
          sample.css('background', 'url('+ticks[i].value+')');
        } else {
          sample.css('background', ticks[i].value);
        }
        break;
      case 'stroke':
        sample.css('background', ticks[i].value);
        break;
      case 'image':
        sample.css('background', 'url('+ticks[i].value+') no-repeat center center');
        break;
      case 'r':
        jvm.$('<div/>').css({
          'border-radius': ticks[i].value,
          border: this.map.params.markerStyle.initial['stroke-width']+'px '+
                  this.map.params.markerStyle.initial['stroke']+' solid',
          width: ticks[i].value * 2 + 'px',
          height: ticks[i].value * 2 + 'px',
          background: this.map.params.markerStyle.initial['fill']
        }).appendTo(sample);
        break;
    }
    tick.append( sample );
    label = ticks[i].label;
    if (this.params.labelRender) {
      label = this.params.labelRender(label);
    }
    tick.append( jvm.$('<div>'+label+' </div>').addClass('jvectormap-legend-tick-text') );
    inner.append(tick);
  }
  inner.append( jvm.$('<div/>').css('clear', 'both') );
}/**
 * Creates data series.
 * @constructor
 * @param {Object} params Parameters to initialize series with.
 * @param {Array} params.values The data set to visualize.
 * @param {String} params.attribute Numberic or color attribute to use for data visualization. This could be: <code>fill</code>, <code>stroke</code>, <code>fill-opacity</code>, <code>stroke-opacity</code> for markers and regions and <code>r</code> (radius) for markers only.
 * @param {Array} params.scale Values used to map a dimension of data to a visual representation. The first value sets visualization for minimum value from the data set and the last value sets visualization for the maximum value. There also could be intermidiate values. Default value is <code>['#C8EEFF', '#0071A4']</code>
 * @param {Function|String} params.normalizeFunction The function used to map input values to the provided scale. This parameter could be provided as function or one of the strings: <code>'linear'</code> or <code>'polynomial'</code>, while <code>'linear'</code> is used by default. The function provided takes value from the data set as an input and returns corresponding value from the scale.
 * @param {Number} params.min Minimum value of the data set. Could be calculated automatically if not provided.
 * @param {Number} params.min Maximum value of the data set. Could be calculated automatically if not provided.
 */
jvm.DataSeries = function(params, elements, map) {
  var scaleConstructor;

  params = params || {};
  params.attribute = params.attribute || 'fill';

  this.elements = elements;
  this.params = params;
  this.map = map;

  if (params.attributes) {
    this.setAttributes(params.attributes);
  }

  if (jvm.$.isArray(params.scale)) {
    scaleConstructor = (params.attribute === 'fill' || params.attribute === 'stroke') ? jvm.ColorScale : jvm.NumericScale;
    this.scale = new scaleConstructor(params.scale, params.normalizeFunction, params.min, params.max);
  } else if (params.scale) {
    this.scale = new jvm.OrdinalScale(params.scale);
  } else {
    this.scale = new jvm.SimpleScale(params.scale);
  }

  this.values = params.values || {};
  this.setValues(this.values);

  if (this.params.legend) {
    this.legend = new jvm.Legend($.extend({
      map: this.map,
      series: this
    }, this.params.legend))
  }
};

jvm.DataSeries.prototype = {
  setAttributes: function(key, attr){
    var attrs = key,
        code;

    if (typeof key == 'string') {
      if (this.elements[key]) {
        this.elements[key].setStyle(this.params.attribute, attr);
      }
    } else {
      for (code in attrs) {
        if (this.elements[code]) {
          this.elements[code].element.setStyle(this.params.attribute, attrs[code]);
        }
      }
    }
  },

  /**
   * Set values for the data set.
   * @param {Object} values Object which maps codes of regions or markers to values.
   */
  setValues: function(values) {
    var max = -Number.MAX_VALUE,
        min = Number.MAX_VALUE,
        val,
        cc,
        attrs = {};

    if (!(this.scale instanceof jvm.OrdinalScale) && !(this.scale instanceof jvm.SimpleScale)) {
      // we have a color scale as an array
      if (typeof this.params.min === 'undefined' || typeof this.params.max === 'undefined') {
        // min and/or max are not defined, so calculate them
        for (cc in values) {
          val = parseFloat(values[cc]);
          if (val > max) max = val;
          if (val < min) min = val;
        }
      }

      if (typeof this.params.min === 'undefined') {
        this.scale.setMin(min);
        this.params.min = min;
      } else {
        this.scale.setMin(this.params.min);
      }

      if (typeof this.params.max === 'undefined') {
        this.scale.setMax(max);
        this.params.max = max;
      } else {
        this.scale.setMax(this.params.max);
      }

      for (cc in values) {
        if (cc != 'indexOf') {
          val = parseFloat(values[cc]);
          if (!isNaN(val)) {
            attrs[cc] = this.scale.getValue(val);
          } else {
            attrs[cc] = this.elements[cc].element.style.initial[this.params.attribute];
          }
        }
      }
    } else {
      for (cc in values) {
        if (values[cc]) {
          attrs[cc] = this.scale.getValue(values[cc]);
        } else {
          attrs[cc] = this.elements[cc].element.style.initial[this.params.attribute];
        }
      }
    }

    this.setAttributes(attrs);
    jvm.$.extend(this.values, values);
  },

  clear: function(){
    var key,
        attrs = {};

    for (key in this.values) {
      if (this.elements[key]) {
        attrs[key] = this.elements[key].element.shape.style.initial[this.params.attribute];
      }
    }
    this.setAttributes(attrs);
    this.values = {};
  },

  /**
   * Set scale of the data series.
   * @param {Array} scale Values representing scale.
   */
  setScale: function(scale) {
    this.scale.setScale(scale);
    if (this.values) {
      this.setValues(this.values);
    }
  },

  /**
   * Set normalize function of the data series.
   * @param {Function|String} normilizeFunction.
   */
  setNormalizeFunction: function(f) {
    this.scale.setNormalizeFunction(f);
    if (this.values) {
      this.setValues(this.values);
    }
  }
};
/**
 * Contains methods for transforming point on sphere to
 * Cartesian coordinates using various projections.
 * @class
 */
jvm.Proj = {
  degRad: 180 / Math.PI,
  radDeg: Math.PI / 180,
  radius: 6381372,

  sgn: function(n){
    if (n > 0) {
      return 1;
    } else if (n < 0) {
      return -1;
    } else {
      return n;
    }
  },

  /**
   * Converts point on sphere to the Cartesian coordinates using Miller projection
   * @param {Number} lat Latitude in degrees
   * @param {Number} lng Longitude in degrees
   * @param {Number} c Central meridian in degrees
   */
  mill: function(lat, lng, c){
    return {
      x: this.radius * (lng - c) * this.radDeg,
      y: - this.radius * Math.log(Math.tan((45 + 0.4 * lat) * this.radDeg)) / 0.8
    };
  },

  /**
   * Inverse function of mill()
   * Converts Cartesian coordinates to point on sphere using Miller projection
   * @param {Number} x X of point in Cartesian system as integer
   * @param {Number} y Y of point in Cartesian system as integer
   * @param {Number} c Central meridian in degrees
   */
  mill_inv: function(x, y, c){
    return {
      lat: (2.5 * Math.atan(Math.exp(0.8 * y / this.radius)) - 5 * Math.PI / 8) * this.degRad,
      lng: (c * this.radDeg + x / this.radius) * this.degRad
    };
  },

  /**
   * Converts point on sphere to the Cartesian coordinates using Mercator projection
   * @param {Number} lat Latitude in degrees
   * @param {Number} lng Longitude in degrees
   * @param {Number} c Central meridian in degrees
   */
  merc: function(lat, lng, c){
    return {
      x: this.radius * (lng - c) * this.radDeg,
      y: - this.radius * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360))
    };
  },

  /**
   * Inverse function of merc()
   * Converts Cartesian coordinates to point on sphere using Mercator projection
   * @param {Number} x X of point in Cartesian system as integer
   * @param {Number} y Y of point in Cartesian system as integer
   * @param {Number} c Central meridian in degrees
   */
  merc_inv: function(x, y, c){
    return {
      lat: (2 * Math.atan(Math.exp(y / this.radius)) - Math.PI / 2) * this.degRad,
      lng: (c * this.radDeg + x / this.radius) * this.degRad
    };
  },

  /**
   * Converts point on sphere to the Cartesian coordinates using Albers Equal-Area Conic
   * projection
   * @see <a href="http://mathworld.wolfram.com/AlbersEqual-AreaConicProjection.html">Albers Equal-Area Conic projection</a>
   * @param {Number} lat Latitude in degrees
   * @param {Number} lng Longitude in degrees
   * @param {Number} c Central meridian in degrees
   */
  aea: function(lat, lng, c){
    var fi0 = 0,
        lambda0 = c * this.radDeg,
        fi1 = 29.5 * this.radDeg,
        fi2 = 45.5 * this.radDeg,
        fi = lat * this.radDeg,
        lambda = lng * this.radDeg,
        n = (Math.sin(fi1)+Math.sin(fi2)) / 2,
        C = Math.cos(fi1)*Math.cos(fi1)+2*n*Math.sin(fi1),
        theta = n*(lambda-lambda0),
        ro = Math.sqrt(C-2*n*Math.sin(fi))/n,
        ro0 = Math.sqrt(C-2*n*Math.sin(fi0))/n;

    return {
      x: ro * Math.sin(theta) * this.radius,
      y: - (ro0 - ro * Math.cos(theta)) * this.radius
    };
  },

  /**
   * Converts Cartesian coordinates to the point on sphere using Albers Equal-Area Conic
   * projection
   * @see <a href="http://mathworld.wolfram.com/AlbersEqual-AreaConicProjection.html">Albers Equal-Area Conic projection</a>
   * @param {Number} x X of point in Cartesian system as integer
   * @param {Number} y Y of point in Cartesian system as integer
   * @param {Number} c Central meridian in degrees
   */
  aea_inv: function(xCoord, yCoord, c){
    var x = xCoord / this.radius,
        y = yCoord / this.radius,
        fi0 = 0,
        lambda0 = c * this.radDeg,
        fi1 = 29.5 * this.radDeg,
        fi2 = 45.5 * this.radDeg,
        n = (Math.sin(fi1)+Math.sin(fi2)) / 2,
        C = Math.cos(fi1)*Math.cos(fi1)+2*n*Math.sin(fi1),
        ro0 = Math.sqrt(C-2*n*Math.sin(fi0))/n,
        ro = Math.sqrt(x*x+(ro0-y)*(ro0-y)),
        theta = Math.atan( x / (ro0 - y) );

    return {
      lat: (Math.asin((C - ro * ro * n * n) / (2 * n))) * this.degRad,
      lng: (lambda0 + theta / n) * this.degRad
    };
  },

  /**
   * Converts point on sphere to the Cartesian coordinates using Lambert conformal
   * conic projection
   * @see <a href="http://mathworld.wolfram.com/LambertConformalConicProjection.html">Lambert Conformal Conic Projection</a>
   * @param {Number} lat Latitude in degrees
   * @param {Number} lng Longitude in degrees
   * @param {Number} c Central meridian in degrees
   */
  lcc: function(lat, lng, c){
    var fi0 = 0,
        lambda0 = c * this.radDeg,
        lambda = lng * this.radDeg,
        fi1 = 33 * this.radDeg,
        fi2 = 45 * this.radDeg,
        fi = lat * this.radDeg,
        n = Math.log( Math.cos(fi1) * (1 / Math.cos(fi2)) ) / Math.log( Math.tan( Math.PI / 4 + fi2 / 2) * (1 / Math.tan( Math.PI / 4 + fi1 / 2) ) ),
        F = ( Math.cos(fi1) * Math.pow( Math.tan( Math.PI / 4 + fi1 / 2 ), n ) ) / n,
        ro = F * Math.pow( 1 / Math.tan( Math.PI / 4 + fi / 2 ), n ),
        ro0 = F * Math.pow( 1 / Math.tan( Math.PI / 4 + fi0 / 2 ), n );

    return {
      x: ro * Math.sin( n * (lambda - lambda0) ) * this.radius,
      y: - (ro0 - ro * Math.cos( n * (lambda - lambda0) ) ) * this.radius
    };
  },

  /**
   * Converts Cartesian coordinates to the point on sphere using Lambert conformal conic
   * projection
   * @see <a href="http://mathworld.wolfram.com/LambertConformalConicProjection.html">Lambert Conformal Conic Projection</a>
   * @param {Number} x X of point in Cartesian system as integer
   * @param {Number} y Y of point in Cartesian system as integer
   * @param {Number} c Central meridian in degrees
   */
  lcc_inv: function(xCoord, yCoord, c){
    var x = xCoord / this.radius,
        y = yCoord / this.radius,
        fi0 = 0,
        lambda0 = c * this.radDeg,
        fi1 = 33 * this.radDeg,
        fi2 = 45 * this.radDeg,
        n = Math.log( Math.cos(fi1) * (1 / Math.cos(fi2)) ) / Math.log( Math.tan( Math.PI / 4 + fi2 / 2) * (1 / Math.tan( Math.PI / 4 + fi1 / 2) ) ),
        F = ( Math.cos(fi1) * Math.pow( Math.tan( Math.PI / 4 + fi1 / 2 ), n ) ) / n,
        ro0 = F * Math.pow( 1 / Math.tan( Math.PI / 4 + fi0 / 2 ), n ),
        ro = this.sgn(n) * Math.sqrt(x*x+(ro0-y)*(ro0-y)),
        theta = Math.atan( x / (ro0 - y) );

    return {
      lat: (2 * Math.atan(Math.pow(F/ro, 1/n)) - Math.PI / 2) * this.degRad,
      lng: (lambda0 + theta / n) * this.degRad
    };
  }
};jvm.MapObject = function(config){};

jvm.MapObject.prototype.getLabelText = function(key){
  var text;

  if (this.config.label) {
    if (typeof this.config.label.render === 'function') {
      text = this.config.label.render(key);
    } else {
      text = key;
    }
  } else {
    text = null;
  }
  return text;
}

jvm.MapObject.prototype.getLabelOffsets = function(key){
  var offsets;

  if (this.config.label) {
    if (typeof this.config.label.offsets === 'function') {
      offsets = this.config.label.offsets(key);
    } else if (typeof this.config.label.offsets === 'object') {
      offsets = this.config.label.offsets[key];
    }
  }
  return offsets || [0, 0];
}

/**
 * Set hovered state to the element. Hovered state means mouse cursor is over element. Styles will be updates respectively.
 * @param {Boolean} isHovered <code>true</code> to make element hovered, <code>false</code> otherwise.
 */
jvm.MapObject.prototype.setHovered = function(isHovered){
  if (this.isHovered !== isHovered) {
    this.isHovered = isHovered;
    this.shape.isHovered = isHovered;
    this.shape.updateStyle();
    if (this.label) {
      this.label.isHovered = isHovered;
      this.label.updateStyle();
    }
  }
};

/**
 * Set selected state to the element. Styles will be updates respectively.
 * @param {Boolean} isSelected <code>true</code> to make element selected, <code>false</code> otherwise.
 */
jvm.MapObject.prototype.setSelected = function(isSelected){
  if (this.isSelected !== isSelected) {
    this.isSelected = isSelected;
    this.shape.isSelected = isSelected;
    this.shape.updateStyle();
    if (this.label) {
      this.label.isSelected = isSelected;
      this.label.updateStyle();
    }
    jvm.$(this.shape).trigger('selected', [isSelected]);
  }
};

jvm.MapObject.prototype.setStyle = function(){
	this.shape.setStyle.apply(this.shape, arguments);
};

jvm.MapObject.prototype.remove = function(){
  this.shape.remove();
  if (this.label) {
    this.label.remove();
  }
};jvm.Region = function(config){
  var bbox,
      text,
      offsets,
      labelDx,
      labelDy;

  this.config = config;
  this.map = this.config.map;

  this.shape = config.canvas.addPath({
    d: config.path,
    'data-code': config.code
  }, config.style, config.canvas.rootElement);
  this.shape.addClass('jvectormap-region jvectormap-element');

  bbox = this.shape.getBBox();

  text = this.getLabelText(config.code);
  if (this.config.label && text) {
    offsets = this.getLabelOffsets(config.code);
    this.labelX = bbox.x + bbox.width / 2 + offsets[0];
    this.labelY = bbox.y + bbox.height / 2 + offsets[1];
    this.label = config.canvas.addText({
      text: text,
      'text-anchor': 'middle',
      'alignment-baseline': 'central',
      x: this.labelX,
      y: this.labelY,
      'data-code': config.code
    }, config.labelStyle, config.labelsGroup);
    this.label.addClass('jvectormap-region jvectormap-element');
  }
};

jvm.inherits(jvm.Region, jvm.MapObject);

jvm.Region.prototype.updateLabelPosition = function(){
  if (this.label) {
    this.label.set({
      x: this.labelX * this.map.scale + this.map.transX * this.map.scale,
      y: this.labelY * this.map.scale + this.map.transY * this.map.scale
    });
  }
};jvm.Marker = function(config){
  var text,
      offsets;

  this.config = config;
  this.map = this.config.map;

  this.isImage = !!this.config.style.initial.image;
  this.createShape();

  text = this.getLabelText(config.index);
  if (this.config.label && text) {
    this.offsets = this.getLabelOffsets(config.index);
    this.labelX = config.cx / this.map.scale - this.map.transX;
    this.labelY = config.cy / this.map.scale - this.map.transY;
    this.label = config.canvas.addText({
      text: text,
      'data-index': config.index,
      dy: "0.6ex",
      x: this.labelX,
      y: this.labelY
    }, config.labelStyle, config.labelsGroup);

    this.label.addClass('jvectormap-marker jvectormap-element');
  }
};

jvm.inherits(jvm.Marker, jvm.MapObject);

jvm.Marker.prototype.createShape = function(){
  var that = this;

  if (this.shape) {
    this.shape.remove();
  }
  this.shape = this.config.canvas[this.isImage ? 'addImage' : 'addCircle']({
    "data-index": this.config.index,
    cx: this.config.cx,
    cy: this.config.cy
  }, this.config.style, this.config.group);

  this.shape.addClass('jvectormap-marker jvectormap-element');

  if (this.isImage) {
    jvm.$(this.shape.node).on('imageloaded', function(){
      that.updateLabelPosition();
    });
  }
};

jvm.Marker.prototype.updateLabelPosition = function(){
  if (this.label) {
    this.label.set({
      x: this.labelX * this.map.scale + this.offsets[0] +
         this.map.transX * this.map.scale + 5 + (this.isImage ? (this.shape.width || 0) / 2 : this.shape.properties.r),
      y: this.labelY * this.map.scale + this.map.transY * this.map.scale + this.offsets[1]
    });
  }
};

jvm.Marker.prototype.setStyle = function(property, value){
  var isImage;

  jvm.Marker.parentClass.prototype.setStyle.apply(this, arguments);

  if (property === 'r') {
    this.updateLabelPosition();
  }

  isImage = !!this.shape.get('image');
  if (isImage != this.isImage) {
    this.isImage = isImage;
    this.config.style = jvm.$.extend(true, {}, this.shape.style);
    this.createShape();
  }
};/**
 * Creates map, draws paths, binds events.
 * @constructor
 * @param {Object} params Parameters to initialize map with.
 * @param {String} params.map Name of the map in the format <code>territory_proj_lang</code> where <code>territory</code> is a unique code or name of the territory which the map represents (ISO 3166 standard is used where possible), <code>proj</code> is a name of projection used to generate representation of the map on the plane (projections are named according to the conventions of proj4 utility) and <code>lang</code> is a code of the language, used for the names of regions.
 * @param {String} params.backgroundColor Background color of the map in CSS format.
 * @param {Boolean} params.zoomOnScroll When set to true map could be zoomed using mouse scroll. Default value is <code>true</code>.
 * @param {Boolean} params.zoomOnScrollSpeed Mouse scroll speed. Number from 1 to 10. Default value is <code>3</code>.
 * @param {Boolean} params.panOnDrag When set to true, the map pans when being dragged. Default value is <code>true</code>.
 * @param {Number} params.zoomMax Indicates the maximum zoom ratio which could be reached zooming the map. Default value is <code>8</code>.
 * @param {Number} params.zoomMin Indicates the minimum zoom ratio which could be reached zooming the map. Default value is <code>1</code>.
 * @param {Number} params.zoomStep Indicates the multiplier used to zoom map with +/- buttons. Default value is <code>1.6</code>.
 * @param {Boolean} params.zoomAnimate Indicates whether or not to animate changing of map zoom with zoom buttons.
 * @param {Boolean} params.regionsSelectable When set to true regions of the map could be selected. Default value is <code>false</code>.
 * @param {Boolean} params.regionsSelectableOne Allow only one region to be selected at the moment. Default value is <code>false</code>.
 * @param {Boolean} params.markersSelectable When set to true markers on the map could be selected. Default value is <code>false</code>.
 * @param {Boolean} params.markersSelectableOne Allow only one marker to be selected at the moment. Default value is <code>false</code>.
 * @param {Object} params.regionStyle Set the styles for the map's regions. Each region or marker has four states: <code>initial</code> (default state), <code>hover</code> (when the mouse cursor is over the region or marker), <code>selected</code> (when region or marker is selected), <code>selectedHover</code> (when the mouse cursor is over the region or marker and it's selected simultaneously). Styles could be set for each of this states. Default value for that parameter is:
<pre>{
  initial: {
    fill: 'white',
    "fill-opacity": 1,
    stroke: 'none',
    "stroke-width": 0,
    "stroke-opacity": 1
  },
  hover: {
    "fill-opacity": 0.8,
    cursor: 'pointer'
  },
  selected: {
    fill: 'yellow'
  },
  selectedHover: {
  }
}</pre>
* @param {Object} params.regionLabelStyle Set the styles for the regions' labels. Each region or marker has four states: <code>initial</code> (default state), <code>hover</code> (when the mouse cursor is over the region or marker), <code>selected</code> (when region or marker is selected), <code>selectedHover</code> (when the mouse cursor is over the region or marker and it's selected simultaneously). Styles could be set for each of this states. Default value for that parameter is:
<pre>{
  initial: {
    'font-family': 'Verdana',
    'font-size': '12',
    'font-weight': 'bold',
    cursor: 'default',
    fill: 'black'
  },
  hover: {
    cursor: 'pointer'
  }
}</pre>
 * @param {Object} params.markerStyle Set the styles for the map's markers. Any parameter suitable for <code>regionStyle</code> could be used as well as numeric parameter <code>r</code> to set the marker's radius. Default value for that parameter is:
<pre>{
  initial: {
    fill: 'grey',
    stroke: '#505050',
    "fill-opacity": 1,
    "stroke-width": 1,
    "stroke-opacity": 1,
    r: 5
  },
  hover: {
    stroke: 'black',
    "stroke-width": 2,
    cursor: 'pointer'
  },
  selected: {
    fill: 'blue'
  },
  selectedHover: {
  }
}</pre>
 * @param {Object} params.markerLabelStyle Set the styles for the markers' labels. Default value for that parameter is:
<pre>{
  initial: {
    'font-family': 'Verdana',
    'font-size': '12',
    'font-weight': 'bold',
    cursor: 'default',
    fill: 'black'
  },
  hover: {
    cursor: 'pointer'
  }
}</pre>
 * @param {Object|Array} params.markers Set of markers to add to the map during initialization. In case of array is provided, codes of markers will be set as string representations of array indexes. Each marker is represented by <code>latLng</code> (array of two numeric values), <code>name</code> (string which will be show on marker's tip) and any marker styles.
 * @param {Object} params.series Object with two keys: <code>markers</code> and <code>regions</code>. Each of which is an array of series configs to be applied to the respective map elements. See <a href="jvm.DataSeries.html">DataSeries</a> description for a list of parameters available.
 * @param {Object|String} params.focusOn This parameter sets the initial position and scale of the map viewport. See <code>setFocus</code> docuemntation for possible parameters.
 * @param {Object} params.labels Defines parameters for rendering static labels. Object could contain two keys: <code>regions</code> and <code>markers</code>. Each key value defines configuration object with the following possible options:
<ul>
  <li><code>render {Function}</code> - defines method for converting region code or marker index to actual label value.</li>
  <li><code>offsets {Object|Function}</code> - provides method or object which could be used to define label offset by region code or marker index.</li>
</ul>
<b>Plase note: static labels feature is not supported in Internet Explorer 8 and below.</b>
 * @param {Array|Object|String} params.selectedRegions Set initially selected regions.
 * @param {Array|Object|String} params.selectedMarkers Set initially selected markers.
 * @param {Function} params.onRegionTipShow <code>(Event e, Object tip, String code)</code> Will be called right before the region tip is going to be shown.
 * @param {Function} params.onRegionOver <code>(Event e, String code)</code> Will be called on region mouse over event.
 * @param {Function} params.onRegionOut <code>(Event e, String code)</code> Will be called on region mouse out event.
 * @param {Function} params.onRegionClick <code>(Event e, String code)</code> Will be called on region click event.
 * @param {Function} params.onRegionSelected <code>(Event e, String code, Boolean isSelected, Array selectedRegions)</code> Will be called when region is (de)selected. <code>isSelected</code> parameter of the callback indicates whether region is selected or not. <code>selectedRegions</code> contains codes of all currently selected regions.
 * @param {Function} params.onMarkerTipShow <code>(Event e, Object tip, String code)</code> Will be called right before the marker tip is going to be shown.
 * @param {Function} params.onMarkerOver <code>(Event e, String code)</code> Will be called on marker mouse over event.
 * @param {Function} params.onMarkerOut <code>(Event e, String code)</code> Will be called on marker mouse out event.
 * @param {Function} params.onMarkerClick <code>(Event e, String code)</code> Will be called on marker click event.
 * @param {Function} params.onMarkerSelected <code>(Event e, String code, Boolean isSelected, Array selectedMarkers)</code> Will be called when marker is (de)selected. <code>isSelected</code> parameter of the callback indicates whether marker is selected or not. <code>selectedMarkers</code> contains codes of all currently selected markers.
 * @param {Function} params.onViewportChange <code>(Event e, Number scale)</code> Triggered when the map's viewport is changed (map was panned or zoomed).
 */
jvm.Map = function(params) {
  var map = this,
      e;

  this.params = jvm.$.extend(true, {}, jvm.Map.defaultParams, params);

  if (!jvm.Map.maps[this.params.map]) {
    throw new Error('Attempt to use map which was not loaded: '+this.params.map);
  }

  this.mapData = jvm.Map.maps[this.params.map];
  this.markers = {};
  this.regions = {};
  this.regionsColors = {};
  this.regionsData = {};

  this.container = jvm.$('<div>').addClass('jvectormap-container');
  if (this.params.container) {
    this.params.container.append( this.container );
  }
  this.container.data('mapObject', this);

  this.defaultWidth = this.mapData.width;
  this.defaultHeight = this.mapData.height;

  this.setBackgroundColor(this.params.backgroundColor);

  this.onResize = function(){
    map.updateSize();
  }
  jvm.$(window).resize(this.onResize);

  for (e in jvm.Map.apiEvents) {
    if (this.params[e]) {
      this.container.bind(jvm.Map.apiEvents[e]+'.jvectormap', this.params[e]);
    }
  }

  this.canvas = new jvm.VectorCanvas(this.container[0], this.width, this.height);

  if (this.params.bindTouchEvents) {
    if (('ontouchstart' in window) || (window.DocumentTouch && document instanceof DocumentTouch)) {
      this.bindContainerTouchEvents();
    } else if (window.MSGesture) {
      this.bindContainerPointerEvents();
    }
  }
  this.bindContainerEvents();
  this.bindElementEvents();
  this.createTip();
  if (this.params.zoomButtons) {
    this.bindZoomButtons();
  }

  this.createRegions();
  this.createMarkers(this.params.markers || {});

  this.updateSize();

  if (this.params.focusOn) {
    if (typeof this.params.focusOn === 'string') {
      this.params.focusOn = {region: this.params.focusOn};
    } else if (jvm.$.isArray(this.params.focusOn)) {
      this.params.focusOn = {regions: this.params.focusOn};
    }
    this.setFocus(this.params.focusOn);
  }

  if (this.params.selectedRegions) {
    this.setSelectedRegions(this.params.selectedRegions);
  }
  if (this.params.selectedMarkers) {
    this.setSelectedMarkers(this.params.selectedMarkers);
  }

  this.legendCntHorizontal = jvm.$('<div/>').addClass('jvectormap-legend-cnt jvectormap-legend-cnt-h');
  this.legendCntVertical = jvm.$('<div/>').addClass('jvectormap-legend-cnt jvectormap-legend-cnt-v');
  this.container.append(this.legendCntHorizontal);
  this.container.append(this.legendCntVertical);

  if (this.params.series) {
    this.createSeries();
  }
};

jvm.Map.prototype = {
  transX: 0,
  transY: 0,
  scale: 1,
  baseTransX: 0,
  baseTransY: 0,
  baseScale: 1,

  width: 0,
  height: 0,

  /**
   * Set background color of the map.
   * @param {String} backgroundColor Background color in CSS format.
   */
  setBackgroundColor: function(backgroundColor) {
    this.container.css('background-color', backgroundColor);
  },

  resize: function() {
    var curBaseScale = this.baseScale;
    if (this.width / this.height > this.defaultWidth / this.defaultHeight) {
      this.baseScale = this.height / this.defaultHeight;
      this.baseTransX = Math.abs(this.width - this.defaultWidth * this.baseScale) / (2 * this.baseScale);
    } else {
      this.baseScale = this.width / this.defaultWidth;
      this.baseTransY = Math.abs(this.height - this.defaultHeight * this.baseScale) / (2 * this.baseScale);
    }
    this.scale *= this.baseScale / curBaseScale;
    this.transX *= this.baseScale / curBaseScale;
    this.transY *= this.baseScale / curBaseScale;
  },

  /**
   * Synchronize the size of the map with the size of the container. Suitable in situations where the size of the container is changed programmatically or container is shown after it became visible.
   */
  updateSize: function(){
    this.width = this.container.width();
    this.height = this.container.height();
    this.resize();
    this.canvas.setSize(this.width, this.height);
    this.applyTransform();
  },

  /**
   * Reset all the series and show the map with the initial zoom.
   */
  reset: function() {
    var key,
        i;

    for (key in this.series) {
      for (i = 0; i < this.series[key].length; i++) {
        this.series[key][i].clear();
      }
    }
    this.scale = this.baseScale;
    this.transX = this.baseTransX;
    this.transY = this.baseTransY;
    this.applyTransform();
  },

  applyTransform: function() {
    var maxTransX,
        maxTransY,
        minTransX,
        minTransY;

    if (this.defaultWidth * this.scale <= this.width) {
      maxTransX = (this.width - this.defaultWidth * this.scale) / (2 * this.scale);
      minTransX = (this.width - this.defaultWidth * this.scale) / (2 * this.scale);
    } else {
      maxTransX = 0;
      minTransX = (this.width - this.defaultWidth * this.scale) / this.scale;
    }

    if (this.defaultHeight * this.scale <= this.height) {
      maxTransY = (this.height - this.defaultHeight * this.scale) / (2 * this.scale);
      minTransY = (this.height - this.defaultHeight * this.scale) / (2 * this.scale);
    } else {
      maxTransY = 0;
      minTransY = (this.height - this.defaultHeight * this.scale) / this.scale;
    }

    if (this.transY > maxTransY) {
      this.transY = maxTransY;
    } else if (this.transY < minTransY) {
      this.transY = minTransY;
    }
    if (this.transX > maxTransX) {
      this.transX = maxTransX;
    } else if (this.transX < minTransX) {
      this.transX = minTransX;
    }

    this.canvas.applyTransformParams(this.scale, this.transX, this.transY);

    if (this.markers) {
      this.repositionMarkers();
    }

    this.repositionLabels();

    this.container.trigger('viewportChange', [this.scale/this.baseScale, this.transX, this.transY]);
  },

  bindContainerEvents: function(){
    var mouseDown = false,
        oldPageX,
        oldPageY,
        map = this;

    if (this.params.panOnDrag) {
      this.container.mousemove(function(e){
        if (mouseDown) {
          map.transX -= (oldPageX - e.pageX) / map.scale;
          map.transY -= (oldPageY - e.pageY) / map.scale;

          map.applyTransform();

          oldPageX = e.pageX;
          oldPageY = e.pageY;
        }
        return false;
      }).mousedown(function(e){
        mouseDown = true;
        oldPageX = e.pageX;
        oldPageY = e.pageY;
        return false;
      });

      this.onContainerMouseUp = function(){
        mouseDown = false;
      };
      jvm.$('body').mouseup(this.onContainerMouseUp);
    }

    if (this.params.zoomOnScroll) {
      this.container.mousewheel(function(event, delta, deltaX, deltaY) {
        var offset = jvm.$(map.container).offset(),
            centerX = event.pageX - offset.left,
            centerY = event.pageY - offset.top,
            zoomStep = Math.pow(1 + map.params.zoomOnScrollSpeed / 1000, event.deltaFactor * event.deltaY);

        map.tip.hide();

        map.setScale(map.scale * zoomStep, centerX, centerY);
        event.preventDefault();
      });
    }
  },

  bindContainerTouchEvents: function(){
    var touchStartScale,
        touchStartDistance,
        map = this,
        touchX,
        touchY,
        centerTouchX,
        centerTouchY,
        lastTouchesLength,
        handleTouchEvent = function(e){
          var touches = e.originalEvent.touches,
              offset,
              scale,
              transXOld,
              transYOld;

          if (e.type == 'touchstart') {
            lastTouchesLength = 0;
          }

          if (touches.length == 1) {
            if (lastTouchesLength == 1) {
              transXOld = map.transX;
              transYOld = map.transY;
              map.transX -= (touchX - touches[0].pageX) / map.scale;
              map.transY -= (touchY - touches[0].pageY) / map.scale;
              map.applyTransform();
              map.tip.hide();
              if (transXOld != map.transX || transYOld != map.transY) {
                e.preventDefault();
              }
            }
            touchX = touches[0].pageX;
            touchY = touches[0].pageY;
          } else if (touches.length == 2) {
            if (lastTouchesLength == 2) {
              scale = Math.sqrt(
                Math.pow(touches[0].pageX - touches[1].pageX, 2) +
                Math.pow(touches[0].pageY - touches[1].pageY, 2)
              ) / touchStartDistance;
              map.setScale(
                touchStartScale * scale,
                centerTouchX,
                centerTouchY
              )
              map.tip.hide();
              e.preventDefault();
            } else {
              offset = jvm.$(map.container).offset();
              if (touches[0].pageX > touches[1].pageX) {
                centerTouchX = touches[1].pageX + (touches[0].pageX - touches[1].pageX) / 2;
              } else {
                centerTouchX = touches[0].pageX + (touches[1].pageX - touches[0].pageX) / 2;
              }
              if (touches[0].pageY > touches[1].pageY) {
                centerTouchY = touches[1].pageY + (touches[0].pageY - touches[1].pageY) / 2;
              } else {
                centerTouchY = touches[0].pageY + (touches[1].pageY - touches[0].pageY) / 2;
              }
              centerTouchX -= offset.left;
              centerTouchY -= offset.top;
              touchStartScale = map.scale;
              touchStartDistance = Math.sqrt(
                Math.pow(touches[0].pageX - touches[1].pageX, 2) +
                Math.pow(touches[0].pageY - touches[1].pageY, 2)
              );
            }
          }

          lastTouchesLength = touches.length;
        };

    jvm.$(this.container).bind('touchstart', handleTouchEvent);
    jvm.$(this.container).bind('touchmove', handleTouchEvent);
  },

  bindContainerPointerEvents: function(){
    var map = this,
        gesture = new MSGesture(),
        element = this.container[0],
        handlePointerDownEvent = function(e){
          gesture.addPointer(e.pointerId);
        },
        handleGestureEvent = function(e){
          var offset,
              scale,
              transXOld,
              transYOld;

          if (e.translationX != 0 || e.translationY != 0) {
            transXOld = map.transX;
            transYOld = map.transY;
            map.transX += e.translationX / map.scale;
            map.transY += e.translationY / map.scale;
            map.applyTransform();
            map.tip.hide();
            if (transXOld != map.transX || transYOld != map.transY) {
              e.preventDefault();
            }
          }
          if (e.scale != 1) {
            map.setScale(
              map.scale * e.scale,
              e.offsetX,
              e.offsetY
            )
            map.tip.hide();
            e.preventDefault();
          }
        };

    gesture.target = element;
    element.addEventListener("MSGestureChange", handleGestureEvent, false);
    element.addEventListener("pointerdown", handlePointerDownEvent, false);
  },

  bindElementEvents: function(){
    var map = this,
        pageX,
        pageY,
        mouseMoved;

    this.container.mousemove(function(e){
      if (Math.abs(pageX - e.pageX) + Math.abs(pageY - e.pageY) > 2) {
        mouseMoved = true;
      }
    });

    /* Can not use common class selectors here because of the bug in jQuery
       SVG handling, use with caution. */
    this.container.delegate("[class~='jvectormap-element']", 'mouseover mouseout', function(e){
      var baseVal = jvm.$(this).attr('class').baseVal || jvm.$(this).attr('class'),
          type = baseVal.indexOf('jvectormap-region') === -1 ? 'marker' : 'region',
          code = type == 'region' ? jvm.$(this).attr('data-code') : jvm.$(this).attr('data-index'),
          element = type == 'region' ? map.regions[code].element : map.markers[code].element,
          tipText = type == 'region' ? map.mapData.paths[code].name : (map.markers[code].config.name || ''),
          tipShowEvent = jvm.$.Event(type+'TipShow.jvectormap'),
          overEvent = jvm.$.Event(type+'Over.jvectormap');

      if (e.type == 'mouseover') {
        map.container.trigger(overEvent, [code]);
        if (!overEvent.isDefaultPrevented()) {
          element.setHovered(true);
        }

        map.tip.text(tipText);
        map.container.trigger(tipShowEvent, [map.tip, code]);
        if (!tipShowEvent.isDefaultPrevented()) {
          map.tip.show();
          map.tipWidth = map.tip.width();
          map.tipHeight = map.tip.height();
        }
      } else {
        element.setHovered(false);
        map.tip.hide();
        map.container.trigger(type+'Out.jvectormap', [code]);
      }
    });

    /* Can not use common class selectors here because of the bug in jQuery
       SVG handling, use with caution. */
    this.container.delegate("[class~='jvectormap-element']", 'mousedown', function(e){
      pageX = e.pageX;
      pageY = e.pageY;
      mouseMoved = false;
    });

    /* Can not use common class selectors here because of the bug in jQuery
       SVG handling, use with caution. */
    this.container.delegate("[class~='jvectormap-element']", 'mouseup', function(){
      var baseVal = jvm.$(this).attr('class').baseVal ? jvm.$(this).attr('class').baseVal : jvm.$(this).attr('class'),
          type = baseVal.indexOf('jvectormap-region') === -1 ? 'marker' : 'region',
          code = type == 'region' ? jvm.$(this).attr('data-code') : jvm.$(this).attr('data-index'),
          clickEvent = jvm.$.Event(type+'Click.jvectormap'),
          element = type == 'region' ? map.regions[code].element : map.markers[code].element;

      if (!mouseMoved) {
        map.container.trigger(clickEvent, [code]);
        if ((type === 'region' && map.params.regionsSelectable) || (type === 'marker' && map.params.markersSelectable)) {
          if (!clickEvent.isDefaultPrevented()) {
            if (map.params[type+'sSelectableOne']) {
              map.clearSelected(type+'s');
            }
            element.setSelected(!element.isSelected);
          }
        }
      }
    });
  },

  bindZoomButtons: function() {
    var map = this;

    jvm.$('<div/>').addClass('jvectormap-zoomin').text('+').appendTo(this.container);
    jvm.$('<div/>').addClass('jvectormap-zoomout').html('&#x2212;').appendTo(this.container);

    this.container.find('.jvectormap-zoomin').click(function(){
      map.setScale(map.scale * map.params.zoomStep, map.width / 2, map.height / 2, false, map.params.zoomAnimate);
    });
    this.container.find('.jvectormap-zoomout').click(function(){
      map.setScale(map.scale / map.params.zoomStep, map.width / 2, map.height / 2, false, map.params.zoomAnimate);
    });
  },

  createTip: function(){
    var map = this;

    this.tip = jvm.$('<div/>').addClass('jvectormap-tip').appendTo(jvm.$('body'));

    this.container.mousemove(function(e){
      var left = e.pageX-15-map.tipWidth,
          top = e.pageY-15-map.tipHeight;

      if (left < 5) {
        left = e.pageX + 15;
      }
      if (top < 5) {
        top = e.pageY + 15;
      }

      map.tip.css({
        left: left,
        top: top
      });
    });
  },

  setScale: function(scale, anchorX, anchorY, isCentered, animate) {
    var viewportChangeEvent = jvm.$.Event('zoom.jvectormap'),
        interval,
        that = this,
        i = 0,
        count = Math.abs(Math.round((scale - this.scale) * 60 / Math.max(scale, this.scale))),
        scaleStart,
        scaleDiff,
        transXStart,
        transXDiff,
        transYStart,
        transYDiff,
        transX,
        transY,
        deferred = new jvm.$.Deferred();

    if (scale > this.params.zoomMax * this.baseScale) {
      scale = this.params.zoomMax * this.baseScale;
    } else if (scale < this.params.zoomMin * this.baseScale) {
      scale = this.params.zoomMin * this.baseScale;
    }

    if (typeof anchorX != 'undefined' && typeof anchorY != 'undefined') {
      zoomStep = scale / this.scale;
      if (isCentered) {
        transX = anchorX + this.defaultWidth * (this.width / (this.defaultWidth * scale)) / 2;
        transY = anchorY + this.defaultHeight * (this.height / (this.defaultHeight * scale)) / 2;
      } else {
        transX = this.transX - (zoomStep - 1) / scale * anchorX;
        transY = this.transY - (zoomStep - 1) / scale * anchorY;
      }
    }

    if (animate && count > 0)  {
      scaleStart = this.scale;
      scaleDiff = (scale - scaleStart) / count;
      transXStart = this.transX * this.scale;
      transYStart = this.transY * this.scale;
      transXDiff = (transX * scale - transXStart) / count;
      transYDiff = (transY * scale - transYStart) / count;
      interval = setInterval(function(){
        i += 1;
        that.scale = scaleStart + scaleDiff * i;
        that.transX = (transXStart + transXDiff * i) / that.scale;
        that.transY = (transYStart + transYDiff * i) / that.scale;
        that.applyTransform();
        if (i == count) {
          clearInterval(interval);
          that.container.trigger(viewportChangeEvent, [scale/that.baseScale]);
          deferred.resolve();
        }
      }, 10);
    } else {
      this.transX = transX;
      this.transY = transY;
      this.scale = scale;
      this.applyTransform();
      this.container.trigger(viewportChangeEvent, [scale/this.baseScale]);
      deferred.resolve();
    }

    return deferred;
  },

  /**
   * Set the map's viewport to the specific point and set zoom of the map to the specific level. Point and zoom level could be defined in two ways: using the code of some region to focus on or a central point and zoom level as numbers.
   * @param This method takes a configuration object as the single argument. The options passed to it are the following:
   * @param {Array} params.regions Array of region codes to zoom to.
   * @param {String} params.region Region code to zoom to.
   * @param {Number} params.scale Map scale to set.
   * @param {Number} params.lat Latitude to set viewport to.
   * @param {Number} params.lng Longitude to set viewport to.
   * @param {Number} params.x Number from 0 to 1 specifying the horizontal coordinate of the central point of the viewport.
   * @param {Number} params.y Number from 0 to 1 specifying the vertical coordinate of the central point of the viewport.
   * @param {Boolean} params.animate Indicates whether or not to animate the scale change and transition.
   */
  setFocus: function(config){
    var bbox,
        itemBbox,
        newBbox,
        codes,
        i,
        point;

    config = config || {};

    if (config.region) {
      codes = [config.region];
    } else if (config.regions) {
      codes = config.regions;
    }

    if (codes) {
      for (i = 0; i < codes.length; i++) {
        if (this.regions[codes[i]]) {
          itemBbox = this.regions[codes[i]].element.shape.getBBox();
          if (itemBbox) {
            if (typeof bbox == 'undefined') {
              bbox = itemBbox;
            } else {
              newBbox = {
                x: Math.min(bbox.x, itemBbox.x),
                y: Math.min(bbox.y, itemBbox.y),
                width: Math.max(bbox.x + bbox.width, itemBbox.x + itemBbox.width) - Math.min(bbox.x, itemBbox.x),
                height: Math.max(bbox.y + bbox.height, itemBbox.y + itemBbox.height) - Math.min(bbox.y, itemBbox.y)
              }
              bbox = newBbox;
            }
          }
        }
      }
      return this.setScale(
        Math.min(this.width / bbox.width, this.height / bbox.height),
        - (bbox.x + bbox.width / 2),
        - (bbox.y + bbox.height / 2),
        true,
        config.animate
      );
    } else {
      if (config.lat && config.lng) {
        point = this.latLngToPoint(config.lat, config.lng);
        config.x = this.transX - point.x / this.scale;
        config.y = this.transY - point.y / this.scale;
      } else if (config.x && config.y) {
        config.x *= -this.defaultWidth;
        config.y *= -this.defaultHeight;
      }
      return this.setScale(config.scale * this.baseScale, config.x, config.y, true, config.animate);
    }
  },

  getSelected: function(type){
    var key,
        selected = [];

    for (key in this[type]) {
      if (this[type][key].element.isSelected) {
        selected.push(key);
      }
    }
    return selected;
  },

  /**
   * Return the codes of currently selected regions.
   * @returns {Array}
   */
  getSelectedRegions: function(){
    return this.getSelected('regions');
  },

  /**
   * Return the codes of currently selected markers.
   * @returns {Array}
   */
  getSelectedMarkers: function(){
    return this.getSelected('markers');
  },

  setSelected: function(type, keys){
    var i;

    if (typeof keys != 'object') {
      keys = [keys];
    }

    if (jvm.$.isArray(keys)) {
      for (i = 0; i < keys.length; i++) {
        this[type][keys[i]].element.setSelected(true);
      }
    } else {
      for (i in keys) {
        this[type][i].element.setSelected(!!keys[i]);
      }
    }
  },

  /**
   * Set or remove selected state for the regions.
   * @param {String|Array|Object} keys If <code>String</code> or <code>Array</code> the region(s) with the corresponding code(s) will be selected. If <code>Object</code> was provided its keys are  codes of regions, state of which should be changed. Selected state will be set if value is true, removed otherwise.
   */
  setSelectedRegions: function(keys){
    this.setSelected('regions', keys);
  },

  /**
   * Set or remove selected state for the markers.
   * @param {String|Array|Object} keys If <code>String</code> or <code>Array</code> the marker(s) with the corresponding code(s) will be selected. If <code>Object</code> was provided its keys are  codes of markers, state of which should be changed. Selected state will be set if value is true, removed otherwise.
   */
  setSelectedMarkers: function(keys){
    this.setSelected('markers', keys);
  },

  clearSelected: function(type){
    var select = {},
        selected = this.getSelected(type),
        i;

    for (i = 0; i < selected.length; i++) {
      select[selected[i]] = false;
    };

    this.setSelected(type, select);
  },

  /**
   * Remove the selected state from all the currently selected regions.
   */
  clearSelectedRegions: function(){
    this.clearSelected('regions');
  },

  /**
   * Remove the selected state from all the currently selected markers.
   */
  clearSelectedMarkers: function(){
    this.clearSelected('markers');
  },

  /**
   * Return the instance of Map. Useful when instantiated as a jQuery plug-in.
   * @returns {Map}
   */
  getMapObject: function(){
    return this;
  },

  /**
   * Return the name of the region by region code.
   * @returns {String}
   */
  getRegionName: function(code){
    return this.mapData.paths[code].name;
  },

  createRegions: function(){
    var key,
        region,
        map = this;

    this.regionLabelsGroup = this.regionLabelsGroup || this.canvas.addGroup();

    for (key in this.mapData.paths) {
      region = new jvm.Region({
        map: this,
        path: this.mapData.paths[key].path,
        code: key,
        style: jvm.$.extend(true, {}, this.params.regionStyle),
        labelStyle: jvm.$.extend(true, {}, this.params.regionLabelStyle),
        canvas: this.canvas,
        labelsGroup: this.regionLabelsGroup,
        label: this.canvas.mode != 'vml' ? (this.params.labels && this.params.labels.regions) : null
      });

      jvm.$(region.shape).bind('selected', function(e, isSelected){
        map.container.trigger('regionSelected.jvectormap', [jvm.$(this.node).attr('data-code'), isSelected, map.getSelectedRegions()]);
      });
      this.regions[key] = {
        element: region,
        config: this.mapData.paths[key]
      };
    }
  },

  createMarkers: function(markers) {
    var i,
        marker,
        point,
        markerConfig,
        markersArray,
        map = this;

    this.markersGroup = this.markersGroup || this.canvas.addGroup();
    this.markerLabelsGroup = this.markerLabelsGroup || this.canvas.addGroup();

    if (jvm.$.isArray(markers)) {
      markersArray = markers.slice();
      markers = {};
      for (i = 0; i < markersArray.length; i++) {
        markers[i] = markersArray[i];
      }
    }

    for (i in markers) {
      markerConfig = markers[i] instanceof Array ? {latLng: markers[i]} : markers[i];
      point = this.getMarkerPosition( markerConfig );

      if (point !== false) {
        marker = new jvm.Marker({
          map: this,
          style: jvm.$.extend(true, {}, this.params.markerStyle, {initial: markerConfig.style || {}}),
          labelStyle: jvm.$.extend(true, {}, this.params.markerLabelStyle),
          index: i,
          cx: point.x,
          cy: point.y,
          group: this.markersGroup,
          canvas: this.canvas,
          labelsGroup: this.markerLabelsGroup,
          label: this.canvas.mode != 'vml' ? (this.params.labels && this.params.labels.markers) : null
        });

        jvm.$(marker.shape).bind('selected', function(e, isSelected){
          map.container.trigger('markerSelected.jvectormap', [jvm.$(this.node).attr('data-index'), isSelected, map.getSelectedMarkers()]);
        });
        if (this.markers[i]) {
          this.removeMarkers([i]);
        }
        this.markers[i] = {element: marker, config: markerConfig};
      }
    }
  },

  repositionMarkers: function() {
    var i,
        point;

    for (i in this.markers) {
      point = this.getMarkerPosition( this.markers[i].config );
      if (point !== false) {
        this.markers[i].element.setStyle({cx: point.x, cy: point.y});
      }
    }
  },

  repositionLabels: function() {
    var key;

    for (key in this.regions) {
      this.regions[key].element.updateLabelPosition();
    }

    for (key in this.markers) {
      this.markers[key].element.updateLabelPosition();
    }
  },

  getMarkerPosition: function(markerConfig) {
    if (jvm.Map.maps[this.params.map].projection) {
      return this.latLngToPoint.apply(this, markerConfig.latLng || [0, 0]);
    } else {
      return {
        x: markerConfig.coords[0]*this.scale + this.transX*this.scale,
        y: markerConfig.coords[1]*this.scale + this.transY*this.scale
      };
    }
  },

  /**
   * Add one marker to the map.
   * @param {String} key Marker unique code.
   * @param {Object} marker Marker configuration parameters.
   * @param {Array} seriesData Values to add to the data series.
   */
  addMarker: function(key, marker, seriesData){
    var markers = {},
        data = [],
        values,
        i,
        seriesData = seriesData || [];

    markers[key] = marker;

    for (i = 0; i < seriesData.length; i++) {
      values = {};
      if (typeof seriesData[i] !== 'undefined') {
        values[key] = seriesData[i];
      }
      data.push(values);
    }
    this.addMarkers(markers, data);
  },

  /**
   * Add set of marker to the map.
   * @param {Object|Array} markers Markers to add to the map. In case of array is provided, codes of markers will be set as string representations of array indexes.
   * @param {Array} seriesData Values to add to the data series.
   */
  addMarkers: function(markers, seriesData){
    var i;

    seriesData = seriesData || [];

    this.createMarkers(markers);
    for (i = 0; i < seriesData.length; i++) {
      this.series.markers[i].setValues(seriesData[i] || {});
    };
  },

  /**
   * Remove some markers from the map.
   * @param {Array} markers Array of marker codes to be removed.
   */
  removeMarkers: function(markers){
    var i;

    for (i = 0; i < markers.length; i++) {
      this.markers[ markers[i] ].element.remove();
      delete this.markers[ markers[i] ];
    };
  },

  /**
   * Remove all markers from the map.
   */
  removeAllMarkers: function(){
    var i,
        markers = [];

    for (i in this.markers) {
      markers.push(i);
    }
    this.removeMarkers(markers)
  },

  /**
   * Converts coordinates expressed as latitude and longitude to the coordinates in pixels on the map.
   * @param {Number} lat Latitide of point in degrees.
   * @param {Number} lng Longitude of point in degrees.
   */
  latLngToPoint: function(lat, lng) {
    var point,
        proj = jvm.Map.maps[this.params.map].projection,
        centralMeridian = proj.centralMeridian,
        inset,
        bbox;

    if (lng < (-180 + centralMeridian)) {
      lng += 360;
    }

    point = jvm.Proj[proj.type](lat, lng, centralMeridian);

    inset = this.getInsetForPoint(point.x, point.y);
    if (inset) {
      bbox = inset.bbox;

      point.x = (point.x - bbox[0].x) / (bbox[1].x - bbox[0].x) * inset.width * this.scale;
      point.y = (point.y - bbox[0].y) / (bbox[1].y - bbox[0].y) * inset.height * this.scale;

      return {
        x: point.x + this.transX*this.scale + inset.left*this.scale,
        y: point.y + this.transY*this.scale + inset.top*this.scale
      };
     } else {
       return false;
     }
  },

  /**
   * Converts cartesian coordinates into coordinates expressed as latitude and longitude.
   * @param {Number} x X-axis of point on map in pixels.
   * @param {Number} y Y-axis of point on map in pixels.
   */
  pointToLatLng: function(x, y) {
    var proj = jvm.Map.maps[this.params.map].projection,
        centralMeridian = proj.centralMeridian,
        insets = jvm.Map.maps[this.params.map].insets,
        i,
        inset,
        bbox,
        nx,
        ny;

    for (i = 0; i < insets.length; i++) {
      inset = insets[i];
      bbox = inset.bbox;

      nx = x - (this.transX*this.scale + inset.left*this.scale);
      ny = y - (this.transY*this.scale + inset.top*this.scale);

      nx = (nx / (inset.width * this.scale)) * (bbox[1].x - bbox[0].x) + bbox[0].x;
      ny = (ny / (inset.height * this.scale)) * (bbox[1].y - bbox[0].y) + bbox[0].y;

      if (nx > bbox[0].x && nx < bbox[1].x && ny > bbox[0].y && ny < bbox[1].y) {
        return jvm.Proj[proj.type + '_inv'](nx, -ny, centralMeridian);
      }
    }

    return false;
  },

  getInsetForPoint: function(x, y){
    var insets = jvm.Map.maps[this.params.map].insets,
        i,
        bbox;

    for (i = 0; i < insets.length; i++) {
      bbox = insets[i].bbox;
      if (x > bbox[0].x && x < bbox[1].x && y > bbox[0].y && y < bbox[1].y) {
        return insets[i];
      }
    }
  },

  createSeries: function(){
    var i,
        key;

    this.series = {
      markers: [],
      regions: []
    };

    for (key in this.params.series) {
      for (i = 0; i < this.params.series[key].length; i++) {
        this.series[key][i] = new jvm.DataSeries(
          this.params.series[key][i],
          this[key],
          this
        );
      }
    }
  },

  /**
   * Gracefully remove the map and and all its accessories, unbind event handlers.
   */
  remove: function(){
    this.tip.remove();
    this.container.remove();
    jvm.$(window).unbind('resize', this.onResize);
    jvm.$('body').unbind('mouseup', this.onContainerMouseUp);
  }
};

jvm.Map.maps = {};
jvm.Map.defaultParams = {
  map: 'world_mill_en',
  backgroundColor: '#505050',
  zoomButtons: true,
  zoomOnScroll: true,
  zoomOnScrollSpeed: 3,
  panOnDrag: true,
  zoomMax: 8,
  zoomMin: 1,
  zoomStep: 1.6,
  zoomAnimate: true,
  regionsSelectable: false,
  markersSelectable: false,
  bindTouchEvents: true,
  regionStyle: {
    initial: {
      fill: 'white',
      "fill-opacity": 1,
      stroke: 'none',
      "stroke-width": 0,
      "stroke-opacity": 1
    },
    hover: {
      "fill-opacity": 0.8,
      cursor: 'pointer'
    },
    selected: {
      fill: 'yellow'
    },
    selectedHover: {
    }
  },
  regionLabelStyle: {
    initial: {
      'font-family': 'Verdana',
      'font-size': '12',
      'font-weight': 'bold',
      cursor: 'default',
      fill: 'black'
    },
    hover: {
      cursor: 'pointer'
    }
  },
  markerStyle: {
    initial: {
      fill: 'grey',
      stroke: '#505050',
      "fill-opacity": 1,
      "stroke-width": 1,
      "stroke-opacity": 1,
      r: 5
    },
    hover: {
      stroke: 'black',
      "stroke-width": 2,
      cursor: 'pointer'
    },
    selected: {
      fill: 'blue'
    },
    selectedHover: {
    }
  },
  markerLabelStyle: {
    initial: {
      'font-family': 'Verdana',
      'font-size': '12',
      'font-weight': 'bold',
      cursor: 'default',
      fill: 'black'
    },
    hover: {
      cursor: 'pointer'
    }
  }
};
jvm.Map.apiEvents = {
  onRegionTipShow: 'regionTipShow',
  onRegionOver: 'regionOver',
  onRegionOut: 'regionOut',
  onRegionClick: 'regionClick',
  onRegionSelected: 'regionSelected',
  onMarkerTipShow: 'markerTipShow',
  onMarkerOver: 'markerOver',
  onMarkerOut: 'markerOut',
  onMarkerClick: 'markerClick',
  onMarkerSelected: 'markerSelected',
  onViewportChange: 'viewportChange'
};/**
 * Creates map with drill-down functionality.
 * @constructor
 * @param {Object} params Parameters to initialize map with.
 * @param {Number} params.maxLevel Maximum number of levels user can go through
 * @param {Object} params.main Config of the main map. See <a href="./jvm-map/">jvm.Map</a> for more information.
 * @param {Function} params.mapNameByCode Function go generate map name by region code. Default value is:
<pre>
function(code, multiMap) {
  return code.toLowerCase()+'_'+
         multiMap.defaultProjection+'_en';
}
</pre>
 * @param {Function} params.mapUrlByCode Function to generate map url by region code. Default value is:
<pre>
function(code, multiMap){
  return 'jquery-jvectormap-data-'+
         code.toLowerCase()+'-'+
         multiMap.defaultProjection+'-en.js';
}
</pre>
 */
jvm.MultiMap = function(params) {
  var that = this;

  this.maps = {};
  this.params = jvm.$.extend(true, {}, jvm.MultiMap.defaultParams, params);
  this.params.maxLevel = this.params.maxLevel || Number.MAX_VALUE;
  this.params.main = this.params.main || {};
  this.params.main.multiMapLevel = 0;
  this.history = [ this.addMap(this.params.main.map, this.params.main) ];
  this.defaultProjection = this.history[0].mapData.projection.type;
  this.mapsLoaded = {};

  this.params.container.css({position: 'relative'});
  this.backButton = jvm.$('<div/>').addClass('jvectormap-goback').text('Back').appendTo(this.params.container);
  this.backButton.hide();
  this.backButton.click(function(){
    that.goBack();
  });

  this.spinner = jvm.$('<div/>').addClass('jvectormap-spinner').appendTo(this.params.container);
  this.spinner.hide();
};

jvm.MultiMap.prototype = {
  addMap: function(name, config){
    var cnt = jvm.$('<div/>').css({
      width: '100%',
      height: '100%'
    });

    this.params.container.append(cnt);

    this.maps[name] = new jvm.Map(jvm.$.extend(config, {container: cnt}));
    if (this.params.maxLevel > config.multiMapLevel) {
      this.maps[name].container.on('regionClick.jvectormap', {scope: this}, function(e, code){
        var multimap = e.data.scope,
            mapName = multimap.params.mapNameByCode(code, multimap);

        if (!multimap.drillDownPromise || multimap.drillDownPromise.state() !== 'pending') {
          multimap.drillDown(mapName, code);
        }
      });
    }


    return this.maps[name];
  },

  downloadMap: function(code){
    var that = this,
        deferred = jvm.$.Deferred();

    if (!this.mapsLoaded[code]) {
      jvm.$.get(this.params.mapUrlByCode(code, this)).then(function(){
        that.mapsLoaded[code] = true;
        deferred.resolve();
      }, function(){
        deferred.reject();
      });
    } else {
      deferred.resolve();
    }
    return deferred;
  },

  drillDown: function(name, code){
    var currentMap = this.history[this.history.length - 1],
        that = this,
        focusPromise = currentMap.setFocus({region: code, animate: true}),
        downloadPromise = this.downloadMap(code);

    focusPromise.then(function(){
      if (downloadPromise.state() === 'pending') {
        that.spinner.show();
      }
    });
    downloadPromise.always(function(){
      that.spinner.hide();
    });
    this.drillDownPromise = jvm.$.when(downloadPromise, focusPromise);
    this.drillDownPromise.then(function(){
      currentMap.params.container.hide();
      if (!that.maps[name]) {
        that.addMap(name, {map: name, multiMapLevel: currentMap.params.multiMapLevel + 1});
      } else {
        that.maps[name].params.container.show();
      }
      that.history.push( that.maps[name] );
      that.backButton.show();
    });
  },

  goBack: function(){
    var currentMap = this.history.pop(),
        prevMap = this.history[this.history.length - 1],
        that = this;

    currentMap.setFocus({scale: 1, x: 0.5, y: 0.5, animate: true}).then(function(){
      currentMap.params.container.hide();
      prevMap.params.container.show();
      prevMap.updateSize();
      if (that.history.length === 1) {
        that.backButton.hide();
      }
      prevMap.setFocus({scale: 1, x: 0.5, y: 0.5, animate: true});
    });
  }
};

jvm.MultiMap.defaultParams = {
  mapNameByCode: function(code, multiMap){
    return code.toLowerCase()+'_'+multiMap.defaultProjection+'_en';
  },
  mapUrlByCode: function(code, multiMap){
    return 'jquery-jvectormap-data-'+code.toLowerCase()+'-'+multiMap.defaultProjection+'-en.js';
  }
}
;
jQuery.fn.vectorMap('addMap', 'au_mill_en',{"insets": [{"width": 900, "top": 0, "height": 825.8587272481366, "bbox": [{"y": 1031999.3824222308, "x": 12576510.61983689}, {"y": 5192718.429891739, "x": 17110757.239958208}], "left": 0}], "paths": {"AU-ACT": {"path": "M794.2,620.06l-0.74,-0.7l-0.09,-0.95l-0.36,-0.43l0.22,-1.71l-0.27,-2.16l0.77,-2.93l-0.05,-0.84l6.7,-4.73l1.06,0.71l0.19,1.03l1.04,0.47l0.25,0.8l3.09,1.34l-0.61,0.33l-1.7,-0.25l-0.96,0.77l-0.84,-0.15l-1.45,1.71l-0.17,1.19l0.29,1.03l-0.43,1.37l-0.65,0.31l-0.33,0.73l0.4,2.65l-0.21,1.28l0.21,1.77l-1.05,1.68l-2.23,-1.11l-0.91,-3.56l-0.69,-0.11l-0.47,0.47Z", "name": "Australian Capital Territory"}, "AU-WA": {"path": "M6.6,387.61l0.55,0.12l0.14,0.51l-0.53,-0.45l-0.17,-0.19ZM7.72,388.83l0.24,0.12l0.33,-0.36l0.25,-1.88l0.27,3.72l0.73,1.63l0.65,0.38l0.49,-0.49l-0.61,-1.76l0.15,-1.63l0.33,-1.03l0.82,-0.4l1.14,4.7l-0.39,2.66l0.63,0.22l0.46,-0.25l0.41,-2.32l0.3,1.37l-0.02,2.86l0.4,0.42l0.65,-0.13l0.68,-1.56l-0.23,1.81l0.19,0.65l0.56,0.11l0.06,0.77l0.36,0.43l0.8,-0.35l0.09,-0.63l1.3,-0.42l1.02,0.13l0.38,-0.38l0.02,-0.62l0.79,-0.46l0.79,-1.28l-0.06,-3.96l-2.55,-2.57l0.59,-0.23l1.75,-3.47l0.09,1.5l0.71,0.53l-0.18,0.96l0.76,3.32l2.34,2.72l0.6,0.35l0.68,-0.11l1.16,-1.26l1.23,-0.64l0.55,-1.29l-0.87,-3.09l0.79,-2.79l-0.6,-1.51l1.07,-0.16l0.39,-0.55l-0.72,-1.27l0.61,-1.46l-0.09,-0.7l-2.36,-1.46l-0.59,-1.71l-0.86,-1.09l-0.91,-0.56l-0.72,-1.77l-1.89,-2.76l-2.79,-6.56l-2.47,-1.63l-0.96,-2.54l0.46,-1.39l-0.29,-0.67l-0.94,-0.51l-0.1,-1.02l0.34,-0.94l-0.39,-1.7l-3.69,-4.68l-0.99,-2.6l-0.13,-3.78l1.02,-1.7l-0.38,-2.91l0.9,-1.39l0.08,-1.79l0.92,-1.34l0.55,-2.07l0.74,-0.57l0.93,-2.6l1.74,-1.11l0.34,-0.63l0.87,-0.58l0.77,-1.85l0.3,-3.12l-0.75,-3.77l0.15,-0.79l0.68,-0.52l0.55,-1.19l-0.08,-2.98l-1.15,-3.51l-1.11,-1.18l-0.87,-0.35l0.15,-0.99l-0.54,-2.12l0.86,-0.68l0.97,-1.48l0.35,-1.79l1.25,-1.66l2.07,-6.51l1.07,-2.22l1.85,-2.53l2.4,-0.92l-1.0,2.44l-1.13,5.93l1.02,2.36l-0.31,1.28l0.57,0.54l0.46,-0.14l-0.86,1.23l0.16,0.89l-0.28,1.09l0.26,0.61l0.71,0.57l0.92,0.08l1.18,-1.3l1.16,-0.48l0.43,0.82l0.88,0.29l0.88,-0.62l0.55,-2.78l1.61,-3.41l0.04,-0.73l0.69,-0.42l0.53,-1.79l-0.15,-0.93l0.75,0.01l1.66,-2.9l0.37,-1.55l6.15,-3.44l0.76,-0.23l0.99,0.21l1.63,-0.84l0.55,0.16l2.6,-1.52l5.65,-2.27l3.32,-4.19l4.26,-2.22l1.39,-2.65l1.19,-1.18l4.84,-2.14l0.57,-0.74l0.37,-1.99l1.79,0.42l1.38,-0.8l2.39,-0.36l1.33,-0.87l0.35,-0.65l1.38,-0.34l2.48,-1.75l1.91,-2.38l-0.64,2.17l1.93,1.5l1.15,-0.13l3.54,-1.96l0.71,0.36l1.03,-0.58l0.03,0.65l0.9,0.94l3.62,1.08l3.66,-0.5l1.93,-1.1l0.72,0.35l0.69,-0.25l0.25,0.21l3.82,-1.38l0.8,-1.12l0.99,-0.34l0.45,-1.39l4.47,-3.05l1.79,0.35l1.89,-0.8l0.46,0.55l0.59,0.05l5.29,-1.21l1.72,0.31l1.29,-0.73l1.57,-0.32l3.44,-4.12l0.42,-1.3l1.61,-0.78l0.77,-0.93l1.12,0.81l0.66,-0.31l0.01,-0.69l0.27,-0.02l5.32,1.25l0.65,-0.24l1.19,1.12l1.69,0.33l1.26,-0.64l0.55,-0.64l1.19,-0.22l0.27,-0.88l1.45,0.07l9.6,-1.35l2.98,-0.94l12.97,-5.37l3.91,-2.63l4.15,-3.91l4.61,-6.55l2.78,-6.06l0.16,-0.96l-0.59,-0.89l1.85,-0.34l1.36,-1.24l0.25,-1.19l-0.7,-0.78l1.33,-2.4l0.89,0.33l1.23,-0.22l2.53,-1.88l0.84,-1.42l1.75,-0.93l0.78,-0.98l0.56,-0.1l0.41,-0.79l2.22,-1.04l0.69,-0.86l0.53,-1.49l-0.29,-1.71l-0.51,-0.49l-1.39,-0.44l-1.67,0.13l0.3,-0.95l-0.32,-2.43l0.26,-2.08l-1.37,-3.46l0.13,-4.93l0.49,-1.81l2.26,-2.58l0.08,-0.48l-0.34,-0.4l0.2,-0.27l3.14,-2.71l0.37,0.37l0.63,-0.05l0.44,-0.52l-0.01,-0.87l0.86,0.93l1.26,0.27l0.42,-0.19l-1.46,-2.73l0.52,-0.37l0.51,-1.1l0.37,0.39l0.78,0.12l1.55,-0.36l0.76,-0.55l1.48,0.41l0.49,-0.16l-0.08,-0.51l-1.52,-1.56l0.28,-2.05l0.4,-0.61l1.18,-0.11l1.21,-1.29l0.56,-1.93l1.32,-0.62l0.06,0.74l1.01,0.47l-1.13,-0.08l-0.41,0.46l0.05,1.19l-0.57,0.97l0.44,1.38l0.38,0.29l0.6,-0.16l0.44,1.47l0.72,0.04l0.51,0.48l-0.1,1.21l1.3,1.11l-0.29,1.94l1.09,0.71l1.57,1.83l0.23,1.56l2.13,3.26l0.03,1.14l0.4,0.82l1.11,0.8l1.39,1.81l0.3,1.05l0.87,0.99l0.35,1.71l0.6,0.16l0.56,-0.89l-0.04,-1.49l-0.57,-1.36l0.14,-1.79l0.59,-1.07l0.38,-2.16l0.72,-0.46l0.02,-0.43l-1.44,-2.22l-0.05,-1.29l0.21,-0.41l0.91,-0.06l0.38,1.21l1.32,0.36l0.79,1.32l1.15,0.72l0.82,1.17l0.72,0.33l0.86,-0.07l0.34,-0.38l-0.07,-0.53l-1.38,-0.9l-1.13,-3.09l0.76,0.51l0.63,-0.19l0.07,-0.85l-0.6,-0.82l0.92,-1.1l1.21,-0.72l0.4,-1.02l-0.11,-0.61l-0.58,-0.46l-0.58,0.27l-0.46,1.06l-2.16,0.65l-1.01,-1.49l-0.65,-1.78l-2.2,-1.59l-1.36,-0.36l0.41,-0.29l0.04,-0.63l0.92,-0.55l0.15,-0.71l0.42,-0.07l0.36,-1.69l-2.18,-1.12l1.74,0.57l1.52,0.07l0.38,-0.25l-0.53,-0.86l0.53,-0.24l0.14,-0.63l-0.4,-0.99l-1.17,-0.14l-0.8,-0.75l-0.77,0.21l-0.4,-0.25l0.44,-0.85l-0.27,-1.05l0.66,-0.01l0.16,-0.44l1.56,-0.12l1.68,0.32l-0.36,0.61l0.41,0.63l-0.85,0.15l-0.15,0.72l1.62,1.15l1.19,0.38l-0.69,0.76l0.66,1.48l1.31,-0.13l0.16,-1.68l1.35,0.91l0.65,-0.19l0.08,-0.51l-0.78,-1.4l0.69,-0.47l-0.28,-0.55l1.02,0.44l1.45,0.03l1.14,0.64l0.67,1.69l0.8,0.63l2.76,0.27l0.99,-1.26l1.81,0.94l2.67,0.18l3.74,-0.37l0.83,0.75l0.93,0.18l1.61,-0.6l-0.17,-0.71l-1.41,0.05l-3.15,-1.36l-2.8,-0.43l-2.09,0.45l-1.36,-0.2l-0.35,-0.9l0.24,-1.11l-0.29,-0.4l0.22,-0.73l0.81,-0.76l0.06,-1.74l0.29,1.37l0.92,1.21l0.73,-0.03l0.52,-0.98l0.71,-0.17l0.46,-0.5l-0.23,-2.61l0.66,-0.55l-0.12,-1.5l0.5,-0.5l0.62,0.37l0.51,-0.25l0.47,-1.23l0.44,-0.27l-0.07,-0.72l-0.79,-0.28l-1.94,0.09l-1.63,1.96l-0.73,1.65l-1.22,-2.82l-0.47,-0.15l-0.27,0.69l-0.39,-1.68l-0.07,-1.69l0.79,-0.36l0.21,-0.61l-0.02,-0.79l-0.57,-0.58l0.05,-0.8l0.96,-0.39l0.39,-1.11l2.59,0.94l0.84,-0.14l0.25,-0.74l0.9,0.04l0.43,-0.57l-0.37,-0.71l0.19,-0.74l2.14,-1.98l0.43,0.33l-0.2,0.37l0.37,0.6l1.67,-0.08l1.03,1.17l0.66,0.23l-0.35,1.04l0.43,0.44l0.64,-0.13l0.81,0.58l0.5,-0.26l0.1,-0.77l2.34,1.45l0.49,-0.11l-0.29,-0.85l-2.1,-1.81l0.32,-1.24l1.25,-0.84l-0.42,-0.54l-1.09,-0.63l-0.38,0.43l-0.95,-0.51l-2.49,1.29l-0.37,-0.86l0.73,-0.53l0.15,-0.48l1.65,-0.1l1.14,-1.4l-0.16,-0.59l-0.94,-0.32l-0.62,0.57l-0.57,-0.18l-1.7,1.46l-0.33,-0.2l0.27,-0.82l-0.42,-0.52l0.19,-0.45l0.64,-0.19l1.16,0.64l0.64,-0.04l0.55,-0.82l0.56,-0.03l0.25,-1.09l-0.43,-1.22l0.44,-0.06l-0.14,0.65l0.32,0.74l0.64,0.24l0.28,-0.23l1.15,2.49l0.72,-0.13l0.21,-1.1l-0.33,-1.19l1.25,0.5l0.57,0.56l0.01,0.62l0.91,0.57l1.18,-0.28l1.31,0.28l0.63,-0.36l-0.06,-0.99l-1.14,-0.17l0.35,-0.31l-0.16,-0.64l1.1,-0.9l-0.23,-0.54l-0.6,-0.19l-0.61,0.22l-1.21,-0.62l-0.74,0.15l-0.21,-0.81l0.48,-0.27l0.35,-1.16l-0.43,-0.53l-2.05,-0.52l-0.22,-1.39l-0.85,-0.45l1.1,-0.65l0.19,-0.8l0.94,0.13l1.09,-0.92l-0.16,-0.69l-1.16,-0.06l0.49,-0.53l0.87,-0.0l0.49,-0.49l-0.24,0.72l0.2,0.5l1.34,-1.02l0.92,1.77l0.44,-0.25l0.63,-1.93l0.4,0.02l0.08,-1.27l0.55,0.25l-0.43,0.48l0.38,0.71l1.47,-0.14l0.57,-1.32l0.29,-2.21l-0.59,-1.27l-0.1,-1.27l0.39,-1.07l1.75,1.65l-1.12,-0.02l-0.21,1.02l0.57,3.16l-1.0,1.96l-0.03,1.02l0.66,0.29l0.44,-0.45l1.29,-3.41l0.19,0.24l1.23,-0.37l0.29,0.17l0.27,2.61l2.1,1.41l0.51,-0.36l0.14,-1.12l-0.36,-0.51l0.21,-0.71l1.18,0.58l1.5,-1.0l-0.16,-1.36l-0.98,-1.42l1.61,-0.85l0.35,-1.31l-0.29,-1.24l0.8,-0.16l0.81,-0.62l0.28,-1.62l0.33,0.84l0.77,0.46l0.03,0.75l0.53,0.26l0.65,-0.19l0.56,0.38l0.54,-0.89l0.95,-0.52l-0.07,-0.49l-0.84,-0.85l0.69,-1.42l0.91,-0.33l0.25,-0.73l0.57,-0.42l1.1,0.19l-0.95,1.4l0.08,0.52l0.88,0.2l0.01,0.61l0.63,0.78l0.95,-0.09l0.14,1.36l1.12,0.66l0.33,-1.33l0.86,-0.53l0.12,-1.12l0.21,0.4l0.66,0.07l0.83,-1.13l0.41,-1.62l-0.22,-0.25l0.25,-0.26l1.39,0.21l0.58,-0.4l-0.08,-0.36l0.46,-0.58l-0.48,-0.55l-0.7,-0.17l-0.98,-2.29l0.73,-0.22l0.18,0.71l0.49,0.16l1.25,-0.85l-0.61,-0.82l1.15,0.43l0.41,-0.14l0.18,-0.68l1.25,0.98l0.0,0.86l1.03,0.64l-0.24,0.59l0.41,0.56l0.38,-0.05l0.36,1.28l0.63,0.51l0.49,-0.03l0.62,-0.85l0.3,0.47l0.51,0.01l0.78,-1.13l0.78,0.87l1.08,0.57l0.55,-0.4l-0.03,-0.36l1.09,0.83l0.47,-0.23l0.32,0.79l-0.01,1.32l0.76,0.62l0.65,-0.16l3.37,2.34l0.76,1.31l1.26,1.11l0.69,1.74l0.77,0.4l0.04,1.14l0.66,0.43l0.01,0.58l0.83,0.1l1.09,0.92l-0.09,0.63l0.35,0.66l0.65,0.17l0.81,-0.33l1.18,1.52l0.94,0.26l1.86,1.3l-0.5,0.86l0.32,1.32l-1.52,0.56l0.18,1.17l-1.43,4.84l0.35,1.61l-0.19,2.18l-0.71,0.57l0.63,2.33l-1.21,1.75l0.27,0.69l0.44,0.08l1.06,-0.62l0.87,-1.27l0.39,-2.13l-0.34,-2.22l0.16,-0.65l1.99,1.7l1.02,2.74l0.53,0.34l0.4,-0.37l0.05,-2.62l-1.59,-1.99l0.14,-0.96l-0.65,-2.18l1.77,-1.88l0.36,-0.97l0.66,2.67l0.33,0.2l0.6,-0.41l-0.06,-0.32l0.74,0.63l1.15,-0.11l0.27,-1.18l-1.18,-2.63l0.7,-0.6l-0.03,-0.36l-0.81,-0.66l2.56,-0.91l1.22,0.54l2.57,0.41l0.71,0.59l3.98,0.4l1.43,0.58l0.0,392.84l-4.85,2.15l-2.57,1.66l-9.6,4.19l-4.41,1.62l-5.58,0.97l-4.45,1.52l-0.78,0.66l-5.27,1.49l-5.2,0.74l-5.02,0.17l-0.9,-0.21l-2.3,0.36l-6.68,-0.82l-4.07,-1.22l-1.3,0.3l-1.25,0.84l-1.68,-0.14l-3.12,1.51l-7.31,5.26l-4.35,1.29l-5.37,2.74l-2.1,0.61l-2.3,2.44l-1.41,0.79l-2.7,0.87l-8.75,1.55l-3.46,2.6l-1.63,2.26l-0.58,2.46l-1.34,2.47l-1.19,5.16l-1.3,0.51l-0.74,1.13l-2.26,2.02l-0.58,1.27l-0.02,0.96l-1.69,0.89l-0.58,0.8l-1.25,0.24l-0.9,1.3l-1.2,-0.97l-1.88,-0.21l-1.03,0.41l-1.67,2.02l-2.03,0.47l-0.81,-2.47l-0.75,-0.73l-1.62,-0.47l-4.0,1.06l-1.45,-0.67l-0.92,0.34l-2.8,0.1l-0.86,0.44l-0.1,1.0l-0.71,-0.51l-0.71,0.3l-2.24,-0.69l-1.12,-0.02l-1.76,0.89l-0.41,0.77l0.03,0.84l-0.83,-0.54l-0.67,0.64l-1.7,-0.03l0.46,-0.91l-0.72,-2.02l-1.7,-1.96l-1.87,0.19l-1.35,1.06l-1.59,0.59l-1.02,-0.69l-1.12,-0.29l-1.4,0.48l-0.59,-0.63l-1.68,-0.78l-4.4,-0.11l-2.49,0.58l-1.26,0.68l-1.56,-0.58l-2.76,0.64l-2.24,-0.3l-2.76,0.86l-4.06,0.06l-0.63,0.47l-0.26,0.65l-2.63,0.86l-2.66,-0.85l-2.32,-0.18l-1.61,0.51l-1.25,-0.64l-1.03,0.0l-1.7,0.93l-2.81,0.61l-1.68,1.58l-1.98,0.91l-0.61,0.45l-0.02,0.51l-0.92,0.48l-0.81,1.76l-0.93,0.76l-0.53,1.29l-0.07,1.51l0.52,0.74l0.62,0.23l-0.46,0.11l-0.88,-0.71l-1.04,-0.04l-0.67,0.59l-0.19,0.67l0.31,1.19l-0.35,0.28l-0.33,-0.71l-0.54,-0.22l-0.9,0.23l-0.5,0.49l-0.2,1.33l-0.27,0.1l-0.49,-0.74l-1.27,-0.17l-0.75,-0.54l-4.09,-0.66l-0.86,0.31l-1.24,-0.14l-0.29,0.68l0.69,0.71l-1.63,0.29l-1.52,1.06l-0.19,0.97l0.4,0.67l-0.27,0.31l-2.33,1.17l-2.95,0.78l-1.01,0.71l-1.27,2.23l0.23,1.8l-2.62,0.09l-2.43,0.89l-0.27,0.58l0.92,1.25l-1.16,-0.76l-0.72,-0.02l-1.65,0.63l-2.26,-0.17l-0.51,0.36l-1.24,0.13l-0.52,0.43l0.05,0.76l-1.57,-0.57l-1.88,-0.05l-0.83,0.48l-0.53,1.53l-1.3,-0.92l-1.68,-0.38l-2.83,-1.5l-0.58,0.34l-2.82,-0.58l-0.63,0.28l-0.54,0.88l-1.7,-0.77l-1.12,0.12l-1.2,-0.37l-1.63,1.03l-2.96,-1.15l-0.7,0.48l-1.18,0.0l-0.6,0.46l-0.97,-0.63l-2.59,-0.53l-0.99,-0.9l1.58,0.35l0.47,-0.33l-0.0,-0.6l-1.47,-0.84l-1.24,-1.2l-0.73,0.18l-0.12,0.53l0.33,0.73l-5.98,-1.94l-2.35,-0.16l0.07,-0.55l-1.11,-2.05l-4.18,-4.58l-3.04,-2.43l-1.83,-0.74l-0.52,-0.75l-3.81,-1.8l-1.71,-0.43l-1.98,0.12l-1.12,1.25l-2.13,-2.39l-0.01,-1.99l-0.85,-2.0l-0.22,-5.5l0.57,-1.79l-0.66,-2.54l1.04,-1.72l-0.3,-1.87l0.58,0.25l1.59,1.93l1.82,0.78l2.08,0.17l2.04,-0.52l1.55,-0.93l1.93,-2.17l1.31,-2.16l1.07,-2.85l0.74,0.15l0.79,-0.31l0.39,-0.9l-0.11,-2.11l-0.44,-0.33l-0.33,0.13l0.1,-3.93l-1.62,-8.86l0.05,-0.2l1.18,3.03l0.69,0.42l0.53,-0.19l0.22,-0.68l-1.0,-2.68l1.42,-0.02l0.6,-1.09l-0.14,-0.76l-0.9,-0.58l-0.16,-0.43l0.67,-1.84l0.02,-1.0l-0.65,-1.26l0.41,-1.0l-0.66,-0.94l0.67,-0.5l0.48,-2.05l-0.61,-2.81l0.32,-3.54l-0.5,-3.84l-0.93,-3.11l-5.0,-8.45l-3.12,-7.6l-1.67,-2.77l-1.25,-1.25l-0.4,-1.98l-1.36,-2.69l-0.88,-2.66l-0.13,-1.79l-0.97,-3.04l0.27,-1.39l-1.05,-1.19l0.28,-1.7l-1.0,-2.68l0.54,-3.15l-0.44,-1.78l-0.03,-4.05l0.72,-4.4l-3.04,-9.05l-4.22,-4.79l-1.05,-1.7l-0.47,-1.24l0.31,-0.76l-0.13,-2.3l-1.36,-3.36l-2.41,-2.93l-2.49,-4.08l-1.48,-0.95l-1.68,-1.98l-1.46,-5.67l0.08,-1.38l0.93,-2.82l-1.54,-5.78l-1.41,-3.24l-5.49,-9.45l-3.84,-5.76l-6.42,-6.53l-0.03,-1.48l-1.01,-1.96ZM18.62,388.27l-1.37,-0.34l-0.1,-0.79l-0.71,-1.09l-0.84,-1.02l-0.71,-0.25l-0.39,-3.13l-0.81,-0.76l-0.21,-1.48l-2.02,-3.0l0.06,-1.45l1.39,-2.42l0.33,1.67l1.16,0.5l1.01,2.29l0.68,0.39l0.46,0.8l0.87,0.32l-0.05,1.44l0.82,0.76l-0.54,0.85l0.08,1.03l-0.4,1.0l-0.34,2.79l0.5,1.28l1.15,0.61ZM234.66,163.67l-0.3,0.64l-0.77,-0.62l0.41,-0.38l0.66,0.36ZM261.01,136.67l-0.34,-0.12l-0.02,-0.78l0.64,0.2l-0.29,0.7ZM273.13,127.84l-0.42,0.17l-0.69,-0.31l0.41,-0.28l0.71,0.42ZM305.17,106.76l-0.04,0.05l-0.04,-0.08l0.08,0.03ZM109.27,603.92l0.79,0.2l0.39,-0.35l0.55,0.47l-1.04,-0.02l-0.7,-0.3ZM292.84,109.4l-0.33,-0.77l-0.77,-0.53l-2.33,-0.08l-0.2,-0.42l0.81,0.08l0.31,-0.45l0.5,0.41l0.49,-0.02l0.21,-0.39l0.21,0.2l0.91,-0.47l0.42,0.37l-0.52,0.25l-0.1,0.92l0.49,0.46l0.39,-0.09l-0.48,0.53ZM291.55,106.2l-0.7,-0.84l0.13,-0.19l0.8,0.3l0.11,0.39l-0.33,0.36ZM26.98,297.37l0.2,-0.34l0.08,-0.28l-0.06,0.51l-0.23,0.12ZM21.38,383.22l-0.18,-0.67l-0.18,-0.36l0.44,0.37l-0.08,0.65ZM13.72,391.1l-0.26,-0.73l0.04,-0.18l0.04,0.12l0.18,0.8ZM341.51,126.92l1.04,1.78l0.15,0.53l-1.03,-1.19l-0.16,-1.12ZM336.53,131.41l0.66,0.52l0.17,0.83l-0.81,-0.64l-0.03,-0.71ZM269.49,120.11l0.09,-0.78l0.7,0.28l0.22,-0.4l0.03,-1.03l-0.43,-0.42l0.6,-0.44l0.52,0.32l-0.59,1.06l0.41,1.1l-1.03,0.54l-0.52,-0.22ZM262.85,135.22l0.12,-0.23l0.38,0.09l-0.18,0.26l-0.32,-0.13ZM255.73,137.28l0.07,-0.48l0.59,0.11l0.06,-0.65l0.36,-0.71l-0.06,0.67l1.33,1.26l-1.55,-0.44l-0.81,0.24ZM258.19,137.67l0.27,0.47l-1.17,0.44l0.67,-0.53l0.23,-0.38ZM53.11,262.46l0.49,-1.25l2.09,-2.25l0.28,1.38l-0.66,1.42l-1.06,1.08l-0.68,-0.48l-0.46,0.09ZM0.84,371.32l0.69,0.09l0.02,1.16l0.81,1.8l0.22,2.15l1.81,3.79l-0.45,1.63l-0.79,-0.61l-0.71,-2.12l-1.2,-1.51l-0.06,-1.91l-0.77,-1.59l0.01,-2.34l0.42,-0.54ZM4.36,382.54l0.68,0.06l0.9,1.27l0.4,1.24l-0.08,0.73l-0.66,-1.7l-1.23,-1.6Z", "name": "Western Australia"}, "AU-TAS": {"path": "M775.91,740.14l0.18,-0.61l1.22,-0.64l1.25,-0.12l1.53,0.42l0.39,-0.62l1.32,-0.18l1.0,-0.68l2.65,2.6l-1.26,1.25l-0.74,0.14l-0.31,-1.09l-0.36,-0.27l-0.9,0.01l-1.1,0.55l-0.88,-0.41l-0.59,0.32l-1.94,0.01l-1.47,-0.67ZM701.14,755.61l0.52,-1.09l-0.33,-0.65l0.57,-0.67l0.83,-0.3l0.33,-0.7l-0.19,-5.32l1.08,1.86l0.75,-0.25l2.11,0.73l1.93,0.0l2.0,1.61l0.93,0.36l0.66,-0.06l0.44,-0.64l2.09,-0.07l1.83,1.37l2.36,0.65l1.45,-0.42l0.27,0.79l0.97,0.7l3.26,0.66l0.35,0.94l1.55,1.44l2.31,0.39l0.34,0.5l1.11,0.15l2.21,1.29l3.03,1.09l4.8,0.32l2.54,-0.79l0.44,0.94l0.73,0.19l0.32,-0.12l-0.04,-0.84l1.35,-1.38l1.75,-0.64l0.77,0.49l0.27,0.68l-0.23,0.57l0.45,0.63l1.1,0.29l0.87,-0.33l1.15,0.25l0.28,-0.12l0.09,-0.69l-0.92,-0.79l-1.21,-0.24l-0.51,-0.42l0.22,-1.11l1.99,-0.53l1.7,-0.99l0.39,0.28l3.17,0.4l2.23,-1.47l0.49,0.19l0.75,-0.28l0.29,0.65l0.71,0.2l0.53,0.68l1.09,0.07l1.75,-1.55l1.63,-2.69l1.25,-0.47l0.9,0.96l1.04,-0.13l1.33,0.89l0.91,-0.09l1.76,-1.17l0.89,-2.58l0.96,-0.06l0.58,0.69l0.85,0.08l1.11,1.53l1.47,0.19l1.65,2.06l0.86,1.75l-1.21,1.02l0.23,0.6l0.43,0.18l-0.66,1.47l-0.06,2.17l1.06,1.68l-1.37,1.26l-0.01,0.86l0.66,0.24l0.87,-0.75l-1.05,3.2l0.04,2.27l0.74,1.84l-0.63,2.15l0.4,1.59l-0.95,1.52l0.62,1.91l0.75,1.17l-0.54,3.44l1.31,1.62l-0.18,0.19l-0.27,-0.37l-0.76,-0.1l-1.07,-1.0l-0.79,-0.26l1.03,-0.6l0.27,-1.03l-0.77,-0.66l-0.34,-0.9l-0.81,0.02l-0.24,0.42l0.25,0.75l-0.49,0.01l-0.51,0.56l0.14,0.98l-0.51,0.58l0.23,0.5l-1.0,0.44l-0.4,2.54l-0.83,0.82l-1.59,2.96l-0.0,0.49l0.47,0.12l0.78,-0.66l0.15,0.18l-0.57,0.81l0.04,3.77l-0.76,0.73l-0.64,-0.78l-0.92,0.67l-0.21,0.65l1.01,1.15l0.41,1.57l-0.11,1.59l-1.37,1.06l-0.12,1.59l-0.71,0.78l-0.13,0.95l-3.03,-0.02l-0.51,-0.6l-0.73,-0.21l-0.31,-0.85l-0.56,-0.3l-1.58,0.46l-0.74,0.53l-0.14,1.02l1.18,2.55l-0.47,0.72l-0.66,0.3l0.32,-0.9l-0.38,-0.7l0.23,-1.15l-0.5,-0.48l-0.85,0.37l-0.27,-0.85l-1.2,-0.7l-1.6,-2.32l-0.99,0.38l-0.1,0.55l1.29,1.49l0.85,1.82l-0.62,1.39l-0.01,1.29l-0.65,-0.58l-0.56,0.03l-0.38,0.43l0.12,0.87l0.76,0.85l-1.12,1.22l0.21,3.32l-0.68,0.54l-0.77,-0.36l-0.23,-0.83l-1.02,-0.08l0.44,-0.88l-0.64,-1.36l-0.9,1.09l-0.56,-0.14l-0.15,-1.76l-0.31,-0.31l-0.63,-0.0l-0.73,0.62l-0.34,1.4l0.2,0.98l2.15,1.5l0.65,0.83l-0.42,0.39l-0.5,-0.35l-1.03,0.11l-0.98,0.78l0.34,0.64l1.49,-0.02l-1.02,1.53l-1.77,0.35l0.11,0.45l0.84,0.52l-0.64,0.82l0.34,0.86l-1.11,0.16l-0.17,0.7l0.39,0.63l0.67,0.28l-0.18,0.3l-1.5,0.71l-0.95,-0.81l-2.01,0.44l-0.68,-1.02l-1.51,-0.82l-0.37,-1.5l-0.76,-0.85l-0.58,0.18l-0.13,1.16l-0.58,0.36l-2.72,-0.16l-0.69,-0.53l-0.57,0.01l-0.68,0.59l-0.51,-1.02l-0.79,-0.24l-0.82,0.25l-0.31,0.65l-0.92,-0.32l-1.0,0.36l-0.25,0.56l-0.96,0.17l-0.06,-2.24l-1.17,-1.47l0.7,-0.49l-0.18,-0.38l1.98,0.39l1.05,1.35l0.66,-0.17l0.28,-0.99l0.67,0.67l0.55,-0.15l0.22,-0.49l-0.2,-1.84l-1.28,-1.21l-0.64,-0.18l-1.07,1.44l-0.33,-0.95l-0.5,-0.38l-0.68,0.25l-0.29,0.86l-0.87,-0.89l-0.31,-1.59l-1.06,-0.88l-0.69,0.22l0.01,1.14l-0.71,0.21l-0.33,0.71l0.52,0.55l-0.5,-0.09l-0.66,-1.28l-0.09,-1.02l-1.0,-0.88l-0.55,-0.98l-0.02,-0.8l-0.58,-0.43l-0.72,0.08l0.36,-0.97l-0.22,-0.46l-1.06,-0.56l-0.89,-1.49l-1.88,-0.34l-0.77,-1.06l-1.6,-3.63l-0.62,-0.54l0.38,-0.91l-0.76,-1.87l-0.75,-0.35l-0.3,-0.76l-0.71,-0.36l0.48,-0.63l-0.05,-0.54l-1.02,-1.32l-0.25,-0.92l0.17,-1.07l-0.76,-2.4l-0.12,-2.02l0.23,0.5l1.4,0.51l0.46,0.92l2.3,1.52l0.31,2.21l0.53,1.36l0.51,0.12l0.37,-0.39l0.07,-1.86l0.82,-0.31l0.84,-2.24l-0.45,-0.51l-0.51,0.16l-0.62,-0.76l-0.64,0.3l-2.04,-2.31l-0.63,-2.52l-0.92,-0.08l-1.11,1.12l-0.06,0.68l-0.19,-0.18l0.74,-1.88l-0.37,-2.3l-1.05,-2.07l-3.16,-3.02l-0.17,-0.78l-2.1,-2.85l-0.86,-0.29l-0.11,-1.3l-1.06,-2.82l-1.6,-2.62l-0.86,-0.71l0.62,-0.58l-0.05,-0.83l-2.13,-3.69l0.17,-1.34l-0.51,-1.38l0.11,-1.12l-1.25,-1.88ZM728.8,816.42l0.31,-0.04l-0.13,0.05l-0.17,-0.01ZM763.12,809.37l-0.0,0.0l-0.0,-0.0l0.0,0.0ZM772.39,806.05l1.04,0.09l0.62,-0.56l0.72,-0.08l0.4,0.7l-0.24,0.67l0.42,0.77l-0.78,0.52l-0.48,2.66l0.54,0.76l-0.24,0.63l0.31,0.61l0.49,0.06l-0.55,1.1l-1.07,-1.0l-0.3,-1.05l-0.59,-0.09l-0.67,0.76l-0.06,1.04l-0.94,0.9l-1.74,-1.75l-0.04,-0.31l1.01,-0.75l-0.16,-0.65l-2.06,-0.8l-0.47,-1.06l1.17,-0.68l0.13,-1.22l0.29,0.02l-0.14,1.72l1.08,0.91l1.32,0.46l1.6,-0.38l0.9,-1.06l-0.92,-0.28l-0.52,-0.57l0.38,-0.85l-0.62,-0.47l0.17,-0.77ZM773.75,805.05l-0.3,-0.1l0.19,-0.13l0.11,0.23ZM782.69,786.98l0.48,0.4l-0.65,1.33l-0.64,-0.37l0.81,-1.36ZM715.42,748.93l-0.01,-0.04l0.02,0.03l-0.02,0.01ZM770.83,726.2l0.73,-0.69l1.05,-0.4l0.54,-1.75l1.33,-0.92l4.41,5.45l1.15,0.56l1.6,0.24l-0.18,2.53l-1.31,1.2l0.19,0.61l0.47,0.17l1.26,-0.51l0.3,0.87l-0.78,0.1l0.09,1.04l-1.61,-0.36l-0.44,0.32l-0.23,0.9l-1.13,0.45l-1.34,-0.62l0.15,-1.04l-0.85,-0.83l-0.31,-1.65l-1.1,-0.56l-0.4,-1.1l-0.91,-0.37l0.39,-1.15l-0.64,-2.15l-0.82,-0.26l-0.84,0.45l-0.79,-0.49ZM781.82,734.78l0.24,0.18l0.21,0.1l-0.15,-0.02l-0.3,-0.26ZM778.3,743.36l0.29,-0.21l1.68,-0.45l-0.58,1.72l-1.39,-1.06ZM776.58,800.95l0.06,-0.14l0.21,-0.74l0.35,0.76l-0.62,0.12ZM776.83,799.75l-0.62,-0.54l0.18,-0.67l1.04,-0.69l0.77,0.14l0.52,1.28l-1.61,0.04l-0.28,0.44ZM760.43,812.89l0.88,-0.13l0.26,-0.64l-0.5,-0.41l0.15,-0.41l0.63,0.7l0.81,2.88l-1.09,0.08l0.75,-0.82l-0.05,-0.55l-1.82,-0.69ZM760.67,715.79l0.04,-0.13l0.16,-0.03l-0.03,0.13l-0.17,0.03ZM756.56,820.97l0.74,0.3l-0.31,0.42l-0.25,-0.25l-0.17,-0.47ZM757.82,819.58l-0.12,-0.84l0.42,0.52l0.64,-0.12l0.38,-0.87l-0.24,-0.7l1.13,-1.29l1.05,2.76l-1.03,2.78l-1.1,-0.5l0.22,-0.21l-0.27,-1.27l-0.49,-0.39l-0.61,0.12ZM706.76,746.86l0.78,-0.8l1.66,1.11l-2.38,0.79l-0.05,-1.1ZM706.24,740.79l0.67,-0.6l0.05,-0.52l0.96,0.27l-0.23,0.91l-0.83,0.35l-0.61,-0.41ZM703.28,742.17l0.9,-0.24l-0.57,1.61l-0.03,-0.9l-0.3,-0.46ZM684.28,723.01l0.13,-1.18l1.05,-0.44l0.81,-0.82l-0.21,-1.8l0.62,-0.16l1.94,1.27l0.55,1.1l-0.15,1.17l0.45,2.18l-0.45,2.24l0.82,0.76l-0.08,1.46l-0.52,1.11l-1.26,1.06l-2.69,1.29l-0.56,-1.28l0.39,-0.73l-0.15,-1.84l-1.05,-0.93l0.11,-1.58l0.53,-1.27l-0.27,-1.63Z", "name": "Tasmania"}, "AU-VIC": {"path": "M620.45,577.42l1.14,1.21l2.11,0.1l1.28,0.63l1.04,-0.33l1.31,0.86l0.48,0.73l1.59,-0.13l1.38,0.83l1.13,0.1l0.3,0.79l0.52,0.35l0.9,-0.21l1.36,-1.59l1.53,-0.9l0.81,-0.15l2.05,0.67l4.47,-0.38l1.21,1.38l1.09,-0.3l0.97,0.8l0.72,-0.01l0.4,1.77l1.11,1.26l0.98,0.72l1.06,-0.11l-0.66,1.79l0.3,2.79l1.84,1.86l-0.01,0.73l1.19,2.11l0.03,0.84l0.72,0.68l1.65,0.56l0.83,-0.12l0.24,-0.55l-0.29,-0.75l1.09,-0.03l0.31,-0.33l0.0,-1.14l0.6,-1.85l1.08,-0.42l1.15,0.8l0.5,1.34l0.55,0.23l0.87,-0.49l0.98,0.75l0.75,-0.41l0.95,0.51l2.0,0.17l2.56,1.29l0.22,0.75l0.43,0.3l0.81,-0.22l0.43,0.31l-0.01,1.33l-0.46,0.63l0.14,0.86l-0.29,1.01l0.76,3.74l1.34,2.19l3.48,1.42l0.17,1.13l-0.33,0.72l0.34,0.84l1.51,0.96l2.75,0.72l2.73,1.85l1.7,0.73l0.54,0.89l2.13,0.73l1.75,2.29l2.17,1.78l1.11,0.21l0.52,0.48l1.51,3.4l0.72,0.91l0.94,0.38l2.46,2.69l1.74,0.45l1.49,1.34l1.81,-0.16l1.55,-1.29l1.47,0.55l0.73,-0.25l0.26,-0.74l-1.1,-1.82l0.6,-1.22l0.18,-1.4l0.56,-0.43l4.47,-0.4l2.54,0.62l1.02,-0.07l2.63,-1.11l1.48,0.31l3.76,3.03l1.04,0.44l1.21,0.1l2.18,-0.42l1.01,1.2l1.69,0.07l3.41,0.96l0.78,-0.49l2.89,0.41l0.54,-0.29l0.98,-1.52l0.71,0.19l0.62,-0.31l0.89,0.48l1.64,0.0l1.32,1.16l1.46,0.14l0.51,0.55l0.87,0.07l0.57,0.57l0.98,-0.08l1.15,0.68l0.89,-0.08l0.73,-0.57l0.49,0.25l0.22,2.17l1.02,1.1l0.68,0.29l1.98,-0.53l0.24,-0.6l-0.41,-0.45l-1.39,-0.25l-0.42,-0.55l-0.29,-1.39l0.9,-1.28l0.91,0.58l2.34,-0.36l0.93,0.56l0.64,-0.1l0.87,-2.36l0.44,-0.39l1.53,-0.31l1.45,1.23l3.55,-1.41l4.11,1.58l0.72,0.95l1.16,0.39l-0.17,1.25l1.14,1.35l-0.28,1.57l1.02,2.77l-0.39,0.99l0.17,0.76l1.43,1.31l0.43,2.62l0.47,0.55l0.64,0.17l0.28,0.6l-0.18,1.14l-1.8,2.76l0.17,0.69l2.14,0.37l38.27,17.79l-1.13,0.44l-1.87,0.14l0.15,-0.62l-0.54,-0.48l-0.57,0.34l-1.36,-0.04l0.97,1.9l-0.85,0.83l-0.97,1.7l-1.18,0.37l-0.58,0.67l-1.79,0.52l-0.6,0.74l-3.0,0.02l-1.42,0.64l-0.53,-0.57l-1.73,0.02l-1.01,-0.34l-0.88,0.33l-6.71,0.22l-1.4,0.64l-2.64,-0.31l-6.65,0.32l-3.93,0.87l-4.73,1.57l-3.56,1.73l-3.8,2.5l-4.29,3.58l-11.72,11.33l-0.6,-0.24l-3.07,0.64l-1.59,-0.02l-1.04,0.63l-2.53,0.18l-0.98,0.62l-1.35,-1.02l-2.17,0.19l-0.9,0.45l-0.92,1.07l0.02,0.55l1.16,1.54l0.51,0.19l0.39,1.91l0.46,0.44l0.92,-0.1l0.93,-1.06l1.12,-0.28l0.84,-1.48l-0.12,1.49l0.31,1.25l-0.62,0.69l-0.43,1.89l0.26,0.57l0.64,0.12l0.1,0.34l-0.88,0.51l-0.09,1.09l-0.47,0.24l-1.19,-0.75l0.43,-1.13l-1.3,-0.97l-0.5,-0.74l-0.35,-1.56l-1.63,-1.92l-2.27,-1.31l-1.65,0.31l-0.49,0.61l-0.14,1.18l-1.15,0.18l-0.47,-1.82l-1.59,-2.78l0.63,-0.55l-1.05,-1.4l-2.06,-0.39l-2.73,1.05l-1.72,-2.48l-2.3,-0.94l0.53,-0.49l-0.04,-2.03l1.39,0.16l1.46,-1.45l-0.13,-0.61l-0.76,-0.68l-0.0,-0.98l-1.39,-1.91l-0.89,-0.23l-2.3,0.4l-1.26,-0.23l-0.53,0.27l-0.08,0.66l-1.3,1.82l0.5,1.79l-2.19,-0.08l-0.59,0.81l-0.77,0.32l-0.56,1.11l-2.03,0.27l-2.71,-2.43l1.96,-0.16l2.41,-1.1l0.13,-0.91l2.7,-3.61l0.3,-1.01l-0.49,-2.25l-0.66,-0.81l-1.1,-0.51l-1.1,-2.62l-1.38,-0.92l-0.52,0.05l-0.41,0.71l-1.6,0.05l-0.64,1.2l-1.45,0.61l-1.35,1.24l-2.57,0.83l-0.7,0.73l-0.2,0.78l-0.67,-0.31l-1.8,0.21l-0.86,0.58l-0.23,0.72l0.58,0.74l3.26,0.58l1.03,-0.15l1.96,-1.15l0.87,0.42l0.25,0.27l-0.16,0.86l-0.94,0.68l-0.45,1.12l-2.31,0.05l-0.88,0.33l-1.09,-0.33l-1.12,0.35l-3.29,2.52l-0.88,0.21l-0.56,0.67l-1.15,0.37l-0.39,0.49l-1.44,0.48l-1.25,1.29l-0.16,0.88l-1.16,0.49l-0.78,1.47l-1.23,1.14l-3.04,0.93l-0.96,1.56l-1.16,0.49l-1.4,1.26l-1.7,-1.48l-2.17,-1.05l-2.9,-0.03l-2.26,-2.27l-1.38,-0.84l-2.55,-0.47l-2.95,-1.02l-3.41,-2.67l-3.03,-1.75l-0.51,-0.86l-0.75,0.09l-0.36,0.55l-1.1,-0.8l-2.03,-0.03l-1.98,0.99l-0.94,-0.16l-1.79,-0.82l-3.21,-2.13l-4.33,-0.58l-2.06,0.6l-0.98,0.67l-0.46,1.21l0.66,1.07l-0.84,-0.15l-0.94,0.99l-0.63,-1.04l-0.79,-0.4l-1.21,-0.03l-0.63,0.72l-0.2,-0.13l0.47,-0.83l0.03,-0.8l-0.65,-1.02l-3.6,-3.06l-5.25,-2.81l-0.02,-101.54ZM742.48,697.34l0.55,0.15l0.64,-0.09l-0.38,0.36l-0.82,-0.42ZM716.12,685.94l1.1,0.42l1.64,-0.19l0.63,0.66l-1.27,0.18l-1.26,1.21l-1.1,-0.5l-0.23,-0.8l0.5,-0.98ZM712.85,690.71l0.94,-0.82l1.89,-0.13l0.14,1.03l-0.84,-0.19l-1.24,0.42l-0.89,-0.32ZM716.43,691.14l0.01,0.0l0.0,0.01l-0.01,-0.01Z", "name": "Victoria"}, "AU-NT": {"path": "M355.89,126.72l1.43,0.54l0.66,1.11l1.18,0.57l-0.2,1.55l0.52,1.31l-1.0,2.33l0.41,0.54l0.8,-0.37l0.55,0.68l0.36,-0.31l0.6,-2.58l0.49,-0.44l-0.78,-4.9l0.52,0.33l0.64,-0.59l1.03,0.3l0.51,0.66l2.19,0.62l0.78,1.64l1.18,0.87l0.52,1.27l-0.27,1.14l0.63,0.38l1.17,-0.69l0.13,1.03l0.59,0.39l1.08,-0.12l0.42,-0.62l-0.27,-0.77l-1.39,-1.58l-0.59,-1.47l-0.31,-1.57l0.64,-2.04l0.84,0.36l2.26,0.15l1.69,-0.58l1.08,-1.02l1.02,0.33l0.59,-0.38l0.23,-1.7l-0.3,-0.67l-0.72,0.13l-0.4,0.77l-3.15,1.24l0.23,-0.64l-0.39,-0.44l-1.53,0.59l-0.95,-0.69l-0.06,-0.78l-1.33,-1.03l-0.31,-0.85l2.52,-0.26l1.78,-1.56l0.08,-0.44l-0.95,-0.2l-2.08,0.94l-2.74,-0.62l-3.7,-2.86l0.28,-1.52l0.77,-0.95l0.26,-1.19l1.44,-1.63l0.21,-2.05l0.6,0.53l1.35,0.04l0.46,-1.19l2.27,-0.41l0.59,-0.67l0.37,-1.68l-0.73,-1.26l2.12,-2.22l-0.63,-1.84l0.96,-2.36l0.18,-1.48l0.8,-0.81l0.24,0.82l1.41,0.58l1.88,-0.59l1.47,-1.14l0.69,0.07l2.55,-3.01l1.48,0.53l0.46,-0.5l-0.51,-1.03l-1.59,-0.69l-1.78,-2.36l-0.83,-0.24l0.25,-4.55l0.71,-0.34l0.44,0.51l0.63,0.11l2.3,-0.95l0.81,-1.58l0.19,-2.26l-0.27,-1.21l0.75,0.16l1.04,-1.19l1.41,0.56l0.41,-0.13l0.45,0.72l0.98,0.63l0.59,0.15l1.83,-0.39l0.2,-0.41l-0.27,-0.49l-1.82,-0.53l-0.17,0.19l-0.29,-0.43l0.83,-0.72l-0.25,-0.76l-0.54,-0.16l0.51,-1.4l-0.28,-1.0l0.59,-0.71l-0.49,-0.57l3.22,0.87l0.28,3.32l0.36,0.29l0.4,-0.24l0.18,-0.68l1.09,1.52l0.95,0.59l0.17,-0.86l0.96,0.54l0.47,-0.03l0.12,-0.45l-0.37,-0.8l-1.57,-1.29l1.43,0.6l0.52,-0.51l-0.45,-0.84l-1.66,-1.32l-1.04,0.07l0.11,-0.54l1.38,-1.41l2.94,0.86l0.58,-0.35l-0.55,-1.6l-0.05,-1.64l-0.6,-0.88l0.37,-0.57l0.86,0.42l0.75,-0.33l0.46,0.58l0.73,-0.0l1.37,1.27l0.88,0.07l0.28,-0.64l-0.37,-0.52l0.4,-0.52l0.38,-2.28l0.44,2.5l0.46,0.88l2.48,1.77l1.15,0.19l1.81,-0.3l0.89,0.27l3.76,-0.58l2.28,-1.2l0.73,0.99l2.99,1.03l1.51,-0.79l1.15,-1.14l1.17,-0.47l0.35,-0.92l0.29,1.26l0.42,0.3l1.53,-0.59l0.35,0.15l0.82,1.76l-0.72,0.87l0.27,1.2l0.44,-0.13l1.4,-1.85l-0.53,-1.81l0.28,-1.37l2.47,-1.29l2.47,1.0l1.84,-0.08l0.33,-0.34l-0.23,-0.41l-0.97,-0.17l-1.35,-0.9l-0.34,-0.63l0.55,-4.39l-0.29,-0.79l-0.93,-0.66l1.2,-1.36l0.3,-0.8l0.69,-0.52l-0.25,-0.52l-2.48,-0.89l-0.42,-0.42l0.04,-0.79l-1.36,-1.68l-2.0,-0.99l-1.7,-0.07l-0.85,0.51l-1.48,-0.13l-2.67,1.45l-0.56,-0.01l-0.89,-0.88l0.45,-0.33l-0.06,-0.59l-0.72,-0.45l-0.75,0.12l-0.39,-0.49l0.26,-0.48l-0.26,-0.6l-0.93,-0.07l-0.29,-0.65l-1.67,-0.4l0.19,-0.67l-0.29,-0.59l0.65,0.12l0.31,-0.44l1.12,1.2l1.11,-0.64l0.22,-1.89l1.18,1.08l0.09,0.61l0.63,0.31l-0.02,1.95l0.97,0.59l0.15,0.87l0.72,0.6l0.65,0.09l0.45,-0.41l-0.1,-0.68l0.54,-0.1l0.28,-0.54l-0.24,-0.71l-0.69,-0.59l-0.1,-1.82l-0.92,-1.49l1.29,1.37l0.52,1.33l0.61,0.42l0.59,-0.26l-0.27,-2.08l0.23,-0.17l0.88,-0.06l0.54,1.12l-0.12,1.35l0.48,0.6l0.85,-0.35l0.36,-1.13l0.55,0.15l0.8,1.44l0.09,0.82l0.74,0.13l0.51,0.82l0.92,0.65l1.56,2.4l0.92,0.18l0.77,-0.25l2.29,-2.34l0.84,0.39l0.51,-0.27l0.02,-1.42l0.27,0.12l0.45,0.85l1.12,0.89l0.7,1.32l0.71,0.41l-0.02,1.13l2.08,3.26l0.6,0.4l1.73,0.29l0.68,-0.22l0.54,-0.63l-0.36,0.83l0.49,0.69l1.49,-0.16l1.87,0.84l1.16,-0.57l-0.37,1.57l0.25,0.59l0.63,-0.08l0.51,-1.11l0.36,-0.16l0.6,0.69l1.22,-0.31l0.56,-0.94l1.39,-0.13l1.2,-1.22l2.01,0.54l-0.37,0.46l-0.54,-0.01l-0.67,0.49l-0.28,0.88l0.36,0.71l2.24,1.34l1.74,-0.71l0.61,-0.85l0.61,0.7l0.04,0.97l0.65,0.15l0.77,-0.71l0.56,0.98l-0.21,0.48l0.48,1.02l-0.13,1.22l0.48,0.48l0.44,-0.08l1.39,-1.4l0.25,-0.92l2.1,1.59l3.19,0.51l1.95,-0.17l2.34,-2.22l0.91,-0.21l0.08,0.87l0.76,1.16l0.66,0.04l0.26,1.33l0.42,0.57l2.25,0.41l0.74,1.27l1.63,1.31l1.69,-0.34l1.21,1.09l0.66,0.15l0.64,-0.73l-0.84,-0.85l0.78,-0.1l0.95,0.75l1.48,-0.58l0.14,-0.51l-0.55,-0.37l-0.71,0.11l-0.79,-0.46l1.35,-0.85l-0.07,-0.65l0.9,-0.46l0.5,0.03l0.55,0.53l0.9,-0.0l1.12,-0.38l0.33,-0.43l1.32,0.46l3.01,-2.03l1.74,-0.44l-3.61,3.27l-0.08,1.18l0.41,0.91l1.39,1.68l0.72,-0.01l0.41,-0.85l0.82,-0.29l0.36,-0.87l1.49,-1.33l0.23,0.5l0.51,0.03l-0.02,0.65l0.67,1.14l0.62,0.18l1.11,-0.48l-1.36,2.32l0.96,2.34l0.69,0.3l0.64,-0.59l0.57,0.2l1.04,-0.26l0.7,0.59l1.87,-0.49l0.8,-0.63l1.99,-4.17l-0.64,-1.1l-0.92,-0.24l-1.54,0.19l-0.5,-0.45l1.88,-2.33l0.91,-0.13l2.26,-1.98l0.44,1.01l1.05,-0.28l0.53,1.73l0.51,0.32l0.17,1.83l2.36,2.63l1.07,-0.01l1.13,-0.95l-0.14,-0.74l-0.99,-0.54l0.7,-0.31l1.14,0.95l1.2,0.29l0.59,0.76l0.39,0.54l0.21,1.46l-2.14,2.06l-0.64,-0.57l-1.36,0.71l-0.27,1.06l0.23,1.17l-1.02,1.14l-0.49,1.24l0.13,0.5l-1.11,0.01l-0.58,0.49l-0.14,0.7l0.42,0.7l0.02,0.88l-0.82,-1.83l-0.94,0.06l-0.39,0.77l-0.38,-0.31l-0.7,0.18l0.33,2.22l1.2,0.82l0.42,0.78l1.56,0.74l-0.78,0.36l-0.25,-0.55l-0.63,-0.24l-1.42,0.59l0.09,1.04l1.24,1.19l-0.47,1.3l-0.65,0.1l-0.48,0.57l-0.13,1.09l-0.36,-0.15l-0.87,0.49l-0.41,-0.69l0.03,-3.0l-0.34,-0.4l-0.87,-0.21l-1.0,1.24l0.14,1.41l-0.73,-0.8l-0.5,0.09l-0.49,0.62l0.23,0.98l-0.51,0.16l-0.24,0.52l-0.65,0.18l0.24,-1.9l-0.2,-0.55l-0.73,-0.19l-0.98,0.98l-0.43,1.25l-0.63,0.29l-0.78,-0.49l-0.55,0.18l-0.51,0.85l-1.04,0.28l-0.86,1.28l-0.12,1.22l0.92,0.53l-0.04,0.67l-0.69,-0.17l-0.67,0.42l0.16,2.52l-0.53,1.2l0.61,1.41l0.53,0.45l-0.17,0.94l0.55,0.75l1.0,0.26l0.88,-0.25l0.96,-0.9l-0.77,1.64l0.12,0.68l-0.45,1.68l-1.53,1.44l-0.36,4.83l-0.97,0.3l-2.22,1.56l-2.03,3.61l-0.95,0.14l-0.36,0.51l-1.73,2.95l-0.27,1.53l-1.29,0.63l-0.46,0.76l-0.98,-0.21l-0.54,0.36l0.71,2.49l1.55,3.17l1.87,1.66l1.5,0.65l0.72,-0.09l1.3,1.43l1.12,0.22l2.19,1.33l1.95,1.96l2.1,0.89l1.25,1.01l2.72,1.38l0.57,1.19l0.45,2.19l1.76,1.3l1.49,0.19l2.44,2.16l0.71,0.19l0.72,-0.29l0.3,0.79l2.35,2.35l-0.34,0.98l0.27,0.76l0.97,0.22l0.93,-0.81l1.73,0.17l0.76,0.59l0.64,0.01l0.37,-0.38l0.03,-0.66l0.85,-0.47l1.18,1.18l3.37,1.42l3.66,3.14l1.02,0.16l0.39,0.47l0.56,0.0l0.88,0.62l1.38,-0.11l4.14,1.73l2.62,4.12l2.88,2.37l0.0,218.24l-198.16,0.0l0.0,-255.87ZM418.04,45.87l-0.23,0.1l-0.15,0.02l0.09,-0.18l0.29,0.07ZM509.0,65.5l0.07,-0.13l0.12,0.01l-0.17,0.1l-0.02,0.01ZM518.27,90.23l-0.04,0.06l-0.02,-0.06l0.06,-0.0ZM508.38,93.8l0.1,0.07l0.23,0.03l-0.17,0.11l-0.16,-0.21ZM511.01,67.43l0.01,-0.01l0.26,-0.13l0.02,0.05l-0.29,0.08ZM503.74,61.54l-1.64,0.29l-0.96,0.68l-0.1,-0.28l0.55,-1.12l0.88,0.27l1.23,-0.79l0.91,0.15l-0.88,0.81ZM504.85,60.62l0.64,-0.4l1.03,-0.82l-0.72,0.91l-0.94,0.3ZM507.15,58.75l0.0,-0.01l0.01,-0.0l-0.01,0.01ZM508.1,57.51l-0.08,-0.33l-0.22,-0.51l0.56,0.19l-0.26,0.65ZM360.85,126.32l-0.01,-0.05l0.0,0.0l0.01,0.05ZM531.38,144.9l0.16,-0.53l0.78,0.13l0.28,-0.96l1.18,0.72l-0.1,2.04l0.58,0.62l-0.44,0.97l-0.38,-0.82l-0.77,-0.33l-0.36,-1.55l-0.93,-0.28ZM519.62,110.65l0.67,-1.43l-0.59,-2.65l0.45,-2.65l-0.49,-1.1l0.57,0.5l0.52,0.03l0.81,-0.04l0.61,-0.56l1.0,0.01l1.31,-0.97l-0.58,-1.12l1.09,-0.48l-0.09,1.06l0.61,0.43l0.35,1.43l0.7,0.41l1.89,0.08l0.69,-0.78l-0.08,-1.25l0.9,-0.01l0.28,0.61l-1.0,1.11l-0.35,0.98l-1.33,0.18l-0.66,0.72l-0.21,1.5l0.63,0.59l-1.78,0.75l-0.15,1.47l0.7,1.77l1.56,0.02l0.23,-0.67l1.76,1.19l0.89,-0.75l0.31,0.76l-0.25,0.83l-0.63,0.22l-3.49,-0.79l-1.31,0.64l-0.73,-0.09l-4.86,-1.92ZM530.8,110.51l0.0,-0.0l0.0,0.0l-0.0,0.0ZM525.21,99.98l0.36,-0.67l0.3,-0.02l-0.13,0.45l-0.53,0.24ZM526.86,145.61l0.13,-1.36l0.19,0.01l0.16,1.06l-0.48,0.29ZM521.53,48.5l1.34,-0.94l0.27,-0.41l-0.18,0.37l-1.05,1.19l-0.37,-0.21ZM523.47,46.55l0.74,-1.75l0.73,-0.99l0.79,-0.33l-0.83,0.67l-1.43,2.39ZM524.86,146.25l-0.6,-0.87l0.65,-0.55l0.64,0.38l-0.68,1.04ZM521.92,143.29l-0.09,-0.72l0.45,-0.92l1.05,-0.36l-0.3,1.81l-1.11,0.18ZM521.59,100.37l0.08,0.24l-0.17,0.69l-0.53,-0.6l0.62,-0.34ZM515.68,53.56l0.24,-0.31l0.44,-0.74l0.23,0.26l-0.91,0.8ZM513.57,62.92l0.86,-0.42l0.25,0.2l-0.47,0.35l-0.65,-0.13ZM513.21,101.75l-0.01,-0.69l0.26,0.12l-0.25,0.57ZM513.21,102.21l0.03,0.18l-0.03,-0.01l-0.0,-0.16ZM514.23,100.99l0.75,-1.56l1.22,0.82l-0.83,0.48l-0.1,0.34l0.57,0.61l-0.6,1.18l-0.51,-1.48l-0.5,-0.4ZM513.43,94.67l0.2,-0.63l0.02,-0.22l0.27,0.43l-0.48,0.42ZM510.12,54.83l-0.51,-0.07l1.07,-0.63l-0.28,0.32l-0.27,0.38ZM504.39,126.47l0.07,-0.33l-0.1,-0.23l0.32,0.37l-0.29,0.19ZM486.98,62.49l0.03,-0.0l0.0,0.0l-0.02,0.01l-0.02,-0.01ZM485.63,63.39l0.54,0.1l-0.02,0.34l-0.25,0.04l-0.27,-0.47ZM454.09,50.17l0.13,-0.09l0.08,0.14l-0.16,-0.03l-0.06,-0.01ZM452.27,53.38l0.03,-0.01l0.17,0.41l-0.06,0.02l-0.14,-0.42ZM434.46,54.14l1.26,0.02l0.01,0.07l-0.28,0.6l-1.14,0.18l-0.82,-0.99l0.32,-0.17l0.65,0.3ZM433.13,40.66l1.23,-0.46l0.58,1.41l-0.66,1.05l0.78,0.6l0.2,1.54l-0.51,1.34l-0.44,-1.53l-1.17,-1.68l0.52,-0.78l-0.53,-1.5ZM429.88,63.81l0.68,0.02l-0.03,0.45l-0.01,0.0l-0.63,-0.47ZM388.46,45.73l0.19,0.38l0.6,0.14l0.66,-0.5l0.49,0.43l-0.85,1.52l0.48,0.81l0.76,-0.08l0.9,-0.83l0.91,1.53l0.73,0.07l0.54,-0.96l2.48,-0.49l1.11,-1.08l0.48,-0.06l1.6,0.78l0.31,1.27l0.36,0.27l0.52,-0.53l0.42,-1.83l1.74,-1.16l0.4,1.46l0.88,1.42l0.64,0.26l0.41,-0.56l-0.33,-2.1l-0.35,-0.37l0.11,-0.61l0.43,-0.68l0.66,-0.29l0.31,0.62l-0.3,0.71l0.45,0.57l0.63,-0.08l0.43,-0.65l0.71,0.3l0.93,-0.24l0.87,2.86l0.3,0.4l1.03,-0.21l0.11,1.3l-0.91,-0.0l-0.5,0.59l-0.34,1.72l0.24,0.65l-1.67,-0.59l-2.12,3.28l-1.32,0.44l-5.74,4.16l-1.26,-1.19l-4.49,-1.99l-0.23,-0.57l-2.11,-1.43l-0.51,-0.67l-1.33,-0.4l-0.24,-2.15l-1.15,-1.39l-0.81,-3.26l0.19,-1.08l-0.71,-0.87l0.22,-1.47l2.09,2.41ZM378.38,56.74l0.59,0.01l0.56,-0.49l-0.1,-1.47l1.5,0.55l0.63,-0.24l0.82,-0.95l-0.3,-2.5l0.3,-1.02l-0.8,-0.9l1.34,-1.21l0.85,-1.31l1.2,-0.18l1.05,2.05l-0.33,0.97l0.13,1.09l1.61,1.53l-0.32,2.31l0.53,0.38l0.69,-0.27l1.36,0.32l1.54,1.16l-0.09,0.49l-0.94,0.42l-1.6,0.14l-3.8,-1.49l-4.6,1.28l-1.27,-0.09l-0.56,-0.61ZM378.62,87.87l0.0,-0.0l0.01,0.0l-0.01,-0.0ZM367.78,126.07l0.13,0.18l0.18,0.5l-0.31,-0.69Z", "name": "Northern Territory"}, "AU-QLD": {"path": "M895.23,423.61l0.32,-1.8l-0.29,-0.7l0.29,-1.4l-0.28,-1.26l0.7,-1.19l0.05,-0.87l0.74,0.6l0.78,0.04l-1.73,6.51l-0.57,0.07ZM554.86,165.23l3.44,2.77l2.03,0.68l0.53,0.48l1.77,0.01l2.58,1.08l3.56,-0.34l0.63,0.65l3.52,1.44l3.63,0.53l0.49,0.35l0.63,1.47l1.83,1.13l-0.24,0.58l0.28,2.45l1.29,2.74l0.79,0.98l1.78,0.88l2.7,0.36l4.52,3.58l3.59,0.83l2.55,1.15l0.62,1.04l1.23,0.96l2.68,0.21l2.72,-0.31l3.72,-0.8l0.9,-0.6l1.39,-0.12l2.27,-1.21l1.74,-1.36l1.12,-0.24l0.69,-1.05l1.85,-0.78l0.86,-2.2l0.47,-2.74l1.0,-2.05l0.24,-1.48l-0.27,-1.25l2.19,-2.8l0.73,-1.92l0.72,-0.18l1.9,-2.19l0.78,-2.97l0.58,-0.25l0.71,-1.51l0.27,-1.3l-0.32,-0.86l0.63,-0.93l0.74,-3.24l1.75,-3.53l-1.15,-3.05l0.58,-0.8l0.77,-5.54l1.03,-3.8l1.85,-4.36l0.22,-1.52l1.22,-1.66l-0.02,-0.91l0.52,-0.51l0.07,-2.3l-1.28,-2.59l-1.81,-8.81l0.24,-1.73l1.5,-4.45l-0.05,-2.16l-0.39,-1.04l-2.14,-2.82l-0.35,-1.73l0.13,-1.92l1.15,-4.54l2.21,-4.67l0.84,-0.18l-0.02,-0.89l0.67,-1.62l-0.26,-1.01l-1.28,-1.73l-0.44,-2.83l-0.42,-0.4l0.88,-1.4l2.39,-1.5l1.32,-3.23l0.29,0.19l0.47,-0.42l0.46,0.54l0.34,2.91l0.94,1.4l0.46,0.19l0.29,-0.4l-0.02,-1.38l-0.54,-1.78l1.52,-0.52l0.55,-0.8l-2.09,-0.35l-1.54,-1.02l1.81,-1.02l0.67,0.02l0.42,-0.32l-0.25,-0.46l-1.1,-0.46l-0.79,0.35l-1.99,0.0l-1.55,-1.5l0.63,-0.5l-0.12,-0.73l-2.18,-0.29l1.55,-4.06l1.35,0.27l0.84,-0.5l-0.85,-1.22l-0.3,0.09l0.93,-2.82l1.39,-1.79l0.46,2.78l0.3,0.39l0.45,-0.2l0.7,-1.28l0.99,0.66l0.6,-0.2l0.24,-0.69l-0.05,-0.51l-0.91,-1.09l-0.87,-0.35l-0.04,-1.38l0.41,-1.79l0.97,-1.31l0.0,-1.15l2.67,-8.19l0.05,-2.32l0.58,-1.99l-0.21,-4.27l4.04,-1.23l1.49,-1.76l0.87,-2.14l1.02,0.04l0.68,-0.39l1.37,0.86l-0.91,0.75l-0.39,0.82l-0.87,0.54l-0.26,2.04l0.47,0.57l0.46,-0.14l0.62,-0.55l0.46,-1.07l0.61,-0.03l0.27,1.1l0.71,0.42l0.0,1.25l0.73,0.07l0.54,-0.55l0.48,0.02l0.75,1.63l0.61,2.49l-0.3,1.02l0.18,1.43l0.91,0.79l0.63,1.46l-1.09,2.0l0.4,0.8l-0.02,1.44l0.42,0.82l0.11,5.23l3.08,2.43l2.6,-0.66l1.8,1.36l-2.54,3.71l-0.2,4.07l0.86,0.7l1.74,-0.02l1.41,0.98l0.91,3.25l2.89,1.58l-1.13,2.55l-0.44,3.25l0.21,0.47l0.72,-0.43l0.58,0.19l0.76,-0.36l1.25,0.1l-0.48,1.25l0.32,0.66l-0.18,2.7l0.54,2.73l-0.01,3.02l1.49,2.25l-0.28,1.49l0.27,0.74l-0.64,1.4l-0.76,3.6l1.49,3.02l0.34,1.5l1.65,1.49l0.45,4.35l0.9,2.94l0.81,1.53l1.52,1.57l2.6,0.91l2.63,-1.21l2.22,-1.88l0.52,-0.99l0.07,-1.39l0.58,0.08l0.48,0.72l1.37,0.3l3.11,-1.46l0.92,-1.77l0.24,0.07l1.31,1.75l-0.23,1.73l0.22,0.63l1.08,0.19l-0.4,0.79l0.16,1.66l1.36,1.78l0.64,0.28l1.26,-0.19l0.94,1.06l2.19,0.28l0.62,1.11l0.28,1.52l1.87,1.59l0.89,-0.1l2.1,0.96l0.96,-0.02l0.25,0.86l1.26,1.49l1.18,0.07l-1.93,2.95l-0.18,2.12l0.56,1.48l0.9,0.53l-0.52,0.9l0.11,1.09l-0.63,0.42l-0.31,1.12l0.58,0.57l0.19,0.72l-0.29,0.83l1.1,1.17l0.15,0.53l-0.31,0.79l1.27,2.62l-0.15,1.42l0.3,0.56l-0.38,0.7l0.01,0.86l1.7,2.15l0.65,1.41l-0.61,3.05l0.63,0.65l0.12,0.68l-1.15,1.58l-0.34,2.77l0.58,0.93l0.88,0.08l0.37,1.08l2.2,3.25l2.04,1.44l0.35,0.96l0.77,0.51l1.1,1.68l-0.53,0.22l-0.24,0.53l1.0,1.98l0.98,-0.24l-0.16,-1.28l0.85,-0.75l0.78,0.41l1.3,-0.85l-1.39,2.61l-0.21,1.48l1.56,2.34l0.34,1.8l1.41,2.7l0.92,0.86l-0.1,2.71l1.7,2.45l-0.89,1.14l-0.02,1.82l-0.44,0.59l0.53,1.74l-0.28,1.49l-2.0,4.73l0.11,2.47l2.14,2.73l1.68,0.54l0.55,2.79l0.51,0.46l2.34,0.23l-0.16,1.57l-0.87,2.29l-0.47,3.29l0.21,0.74l1.34,2.03l1.67,1.14l1.22,1.54l1.26,0.48l1.04,1.03l2.03,0.99l1.1,0.23l0.98,-0.38l1.1,1.35l2.27,1.57l1.56,-0.19l1.55,-1.64l0.11,1.9l1.72,2.27l0.99,-0.1l2.07,0.56l0.71,-0.3l2.89,0.04l0.76,-0.38l0.48,1.13l1.28,1.55l0.87,2.51l0.12,1.08l-0.71,0.35l2.73,3.17l2.51,0.3l0.38,-0.55l-0.64,-1.51l-0.05,-1.08l0.97,0.31l0.32,0.31l0.64,2.73l1.38,1.17l2.09,0.36l0.48,-0.54l0.78,-0.16l1.03,1.18l3.01,0.73l0.44,1.0l-0.38,0.17l0.01,1.55l2.86,2.03l0.22,0.64l0.98,0.03l0.89,-0.66l-0.19,-0.6l0.45,-0.79l-0.83,-1.17l0.85,0.54l1.2,-0.37l0.18,1.53l0.69,0.91l0.17,0.77l0.75,0.12l0.45,-0.3l0.32,1.38l0.56,0.33l1.79,-0.78l0.12,0.93l1.19,1.26l-0.19,0.86l0.29,0.93l-1.03,-0.29l-0.66,0.88l-1.18,-0.75l-0.5,0.45l0.37,1.64l-0.96,0.57l-0.41,0.51l0.11,0.39l0.82,1.41l0.63,0.29l-0.29,0.43l0.62,1.3l0.67,0.4l0.53,0.89l1.1,0.08l0.18,1.03l-0.53,1.6l0.82,0.13l0.71,-0.78l0.92,0.53l0.87,-0.14l1.12,0.83l0.18,0.56l-0.24,0.51l0.3,0.53l1.33,-0.14l0.55,0.53l0.75,0.07l1.56,1.91l0.0,0.59l-0.78,1.38l0.06,1.09l0.9,1.51l0.81,-0.2l0.52,0.36l-0.12,0.57l0.51,1.15l-0.37,0.14l-0.22,0.64l0.74,0.46l-0.68,0.66l-0.01,1.33l0.44,0.32l1.07,-0.53l0.74,0.3l0.09,0.84l0.59,0.81l0.89,0.15l-0.5,1.04l0.79,1.89l-0.81,0.52l-0.13,1.09l0.91,1.52l-0.02,1.8l1.04,1.93l0.16,1.45l0.87,1.7l-0.35,0.7l1.16,1.46l-0.4,0.7l0.14,0.41l1.27,0.56l0.5,0.84l0.64,0.27l-0.07,1.67l-0.78,1.08l0.42,0.58l0.8,-0.16l1.62,-1.04l0.88,-1.37l1.17,1.87l1.79,1.5l1.37,2.34l0.58,0.34l0.58,-0.45l-0.56,-2.19l-2.01,-4.4l0.42,-0.47l-0.53,-0.9l1.08,-2.64l1.23,-0.52l0.38,0.2l0.88,1.95l0.73,0.51l1.0,2.68l4.64,2.23l0.88,0.91l1.62,0.56l2.03,1.68l0.56,-0.04l0.13,-0.7l-0.63,-0.91l-0.17,-1.35l-0.68,-0.53l-0.2,-1.05l0.47,-1.8l0.99,0.13l-0.03,1.25l2.74,1.43l-0.55,0.73l-0.76,-0.4l-0.6,0.73l0.31,0.58l-0.16,0.35l0.46,0.56l0.4,-0.1l0.33,1.49l0.56,0.1l0.48,-0.36l0.11,0.65l0.6,0.32l0.32,0.76l-0.88,4.8l-0.86,0.16l-0.21,0.59l0.77,0.77l0.14,1.49l-0.34,2.86l0.72,0.62l0.2,1.19l0.7,0.35l-1.1,1.41l0.59,2.38l1.41,1.63l-1.01,0.01l-0.42,0.56l1.12,0.59l0.52,1.05l0.46,0.2l1.18,-0.64l1.31,0.52l0.47,0.85l1.91,1.55l0.64,1.95l0.74,1.09l2.02,0.6l0.35,0.65l0.71,0.14l2.65,3.41l0.99,-0.35l1.07,0.69l-0.2,0.9l0.49,0.73l0.48,0.21l0.55,-0.31l0.17,-0.69l0.55,-0.05l1.42,1.03l0.58,-0.44l-0.18,-0.78l0.74,0.43l0.62,-0.51l0.81,2.27l0.97,0.74l0.91,-0.05l0.78,0.89l1.5,4.58l1.21,2.43l1.49,1.92l4.11,3.16l2.23,0.61l1.28,1.19l0.6,1.87l0.15,2.58l1.97,2.99l0.86,0.53l-1.12,-0.01l-0.36,0.48l0.19,0.46l1.17,0.31l1.71,1.42l2.6,0.75l0.6,-0.32l1.48,0.38l0.28,2.58l-0.89,0.56l-0.42,0.84l0.52,0.51l1.1,-0.56l-0.07,0.4l0.39,0.43l-1.18,1.26l0.07,2.35l-0.48,0.66l0.86,0.82l0.16,0.81l1.26,0.62l0.72,1.25l0.27,1.61l-0.3,1.64l0.4,0.39l0.51,-0.22l0.78,-2.09l0.6,1.29l1.41,0.43l-1.0,2.23l-1.52,6.21l0.4,1.37l0.95,0.43l-0.48,1.51l-0.08,4.49l0.29,0.9l0.57,0.28l-0.06,4.71l1.39,4.22l-1.72,0.02l-0.91,0.55l-0.89,1.13l-0.27,1.18l0.67,0.58l1.04,0.01l-0.03,0.43l-1.12,1.21l0.13,0.82l0.68,0.62l1.59,0.65l0.55,2.06l1.48,0.78l0.98,2.09l0.24,1.98l1.01,1.82l0.99,1.07l0.0,0.89l0.67,0.18l-0.2,1.63l-0.46,0.33l-0.22,1.1l0.46,0.76l0.54,-0.07l0.15,2.27l1.08,1.52l-2.88,2.07l-0.64,-0.16l-2.92,0.43l-1.96,2.26l-5.27,-0.75l-2.4,0.85l-3.04,-1.56l-0.44,0.11l-0.65,0.85l-0.65,-1.23l-0.72,-0.45l-0.61,0.05l-1.34,1.09l-0.88,1.36l-2.08,0.48l-1.31,1.17l-1.54,0.06l-4.59,2.63l-0.06,0.97l0.55,0.56l0.4,1.15l1.32,1.47l-0.38,0.65l-0.67,3.73l-1.65,0.52l-1.61,-0.2l-0.76,1.19l-0.91,-0.27l-0.73,-1.38l-0.59,-0.26l-1.59,0.95l-2.03,0.64l-1.01,1.61l-0.14,1.21l-2.09,2.1l-0.72,0.3l-0.28,-0.06l-0.14,-0.93l-0.53,-0.45l-0.61,-4.24l-3.0,-2.06l-2.04,-0.35l-0.13,-1.66l-0.43,-0.7l-1.44,-0.27l-0.92,-0.81l-3.22,-1.32l-3.95,0.55l-3.62,-0.27l-3.37,-2.67l-1.53,0.48l-1.77,-0.03l-3.11,1.1l-5.66,0.15l-1.12,0.39l-1.62,-0.28l-0.6,-1.0l-2.77,0.35l-0.64,0.48l-1.09,1.93l-3.13,1.35l-2.08,1.92l-1.85,0.71l-0.82,2.25l-1.85,1.35l-175.66,0.0l0.0,-71.14l-0.4,-0.4l-65.92,0.0l0.0,-217.36ZM634.98,72.13l0.07,1.52l-0.75,0.25l-0.0,-0.27l0.68,-1.5ZM794.18,253.26l0.98,0.76l0.04,0.74l-0.87,-0.5l-0.16,-1.0ZM857.22,337.03l-0.47,-0.71l-0.74,-0.46l0.64,0.02l0.73,0.67l-0.16,0.48ZM808.2,279.27l0.01,-0.03l0.0,0.01l-0.01,0.01ZM894.45,408.27l1.55,-0.69l-1.09,4.97l-0.28,-0.55l-0.17,-3.73ZM886.84,364.36l3.44,-2.59l1.5,-2.35l0.17,-1.15l-0.25,-1.08l-1.78,-2.48l2.02,-1.81l0.03,3.73l0.45,1.38l1.48,1.63l-4.67,10.55l-1.71,4.78l0.38,1.54l-0.03,0.65l-0.47,0.56l-0.97,-1.28l-0.27,-2.41l-0.88,-0.96l0.03,-0.5l0.83,-0.7l0.33,-2.12l0.73,-0.78l0.75,-1.69l-0.23,-1.4l0.21,-0.83l-1.09,-0.71ZM842.74,323.55l0.45,-0.06l0.34,0.55l1.96,0.73l0.16,0.55l0.92,-0.1l-0.13,1.06l0.28,1.24l1.28,1.66l0.04,0.62l-0.42,0.5l-0.86,0.08l-0.82,-0.93l-0.54,-1.35l-3.32,-3.96l0.65,-0.58ZM830.57,296.15l0.43,-0.69l0.69,0.74l-0.8,0.78l-0.32,-0.83ZM817.53,293.83l-0.31,-0.73l0.24,-1.22l0.32,0.61l-0.26,1.34ZM813.87,298.45l-0.07,-0.18l0.14,-0.5l0.02,0.02l-0.09,0.67ZM796.93,249.38l0.39,-0.61l-0.26,-0.51l0.15,-0.74l0.2,1.17l0.86,0.91l-0.31,0.45l-0.56,-0.05l0.0,-0.38l-0.46,-0.25ZM795.44,246.36l0.61,-1.24l0.25,-0.0l-0.29,0.78l0.26,0.48l-0.83,-0.02ZM749.09,223.31l0.73,-0.21l0.41,0.11l-0.82,0.53l-0.33,-0.44ZM744.59,213.75l0.15,0.18l0.24,0.43l-0.63,0.03l0.24,-0.64ZM736.61,202.99l0.82,0.06l-0.34,1.45l1.2,1.37l-0.24,0.47l0.52,0.45l-0.84,1.33l-1.16,-0.41l-0.49,-1.93l-0.63,-1.0l-1.67,-1.4l2.22,0.7l0.49,-0.26l0.11,-0.83ZM659.42,3.33l-0.8,0.47l-1.97,-0.24l0.39,-0.17l2.38,-0.05ZM647.59,21.5l0.41,-0.9l0.53,-0.17l1.05,0.16l0.38,0.57l-0.85,1.1l-1.23,-0.35l-0.29,-0.41ZM649.38,30.72l-0.54,-0.03l0.07,-0.46l0.67,0.13l-0.2,0.37ZM645.89,31.65l1.45,-1.0l1.33,1.91l-1.38,0.41l-0.5,0.65l-0.85,-1.0l-0.05,-0.97ZM646.88,0.56l0.57,-0.14l1.03,0.3l-0.66,0.02l-0.94,-0.18ZM646.3,20.63l-0.86,-0.94l0.77,-1.18l0.64,0.62l-0.55,1.5ZM580.08,168.21l-0.09,-0.42l0.25,-0.33l0.0,0.68l-0.16,0.08ZM580.47,166.56l0.24,-0.86l0.98,-1.02l0.14,-0.7l1.68,-1.28l3.93,-0.62l2.03,-0.85l1.14,0.89l0.93,0.16l0.41,0.52l-0.13,0.45l-0.86,0.0l-0.88,0.44l-1.12,-1.25l-0.92,0.65l-0.86,0.13l-0.15,0.84l-0.47,0.41l0.06,1.06l-0.45,1.02l-0.41,-0.43l-0.64,-0.04l-0.67,1.13l-1.29,0.67l-1.31,-0.01l-0.83,-1.11l-0.54,-0.22ZM585.94,176.86l0.11,-0.05l-0.09,0.11l-0.03,-0.05ZM586.42,176.57l1.36,-1.68l0.73,0.61l-0.07,0.48l0.39,0.53l-1.23,0.38l-0.42,-0.42l-0.77,0.11Z", "name": "Queensland"}, "AU-SA": {"path": "M431.55,527.42l-1.49,-0.08l-2.09,0.56l-1.63,-0.43l-2.53,-2.65l-3.47,-2.09l-3.13,-2.37l-5.49,-3.01l-8.05,-3.16l-1.12,-0.04l-3.16,1.95l-4.34,1.28l-5.33,-0.55l-8.64,-0.29l-1.79,0.5l-2.99,-0.12l-4.19,0.64l-4.76,0.16l-1.91,0.52l-5.56,0.32l-1.42,0.52l-2.56,0.22l-0.0,-135.9l264.47,0.0l0.01,192.75l-0.73,0.25l0.02,102.26l-5.65,0.36l-1.96,-0.81l-3.05,-2.44l-1.21,-0.45l-0.81,-0.88l-0.5,-1.66l-2.15,-3.86l-2.64,-2.2l0.33,-0.45l-0.52,-1.2l-1.96,-1.04l-0.89,0.19l-4.18,-5.46l-1.04,-2.0l0.78,-0.66l0.12,-0.95l-1.03,-1.69l-0.25,-1.37l-1.16,-0.94l2.27,-1.2l1.38,-1.6l0.49,-2.08l-0.15,-3.5l-4.41,-9.9l0.32,-0.37l-0.14,-1.11l-1.68,-4.28l-2.66,-3.23l-1.32,-0.67l-4.12,-3.71l1.64,0.15l0.9,-0.69l0.38,-2.51l-1.7,-1.57l-0.92,-0.37l0.68,-0.38l1.58,0.28l0.67,-0.53l0.08,-0.8l-0.48,-0.67l0.29,-1.03l-0.21,-0.6l-0.68,-0.18l-0.4,0.27l-1.12,-1.29l-2.07,-0.42l-0.21,0.84l-1.63,1.03l-1.66,-0.11l-1.7,0.98l-0.21,0.73l0.2,0.92l1.5,0.75l-1.9,-0.46l-0.89,-0.77l-1.83,0.11l-0.47,0.31l-0.04,0.53l0.5,0.56l2.45,0.44l-0.82,0.3l-1.79,-0.65l-1.18,0.1l-2.42,0.73l-0.53,0.86l-1.04,0.77l-2.75,0.62l-3.66,-0.27l-1.52,0.61l-0.73,-0.23l-0.99,-0.86l0.59,-1.49l2.61,-1.25l2.2,-2.66l1.93,-1.26l0.16,-2.0l0.61,-1.01l-0.29,-1.1l0.15,-1.71l1.06,-1.96l-0.6,-4.09l0.16,-1.97l0.88,0.56l0.38,-0.94l-0.36,-1.15l-2.05,-1.46l-0.22,-1.14l-1.51,-1.26l-0.8,-1.66l-0.85,-0.5l-1.43,-4.48l-0.62,-0.95l-0.92,-0.56l0.01,-1.24l-1.85,-2.15l-0.8,0.39l-1.35,2.67l0.04,0.8l0.53,0.83l-2.33,2.68l-0.86,2.79l-0.13,1.87l0.46,0.65l-0.6,1.54l-0.2,2.07l-1.21,2.11l-0.92,2.98l-0.08,1.38l-0.51,0.62l0.06,1.72l-1.33,1.08l-2.41,-1.23l-3.09,-0.32l-2.07,1.34l-2.13,0.03l-1.57,1.74l-2.73,-0.37l-2.84,1.74l-0.6,-0.03l-0.65,-0.82l0.32,-0.75l1.68,-1.41l0.7,-1.41l0.07,-0.64l-0.45,-1.12l0.73,-0.78l-0.01,-0.85l0.9,-1.25l1.21,0.53l1.14,0.06l2.77,-0.52l2.66,1.19l0.87,-0.21l0.79,-0.81l0.35,-3.05l1.2,-4.58l-0.7,-2.47l-0.05,-1.51l-0.52,-0.66l-0.54,-0.07l0.77,-0.69l0.59,-3.05l-0.21,-1.82l-0.66,-1.33l0.73,0.22l0.7,-0.52l0.81,-1.83l-0.43,-1.42l2.03,-2.2l-0.31,-1.14l2.22,-2.12l1.17,-2.04l0.68,-0.1l1.53,-2.08l0.67,0.43l0.77,-0.57l0.11,-2.42l-1.61,-3.19l0.11,-1.0l-1.24,-2.17l0.79,-1.47l1.98,-1.06l0.9,-0.19l0.54,0.25l0.63,-0.3l0.29,-0.62l-0.08,-1.17l-0.74,-1.61l-1.1,-0.4l-1.2,-5.24l0.59,-0.47l0.06,-0.66l-1.86,-1.38l-0.02,-1.02l-0.94,-1.23l0.27,-0.88l-0.75,-0.37l-0.28,-0.79l-0.7,0.0l-0.46,1.47l0.01,3.08l0.85,0.66l0.32,1.47l0.04,1.79l-0.42,0.94l-0.6,0.14l-0.21,0.45l0.5,1.46l-0.58,-0.02l-1.56,-0.96l-0.8,0.28l-0.95,0.87l-0.12,1.06l-1.64,1.75l-1.33,0.77l-0.52,2.18l-1.04,1.84l-0.39,2.91l-1.39,2.08l-1.75,3.75l-1.45,1.21l-2.78,0.55l-0.94,-1.04l-0.93,-0.06l-0.66,1.13l-0.88,0.73l0.41,0.91l-1.89,0.34l-1.79,0.93l-0.41,0.53l-2.27,0.91l-0.56,0.54l-0.15,0.69l-1.72,1.36l-1.39,0.45l-1.45,1.2l-0.45,1.42l-2.63,4.47l-2.1,1.18l-0.51,0.72l0.12,0.62l-0.28,0.48l0.31,0.88l-0.16,1.29l-0.3,-0.76l-0.44,-0.23l-2.68,0.99l-0.47,0.45l-0.5,1.43l0.36,0.96l-0.85,-0.0l-0.62,1.15l-0.15,1.26l0.54,0.94l-0.98,0.07l-0.92,1.39l0.34,0.51l1.14,0.15l1.02,-0.27l1.17,-1.01l0.71,0.34l0.42,-0.29l-1.02,1.78l0.75,2.95l-0.58,0.25l-0.52,-1.14l-1.36,-0.68l-0.91,-1.3l-0.99,-0.51l-1.35,0.15l-0.95,0.94l-0.35,1.26l-0.67,0.0l-0.44,-1.6l-3.3,-3.8l-2.66,-1.26l0.18,-0.76l1.14,0.5l2.0,-0.5l0.43,-0.54l-0.25,-0.54l-1.15,-0.26l-0.03,-1.13l-0.51,-0.26l-0.68,0.52l-0.16,-0.75l0.41,-1.23l-0.76,-1.68l-0.73,-4.68l-0.64,-1.12l-1.29,-0.58l0.66,-0.59l-0.25,-3.24l-1.67,-2.82l-1.12,-0.59l-2.95,-3.05l-3.3,-2.65l0.4,-2.08l-0.17,-1.71l-1.11,-3.27l-2.61,-2.42l0.55,-0.08l0.31,-0.45l-0.59,-1.44l-2.56,-0.92l-0.87,0.23l-0.22,1.05l-1.53,-0.88l-0.86,-0.14l-1.29,0.51l-0.45,-0.43l-0.57,0.1l-0.22,0.97l-0.89,-0.77l-1.0,-2.83l-0.9,-0.34l0.48,-1.02l-0.55,-1.15l-0.68,-0.36l-0.68,0.26l-1.34,-0.37l1.17,-1.14l0.32,-0.99l-1.35,-2.51l2.15,0.19l-0.14,1.6l0.88,0.47l1.49,-2.04l0.57,-1.3l-0.51,-2.53l-1.08,-1.77l-1.8,-1.64l-0.96,-0.22l-0.76,0.4l-0.56,-0.22l-0.71,0.19l-0.78,0.93l-1.26,-0.1l-0.94,1.09l-0.4,0.06l0.28,-2.26l0.15,-0.27l0.47,0.25l0.98,-0.43l0.16,-1.0l-2.67,-3.51l-0.76,-0.16l-0.55,0.42l-0.19,-1.0l-1.4,-0.59l-0.06,-0.61l-0.49,-0.36l0.19,-0.78l-0.89,-0.63l-1.14,-0.19l-0.59,0.23l-0.5,1.64l-1.04,-0.57l-0.35,-0.8l-0.58,-0.01l-1.43,0.75l-0.01,0.79l0.6,0.39l-0.39,0.42l-2.14,-0.45l-0.95,0.59l-1.62,-0.77l-0.85,0.26l-2.55,-2.36l-1.17,0.15l-0.35,-0.75l-4.27,-3.03l-2.64,-0.05l-1.63,-0.36l-1.65,0.17l-1.37,0.67l-0.32,0.6l0.09,0.62ZM576.07,616.55l-0.02,-0.01l-0.01,-0.01l0.03,0.02ZM479.63,556.89l0.06,-0.0l0.03,0.09l-0.07,-0.07l-0.02,-0.01ZM495.39,591.75l-0.33,-0.3l0.35,0.13l-0.01,0.17ZM494.74,591.17l-1.57,-0.76l-1.37,0.31l-0.82,0.54l1.46,-2.42l0.54,0.82l1.6,0.4l0.17,1.1ZM581.2,618.92l-3.37,-2.32l0.8,-0.43l0.16,-0.82l0.83,-0.73l1.77,1.06l-0.23,1.61l0.49,0.67l-0.44,0.45l-0.02,0.52ZM522.49,624.47l1.16,-3.41l2.05,-0.29l2.47,-0.93l5.97,-0.92l1.54,-0.69l2.96,-0.68l1.15,-0.84l2.39,0.69l3.08,-0.68l-0.44,1.1l0.24,0.41l0.96,0.19l-1.11,1.21l0.02,0.57l0.46,0.43l2.16,0.45l1.88,-0.39l0.11,1.3l0.83,0.44l1.48,-0.53l0.82,-1.56l0.95,0.04l1.95,0.72l0.31,1.07l0.92,0.39l0.08,0.44l-0.73,0.37l-0.79,0.98l-2.27,-1.07l-2.59,-0.31l-1.5,0.2l-2.84,0.98l-0.78,1.13l0.32,1.29l-0.27,0.52l-1.05,0.26l-1.78,1.06l-1.92,-1.72l-3.31,-0.8l-1.08,0.4l-0.45,1.03l-0.43,0.14l-2.78,-0.48l-2.02,0.66l-1.39,-0.52l-2.98,0.82l-1.16,-2.05l-1.54,-0.53l-1.05,-0.92ZM513.98,602.42l0.31,0.26l0.09,0.32l-0.28,-0.05l-0.11,-0.53ZM477.12,570.12l0.01,-0.29l0.58,-0.16l0.04,0.23l-0.63,0.22ZM457.09,534.55l-0.67,0.27l-0.1,-0.04l0.96,-0.87l-0.19,0.64Z", "name": "South Australia"}, "AU-NSW": {"path": "M632.87,581.75l-0.6,-1.08l-1.24,-0.13l-1.42,-0.85l-1.36,0.22l-0.45,-0.7l-1.48,-0.95l-1.22,0.28l-1.26,-0.62l-1.94,-0.05l-0.72,-0.81l0.0,-122.14l175.84,-0.01l2.32,-1.66l0.68,-2.09l1.81,-0.7l1.96,-1.82l3.25,-1.45l1.47,-2.29l2.21,-0.36l0.51,0.92l2.18,0.44l1.05,-0.44l5.79,-0.17l3.11,-1.1l2.15,-0.03l0.82,-0.4l3.27,2.64l3.86,0.31l3.76,-0.57l2.98,1.22l0.96,0.83l1.4,0.26l0.45,2.26l2.24,0.47l2.6,1.67l0.62,4.22l0.57,0.54l0.22,1.06l1.01,0.32l1.03,-0.39l2.33,-2.34l0.23,-1.41l0.63,-1.18l1.97,-0.61l1.27,-0.83l0.83,1.41l1.64,0.59l0.79,-1.38l1.48,0.24l2.03,-0.7l0.38,-0.66l0.93,-4.49l-1.45,-1.76l-0.88,-1.8l4.24,-2.33l1.5,-0.05l1.39,-1.2l2.11,-0.5l0.69,-0.56l0.37,-0.93l1.13,-0.95l0.5,0.39l0.24,0.9l0.74,0.42l0.69,-0.11l0.54,-0.76l0.67,0.57l2.23,0.89l1.23,-0.13l1.34,-0.71l1.67,0.44l3.68,0.3l0.79,-0.45l1.31,-1.81l2.67,-0.41l0.86,0.15l3.14,-2.21l0.31,0.38l0.72,0.11l0.49,2.97l-0.62,4.55l0.32,2.13l1.15,1.62l-0.62,2.34l0.11,2.42l-1.8,1.74l-1.52,2.26l-0.44,1.36l0.2,1.4l-0.47,0.26l-1.61,2.99l-0.23,1.18l0.62,1.63l-0.27,0.75l0.13,1.05l-0.83,2.49l-0.07,2.91l-0.74,1.85l0.13,1.34l-0.43,0.64l-0.29,2.04l-1.31,2.06l0.02,2.57l-0.29,1.01l-1.13,1.97l0.13,0.87l-0.26,0.75l-1.98,4.17l-1.23,5.87l0.41,2.75l0.78,1.28l1.03,0.25l-0.02,0.44l-0.91,1.6l-0.13,1.1l0.43,0.82l-1.7,2.16l-0.48,1.86l0.33,1.97l-1.29,1.95l0.41,1.94l-1.93,2.09l-0.13,1.97l-1.11,1.32l0.21,0.76l-1.21,1.43l-0.17,1.31l-2.75,2.36l-1.48,2.5l0.1,0.78l-0.52,0.59l-0.42,1.66l0.17,0.6l1.06,0.81l-0.88,1.57l0.03,0.83l0.41,0.36l-0.55,1.92l0.11,0.7l-3.66,1.64l-1.3,1.1l-0.26,0.7l-1.07,0.5l-1.16,1.67l-0.61,-0.37l-1.94,0.84l-0.13,0.7l0.57,0.44l2.14,0.18l-0.01,0.4l-0.65,-0.03l-0.76,0.64l-1.16,-0.2l-1.71,0.35l-2.45,1.08l-1.78,1.34l-0.06,0.77l-1.36,1.23l-0.12,0.99l-1.33,1.17l-1.06,3.32l-0.74,0.6l-0.66,1.27l-0.85,-0.34l-1.45,1.12l-0.34,1.36l0.37,0.56l0.62,0.22l-0.9,1.2l-0.41,2.19l-0.97,0.03l-1.98,0.72l-0.33,-0.74l-0.66,-0.15l-0.45,0.55l0.24,1.33l-0.36,0.57l0.45,0.4l0.53,-0.07l0.71,-0.67l-0.14,1.43l0.61,0.18l-0.41,1.57l0.28,0.67l-0.26,1.55l-0.78,0.13l-0.53,0.97l0.28,0.71l0.7,0.15l-0.26,1.52l-0.31,0.67l-0.77,-0.83l-0.77,0.04l-0.52,0.95l-1.07,-0.03l-0.56,0.5l0.24,0.63l1.23,0.46l-0.64,0.85l0.74,0.48l-2.97,2.13l-1.38,1.61l-1.03,1.77l-0.52,3.14l0.27,0.81l-0.44,0.62l-0.55,-0.28l-0.58,0.12l-0.86,0.95l0.18,0.81l0.91,0.19l0.67,0.58l-1.05,4.26l-1.25,0.72l-0.52,1.16l-0.65,0.56l0.73,0.92l-0.26,0.54l0.78,0.56l-0.1,1.05l-1.81,0.65l-0.44,1.36l0.51,0.87l-1.24,0.6l-0.6,1.1l-1.35,0.76l-1.22,1.93l-0.37,0.98l0.12,1.27l-1.72,2.18l-0.09,2.02l-1.63,2.33l-0.84,1.99l-1.22,-0.29l-0.85,0.32l-0.16,0.66l0.52,0.53l0.42,1.75l-1.0,0.51l-0.92,1.05l0.25,1.68l-0.24,2.19l-0.87,-0.18l-0.6,0.93l-0.05,0.46l0.85,0.11l0.43,0.46l-0.45,1.48l0.53,2.11l-0.27,0.67l0.2,0.91l-1.0,0.99l-0.55,1.09l0.05,1.52l-0.44,0.92l0.25,1.7l-1.51,2.92l-0.37,2.16l-1.0,1.39l0.02,1.14l-0.57,0.96l-0.07,0.89l0.62,0.52l-0.3,1.28l0.49,1.04l-0.71,0.28l-0.74,1.08l0.68,0.81l1.16,0.03l0.93,0.68l0.67,2.12l-1.32,0.25l-0.51,0.76l0.43,1.38l-0.29,2.05l0.53,1.8l-38.44,-17.87l-1.68,-0.2l1.63,-2.53l0.23,-1.66l-0.41,-0.9l-1.04,-0.56l-0.04,-1.48l-0.44,-1.24l-1.37,-1.22l0.3,-1.22l-1.03,-3.06l0.26,-1.65l-1.15,-1.38l0.09,-1.46l-1.58,-0.75l-0.58,-0.85l-4.35,-1.66l-3.6,1.39l-0.61,-0.89l-1.14,-0.34l-2.08,0.62l-0.86,1.13l-0.26,1.2l-1.34,-0.37l-1.91,0.38l-1.08,-0.62l-1.18,0.99l-0.5,1.13l-1.23,-0.85l-0.83,0.14l-0.45,0.54l-1.34,-0.7l-0.76,0.14l-0.67,-0.58l-0.88,-0.09l-0.5,-0.55l-1.41,-0.1l-1.39,-1.19l-1.85,-0.05l-0.86,-0.48l-1.92,0.28l-1.23,1.68l-2.23,-0.44l-1.35,0.41l-3.11,-0.85l-1.57,-0.04l-0.55,-0.93l-1.05,-0.38l-2.87,0.4l-0.83,-0.34l-3.84,-3.07l-1.91,-0.4l-2.72,1.11l-3.38,-0.55l-2.21,0.01l-2.59,0.45l-0.99,0.84l-0.24,1.55l-0.63,1.35l1.06,2.04l-1.8,-0.52l-1.74,1.37l-1.26,0.08l-1.31,-1.28l-1.62,-0.38l-2.39,-2.64l-0.96,-0.39l-2.14,-4.22l-0.8,-0.68l-0.98,-0.14l-2.07,-1.69l-1.82,-2.34l-2.15,-0.75l-0.49,-0.84l-1.83,-0.81l-2.72,-1.85l-2.8,-0.75l-1.27,-0.79l0.21,-1.41l-0.33,-1.2l-0.87,-0.68l-2.77,-0.91l-1.07,-1.85l-0.69,-3.46l0.29,-0.88l-0.15,-0.77l0.46,-0.66l0.04,-1.56l-0.88,-0.94l-0.94,0.05l-0.46,-0.86l-2.81,-1.38l-2.04,-0.18l-1.22,-0.58l-0.55,0.38l-0.92,-0.66l-1.02,0.41l-0.47,-1.24l-1.77,-1.05l-1.7,0.74l-0.74,2.23l0.08,0.81l-1.18,0.06l-0.3,0.31l0.06,0.85l-1.32,-0.26l-1.52,-3.04l-0.1,-1.01l-1.76,-1.66l-0.28,-2.52l0.72,-1.6l-0.23,-0.79l-0.6,-0.28l-0.83,0.16l-0.68,-0.51l-0.96,-1.06l-0.53,-1.99l-1.03,-0.17l-1.06,-0.82l-1.13,0.19l-1.11,-1.26l-4.67,0.36l-2.0,-0.67l-1.09,0.17l-1.82,1.04l-1.62,1.64ZM792.63,618.74l0.12,1.0l0.94,0.94l0.7,0.22l0.45,-0.33l0.36,2.31l0.59,1.09l2.49,1.19l0.65,-0.1l1.39,-2.2l-0.2,-1.96l0.2,-1.32l-0.4,-2.53l0.85,-0.6l0.55,-1.65l-0.13,-2.1l0.95,-1.27l0.93,0.17l0.59,-0.73l2.29,0.12l0.9,-0.74l0.06,-0.55l-3.48,-1.67l-0.23,-0.81l-0.93,-0.31l-0.26,-1.11l-1.37,-0.94l-0.99,0.17l-6.11,4.19l-0.62,0.81l-0.81,4.35l0.29,1.95l-0.21,1.8l0.41,0.63ZM837.5,602.24l0.66,0.16l-0.16,1.07l-0.36,0.37l-0.26,-0.26l0.11,-1.35ZM754.78,629.71l0.49,1.8l1.03,0.83l-0.46,0.12l-0.95,-0.95l-0.11,-1.8Z", "name": "New South Wales"}}, "height": 825.8587272481366, "projection": {"type": "mill", "centralMeridian": 0.0}, "width": 900.0});
jQuery.fn.vectorMap('addMap', 'cn_mill_en',{"insets": [{"width": 900, "top": 0, "height": 603.7310048504178, "bbox": [{"y": -6615868.518578473, "x": 8197521.3798613455}, {"y": -2045689.8946770313, "x": 15010424.35894619}], "left": 0}], "paths": {"CN-54": {"path": "M70.73,377.97l3.34,-0.37l1.23,-0.9l-0.15,1.09l0.54,1.5l2.17,1.89l0.91,0.18l2.08,-0.52l0.73,-1.77l1.01,-0.31l0.78,0.26l0.68,-0.18l2.74,-2.56l0.46,-1.22l-0.07,-0.68l-0.8,-0.95l-0.53,-1.48l-1.11,-1.09l0.14,-1.59l0.56,-1.12l-0.27,-0.93l-1.79,-0.33l-1.67,-0.74l-0.76,0.05l-0.44,-0.81l-1.2,-0.5l-2.45,-2.9l-0.25,-0.85l0.08,-4.21l-0.96,-3.09l0.11,-1.12l2.44,-1.24l1.07,-0.98l0.31,-1.01l-0.29,-1.12l0.79,-0.58l2.38,-0.88l1.94,0.15l2.08,-0.67l1.64,0.2l1.92,0.8l1.28,-0.45l2.56,-4.65l-0.03,-1.0l-0.71,-1.03l-0.41,-1.53l2.26,-1.18l0.14,-0.89l-0.45,-0.8l2.34,-2.68l1.25,-2.81l0.02,-1.44l2.8,1.91l2.73,0.39l1.36,0.63l1.66,0.0l1.59,0.85l1.13,-0.27l0.26,-1.33l2.01,1.2l3.01,-0.16l1.97,1.31l0.91,0.18l1.64,-0.16l4.4,-1.29l0.64,-0.68l0.39,-1.3l3.26,-1.84l0.52,-1.59l1.2,-0.69l4.18,0.63l1.72,-0.7l1.62,0.44l0.16,2.69l2.42,1.65l1.67,-0.29l5.72,1.08l3.8,-0.26l2.19,-0.73l2.28,0.69l5.86,-3.09l3.17,-0.7l2.15,-1.48l3.2,-0.97l1.71,0.33l2.43,-0.38l1.04,0.53l0.39,0.83l0.64,0.26l0.85,-0.38l1.57,-1.49l3.26,0.04l2.16,-1.99l0.64,-1.79l0.87,-0.94l0.33,-1.3l2.77,-0.88l0.85,-0.8l2.69,0.07l1.94,-0.69l5.76,-0.68l2.46,-1.23l3.26,0.68l4.68,-0.6l1.6,-0.99l6.66,-0.35l0.84,0.55l2.84,0.79l1.86,-0.06l2.15,1.61l3.51,0.21l5.38,2.46l-1.46,0.48l-0.99,0.93l-0.07,0.73l0.57,1.4l1.83,1.11l2.84,0.09l-1.11,2.67l0.08,1.39l-0.47,0.82l0.22,0.63l0.53,0.33l-3.59,1.64l-0.2,1.53l-0.44,0.76l0.29,0.85l1.45,1.85l0.02,2.19l0.91,0.4l2.34,0.04l0.42,1.01l-1.59,2.08l0.7,1.15l0.41,1.71l0.07,2.42l0.72,0.67l-0.82,2.56l-0.63,0.63l-1.16,0.35l-0.46,1.33l1.63,2.88l2.11,1.56l0.03,0.83l0.91,0.74l0.43,1.53l2.65,1.07l0.55,0.88l0.09,1.69l1.69,1.97l1.77,0.13l3.43,2.15l1.86,0.31l1.17,-0.3l1.45,-1.34l1.27,0.07l1.52,-0.39l0.63,-1.27l2.45,-0.02l0.02,0.91l2.57,3.26l2.67,1.64l1.28,0.19l1.63,1.57l0.88,0.44l1.03,-0.07l0.98,-0.55l0.99,0.18l0.09,1.59l0.46,0.52l1.89,-0.07l0.54,-0.3l4.0,0.49l1.2,-0.31l1.79,0.5l1.97,-0.22l0.62,1.36l2.43,-0.13l2.33,1.56l1.1,0.05l0.94,0.89l1.75,-0.83l1.84,-0.11l0.77,0.2l0.93,0.98l1.16,-0.12l1.15,0.44l1.56,0.04l1.18,-0.75l2.06,-0.32l0.66,-1.02l0.66,0.22l2.72,-1.33l1.43,1.22l0.53,0.97l2.45,1.26l0.3,1.78l0.38,0.48l1.8,1.15l2.7,0.19l0.65,0.88l1.12,0.34l0.32,0.93l-0.2,0.97l-0.69,0.42l-0.17,0.84l0.81,2.46l1.25,1.14l0.58,0.19l1.68,-0.33l1.38,0.24l0.9,0.84l1.06,-0.29l3.22,0.05l1.12,2.42l0.65,0.44l0.64,-0.2l0.44,-0.57l-0.26,-0.8l0.25,-1.27l-0.34,-1.02l-0.97,-0.99l0.61,-0.86l1.02,-0.37l2.54,2.38l2.8,0.6l1.29,0.74l0.94,-0.26l0.4,-1.17l-0.68,-1.31l0.58,-1.27l-0.53,-0.73l3.31,-0.82l2.11,0.14l0.83,-0.87l0.98,-0.23l0.47,-0.85l-0.46,-0.69l0.4,-1.42l1.28,-0.09l0.44,-0.63l-0.19,-0.52l0.25,-1.24l-0.91,-0.57l0.39,-0.89l2.67,0.34l1.07,0.62l1.38,-1.51l3.94,1.16l1.06,1.0l1.63,0.68l0.22,1.67l1.28,1.97l2.08,2.32l-0.47,1.7l0.26,1.28l1.83,2.12l0.51,1.28l4.04,3.79l-1.07,1.36l-1.07,-1.11l-0.99,-0.03l-0.56,0.67l-0.18,1.79l0.11,0.6l1.18,0.63l0.48,1.03l1.08,1.09l-0.36,1.03l0.17,0.75l2.48,2.28l-0.69,0.47l-0.1,0.57l0.41,2.86l0.41,0.52l0.38,5.04l0.7,1.47l0.28,2.16l-0.68,1.44l-0.3,2.83l0.81,1.57l0.3,3.95l0.52,1.06l-1.35,0.28l-0.43,0.54l0.45,2.28l-1.06,0.81l-0.42,1.19l0.62,1.06l-0.74,0.33l-1.17,-3.01l-2.0,0.43l-0.52,0.4l-0.13,1.51l0.58,2.0l-1.3,1.25l0.07,1.55l0.73,2.11l-0.92,1.8l-1.58,1.2l-2.01,-1.91l-0.53,0.22l-0.71,2.05l-1.59,0.96l-1.49,-0.96l-0.09,-0.83l-1.52,-1.45l-0.89,-0.23l-0.98,0.3l-0.83,-1.95l-0.54,-0.54l-1.11,0.3l-0.76,-0.77l-0.87,0.34l-1.13,2.16l-0.04,1.46l-0.69,0.04l-0.92,0.93l-2.81,-2.24l-0.8,-0.12l-1.5,0.67l-0.63,-0.23l-0.25,-1.17l-2.95,-2.7l-1.26,-0.32l-1.09,0.43l-0.81,1.84l-0.39,-0.47l0.35,-0.43l-0.21,-0.86l2.23,-1.77l-0.33,-1.65l-1.96,-3.22l-1.17,-0.59l-0.18,-0.79l-0.51,-0.29l-1.92,0.87l-0.01,-0.82l1.79,-0.56l0.87,-1.69l-0.66,-0.71l-1.3,0.57l-0.55,-0.16l-1.18,-1.87l-2.81,0.15l-1.29,0.53l-0.83,-0.39l-0.99,0.17l-0.33,0.41l-0.23,1.5l-2.1,-0.39l-1.03,0.87l0.09,0.91l-0.9,-0.79l-0.63,0.78l-1.49,0.07l-0.48,0.38l-0.1,0.81l-0.62,-0.58l-3.54,-1.17l-0.52,0.32l-1.05,-0.37l-1.03,0.04l-0.01,-0.57l-1.05,-1.26l-1.17,-0.6l-0.63,0.02l-1.41,1.58l-1.72,0.22l-0.93,0.93l-0.88,0.26l-0.16,1.19l0.84,0.89l-1.04,1.08l-0.95,0.04l-2.99,1.51l-0.98,0.13l-0.76,0.89l-1.06,0.39l-1.02,0.86l-0.73,-0.07l-0.59,0.42l-2.74,0.06l-3.38,2.11l-0.95,0.75l-0.93,2.06l-2.81,1.89l-0.74,0.87l-0.97,-0.11l-1.57,1.06l-0.75,1.32l0.28,0.56l0.64,0.15l-0.16,0.75l-3.32,2.01l-0.55,-0.46l-1.48,0.85l-0.74,-0.99l-0.46,0.18l-0.19,0.73l-1.6,-0.02l-1.86,1.31l-1.46,-0.06l-1.31,-0.52l-1.8,0.05l0.32,-2.02l-0.38,-0.76l-3.31,-0.92l-1.07,-0.53l-0.62,-0.82l-2.0,0.19l-1.46,1.53l-0.43,0.1l-0.87,-0.24l-1.11,-0.86l-2.61,-0.44l-0.71,-0.42l-2.67,0.2l1.45,-1.23l0.25,-0.48l-0.39,-0.79l-3.09,-1.07l-0.48,0.0l-0.69,0.63l-0.44,-1.14l-0.53,-0.37l-1.23,0.49l-1.4,-0.33l-3.11,0.81l-1.68,1.82l-2.52,0.6l-1.83,1.59l-1.82,2.85l-1.57,0.93l-1.48,2.88l-1.08,0.29l-1.23,1.43l-0.42,1.59l0.41,1.36l-0.89,0.12l-1.4,-1.21l-0.41,-1.87l0.94,-1.73l0.71,-3.0l-0.07,-0.81l-0.56,-0.74l0.11,-0.99l-1.39,-1.26l-1.29,-0.27l-0.75,-0.6l-0.5,0.07l-1.19,1.12l-0.7,0.01l-1.17,0.78l-3.85,0.56l-0.55,1.03l-3.51,-0.43l-1.65,1.6l-1.16,-0.25l-0.83,0.29l-0.82,-0.5l-1.76,0.41l-0.56,-0.69l-1.25,0.58l-1.82,-0.12l-2.11,-1.95l-1.44,0.05l-0.95,-1.03l-1.42,-0.11l-0.16,-0.86l-1.0,-0.56l-0.99,0.38l-0.73,-0.39l-0.48,0.19l-0.68,2.46l-0.83,0.47l-3.03,-1.36l-0.31,-0.81l0.12,-1.16l-0.73,-0.59l-1.75,1.72l0.57,2.22l-0.39,0.32l-1.03,0.04l-0.06,-1.25l-0.83,-0.92l-0.5,-1.65l-1.98,-1.4l-0.41,-0.59l-0.11,-1.03l-0.67,-0.27l-1.06,1.19l-2.53,-0.63l-1.06,0.59l-0.73,-0.35l-1.13,0.19l-0.93,-0.53l-0.88,0.11l-0.04,-1.7l1.04,-1.33l0.26,-1.06l-0.38,-0.65l-1.76,-0.71l-0.52,0.17l-1.45,1.46l-1.42,-0.08l-0.75,-0.66l-0.9,-0.2l-0.11,-0.8l-1.03,-0.72l-2.37,-0.63l-0.37,-0.96l-0.88,-0.97l-1.9,-0.69l-0.27,-0.42l0.25,-1.54l-0.78,-0.51l-0.57,-1.09l0.38,-0.69l-0.1,-0.51l-0.74,-0.26l-0.59,-0.79l-0.68,0.12l-1.17,-0.62l-0.79,-0.01l-1.84,0.88l-1.45,0.15l-0.77,1.12l-1.37,-0.38l-0.23,-1.12l-1.61,-1.55l-0.63,-1.74l-0.76,-0.5l-0.64,0.13l-0.05,-1.06l-1.27,-1.18l-1.02,-0.1l-0.8,0.45l-1.07,-1.02l-1.22,-0.45l-0.94,0.35l-1.97,-1.73l-0.13,-0.83l-0.98,-0.15l-1.2,-1.39l-3.38,-1.79l-1.76,-0.53l-0.55,0.12l-0.2,-0.6l0.4,-0.92l-1.04,-1.01l0.12,-1.33l-0.5,-0.62l-1.55,0.09l-0.49,-0.4l-1.56,-0.28l-0.88,0.2l-2.5,-0.94l-1.29,0.67l-0.35,0.73l-0.93,-0.66l-0.83,-0.03l-0.52,1.22l0.08,1.39l-0.35,1.06l-1.1,0.39l-0.08,0.92l-0.52,0.27l-0.16,0.65l-1.34,-0.23l-1.77,-3.75l-2.84,-1.05l-0.82,-1.12l-1.92,-1.13l-1.33,-0.06l-2.73,-1.37l-1.57,-0.34l-0.28,-1.08l0.7,-0.89l-0.02,-0.42l-1.19,-1.21l-1.37,0.13l-0.5,-0.73l-1.84,-0.96l-1.19,-1.23l-1.58,-0.29l-2.24,0.64l-0.72,-0.33l-0.62,-0.84l-1.01,-0.17l-0.37,-0.97l-1.32,-0.72l-0.19,-1.09l-0.72,-0.49l-0.37,-1.57l-1.9,-1.7l-0.46,-0.14l-1.01,0.36l-0.39,1.29l-0.5,-0.33l-0.53,0.18l-0.57,0.8l-1.28,-0.12l0.32,-1.96l-0.91,-0.9l1.71,-1.63l-0.44,-0.85l-1.04,-0.64l-0.64,-1.42l1.01,-3.21l-1.48,-1.29l-1.97,-2.75l-0.72,-0.41l-0.35,-2.26l0.23,-0.62l-1.01,-1.76Z", "name": "Xizang"}, "CN-52": {"path": "M441.71,465.82l1.34,-0.99l3.19,-3.75l0.6,-0.06l2.97,2.04l1.31,-0.59l0.16,-0.97l1.18,-1.14l1.05,1.41l1.09,0.51l4.21,-0.18l1.19,0.38l3.04,-1.64l1.62,0.29l0.45,-0.18l1.51,-5.04l0.87,-0.67l1.92,-0.23l2.04,1.6l1.68,-0.67l1.3,0.01l0.9,-0.54l1.96,-0.04l0.87,-0.49l1.89,0.3l1.0,-0.48l1.07,-0.98l-0.77,-2.86l-1.27,-0.94l-0.14,-0.92l-0.72,-0.69l-1.03,-0.37l-1.5,0.55l-1.46,-0.19l0.0,-1.17l-0.32,-0.44l-1.66,-0.8l-1.33,-0.21l0.04,-1.63l-0.46,-0.74l0.74,-1.21l2.96,-0.35l1.13,-2.18l2.72,2.45l1.52,0.67l0.15,0.95l0.72,0.35l1.18,-1.45l0.9,0.39l0.7,-0.38l-0.07,-1.02l0.57,-1.36l-0.76,-1.61l0.74,0.68l0.77,1.57l-1.05,2.19l0.27,0.29l1.2,-0.1l0.74,0.55l0.82,0.05l0.59,-0.53l0.06,-1.18l0.75,-0.11l0.48,-0.66l0.12,-2.28l0.65,-0.45l0.94,0.17l0.79,-1.38l1.29,-0.23l1.39,1.21l0.83,0.3l2.89,-1.43l0.88,-2.04l-1.21,-1.72l0.16,-1.12l0.54,-0.72l1.13,1.02l1.63,0.59l1.15,-0.11l0.08,1.5l1.11,1.15l0.68,-0.02l2.55,-1.25l3.04,-0.15l1.21,4.02l-0.76,0.75l0.13,1.13l1.39,0.73l1.93,0.25l0.38,0.42l-0.08,3.18l0.66,1.28l0.97,0.22l0.63,-0.39l-0.11,-1.46l-0.37,-0.6l0.55,-0.11l0.69,0.63l-0.81,2.87l0.44,0.78l0.85,-0.25l2.34,0.53l2.24,0.01l1.2,-4.05l0.6,-0.59l0.34,1.08l-0.1,1.31l1.37,1.07l-0.94,2.72l0.13,0.58l0.46,0.3l-0.36,0.85l0.28,2.66l0.51,0.87l0.74,0.4l0.48,1.05l-0.05,0.88l-1.65,1.23l-0.63,0.98l-0.9,-0.15l-1.24,0.65l-1.73,2.31l-0.69,0.21l-1.03,0.98l-0.17,0.94l-1.3,0.35l-0.29,0.63l1.97,1.62l0.99,-0.32l0.67,-0.93l1.1,-0.59l0.35,0.6l0.68,0.15l1.21,-1.05l0.59,0.19l0.78,-0.31l1.04,0.07l1.17,1.21l-0.01,1.17l-0.9,1.18l0.32,0.61l0.8,0.18l-1.71,1.18l-1.5,0.43l-0.28,0.47l0.32,0.76l1.02,0.44l0.52,0.8l-0.25,1.03l-1.08,1.37l-0.38,1.57l0.46,1.04l1.0,0.34l-0.08,0.53l0.94,2.68l-0.85,0.8l0.13,1.11l-0.62,0.6l-0.81,2.04l-0.43,-0.03l-0.85,-1.13l-0.64,0.07l-0.13,0.74l-0.26,-0.65l-0.59,-0.17l-2.05,0.51l-1.32,1.17l-0.2,0.98l0.5,0.54l2.05,-0.95l-0.17,1.46l0.26,0.64l-0.29,0.22l-0.86,-0.57l-2.06,0.4l-0.24,-1.16l-0.95,-0.19l-1.16,0.71l-0.29,1.15l-0.83,0.49l-0.33,0.81l-1.54,-1.51l-2.03,-0.52l-2.7,2.46l-0.32,2.4l-2.22,0.41l-1.12,0.87l-0.99,-0.02l-0.67,-1.22l-0.73,0.16l-0.48,-0.48l0.09,-0.57l-0.3,-0.42l-0.54,0.06l-0.41,0.61l-1.41,0.82l0.15,-0.73l-0.88,-0.53l-0.35,-1.27l-1.17,-0.49l0.2,-0.65l-0.37,-0.65l-0.99,-0.97l-0.56,-0.12l-0.95,0.53l-1.45,0.06l-0.83,0.48l-0.74,0.94l-0.07,0.87l0.56,0.89l-0.22,1.14l-1.12,0.03l-0.37,0.8l-3.09,0.34l-3.22,2.19l-2.09,0.81l-2.29,0.36l-0.2,0.58l0.58,1.75l-2.31,2.56l-1.35,-1.28l-0.89,-0.09l-0.77,0.4l-1.76,-1.21l-2.52,-0.48l-1.06,-1.76l-1.07,-0.44l-1.32,0.34l-1.31,-1.14l-1.74,1.0l-0.82,1.02l-0.39,1.35l-1.83,0.53l-0.69,1.07l-0.77,0.19l-0.65,0.59l-2.35,-1.58l0.05,-0.65l2.25,-2.82l-0.16,-1.54l0.43,-1.67l0.79,-0.23l0.23,-0.84l-1.77,-0.77l-1.51,-1.37l-0.43,-1.95l-1.49,0.05l-0.14,-1.08l-1.68,-1.11l-0.08,-1.15l0.72,0.07l0.47,-0.47l0.54,-1.54l-0.32,-1.24l0.81,-0.44l0.6,-0.86l0.33,-1.43l-0.18,-0.69l0.41,-0.58l0.14,-1.12l1.97,-1.87l-0.73,-1.97l-1.14,-1.62l-1.2,-0.2l-0.51,-1.57l-0.61,-0.43l-0.62,0.15l-0.8,1.24l-1.39,0.08l-1.12,-0.41l-0.63,0.18l-1.33,1.97l-1.59,-0.05l-0.99,-0.39l-0.86,-0.98l0.24,-1.71l-0.67,-0.4l-0.2,-0.82l0.88,-0.79l0.03,-1.52l-1.21,-1.71l-0.62,-0.07l-0.53,0.41l-0.29,-0.36Z", "name": "Guizhou"}, "CN-35": {"path": "M621.87,495.6l0.78,-0.51l1.15,-1.69l0.4,-2.63l0.65,-1.23l-0.25,-0.95l1.19,-1.75l0.75,-0.44l-0.39,-1.33l0.67,-0.6l1.15,-0.2l0.98,-0.63l1.09,-1.74l0.29,-1.08l-0.28,-2.4l1.37,-1.69l0.86,0.48l0.7,-0.63l0.34,-1.79l-1.14,-1.04l-0.53,-1.91l0.58,-2.66l1.56,-1.55l3.79,-0.62l1.8,-1.45l1.85,-3.0l-0.42,-1.21l-0.42,-0.21l0.38,-0.98l-0.23,-1.99l1.61,-2.4l1.0,-0.94l0.01,-1.14l0.76,-0.13l2.31,-1.64l1.12,1.76l2.3,0.77l0.78,-0.72l0.31,-1.23l1.82,-0.58l1.8,-0.12l1.05,-1.0l3.43,-0.85l0.42,-1.67l-0.43,-0.6l0.65,-0.53l0.35,-0.18l1.02,0.37l1.15,-0.58l0.59,0.23l1.3,-0.45l0.74,0.96l-0.5,0.6l0.29,0.77l-0.5,0.78l-0.04,1.91l1.11,1.2l0.98,2.9l-0.14,0.63l0.59,1.97l-0.56,0.69l0.54,0.74l3.03,0.38l1.19,0.66l1.2,0.01l1.82,-1.41l0.52,0.11l0.93,-0.45l1.14,-2.3l0.49,0.09l-0.09,0.84l0.58,0.39l0.49,1.02l0.05,1.48l1.33,1.81l2.72,-0.09l0.72,-0.53l1.11,0.27l1.14,-0.82l1.08,-0.31l1.75,0.52l0.61,0.88l0.16,0.64l-0.8,-0.2l0.1,-0.64l-0.87,-0.51l-1.61,0.62l-0.32,1.07l0.15,0.55l0.62,0.2l0.71,-0.56l1.16,0.44l-0.02,0.54l0.42,0.12l-0.07,0.49l-1.58,-0.51l-0.37,0.51l0.29,0.55l-0.71,0.74l0.4,0.51l-1.39,0.37l0.36,0.53l-0.56,0.11l-0.3,0.53l-0.84,-0.18l-0.39,0.31l0.06,1.42l-1.34,-0.01l-0.73,1.72l-0.66,-0.46l0.42,-0.48l0.25,-1.14l-0.4,-0.59l-0.92,0.26l-0.57,0.79l-0.55,-0.46l-0.45,0.05l-0.37,0.78l-0.62,-0.55l-0.7,0.23l-0.52,1.06l0.3,0.82l-0.39,0.33l0.18,0.97l1.04,0.96l1.12,-0.69l0.66,0.06l1.01,1.99l-0.24,0.21l-1.56,-1.17l-1.78,0.7l-0.08,0.46l0.39,0.52l0.88,-0.03l0.07,1.14l0.58,0.58l-0.82,0.51l0.14,0.62l-2.6,3.54l-4.9,-2.47l-0.72,0.32l0.82,1.01l0.77,0.19l0.67,1.66l0.45,0.41l1.43,0.37l1.02,-0.16l1.38,-0.82l0.26,-0.65l2.15,0.52l-0.41,0.83l-1.52,0.77l0.64,1.98l-0.29,0.64l-0.65,-0.21l-1.03,0.3l-0.44,0.5l0.53,1.8l0.74,0.53l0.49,-0.15l0.09,0.89l-0.37,0.21l-0.15,-0.43l-0.55,-0.02l-0.28,-0.48l-1.08,-0.2l0.25,-1.02l-1.29,-0.41l-0.88,0.85l-0.52,1.28l-1.86,0.87l-0.19,0.54l1.26,1.57l0.29,1.07l0.49,0.03l0.85,-0.85l0.31,0.42l-0.65,0.28l-0.02,0.53l-0.94,0.11l-0.77,-0.6l-0.63,0.31l-0.64,-0.41l0.1,-0.37l-0.35,-0.44l-0.81,-0.06l-1.7,0.67l-0.27,0.36l0.18,0.58l0.52,0.52l0.64,0.07l-0.17,0.61l-1.04,0.08l-0.43,0.77l0.55,0.8l1.13,0.64l-0.7,0.22l-0.13,0.83l-1.45,-0.0l-0.36,0.35l-0.65,-1.07l-1.03,-0.06l-0.41,0.61l0.14,0.49l-1.11,-0.07l1.03,2.26l1.08,-0.19l0.53,0.35l-0.64,0.65l-0.77,-0.11l-0.18,0.23l-0.21,1.03l0.38,0.52l-0.56,0.55l-0.13,-0.48l-1.83,-0.93l-0.06,-0.9l-0.64,-0.18l-0.44,0.42l0.04,1.04l-0.51,0.26l-0.84,-0.19l-0.94,0.56l0.17,-0.48l-0.91,-1.48l-0.69,0.24l-0.49,1.14l-0.65,-0.29l-1.48,1.12l-0.02,0.56l0.82,0.34l-0.45,0.48l-1.53,-0.52l-1.29,0.34l-0.33,0.39l0.15,0.42l1.23,1.0l0.79,0.27l1.46,-0.24l-0.29,0.63l0.23,0.49l0.92,-0.3l0.37,0.63l-0.56,0.12l-0.72,0.75l-0.41,0.16l-0.67,-0.3l-0.63,0.47l0.26,0.74l-0.59,1.54l-0.79,0.37l-0.76,-0.93l-0.53,0.55l-1.11,-0.36l-0.16,0.43l0.4,0.62l-0.05,0.86l-0.78,1.08l-0.68,-0.72l-2.1,-0.53l-0.43,0.17l-0.16,0.79l1.29,0.66l-0.38,0.93l-0.99,-0.19l-0.74,0.47l-0.91,-0.23l-0.28,1.53l-0.61,0.04l-0.26,0.87l-1.85,-1.54l-1.62,-5.17l0.56,-2.06l-1.19,-2.98l-0.73,-0.7l-0.27,-0.82l-0.97,-0.69l0.39,-1.58l-0.16,-0.57l-2.03,-0.2l-1.88,0.83l-2.06,-3.48l-1.47,0.43l-0.4,-0.48l-2.15,-0.09l-1.03,-0.72l-2.08,-0.36l0.2,-1.05l-0.66,-2.7ZM656.5,505.03l-0.03,0.12l-0.1,-0.07l0.06,-0.01l0.07,-0.04ZM676.95,491.96l0.08,0.14l0.0,0.09l-0.06,-0.17l-0.03,-0.06ZM679.29,477.66l0.05,-0.36l0.62,-0.75l0.31,0.62l-0.98,0.49ZM683.74,471.1l0.24,0.31l-0.17,0.84l-1.2,0.46l1.13,-1.61ZM681.39,473.34l-0.07,0.36l-0.54,0.39l0.11,-0.59l0.5,-0.17ZM678.82,490.95l0.22,0.01l0.41,-0.12l-0.74,0.75l0.11,-0.63ZM679.47,489.85l-0.5,-0.11l-0.09,-1.06l0.85,0.62l-0.26,0.55ZM676.67,481.19l0.06,-0.02l0.05,0.06l-0.11,-0.03ZM654.76,506.11l0.81,0.04l-0.41,0.81l-0.22,-0.03l0.25,-0.49l-0.42,-0.32ZM644.32,518.58l0.13,-0.44l0.82,0.28l-0.13,0.47l-0.49,0.15l-0.32,-0.47ZM644.25,520.17l0.03,0.08l-0.12,0.02l0.04,-0.04l0.05,-0.06Z", "name": "Fujian"}, "CN-50": {"path": "M466.93,427.36l-0.32,-1.45l1.39,-1.6l0.76,0.02l0.55,-0.52l0.94,-0.13l0.34,-1.36l1.92,-0.72l0.38,-0.43l-0.06,-1.26l0.52,-0.84l-0.06,-0.57l-2.8,-2.06l1.36,-0.63l-0.11,-0.85l0.86,0.12l0.43,-0.28l0.03,-0.89l0.96,-1.49l1.12,0.62l3.19,0.87l1.82,2.01l0.66,-0.17l0.45,-0.51l1.47,-0.11l0.55,-0.86l0.76,0.17l0.51,-0.27l0.84,0.73l1.34,3.19l0.91,0.72l4.12,-0.23l0.63,-0.35l2.74,-2.85l2.08,-4.16l0.64,-0.42l0.9,-1.34l0.22,-0.95l-0.54,-1.26l0.3,-0.7l0.64,-0.6l1.69,-0.05l0.95,-0.67l0.74,1.15l0.9,0.19l1.68,-1.28l0.47,-0.95l-0.27,-0.64l1.06,-1.31l0.46,-2.99l1.95,-1.19l0.8,-2.8l1.76,-0.6l0.88,-0.88l0.6,-1.36l1.04,-1.01l-0.01,-1.19l-0.59,-0.89l-3.14,-2.04l1.12,-1.67l0.83,-0.1l0.34,-0.39l-0.06,-0.57l-0.61,-0.67l1.71,-0.19l2.02,1.34l1.25,0.44l0.62,0.66l3.89,1.7l1.64,1.3l1.16,1.84l0.85,0.64l4.48,-0.4l0.69,0.22l0.82,1.13l0.28,1.43l3.18,0.82l0.28,0.55l1.96,1.2l0.51,0.97l-0.08,1.31l0.48,0.76l-0.98,1.1l0.43,2.03l-0.14,1.48l-0.56,0.91l-0.94,0.05l-1.11,-1.03l-0.96,0.08l-2.13,1.1l-2.49,2.66l-0.78,0.0l-1.74,1.19l-1.6,-0.35l-1.64,0.64l-1.06,-0.6l-1.78,-0.12l-1.38,0.88l-1.97,0.52l-0.64,-0.76l-0.63,-0.09l-1.0,1.15l-2.38,0.31l-0.9,1.59l0.2,0.8l2.02,0.9l0.14,0.41l-0.23,1.84l0.33,2.54l-0.31,0.95l0.12,1.05l-1.91,0.52l-0.08,0.55l0.64,1.41l0.72,0.48l0.89,-0.04l0.58,-1.25l0.78,-0.82l0.81,2.37l2.79,1.15l-0.3,2.09l0.76,1.31l0.02,1.01l1.46,0.77l0.91,1.48l2.86,2.61l-0.59,2.43l0.11,1.64l0.44,0.83l-0.94,1.65l1.02,0.76l-0.31,0.82l-1.52,1.24l-0.49,2.12l-0.53,0.69l0.1,0.79l-4.52,-0.53l0.73,-2.72l-1.31,-1.33l-1.5,0.48l0.39,2.05l-0.35,-0.12l-0.25,-0.61l-0.09,-3.63l-0.65,-0.69l-0.98,0.01l-2.05,-0.75l0.01,-0.43l0.61,-0.44l0.16,-0.52l-1.44,-4.81l-3.82,0.19l-2.78,1.29l-0.61,-0.7l-0.03,-1.3l-0.36,-0.59l-1.57,-0.01l-1.73,-0.69l-0.68,-0.85l-0.64,-0.02l-0.79,0.75l-0.43,1.22l0.22,1.43l0.98,0.88l-0.66,1.54l-2.27,1.16l-1.99,-1.48l-1.99,0.33l-0.74,1.28l-0.76,-0.19l-1.11,0.79l-0.18,2.41l-1.08,0.47l-0.23,1.5l-0.29,0.05l-0.68,-0.54l-0.82,-0.06l0.76,-1.79l-0.9,-1.85l-1.16,-1.19l-0.73,-0.17l-0.41,0.45l0.11,0.87l0.76,1.47l-0.53,1.06l0.04,0.79l-0.93,-0.45l-1.11,-1.44l-0.55,-1.79l0.04,-1.21l-0.37,-0.53l-1.06,-0.53l-1.1,-0.09l-1.63,-0.88l-2.05,0.91l-0.77,-0.21l-0.69,-0.97l-0.55,-4.7l-0.61,-0.3l-0.64,0.5l-1.9,-0.3l-1.11,-0.61l-0.23,-1.53l-1.25,-0.58Z", "name": "Chongqing"}, "CN-51": {"path": "M349.99,371.93l0.39,-0.62l1.18,-0.51l0.43,-0.53l0.07,-0.81l-0.4,-1.2l0.22,-0.85l1.73,-2.25l1.16,-0.39l0.73,-0.92l-0.46,-0.62l-2.89,-0.88l-0.56,-1.56l-1.24,-0.76l0.11,-1.87l-0.32,-1.85l3.33,-1.03l0.52,-1.14l0.67,0.53l0.16,1.49l0.42,0.39l2.02,-0.39l2.13,-1.26l2.59,0.32l0.88,1.42l2.25,-0.07l3.04,2.85l-0.29,0.95l1.59,2.09l0.55,3.24l1.58,2.33l4.81,2.33l1.41,2.18l3.44,0.92l2.66,1.44l0.73,-0.21l0.66,-1.79l0.01,-1.01l0.9,-0.43l0.39,-0.78l1.03,0.98l1.09,-0.03l1.49,1.62l0.12,1.1l-0.56,1.27l0.49,0.82l1.49,0.25l0.43,-0.44l0.25,-1.11l1.81,-0.36l1.05,1.01l0.93,1.72l-1.12,0.93l-0.2,0.91l1.07,1.09l0.55,-0.07l1.12,-0.9l1.15,-3.5l1.93,0.32l1.19,0.58l1.26,-0.28l0.98,-0.62l1.1,0.18l0.69,-0.46l1.05,-2.34l-0.25,-1.12l-1.37,-1.21l0.09,-1.33l0.61,-1.55l1.88,-0.73l0.82,0.36l0.83,-0.91l2.23,1.87l0.98,-0.17l1.38,-2.55l-0.2,-0.64l-0.75,-0.5l0.08,-0.7l1.36,-1.33l0.43,-1.87l0.65,0.61l-0.01,0.7l0.55,0.98l-0.49,1.52l-0.96,1.36l0.62,2.56l0.57,-0.05l1.77,-1.46l1.66,-0.15l0.74,-1.37l1.29,-0.36l0.78,-0.97l1.46,-0.43l1.15,-0.82l0.33,-0.63l-0.33,-0.61l0.32,-0.16l-0.09,-0.56l-2.13,-1.62l0.19,-1.33l-1.16,-1.23l-0.07,-0.58l-1.02,-1.47l1.08,-0.36l1.25,0.16l0.79,-0.53l0.66,-1.09l2.56,-0.31l0.31,-0.82l-0.78,-0.49l1.62,-0.81l0.83,-0.89l1.94,-0.47l1.24,1.47l1.79,0.83l0.07,3.5l0.67,0.78l-0.06,1.22l0.76,0.69l1.12,0.44l1.49,0.04l1.93,-0.85l-0.41,1.02l0.44,0.67l1.71,-0.11l1.76,0.68l2.28,-0.17l2.53,0.24l0.52,0.33l0.43,2.44l0.77,1.11l1.55,1.33l-0.78,0.61l0.09,1.37l0.62,1.33l1.22,1.43l-0.3,0.94l-0.8,0.11l-0.66,0.63l-0.18,1.45l0.69,0.69l1.35,0.34l2.62,2.17l1.86,0.49l1.8,0.07l1.1,0.53l2.13,-0.43l0.54,0.59l0.87,0.04l1.02,-1.05l1.13,0.31l2.46,-1.67l0.19,-0.93l-0.88,-1.14l0.39,-0.56l0.65,-0.25l1.15,3.14l0.87,0.45l1.8,-0.95l1.36,-0.03l0.92,-1.39l2.75,-0.43l-0.66,1.38l0.12,1.24l0.91,1.0l1.88,0.99l0.95,-0.09l1.32,-0.75l3.67,-0.62l1.45,-1.01l1.6,0.41l2.87,-0.02l0.53,0.54l-0.42,2.15l0.36,0.61l2.07,1.11l0.76,0.07l2.38,-1.49l0.46,2.05l2.85,0.29l1.76,1.35l1.04,1.38l2.02,1.24l0.72,-0.1l0.26,-0.95l0.49,-0.3l1.87,-0.09l0.76,-0.44l3.13,0.16l0.13,0.21l-1.87,0.5l-0.09,0.58l0.66,0.76l-0.91,0.31l-1.3,2.25l0.33,0.59l3.04,1.94l0.48,1.09l-1.0,0.98l-0.62,1.39l-0.73,0.71l-1.85,0.69l-0.76,2.76l-2.12,1.35l-0.47,3.15l-1.06,1.27l0.23,0.86l-0.23,0.42l-1.41,1.08l-0.91,-1.3l-0.61,-0.14l-0.99,0.77l-1.77,0.08l-0.98,0.84l-0.48,1.16l0.53,1.33l-0.12,0.55l-1.53,1.75l-2.08,4.15l-2.74,2.81l-4.05,0.17l-1.54,-3.42l-1.33,-1.32l-0.81,0.41l-0.95,-0.12l-0.6,0.88l-1.43,0.1l-0.63,0.58l-1.63,-1.83l-4.74,-1.6l-0.72,0.42l-0.93,1.51l-0.02,0.69l-1.31,0.1l-0.22,0.49l0.27,0.58l-1.31,0.74l0.32,1.05l2.5,1.66l-0.51,0.86l0.08,1.15l-1.93,0.74l-0.42,0.51l-0.1,0.89l-2.0,0.54l-1.24,1.22l-0.65,1.1l0.19,1.4l0.42,0.69l1.19,0.51l0.05,1.19l0.34,0.46l1.39,0.73l2.55,0.22l-0.01,0.84l0.44,0.8l0.15,2.52l0.93,1.25l1.36,0.37l1.87,-0.9l1.39,0.82l1.98,0.51l0.4,2.74l1.46,2.12l-0.41,0.85l-0.46,-0.99l-1.46,-0.62l-2.85,-2.58l-0.58,-0.1l-0.83,0.95l-0.5,1.43l-1.41,0.24l-0.83,-0.24l-0.96,0.58l-0.95,1.69l0.54,0.82l-0.05,1.74l0.77,0.67l1.1,0.08l1.43,0.67l-0.02,1.1l0.53,0.63l1.85,0.23l1.43,-0.54l0.71,0.34l0.49,1.32l1.25,0.91l0.62,2.29l-1.36,0.8l-2.0,-0.29l-0.88,0.5l-1.87,0.03l-1.04,0.58l-1.21,-0.03l-1.52,0.64l-0.5,-0.71l-1.87,-0.96l-1.89,0.36l-0.67,0.6l-0.13,-0.8l-0.67,-0.96l0.65,-1.05l0.03,-1.49l-1.28,-0.1l-0.4,-0.91l-1.97,-0.49l-1.49,0.63l-0.32,1.88l-0.79,0.58l-1.55,0.34l-1.07,-0.16l-1.52,0.56l-1.45,-0.63l-2.05,-1.82l1.58,-0.78l0.07,-0.66l-0.54,-1.21l0.27,-0.55l-0.82,-1.17l-1.54,-0.81l-0.2,-2.73l1.55,-0.31l1.0,-0.64l0.31,-0.39l-0.12,-0.56l-1.15,-0.48l-1.26,0.23l-0.68,-0.48l-2.42,0.77l-0.67,-0.32l-1.23,0.3l-1.54,-0.93l-0.43,0.34l-0.83,2.44l1.13,3.06l-1.91,1.36l-0.94,-0.75l-1.33,0.44l-0.65,1.03l-1.09,0.74l-0.5,1.2l0.08,0.7l0.78,0.37l0.41,0.89l-0.24,1.53l-0.74,1.35l-2.39,1.87l0.1,0.86l-1.13,0.36l-0.9,1.21l-0.39,1.13l-1.68,0.38l-0.23,-0.33l-0.68,-0.06l-1.02,2.15l0.36,2.64l-0.55,1.59l0.35,1.8l1.11,1.57l1.19,4.29l-0.89,0.87l-0.05,1.79l-1.62,0.0l-2.54,2.1l-0.67,-0.45l0.22,-1.05l-0.2,-0.44l-1.21,-0.49l-1.0,0.66l-1.6,0.48l-0.8,0.87l-1.26,0.35l-2.16,2.26l-2.62,-0.24l-0.86,0.89l-0.77,-0.58l-0.07,-1.03l-0.35,-0.46l-1.61,-0.94l-0.91,0.38l-0.04,-0.89l0.91,-0.66l0.07,-0.72l-1.58,-2.15l-1.79,-0.97l1.19,-1.92l0.04,-1.43l-0.97,-0.34l-0.65,0.85l-0.64,-1.97l-2.87,-2.55l0.4,-1.96l-0.2,-0.75l-1.34,-0.28l-0.97,0.43l-0.43,-2.89l-0.8,-1.28l-0.78,-0.51l0.01,-1.21l-3.11,-4.97l-1.01,-0.51l-1.15,1.25l-1.64,-0.45l-1.42,1.66l-0.27,-1.78l-1.33,-0.63l-1.86,-2.25l-0.58,-1.64l1.93,-1.02l-0.17,-1.81l-2.26,-2.14l-0.85,-1.68l-1.4,-0.64l-0.29,-1.14l-1.35,-1.07l-0.34,-1.71l-0.48,-0.1l-1.5,0.71l-0.46,1.13l-0.75,0.77l-0.41,1.66l-1.97,0.98l-0.15,0.66l0.39,0.69l-0.18,1.17l0.35,2.57l-1.18,-1.11l-1.64,-2.46l0.26,-0.93l-0.13,-1.54l-0.61,-1.15l-0.49,-2.64l0.35,-2.02l-0.18,-4.19l-0.68,-1.42l-0.3,-4.01l-0.81,-1.47l0.27,-2.58l0.73,-1.77l-0.32,-2.22l-0.69,-1.43l-0.38,-5.01l-0.43,-0.66l-0.38,-2.68l0.68,-0.51l0.12,-0.55l-0.22,-0.53l-2.39,-2.09l0.32,-1.05l-0.12,-0.76l-1.11,-1.1l-0.55,-1.12l-0.96,-0.65l-0.09,-1.15l0.27,-0.61l0.72,0.41l0.58,0.85l0.54,0.06l1.82,-2.1l-0.09,-0.57l-4.25,-3.93l-0.43,-1.19l-1.78,-2.18l-0.15,-0.81l0.4,-0.88l0.01,-1.0l-3.46,-4.5l-0.35,-1.84l-1.8,-0.83l-1.13,-1.01l-5.08,-1.54l-0.97,-1.04l-1.87,-0.84l-0.99,-1.27l-0.37,-2.07Z", "name": "Sichuan"}, "CN-31": {"path": "M700.48,390.15l0.78,-0.49l1.64,0.44l4.06,2.59l3.72,1.18l0.73,0.5l0.01,0.48l-1.55,0.52l-2.35,-1.07l-1.57,-0.35l-3.69,-1.99l-0.49,-0.82l-1.3,-0.99ZM695.81,401.06l2.67,-0.28l0.32,-0.69l-0.17,-1.24l0.96,-0.26l0.18,-1.73l0.57,-1.03l1.9,-0.51l5.52,3.31l2.18,2.89l1.38,2.76l-0.68,0.54l-5.43,0.68l-1.94,0.79l-1.56,1.13l-0.76,-1.17l-1.33,-0.32l-0.73,-0.82l-1.28,0.38l-0.15,-2.75l-1.11,-0.45l-0.53,-1.25ZM709.58,397.23l0.33,0.11l-0.12,0.39l-0.09,-0.17l-0.12,-0.32Z", "name": "Shanghai"}, "CN-32": {"path": "M629.83,342.13l0.39,-0.46l0.15,-1.59l0.59,-0.86l2.21,-0.59l2.11,0.06l0.64,-0.33l1.76,1.5l0.24,1.05l1.14,1.33l1.15,2.36l0.24,1.5l0.59,0.62l1.13,-0.18l0.25,-1.34l1.03,-0.71l1.71,1.75l1.93,0.25l1.3,-1.1l1.67,0.06l0.43,-2.23l1.63,-0.26l1.94,0.5l0.19,1.07l0.79,0.48l-0.28,0.77l0.8,1.8l2.74,-0.31l0.89,-0.48l0.43,-0.65l0.71,-3.33l1.42,-0.35l1.59,0.41l1.17,-0.9l0.52,-1.85l0.97,-1.71l0.21,-1.47l3.01,-0.19l1.47,-0.93l0.42,-0.06l-0.4,0.32l-0.33,1.14l-0.06,4.42l0.23,0.62l0.68,0.03l0.31,-0.67l1.02,0.09l0.53,-0.28l1.17,0.39l0.25,0.24l-0.14,0.7l2.87,2.55l1.27,0.21l1.43,0.89l1.7,0.22l1.99,1.31l2.46,0.97l1.65,4.47l0.58,2.11l-0.11,0.73l1.48,2.05l-0.2,1.62l2.14,2.91l0.47,2.3l1.03,0.91l0.02,1.24l0.92,0.84l0.35,1.82l0.29,0.32l0.7,-0.03l0.17,3.07l-1.05,1.61l0.08,0.7l1.03,0.63l0.65,0.89l2.1,1.15l0.47,0.7l0.67,0.01l3.23,1.66l0.34,1.7l-0.73,0.36l1.18,2.33l3.26,1.0l2.06,1.47l1.76,3.59l-1.16,0.26l-2.04,-0.52l-5.74,-2.72l-2.7,1.5l-1.91,-0.29l-0.2,-1.0l-2.02,-2.27l-2.87,-1.0l-2.3,-0.04l-1.88,0.92l-1.41,1.26l-1.72,0.06l-1.83,-1.05l-1.1,-1.65l0.17,-1.37l-0.24,-0.38l-0.34,0.06l-0.71,-1.32l-3.72,-1.02l-0.33,0.32l0.2,0.42l0.8,0.62l-0.41,0.99l-0.51,0.28l0.07,0.71l0.6,0.13l0.83,-0.63l0.77,0.37l0.1,1.18l1.29,0.72l2.2,2.21l2.81,0.83l4.17,-1.3l0.25,-0.64l1.67,0.5l1.32,-0.09l0.67,0.24l0.91,1.95l-1.26,-0.71l-0.23,0.41l0.37,1.04l5.01,1.51l2.49,1.92l0.86,1.2l-0.84,0.11l-1.1,0.79l-0.6,1.2l-0.04,1.26l-1.05,0.47l0.1,1.67l-2.47,0.12l-0.49,0.29l-0.09,0.44l0.66,1.62l-1.48,-0.04l-1.49,0.39l-0.36,0.53l0.4,1.02l-1.46,0.37l-1.15,1.14l-0.7,-1.81l-0.88,0.11l-0.08,-0.51l-0.44,-0.3l-2.13,0.29l-1.1,-0.32l-2.35,-1.95l-0.34,-1.17l-0.77,-0.55l-1.51,0.13l-0.96,-0.28l-2.29,0.71l-2.89,-0.85l-0.05,-1.19l-0.63,-0.46l-1.22,0.4l-1.4,-0.41l-1.35,0.79l-3.67,0.2l-0.81,-1.29l1.25,-0.86l0.84,-2.12l-0.26,-1.95l-0.41,-0.34l-0.59,0.03l-0.51,-0.72l-0.56,0.11l-0.34,0.45l-0.48,-0.11l0.28,-0.58l-0.23,-0.4l-1.88,-0.53l-0.99,-0.68l0.11,-0.9l-0.37,-0.73l-1.4,-0.73l0.55,-0.65l-0.23,-0.93l1.63,-1.24l0.09,-0.88l1.38,-0.28l1.05,-0.83l-0.14,-0.83l0.42,-0.76l-0.27,-2.05l-0.31,-0.41l-0.76,-0.16l-0.1,-0.67l-0.5,-0.42l0.49,0.19l2.06,-0.48l1.81,0.29l1.22,1.18l0.77,0.17l0.84,1.06l0.44,-0.1l0.91,-0.92l0.31,-1.06l0.68,-0.71l-0.17,-2.22l-0.51,-0.86l-0.03,-0.91l-0.93,-0.38l-1.21,-1.11l-0.42,-0.96l-2.13,-0.2l-0.64,0.35l-0.59,1.53l-0.72,0.42l-0.23,1.64l-1.45,-0.22l-0.6,0.3l-2.68,-0.05l-1.07,-0.7l-0.05,-0.81l-0.71,-1.04l0.91,-0.94l-0.78,-0.93l-0.62,-3.03l-1.02,-0.47l-0.47,0.62l-0.87,0.37l-0.84,-0.19l-0.78,-0.92l0.65,-0.68l1.01,-2.87l0.63,0.09l0.35,-0.33l0.12,-2.17l0.82,-1.42l-0.3,-1.01l-1.15,-0.64l-3.48,0.68l-1.42,-0.01l0.03,-2.21l-0.31,-0.35l-0.63,0.06l-0.88,-1.96l-0.48,-0.18l-0.42,0.35l-1.14,-1.04l-1.45,0.41l-1.02,-0.83l-2.31,-0.14l-2.01,-1.12l-0.14,-1.28l-0.7,-0.6l0.18,-1.16l-0.58,-0.83l-0.65,-0.27l-1.42,0.16l-0.6,-0.95l-2.52,-0.71l-1.65,-1.71l-1.27,-0.81l-0.06,-0.61ZM678.92,382.39l0.45,-0.1l0.53,0.6l-0.72,-0.3l-0.26,-0.2ZM680.23,383.73l0.2,0.51l0.05,0.28l-0.48,-0.16l0.24,-0.63Z", "name": "Jiangsu"}, "CN-33": {"path": "M712.07,417.09l1.37,0.04l2.68,1.27l0.26,0.35l-0.27,0.65l-2.51,-0.97l-0.93,0.12l-0.57,-0.56l-0.02,-0.92ZM713.83,414.36l1.02,-0.31l0.01,0.67l-0.62,-0.14l-0.41,-0.23ZM713.2,423.11l0.11,-0.14l0.15,-0.05l0.01,0.19l-0.27,-0.0ZM653.63,432.96l0.7,-1.13l0.09,-0.9l1.1,-0.36l0.73,-0.99l0.06,-0.72l1.66,-0.54l0.25,-0.4l0.59,0.33l0.41,-0.14l2.47,-2.71l1.36,-0.56l1.16,-1.22l0.13,-1.41l1.34,-1.04l1.07,-1.68l-0.34,-3.16l0.57,-0.99l-0.47,-1.26l0.73,-0.34l1.37,0.67l2.28,-0.02l0.45,0.24l1.47,-1.16l1.27,-0.21l0.01,-0.57l-0.49,-0.41l-0.52,-1.75l-1.16,-0.27l1.5,-1.84l0.62,0.71l0.87,-0.32l0.67,-1.88l0.54,-0.36l0.69,-1.19l0.77,-4.48l0.33,-0.3l3.22,-0.02l0.38,1.18l2.79,2.37l1.53,0.44l1.83,-0.24l0.36,0.68l0.88,-0.02l0.59,1.86l0.65,0.16l1.42,-1.43l1.8,-0.55l-0.11,-1.38l3.47,-0.54l0.18,2.92l1.07,0.36l0.62,-0.53l0.59,0.74l1.1,0.18l0.61,0.69l-1.92,1.64l-1.08,0.17l-1.1,0.68l-0.79,1.28l0.02,0.88l-0.33,0.07l-1.06,1.61l-0.35,0.03l-0.37,-0.87l-0.87,-0.66l-3.44,-0.15l-0.95,0.4l-0.68,1.73l-1.0,-0.44l-0.97,0.2l-1.41,1.48l-0.13,0.46l0.4,0.26l0.71,-0.13l1.21,-1.14l0.86,0.56l0.88,-0.16l1.06,-1.93l2.12,-0.01l1.09,1.93l-1.13,1.21l0.0,0.79l0.93,0.71l1.94,0.24l0.14,-0.45l-0.35,-0.62l-1.6,-0.24l1.08,-1.15l1.21,0.75l0.95,0.06l1.52,-0.68l2.3,-1.84l1.29,-0.3l1.66,0.34l0.67,0.45l3.31,4.36l1.32,1.08l0.85,-0.08l1.66,0.69l0.56,0.57l1.4,-0.02l-2.52,1.43l-0.31,0.86l-2.37,2.18l-2.0,0.49l-0.73,-0.29l-1.09,0.78l-0.01,1.75l1.12,0.79l0.86,-0.52l0.53,-0.87l1.76,-0.88l0.67,0.85l0.6,0.11l1.21,-1.3l-0.18,-0.42l-0.73,-0.38l1.49,-0.45l0.45,0.39l-0.89,1.01l0.75,1.13l-0.47,0.23l-0.05,1.71l-0.37,0.61l0.73,0.76l-0.15,0.38l-1.47,0.52l0.21,-1.7l0.52,-0.62l-1.21,-1.08l-0.63,0.35l0.13,1.85l-0.58,0.94l-0.6,-0.11l-0.02,-1.8l-0.53,-0.13l-0.34,0.29l-0.53,-0.29l-1.08,0.84l0.1,0.47l-0.38,0.57l-1.33,0.55l0.12,0.65l-0.23,0.24l0.28,0.68l1.4,0.03l0.54,-0.17l0.94,0.02l-1.23,0.23l-0.13,0.88l0.24,0.34l0.54,-0.0l0.27,-0.37l0.99,0.01l-0.22,0.63l0.21,0.43l-0.93,-0.53l-0.23,0.29l-0.66,-0.2l-0.45,0.13l-0.33,0.61l0.52,0.67l1.4,0.43l0.34,0.78l-0.41,1.13l-1.33,0.34l-2.12,-0.17l-1.45,-0.76l-0.36,-0.65l-1.06,-0.66l-0.68,0.32l0.45,0.86l1.85,1.24l-0.5,0.36l-0.04,0.48l2.68,-0.13l1.05,0.51l0.67,1.76l-0.66,0.38l0.37,0.64l0.7,-0.02l-0.02,0.6l0.84,1.48l-0.24,0.47l-1.4,-0.81l-1.68,0.5l-0.31,0.35l0.06,0.62l-0.61,0.69l0.12,0.78l-1.12,-1.23l-0.2,-1.2l0.49,-0.4l0.01,-0.45l-2.04,-0.35l-0.59,1.22l-1.38,-0.04l-0.18,0.6l0.21,0.31l1.23,0.24l-0.04,0.24l-0.46,0.89l-1.22,1.16l-0.49,1.62l-1.93,-0.07l-1.21,-0.72l-1.76,-0.09l-0.22,-0.93l-0.7,-0.21l-0.2,0.69l0.4,1.33l1.45,0.21l1.14,0.73l1.18,0.3l0.22,0.73l-0.71,0.51l-1.17,1.81l-0.9,-0.7l-0.61,0.37l0.57,1.0l-0.02,0.73l-1.09,1.46l0.47,1.03l0.73,0.27l-0.47,0.38l-0.16,0.67l-0.91,-0.27l-1.04,1.32l0.6,0.54l-0.51,1.33l-0.62,-0.32l-0.25,-1.17l-0.77,-1.12l-1.94,-0.73l-1.54,0.24l-1.25,0.9l-0.99,-0.3l-0.9,0.56l-1.98,0.18l-1.09,-1.44l-0.05,-1.48l-0.6,-1.24l-0.45,-0.26l0.04,-0.95l-0.47,-0.27l-1.24,0.07l-0.68,0.83l-0.52,1.51l-1.27,0.21l-1.66,1.34l-1.43,-0.18l-0.61,-0.57l-2.77,-0.22l0.44,-0.65l-0.61,-2.15l0.12,-0.72l-1.06,-3.09l-1.01,-0.91l0.03,-1.68l0.52,-0.75l-0.24,-0.81l0.47,-0.52l-0.11,-0.59l-0.88,-1.34l-0.63,-0.16l-0.69,0.46l-1.14,-0.13l-1.57,0.43l0.24,-0.6l-0.28,-3.04l-0.61,-1.33l0.16,-1.39l-0.82,-1.75l-1.06,-0.73l-0.27,-0.85l-0.95,-1.2l-2.33,-1.46l-0.84,-1.06ZM710.56,432.91l0.46,-0.01l-0.07,0.7l-0.01,-0.19l-0.38,-0.5ZM710.07,418.28l0.28,0.25l-0.22,0.5l-0.14,-0.05l0.08,-0.71ZM699.69,449.14l0.7,-0.44l0.49,-0.67l0.03,1.31l-0.89,0.63l-0.32,-0.83Z", "name": "Zhejiang"}, "CN-14": {"path": "M540.48,343.19l-0.86,-0.53l-0.2,-2.13l0.5,-1.26l-0.14,-1.12l1.07,-4.14l2.27,-3.24l0.78,-0.64l0.26,-1.35l0.62,-0.71l0.27,-0.92l-0.65,-1.96l-0.22,-2.23l-0.32,-0.72l-0.48,-0.27l-0.87,-3.96l0.38,-1.92l-0.2,-1.46l0.59,-3.02l-0.26,-1.28l-1.06,-1.25l0.44,-1.16l-0.58,-0.54l0.24,-0.81l-0.51,-1.04l0.46,-0.8l-0.09,-0.94l3.83,-4.91l0.3,-1.33l-0.82,-0.56l0.04,-0.27l1.42,-0.78l0.85,-1.9l-0.32,-1.07l0.34,-0.76l-0.86,-0.71l0.26,-0.35l-0.13,-0.7l-1.36,-0.9l-0.96,-1.82l-1.01,-0.68l-0.19,-3.3l0.9,-0.77l0.22,-1.09l1.04,-0.25l1.37,-1.27l0.41,-0.8l1.05,-0.45l0.78,-1.49l0.1,-0.98l-0.41,-0.62l1.53,-3.21l0.39,-1.66l-0.39,-1.21l2.04,-1.47l1.61,-4.0l-0.18,-0.68l-0.78,-0.87l-0.56,-0.17l2.53,-0.29l0.54,-0.33l1.31,-1.57l0.07,-1.37l0.3,-0.05l0.15,-0.51l2.69,0.25l1.23,0.67l1.73,-0.65l1.23,-1.23l0.4,-1.52l2.13,-3.84l0.98,-0.95l1.67,-2.92l1.58,-0.88l2.61,0.87l1.92,1.18l1.73,-0.66l1.93,-2.53l3.25,-1.23l0.56,0.21l0.62,1.15l0.69,0.44l2.68,-0.22l2.81,-1.67l1.64,-0.02l1.56,-0.68l2.66,-0.57l0.33,-1.1l-0.8,-1.56l1.02,-1.17l0.21,0.95l1.31,1.49l0.67,3.59l2.97,0.44l-5.68,1.93l-0.42,0.44l-0.22,1.12l-0.43,-0.44l-0.57,0.1l-0.98,1.34l-0.18,0.76l2.19,2.13l1.93,0.38l0.75,0.49l2.09,0.24l0.09,3.27l0.49,0.92l1.53,1.17l-1.15,3.14l-0.65,0.88l-0.13,1.77l-1.25,0.73l-0.67,0.89l-2.01,0.19l-1.4,-0.91l-2.79,1.01l-1.51,2.58l1.03,2.02l-0.94,1.15l-0.98,0.43l-0.15,0.74l-1.03,0.42l-1.16,2.02l0.12,1.66l-0.38,1.3l0.35,2.1l3.77,1.92l1.43,3.31l1.41,1.88l0.55,1.45l1.15,1.26l-0.75,2.7l-2.28,3.16l-0.56,1.71l-1.55,1.64l-0.13,1.28l0.37,1.2l0.02,1.57l-1.1,-0.14l-1.08,1.71l-2.28,0.58l-0.48,0.55l0.4,0.71l-0.14,0.89l1.27,1.49l-0.03,1.26l1.45,0.81l1.2,1.2l-0.71,2.07l0.18,2.97l-0.3,0.96l-0.55,0.56l-0.06,2.1l-0.5,0.72l-0.08,1.87l0.36,0.63l-1.9,1.92l-2.37,0.65l-0.38,0.75l-1.65,0.56l-0.67,0.66l-1.46,0.31l-1.73,1.46l-1.16,-0.03l-2.09,-1.17l-1.18,0.51l-0.41,0.76l-0.62,0.26l-6.87,-0.23l-0.34,0.4l-0.1,2.52l-1.03,-0.58l-1.96,0.21l-1.42,1.1l-0.9,0.24l-1.71,2.32l-2.36,0.65l-0.71,-0.32l-1.35,0.26l-0.45,0.39l-1.22,-0.27l-0.54,0.87l-1.79,0.79l-1.01,-0.22l-0.46,1.1l-1.76,0.1l-1.68,0.96l-1.58,0.26l-0.64,-0.46l-1.18,0.31l-1.1,-0.33Z", "name": "Shanxi"}, "CN-15": {"path": "M347.72,203.74l32.89,3.89l8.0,-1.99l17.65,2.6l4.5,-0.13l1.56,0.37l1.31,0.88l2.23,3.25l1.29,1.24l1.08,0.52l15.25,3.18l9.15,4.34l11.56,-1.88l0.13,3.51l1.75,0.38l4.21,0.01l1.38,1.02l0.77,-0.27l2.67,-2.53l2.26,-0.73l7.51,-3.67l13.18,-5.16l20.65,-2.96l2.09,0.38l3.15,-0.04l3.89,0.65l2.5,-0.88l4.24,0.39l3.54,-0.45l2.69,-1.77l3.52,-1.38l2.23,-0.19l1.19,-0.79l3.9,-1.52l0.82,-1.36l2.28,-1.86l1.09,-2.05l4.22,-4.52l5.28,-2.15l0.98,-0.69l2.42,-0.47l2.81,-2.91l1.27,-0.03l1.52,-0.77l0.16,-1.87l-1.59,-2.83l-3.05,-2.35l-1.62,-2.11l-0.49,-1.79l-1.29,-1.0l0.36,-1.54l1.72,-2.55l0.17,-1.93l2.72,-4.9l1.4,-1.2l1.76,-0.82l1.94,0.36l4.34,0.01l1.47,1.21l1.0,1.33l2.46,1.1l5.36,1.31l5.37,0.43l0.83,0.45l1.3,0.11l4.3,-3.1l1.82,-0.33l1.15,-0.68l0.93,-1.29l3.99,-3.15l1.26,-1.91l0.29,-1.33l2.33,-0.72l3.39,0.97l5.92,-0.38l5.09,-1.17l4.9,-4.01l1.25,0.01l1.32,-0.74l1.25,-1.79l-0.54,-1.97l2.05,-3.51l2.47,-2.24l0.63,-1.15l2.1,-0.6l1.31,-1.04l1.99,0.37l5.71,0.16l0.48,-0.6l0.24,-1.77l0.65,-0.95l-0.09,-0.72l1.23,-0.03l0.67,-0.39l0.66,1.06l0.82,0.44l2.05,-0.04l1.66,-1.66l1.58,-0.38l1.27,-0.79l1.05,-0.12l1.41,-0.8l2.85,0.69l1.36,-0.01l0.72,-0.34l1.54,0.51l0.78,-0.3l1.15,-1.3l0.55,0.92l0.55,0.05l0.58,-0.47l1.01,1.24l4.28,1.08l2.67,-0.3l1.66,0.19l1.09,0.47l1.01,-0.45l0.61,-0.74l0.75,0.06l0.71,-0.54l0.56,-0.96l-0.33,-0.78l0.16,-2.8l-0.81,-0.44l-1.07,-1.37l-0.2,-1.78l-0.86,-1.35l-1.14,-1.15l-1.53,-0.67l-0.66,-1.01l-2.53,-1.95l0.29,-0.47l-0.29,-0.76l-2.53,-0.93l-0.42,-2.03l-0.37,-0.5l-4.65,-1.78l-3.23,-3.87l-1.15,-0.53l-2.94,-0.19l-1.5,-0.57l-3.09,0.57l-2.29,-0.13l-0.85,0.24l-1.39,0.85l-4.63,5.53l-3.93,-2.92l-3.85,-1.29l-4.77,0.75l-3.83,-0.48l-2.44,1.09l-2.32,2.21l-0.67,-0.3l-3.96,-3.7l-0.84,-3.79l3.52,-1.53l0.67,-0.62l-0.13,-5.09l3.46,-4.74l0.33,-0.79l-0.17,-1.19l9.27,-17.7l5.23,2.66l2.98,0.99l3.16,0.15l4.14,1.91l1.39,0.1l0.52,-0.08l0.98,-1.08l3.81,-2.19l0.71,-0.9l2.01,-1.11l0.26,-0.6l1.21,-0.32l0.73,-1.16l1.75,-1.12l0.89,0.14l3.08,-0.78l2.53,0.06l1.8,-0.58l1.69,-1.58l0.51,-1.19l-0.15,-2.56l0.45,-0.58l-0.12,-0.81l-0.33,-0.37l-1.53,0.02l-1.06,-0.55l0.45,-0.05l0.79,-0.82l0.65,-2.81l1.13,-0.83l0.23,-0.51l0.83,-0.35l0.87,-1.12l0.44,-3.34l3.15,-3.15l0.57,-1.83l-0.09,-0.71l0.65,-0.45l-0.01,-0.87l1.49,-1.41l-0.17,-0.69l0.68,-0.41l0.42,-0.83l-0.04,-0.93l1.07,-1.21l0.65,-2.04l0.84,-0.08l2.32,-2.14l2.07,-1.22l0.43,-0.68l1.09,-0.6l1.32,-0.23l0.98,-1.6l-0.17,-1.25l1.09,-1.18l0.19,-1.15l-0.47,-0.81l0.01,-0.93l-1.53,-1.25l-0.31,-0.69l0.89,-1.65l0.48,-2.02l-0.14,-0.51l-4.26,-1.98l-4.09,1.09l-1.21,-0.1l-0.47,-0.62l0.33,-1.08l-0.23,-1.2l3.42,-1.89l2.53,-2.86l2.41,-1.76l1.48,-1.77l1.51,-0.93l0.33,-0.76l2.86,-0.29l2.24,0.26l2.08,-0.94l0.78,0.13l3.06,1.65l0.73,1.81l1.18,0.67l0.51,1.27l-1.47,2.09l-2.74,2.62l-4.89,3.62l0.01,0.94l2.37,0.93l2.43,1.73l3.06,1.17l2.02,2.32l1.35,0.22l1.76,-0.58l2.45,-3.99l1.83,0.7l2.37,3.29l3.81,1.01l-0.19,0.61l-1.51,0.64l-0.38,0.68l1.89,5.83l-0.76,1.49l-0.01,0.77l1.9,2.93l0.09,1.29l0.65,1.09l1.16,1.31l2.01,1.47l1.32,-0.07l1.46,0.99l2.81,-0.09l1.35,1.21l1.04,0.24l2.5,-0.56l0.95,-1.68l2.29,0.19l2.25,-0.5l1.7,0.86l1.41,0.05l1.13,-0.54l0.34,-0.95l2.74,0.43l2.72,-0.72l0.55,-0.89l1.14,-0.67l0.24,-0.89l1.34,-0.51l0.36,-1.59l0.49,-0.2l2.92,0.62l2.13,1.39l1.14,2.08l1.21,1.1l0.81,1.49l1.5,1.17l0.54,0.04l0.37,1.08l1.18,0.89l0.39,-0.03l0.8,1.13l0.28,1.31l-0.47,0.83l-1.74,0.93l-0.03,0.64l-0.98,1.04l-0.57,-0.01l-0.53,0.41l-0.03,0.45l0.69,0.84l-0.28,0.65l0.36,1.38l-0.16,0.92l-1.03,0.43l-1.11,1.12l-1.1,0.43l-0.11,0.47l-0.52,0.34l-0.33,1.47l-0.97,1.11l-0.07,1.05l-0.68,0.19l-0.62,0.49l-0.05,0.59l-0.56,-0.06l-0.68,0.8l0.13,0.73l-0.3,0.12l-0.08,0.57l0.5,0.46l-1.42,1.26l0.74,1.3l-0.83,1.36l0.63,0.54l-0.06,2.1l-0.75,-0.22l-0.63,0.6l0.16,0.55l0.96,0.71l0.43,0.76l-0.16,0.4l0.68,1.7l-0.38,0.9l0.19,0.85l-0.42,0.98l-0.01,1.24l-1.27,1.37l-0.62,-0.03l-0.53,-0.52l-2.48,-0.24l-0.95,1.36l-0.06,1.14l-2.91,5.99l-0.21,1.94l-1.12,1.52l0.14,1.91l-0.32,1.75l0.56,1.16l0.04,1.37l-0.49,0.83l-0.05,0.84l-0.81,-0.76l-0.41,-1.58l-1.07,-1.57l-0.23,-2.64l-0.84,-0.97l-0.68,-0.02l-2.43,1.64l-5.16,4.85l-2.2,2.57l-4.26,2.11l-1.2,2.41l-9.46,5.32l-1.09,2.33l-1.31,1.46l2.53,4.17l1.23,0.93l1.97,0.81l3.01,3.66l1.22,0.91l2.06,0.66l1.04,-0.97l1.06,-0.3l0.76,-1.25l0.73,0.18l0.02,0.83l0.46,0.44l0.78,0.13l0.62,-0.31l0.27,0.36l-1.06,1.53l-2.15,1.76l-2.14,-0.06l-2.32,-0.57l-1.12,0.52l-0.41,3.98l2.4,3.34l-0.77,1.62l-4.08,0.32l-0.29,0.25l-0.04,3.49l-0.46,0.85l0.05,1.46l-0.77,0.98l-2.42,-1.72l-0.58,-1.58l-0.91,-0.97l-0.77,0.07l-0.44,0.93l-1.44,1.4l-3.3,-2.91l-1.94,-0.66l-1.39,-0.12l-0.51,0.12l-0.28,0.48l0.65,1.25l-0.22,0.97l-0.98,1.56l-1.23,1.06l0.37,0.72l1.32,0.8l2.13,-0.41l0.59,0.16l0.55,0.73l-0.32,1.12l0.31,0.96l0.74,0.9l1.49,0.49l1.08,1.63l0.4,1.37l-0.2,0.72l-0.89,0.72l-1.79,0.7l-0.51,1.25l0.47,2.87l-0.25,1.42l0.36,1.4l-0.05,1.39l0.76,1.72l2.73,3.16l-0.37,3.27l0.42,0.79l0.64,0.31l1.22,-0.18l3.28,-1.3l0.62,-0.58l1.36,-0.29l3.44,-2.01l1.69,-1.4l0.13,2.19l0.8,0.68l1.18,2.78l1.5,0.92l0.02,0.73l-0.54,0.61l-0.03,0.62l2.99,6.35l-0.22,1.18l-0.75,-0.38l-0.62,0.29l-0.02,0.64l-1.0,1.0l0.04,1.03l0.61,0.69l2.79,1.01l0.6,0.58l1.08,0.2l-1.07,4.14l-5.16,1.49l-1.26,1.05l-0.65,1.98l-0.97,0.68l-1.22,-0.01l-1.29,0.79l-1.71,0.19l-3.36,-1.78l-2.23,-0.35l-0.55,0.36l-0.18,0.63l1.03,2.04l-0.22,0.45l-1.49,0.36l-1.4,-0.86l-2.21,-0.63l-1.89,0.95l-0.8,2.35l-2.12,1.38l-1.09,0.05l-0.67,-1.11l-0.58,-0.32l-2.78,0.55l-5.33,4.49l-1.09,-0.82l-0.47,0.04l-2.67,1.25l-1.45,1.13l-2.04,0.33l-0.66,2.2l-1.8,1.08l-2.85,3.05l-0.48,1.43l-0.5,-0.05l0.09,-2.28l-0.79,-1.08l-0.11,-0.87l-1.29,-0.89l-0.13,-1.07l-1.08,-1.02l0.62,-0.6l-0.17,-0.75l-0.47,-0.34l-2.52,-0.45l-0.77,-1.98l-1.38,-0.88l-0.91,1.3l-1.96,0.69l-1.43,1.92l1.09,1.55l0.76,0.4l0.06,0.43l-0.78,1.59l0.11,1.8l-0.36,0.5l-0.11,1.14l0.24,2.16l0.61,0.94l0.47,2.91l-0.31,0.82l-1.15,1.07l-0.52,-0.32l-1.09,0.21l-4.08,-0.42l-0.92,-0.82l-1.57,0.7l-3.42,-0.21l-0.92,0.25l-0.45,0.46l-0.24,-1.85l-0.6,-0.58l0.22,-1.83l-0.43,-0.49l-0.86,-0.16l-1.05,-2.34l0.25,-0.45l1.22,0.79l0.73,-0.86l0.3,-1.51l-0.67,-0.95l0.3,-1.0l-0.31,-1.62l-0.51,-0.59l-0.68,-0.09l-1.01,1.11l-0.48,-2.54l-1.57,-0.8l0.78,-0.86l-0.31,-2.02l-3.23,-3.17l0.11,-0.64l-0.5,-0.41l-2.93,0.93l-0.72,-1.06l-0.44,-0.05l-1.43,1.46l-0.4,1.45l-2.24,-0.46l-2.25,0.13l-3.31,1.51l-1.03,1.84l0.86,1.96l-0.46,1.46l0.51,0.91l-1.14,1.01l-2.69,1.07l-0.96,-0.76l-1.02,0.32l-0.41,-0.83l-1.09,-0.2l-1.55,1.08l-1.01,1.15l-1.26,0.27l-0.74,1.18l-1.52,-2.2l-1.19,-0.15l-4.51,2.54l-3.54,1.26l-0.56,0.66l0.29,1.02l-0.68,0.05l-0.42,0.57l-1.9,-0.53l-2.85,0.09l0.12,-1.86l-0.29,-0.97l0.69,-0.38l0.22,-0.57l-0.17,-1.66l-1.07,-2.44l0.14,-0.78l-0.3,-0.72l-0.59,-0.53l-0.59,0.06l-0.51,0.52l-3.08,0.21l-1.15,1.08l-0.88,2.07l-1.39,0.75l-1.43,1.62l-0.58,4.23l-2.5,0.98l-1.39,1.98l-0.32,2.59l0.45,0.7l0.66,0.19l0.04,0.94l-1.03,-0.03l-0.55,1.18l-0.52,-0.08l-0.34,0.39l0.21,0.53l2.81,2.78l0.48,1.77l1.23,0.96l-1.1,0.76l-0.59,1.04l0.09,0.92l0.69,1.32l-2.43,0.46l-1.47,0.66l-1.76,0.05l-2.42,1.51l-1.05,0.28l-1.71,-0.0l-0.69,-1.19l-0.81,-0.52l-1.99,0.34l-2.15,1.01l-1.99,2.57l-1.11,0.45l-1.7,-1.12l-2.18,-0.83l-1.11,-0.01l-1.85,1.12l-1.69,2.96l-1.0,0.98l-2.16,3.9l-0.36,1.45l-1.08,1.04l-1.14,0.45l-1.1,-0.66l-3.45,-0.14l-0.66,0.68l-0.02,1.59l-1.1,1.29l-2.38,0.25l-0.9,0.61l-0.4,-0.24l1.11,-1.63l0.19,-1.13l-0.48,-0.33l-0.92,0.35l-0.83,-0.1l-2.67,1.85l-2.66,3.7l-1.85,-2.18l-1.64,0.33l-0.86,0.62l-0.86,-0.61l-0.96,-1.32l-1.0,-0.29l-0.81,0.21l-0.34,0.8l0.99,1.99l-2.97,1.63l-1.74,1.46l-0.37,0.72l-2.13,0.73l-0.71,1.98l-0.84,0.83l-0.39,0.99l-0.72,-0.11l-1.35,0.75l-0.48,1.04l-0.88,0.53l-0.08,0.82l-1.91,1.04l-1.98,2.33l-0.94,1.65l-0.51,2.21l1.23,2.21l-1.13,2.39l-1.09,-1.23l-0.71,0.2l-0.61,0.78l-0.39,4.4l-3.65,0.08l-2.42,0.6l-4.4,-0.02l-0.1,-1.11l-1.21,-1.41l-3.39,-0.83l-3.11,-1.23l-0.99,-0.05l-0.21,-1.09l-1.14,-1.54l-2.44,-1.28l-1.73,0.36l-3.24,-0.59l-4.74,-2.11l2.24,-2.56l0.96,-3.22l3.26,-4.71l0.8,-1.77l-0.1,-0.63l-1.4,-0.93l-0.49,-1.24l-0.57,-0.58l0.02,-1.87l-0.39,-1.05l-0.62,-0.32l-2.34,0.25l-1.72,1.25l-2.9,-0.05l-0.7,0.78l0.09,1.82l-0.6,0.27l-1.25,-0.09l-0.59,0.39l-0.74,2.37l-2.42,4.19l-0.84,2.89l-0.29,3.95l0.37,1.33l-1.01,0.98l-0.35,1.09l0.33,1.38l0.7,1.18l-0.35,2.93l-2.01,1.15l-1.92,0.17l-2.09,-0.5l-1.86,0.5l-2.78,1.35l-0.98,1.38l-0.64,0.31l-4.12,0.65l-1.26,-0.4l-1.59,0.18l-0.89,0.49l-0.89,1.47l-1.26,0.2l-2.01,-1.12l-6.35,-5.34l-3.58,-1.18l-0.5,-2.34l-0.02,-1.52l1.69,-0.44l0.41,-0.5l-0.62,-3.23l-0.69,-1.2l6.26,-3.8l1.61,-2.05l1.14,-2.28l1.46,-0.87l0.94,-1.67l0.01,-1.47l-2.43,-3.75l0.21,-1.49l-0.23,-0.51l-0.8,-0.31l-4.04,0.28l-4.28,1.18l-4.92,2.33l-2.33,1.76l-5.36,-0.99l-2.0,-1.02l-1.13,-0.0l-8.49,2.79l-0.08,0.83l2.89,2.95l-2.66,2.84l-2.53,-0.19l-0.92,0.22l-2.38,-1.02l-1.26,-0.09l0.36,-0.72l-1.16,-0.86l-0.78,-1.23l0.18,-0.96l-0.24,-0.54l-0.96,-0.29l-0.88,0.48l-0.6,-0.09l-2.39,-1.92l-0.41,-1.21l-0.03,-2.52l-0.63,-1.27l-4.49,-0.28l-0.49,-1.15l-2.23,-0.79l-0.39,-1.52l-1.12,-1.08l-4.38,-1.5l-2.47,-1.65l-4.32,-0.33l2.48,-2.58l4.31,-2.64l1.36,-3.08l2.75,-3.34l0.25,-1.15l-0.24,-1.42l-2.24,-3.18l-0.74,-0.33l-3.66,-0.24l-1.63,0.19l-2.36,0.98l-5.08,0.14l-4.98,1.97l-3.2,3.05l-4.81,0.37l1.3,-5.27l-0.09,-0.84l-5.6,-4.21l-4.14,-4.97l-0.02,-0.87l2.67,-2.28l0.11,-0.48l-9.35,-20.03ZM735.33,129.65l0.0,-0.0l0.01,-0.03l0.0,0.01l-0.01,0.02Z", "name": "Inner Mongol"}, "CN-12": {"path": "M636.92,258.05l3.33,1.19l1.08,-0.32l0.57,-2.54l-0.23,-0.73l0.81,-0.29l0.31,-0.49l-0.34,-0.61l-1.0,-0.23l-0.35,-0.95l1.22,-2.1l1.18,-0.54l0.82,-1.33l0.05,-0.69l2.8,1.69l0.82,1.06l1.15,0.23l-0.04,0.57l0.51,0.47l-1.84,0.05l-1.48,-0.7l-0.66,0.32l-0.09,2.38l0.44,2.13l0.77,1.33l0.66,0.37l-0.16,1.15l0.3,0.44l1.49,0.83l0.53,-0.22l0.29,-0.6l1.66,0.3l-0.49,2.1l0.39,0.62l1.53,0.79l-0.01,1.67l-1.63,0.35l-2.65,1.91l0.81,1.76l-0.45,-0.18l-0.56,0.45l-1.68,2.86l-0.56,3.13l-3.85,0.98l-0.57,-0.61l-1.91,-0.36l-0.64,-1.49l-2.22,0.18l-0.48,-0.7l-1.43,-0.61l-0.51,-0.65l-0.4,-1.46l0.2,-1.19l2.76,-1.71l0.39,-0.6l-0.19,-0.89l-0.97,-0.62l0.35,-2.5l-0.91,-2.47l-0.0,-1.57l1.09,-1.34Z", "name": "Tianjin"}, "CN-13": {"path": "M586.69,308.4l2.06,-0.5l0.89,-0.81l0.29,-0.94l0.87,0.21l0.59,-0.41l-0.25,-4.13l1.49,-1.54l0.56,-1.72l2.29,-3.19l0.85,-3.05l-0.23,-0.85l-1.01,-0.83l-0.58,-1.47l-1.42,-1.91l-1.43,-3.36l-1.88,-1.24l-1.86,-0.59l-0.26,-1.73l0.37,-1.19l-0.13,-1.57l0.98,-1.64l1.03,-0.39l0.2,-0.78l0.86,-0.34l1.15,-1.42l-0.01,-0.73l-0.95,-1.59l0.74,-0.72l0.61,-1.42l2.13,-0.68l1.21,0.88l2.02,-0.05l2.58,-1.82l0.4,-0.86l0.06,-1.49l0.59,-0.71l1.21,-3.4l-0.45,-0.9l-1.32,-0.92l-0.31,-0.63l0.09,-2.78l-0.35,-0.74l-5.01,-1.27l-0.57,-0.88l-1.15,-0.69l0.74,-1.01l0.59,0.53l0.62,-0.17l0.47,-1.8l5.1,-1.66l1.12,-0.9l-0.56,-0.8l-2.73,-0.24l-0.47,-3.14l-1.49,-1.9l-0.06,-1.42l-0.61,-0.83l-0.9,-0.55l-0.5,-1.8l-2.28,-2.31l0.46,-1.23l0.92,0.1l0.53,-0.64l-0.17,-1.55l-1.0,-0.58l0.23,-2.04l1.18,-1.74l1.69,-0.49l1.01,-0.72l0.35,-3.31l0.55,-1.46l2.4,-1.68l0.94,-2.14l0.64,-0.72l0.76,-0.26l2.34,0.01l0.73,-0.47l0.29,0.38l-0.1,0.99l1.07,2.45l0.13,1.44l-0.67,0.32l-0.23,0.49l0.28,1.11l-0.17,2.27l0.47,0.36l3.13,-0.1l2.13,0.53l0.66,-0.65l1.17,-0.06l0.13,-0.48l-0.5,-1.03l0.19,-0.19l3.49,-1.24l4.38,-2.49l0.46,0.01l1.41,2.14l0.71,0.23l0.68,-0.39l0.39,-0.91l1.19,-0.22l2.47,-2.19l0.34,0.09l0.52,0.94l1.28,-0.28l0.47,0.6l0.58,0.16l3.01,-1.14l1.21,-0.8l0.4,-0.84l-0.51,-1.04l0.46,-0.79l-0.01,-0.79l-0.85,-1.84l0.71,-1.16l3.0,-1.36l2.04,-0.12l2.47,0.44l0.53,-0.41l0.37,-1.41l0.87,-0.81l0.97,0.95l2.58,-0.88l0.2,0.64l3.1,2.98l0.23,1.64l-0.64,0.43l-0.11,0.69l0.41,0.52l1.24,0.51l0.47,2.62l0.55,0.28l0.74,-0.11l0.65,-1.01l0.2,0.13l0.27,1.43l-0.34,1.07l0.71,0.95l-0.26,1.14l-0.13,0.28l-0.65,-0.65l-0.78,-0.04l-0.41,0.3l-0.28,0.91l1.24,2.84l1.15,0.39l-0.28,1.79l0.67,0.64l0.32,2.01l1.04,0.43l0.59,-0.7l3.84,0.12l1.43,-0.67l0.89,0.77l4.2,0.43l0.89,-0.17l-0.96,1.85l-1.87,1.54l-1.54,0.59l-0.04,1.05l1.07,0.53l-1.41,0.11l-0.91,1.93l-0.03,0.79l3.24,3.28l1.16,-0.15l0.64,-0.53l0.01,1.13l0.75,1.08l1.03,0.65l3.76,-0.24l0.42,0.8l-0.26,2.03l0.82,1.57l-0.02,1.19l0.35,0.26l1.28,-0.06l-0.06,1.85l1.46,1.45l-4.31,1.53l-0.36,1.29l-1.22,0.37l-1.21,1.13l-0.9,2.23l-0.9,0.27l-0.43,0.62l1.34,2.14l-0.22,0.81l-1.38,0.5l-2.43,2.77l-1.39,0.1l-0.63,-0.55l-1.12,1.05l-3.77,0.02l-0.49,0.65l-2.37,1.39l-0.9,-0.2l-0.66,-0.43l-1.06,-1.73l-1.81,-0.89l0.07,-1.48l-0.4,-0.82l-1.56,-0.8l0.49,-1.84l-0.22,-0.71l-0.63,-0.41l-1.8,-0.2l-0.45,0.18l-0.2,0.52l-0.98,-0.53l0.04,-1.28l-0.75,-0.52l-0.62,-1.08l-0.42,-1.94l0.08,-1.76l1.38,0.63l2.33,-0.12l0.41,-0.68l-0.63,-0.84l0.03,-0.7l-1.62,-0.52l-0.65,-0.95l-2.29,-1.53l-1.76,-0.71l-1.12,-1.26l-0.05,-1.62l-0.81,-0.86l0.1,-0.31l1.06,-0.77l1.9,-0.21l0.52,-0.73l0.62,-0.21l0.22,-0.65l-0.33,-0.31l-2.69,-0.01l-1.94,-0.55l-1.47,0.34l-1.5,-0.72l-4.16,-3.9l-0.17,-1.34l-0.43,-0.52l-0.81,0.14l-0.38,0.91l-1.3,0.64l-0.58,0.83l-1.46,-0.42l-0.25,0.8l1.52,2.01l-1.15,-0.01l-0.72,0.45l-0.69,-0.46l-0.53,0.02l-1.62,2.0l-1.2,0.86l-2.15,-0.22l-2.63,1.24l0.06,0.66l2.97,3.74l0.12,0.57l-1.27,1.71l-4.37,1.34l-1.96,1.88l0.04,0.75l1.09,0.79l0.03,1.11l0.64,0.64l-0.97,-0.02l-0.6,0.48l0.34,2.5l0.42,0.56l1.15,0.44l1.47,0.01l0.37,0.76l1.14,0.78l2.82,-1.13l1.03,0.33l2.59,-0.38l0.6,1.09l1.08,0.86l1.58,0.44l1.16,-0.56l0.03,-0.66l-0.42,-0.43l1.34,-0.5l0.38,-0.61l2.72,-0.04l0.08,1.73l0.87,2.31l-0.39,2.32l0.29,0.68l0.93,0.68l-3.1,2.19l-0.27,1.56l0.5,1.82l0.68,0.86l1.35,0.56l0.7,0.85l0.81,0.16l1.42,-0.31l0.48,1.38l1.98,0.43l0.81,0.7l4.37,-0.96l2.17,3.92l1.37,1.54l-0.61,0.74l0.09,1.12l-1.02,1.21l-1.95,0.54l-2.12,3.39l-9.18,0.11l-0.76,0.61l-0.39,1.02l-1.12,0.8l-0.78,1.36l-2.27,2.06l-0.69,-2.02l-0.9,0.19l-1.69,2.58l0.03,0.7l0.47,0.53l-0.29,0.31l-1.12,-0.2l-1.34,0.22l-1.25,0.7l-0.21,1.21l-1.0,1.02l-0.62,2.24l-1.1,1.15l-0.13,0.86l-1.16,1.24l-0.39,0.88l-2.8,1.15l-1.97,2.54l-0.95,2.0l1.06,3.34l0.88,0.31l0.61,0.84l0.06,0.95l-1.45,1.16l-1.27,-1.49l-1.98,-0.32l-1.08,0.73l-0.78,1.23l-0.51,0.14l-0.57,-0.86l-0.96,-0.6l-2.01,-0.09l-2.1,0.33l-3.34,-1.87l-2.13,0.06l-1.43,-0.39l-1.46,-1.57l-1.32,0.21l-0.59,-0.35l-0.98,0.43l-0.96,-0.22l-1.34,-1.35l-1.29,-0.64l0.16,-1.11l-1.31,-1.51l0.22,-0.64l-0.27,-0.49ZM660.61,269.06l0.93,0.75l-0.77,0.59l-0.22,-0.51l0.06,-0.83ZM635.35,252.18l3.07,-0.16l2.93,-0.87l-1.06,1.93l0.31,1.16l0.8,0.65l-0.56,0.58l0.27,0.79l-0.42,2.17l-3.58,-1.17l0.74,-1.26l-0.19,-1.01l-1.99,-1.11l-0.51,-0.94l0.2,-0.77Z", "name": "Hebei"}, "CN-11": {"path": "M615.9,256.47l1.62,-0.31l0.26,-0.62l-0.9,-0.84l-0.15,-1.37l-0.99,-0.65l1.99,-1.74l4.06,-1.19l1.52,-2.03l-0.18,-1.32l-2.9,-3.64l1.98,-0.79l2.31,0.17l1.43,-1.02l1.37,-1.84l0.89,0.49l0.89,-0.47l1.76,-0.04l0.22,-0.71l-1.24,-1.66l0.92,-0.1l0.57,-0.83l1.35,-0.66l0.33,-0.88l0.31,1.55l4.41,4.12l1.74,0.81l1.57,-0.33l1.81,0.53l1.71,-0.09l-0.24,0.48l-2.44,0.48l-1.05,1.3l0.09,0.64l0.75,0.74l0.18,1.93l1.56,1.47l0.15,0.71l-0.8,1.28l-3.4,0.67l-1.09,0.52l-2.87,0.06l-0.77,0.48l-0.29,1.32l0.6,1.27l2.11,1.4l-1.59,2.91l-2.68,-0.12l-0.84,0.28l-0.52,0.69l-1.61,0.7l-0.13,0.67l0.54,0.51l-0.68,0.09l-1.79,-0.98l-0.49,-0.99l-0.69,-0.39l-2.57,0.39l-1.2,-0.32l-2.03,0.58l-0.53,0.55l-1.27,-1.44l-1.46,-0.04l-1.14,-0.4l-0.47,-1.96Z", "name": "Beijing"}, "CN-34": {"path": "M607.66,370.19l0.18,-1.07l0.61,-0.41l1.0,0.48l1.74,0.12l2.14,-0.87l0.53,-1.42l0.72,-0.86l-0.39,-2.03l0.37,-1.68l0.52,0.01l0.95,-0.91l2.68,-0.6l-0.62,-2.75l0.53,-0.42l0.11,-1.43l-1.0,-0.83l0.32,-1.18l0.95,-1.06l0.96,-0.16l1.34,0.95l1.66,0.06l0.02,1.43l1.06,0.98l1.22,1.9l0.77,0.44l4.13,-1.25l0.57,-1.1l1.76,-0.81l0.94,-0.11l0.17,-1.15l-1.43,-2.74l0.47,-0.91l-0.12,-1.87l-0.65,-0.27l-2.27,0.19l-3.16,-2.67l0.06,-1.57l1.02,0.15l1.97,-1.16l0.38,-0.04l0.78,0.63l1.75,1.78l2.54,0.73l0.64,0.98l1.9,-0.01l0.32,0.43l-0.16,1.22l0.74,0.73l-0.03,0.97l0.47,0.59l2.22,1.21l2.22,0.11l1.19,0.88l1.47,-0.4l0.86,0.96l0.93,-0.07l0.59,1.63l0.79,0.31l0.01,1.46l-0.3,0.65l0.28,0.36l2.27,0.04l3.62,-0.65l0.46,0.75l-0.79,1.28l-0.16,1.81l-0.82,0.34l-1.05,2.94l-0.78,1.26l1.52,1.57l0.98,0.2l1.66,-0.86l0.15,1.78l0.88,1.65l-0.61,0.51l-0.06,0.79l0.75,1.04l0.19,1.03l1.45,0.96l2.93,0.06l0.6,-0.3l1.55,0.22l0.69,-0.54l0.12,-1.5l0.69,-0.36l0.59,-1.52l0.69,0.24l0.82,-0.17l0.45,0.89l1.33,1.18l0.62,0.17l0.03,0.74l0.48,0.74l0.17,1.79l-1.31,2.04l-0.69,-0.76l-0.72,-0.13l-1.2,-1.33l-0.91,0.1l-1.39,-0.4l-3.16,0.58l-0.14,0.77l0.58,0.6l0.1,0.68l1.0,0.42l0.23,1.74l-0.49,0.87l0.23,0.48l-2.29,0.84l-0.14,0.99l-1.17,0.68l-0.51,0.68l0.07,0.92l-0.59,1.03l0.6,0.71l1.16,0.53l0.34,1.69l1.18,0.8l1.45,0.33l-0.17,0.52l0.34,0.55l1.08,0.28l0.58,-0.33l0.41,0.53l0.65,-0.09l0.19,1.28l-0.75,1.93l-1.07,0.56l-0.29,0.62l0.31,1.09l0.8,0.98l4.26,-0.09l1.41,-0.8l1.15,0.41l1.2,-0.13l0.01,0.84l0.34,0.44l3.59,0.99l-0.7,3.97l-1.16,1.36l-0.64,1.82l-0.45,-0.66l-0.77,0.07l-0.7,0.95l-0.74,0.36l-0.48,0.95l0.27,0.89l1.03,0.22l0.47,1.55l-1.54,1.07l-2.56,-0.1l-1.52,-0.69l-1.33,0.58l-0.22,0.74l0.45,1.19l-0.76,0.86l0.57,2.94l-0.62,0.58l-0.27,0.79l-1.38,1.08l-0.16,1.45l-1.01,1.05l-1.44,0.63l-2.32,2.53l-0.93,-0.51l-0.47,0.39l-0.04,0.48l-1.5,0.43l-0.48,-0.32l-0.32,-1.47l-1.65,-0.74l-1.7,0.3l-1.26,-0.33l-1.44,0.23l-0.95,-0.88l-1.47,-0.05l-1.75,-2.26l-0.14,-1.22l-1.43,-0.23l-0.96,0.18l-0.09,-0.92l-0.86,-0.59l-1.24,0.33l-0.98,1.25l-0.06,0.53l0.59,0.62l-0.21,0.8l-1.75,0.82l-1.22,1.76l-1.23,-0.39l-0.58,0.31l-0.93,-0.92l0.33,-0.97l0.41,0.06l0.51,-0.61l0.84,-0.18l1.04,-1.66l0.36,-1.25l-0.28,-0.68l-1.24,-1.25l-1.46,-0.65l-1.1,0.12l-0.85,0.66l-1.2,1.88l-1.79,0.28l-1.79,1.38l-1.28,0.01l-0.28,-1.8l-0.73,-1.01l0.14,-1.04l-0.61,-2.87l-1.31,-1.42l-0.74,-0.34l-0.35,-0.74l1.01,-0.9l-0.09,-1.21l-1.0,-1.35l-0.69,-0.31l-0.84,-1.3l0.13,-0.82l0.77,-0.0l0.44,-0.36l0.0,-1.3l2.35,-1.68l0.26,-1.27l-0.71,-0.5l-0.82,0.04l-0.94,-1.4l-1.33,-0.04l-2.03,-1.52l-0.75,0.03l-0.53,0.87l-1.79,-2.47l-0.84,-0.48l0.23,-2.27l1.89,-3.27l2.15,-0.87l2.8,0.05l0.68,-0.43l0.41,-3.87l-0.2,-3.68l-0.39,-2.38l-0.4,-0.69l0.08,-1.29l0.78,-1.01l-0.42,-0.31l-0.74,0.13l-1.25,1.29l-1.17,-0.05l-0.53,0.29l-0.44,0.99l-1.13,0.1l-1.17,-1.48l-1.32,-0.91l-2.36,-0.59l0.08,-0.84l-0.42,-0.74l0.23,-1.5l-0.26,-1.23l-4.45,-2.16Z", "name": "Anhui"}, "CN-53": {"path": "M352.21,506.89l0.36,-2.08l-0.06,-2.14l1.66,-1.18l1.28,0.03l0.55,-0.66l-0.94,-1.39l-0.09,-1.87l0.73,-0.75l0.69,-1.92l0.68,0.61l0.6,0.06l2.23,-1.75l0.48,-1.02l0.59,-0.42l-0.14,-1.67l0.48,-0.56l0.09,-0.85l1.56,0.84l1.07,-0.26l2.52,-4.2l1.53,0.54l1.4,-1.24l-0.07,-0.81l-1.1,-1.4l-0.48,-0.17l-0.45,-1.51l0.36,-0.15l0.14,0.44l0.8,0.11l1.01,-1.34l-0.41,-1.37l-0.43,-0.32l0.99,-1.76l0.13,-2.43l0.49,-1.27l-0.32,-1.59l0.26,-1.16l-0.51,-1.09l0.31,-0.64l-0.33,-1.48l0.33,-0.99l-0.76,-0.87l-0.18,-1.05l0.51,-2.5l-0.5,-0.96l0.08,-2.93l-0.66,-0.84l-1.08,0.25l-0.74,-0.95l-0.61,0.06l-1.15,-0.56l-0.66,0.47l-0.21,1.77l-0.65,0.18l-1.23,-2.86l-0.13,-1.53l-0.71,-0.58l0.44,-0.45l-0.05,-0.46l-0.89,-0.81l0.17,-2.51l1.71,-1.07l0.69,-1.87l1.1,1.37l0.73,0.42l0.95,-0.29l1.39,-1.23l1.08,-2.24l-0.83,-3.47l1.33,-1.35l-0.58,-2.2l0.05,-1.06l1.42,-0.37l1.17,2.87l0.85,0.02l0.85,-0.47l0.23,-0.76l-0.6,-1.01l1.47,-1.78l-0.49,-2.12l1.16,-0.29l0.19,3.68l-0.35,2.11l0.35,2.22l0.75,1.64l-0.14,2.43l1.79,2.86l1.49,1.4l0.12,0.76l0.63,0.31l0.25,-0.39l0.25,-1.95l-0.4,-1.41l0.11,-2.11l-0.35,-0.64l1.83,-0.83l0.61,-1.91l0.7,-0.68l0.35,-1.0l0.9,-0.36l0.19,1.27l1.42,1.17l0.3,1.15l1.46,0.7l0.79,1.62l2.12,1.92l0.23,1.1l-1.6,0.71l-0.44,0.58l0.74,2.27l1.99,2.39l1.19,0.5l0.45,2.04l0.93,-0.09l1.2,-1.56l1.51,0.48l1.19,-1.23l0.2,0.17l3.02,4.84l0.01,1.25l0.91,0.69l0.66,1.09l0.51,3.03l0.62,0.33l0.97,-0.44l0.76,0.04l-0.49,1.7l0.25,0.91l2.91,2.59l0.32,1.5l0.43,0.57l0.92,0.11l0.51,-0.81l-0.09,0.73l-1.24,2.34l0.71,0.88l1.36,0.55l1.28,1.87l-0.96,0.86l0.16,1.53l0.81,0.42l0.71,-0.41l1.25,0.8l0.16,1.23l1.25,1.06l0.74,-0.31l0.48,-0.68l2.77,0.22l2.29,-2.36l1.21,-0.33l0.91,-0.93l1.45,-0.4l0.84,-0.6l0.41,0.23l-0.23,1.2l0.23,0.39l1.26,0.64l0.68,-0.23l0.82,-1.01l1.44,-0.88l1.11,0.16l0.78,-0.5l0.23,-1.96l0.5,-0.25l0.34,-1.02l-1.23,-4.42l-1.1,-1.54l-0.0,-1.12l-0.3,-0.44l0.54,-1.65l-0.4,-2.33l0.64,-1.36l0.79,0.15l2.03,-0.65l1.26,-2.32l1.1,-0.3l0.27,-0.44l-0.14,-0.57l2.31,-1.93l0.76,-1.43l0.18,-1.41l0.74,-0.74l-0.16,-0.44l-0.79,-0.01l-0.16,-0.62l-0.76,-0.31l0.26,-0.87l1.06,-0.72l0.52,-0.92l0.82,-0.34l1.12,0.84l2.59,-1.85l-0.19,-1.66l-0.88,-1.92l0.55,-1.32l1.59,0.41l1.08,-0.31l0.69,0.32l2.4,-0.56l0.81,0.27l1.3,-0.19l-0.45,0.43l-0.56,-0.05l-1.45,0.7l0.09,3.29l0.35,0.66l1.46,0.65l0.49,0.57l-0.21,0.64l0.56,1.39l-1.55,0.61l-0.09,0.81l0.74,1.04l1.81,1.28l1.91,0.69l1.52,-0.6l0.98,0.17l1.72,-0.38l1.23,-0.96l0.19,-1.69l0.51,-0.36l1.96,0.35l0.41,0.91l0.98,0.02l-0.77,1.98l0.98,2.21l-1.42,4.72l-1.64,-0.24l-3.01,1.63l-0.95,-0.4l-4.0,0.22l-0.83,-0.35l-1.06,-1.46l-0.51,-0.22l-1.66,1.34l-0.31,1.13l-0.6,0.3l-2.7,-1.95l-0.96,-0.06l-0.73,0.34l-1.24,1.78l-3.12,2.86l-0.24,0.79l0.68,0.91l0.47,0.1l0.71,-0.46l0.82,1.24l-0.07,0.88l-0.6,0.3l-0.25,1.19l0.26,1.01l0.47,0.34l-0.04,1.64l1.11,1.26l1.33,0.53l1.89,0.05l1.54,-2.07l1.26,0.34l1.69,-0.1l0.61,-0.38l0.53,-0.95l0.58,1.67l1.37,0.36l1.22,2.2l0.18,0.54l-0.24,0.36l-1.56,1.37l-0.15,1.14l-0.45,0.68l0.17,0.8l-0.25,1.11l-0.56,0.76l-1.0,0.55l0.4,1.29l-0.45,1.46l-0.99,-0.12l-0.37,0.51l0.19,1.85l1.76,1.28l0.22,1.25l0.74,0.21l0.84,-0.21l0.4,1.89l1.6,1.4l1.02,0.38l-0.57,0.46l-0.45,1.69l0.21,1.49l-2.22,2.68l-0.19,1.35l-0.83,1.27l0.27,1.6l1.49,2.86l1.11,1.09l0.79,0.25l0.73,-0.55l-0.51,-1.24l0.33,-0.37l1.76,0.23l1.25,0.55l1.97,-0.18l0.32,0.88l0.67,0.59l-0.01,2.64l1.36,1.2l0.79,0.18l0.41,-0.49l1.91,1.09l1.01,-0.42l0.35,-0.98l0.81,-0.21l0.56,1.05l2.23,0.83l1.42,-0.1l0.42,-0.84l1.0,-0.14l2.07,1.51l-0.06,0.62l0.76,1.12l-0.92,0.58l0.27,1.25l-0.37,2.98l-0.83,0.62l-1.01,0.17l-1.28,-0.74l-0.88,0.06l-1.52,1.66l-0.71,0.23l-0.13,0.66l-0.84,0.08l-0.21,1.05l-1.4,1.47l-0.83,-1.29l-1.04,-0.34l-0.6,-1.05l-0.81,-0.13l-0.95,0.8l-0.35,0.89l-0.68,-0.18l-1.6,0.62l-1.57,1.08l-0.67,-0.25l-0.45,0.21l-0.23,0.76l-0.84,0.45l-0.14,0.39l0.43,2.16l-1.64,1.54l-1.5,0.04l-0.41,-0.34l-3.16,2.3l-1.22,-0.65l0.08,-0.93l-0.36,-0.55l-2.51,0.58l-1.08,1.32l-0.57,2.85l-1.58,-1.25l-2.54,-2.87l-0.67,-0.18l-0.99,0.63l-0.67,1.15l0.03,0.96l-0.39,0.57l-0.91,-1.21l-0.3,-1.14l-0.84,-0.7l-0.79,-0.12l-1.16,1.96l-1.6,1.09l-0.04,1.01l-1.25,0.66l-0.12,0.8l-1.49,-0.65l-1.11,-1.93l-3.54,-1.75l-0.74,0.12l-0.31,-0.58l-1.0,-0.44l-0.62,0.2l-0.55,1.14l-0.72,0.32l-0.09,0.45l0.33,0.46l-1.74,1.77l-0.38,1.14l-0.73,-0.16l-0.56,0.23l-1.87,-0.58l-1.61,0.3l-0.43,0.69l-1.19,-1.64l-1.42,0.22l-0.68,0.7l-0.7,2.44l-0.8,0.06l-0.58,0.81l0.69,1.17l-0.11,1.17l0.82,2.11l1.05,0.68l0.98,1.6l-0.31,1.37l0.42,1.17l0.68,0.46l-0.99,0.58l0.16,0.93l-0.47,2.94l0.45,0.75l1.14,0.65l-0.6,0.05l-0.2,0.93l-0.42,0.09l-0.6,-0.74l-0.85,-0.0l-0.27,-0.6l-1.09,-0.31l-3.79,0.89l-0.38,-0.66l0.31,-1.91l-0.93,-0.65l0.27,-1.36l-0.47,-1.03l0.17,-1.11l-1.03,-2.14l-0.95,-0.02l-1.18,0.81l-2.3,0.82l-2.0,2.21l-1.11,0.68l-2.18,0.18l-0.74,-0.91l-1.08,-0.23l-2.29,1.54l-1.05,-1.5l0.2,-0.74l0.64,-0.49l-0.06,-0.54l-0.56,-0.47l-2.24,-0.49l-0.45,-1.55l0.68,-1.94l-0.66,-1.77l-1.24,-0.19l-0.66,0.41l-1.29,-0.6l-0.75,0.34l-0.58,-0.56l-2.81,-0.59l-1.75,0.41l-2.08,-0.45l0.03,-0.64l1.23,-2.36l-0.06,-0.49l1.67,-1.7l-0.02,-1.93l-0.69,-1.91l0.61,-0.32l0.89,-1.36l0.05,-0.93l1.08,0.3l0.75,-0.73l-0.85,-2.32l-1.4,-0.22l-0.93,-0.89l-0.57,-0.01l-1.22,0.99l-0.24,-0.44l-2.04,-0.22l-0.62,-0.85l-2.09,-0.26l0.7,-1.28l-0.39,-0.89l0.13,-1.05l-0.5,-1.17l-0.92,-0.29l-0.16,-0.47l0.89,-0.6l0.19,-0.67l-0.81,-1.29l-0.26,-1.26l-1.65,-0.49l-0.09,-1.25l0.07,-0.98l2.71,-1.84l0.29,-0.75l-0.14,-0.58l-2.59,0.15l-1.93,0.66l-1.57,-0.76l-1.21,-0.0l-1.0,0.44l-2.22,-0.29l-4.34,1.51l-1.1,1.01l-2.49,1.39l-1.2,-0.79l2.6,-2.66l0.27,-0.86l-0.29,-0.65l0.22,-1.12l-0.92,-0.55l0.48,-0.82l-0.83,-1.38l-1.73,-0.03Z", "name": "Yunnan"}, "CN-36": {"path": "M588.88,461.01l-0.6,-3.22l0.73,-1.75l1.43,-2.17l0.13,-1.99l2.71,-0.76l1.17,-0.86l0.46,-0.59l0.13,-1.19l0.7,-0.48l0.23,-0.68l1.39,-0.63l0.78,-1.33l-0.12,-1.02l-0.74,-0.48l0.04,-1.04l-1.45,-0.79l0.65,-1.14l0.33,-2.29l-0.2,-0.85l-1.46,-0.89l-0.44,-0.68l-1.45,-0.61l-0.06,-0.3l0.07,-1.04l1.26,-1.42l0.89,-0.56l2.7,-0.65l0.17,-1.32l0.36,-0.47l0.63,0.47l1.19,-0.08l0.66,0.27l3.56,-1.13l0.49,0.42l0.7,-0.12l0.79,-0.54l0.91,-1.62l0.79,-0.11l0.33,-0.79l1.24,0.06l0.63,0.76l0.5,-0.17l0.43,-1.58l-0.31,-0.55l1.93,0.6l1.38,-0.6l1.05,-1.18l0.84,-2.15l2.94,-0.03l0.45,0.77l2.27,1.3l1.83,-0.21l1.6,-0.67l1.88,0.07l2.29,-1.53l1.85,-0.31l1.32,-1.96l0.66,-0.53l0.59,-0.05l1.08,0.44l1.26,1.36l-1.16,2.27l-0.57,-0.04l-0.47,0.56l-0.67,0.12l-0.62,1.5l0.11,0.6l1.4,1.35l0.84,-0.29l0.67,0.35l0.88,-0.12l1.39,-1.87l1.8,-0.86l0.45,-1.43l-0.43,-0.85l0.58,-0.86l0.58,-0.15l0.29,0.19l-0.02,0.81l0.44,0.41l2.12,0.13l0.01,0.65l0.56,0.99l1.58,1.76l1.57,0.1l1.15,0.93l1.46,-0.23l1.46,0.32l1.31,-0.34l1.37,0.58l0.14,1.23l0.84,0.68l-0.6,1.18l-1.11,0.32l-0.21,1.16l-0.76,1.42l1.19,1.73l0.91,0.4l1.23,0.93l0.12,0.51l0.55,0.19l0.49,1.2l1.03,0.68l0.77,1.58l-0.18,1.31l0.54,1.28l-0.18,0.49l0.37,0.46l0.16,2.0l-1.8,1.64l-0.05,0.49l0.44,0.5l-0.15,0.92l-3.13,0.73l-1.07,1.0l-1.69,0.11l-2.04,0.66l-0.5,0.54l-0.41,1.32l-1.65,-0.64l-0.91,-1.58l-0.63,-0.32l-2.77,1.76l-0.92,0.09l-0.25,0.46l0.09,1.05l-0.89,0.79l-1.79,2.75l0.24,2.09l-0.34,1.41l0.81,0.89l-1.12,1.38l-0.53,1.21l-1.49,1.24l-3.73,0.54l-1.93,1.84l-0.79,3.28l0.6,2.19l1.02,1.09l-0.24,1.1l-0.61,-0.4l-0.61,0.1l-1.65,2.0l0.21,2.41l-0.28,1.22l-0.97,1.53l-1.84,0.61l-0.97,0.84l0.05,1.48l-1.68,2.17l0.17,1.2l-0.63,1.17l-0.36,2.52l-0.98,1.43l-0.97,0.79l0.65,3.16l-0.48,0.63l0.54,0.89l-1.33,0.26l-0.68,0.94l-0.08,1.3l0.48,0.84l0.17,1.57l-0.93,0.23l-4.08,-3.72l-1.49,0.45l-1.01,-0.04l-1.59,1.14l-1.54,-0.33l-1.81,0.7l-0.82,1.14l-0.51,-0.51l-1.22,-0.14l-0.56,0.41l-0.19,0.83l-0.89,-0.53l-1.05,0.52l-1.19,-0.02l-0.9,0.82l-0.64,-0.95l-1.1,-0.5l-0.57,-0.74l-0.76,-0.18l1.81,-1.29l1.04,-1.75l0.33,-1.36l2.04,-1.22l2.62,-0.98l0.17,-0.53l-0.67,-0.55l0.44,-1.71l-0.47,-0.71l-1.49,-0.71l-0.28,-0.9l-0.61,-0.28l-0.95,0.52l-0.93,-0.04l-0.78,0.87l-1.23,0.59l-2.32,-0.29l-1.34,0.66l0.26,-0.6l-0.16,-1.7l-1.24,-0.39l0.75,-1.92l-1.0,-1.37l-0.16,-0.93l1.62,-2.72l0.14,-2.02l2.44,-1.55l0.4,-0.81l-0.26,-0.56l-1.01,-0.41l-1.65,0.8l-0.64,-0.27l-0.52,0.25l0.81,-1.05l0.34,-1.87l0.83,-1.11l0.22,-1.91l-0.38,-0.43l-0.91,-0.1l-2.02,-0.93l-0.45,-2.43l0.48,-0.6l0.41,-1.69l-1.53,-2.13l-0.52,-0.16l1.37,-2.45l0.07,-1.35l-1.35,-0.72l-1.57,0.66l-0.77,-0.34Z", "name": "Jiangxi"}, "CN-37": {"path": "M607.21,336.72l0.28,-1.61l-0.19,-0.71l1.25,-0.61l1.78,-2.6l1.17,-0.55l1.4,-0.15l1.35,-1.01l0.28,-0.41l-0.17,-0.72l0.71,-0.25l0.26,-1.17l1.21,-0.72l0.33,-0.63l2.12,-0.55l1.43,-1.63l1.81,-0.39l0.28,-0.55l-0.33,-0.53l0.85,-0.68l1.62,-0.02l0.86,-1.73l-0.24,-0.96l-0.56,-0.12l-2.06,1.29l-1.44,-0.15l-2.41,1.48l-3.02,0.54l-0.48,0.4l-0.41,1.2l-0.73,0.59l0.23,-2.08l1.25,-0.9l0.65,-2.22l-0.23,-2.43l-0.79,-0.97l-0.69,-0.16l-0.98,-2.57l0.94,-1.99l1.87,-2.37l2.67,-1.02l1.7,-2.3l0.12,-0.84l1.17,-1.29l0.61,-2.19l1.0,-1.01l0.12,-1.01l0.79,-0.47l1.17,-0.2l1.04,0.26l0.62,-0.27l0.55,-0.79l-0.54,-1.08l1.45,-2.22l0.27,1.44l0.48,0.67l0.6,0.07l2.6,-2.49l0.82,-1.4l1.09,-0.76l0.86,-1.41l9.27,-0.16l2.26,-3.49l1.7,-0.38l1.06,-1.01l0.5,-0.87l-0.15,-0.99l0.64,-0.41l2.8,1.48l0.44,0.64l2.25,-0.02l3.37,0.62l1.27,0.63l0.79,-0.17l1.19,-1.11l2.5,-0.1l1.17,0.69l-0.03,0.87l0.91,1.47l1.41,0.88l0.44,1.09l1.35,0.89l0.61,1.19l-0.02,0.27l-1.6,-1.08l-1.0,0.01l-0.62,0.48l-0.91,1.93l-0.29,1.4l-0.2,2.65l0.26,1.53l2.84,2.19l2.29,0.8l2.27,0.28l4.98,-0.54l2.05,-1.75l-0.04,-1.0l-0.49,-0.89l4.8,-2.57l1.69,-1.55l0.37,-0.59l-0.15,-0.78l5.99,-2.45l1.34,0.29l1.05,-0.13l0.25,0.74l1.4,1.12l1.43,0.13l-0.1,1.21l0.42,0.78l0.85,0.25l2.37,-0.3l1.46,1.93l1.62,0.84l1.68,-0.17l0.17,-0.48l3.34,0.06l0.37,0.64l0.7,0.01l0.4,-0.27l-0.11,-0.85l0.48,-0.69l1.15,-0.4l-0.24,0.96l0.91,1.28l0.55,-0.04l0.52,-0.56l0.71,0.67l4.32,0.29l-0.87,1.14l0.75,1.73l-0.46,0.5l-1.6,0.19l-0.35,1.19l0.17,0.5l-0.62,0.63l0.38,0.83l0.54,-0.02l0.3,-0.37l0.68,0.16l-0.1,0.65l-1.56,0.26l-0.28,0.55l0.18,0.44l-0.67,0.59l-1.96,-0.25l1.22,-0.43l-0.15,-0.45l-1.26,-0.67l0.16,-0.81l-0.37,-0.49l-0.68,0.14l-0.21,0.88l-0.78,0.27l0.09,-0.56l-0.31,-0.25l-1.86,-0.2l-0.55,0.69l0.29,0.53l-2.03,0.57l-0.76,0.89l-1.42,0.12l-0.62,-0.3l-1.03,0.53l-0.78,-0.24l-0.45,0.44l0.09,0.84l-0.81,0.14l-0.4,0.59l-2.98,0.71l-1.13,0.95l-0.74,-0.19l-0.27,0.57l-0.62,-0.03l-0.29,-0.48l-1.22,-0.52l-1.98,0.83l0.01,1.58l1.02,0.15l0.77,-0.94l0.99,1.07l-0.03,0.6l-0.58,0.45l-0.01,0.57l-0.44,-0.99l-0.52,-0.17l-0.91,0.09l-0.79,0.7l-0.41,0.7l0.07,0.67l-0.72,0.46l0.78,2.89l-1.83,0.39l-0.36,0.39l-0.85,0.03l-1.61,0.72l-0.22,-0.48l0.67,-1.77l-0.82,-1.4l-0.85,0.03l-0.37,1.18l-0.46,-0.53l-1.1,0.22l-0.91,-0.2l-0.3,0.5l0.3,0.52l-0.25,1.28l0.35,0.55l0.83,0.4l0.09,1.07l0.36,0.37l-2.12,1.52l-0.62,2.02l-0.87,-0.49l-0.71,0.53l0.28,0.77l-0.35,0.53l0.06,0.55l-0.22,0.11l-0.5,-0.77l-0.95,0.84l-0.73,-0.23l-1.36,0.82l-1.38,3.34l-0.57,0.7l-0.98,0.13l-0.36,0.34l-0.9,3.49l-0.57,0.14l-0.66,-0.44l-0.93,-0.0l-1.78,1.0l-2.63,0.08l-0.69,0.3l-0.41,1.82l-0.95,1.64l-0.41,1.65l-0.7,0.61l-1.75,-0.42l-1.63,0.55l-0.7,1.72l-0.15,1.77l-0.76,0.78l-2.08,0.3l-0.52,-1.08l0.22,-1.1l-0.87,-0.49l-0.25,-1.15l-2.52,-0.79l-2.07,0.34l-0.36,0.42l-0.23,1.77l-1.41,-0.04l-1.26,1.08l-1.26,-0.17l-1.99,-1.89l-1.37,0.54l-0.57,0.72l-0.02,1.0l-0.24,0.06l-0.46,-1.72l-1.21,-2.47l-1.1,-1.26l-0.26,-1.09l-2.36,-1.99l-0.85,0.43l-2.08,-0.07l-2.54,0.7l-0.9,1.21l-0.61,3.19l-1.76,1.05l-0.56,-0.27l-0.73,0.26l-0.78,-0.77l-0.69,0.23l-0.76,-0.35l-0.63,0.49l-2.1,0.34l-1.71,-0.49l-0.78,0.54l-1.39,-0.14l-1.18,-1.16l-0.26,-2.08l-1.89,-1.2l-1.09,-0.01l-0.01,-0.68l-0.72,-0.84l-2.84,-1.19l-1.93,0.04ZM685.46,321.13l0.31,-0.07l0.03,0.03l-0.17,0.15l-0.17,-0.11ZM706.13,306.98l-0.0,0.29l-0.29,-0.07l0.16,-0.18l0.13,-0.04ZM713.07,304.39l-0.08,0.29l0.02,-0.25l0.06,-0.05Z", "name": "Shandong"}, "CN-41": {"path": "M540.9,343.97l0.74,0.46l0.93,-0.44l0.79,0.53l1.82,-0.33l1.69,-0.96l1.85,-0.13l0.58,-0.33l0.15,-0.62l0.52,0.13l2.11,-0.92l0.49,-0.78l1.03,0.35l1.6,-0.7l0.74,0.32l2.69,-0.74l1.96,-2.42l0.67,-0.14l1.38,-1.08l1.61,-0.14l1.03,0.72l0.6,-0.16l0.36,-1.12l-0.02,-1.79l6.48,0.24l1.04,-0.42l0.44,-0.78l0.67,-0.32l1.82,1.13l1.61,0.05l1.09,-0.6l0.79,-0.92l1.42,-0.3l0.73,-0.69l1.71,-0.6l0.44,-0.62l2.31,-0.78l2.26,-2.44l-0.36,-0.91l0.09,-1.71l0.61,-0.57l-0.1,-2.02l0.49,-0.45l0.39,-1.21l0.13,-1.57l-0.25,-0.45l0.25,-0.55l-0.3,-0.49l0.67,-1.73l0.88,0.17l0.88,-0.39l0.64,0.31l1.11,-0.23l1.13,1.42l1.85,0.54l2.09,-0.03l3.32,1.82l4.09,-0.25l0.89,0.7l-0.02,0.49l0.47,0.36l1.33,-0.32l1.49,-1.82l1.52,0.18l0.8,1.3l0.53,0.29l0.81,-0.13l1.03,-0.91l-0.51,1.85l-1.36,1.15l-0.25,2.52l0.47,0.61l1.48,-0.75l0.79,-1.58l2.98,-0.53l2.38,-1.47l1.26,0.19l-1.28,1.04l0.09,0.9l-1.47,0.23l-1.57,1.72l-2.38,0.62l-0.1,0.58l-1.36,0.9l-0.19,1.01l-0.88,0.61l0.11,0.69l-0.97,0.82l-1.5,0.24l-1.43,0.71l-1.86,2.68l-1.32,0.68l-0.28,2.73l0.15,0.64l0.72,0.28l1.68,-0.14l2.56,1.04l0.49,0.58l0.08,1.2l1.46,-0.13l1.53,0.92l0.2,1.96l1.48,1.53l1.91,0.23l0.82,-0.52l1.56,0.49l2.41,-0.4l0.42,-0.38l0.66,0.28l0.56,-0.18l0.76,0.93l-0.08,1.51l0.82,0.94l2.76,2.13l2.49,-0.11l0.07,1.24l-0.47,1.12l1.41,3.13l-0.48,-0.08l-2.0,0.96l-0.5,1.06l-3.42,1.17l-0.53,-0.2l-1.16,-1.83l-1.03,-0.93l0.19,-0.93l-0.43,-0.73l-1.38,-0.35l-0.5,0.16l-1.46,-0.95l-1.51,0.28l-1.2,1.32l-0.43,1.51l0.2,0.93l0.8,0.19l-0.05,0.67l-0.51,0.15l-0.25,0.58l0.86,2.49l-2.12,0.3l-1.06,0.82l-0.46,-0.24l-0.45,0.25l-0.57,2.62l0.5,1.72l-0.65,0.7l-0.29,1.15l-2.22,0.75l-2.11,-0.65l-1.35,0.72l-0.18,0.38l-0.15,1.38l0.48,0.67l4.16,1.88l-0.16,2.3l0.61,2.18l2.5,0.56l2.78,2.51l1.7,-0.17l0.63,-1.13l1.49,-0.0l0.37,-0.65l-0.09,1.09l0.42,0.75l0.38,2.29l0.19,3.61l-0.34,3.49l-2.88,-0.03l-2.35,0.87l-2.25,3.67l-0.27,1.62l-0.29,0.12l-0.7,0.1l-0.73,-0.79l0.07,-1.38l-1.15,-1.21l-0.74,0.24l-1.23,1.7l-3.41,0.01l-0.61,-0.49l-0.7,-0.05l-0.8,-0.78l-1.22,-0.05l-0.13,-0.83l0.48,-1.2l-0.71,-0.9l-0.87,-0.2l-1.71,0.41l-1.4,-1.24l-1.82,-0.65l-1.58,1.43l-0.93,0.23l-0.08,-1.4l-0.54,-0.35l-0.74,0.17l-0.22,-0.95l-0.82,-0.96l-0.55,-2.37l0.42,-0.84l-0.2,-1.65l0.24,-1.18l-0.95,-1.33l-1.68,0.2l-1.6,1.71l-1.29,0.13l-1.21,-0.35l-1.82,-1.6l-0.75,-0.08l-0.86,0.51l-1.08,-0.71l-4.26,1.23l-3.27,-0.43l-3.39,0.52l-1.04,-0.7l-1.13,-0.07l-1.34,-1.0l-0.76,0.23l-0.67,-0.57l-2.54,-0.69l-0.75,-1.12l-1.12,-0.59l-0.81,-0.07l-0.82,0.49l-0.59,-1.48l-1.34,-1.13l-0.96,-1.4l-1.87,-1.31l0.02,-0.99l-0.77,-0.88l-0.85,-1.83l-1.58,-1.03l-0.22,-0.59l0.57,-1.69l-0.36,-1.11l0.31,-1.0l-0.67,-1.86l-2.54,-1.7l-0.09,-0.82l-0.66,-0.93l-2.17,-1.12l0.74,-1.36l-0.75,-1.42l0.36,-1.85l-2.7,-1.65l0.69,-1.33l-0.42,-0.79l-1.71,-0.91l0.03,-2.39ZM622.93,320.45l0.54,-0.24l0.96,-0.65l-0.36,0.96l-1.14,-0.07Z", "name": "Henan"}, "CN-43": {"path": "M518.53,465.66l0.95,-0.51l0.19,-0.95l0.84,-0.81l0.82,-0.32l1.74,-2.3l0.79,-0.44l1.2,0.05l0.74,-1.06l1.58,-1.07l0.36,-0.69l-0.07,-1.44l-0.64,-1.25l-0.95,-0.69l-0.3,-1.38l0.43,-0.77l-0.42,-0.51l0.82,-1.22l-0.37,-0.54l-0.67,0.02l0.91,-2.7l-0.28,-0.6l-1.14,-0.69l0.16,-0.95l-0.36,-1.23l0.54,-1.79l-0.84,-0.76l0.78,-1.45l-0.51,-1.11l-0.09,-1.48l0.62,-2.56l-0.82,-0.92l0.41,-1.88l1.22,-1.09l-0.15,-0.98l0.7,-0.54l0.0,-0.73l1.21,-1.88l1.72,-0.83l0.71,0.38l0.76,-0.17l0.35,-1.04l0.99,-1.05l4.69,-0.77l1.21,0.5l1.17,1.14l1.39,0.51l0.88,-0.45l0.3,-0.68l0.88,0.09l1.08,-0.59l0.43,-0.42l0.03,-0.71l-1.68,-1.89l0.46,-0.9l-0.29,-0.82l0.7,-0.12l2.2,0.47l0.59,-0.36l0.26,-0.81l6.94,1.05l2.36,1.74l1.14,-0.24l1.6,0.57l1.45,0.09l1.0,-0.41l2.37,1.06l2.92,2.35l0.61,0.91l0.73,0.03l0.75,0.71l0.03,0.81l0.39,0.35l1.42,-0.63l1.19,-1.11l3.19,0.18l0.58,-0.75l0.79,-0.25l0.54,-0.76l1.09,-0.7l0.58,1.34l-0.54,1.2l0.32,1.93l0.64,0.51l1.08,-0.66l0.04,0.81l0.6,0.41l0.57,-0.46l0.96,-0.18l3.9,-4.62l1.63,-1.31l-0.42,1.0l-0.07,1.39l0.46,0.32l1.27,-0.04l0.37,0.94l-0.07,1.28l0.78,1.24l-0.96,0.68l-0.92,1.24l-0.25,1.35l0.91,0.54l0.16,1.47l0.8,0.99l0.43,0.09l0.9,-0.83l1.46,0.82l0.23,1.81l1.49,0.64l0.49,0.71l1.25,0.67l-0.22,2.56l-0.8,1.06l0.06,0.65l1.59,0.92l-0.1,0.74l0.86,0.66l0.01,0.44l-0.55,0.92l-1.38,0.59l-0.28,0.76l-0.72,0.49l-0.48,1.68l-1.0,0.75l-2.46,0.55l-0.56,0.46l-0.29,0.66l0.06,1.52l-1.39,2.07l-0.84,2.21l0.84,3.72l1.24,0.57l1.49,-0.65l0.75,0.27l-0.36,1.36l-1.04,1.38l-0.07,0.9l0.16,0.51l0.63,0.2l1.23,1.67l-0.86,1.92l0.5,2.79l0.67,0.64l2.58,0.87l-0.16,1.28l-0.87,1.26l-0.25,1.62l-1.08,1.81l0.21,0.43l0.56,0.18l0.72,-0.35l0.89,0.16l1.21,-0.74l0.66,0.24l-2.18,1.23l-0.65,0.82l-0.1,1.97l-1.66,2.88l0.26,1.44l0.9,1.13l-0.75,1.72l-0.65,0.29l-0.7,1.14l-0.61,0.17l-1.18,-0.34l-1.52,0.51l-0.86,-0.87l-1.44,0.05l-1.49,-1.15l-0.28,-0.81l-0.34,-0.15l-1.45,0.31l-2.04,1.64l-2.09,1.05l-0.51,-0.28l-0.52,0.23l-0.18,0.71l0.56,1.27l0.46,0.22l1.35,-0.16l-0.68,0.8l-0.12,2.01l0.34,0.96l-2.16,0.22l-1.11,-0.76l-0.42,-1.38l-1.05,-0.82l-1.33,0.01l-1.16,-0.48l-2.95,-0.19l-0.99,-0.39l-0.51,0.45l-0.96,3.66l0.12,0.57l0.54,0.43l-0.26,1.03l-1.01,0.22l-0.63,0.72l-1.07,-0.42l-2.04,0.22l-2.08,-0.28l-0.66,0.47l-0.25,0.68l-0.6,0.11l-0.64,0.79l-0.77,-0.4l0.61,-1.67l-0.46,-0.82l-0.2,-1.45l0.46,-1.2l-0.64,-0.66l0.15,-0.59l-0.29,-0.54l-0.79,-0.3l-0.82,0.33l-0.59,-0.49l-0.45,0.06l-2.2,1.68l-1.02,1.81l-0.78,-1.31l0.53,-1.75l0.83,-0.26l0.68,-0.66l0.99,-2.4l1.15,-0.38l0.6,-0.66l0.6,-1.53l0.07,-1.3l-0.31,-0.75l0.2,-0.94l0.62,-0.27l0.68,-1.04l0.14,-0.8l0.81,-0.66l-0.39,-1.03l-2.44,0.23l-0.47,0.69l-0.71,-0.84l1.13,-4.72l-0.46,-0.87l-2.04,-0.51l-2.62,-1.33l-0.64,0.31l-0.56,1.48l-2.18,0.01l-0.01,-0.52l-0.43,-0.38l-2.06,-0.22l-0.43,0.47l-0.17,1.6l-0.62,0.7l-1.07,0.12l-0.95,0.66l-1.38,2.21l-1.06,-1.05l-1.72,0.17l0.53,-1.1l-0.08,-0.55l-2.27,-0.89l-0.62,0.49l-0.85,1.87l-1.13,0.71l0.1,1.51l-1.13,0.26l0.29,-0.8l-0.23,-0.75l-0.98,-0.95l-2.21,0.02l-0.84,-2.42l0.25,-0.83l-1.35,-0.42l-0.27,-0.54l0.36,-1.3l1.22,-1.62l0.14,-0.86l-0.57,-1.32l-1.25,-0.68l1.44,-0.41l1.92,-1.44l-0.01,-0.82l-0.75,-0.51l0.66,-1.04l-0.16,-1.6l-1.33,-1.41l-1.41,-0.24l-1.0,0.31l-0.79,-0.27l-1.03,1.16l-0.07,-0.8l-0.77,-0.08l-1.41,0.7l-0.84,1.06l-0.55,0.2l-0.76,-0.75Z", "name": "Hunan"}, "CN-42": {"path": "M512.09,412.72l0.53,-1.11l2.29,-0.28l0.88,-1.0l0.38,0.57l0.77,0.19l2.27,-0.61l1.1,-0.8l1.51,0.11l1.17,0.62l1.84,-0.65l0.7,0.36l1.16,-0.07l1.7,-1.21l0.82,0.0l2.59,-2.75l1.95,-0.99l0.53,-0.01l0.56,0.77l1.03,0.33l1.07,-0.29l0.72,-0.98l0.28,-2.14l-0.48,-1.61l1.04,-1.44l-0.51,-0.94l0.04,-1.42l-0.65,-1.2l-1.98,-1.26l-0.19,-0.53l-3.26,-0.83l-0.5,-1.83l-0.77,-0.82l-0.94,-0.33l0.51,-0.89l-0.06,-1.92l0.92,-2.31l-0.67,-0.96l-0.26,-1.34l-1.14,-0.66l-0.69,-1.49l1.09,-0.86l0.2,-1.99l0.55,-0.26l0.26,-0.62l0.77,0.23l0.78,-0.22l0.78,0.46l0.88,-0.35l2.22,0.67l0.86,-0.59l0.12,-0.47l0.94,0.13l0.47,-0.37l-0.1,-2.16l-0.63,-1.57l-0.62,-0.61l-2.83,-1.13l-1.33,0.34l-0.54,-0.26l0.47,-1.81l-0.62,-1.01l-1.61,-0.52l-1.16,0.03l-1.4,-0.62l0.8,-0.78l1.01,0.15l0.77,-0.45l1.31,0.36l1.84,-0.04l1.28,0.48l2.14,0.03l0.97,0.72l0.96,0.19l3.06,-0.31l1.38,-1.17l0.77,1.49l0.89,0.12l1.39,0.86l0.49,-0.43l-0.13,-0.38l0.99,-0.94l1.26,-0.14l0.53,-0.75l0.43,0.75l1.41,0.83l0.77,1.73l0.73,0.8l0.08,1.18l1.97,1.38l0.9,1.33l1.4,1.2l0.77,1.59l1.68,-0.41l0.9,0.46l0.86,1.21l2.69,0.76l0.93,0.67l0.58,-0.3l1.21,0.94l1.2,0.1l1.23,0.74l3.47,-0.52l3.37,0.42l4.03,-1.22l1.05,0.72l1.46,-0.49l1.64,1.52l1.73,0.49l1.63,-0.23l1.42,-1.6l1.11,-0.17l0.52,0.62l-0.25,1.02l0.2,1.58l-0.43,0.87l0.58,2.66l0.88,1.11l0.4,1.22l1.19,0.06l0.16,1.6l1.64,-0.12l1.49,-1.43l1.34,0.53l1.51,1.29l2.57,-0.22l0.2,0.27l-0.5,1.23l0.25,1.12l0.53,0.35l1.02,-0.03l0.74,0.74l1.63,0.66l3.78,-0.05l0.67,-0.48l0.9,-1.41l0.54,0.73l0.02,1.54l1.03,1.03l1.27,-0.06l0.12,0.61l0.91,0.54l0.28,0.72l0.9,0.66l0.78,1.27l0.91,0.07l0.53,-0.92l1.91,1.47l1.24,-0.02l0.93,1.53l1.26,0.02l-0.18,0.5l-2.29,1.61l-0.09,1.42l-1.1,0.22l-0.33,1.44l1.06,1.86l0.73,0.28l0.8,1.07l0.09,0.61l-0.87,0.63l-0.18,0.75l0.57,1.14l1.86,1.45l0.56,2.67l-0.12,1.13l0.77,1.13l0.17,1.51l-1.7,0.69l-1.51,0.18l-1.89,-1.13l-0.64,-0.89l-3.28,-0.08l-0.48,0.17l-0.72,1.21l-0.3,1.24l-0.95,1.01l-0.81,0.35l-1.31,-0.55l-1.63,-0.09l-0.25,0.67l0.52,0.39l0.13,0.78l-1.88,-0.31l-0.84,0.8l-0.68,-0.17l-1.1,2.21l-0.63,0.36l-0.69,-0.46l-3.6,1.16l-2.83,-0.57l-0.72,0.84l-0.04,1.04l-2.48,0.59l-1.07,0.7l-1.21,1.37l-1.73,-0.88l-1.0,0.58l-0.45,-0.43l-0.16,-1.46l-0.84,-0.51l0.33,-0.8l0.62,-0.82l0.81,-0.41l0.42,-0.87l-0.83,-1.49l0.11,-1.1l-0.52,-1.33l-0.68,-0.37l-0.97,0.09l0.85,-2.41l-0.14,-0.68l-0.47,-0.05l-1.04,0.62l-1.62,1.32l-3.91,4.61l-1.44,-0.8l-1.16,0.59l-0.2,-1.88l1.49,-1.42l0.08,-0.97l-0.37,-0.38l-1.15,0.89l-0.16,-0.64l-0.84,-0.54l-1.54,0.92l-0.51,0.74l-0.76,0.21l-0.49,0.72l-3.02,-0.24l-2.06,1.52l-1.06,-1.86l-0.78,0.12l-3.53,-3.11l-2.59,-1.17l-1.22,0.38l-1.34,-0.08l-1.55,-0.56l-1.16,0.23l-2.29,-1.72l-7.52,-1.04l-0.44,0.36l-0.17,0.78l-2.27,-0.47l-0.87,0.22l-0.62,0.59l0.36,0.72l-0.32,0.62l0.08,0.85l1.64,1.84l-1.01,0.65l-1.15,-0.08l-0.7,1.08l-0.99,-0.39l-1.19,-1.15l-1.76,-0.6l-4.86,0.86l-1.33,1.37l-0.16,0.8l-1.11,-0.35l-2.18,0.99l-0.84,1.11l-0.55,1.74l-0.66,0.6l0.06,1.09l-1.17,1.03l-0.26,1.59l-1.68,-1.55l-0.93,-1.49l-1.37,-0.68l0.12,-0.72l-0.75,-1.24l0.37,-1.5l-0.18,-0.87l-2.91,-1.3l-0.83,-2.39l-0.88,-0.18l-1.07,1.11l-0.32,1.02l-0.54,-0.17l-0.42,-1.08l1.33,-0.17l0.54,-0.62l0.11,-6.62l-0.42,-0.96l-1.98,-0.86Z", "name": "Hubei"}, "CN-45": {"path": "M455.35,502.86l1.1,0.98l1.8,0.67l0.69,-0.69l0.97,-0.32l0.59,-0.99l1.92,-0.6l0.59,-1.6l1.82,-1.54l0.96,1.04l1.72,-0.27l0.57,0.29l0.28,0.93l0.84,0.87l2.64,0.57l1.78,1.18l1.64,-0.33l1.29,1.26l0.69,0.03l2.39,-2.33l0.38,-0.92l-0.34,-1.66l0.38,-0.3l1.28,-0.03l2.2,-0.85l2.04,-1.14l1.09,-1.02l3.12,-0.35l0.59,-0.91l1.11,0.06l0.54,-1.92l-0.63,-1.25l1.3,-1.18l1.19,0.02l0.97,-0.5l0.21,0.18l0.71,0.81l-0.06,0.99l1.25,0.58l0.14,0.92l0.86,0.77l-0.09,0.63l0.34,0.42l0.85,0.07l1.48,-0.87l0.67,1.02l0.99,-0.26l0.48,1.1l1.66,0.1l1.19,-0.9l1.65,-0.12l0.81,-0.45l0.42,-0.73l0.03,-1.79l2.27,-2.04l1.35,0.29l1.12,0.98l1.52,2.13l0.63,-0.27l0.08,-0.55l-0.54,-1.53l1.17,-0.72l-0.09,-0.87l0.57,-0.59l0.54,-0.11l-0.08,0.88l0.35,0.49l2.46,-0.4l0.66,0.53l0.64,-0.02l0.74,-0.74l-0.26,-1.1l0.21,-1.94l-0.7,-0.17l-1.85,0.83l1.08,-0.97l1.7,-0.4l0.65,0.84l0.89,-0.45l0.76,0.73l1.0,-0.1l1.09,-2.32l0.69,-0.74l-0.18,-0.99l1.03,-0.83l1.01,0.19l0.71,-0.21l0.7,0.74l-0.28,0.99l0.37,0.68l1.69,-0.11l0.68,-0.73l-0.2,-1.23l1.05,-0.59l0.95,-2.0l0.28,-0.05l1.18,0.5l-0.54,1.19l0.23,0.68l2.1,-0.05l0.78,0.97l0.59,0.13l0.92,-0.61l0.9,-1.85l0.67,-0.49l1.24,-0.19l0.81,-0.89l0.33,-1.83l1.36,0.23l0.06,0.57l0.48,0.36l2.51,0.02l0.71,-0.42l0.38,-1.29l2.33,1.19l2.0,0.55l-1.17,4.4l0.15,0.77l0.67,0.92l0.97,0.4l0.58,-0.7l1.29,-0.06l-1.0,1.97l-0.8,0.41l-0.26,1.43l0.33,0.78l-0.08,1.12l-0.48,1.18l-1.61,0.88l-0.37,1.11l-0.56,0.43l-0.14,0.96l-1.55,0.96l-0.65,1.74l0.08,0.9l0.87,1.42l0.81,0.24l0.81,-0.59l0.59,-1.43l1.9,-1.47l0.71,0.49l1.17,-0.24l-0.18,0.72l0.68,0.64l-0.46,0.88l0.18,1.74l0.48,0.7l-0.68,1.6l0.13,0.6l1.53,0.7l1.05,-0.97l0.73,-0.16l0.51,-0.99l1.86,0.29l2.23,-0.15l-0.6,0.53l-0.14,1.54l1.12,1.16l-0.2,1.12l0.93,1.59l-0.95,0.99l-0.5,0.04l-1.23,0.91l0.46,3.71l-1.2,1.02l-0.38,1.23l-1.02,-0.24l-0.91,0.22l-0.73,1.46l0.18,1.15l-2.28,1.09l-0.02,0.87l-1.13,1.92l-0.4,1.36l0.28,2.53l-0.23,0.96l0.63,1.04l-0.76,1.33l-0.1,0.85l-2.16,2.26l-2.13,0.31l-0.13,0.43l0.39,0.4l-0.55,0.58l-0.99,-0.24l-0.54,0.66l-1.84,0.65l-0.74,-0.07l-0.49,1.48l-0.72,0.14l0.33,1.09l-0.09,0.96l1.09,1.09l-1.24,-0.04l-0.9,1.67l-0.9,-0.3l-0.78,0.54l-1.16,-0.89l-1.42,0.41l0.28,1.3l-0.17,1.93l0.47,1.18l-1.93,0.24l-1.66,-0.36l-2.29,0.59l-0.88,2.97l-1.04,0.49l-0.96,-0.35l-0.46,0.35l0.14,2.45l-0.66,-0.37l0.24,-1.52l-0.57,-0.31l-0.41,0.22l-0.08,-0.59l-0.61,-0.19l0.46,-0.98l-1.05,-0.51l-1.66,1.78l1.49,1.28l-0.37,1.05l-0.87,-0.1l-0.5,0.63l-1.14,-0.24l-0.73,0.12l-0.22,0.33l-0.45,-0.7l-0.63,0.32l-0.22,0.7l-1.03,0.03l-0.63,-0.25l1.28,-0.59l-0.04,-1.7l-1.56,-0.95l-1.03,0.51l-0.64,-0.04l-0.74,-1.35l0.82,-0.49l-1.36,-1.29l-1.19,-0.0l-0.34,0.34l0.59,0.58l-0.58,0.95l0.37,0.43l-0.51,-0.23l0.12,-0.61l-0.95,-0.4l0.24,-0.58l-0.39,-0.48l-0.57,-0.04l0.36,-0.72l-0.93,-0.66l-0.39,-0.69l-0.37,0.01l-0.69,0.77l-0.1,-0.59l-0.46,-0.01l-0.39,0.43l-0.19,1.27l0.43,0.9l0.36,0.14l-0.6,0.77l0.35,0.38l-0.14,0.16l-0.35,-0.32l-0.52,0.38l-0.52,-0.74l-0.47,0.03l-0.41,0.42l-0.32,1.61l-0.2,-0.7l-0.86,-0.14l-0.55,1.06l-1.48,0.18l-0.14,0.29l-0.95,-0.12l-0.19,0.61l-1.95,-1.94l-0.91,-0.29l-0.68,-0.0l-1.84,0.77l-1.19,-0.04l-0.45,0.39l-0.45,-0.81l-0.52,-0.24l-1.18,0.7l-0.89,-1.61l-1.57,-0.03l-1.55,-1.22l-0.92,-0.23l0.45,-0.93l-0.4,-0.89l-0.72,-0.17l-0.69,0.27l-0.79,-0.76l-1.19,-0.1l-0.77,-0.51l-0.85,0.49l0.29,-1.43l-0.45,-1.4l0.3,-0.72l-0.55,-1.52l-1.26,-0.46l-0.17,-1.17l0.67,-2.23l0.69,0.55l0.87,-0.44l0.94,-2.44l0.78,-0.66l-0.15,-0.61l-0.95,-0.19l-1.09,-1.07l-0.74,0.23l-0.62,-0.74l-1.26,-0.38l-0.7,0.57l-2.71,0.52l-0.69,-1.39l-1.2,-0.49l-2.03,-0.01l-0.7,0.7l-1.47,0.25l-1.13,-1.3l-1.01,-0.65l-2.06,-0.32l-0.15,-1.63l1.27,-1.23l0.19,-0.84l0.84,-0.07l0.23,-0.71l1.94,-1.88l2.17,0.8l0.99,-0.29l1.05,-0.8l0.53,-3.41l-0.29,-1.07l0.72,-0.21l0.25,-0.43l-0.81,-1.57l0.11,-0.7l-2.08,-1.35l0.15,-0.48l-0.52,-0.51l-1.83,0.59l-0.47,0.77l-0.98,0.08l-1.78,-0.69l-0.36,-0.88l-0.55,-0.31l-1.43,0.36l-0.51,1.13l-0.42,0.11l-2.09,-1.4l-0.59,0.2l-0.07,0.46l-0.91,-0.74l-0.0,-2.66l-1.47,-1.9l-2.12,0.15l-1.31,-0.57l-2.01,-0.19l-0.91,0.74l0.03,0.72l0.49,0.66l-0.2,-0.04l-1.4,-1.52l-0.99,-2.09l-0.25,-1.15l0.6,-0.88ZM517.55,549.83l0.44,0.29l-0.04,0.06l-0.4,0.04l0.0,-0.4ZM515.05,548.09l-0.01,-0.01l0.03,-0.01l-0.02,0.03ZM513.4,550.45l-0.18,0.19l-0.13,0.01l0.22,-0.26l0.09,0.06ZM512.99,550.66l-0.09,0.13l-0.05,-0.06l0.01,-0.02l0.14,-0.05ZM512.77,549.78l-0.01,0.0l-0.01,-0.02l0.02,0.02Z", "name": "Guangxi"}, "CN-44": {"path": "M531.13,558.5l0.21,-0.36l0.4,0.19l0.79,-0.98l0.05,-1.58l0.4,-0.38l1.44,-0.09l0.37,-0.4l-0.2,-0.49l0.56,-0.81l-0.26,-0.31l0.2,-0.4l-0.46,-0.4l-0.98,0.16l-0.69,-0.25l0.01,-0.46l-0.82,-0.99l0.88,0.1l1.44,-0.72l0.76,-2.85l1.88,-0.45l1.64,0.37l2.47,-0.36l0.27,-1.11l-0.52,-0.82l0.17,-1.89l-0.25,-0.66l0.55,-0.16l1.18,0.84l0.94,-0.54l0.76,0.31l0.7,-0.27l0.71,-1.57l0.96,0.18l0.6,-0.5l-0.2,-0.81l-0.93,-0.84l0.02,-1.09l0.7,-1.41l2.47,-0.76l0.37,-0.56l1.15,0.14l0.86,-0.89l0.09,-0.63l1.48,-0.21l2.41,-2.49l1.0,-2.64l-0.63,-1.13l0.24,-0.91l-0.29,-2.38l1.42,-2.94l0.08,-0.97l2.16,-0.94l0.21,-0.56l-0.25,-0.91l0.48,-1.02l1.33,0.21l0.66,-0.24l0.44,-1.32l0.89,-0.55l0.43,-0.77l-0.54,-3.51l1.42,-0.58l1.31,-1.44l-0.06,-0.71l-0.86,-1.38l0.18,-1.4l-1.1,-0.85l0.27,-0.52l-0.15,-0.52l1.14,-0.54l0.88,-0.92l0.55,0.37l0.51,-0.34l0.36,-2.01l-0.66,-0.72l0.91,-3.41l0.63,0.35l1.09,-0.07l3.0,0.74l1.38,0.02l0.53,0.53l0.48,1.43l1.37,0.94l0.99,0.14l2.35,-0.62l-0.41,-1.5l0.12,-1.88l0.9,-0.9l-0.42,-0.66l-1.86,0.04l-0.26,-0.55l0.59,0.04l2.26,-1.2l2.17,-1.67l0.61,-0.11l0.37,0.67l1.69,1.29l1.54,0.02l0.78,0.98l1.95,-0.61l0.97,0.34l0.85,-0.14l0.61,-0.41l0.56,-1.0l0.45,-0.12l0.84,0.4l0.18,0.93l-0.29,1.05l0.64,0.45l1.59,-0.67l2.5,0.25l1.44,-0.7l0.67,-0.79l0.83,0.06l0.67,-0.48l0.39,0.97l1.69,0.91l-0.45,1.58l0.22,0.6l-4.07,2.08l-1.51,3.27l-2.2,1.75l0.24,0.53l1.13,0.34l0.53,0.71l1.03,0.44l0.76,1.08l0.66,0.04l0.96,-0.84l1.12,0.04l0.83,-0.46l0.4,0.39l0.74,0.08l0.76,-1.26l1.67,0.68l1.05,-1.27l1.55,-0.55l0.64,0.3l1.02,-0.04l1.55,-1.13l1.01,0.19l1.14,-0.56l2.35,2.62l1.4,0.99l1.75,-0.13l0.48,-0.54l-0.27,-1.99l-0.47,-0.76l0.1,-1.11l0.52,-0.47l1.32,0.02l0.36,-0.69l1.3,0.31l1.13,0.75l1.93,0.04l0.54,0.6l1.31,-0.5l2.21,3.48l2.32,-0.82l1.22,-0.02l-0.35,1.83l1.16,0.98l0.18,0.71l0.72,0.69l1.09,2.78l-0.54,1.37l0.09,1.27l2.0,5.35l-1.24,0.55l-0.28,-0.61l-0.74,0.25l-0.61,0.84l0.15,0.75l-0.49,0.76l0.26,0.9l-1.18,1.35l-1.46,-0.08l-1.7,-1.02l-0.74,0.36l0.05,0.92l0.47,0.62l0.64,0.48l1.17,-0.08l-0.08,0.56l0.29,0.23l-0.36,0.39l-0.38,-0.64l-0.81,-0.13l-0.86,0.19l-0.34,0.4l0.13,0.56l0.7,0.28l-0.45,0.98l0.32,1.38l-0.66,0.92l-1.51,0.19l-1.44,-0.75l-0.98,-0.07l-0.48,0.23l0.09,0.69l0.27,0.11l-1.0,1.02l-0.13,-0.66l-1.12,-0.55l-0.61,0.33l0.5,0.79l-3.07,1.27l-0.38,-0.62l-1.36,-0.57l0.51,-0.63l-0.15,-0.58l-0.86,0.01l-0.71,0.59l-1.05,0.23l-1.6,-0.85l-1.1,0.24l0.37,0.93l0.77,0.02l-0.31,0.48l0.33,0.39l0.91,0.17l-0.41,1.06l0.5,0.68l-0.97,-0.4l-0.76,0.17l-0.46,-0.09l0.74,-0.25l0.25,-0.6l-0.65,-0.58l-0.63,0.25l-0.7,-0.28l0.5,-0.51l-0.09,-0.76l-0.63,-0.48l-1.04,1.09l-2.7,0.68l-0.94,1.42l-0.42,-0.84l-1.48,-0.17l0.02,1.14l1.04,0.53l-0.61,0.9l-1.68,-0.01l-0.03,-1.58l1.16,-0.92l-0.26,-0.62l-0.81,-0.29l-0.53,0.55l-0.61,-0.19l-2.0,0.93l-0.99,0.85l-0.21,1.07l0.51,0.23l-0.55,0.54l-1.29,-0.83l-1.3,0.24l-1.17,0.66l-0.84,-0.11l-1.77,0.77l-1.08,-0.32l-0.89,0.73l0.06,-0.39l-0.88,-0.78l-0.83,-1.55l-0.21,-1.13l-0.55,-0.39l-0.88,0.06l-0.82,-1.98l0.48,-1.79l-0.38,-0.54l-1.21,0.48l0.53,-0.69l1.59,-0.52l2.26,0.05l-0.1,-0.51l-2.05,-0.7l-2.97,1.48l-1.54,-0.45l-0.3,0.82l1.22,0.52l0.2,0.57l-0.26,0.65l-2.21,0.48l-1.33,-0.26l-0.48,0.51l1.43,0.8l0.99,-0.11l1.27,1.3l-1.19,-0.09l0.02,0.49l1.3,0.8l1.85,2.05l-0.76,2.04l0.2,0.98l0.56,0.36l-0.36,0.75l0.12,0.64l-0.66,0.34l-0.55,0.82l-1.38,-2.09l-1.18,-1.07l-1.68,-3.19l-0.68,0.25l-0.02,1.6l1.02,1.01l2.19,3.25l-1.09,0.01l-0.81,1.15l0.02,0.8l-1.02,0.22l-0.27,-0.62l-0.01,-1.86l-0.57,-0.37l-0.38,0.18l-0.32,1.13l-0.74,0.1l-0.08,2.89l-0.79,1.03l-0.59,0.07l-0.58,-1.3l-0.69,-0.2l-1.22,0.53l-0.3,0.59l-1.18,0.7l-0.31,0.93l-0.75,0.23l-1.64,-0.97l-0.14,-0.52l1.15,-0.92l-0.35,-0.59l-1.16,0.34l0.12,-1.39l-0.12,-0.44l-0.45,-0.05l-0.64,0.69l-0.17,1.02l0.69,2.63l-0.41,0.84l-0.99,0.33l-0.95,-0.44l0.02,-1.4l-2.64,0.49l0.45,-0.89l-0.39,-0.47l-0.86,0.75l-1.16,-1.33l-0.6,0.33l0.08,1.44l0.99,1.1l-0.68,0.44l-0.48,-0.25l-0.14,-0.61l-0.64,0.26l-2.17,-0.39l0.0,0.52l1.22,0.89l0.17,0.49l-1.17,0.81l-0.61,0.99l-0.49,-0.69l-0.63,0.3l0.01,0.52l-0.84,0.06l-0.59,-0.99l-0.73,-0.09l-0.36,0.75l-0.82,0.37l-0.15,0.65l-0.13,-0.34l-1.55,-0.52l-1.06,0.54l-1.22,-0.5l-0.71,0.11l-0.35,0.16l0.02,0.92l-1.64,1.03l-1.15,-0.26l-0.43,-0.64l-1.99,1.01l-0.52,0.91l0.24,1.28l-2.08,0.36l0.61,-0.46l0.12,-1.02l-0.81,-0.51l-0.31,-0.84l-0.49,-0.02l0.18,-0.42l-0.59,-0.35l-0.46,0.25l-0.18,0.5l0.48,1.06l-0.47,-0.16l-0.48,0.5l1.18,1.69l-0.12,0.65l-2.11,1.53l-0.23,-0.35l-0.59,0.3l-0.86,1.46l0.24,2.03l0.26,0.56l0.71,0.2l1.74,-0.3l-0.51,1.28l0.27,0.5l-0.37,0.76l0.4,0.78l0.97,0.18l0.34,0.54l1.14,0.38l0.54,0.98l-1.65,2.29l-0.45,-0.03l-1.18,0.7l-1.1,-0.22l-1.12,0.38l-1.3,-0.81l-1.24,0.34l-0.17,-0.72l0.39,0.38l0.55,-0.31l0.47,-1.21l-1.69,-1.61l-0.24,0.28l-0.77,-0.19l0.25,-0.98l-1.21,-0.94l1.07,-0.31l0.34,-0.62l-0.25,-0.42l-1.16,0.16l0.11,-1.41l-0.28,-0.75l-0.65,-0.34l-0.47,0.45l-0.19,-0.39l0.22,-1.55l0.46,-0.72l-0.54,-1.42ZM543.13,557.94l0.08,-0.04l0.34,0.53l-0.17,-0.05l-0.25,-0.44ZM601.93,536.96l0.4,-0.17l0.55,0.24l-1.0,0.52l0.05,-0.6ZM640.03,519.57l0.48,0.3l-0.39,0.54l-0.07,-0.25l-0.02,-0.59ZM633.56,524.9l0.14,-0.14l0.21,0.11l-0.24,-0.03l-0.1,0.06ZM634.48,525.04l0.11,-0.07l0.09,0.23l-0.2,-0.16ZM541.04,563.76l0.1,0.5l-0.03,0.09l-0.06,-0.1l-0.0,-0.49ZM534.58,570.19l-0.02,-0.02l0.01,0.01l0.0,0.01ZM534.45,570.04l-0.32,-0.15l0.01,-0.09l0.3,0.23ZM639.35,522.89l0.13,-0.2l0.69,0.07l-0.03,0.19l-0.8,-0.05ZM587.36,534.0l0.2,-0.02l0.08,0.21l-0.01,-0.01l-0.26,-0.18ZM588.56,535.04l0.1,0.1l0.01,0.03l-0.11,-0.13ZM586.1,531.4l0.39,0.11l0.1,0.08l-0.16,0.15l-0.33,-0.34ZM587.39,532.44l0.1,0.06l0.03,0.01l-0.04,-0.0l-0.09,-0.07ZM584.84,544.51l0.14,-0.19l0.18,-0.06l-0.09,0.26l-0.23,-0.01ZM583.98,543.53l0.08,-0.02l0.03,-0.01l-0.09,0.06l-0.02,-0.03ZM583.37,546.4l-0.01,-0.01l0.01,-0.03l0.0,0.01l-0.01,0.03ZM576.33,549.57l-0.05,-0.04l0.08,-0.06l-0.04,0.1ZM576.64,549.12l0.02,-0.08l0.05,-0.0l-0.0,0.0l-0.07,0.08ZM573.59,550.6l0.05,-0.29l0.32,-0.17l0.03,0.22l-0.4,0.24ZM563.03,551.12l0.02,-0.23l0.7,-0.19l0.15,0.11l-0.87,0.31ZM544.13,561.71l0.15,-0.17l0.08,0.02l-0.18,0.21l-0.05,-0.06ZM539.8,560.38l0.95,-0.69l0.29,-0.07l0.19,0.36l-1.43,0.4ZM542.04,559.99l1.02,-0.38l0.09,0.08l-0.22,0.74l-0.89,-0.44Z", "name": "Guangdong"}, "CN-46": {"path": "M515.62,589.69l0.93,-0.9l-0.79,-1.88l0.72,-1.18l1.07,-0.26l2.09,-1.61l0.35,0.11l1.21,-1.69l2.16,-0.81l0.87,-1.07l1.09,0.23l0.35,-0.6l-0.35,-1.36l-0.82,0.05l-0.88,0.58l-0.01,-0.32l1.29,-1.27l2.32,0.53l0.42,0.5l1.68,-0.33l0.44,-0.49l-0.61,-0.47l0.23,-0.22l-0.18,-0.61l1.71,-0.53l0.47,0.77l0.54,-0.27l1.38,0.63l1.09,-0.84l0.28,0.31l-0.08,0.6l0.89,0.35l0.64,-0.92l1.44,-0.19l0.41,-0.5l0.05,-0.73l1.34,0.41l1.09,-0.4l0.74,1.81l0.38,0.27l0.5,-0.71l-0.51,-1.12l0.18,-0.13l2.03,1.0l0.36,0.81l0.46,0.14l0.51,-0.72l-0.79,-1.9l1.14,-0.5l0.29,0.71l1.16,1.01l2.05,0.17l1.06,4.75l-0.54,0.21l-1.28,1.4l-0.18,-0.3l0.5,-0.7l-0.51,-0.32l-0.88,0.27l-0.21,2.04l-0.57,0.78l-0.59,0.07l-0.57,0.59l-0.09,0.94l-0.5,0.35l-0.77,2.06l-0.66,0.13l-0.48,-0.28l-0.5,0.39l1.3,1.49l-0.72,1.08l-0.16,1.24l-1.06,1.22l-0.01,0.46l0.45,0.39l-0.46,0.83l-2.21,0.58l-2.75,2.45l-0.41,-0.12l-0.51,0.39l0.68,0.7l-3.15,0.78l-0.58,-0.25l-0.93,0.16l-0.51,1.58l-1.66,1.32l-0.06,-0.63l-0.8,0.12l-1.28,-0.79l-1.62,-0.24l-2.39,0.18l-0.6,-1.04l-1.92,-0.11l-2.82,-1.76l-1.44,-0.27l0.15,-2.96l-1.01,-1.93l0.46,-1.49l-0.53,-2.2Z", "name": "Hainan"}, "CN-65": {"path": "M0.84,262.13l2.81,-0.47l0.64,-1.39l0.77,-0.66l-0.4,-2.47l-1.09,-1.19l0.89,-1.26l1.31,-2.94l2.63,-0.99l2.5,0.2l5.54,-4.16l2.18,0.13l0.3,-0.47l-0.12,-0.57l-0.95,-1.01l0.5,-1.18l2.16,1.13l1.04,0.06l0.99,-0.34l0.95,0.37l5.14,-3.33l0.63,2.14l0.72,0.79l-0.41,1.32l0.73,1.57l3.6,-0.02l1.07,-1.08l1.38,-0.52l1.34,0.36l1.29,-1.17l0.41,1.32l0.62,0.32l2.54,-1.7l1.2,-2.27l0.82,-0.61l0.59,-2.96l1.61,-1.34l0.12,-1.76l1.26,-1.09l1.95,-0.48l1.6,0.56l3.15,-0.15l2.52,0.69l2.3,-0.3l2.6,-1.14l3.65,0.39l1.64,-1.25l1.47,-2.17l1.15,-0.82l0.06,-1.75l2.11,-1.28l1.6,-0.42l0.64,-0.99l7.84,-3.43l1.28,-0.95l1.58,0.19l3.26,-1.68l2.11,-0.28l0.63,-0.59l0.7,-1.51l1.15,-0.33l3.64,0.04l1.06,-0.4l0.44,-1.14l-0.59,-1.63l0.56,-0.44l0.2,-0.72l-1.06,-3.47l0.21,-0.97l-0.73,-1.2l-0.27,-1.38l1.43,-2.86l1.12,0.06l2.89,-0.94l0.52,-0.44l0.05,-0.65l-0.34,-0.48l-1.97,-0.67l-0.46,-0.69l3.43,-1.76l1.2,0.51l0.9,-0.03l0.63,-0.53l0.16,-0.72l-0.74,-2.4l-1.36,-0.73l0.85,-1.56l0.04,-0.9l-3.48,-8.1l-0.79,-1.13l-0.3,-1.4l-0.89,-1.13l0.5,-1.95l-0.63,-3.99l0.77,-2.62l-0.4,-0.85l1.82,-0.71l0.17,-0.94l-3.98,-1.87l-3.64,0.41l-1.67,-0.93l-0.09,-0.41l3.37,-2.2l1.56,0.11l2.63,-0.36l0.91,-1.08l1.32,0.05l2.3,-0.76l2.37,0.29l10.1,-3.03l1.73,-0.96l0.84,0.15l0.24,0.34l0.57,2.2l2.36,0.96l4.52,-1.56l1.15,0.4l2.03,1.66l1.46,-0.27l1.17,-2.44l0.19,-3.34l-0.43,-0.51l-1.51,-0.55l-2.24,-0.3l-0.72,-0.65l1.13,-3.42l1.73,-3.1l1.16,-5.4l1.57,-2.5l2.42,-7.4l2.17,-3.93l0.43,-4.7l1.42,-0.06l5.57,2.71l5.6,1.73l2.6,0.19l1.35,-0.54l1.47,-0.12l2.2,0.12l1.5,0.44l2.05,-0.26l0.99,0.92l-0.51,1.54l0.3,0.53l0.51,0.15l2.75,-0.72l0.89,-0.95l1.04,-0.34l1.51,-1.11l1.03,-1.1l4.25,-0.41l0.81,-2.26l1.46,-0.49l0.41,-1.47l-0.01,-1.88l-1.38,-2.39l0.16,-2.43l-1.17,-5.49l1.03,-4.0l1.91,-4.01l0.75,-0.74l3.14,-0.4l2.89,0.18l1.73,-1.23l1.75,-0.03l2.08,-0.83l0.69,-1.27l2.19,-2.43l-0.14,-1.37l0.67,-1.36l-0.72,-0.8l-0.39,-1.15l1.94,-2.5l1.7,0.23l1.97,-0.68l4.2,1.1l1.22,-0.35l0.47,-0.58l4.06,-0.85l0.02,2.26l0.73,0.56l0.0,0.32l-1.63,0.87l-0.35,1.23l0.91,0.74l0.52,1.11l1.32,0.58l0.99,0.05l1.02,0.72l-1.72,1.98l0.7,1.07l1.33,0.28l1.48,0.9l1.07,0.03l0.93,0.42l1.65,1.41l1.23,0.02l0.8,0.81l-0.11,1.23l0.61,1.55l0.77,0.54l1.0,0.15l1.4,1.12l1.68,0.03l1.93,2.13l2.75,0.32l2.0,-1.15l0.93,0.31l1.68,-0.17l0.42,1.19l0.62,0.34l0.55,0.9l0.83,0.29l0.65,1.15l2.23,-0.01l0.66,-0.27l0.35,-0.89l0.99,0.14l-0.12,0.99l0.57,1.23l1.31,0.94l2.38,0.77l-0.18,0.64l0.84,1.66l0.81,0.76l0.1,1.58l0.58,0.56l-0.22,1.36l3.64,5.54l2.47,1.21l0.69,1.29l-0.14,1.03l1.19,1.43l-0.16,2.51l0.74,0.68l-2.21,4.8l0.79,2.55l0.69,1.02l0.08,1.45l-4.25,4.86l-0.92,4.86l1.52,1.53l0.64,2.33l1.0,0.67l0.14,1.29l0.84,0.24l1.15,-0.54l1.61,0.07l2.22,1.48l1.82,0.29l0.94,-0.58l1.55,1.36l1.9,0.21l5.5,-0.28l2.19,1.09l4.21,0.32l5.51,-0.75l1.4,0.6l3.17,-0.04l1.22,0.48l1.37,-0.06l1.13,0.53l1.57,0.09l2.59,1.28l3.15,3.66l2.16,0.5l1.69,-0.21l1.29,1.2l0.89,1.39l1.57,0.28l2.18,1.17l1.69,1.71l5.09,1.63l4.74,-0.53l-0.88,1.84l0.01,2.81l0.37,0.35l2.82,0.72l2.29,5.83l2.04,3.92l0.63,2.92l6.26,5.73l0.52,0.97l0.24,2.37l-3.67,2.19l-0.71,1.0l-0.56,7.26l0.39,2.19l-2.49,2.52l-1.12,0.37l-4.19,-0.45l-6.38,1.19l-7.13,3.62l-8.52,8.56l-6.34,8.97l-4.04,1.95l-3.66,-0.35l-0.8,0.06l-0.97,0.54l-0.39,6.58l-1.98,3.16l-0.25,0.93l0.15,1.08l2.61,6.31l-0.24,4.52l-8.1,1.55l-1.82,1.3l-1.77,0.8l-7.19,1.96l-2.43,0.24l-2.5,1.14l-4.1,0.79l-5.22,0.38l-0.42,0.31l-0.2,0.76l-3.6,2.24l-0.83,0.31l-1.64,-0.05l-0.97,0.6l-0.14,0.86l0.63,1.56l3.61,5.63l0.11,1.12l-0.64,1.56l0.33,0.92l6.17,3.18l1.58,1.38l2.03,0.7l1.1,3.0l2.27,3.17l0.06,0.76l-0.27,0.33l-1.44,0.22l-2.75,1.17l-1.51,-0.15l-1.13,0.3l-2.15,2.41l-0.13,1.78l0.44,1.31l1.51,1.39l2.79,0.78l1.85,5.96l-0.13,0.68l-3.13,1.11l-0.69,-0.05l-3.08,-1.7l-6.84,-0.34l-0.93,-1.41l-1.09,-0.75l-0.6,0.4l-0.82,2.66l-0.94,0.19l-2.69,-0.27l-6.62,-3.03l-3.59,-0.23l-2.09,-1.6l-1.97,0.02l-2.69,-0.75l-0.73,-0.53l-1.25,-0.18l-5.91,0.45l-1.7,1.01l-4.57,0.58l-3.33,-0.68l-2.47,1.23l-5.78,0.69l-1.83,0.67l-2.82,-0.05l-1.01,0.86l-1.99,0.46l-0.99,0.57l-0.49,1.52l-0.85,0.89l-0.58,1.71l-1.77,1.7l-3.28,-0.03l-2.18,1.82l-0.45,-0.89l-1.39,-0.7l-1.22,-0.05l-1.41,0.41l-1.88,-0.31l-3.33,1.01l-2.17,1.49l-3.15,0.69l-5.67,3.03l-2.34,-0.7l-2.14,0.74l-3.67,0.25l-5.66,-1.07l-1.53,0.31l-1.94,-1.28l0.14,-1.98l-0.42,-0.86l-0.83,-0.52l-1.36,-0.16l-1.78,0.69l-4.41,-0.57l-1.46,0.83l-0.51,1.59l-3.17,1.75l-0.98,1.97l-4.16,1.19l-1.51,0.14l-2.62,-1.47l-3.07,0.14l-2.15,-1.22l-0.73,0.4l-0.19,1.18l-0.33,0.04l-1.53,-0.84l-1.75,-0.02l-1.28,-0.62l-2.63,-0.35l-3.12,-2.06l-0.78,0.54l0.0,1.57l-1.33,2.91l-2.17,2.34l-0.12,0.59l0.41,1.17l-1.5,0.46l-0.81,0.84l-0.0,0.72l0.44,1.43l0.67,0.94l0.01,0.63l-2.36,4.25l-0.71,0.17l-1.65,-0.75l-2.0,-0.23l-2.04,0.66l-2.1,-0.11l-3.36,1.54l-2.16,-1.07l-2.13,-1.91l-4.24,-0.88l-1.02,-0.64l-1.19,-3.62l-0.9,-1.51l-0.32,-1.99l-1.83,-3.42l0.78,-2.9l-0.16,-0.86l-0.37,-0.3l-1.06,-0.0l-1.36,1.0l-1.53,-1.11l-1.73,0.67l-2.2,-0.33l-1.45,0.15l-1.89,-0.98l-2.01,0.05l-1.48,-0.99l-1.82,0.03l-1.02,-0.96l-1.21,-0.12l-1.16,-1.05l-1.49,-0.59l0.01,-1.72l-0.14,-0.54l-0.54,-0.36l-1.89,0.77l-0.38,0.44l-3.14,0.4l-0.93,-2.7l-2.14,-0.63l-0.61,-0.74l-0.02,-0.47l1.04,-0.73l0.04,-0.85l0.64,-0.67l-0.67,-1.24l0.1,-2.71l-2.0,-3.29l-3.13,-1.93l-1.37,-0.2l-1.7,0.73l-0.64,-2.68l-1.16,-0.78l-1.75,-0.35l-1.46,-0.78l-2.49,0.29l-0.82,0.58l-1.05,-1.16l-1.17,-0.1l-0.67,-0.59l-2.15,0.43l-0.59,-0.84l-1.39,-0.75l0.99,-0.22l0.56,-0.88l1.84,-0.01l1.36,-1.04l0.82,1.29l1.82,-0.27l0.84,-0.83l1.72,-0.53l0.49,-1.19l0.9,-0.31l0.1,-0.72l-3.85,-3.21l-0.08,-0.6l1.18,-2.16l-0.18,-0.53l-0.96,-0.58l0.38,-0.65l-0.32,-0.55l-0.18,-2.09l-1.31,-1.01l-0.27,-3.42l0.97,-1.43l-0.04,-1.52l-1.27,-1.33l-1.01,-0.12l-0.76,-0.63l-4.67,-1.83l-1.68,0.29l-1.67,-0.28l-0.65,0.96l-0.66,0.28l0.08,1.14l-1.27,-0.04l-1.58,-0.9l-1.05,-2.15l-0.05,-1.42l-0.73,-0.98l0.35,-0.49l1.42,-0.3l0.36,-1.1l-1.83,-1.75l-0.46,-1.24l-0.94,-1.06l0.54,-2.29l-0.16,-1.37Z", "name": "Xinjiang"}, "CN-64": {"path": "M453.32,296.26l0.57,-0.91l1.08,-0.31l2.03,0.39l4.62,-0.77l0.76,-0.53l0.79,-1.19l2.56,-1.24l1.66,-0.46l2.0,0.5l2.11,-0.19l2.47,-1.4l0.54,-3.5l-1.04,-2.51l0.21,-0.66l0.81,-0.51l0.32,-0.78l-0.36,-2.31l0.27,-2.94l0.79,-2.76l2.4,-4.15l0.71,-2.31l1.68,-0.0l0.85,-0.66l-0.03,-2.05l2.98,-0.04l1.86,-1.28l1.99,-0.14l0.25,2.73l1.21,2.03l1.31,0.86l-0.69,1.5l-3.3,4.77l-0.95,3.19l-2.49,2.78l0.09,0.63l5.39,2.44l3.47,0.61l1.41,-0.41l2.2,1.13l0.96,1.32l0.47,1.4l3.39,0.95l-0.26,0.72l-2.01,0.24l-0.46,1.22l-2.36,2.01l0.13,0.95l-0.75,1.68l-0.48,2.16l0.76,0.98l0.54,1.57l-0.34,0.81l-2.16,-0.68l-2.98,0.27l-2.53,-1.64l-1.35,0.05l-0.64,0.57l-0.39,2.06l0.26,0.98l-0.93,1.43l1.12,2.04l-0.42,0.98l-0.8,-0.06l-0.98,0.65l-0.13,2.75l-0.9,0.7l0.94,1.3l0.12,1.26l-0.42,1.05l0.84,0.96l1.4,-0.26l1.96,1.16l1.16,-0.03l1.54,1.94l-0.13,1.47l-0.3,0.39l0.13,0.54l-1.15,0.59l0.9,1.72l-0.58,0.57l-1.18,0.42l-0.38,0.5l-0.54,-0.45l-2.06,-0.46l-1.43,0.12l-0.71,0.43l-0.14,0.71l0.63,1.71l-0.73,0.17l-0.15,0.51l0.41,0.86l0.81,0.35l-0.11,0.98l-0.39,1.15l-1.18,0.99l-2.08,-2.41l-1.88,-0.4l0.26,-0.5l-0.47,-0.55l-2.05,-0.64l-1.29,0.59l-1.89,-2.41l0.56,-0.79l-0.27,-0.46l-1.04,-0.15l-1.39,0.3l-1.84,-0.93l-1.47,-2.53l-0.08,-0.72l0.34,-1.08l1.4,-0.96l0.18,-2.79l-0.6,-1.95l-0.96,-1.01l-1.07,-2.09l-0.7,-2.42l1.3,-0.96l0.13,-0.82l-2.55,-3.46l-2.42,-0.94l-0.94,-0.75l-1.01,-2.08l-1.57,-0.65l-0.96,0.61l-0.72,-0.27l1.38,-1.1l-0.04,-0.58l-0.39,-0.36l0.41,-0.6l-0.33,-0.35l-3.56,-0.63l-1.0,0.55Z", "name": "Ningxia"}, "CN-63": {"path": "M233.37,320.67l0.65,-0.59l1.34,-0.43l4.34,0.12l0.93,-0.27l0.61,-0.67l0.53,-2.17l1.64,1.97l6.95,0.38l3.43,1.79l3.92,-1.17l0.65,-0.79l-0.0,-0.82l-1.91,-6.14l-0.73,-0.55l-1.95,-0.36l-1.05,-0.71l-0.82,-0.94l-0.1,-1.83l1.82,-2.22l2.46,-0.09l2.79,-1.18l1.73,-0.35l0.54,-0.83l-0.14,-1.32l-2.28,-3.14l-0.65,-2.31l-0.63,-0.91l-2.16,-0.8l-1.59,-1.39l-5.92,-2.98l-0.14,-0.5l0.66,-1.71l-0.19,-1.18l-3.65,-5.7l-0.55,-1.31l0.12,-0.41l2.0,-0.11l1.04,-0.39l3.69,-2.3l0.37,-0.9l6.68,-0.68l2.63,-0.51l2.51,-1.14l6.07,-1.08l3.64,-1.14l1.85,-0.83l1.7,-1.25l7.87,-1.51l1.71,0.06l1.58,-0.87l2.18,0.15l2.11,-0.56l1.7,-1.01l1.59,0.0l1.34,-0.49l2.36,0.41l3.65,-0.68l4.82,0.11l2.18,0.38l1.35,1.0l2.84,0.69l1.37,0.8l3.23,-0.16l1.18,-0.36l2.1,2.25l1.67,0.62l1.85,2.15l1.3,0.39l1.53,1.35l1.84,0.63l0.58,1.18l2.42,0.8l1.28,0.03l2.83,1.39l-0.11,0.92l0.65,0.68l3.24,1.36l2.47,0.5l0.83,-0.26l0.29,-0.73l0.18,-3.28l-0.45,-1.28l0.4,-0.35l0.2,-1.22l-0.15,-2.08l0.3,-2.32l-0.43,-1.89l0.54,-1.06l1.58,-0.15l3.23,0.89l10.68,5.98l2.97,-2.31l0.73,-1.46l1.51,1.1l2.11,0.23l1.36,-0.49l0.86,-0.75l0.44,-0.88l1.97,0.56l1.0,1.0l1.57,0.12l0.16,1.25l5.92,5.04l0.91,1.48l3.63,2.6l4.05,1.46l1.22,1.25l0.61,-0.21l0.13,-0.64l-0.28,-1.36l-1.0,-1.4l0.19,-1.18l2.84,2.84l2.88,0.76l0.48,0.62l0.44,1.66l0.65,0.6l6.12,2.44l3.58,2.81l5.89,3.43l1.04,1.22l0.67,0.12l0.44,-0.27l0.29,-1.4l1.5,-1.82l0.33,1.62l1.02,1.0l-0.47,0.9l0.19,0.82l1.59,1.06l1.06,0.14l1.95,1.58l1.14,0.45l1.72,1.81l0.01,0.31l-0.87,0.71l-0.52,2.34l3.23,2.8l-0.01,0.42l-1.2,0.69l0.04,0.97l1.51,1.17l1.02,1.83l0.85,3.02l1.12,0.29l1.77,1.23l-1.43,2.43l0.12,0.54l0.91,0.83l-0.44,0.9l0.19,1.24l-2.47,-0.36l-0.69,0.48l-0.6,-0.14l-0.37,0.27l-0.32,1.58l0.61,2.29l-0.21,1.29l-2.28,-0.31l-0.77,0.48l-0.89,1.21l-1.49,0.09l-0.54,0.32l-0.02,1.23l-0.56,1.32l0.38,0.39l0.54,0.02l0.78,1.11l-0.78,0.64l-0.7,1.25l-1.05,0.32l-1.57,1.3l-1.08,0.24l-1.22,1.1l-0.43,0.78l0.04,1.27l-0.79,-0.14l-1.58,1.22l0.06,0.82l0.71,0.84l0.86,0.16l0.85,-0.6l0.13,0.89l0.54,0.74l2.71,0.95l0.89,1.9l-0.52,0.36l-0.23,0.65l-1.02,0.21l-1.89,2.27l-1.23,-0.17l-1.22,1.21l-1.6,-1.01l-0.61,-0.96l-0.62,-0.28l-3.61,-0.85l-1.04,-0.69l-2.88,-0.49l-1.85,-0.94l-0.95,0.41l-1.43,1.59l-0.41,1.33l0.18,1.03l2.39,3.87l1.05,0.89l1.6,0.41l0.61,3.24l0.49,0.12l0.56,-0.32l1.32,0.56l0.99,0.01l1.81,-1.07l0.73,0.98l0.72,2.15l2.09,-0.04l-1.48,1.72l-0.04,1.24l0.88,0.76l-1.18,2.05l-1.15,-1.21l-1.4,-0.73l-0.82,0.18l-0.29,0.61l-0.82,-0.21l-1.58,0.54l-0.87,0.66l-0.68,2.03l-0.02,1.26l0.39,0.86l1.11,0.69l0.11,0.64l-1.05,2.01l-1.22,-0.13l-2.01,0.87l-1.15,-0.59l-2.59,-0.31l-1.28,3.99l-0.75,0.43l-0.44,-0.62l1.0,-0.77l0.33,-0.77l-1.2,-2.2l-1.69,-1.3l-2.06,0.48l-0.44,0.45l-0.23,1.07l-0.76,-0.17l0.47,-1.57l-0.3,-1.46l-1.54,-1.68l-1.42,-0.15l-1.12,-1.33l-0.77,0.13l-0.27,1.12l-1.07,0.62l-0.59,2.67l-2.51,-1.37l-3.4,-0.91l-1.27,-2.09l-4.84,-2.34l-1.28,-1.97l-0.38,-2.86l-1.72,-2.46l0.35,-0.48l-0.09,-0.47l-3.19,-3.13l-0.92,-0.32l-1.48,0.29l-0.15,-0.72l-0.71,-0.71l-3.0,-0.45l-2.49,1.32l-1.41,0.34l-0.07,-1.19l-0.63,-0.99l-1.25,-0.15l-0.56,1.19l-3.26,0.98l-0.51,0.83l0.39,1.79l0.03,2.29l1.23,0.75l0.27,1.17l0.48,0.59l2.87,0.93l-1.48,0.65l-1.86,2.4l-0.35,1.34l0.38,1.67l-1.38,0.71l-0.67,1.15l0.34,2.21l0.69,1.3l2.65,1.52l1.37,1.26l-0.71,0.83l-0.91,-0.61l-3.17,-0.25l-0.79,1.81l0.31,0.44l0.71,0.22l-0.3,0.9l0.15,0.51l-1.0,-0.06l-0.54,0.42l-0.52,1.62l0.26,1.16l-0.85,0.07l-0.64,0.86l-2.0,-0.17l-4.19,1.08l0.01,0.71l0.7,0.64l-0.58,1.09l0.69,1.56l-0.25,0.51l-1.38,-0.74l-2.67,-0.55l-2.26,-2.34l-0.78,-0.1l-1.33,0.52l-0.96,1.63l0.24,0.65l1.06,1.05l-0.16,2.22l-0.88,-2.27l-0.9,-0.6l-3.31,-0.03l-0.83,0.3l-0.72,-0.76l-1.32,-0.28l-2.16,0.29l-1.09,-0.94l-0.72,-2.25l1.01,-0.74l-0.19,-0.67l0.24,-0.8l-0.49,-1.28l-1.29,-0.49l-0.78,-0.95l-2.82,-0.23l-1.52,-1.02l-0.55,-2.14l-2.6,-1.4l-0.36,-0.81l-1.82,-1.48l-0.66,0.01l-2.41,1.28l-0.45,-0.37l-0.5,0.05l-0.48,1.13l-2.12,0.36l-0.97,0.7l-1.41,-0.04l-1.23,-0.47l-0.91,0.18l-0.74,-0.9l-1.16,-0.32l-2.1,0.14l-1.4,0.81l-0.61,-0.75l-1.23,-0.12l-2.45,-1.6l-2.24,0.16l-0.73,-1.4l-2.19,0.2l-1.76,-0.51l-1.27,0.31l-3.98,-0.49l-2.16,0.45l-0.24,-0.83l0.23,-0.75l-0.33,-0.44l-1.62,-0.35l-1.69,0.64l-2.31,-1.92l-1.35,-0.23l-2.56,-1.57l-2.32,-2.98l0.32,-0.77l-0.65,-0.51l-3.13,0.03l-0.55,0.49l-0.19,0.82l-2.72,0.28l-1.55,1.4l-0.78,0.19l-2.62,-0.77l-2.33,-1.63l-1.95,-0.25l-1.11,-1.45l-0.04,-1.63l-0.68,-1.06l-1.05,-0.71l-1.65,-0.44l-0.32,-1.38l-0.86,-0.64l-0.16,-1.05l-2.12,-1.57l-1.42,-2.34l0.19,-0.79l0.99,-0.23l0.93,-0.93l0.92,-2.84l-0.16,-0.72l-0.58,-0.34l-0.05,-2.32l-0.43,-1.8l-0.66,-0.9l1.31,-1.24l0.28,-0.92l-0.25,-1.0l-0.51,-0.6l-3.11,-0.3l0.11,-1.98l-1.68,-2.32l0.42,-0.66l0.0,-1.15l1.8,-0.57l1.91,-1.22l0.07,-0.71l-0.7,-0.56l0.44,-0.73l-0.11,-1.28l0.96,-1.82l0.2,-1.26l-0.61,-0.66l-2.09,0.04l-1.64,-0.48l-0.6,-0.7l-0.3,-1.04Z", "name": "Qinghai"}, "CN-62": {"path": "M284.85,266.52l0.23,-4.69l-2.74,-7.21l2.21,-3.95l0.32,-6.35l1.06,-0.2l3.79,0.34l4.41,-2.13l6.44,-9.08l8.32,-8.38l6.91,-3.53l6.27,-1.17l4.14,0.46l1.58,-0.54l2.78,-2.99l-0.38,-2.32l0.38,-6.35l0.54,-1.27l3.88,-2.31l11.82,-1.14l9.41,20.13l-2.56,2.22l-0.27,0.86l0.22,0.87l4.34,5.21l1.03,0.56l2.77,2.45l1.56,0.87l-1.29,5.84l0.24,0.71l5.68,-0.35l0.79,-0.42l2.57,-2.71l4.76,-1.87l4.99,-0.12l2.5,-1.02l1.4,-0.14l3.92,0.44l1.93,2.79l0.02,1.94l-2.7,3.25l-1.26,2.95l-4.23,2.57l-1.44,1.24l-1.55,2.21l0.36,0.56l4.69,0.29l2.4,1.61l4.33,1.47l0.91,0.94l0.42,1.52l2.31,0.87l0.62,1.23l4.44,0.25l0.34,1.31l-0.05,1.92l0.53,1.52l2.78,2.23l0.87,0.15l1.27,-0.44l-0.12,1.19l0.95,1.51l0.84,0.46l-0.29,0.59l0.38,0.66l1.44,0.18l2.54,1.06l3.98,-0.12l3.05,-3.4l-0.22,-0.68l-2.7,-2.72l2.45,-0.53l5.53,-2.01l0.67,-0.02l2.04,1.03l5.67,1.02l0.7,-0.22l1.93,-1.64l4.76,-2.26l4.14,-1.15l4.18,-0.19l-0.17,1.67l2.47,3.85l-0.03,0.84l-0.75,1.39l-1.52,0.94l-1.2,2.37l-1.48,1.89l-6.43,3.97l-0.08,0.51l0.72,1.28l0.59,2.8l-1.69,0.46l-0.38,0.45l-0.02,1.86l0.53,2.52l0.5,0.51l3.42,1.09l6.31,5.31l2.18,1.21l2.48,-0.09l1.03,-0.71l2.66,0.49l-0.03,0.5l0.51,0.49l-1.25,0.79l-0.2,0.6l0.34,0.54l1.08,0.48l1.16,-0.6l1.04,0.46l0.86,1.92l0.73,0.67l1.96,0.71l1.14,0.78l1.96,2.78l-1.24,0.75l-0.19,1.06l0.75,2.5l1.1,2.14l0.94,0.97l0.54,1.94l-0.15,2.08l-1.17,0.67l-0.47,0.77l-0.06,1.94l1.75,2.94l2.12,1.03l1.55,-0.25l0.23,1.22l2.03,2.45l0.81,0.08l0.88,-0.56l0.94,0.31l-1.81,0.39l-0.22,0.59l0.31,0.55l0.62,0.15l1.2,-0.4l2.45,0.26l1.88,2.27l0.57,0.35l0.74,-0.08l1.48,-1.34l0.44,-1.37l0.05,-1.44l-1.08,-0.75l1.12,-0.06l0.21,-0.56l-0.87,-0.89l-0.29,-1.25l1.91,-0.12l2.15,0.85l2.02,-1.03l0.97,-1.0l-0.01,-0.51l-0.78,-1.22l1.17,-0.59l-0.18,-0.67l0.32,-2.08l-0.4,-0.75l-1.61,-1.86l-1.2,0.04l-1.94,-1.16l-1.34,0.25l-0.45,-0.43l0.44,-0.73l-0.12,-1.47l-0.78,-1.02l0.73,-0.69l0.0,-2.49l1.58,-0.39l0.73,-1.41l-0.04,-0.86l-0.93,-1.36l0.78,-1.23l-0.22,-1.16l0.32,-1.8l0.33,-0.16l0.99,0.08l2.28,1.56l3.08,-0.25l1.59,0.41l0.34,0.28l0.24,2.85l3.31,0.42l0.12,0.54l0.5,0.29l2.25,0.3l2.68,1.11l0.82,1.25l1.06,0.3l-0.01,0.59l0.41,0.52l1.95,0.53l0.7,-0.45l0.48,0.41l1.4,0.33l1.2,1.4l2.66,0.6l1.14,0.99l-0.87,1.7l0.81,1.94l-0.32,2.08l-2.38,1.64l-0.36,0.57l0.47,1.45l-0.14,2.01l1.33,2.22l0.18,2.44l-1.38,1.6l-3.3,0.19l-1.19,-0.52l-3.13,1.16l-0.42,-0.58l-3.08,-0.98l-0.46,0.41l0.03,0.84l-0.72,0.22l-0.25,0.52l1.35,2.58l1.17,1.18l-1.4,0.35l-2.31,-0.2l-0.95,0.64l-2.84,-0.28l-1.34,0.8l-2.17,-2.33l-1.53,-0.41l-0.65,-0.5l-4.99,0.07l-1.47,0.95l-0.26,0.47l0.12,1.48l0.8,1.36l-0.09,0.38l-0.78,1.35l-1.03,0.66l-1.53,2.19l0.84,1.25l2.0,0.05l1.42,0.77l0.93,1.29l0.23,1.6l-1.59,-0.43l-1.0,0.28l-0.03,0.69l0.7,0.29l0.47,1.35l-0.87,0.21l-1.55,3.44l0.22,0.93l0.59,0.35l-0.34,0.54l0.19,1.66l1.28,1.37l-0.1,0.85l-0.56,0.17l-0.51,-0.87l-0.59,-0.29l-1.86,0.11l-1.72,0.79l-1.1,-0.87l-1.27,0.0l-0.83,0.99l-1.86,0.94l-0.62,1.46l-1.15,0.39l-0.19,0.96l0.66,1.29l1.43,0.84l0.93,0.13l-0.34,0.83l0.18,2.12l-0.23,0.61l-1.13,0.28l-1.89,1.13l-2.68,-0.57l-1.2,0.39l-0.74,1.32l0.92,1.4l-2.18,1.49l-1.12,-0.31l-1.14,1.08l-0.9,-0.7l-1.97,0.44l-1.24,-0.54l-2.64,-0.22l-1.16,-0.45l-2.23,-1.97l-1.54,-0.45l-0.02,-0.9l1.31,-0.57l0.54,-1.2l-0.17,-0.91l-1.58,-2.09l-0.21,-1.14l1.3,-0.29l0.22,-0.65l-0.41,-0.48l-1.07,-0.39l-1.64,-1.97l-0.0,-1.5l-0.5,-1.04l-1.01,-0.6l-2.62,-0.24l-2.19,0.18l-1.83,-0.68l-1.38,0.18l0.51,-1.26l-0.41,-0.6l-2.52,0.95l-2.13,-0.38l-0.44,-0.34l0.04,-1.26l-0.64,-0.76l0.15,-2.27l-0.26,-1.24l-0.53,-0.53l-1.49,-0.56l-0.94,-1.26l-0.64,-0.36l-2.51,0.59l-0.83,0.89l-1.93,1.05l-0.14,0.71l0.36,0.37l-1.93,0.25l-1.25,1.53l-1.3,-0.14l-1.78,0.81l0.01,0.53l1.15,1.55l-0.12,0.68l0.97,0.54l-0.27,0.3l0.18,0.61l0.34,0.07l-0.02,1.0l0.65,0.84l1.22,0.72l0.17,1.11l-0.97,0.71l-1.51,0.47l-0.69,0.91l-1.37,0.41l-0.76,1.38l-1.51,0.07l-1.35,1.13l-0.49,-1.28l0.9,-1.18l0.57,-1.68l-0.73,-2.39l-1.59,-1.08l-0.42,0.33l-0.11,0.92l-0.79,0.41l-0.99,-0.02l-0.7,-2.19l-1.08,-1.08l-2.1,1.07l-2.1,-0.57l-0.65,0.17l0.06,-1.53l-0.54,-1.37l-1.93,-0.67l-0.76,-0.68l-2.27,-3.68l0.24,-1.71l1.56,-1.5l1.71,0.9l2.89,0.5l0.96,0.66l3.6,0.84l1.0,1.11l2.12,1.23l1.58,-1.29l0.76,0.23l0.65,-0.19l0.26,-0.5l0.7,-0.34l0.09,-0.61l0.52,-0.23l0.28,-0.56l1.06,-0.24l1.02,-1.53l-1.06,-2.46l-1.29,-0.79l-1.56,-0.3l-0.81,-1.79l-0.56,-0.03l-0.93,0.64l-0.61,-0.75l1.12,-0.67l1.05,-0.12l0.36,-2.03l1.1,-0.99l1.08,-0.26l1.6,-1.32l1.19,-0.42l0.78,-1.34l0.86,-0.73l-0.06,-0.89l-0.96,-1.28l-0.5,-0.13l0.48,-0.97l-0.17,-0.68l1.7,-0.16l1.6,-1.67l2.1,0.36l0.63,-0.41l0.32,-1.23l-0.62,-2.8l0.17,-0.9l0.67,-0.03l0.5,-0.41l2.52,0.44l0.45,-0.21l-0.07,-1.83l0.44,-1.08l-1.03,-1.18l1.48,-2.19l0.03,-0.63l-2.25,-1.63l-0.98,-0.26l-0.61,-2.63l-1.08,-1.96l-1.47,-1.09l0.01,-0.36l1.07,-0.49l0.09,-1.21l-1.99,-1.98l-1.13,-0.64l0.45,-1.9l0.91,-0.86l-0.17,-0.93l-1.97,-2.05l-1.07,-0.4l-2.02,-1.63l-1.15,-0.19l-1.27,-0.81l0.37,-1.59l-1.01,-0.97l-0.58,-2.14l-0.88,0.09l-1.56,1.83l-0.55,1.62l-0.99,-1.19l-5.91,-3.44l-3.63,-2.84l-6.07,-2.41l-1.46,-2.81l-2.99,-0.84l-2.88,-2.88l-0.92,0.05l-0.45,1.47l0.03,0.64l1.02,1.86l-1.76,-1.1l-2.87,-0.84l-3.51,-2.52l-0.87,-1.44l-5.84,-4.95l0.07,-0.9l-0.35,-0.47l-1.74,-0.23l-0.99,-0.99l-1.92,-0.6l-0.86,0.06l-0.71,1.2l-1.21,0.81l-2.12,-0.16l-1.04,-0.97l-1.03,-0.12l-0.49,0.41l-0.55,1.27l-2.46,2.01l-10.29,-5.89l-3.47,-0.94l-1.97,0.22l-1.02,1.68l0.43,2.03l-0.3,2.27l0.15,2.04l-0.6,1.55l0.46,1.54l-0.18,3.03l-0.28,0.28l-2.26,-0.46l-3.14,-1.32l-0.29,-1.45l-3.15,-1.57l-1.42,-0.07l-2.11,-0.67l-0.51,-1.12l-1.97,-0.73l-1.74,-1.47l-0.99,-0.2l-1.84,-2.15l-1.69,-0.64l-2.34,-2.4l-4.53,0.52l-1.22,-0.76l-2.83,-0.69l-1.4,-1.02l-2.37,-0.41l-4.88,-0.11l-3.66,0.68l-2.29,-0.41l-1.54,0.51l-1.53,-0.01l-2.02,1.11l-2.03,0.49l-2.0,-0.17l-1.55,0.86l-0.8,-0.05Z", "name": "Gansu"}, "CN-61": {"path": "M472.9,364.06l1.1,-0.33l0.56,-1.41l1.85,-0.94l0.49,-0.82l0.86,-0.03l0.41,0.61l0.77,0.28l2.11,-0.81l1.41,-0.11l1.06,1.14l0.62,0.06l0.9,-0.53l0.21,-1.49l-1.31,-1.41l-0.17,-1.3l0.4,-0.32l0.08,-0.64l-0.88,-0.53l-0.08,-0.37l1.06,-1.83l0.29,-1.15l0.59,-0.0l0.41,-0.38l-0.45,-2.04l1.51,0.21l0.51,-1.02l-0.38,-1.77l-1.13,-1.46l-1.74,-0.93l-1.77,0.04l-0.43,-0.61l0.77,-0.61l0.62,-1.07l0.96,-0.6l0.92,-1.58l0.12,-0.85l-0.78,-1.23l-0.1,-1.28l0.92,-0.75l4.79,-0.1l0.51,0.45l1.38,0.33l0.67,0.95l1.9,1.57l1.05,-0.36l0.46,-0.49l2.77,0.28l1.04,-0.65l2.32,0.19l1.61,-0.4l0.47,-0.7l-2.39,-3.68l0.68,-0.37l0.15,-0.86l2.33,0.82l0.7,0.71l2.8,-1.14l0.66,-0.04l0.96,0.52l1.22,-0.26l2.08,0.09l0.79,-0.41l1.37,-1.76l-0.15,-2.84l-1.31,-2.09l0.11,-2.07l-0.46,-1.25l2.68,-2.02l0.37,-2.47l-0.8,-1.81l0.73,-0.98l0.05,-1.17l-1.39,-1.25l-1.37,-0.55l-1.34,-0.07l-1.06,-1.33l-1.63,-0.46l-0.51,-0.5l-0.58,0.02l-0.42,0.45l-1.49,-0.4l-0.08,-0.9l-1.28,-0.42l-1.02,-1.39l-2.81,-1.18l-2.13,-0.25l-0.15,-0.51l-0.61,-0.36l-2.84,-0.26l-0.15,-1.94l0.7,-1.98l-0.62,-1.86l-0.67,-0.69l1.19,-3.52l-0.11,-0.97l2.16,-1.69l0.35,-1.12l1.9,-0.18l0.72,-1.05l3.3,0.79l0.91,1.08l0.05,1.23l0.81,0.36l4.43,-0.01l2.46,-0.6l2.19,0.1l1.78,-0.29l0.57,-1.87l0.09,-2.81l0.51,-0.6l0.75,1.11l0.85,0.04l0.97,-1.33l0.53,-1.54l-0.05,-0.79l-1.15,-1.65l0.48,-1.99l0.85,-1.45l1.39,-1.32l0.41,-0.81l2.03,-1.14l0.16,-0.96l0.76,-0.37l0.45,-1.0l0.72,-0.46l0.88,0.09l0.53,-0.33l0.42,-1.03l0.91,-0.95l0.56,-1.76l2.02,-0.65l0.45,-0.79l1.68,-1.41l3.13,-1.72l0.1,-0.85l-0.94,-1.81l0.98,0.12l0.78,1.19l1.27,0.82l0.74,-0.08l0.64,-0.59l1.01,-0.3l1.19,1.72l0.99,0.5l0.78,-0.47l0.67,-1.32l2.45,-2.82l1.65,-0.99l1.08,-0.01l-1.21,1.82l-0.03,0.51l2.66,1.97l-1.52,3.73l-1.69,0.99l-0.45,0.63l0.39,1.36l-0.33,1.44l-1.57,3.31l0.35,1.51l-0.58,1.2l-1.11,0.5l-1.53,1.87l-1.36,0.53l-0.26,1.16l-0.73,0.28l-0.28,0.8l0.22,3.8l1.15,0.74l1.0,1.87l1.27,0.79l-0.43,0.26l-0.03,0.68l0.99,0.56l-0.26,0.63l0.31,0.93l-0.63,1.46l-1.57,1.02l-0.06,0.83l0.75,0.57l-0.22,0.7l-2.97,3.92l-1.39,0.85l0.64,0.96l-0.65,1.37l0.64,1.15l-0.54,0.48l0.63,1.05l-0.41,0.3l-0.02,0.45l1.38,1.65l0.18,0.98l-0.59,2.92l0.21,1.42l-0.38,2.08l0.95,4.35l0.73,0.65l0.22,2.22l0.64,1.86l-0.84,1.27l-0.15,1.21l-0.76,0.59l-2.37,3.45l-1.11,4.21l0.14,1.2l-0.51,1.4l0.28,2.49l0.39,0.56l0.81,0.37l-0.15,2.05l0.22,0.74l0.67,0.73l1.32,0.55l-0.62,0.83l0.01,0.81l0.77,0.81l1.91,0.87l-0.38,1.77l0.74,1.16l-0.69,1.13l0.02,0.61l2.37,1.37l0.7,1.71l2.53,1.74l0.46,1.32l-0.3,0.95l0.37,1.02l-0.51,1.49l-0.83,0.9l-1.32,0.19l-1.36,1.29l-0.68,-0.51l-0.62,0.02l-0.51,-1.28l-0.72,-0.38l-0.7,0.23l-0.95,0.97l-2.87,0.28l-1.73,-0.89l-2.22,-0.05l-1.26,-0.47l-1.87,0.03l-1.42,-0.38l-0.86,0.47l-1.19,-0.1l-1.11,0.99l-0.34,0.65l0.46,0.7l4.2,0.97l0.23,0.7l-0.53,1.3l0.41,0.79l1.01,0.42l1.14,-0.36l2.78,1.14l0.71,1.57l-0.12,1.01l0.33,0.52l-1.21,-0.07l-0.68,1.03l-1.93,-0.69l-0.94,0.34l-0.58,-0.46l-1.01,0.22l-0.96,-0.21l-1.34,1.21l-0.24,2.11l-0.93,0.63l-0.22,0.6l0.87,1.96l1.07,0.56l0.23,1.29l0.59,0.71l-0.9,2.01l0.05,1.95l-0.51,1.16l-3.2,0.37l-0.91,-0.48l-0.95,-1.58l-1.14,-1.15l-6.68,-3.37l-2.1,-1.38l-0.9,-1.01l-3.36,-0.16l-0.92,0.46l-1.82,0.09l-0.85,0.47l-0.34,0.82l-1.62,-1.01l-1.01,-1.35l-1.91,-1.46l-2.71,-0.27l-0.19,-1.67l-0.39,-0.45l-1.18,0.15l-1.55,1.25l-0.7,-0.06l-1.74,-0.96l0.39,-2.28l-0.92,-1.07l-3.18,-0.06l-1.84,-0.4l-1.53,1.03l-3.66,0.62l-1.95,0.81l-2.16,-1.56l-0.05,-0.7l0.68,-1.75l-0.71,-0.62l-3.15,0.49l-1.11,1.47l-1.06,-0.09l-1.74,0.89l-0.89,-2.41l1.48,0.24l1.51,-0.39l1.01,-0.83l1.19,-0.24l0.64,-1.25l-0.18,-2.14l0.31,-1.36l-2.68,-1.22l-0.3,-1.08Z", "name": "Shaanxi"}, "CN-23": {"path": "M700.34,19.63l4.7,-3.47l2.81,-2.7l1.65,-2.32l-0.53,-1.85l-1.3,-0.86l-0.63,-1.7l-2.71,-1.38l2.61,-1.27l3.54,-0.89l2.95,-0.01l1.24,-0.77l2.04,-0.52l1.3,0.89l1.07,-0.28l5.65,-0.18l2.16,-0.67l2.3,-0.14l1.42,-1.08l0.99,0.1l2.06,0.88l0.57,-0.23l0.39,0.31l0.65,-0.25l0.49,-0.67l1.24,1.01l2.21,0.31l1.62,0.74l0.68,0.95l1.56,1.1l1.97,-0.43l1.22,1.99l0.69,0.59l1.85,0.7l2.16,0.09l0.87,1.12l1.39,-0.01l0.94,0.9l0.7,-0.21l0.21,-0.43l-0.13,-0.95l2.33,-0.46l5.65,2.47l0.77,0.88l1.47,-0.33l0.35,0.65l1.03,0.72l-1.16,1.22l0.19,0.88l0.56,0.16l2.33,-0.55l0.09,0.83l1.74,1.85l1.45,-0.23l-0.59,0.42l0.26,0.99l-1.13,0.64l-0.07,1.12l0.78,1.08l1.15,-0.4l1.48,0.95l-0.16,1.05l0.33,0.4l0.97,0.06l0.87,1.25l-0.42,1.09l0.14,0.52l0.98,0.44l-1.03,0.63l-0.1,1.04l3.46,1.33l-0.53,1.29l-1.02,0.69l-0.11,0.65l3.11,5.13l1.05,0.53l-0.22,0.46l0.23,0.74l-0.69,1.33l0.5,0.54l1.67,0.75l-0.47,0.92l0.15,1.0l1.56,0.47l-1.14,0.69l-0.3,1.37l0.65,0.87l0.9,-0.05l-0.17,1.46l0.46,2.17l1.48,1.77l1.64,1.34l1.1,2.19l0.99,0.78l-0.02,1.31l1.14,1.83l-1.04,1.86l-0.01,0.52l0.94,0.85l-0.35,1.76l1.23,1.14l2.53,1.08l-0.25,1.18l-1.28,2.25l0.11,1.01l0.57,1.01l-0.37,1.86l0.52,0.84l1.67,0.56l0.82,1.99l2.44,1.54l1.05,0.07l0.62,-0.42l1.4,1.07l2.02,0.16l1.05,-0.35l1.18,0.17l0.6,-0.6l3.7,0.03l0.49,-0.52l1.48,0.55l-0.77,1.28l0.44,0.71l1.76,-0.16l1.67,0.71l0.88,1.4l0.96,0.38l1.54,-0.79l1.42,0.88l0.61,0.01l0.65,-0.74l0.02,-0.88l1.03,0.11l0.47,0.45l0.42,1.92l0.55,0.36l1.85,0.08l0.42,1.4l1.41,0.54l-0.05,0.81l1.09,0.72l0.24,1.12l0.85,0.33l3.3,2.48l0.99,0.41l2.69,-0.6l0.59,0.59l0.92,0.22l1.56,-0.42l-2.0,3.98l-0.05,0.71l0.32,0.51l0.98,0.49l-0.07,0.93l0.37,0.78l1.73,-0.25l-0.23,1.31l0.58,1.16l0.6,0.44l0.0,0.46l-0.69,0.82l-0.32,1.0l-1.15,1.06l-0.03,1.57l3.47,3.54l0.45,1.06l0.0,1.87l0.51,0.55l2.02,0.62l5.14,-1.24l2.48,1.49l1.41,-0.64l3.12,0.53l1.68,-0.56l1.99,0.14l2.53,-0.87l2.82,0.54l1.16,-0.96l-0.04,-0.9l1.37,-1.7l-0.03,-1.09l1.18,0.4l0.68,-0.09l0.94,-0.97l2.44,-1.31l0.78,-0.89l1.77,-0.34l1.15,0.46l3.45,0.08l0.65,-0.42l0.51,-0.96l1.12,-0.49l0.8,-1.03l3.36,-0.53l1.35,-0.92l4.66,-0.97l1.21,0.73l1.0,-0.15l0.91,1.09l1.13,0.48l-0.2,1.93l-1.63,1.67l-0.18,0.91l0.54,1.14l-0.08,0.53l1.03,0.75l0.27,1.14l1.3,1.52l0.0,0.37l-1.09,1.1l-0.15,1.08l-1.8,2.03l-0.89,0.7l-0.94,-0.18l-1.58,0.38l-2.13,1.96l-0.44,1.56l1.03,2.51l-1.3,0.52l-0.95,1.8l-0.13,1.46l-0.68,1.66l0.39,1.01l-0.42,1.82l-1.57,1.54l-0.91,2.05l0.14,0.75l1.11,0.87l-0.89,0.64l0.46,1.57l-0.66,0.72l-0.65,-0.09l-0.89,1.07l-0.8,0.33l-0.14,0.42l0.46,1.25l-0.79,2.05l-0.6,0.11l-0.41,0.84l-1.03,0.14l-0.65,1.18l0.15,0.95l-0.67,1.53l0.54,0.41l-0.28,0.61l-0.48,0.27l-0.22,0.59l-2.91,1.16l-0.54,0.5l-0.71,1.41l-0.48,2.47l0.27,2.84l-1.26,1.08l-1.16,0.5l-0.94,-0.45l-0.29,-1.51l-1.04,-1.64l-2.81,-1.47l-2.41,-0.58l-3.39,0.07l-1.41,0.52l-1.65,1.33l-0.7,-0.4l-0.68,-1.23l-0.58,-0.29l-1.22,0.72l-0.92,1.62l-1.42,0.35l-0.41,0.85l0.15,1.1l-2.5,2.24l-1.42,-0.13l-2.22,1.16l-0.9,-0.3l-0.95,0.21l-0.52,0.9l-1.5,0.64l0.02,0.59l1.95,2.52l2.86,11.11l-0.69,0.79l0.04,1.83l-0.69,2.33l0.31,3.46l-0.42,1.2l0.84,0.83l-0.93,0.4l-1.0,-1.07l-0.94,-0.28l-2.0,1.28l-0.69,-1.25l-2.71,-1.93l-3.05,-0.97l0.27,-1.04l-0.63,-0.93l-0.58,-2.37l0.15,-2.01l-0.55,-0.48l-0.56,0.32l-0.65,1.54l-1.44,0.71l-0.89,1.12l-0.63,-0.19l-0.49,-2.26l-1.64,-0.72l-1.77,1.08l-0.33,1.49l-4.24,0.31l-3.54,1.41l-0.63,1.03l0.27,2.19l-3.08,1.17l-1.5,-0.3l-1.59,-2.59l-0.25,-1.66l-1.73,-2.02l-1.59,-3.16l-1.1,-1.12l-0.08,-4.36l-0.33,-1.01l-0.89,-1.04l-1.04,0.1l-1.75,0.96l-1.0,1.75l-0.99,-0.42l-0.46,0.22l-0.07,4.39l-2.55,0.92l-0.88,-0.2l-0.33,-0.19l-0.51,-1.42l-1.42,-0.93l0.05,-1.06l-1.72,-2.22l0.35,-0.93l-0.15,-0.74l1.07,-0.45l-0.53,-1.18l-2.73,-1.34l-1.91,0.65l-0.54,-0.63l-0.67,-0.22l-0.73,0.21l-0.82,1.07l-0.14,-2.25l-0.79,-1.63l0.37,-0.65l0.88,-0.48l0.19,-0.91l-2.1,-4.0l-2.28,-0.2l-2.52,-1.55l-1.07,-0.31l-2.38,0.4l-2.52,1.3l-1.2,0.18l-3.34,-1.12l-1.31,-0.73l-1.15,-1.12l-0.32,-0.58l-0.1,-2.82l-0.39,-0.35l-1.29,0.09l-1.35,0.65l-1.18,-0.2l-0.46,0.32l-0.57,1.2l-0.87,-0.32l-2.98,0.38l-0.79,-1.73l-1.3,-0.06l-0.74,-0.7l-0.63,0.39l-0.27,1.24l-1.38,-0.48l-0.61,0.36l-2.17,-0.01l-0.31,0.67l-1.22,-0.86l-1.0,0.17l-0.32,-1.43l-1.22,-0.29l-0.9,-1.62l-0.69,0.14l-0.11,-0.62l-1.77,-1.67l0.38,-0.47l-0.19,-0.63l0.22,-0.89l-1.26,-1.31l0.97,-1.46l-1.19,-3.03l-0.19,-2.06l-0.47,-0.11l-0.52,0.3l-0.72,-0.24l-1.45,0.55l-5.87,0.45l-1.85,-0.56l-1.06,0.59l-2.15,-2.93l0.29,-3.3l0.8,-0.14l2.93,0.66l1.8,-0.26l2.11,-1.79l1.16,-1.65l0.3,-0.75l-0.52,-1.41l-0.83,-0.23l-0.79,1.07l-0.54,-1.27l-1.43,-0.28l-1.01,1.4l-0.93,0.21l-0.89,0.89l-0.7,-0.2l-1.76,-1.12l-3.09,-3.73l-3.13,-1.67l-2.3,-3.49l1.17,-1.19l0.97,-2.18l9.4,-5.27l1.22,-2.43l2.89,-1.2l1.36,-0.9l2.25,-2.61l5.13,-4.81l2.2,-1.49l0.52,0.64l0.18,2.53l1.11,1.65l0.43,1.62l0.7,0.52l0.17,0.66l0.64,0.2l0.56,-0.32l0.76,-2.35l-0.05,-1.57l-0.51,-1.08l0.34,-2.84l-0.21,-0.54l1.07,-1.41l0.25,-2.03l2.89,-5.94l0.05,-1.1l0.45,-0.89l1.99,0.26l0.68,0.52l1.18,-0.05l1.61,-1.89l0.03,-1.35l0.39,-0.92l-0.18,-0.95l0.39,-0.91l-0.65,-1.73l0.18,-0.67l-0.91,-1.25l0.69,-0.82l0.05,-2.29l-0.42,-0.62l0.37,-0.18l0.32,-1.1l-0.51,-1.04l1.09,-0.94l0.09,-0.78l0.47,-0.29l-0.08,-0.68l-0.72,-0.35l1.06,-0.32l0.23,-0.85l1.15,-0.57l0.44,-1.75l0.64,-0.47l0.36,-1.38l0.66,-0.33l-0.02,-0.55l0.89,-0.24l1.06,-1.09l1.3,-0.69l0.27,-0.7l-0.29,-2.13l0.25,-0.61l-0.56,-0.84l0.76,-0.2l1.66,-1.93l0.65,-0.02l0.96,-1.51l0.17,-0.99l-0.34,-1.19l-0.71,-0.7l-0.19,-0.74l-1.59,-0.76l-0.54,-1.26l-0.72,-0.13l-1.17,-0.92l-0.81,-1.49l-1.16,-1.04l-1.23,-2.19l-2.37,-1.56l-3.13,-0.68l-1.11,0.35l-0.46,1.72l-1.28,0.45l-0.33,0.99l-1.03,0.54l-0.5,0.82l-2.2,0.58l-3.02,-0.38l-0.47,0.38l-0.22,0.79l-0.7,0.3l-1.02,-0.04l-1.89,-0.9l-2.4,0.51l-2.32,-0.18l-0.86,0.56l-0.38,1.23l-2.05,0.44l-0.64,-0.12l-0.86,-1.0l-0.71,-0.3l-2.91,0.07l-1.31,-0.96l-1.23,0.12l-2.89,-2.55l-0.59,-1.07l-0.07,-1.18l-1.84,-2.77l0.74,-1.46l0.04,-0.72l-1.88,-5.65l1.86,-1.08l0.26,-0.96l-0.5,-0.73l-3.7,-0.9l-2.31,-3.24l-2.27,-0.88l-0.85,0.42l-2.17,3.75l-1.36,0.41l-1.03,-0.2l-1.81,-2.22l-3.13,-1.21l-2.43,-1.72l-2.01,-0.71ZM784.36,45.67l0.01,-0.74l0.56,-0.19l-0.11,0.32l-0.46,0.61Z", "name": "Heilongjiang"}, "CN-22": {"path": "M707.39,150.05l1.2,-0.92l1.06,-1.91l0.07,-1.04l-0.56,-0.87l2.86,0.68l0.67,0.84l2.9,2.18l1.1,-0.51l1.39,-1.93l1.2,2.35l2.06,1.63l1.09,0.33l1.38,-1.55l-0.03,-1.53l0.47,-0.96l-0.04,-2.98l4.0,-0.39l1.05,-1.87l0.97,-0.9l1.83,0.56l5.97,-0.46l1.5,-0.54l0.34,0.36l0.61,-0.08l0.04,1.22l0.95,2.75l-0.65,0.95l-0.08,0.89l1.26,1.26l-0.13,1.08l-0.48,0.4l0.06,0.64l1.43,1.22l0.5,1.39l1.09,0.08l0.87,1.35l1.04,0.13l-0.07,0.65l0.6,0.95l1.26,-0.07l0.58,0.69l0.82,0.19l0.55,-0.13l0.28,-0.5l2.27,-0.25l1.57,0.34l0.53,-0.35l0.24,-0.97l0.47,0.39l0.96,-0.03l0.61,1.71l0.62,0.24l2.01,-0.43l2.0,0.28l0.73,-0.36l0.51,-1.19l1.08,0.22l1.27,-0.63l0.9,-0.01l0.05,2.44l0.43,0.85l1.28,1.29l1.57,0.89l3.53,1.19l1.46,-0.2l2.59,-1.33l2.12,-0.36l3.38,1.83l2.17,0.17l1.65,3.36l-0.06,0.33l-1.0,0.63l-0.39,0.95l0.81,1.84l0.27,2.54l1.01,0.29l1.19,-1.24l0.93,0.81l1.97,-0.64l2.44,1.18l-0.77,0.76l0.11,0.9l-0.35,1.2l1.8,2.42l-0.05,1.1l1.53,1.12l0.41,1.23l0.68,0.5l1.37,0.28l2.97,-1.14l0.35,-0.71l-0.14,-3.43l1.15,0.07l0.96,-1.71l2.05,-1.08l0.61,0.78l0.38,1.67l-0.01,3.6l1.14,1.19l0.43,1.29l1.21,1.94l1.66,1.93l0.22,1.6l1.98,2.97l1.99,0.36l3.36,-1.28l0.39,-0.56l-0.31,-2.16l0.31,-0.53l1.57,-0.4l1.7,-0.89l4.39,-0.37l0.49,-0.59l0.11,-1.11l1.31,-0.8l0.93,0.54l0.43,2.21l0.99,0.42l0.65,-0.1l0.98,-1.18l1.37,-0.65l0.39,-0.5l0.59,3.01l0.62,0.92l-0.28,0.91l0.27,0.6l3.18,1.04l2.57,1.83l0.97,1.41l1.12,-0.19l1.26,-1.07l1.54,1.32l2.03,-0.51l0.07,0.97l-0.48,0.69l-0.13,1.32l-1.03,1.28l0.26,1.28l-1.58,1.7l0.33,2.03l-0.98,0.15l-0.49,0.76l-3.07,-0.3l-0.61,0.7l-2.19,0.2l-2.69,1.49l-0.53,0.82l0.07,0.49l0.6,0.45l1.59,0.12l0.7,0.96l-0.11,0.43l-0.44,-1.02l-0.55,-0.09l-0.53,0.32l-0.61,-0.23l-1.77,-1.69l-0.23,-1.04l0.21,-1.48l-0.28,-0.84l-1.76,-0.34l0.23,-0.68l-0.3,-0.53l-2.02,0.26l-0.76,-0.75l-0.82,-0.03l-1.02,1.05l-1.33,3.85l-0.07,0.9l0.32,0.44l-0.5,0.66l-0.46,3.14l-1.37,-0.13l-0.86,1.13l-1.25,-0.93l-1.72,-0.15l-0.79,1.06l-0.88,0.27l-0.19,0.92l-0.59,0.4l0.32,0.48l-0.47,0.58l0.21,0.69l-1.01,0.93l-0.37,-0.12l-0.98,0.93l-1.04,0.38l-0.32,0.81l-2.89,-0.29l-0.45,0.35l-1.37,-0.02l-1.46,0.57l-3.46,-0.64l-3.69,0.84l-0.29,0.73l0.46,2.01l0.65,0.51l1.07,2.28l1.37,0.94l0.56,1.09l-1.99,3.15l-0.3,-0.35l-0.59,0.15l-0.8,-1.3l-1.8,-0.06l-0.83,0.59l-2.71,-0.26l-0.37,0.21l-1.52,-0.95l-3.17,-0.09l-0.23,-0.55l-1.21,-0.33l-0.92,0.27l0.5,-0.21l0.13,-0.68l-1.77,-1.02l0.34,-0.55l-0.46,-0.82l-2.15,-1.49l-2.11,1.64l-0.85,-0.58l-0.76,0.09l-0.21,0.56l0.35,0.43l-1.25,0.42l-0.8,1.09l0.17,0.79l-1.11,2.23l0.18,0.95l-0.92,0.38l-0.8,0.85l-1.72,2.64l-2.18,1.32l-0.02,0.62l-1.16,1.69l-0.84,0.36l-0.05,0.46l-0.4,0.18l-0.6,-0.31l-1.09,0.49l-0.95,-0.26l-0.53,0.39l-0.35,-0.48l-1.01,-0.13l1.25,-1.24l0.52,-1.96l0.64,-0.54l-0.31,-1.89l-1.43,-0.98l-0.24,-0.94l-1.06,-1.23l-1.43,-3.02l-0.3,-1.77l-1.91,0.01l0.21,-1.04l-0.61,-1.36l0.15,-2.0l0.8,-0.5l1.47,-2.08l0.38,-1.31l-1.6,-0.66l-0.8,0.2l-0.44,-0.9l-0.11,-1.35l-1.51,-0.56l0.45,-0.47l0.05,-0.65l-1.59,-1.66l-0.15,-1.54l-1.27,-1.38l-0.57,-0.19l0.25,-0.99l-0.4,-1.24l-1.27,-0.44l0.11,-5.14l-0.49,-0.38l-1.81,0.31l-1.15,1.04l-0.86,1.63l-1.86,1.67l-1.06,-0.44l0.74,-0.71l-0.97,-1.12l0.6,-0.94l0.07,-0.72l-1.76,-1.18l-0.12,-1.03l-0.45,-0.55l-1.64,-0.44l-1.03,-0.8l-1.11,-0.06l-3.52,-2.9l-0.92,0.08l-0.93,1.88l-4.06,-1.75l-0.1,-0.84l1.0,-0.97l1.02,0.01l0.37,-0.47l0.16,-1.59l-3.0,-6.39l0.57,-0.81l-0.06,-1.24l-1.67,-1.2l-1.06,-2.59l-0.8,-0.7l0.08,-1.72l-0.65,-0.89l-1.09,0.38l-1.32,1.2l-3.3,1.93l-1.34,0.28l-0.64,0.59l-3.12,1.25l-1.07,0.09l-0.19,-0.27l0.29,-3.55l-2.82,-3.33l-0.62,-1.42l0.06,-1.31l-0.36,-1.33l0.24,-1.43l-0.47,-2.85l0.28,-0.66l1.63,-0.59l1.3,-1.22l0.17,-1.0l-0.42,-1.51l-1.3,-1.99l-1.6,-0.58l-0.53,-0.69l0.15,-1.79l-0.82,-1.17l-1.17,-0.34l-1.68,0.48l-1.19,-0.69Z", "name": "Jilin"}, "CN-21": {"path": "M666.84,235.87l0.83,0.14l0.63,-0.35l0.13,-0.99l-1.13,-0.64l1.29,-0.38l2.04,-1.67l1.05,-1.75l1.85,-1.71l0.4,-0.74l0.01,-2.16l-0.46,-1.81l-0.52,-0.72l-0.22,-1.96l0.47,-1.57l-0.14,-1.64l0.67,-1.02l0.1,-1.12l-0.25,-0.62l-1.63,-1.37l1.24,-1.43l1.82,-0.58l0.63,-1.06l0.56,0.51l-0.0,0.52l0.86,1.54l2.87,0.66l-0.6,0.58l-0.0,0.52l1.2,1.2l0.23,1.24l1.12,0.6l0.13,0.9l0.72,0.85l0.03,2.62l0.52,0.4l0.91,-0.02l0.52,-0.41l0.35,-1.28l1.74,-1.58l1.0,-1.37l1.92,-1.21l0.55,-1.16l-0.06,-0.86l1.84,-0.24l1.62,-1.21l2.49,-1.16l1.0,0.78l0.62,-0.03l5.36,-4.51l2.31,-0.49l1.01,1.35l1.71,-0.0l2.41,-1.55l0.83,-2.38l1.42,-0.71l3.37,1.48l1.93,-0.4l0.56,-0.46l0.18,-0.71l-0.89,-1.54l-0.09,-0.72l1.79,0.31l3.55,1.84l2.09,-0.23l1.13,-0.75l1.49,-0.08l1.21,-0.89l0.68,-2.03l1.03,-0.83l5.31,-1.59l1.29,-4.41l0.01,-1.52l0.53,-0.82l3.52,2.88l1.23,0.11l0.92,0.76l1.66,0.46l0.32,1.38l1.59,0.94l-0.7,1.17l0.21,0.89l0.49,0.39l-0.49,0.44l0.04,0.76l1.12,0.34l0.44,0.46l1.02,-0.37l1.68,-1.56l0.7,-0.86l0.24,-0.88l0.98,-0.86l1.18,-0.07l-0.38,4.27l0.39,0.98l1.2,0.42l0.19,0.78l-0.44,1.37l0.45,0.37l0.58,-0.08l1.09,1.17l0.21,1.63l1.46,1.44l-0.47,0.49l0.02,0.74l1.6,0.7l-0.03,1.1l0.65,1.32l2.13,0.16l-1.63,2.46l-1.07,0.81l-0.08,2.33l0.61,1.39l-0.31,1.18l0.95,0.57l1.22,-0.19l0.17,1.36l1.48,3.14l1.07,1.26l0.29,1.04l1.34,0.79l0.17,1.33l-0.47,0.41l-0.46,1.88l-1.68,1.59l0.25,0.81l1.43,0.13l-0.68,0.85l0.17,0.72l-1.17,-0.34l-0.44,1.04l-1.08,0.23l-0.94,1.22l-1.55,-0.15l-0.63,0.61l-3.32,1.38l-0.41,0.59l0.3,0.74l-1.99,-0.31l-1.31,1.47l-0.86,0.4l-0.49,1.07l-2.05,1.0l-3.15,2.86l-0.13,1.61l-0.83,1.07l-2.28,1.58l-0.73,-0.15l-1.22,0.56l-0.8,-0.44l-0.66,0.28l-1.17,-0.25l-0.58,0.3l-1.21,-0.55l-0.05,-0.66l-0.51,-0.49l-0.64,0.54l-0.49,1.88l-1.03,-0.3l-0.96,0.92l0.16,-0.94l-0.35,-0.47l-0.61,0.16l-0.17,0.48l-0.74,0.12l-1.18,-0.6l-0.45,0.51l0.18,0.53l-0.54,0.22l-0.12,0.42l0.66,0.6l-1.18,0.31l-0.72,-0.37l-1.18,0.11l-0.92,0.64l0.12,0.46l-1.88,0.08l-2.19,1.58l-0.8,-0.05l-0.57,0.81l-0.61,-0.1l-0.95,1.01l-1.33,0.23l-1.82,1.2l-0.78,1.16l-1.7,1.33l-0.33,1.0l0.2,0.26l-0.93,0.55l-0.18,0.51l-1.06,0.41l-1.67,0.02l-0.4,0.55l-0.92,-0.5l-1.68,0.68l-0.24,0.43l0.26,0.23l-0.86,0.33l0.02,0.61l1.55,0.55l-1.86,0.17l-1.01,0.81l-3.5,0.21l-0.67,0.56l0.16,0.28l-0.42,0.46l-0.57,-1.68l0.58,-0.83l-0.65,-0.55l1.27,0.12l1.74,-0.49l0.37,-0.35l-0.11,-0.78l0.32,-0.15l0.56,0.46l0.86,0.02l3.12,-1.29l0.42,-1.03l-0.7,-0.98l-0.56,-0.25l0.34,-0.76l1.24,-0.65l0.66,-1.14l1.33,-0.03l1.11,-0.49l0.28,-0.59l-0.62,-0.5l-1.21,0.51l-2.01,-0.15l-0.29,0.45l-2.19,0.11l-1.3,-2.46l-1.38,-0.28l-0.71,0.32l-0.37,-0.39l0.55,-0.48l2.01,-0.27l0.51,-0.49l0.86,0.3l0.39,-1.45l-1.12,-0.99l0.06,-0.91l0.69,-0.7l1.08,-0.22l1.05,-0.89l1.43,-0.05l1.52,-1.28l0.06,-0.83l0.85,-1.04l0.94,-0.56l0.12,-0.88l1.28,-0.87l0.27,-1.43l1.42,-1.12l0.05,-0.68l0.4,-0.1l0.88,-1.34l-0.36,-1.23l-1.87,-1.11l0.36,-0.54l-0.19,-1.08l-0.75,0.04l-0.98,-0.93l-2.78,-1.39l-0.28,-1.62l0.61,-0.72l-0.05,-0.48l-0.6,-0.18l-0.95,0.67l-0.94,1.84l-2.14,0.1l-3.05,-1.65l-1.22,0.67l-0.89,-0.48l-0.94,0.11l-1.51,1.09l-0.15,0.73l-0.76,-0.29l-0.72,0.37l-0.63,1.46l0.36,0.58l-1.77,0.41l-0.55,1.42l-1.69,1.29l-0.29,0.64l-0.77,0.32l-0.27,0.85l-0.76,0.47l0.04,0.77l-0.7,0.64l0.05,1.25l-0.35,0.42l-2.27,0.53l-0.73,0.57l-4.53,1.56l-1.12,1.08l-1.47,-1.46l-0.02,-2.05l-1.55,-0.29l0.04,-0.85l-0.79,-1.44l0.24,-2.16l-0.55,-1.07l-0.55,-0.29l-3.58,0.26l-0.72,-0.43l-0.62,-0.9l0.12,-1.13l-0.54,-0.57l-1.76,0.9l-2.81,-2.8l0.73,-1.82ZM709.56,269.63l0.5,0.25l0.03,0.04l-0.11,0.09l-0.42,-0.38ZM726.69,260.45l0.18,0.04l-0.17,0.03l-0.01,-0.06ZM703.25,261.71l0.04,-0.0l-0.03,0.03l-0.01,-0.02ZM703.3,262.35l0.06,0.35l-0.37,-0.0l0.26,-0.25l0.05,-0.1Z", "name": "Liaoning"}}, "height": 603.7310048504178, "projection": {"type": "mill", "centralMeridian": 0.0}, "width": 900.0});
jQuery.fn.vectorMap('addMap', 'de_mill_en',{"insets": [{"width": 900, "top": 0, "height": 1013.8952766123396, "bbox": [{"y": -6845388.062206638, "x": 651826.6317576179}, {"y": -5694876.55460837, "x": 1673096.1659230748}], "left": 0}], "paths": {"DE-BE": {"path": "M710.94,355.66l1.16,-1.31l0.31,-1.0l0.98,-0.97l-0.74,-2.05l0.47,-2.19l1.42,-0.94l2.79,-2.88l-0.08,-0.98l-1.47,-2.18l0.73,-6.66l-0.34,-1.33l0.64,-1.38l4.96,1.6l1.09,-0.07l0.35,-0.78l-0.73,-1.75l1.04,-2.7l2.87,-0.39l1.06,-0.5l1.18,-0.91l1.37,-2.19l0.63,0.01l0.3,2.64l0.85,0.92l1.79,0.65l3.7,0.21l1.86,-0.49l0.87,-1.38l2.02,-1.38l1.68,0.91l0.97,-0.04l0.86,-1.18l2.39,-1.71l0.8,1.09l1.68,1.32l-0.23,3.06l0.52,1.47l6.52,6.23l4.25,2.44l3.3,0.77l0.05,0.57l-2.28,4.44l-0.17,0.98l0.34,0.75l0.38,0.19l3.64,-0.35l1.11,0.49l1.94,1.99l3.86,1.43l1.24,1.07l-1.08,1.15l-0.45,2.45l-2.59,2.1l-0.44,1.05l0.23,1.98l-0.26,1.22l-0.52,0.43l-2.57,0.78l-1.68,2.53l-0.48,-0.04l-0.58,-4.22l-1.2,-1.24l-1.76,0.03l-2.4,-0.66l-5.7,-2.14l-1.45,0.18l-1.06,0.71l-1.67,-0.06l-1.51,-1.94l-1.09,-0.45l-2.61,0.59l-0.84,0.51l-0.39,0.91l0.23,2.67l-2.7,-0.01l-1.66,-0.65l-2.96,-2.75l-3.67,0.8l-1.15,-1.62l-0.5,-0.23l-4.07,1.35l-2.3,-1.43l-1.43,-0.19l-4.21,1.59l-1.43,1.07l-3.65,-0.65l-2.32,-1.38Z", "name": "Berlin"}, "DE-ST": {"path": "M511.75,377.7l-0.19,-1.91l-0.72,-0.39l-1.04,0.12l-2.74,-3.18l1.67,-1.48l0.22,-0.86l-1.19,-2.29l-1.94,-0.96l-0.25,-1.3l1.62,-0.63l4.58,-0.76l0.66,-0.85l0.34,-2.05l-0.72,-1.15l-2.88,-1.99l-1.7,-0.49l-0.89,-0.61l-6.9,-7.59l0.2,-1.63l0.97,-2.19l1.6,-0.58l2.71,0.33l0.63,-0.68l-0.8,-1.54l-3.95,-4.79l-0.65,-2.15l0.15,-3.19l2.52,-2.52l0.37,-0.71l-0.07,-0.65l-0.59,-0.69l-1.69,-0.45l-1.06,0.31l-1.12,0.88l-0.5,-0.05l-4.12,-4.8l-4.69,-7.76l-1.68,-0.93l-1.1,-0.03l-0.74,-0.64l-0.72,-3.4l-1.93,-1.84l-1.63,-3.11l0.32,-1.91l-0.33,-2.2l0.36,-1.11l-0.14,-1.09l3.24,-1.17l4.55,-0.28l4.29,0.17l5.6,-1.61l1.86,-0.81l1.06,-1.12l1.88,-1.23l0.47,-0.71l0.51,-2.5l1.3,-0.62l3.41,-0.05l5.48,1.55l5.8,-0.35l4.62,0.71l1.08,0.85l1.26,0.44l0.9,1.23l0.82,0.36l1.17,-0.2l1.85,-1.0l0.81,0.26l2.14,-0.1l5.95,-2.08l3.49,-0.77l6.06,-4.61l2.59,-0.21l0.65,-0.44l-0.46,-3.58l0.53,-2.9l0.67,-1.42l1.25,-0.47l1.34,0.35l1.48,-0.07l1.14,-0.76l1.83,-4.18l4.01,-0.91l0.66,0.36l0.03,0.89l-0.49,1.1l-0.74,0.63l0.1,0.67l1.49,0.6l3.15,0.11l0.93,0.56l0.82,2.89l0.78,0.98l1.88,0.24l3.52,-1.46l1.24,-0.22l2.83,3.53l1.47,0.99l3.2,0.18l0.8,0.39l-0.39,1.13l-1.2,1.54l0.04,1.04l6.37,3.52l2.86,0.5l3.91,1.7l1.79,0.32l1.6,-0.49l2.44,0.06l7.12,-0.65l1.23,1.43l-0.1,1.4l0.36,0.43l2.52,0.11l3.74,-0.88l2.6,0.83l0.88,1.31l1.94,5.74l-0.37,1.25l-3.08,2.11l-0.33,0.54l0.12,1.74l1.16,1.92l-1.63,1.6l-0.18,0.67l0.35,1.19l1.01,1.4l0.66,2.01l1.7,1.56l-0.22,2.11l-0.95,2.48l-0.99,1.47l-1.64,0.62l-1.93,-0.09l-0.74,0.32l-0.52,2.14l-0.57,5.23l-2.55,3.23l-0.17,0.61l0.33,0.55l0.59,0.18l2.86,-0.07l-1.32,1.38l-0.23,0.64l0.35,1.76l0.9,0.76l1.4,0.29l2.26,-0.57l1.13,-1.04l0.55,-1.93l0.31,-0.22l1.44,0.6l1.93,2.54l0.8,0.55l3.31,-0.37l-0.45,1.01l-0.12,2.75l-2.0,3.63l-1.86,1.68l-0.03,0.56l0.98,1.84l-0.76,2.32l-1.74,3.01l0.16,1.04l-0.4,1.46l0.55,2.31l-1.32,2.13l-1.56,4.21l0.39,3.28l1.16,1.2l1.26,0.31l1.26,1.89l-2.46,2.36l-2.25,5.35l1.74,3.68l2.91,2.5l1.02,2.21l2.48,1.24l1.76,1.58l6.03,6.74l0.45,2.41l1.41,1.2l4.18,2.62l1.15,0.31l1.94,-0.2l1.12,-1.25l0.72,0.02l2.52,2.54l6.33,3.8l4.95,0.78l1.34,-1.09l2.5,-1.17l0.81,-1.47l0.8,0.01l12.49,6.29l4.9,0.63l1.31,0.76l1.17,2.76l0.67,0.48l5.45,0.26l2.91,0.68l2.89,2.9l5.51,3.2l1.89,0.62l6.6,-0.62l2.67,1.69l0.47,-0.13l1.62,-2.09l3.58,0.12l1.37,0.49l-0.61,1.17l-3.36,3.14l-3.61,5.02l0.11,5.5l2.2,4.24l-0.27,1.33l-2.63,2.98l-6.68,4.5l-1.95,2.91l-1.38,-0.29l-2.04,-1.77l-1.47,-0.69l-3.02,1.13l-1.33,-1.29l-2.19,-0.93l-2.66,-0.63l-1.11,-0.64l-1.4,-2.03l-2.85,0.23l-1.12,1.22l-5.05,3.48l-1.7,0.67l-2.83,-1.01l-3.84,-0.38l-1.6,0.82l-1.73,2.63l-1.87,1.34l-0.75,0.06l-0.41,-0.49l-0.79,-0.24l-9.31,1.35l-1.31,-0.74l-7.91,-0.26l-1.23,0.64l-0.39,2.49l-0.58,0.97l-7.21,0.61l-5.74,2.15l-2.88,-0.27l-3.12,-1.14l-0.61,0.23l-0.85,2.22l-2.97,2.3l0.0,6.04l-0.39,1.31l-1.64,1.66l-1.61,1.1l-0.2,0.6l0.24,2.8l0.87,1.54l0.25,5.08l1.44,3.13l-0.02,2.43l-0.59,1.0l-1.79,0.18l-1.27,0.88l-1.0,1.56l-0.47,1.62l0.78,2.41l0.13,2.63l1.93,2.3l0.33,1.19l0.33,3.69l-0.41,1.19l-0.97,1.12l-0.06,1.28l0.27,0.36l2.72,0.71l-0.36,3.43l1.04,1.66l2.05,1.61l0.34,2.07l0.4,0.6l0.69,0.46l3.84,0.63l0.12,0.58l-1.66,2.49l-0.51,2.75l0.48,0.84l2.2,1.1l0.4,1.34l-2.24,3.48l-3.39,3.59l-0.3,1.27l0.3,1.03l-1.41,0.98l-0.47,-0.03l-0.73,-1.06l-2.49,-1.93l-0.83,-0.28l-2.78,1.17l-5.63,-1.52l-6.69,0.89l-0.46,-1.34l-3.15,-1.42l-0.72,-0.72l-0.68,-1.61l-1.48,-1.16l-4.85,-1.85l-2.26,-1.41l-1.28,-0.19l-8.75,0.64l-1.28,0.77l-0.49,-0.17l-1.14,-0.87l-0.49,-1.71l-2.27,-3.62l-0.38,-3.14l-0.61,-0.65l-2.18,-1.18l-4.08,0.63l-4.52,-0.07l-4.62,-0.52l-2.95,1.42l-5.76,-0.36l-1.48,-0.74l-0.67,-1.44l-0.29,-1.31l0.88,-0.48l0.21,-1.0l-0.82,-3.64l-2.1,-3.0l-1.06,-0.99l-2.23,-0.75l-2.12,-1.15l-0.92,-1.2l1.06,-1.26l4.82,-0.76l2.6,-1.21l1.3,-1.0l1.78,-2.78l-0.04,-0.44l-5.62,-6.96l-2.67,-4.19l-5.25,-3.49l-2.66,-0.77l-9.16,-1.13l-4.19,0.07l-15.09,-1.54l-2.43,-1.15l-0.67,-1.06l0.66,-5.07l-2.54,-4.24l0.09,-3.13l-2.01,-2.26l-1.36,-3.22l-0.05,-0.57l0.43,-0.34l2.32,0.5l1.1,-0.74l-0.05,-1.59l-0.9,-1.75l-0.74,-0.44l-1.25,-0.03l-3.13,-1.09l-1.44,-1.06l-2.81,-0.05l-4.44,-1.92l-8.84,0.18l-1.37,-0.72l-2.68,-4.06l-0.08,-3.65l-0.75,-1.81l-1.67,-1.39l-1.38,-2.21l-1.09,-2.65l-1.67,-1.02l-1.66,-1.53l-0.2,-0.68l-0.45,-2.63l0.23,-5.1l0.49,-0.55l1.7,-0.71l1.03,-1.32l1.38,-0.67l1.26,-1.81l0.13,-1.21l-0.61,-2.73l-2.14,-1.55l0.46,-2.26l2.22,-1.17l0.47,-0.99l-0.41,-0.45l-1.4,0.06l-1.36,-1.31l-2.26,-0.93l-0.26,-1.14l-1.7,-2.38l0.64,-0.28l2.89,0.27l1.38,-0.38l2.94,-2.56l0.12,-1.6l0.65,-0.27l5.49,-0.71l13.01,-0.0l2.63,-0.85l1.89,-0.24l5.82,0.07l0.95,-0.32l0.84,-1.41l0.02,-1.82l-0.42,-0.7l-1.69,-1.11l-0.01,-0.35l0.69,-0.48l3.37,-0.88l2.18,-1.02l2.45,-1.72l1.9,-2.44l0.15,-1.3l-0.45,-1.63l-0.96,-0.73l-1.5,-0.32l-0.88,-1.48l0.88,-1.92l0.69,-0.6l3.37,-0.95l1.23,-0.98l0.29,-2.18l-0.33,-1.2l-0.96,-0.68l-0.59,0.22l-0.37,0.6Z", "name": "Sachsen-Anhalt"}, "DE-RP": {"path": "M24.7,661.09l1.01,-4.92l0.64,-1.76l0.83,-0.82l0.38,-1.02l-0.36,-1.07l-0.88,-0.68l0.56,-2.05l0.64,-0.33l1.87,-0.13l0.89,-0.45l0.8,-1.55l0.04,-1.6l-0.55,-1.46l-1.12,-1.1l0.71,-0.78l2.17,-1.29l1.01,-1.26l1.91,-0.76l4.19,-0.99l1.96,-1.44l0.13,-0.46l-0.4,-1.06l0.18,-1.13l1.48,-2.03l1.17,-0.57l3.39,0.63l2.73,-0.4l1.43,-1.19l0.07,-0.88l2.15,-0.04l2.75,-1.22l0.26,-0.53l-0.14,-0.58l-3.3,-4.51l0.21,-0.78l0.67,0.02l0.63,0.43l0.83,1.31l2.25,1.19l0.81,1.92l0.82,0.49l2.38,-0.73l4.61,-2.84l4.25,-0.62l1.26,-0.47l3.26,1.3l-0.47,1.61l0.43,0.48l0.55,0.08l1.22,-0.02l2.7,-1.49l0.56,-0.02l1.58,0.98l1.21,1.29l1.85,0.39l7.79,-1.85l0.63,-0.64l0.18,-0.79l-0.35,-1.34l-1.6,-2.52l-0.39,-4.03l-0.58,-0.71l-1.84,-0.88l0.81,-2.09l-0.08,-1.91l5.26,-1.85l1.3,2.03l1.31,0.92l1.52,0.34l1.44,-0.2l0.96,-0.9l0.76,-1.32l0.23,-2.63l-0.46,-3.09l2.61,-0.83l1.55,-1.58l0.97,-1.64l5.73,-1.48l6.08,-3.37l3.16,0.86l1.4,-0.54l1.08,-1.76l2.26,0.63l1.29,-0.27l2.46,-2.13l0.85,-0.38l1.1,-2.19l1.41,0.53l0.57,1.23l0.52,0.34l5.6,0.33l5.78,-1.33l3.39,-2.17l0.2,-1.77l0.88,-1.5l0.09,-3.33l-0.32,-0.56l0.36,-0.33l2.21,-0.55l3.74,0.25l8.22,-1.92l3.88,-1.81l2.82,0.16l1.83,-2.44l4.31,-1.56l1.43,-1.83l1.04,0.55l1.03,-0.5l0.37,-1.1l-0.11,-1.22l-1.9,-2.05l3.19,-1.64l2.37,-2.16l2.49,0.71l0.86,-0.57l0.06,-2.37l-1.22,-2.58l-0.36,-3.12l0.28,-1.24l2.88,-2.32l1.1,-0.27l5.23,1.22l-1.35,4.44l0.11,1.04l1.47,1.02l2.59,0.75l3.7,3.3l1.88,1.21l2.66,-0.65l1.19,4.08l-0.21,3.99l1.05,1.68l4.13,4.5l1.6,2.36l0.67,2.23l1.11,0.27l2.96,-0.98l3.41,1.51l-0.33,1.81l-1.02,2.5l2.01,4.18l0.37,1.99l0.67,1.17l1.16,0.89l-2.47,5.41l-2.08,1.52l-1.78,0.13l-2.49,-2.33l-1.61,-0.07l-1.86,0.64l-1.53,1.74l-1.72,1.16l-0.43,1.63l-0.09,5.6l0.44,0.71l1.39,0.79l-1.7,1.6l-1.22,3.55l-1.13,0.8l-0.32,0.85l0.96,1.07l4.36,0.93l0.5,1.36l1.78,0.8l2.91,5.16l2.07,1.46l0.59,0.97l1.41,3.87l-0.08,1.13l-2.1,0.73l-5.08,-0.12l-0.86,0.67l-0.57,1.56l0.12,0.66l0.84,0.9l-1.7,2.25l-0.83,-0.2l-1.56,-1.3l-0.62,-0.04l-1.31,1.16l-5.75,2.53l-1.27,1.54l-1.17,2.26l-0.26,1.37l0.16,1.15l0.76,0.85l2.47,1.42l-0.8,3.06l-2.12,-1.58l-3.93,0.35l-1.32,1.69l-0.7,2.73l-6.56,3.92l-0.04,0.64l1.41,0.69l6.26,4.76l0.64,0.92l0.36,1.7l2.08,2.34l4.06,-0.13l4.26,-1.18l4.75,-2.1l3.81,-2.44l12.19,-3.48l3.65,0.15l1.38,0.75l10.44,9.97l1.84,4.14l-1.41,4.58l0.79,1.68l2.23,2.78l0.94,1.72l0.91,3.46l1.88,2.97l0.7,1.92l1.15,1.53l3.75,-0.47l0.94,0.31l-0.18,0.85l-1.21,1.66l-2.02,2.09l-3.21,0.55l-2.81,1.66l-1.73,2.69l-0.17,3.38l1.52,3.21l2.4,3.89l1.58,3.79l-0.74,3.29l1.87,2.64l2.18,5.43l1.29,2.32l0.0,0.5l-1.82,0.77l-0.24,1.24l0.27,0.38l1.67,0.56l3.25,0.62l0.75,1.05l-1.25,2.64l0.73,4.29l-3.48,6.65l-0.23,1.19l0.28,0.45l1.96,0.59l-0.25,1.12l-6.64,6.64l-1.28,0.59l-1.18,1.11l-0.67,2.23l-1.87,12.05l-0.41,1.21l-7.19,12.57l-2.03,2.67l-3.08,2.82l-2.62,0.81l-1.18,-0.88l-9.6,-1.69l-15.64,-7.06l-1.85,-0.17l-5.52,0.49l-8.1,-1.99l-4.7,1.56l-4.03,-0.89l-3.62,0.88l-1.19,-0.23l-0.77,-0.56l-1.82,-2.5l-2.28,-0.99l-4.22,-0.63l-2.02,-1.09l-3.43,-4.36l-1.23,-1.1l1.05,-1.13l-0.91,-2.08l-1.87,-0.57l-3.96,-0.23l-0.7,-1.43l-1.91,-0.14l-1.76,0.43l-0.43,-0.31l-1.83,0.04l-5.12,-4.44l-0.72,-3.11l0.1,-0.97l0.63,-1.08l2.04,-0.24l1.38,-1.65l0.75,-2.82l1.47,-1.42l0.58,-2.29l1.93,-1.43l0.92,-1.29l0.11,-0.76l-0.41,-0.97l0.64,-1.69l-0.53,-1.14l-1.2,-0.68l-2.44,-0.77l-5.36,-0.97l0.23,-0.69l-0.31,-0.68l-3.97,-4.06l-0.52,-1.64l0.26,-0.34l0.94,-0.54l1.88,-2.04l2.63,-1.5l0.44,-1.24l-0.36,-1.78l-1.18,-0.55l-0.24,-3.37l-1.16,-1.98l-0.56,-1.53l-0.01,-1.85l-0.47,-0.49l-0.69,-0.08l-2.81,1.53l-2.73,0.22l-4.63,-2.83l-2.24,-1.82l-7.08,-0.5l-6.52,-3.12l-2.78,1.32l-0.84,-0.58l-2.17,-0.57l-8.19,4.3l-14.41,5.61l-1.73,0.29l-2.48,-0.16l-6.27,2.41l-11.26,-0.46l-13.35,1.03l0.12,-4.73l0.51,-1.28l3.97,-4.55l2.07,-3.33l-0.2,-1.32l-1.19,-0.9l1.32,-1.56l7.15,-3.91l0.14,-0.58l-0.7,-0.78l0.12,-0.23l1.36,-0.0l-1.32,-3.0l0.06,-0.9l0.96,-0.88l-0.21,-1.96l0.73,-4.43l-0.78,-0.59l-3.33,-0.76l-4.76,-0.01l-1.62,-0.37l-1.58,-0.85l-2.85,-2.28l-1.84,-0.93l-1.05,0.02l-1.76,0.67l-1.68,-3.31l-4.74,-2.03l-1.42,-1.21l-3.23,-6.53l-1.68,-2.3l-0.67,0.03l-0.74,1.23l-1.88,-4.14l-1.71,-2.22l-0.36,-0.88l0.25,-1.47l-0.61,-2.68l-0.69,-1.17l-0.84,-0.48l1.01,-1.48l-0.25,-0.66l-0.57,-0.01Z", "name": "Rheinland-Pfalz"}, "DE-BB": {"path": "M532.83,262.93l6.91,0.27l2.22,0.8l1.92,0.23l0.44,-0.36l0.41,-3.06l1.26,-0.51l3.04,0.0l5.26,2.45l2.98,-0.23l1.98,-1.24l0.85,-2.35l-0.99,-4.37l-1.3,-1.51l-0.19,-0.75l0.51,-1.09l4.24,-3.19l1.87,-1.0l5.26,-1.62l3.25,-0.16l1.03,0.3l2.97,2.0l1.17,2.19l0.54,0.17l1.95,-1.02l2.04,-0.6l5.11,0.21l0.42,-0.46l-0.31,-1.87l-1.57,-1.18l0.96,-0.35l2.95,0.42l2.23,-2.22l5.22,-1.82l2.14,0.54l3.55,-2.62l1.44,-0.2l1.23,-2.31l0.17,-1.79l2.41,-1.35l1.44,-2.09l3.01,-1.03l2.53,-0.42l1.88,1.46l0.8,0.19l3.07,-1.7l1.07,-0.25l0.91,0.3l2.34,3.19l6.9,1.55l4.13,1.99l2.89,1.84l1.73,1.54l2.81,1.31l1.58,1.72l1.67,0.3l3.5,-0.21l2.97,-0.63l10.88,2.19l1.22,0.48l2.77,2.25l7.11,1.35l0.38,3.34l1.27,0.92l1.33,0.11l4.27,-0.77l1.3,0.08l1.24,0.36l1.45,0.99l1.62,0.34l3.88,-0.72l2.7,-0.03l1.77,-0.58l0.24,0.59l-1.32,1.13l0.25,1.02l3.0,1.28l2.7,-0.34l4.68,-4.1l2.85,-1.48l2.25,-1.6l0.85,-0.96l0.63,-1.75l2.1,-1.21l0.96,-0.92l0.67,-0.19l1.12,0.29l2.25,2.71l1.35,0.48l2.75,-0.0l0.39,-0.3l0.58,-2.63l1.22,-2.32l1.51,-1.43l1.48,-0.61l2.46,-0.19l1.97,0.33l3.98,1.73l1.99,0.37l1.84,-0.55l5.11,-3.36l1.11,-0.34l2.54,-2.43l3.16,-6.27l0.57,-2.58l0.68,-1.37l1.26,-0.97l1.71,-0.74l3.64,-0.2l2.31,-1.78l1.79,-2.64l5.81,-4.06l3.38,-0.4l3.32,0.21l3.06,-1.06l0.25,-0.48l-0.46,-1.66l-2.44,-3.76l0.14,-1.93l1.1,0.14l2.53,3.13l4.32,1.37l0.21,2.84l2.8,4.16l0.58,1.9l1.86,2.02l6.85,-0.41l5.77,0.34l4.55,1.1l2.26,-2.31l2.19,-0.37l3.58,1.44l4.08,-0.21l1.93,0.35l0.14,3.17l-0.44,2.39l-1.48,2.82l-3.44,4.48l-8.18,4.5l-0.3,2.96l0.35,0.39l7.84,1.28l6.71,0.45l1.55,-1.05l0.55,-1.69l2.56,-1.06l2.7,-2.85l6.15,-3.1l0.53,2.01l0.52,4.87l0.66,0.99l2.96,2.61l-2.35,3.78l-0.64,0.78l-1.1,0.53l-0.97,1.19l-0.76,1.72l-0.3,2.0l1.13,5.86l-3.18,8.56l-1.26,2.29l-2.94,2.52l-5.73,3.73l-5.94,2.54l-4.8,2.91l-0.19,1.17l0.61,1.47l1.4,6.23l-0.38,2.37l-0.93,1.47l-2.54,1.81l-0.11,0.53l1.13,1.86l1.83,1.23l2.18,0.58l2.2,0.14l1.83,0.66l3.26,3.12l2.65,1.16l10.37,6.27l1.45,1.4l3.42,5.49l1.13,0.87l1.78,0.68l2.93,3.21l5.79,1.88l6.19,5.72l2.79,1.89l-2.56,4.42l-0.8,3.17l0.15,0.42l1.72,1.3l0.37,1.13l-1.53,2.92l-2.32,3.03l-5.2,4.02l0.57,5.35l2.33,5.75l2.0,3.74l-0.44,2.64l2.32,2.11l3.33,1.41l2.84,0.55l2.59,0.93l1.38,2.1l-0.03,2.42l-1.92,2.25l0.08,1.06l1.31,1.69l-0.33,1.66l-1.07,2.44l-0.56,3.66l1.13,2.04l5.96,3.68l-2.25,2.67l-0.94,3.67l-2.09,3.13l-0.56,1.34l-0.37,8.09l-0.8,2.46l-1.47,2.29l-1.77,1.96l-5.61,4.73l-1.43,2.62l0.38,2.98l1.61,2.04l1.83,1.09l1.23,1.37l0.39,3.4l1.12,3.5l2.26,2.19l4.69,3.23l1.2,2.14l0.94,3.23l0.16,3.3l-1.1,2.49l-1.94,2.59l-0.8,2.54l0.09,0.64l-3.68,-0.14l-4.14,-1.43l-2.43,-1.19l-2.34,-0.38l-2.13,0.08l-4.25,1.0l-12.98,5.4l-3.61,0.69l-3.27,-1.81l-3.59,-1.09l-4.83,-0.51l-6.2,1.26l-3.95,1.81l-1.29,0.97l-3.89,4.23l-0.68,1.23l-0.17,1.94l-1.45,2.85l-7.14,8.87l-0.65,0.19l-2.27,-0.54l-16.84,1.74l-14.86,-0.95l-5.83,-1.43l-2.12,0.31l-0.98,-0.34l-1.65,-2.02l-2.5,-1.41l-2.15,-1.77l-4.82,-1.95l-2.41,0.23l-1.05,0.89l-1.37,0.6l-10.59,2.94l-1.25,-1.65l-2.07,-0.6l-0.75,0.79l-1.16,0.02l-1.41,1.38l-0.62,-1.08l-0.19,-1.14l1.62,-1.55l0.77,-1.93l0.17,-3.34l-0.18,-1.13l-0.84,-1.12l1.62,-1.1l0.44,-0.88l-0.76,-3.69l-0.72,-1.45l-2.14,-1.14l-0.81,-0.96l0.6,-2.51l-0.62,-1.27l-2.96,-1.84l-1.61,0.4l-0.6,-0.2l-1.27,-0.72l-2.7,-2.76l-0.78,-0.3l1.7,-2.55l6.61,-4.44l2.82,-3.17l0.38,-2.0l-1.67,-2.84l-0.69,-2.27l0.05,-4.22l3.44,-4.71l3.42,-3.22l0.85,-1.63l-0.22,-0.56l-1.97,-0.69l-3.9,-0.1l-0.87,0.57l-0.99,1.56l-1.68,-1.39l-0.92,-0.24l-6.51,0.63l-1.69,-0.55l-5.44,-3.16l-1.64,-1.95l-1.34,-1.0l-3.16,-0.75l-5.2,-0.19l-1.54,-3.01l-1.62,-1.0l-4.91,-0.63l-12.52,-6.31l-1.37,-0.04l-1.02,1.63l-2.4,1.11l-1.29,1.05l-4.29,-0.78l-1.62,-0.78l-4.54,-2.93l-1.94,-2.14l-1.2,-0.68l-1.05,0.26l-0.91,1.14l-1.57,0.16l-0.91,-0.24l-5.29,-3.58l-0.45,-2.39l-6.14,-6.86l-1.83,-1.64l-2.35,-1.12l-1.04,-2.24l-2.57,-2.1l-1.1,-1.78l-0.78,-1.94l0.18,-0.53l0.75,-1.03l1.24,-3.22l2.18,-1.89l0.42,-0.85l-1.58,-2.49l-1.43,-0.44l-0.82,-0.87l-0.22,-3.42l1.41,-3.34l1.39,-2.35l-0.54,-2.49l0.4,-1.41l-0.17,-0.9l1.67,-2.79l0.84,-2.57l-0.06,-0.8l-0.92,-1.47l1.04,-0.59l0.71,-0.89l2.03,-3.68l0.29,-1.11l-0.07,-1.93l0.62,-1.6l-0.69,-0.46l-1.22,0.42l-2.11,0.12l-2.5,-2.97l-0.82,-0.54l-1.17,-0.23l-0.88,0.53l-0.57,1.95l-0.64,0.66l-2.14,0.61l-1.09,-0.25l-0.6,-0.7l-0.12,-0.96l1.52,-1.8l-0.03,-0.65l-1.0,-0.56l-2.71,0.1l2.65,-3.43l1.0,-7.16l2.12,0.06l2.08,-0.84l1.13,-1.67l1.02,-2.67l0.18,-2.6l-1.77,-1.68l-0.61,-1.91l-1.27,-1.95l0.04,-0.55l1.77,-1.93l-0.24,-0.97l-0.97,-1.29l-0.14,-1.2l3.23,-2.38l0.6,-1.83l-0.1,-0.97l-2.51,-6.15l-0.71,-0.68l-2.9,-0.88l-3.81,0.88l-1.98,-0.07l0.04,-1.32l-0.51,-0.97l-0.8,-0.75l-0.87,-0.31l-6.99,0.71l-2.43,-0.07l-1.52,0.49l-1.52,-0.26l-4.0,-1.73l-2.72,-0.45l-6.05,-3.35l1.24,-1.7l0.53,-1.54l-0.2,-0.49l-1.36,-0.62l-2.96,-0.11l-1.23,-0.81l-2.94,-3.67l-1.9,0.13l-3.46,1.45l-1.45,-0.21l-1.37,-3.72l-1.32,-0.74l-3.18,-0.11l-0.68,-0.29l0.99,-1.68l-0.01,-1.39l-1.2,-0.88l-4.52,0.93l-4.71,-1.53l-4.01,-0.79l-2.86,-2.43l-2.42,-0.67l-2.37,0.43l-3.15,1.8l-1.69,0.39l-1.97,-0.29l-1.51,-0.76l-3.52,-3.4l-1.27,-1.94ZM712.51,352.17l-2.13,2.83l-0.24,0.84l0.49,0.59l2.72,1.47l3.86,0.55l1.44,-1.1l3.96,-1.53l1.03,0.13l2.59,1.49l4.07,-1.29l0.78,1.4l0.65,0.35l0.6,0.08l3.06,-0.87l2.86,2.7l1.94,0.73l3.1,0.02l0.39,-0.32l0.19,-1.0l-0.28,-2.36l0.63,-0.46l2.24,-0.55l0.71,0.29l1.11,1.71l0.74,0.37l1.99,0.05l1.22,-0.76l1.06,-0.11l5.52,2.1l2.54,0.69l1.57,-0.07l0.77,0.85l0.5,3.96l0.6,0.76l1.26,-0.25l1.55,-2.46l2.57,-0.77l0.7,-0.63l0.4,-1.04l-0.21,-2.54l0.65,-1.13l2.22,-1.63l0.44,-0.98l0.1,-1.6l0.96,-0.76l0.18,-0.9l-1.61,-1.58l-3.92,-1.47l-1.78,-1.88l-1.41,-0.65l-3.7,0.31l0.05,-0.91l2.27,-4.37l-0.05,-1.23l-0.35,-0.36l-2.02,-0.24l-1.35,-0.5l-4.13,-2.37l-6.4,-6.13l-0.3,-0.98l0.18,-3.28l-3.1,-2.94l-0.74,0.12l-2.3,1.8l-0.69,1.04l-2.54,-0.92l-2.28,1.57l-0.89,1.39l-1.32,0.29l-3.59,-0.21l-1.51,-0.55l-0.47,-0.46l-0.28,-3.06l-1.65,-0.12l-0.75,0.48l-1.01,1.99l-0.99,0.74l-0.78,0.37l-2.79,0.34l-0.59,0.41l-1.16,3.09l0.7,1.81l-5.25,-1.72l-0.67,0.17l-1.1,2.14l0.34,1.33l-0.73,6.75l1.54,2.43l0.01,0.51l-4.11,3.6l-0.55,2.59l0.67,1.81Z", "name": "Brandenburg"}, "DE-NI": {"path": "M115.46,378.55l-1.27,-3.35l0.06,-2.28l2.67,-5.76l0.81,-5.02l-1.43,-3.48l-5.97,-7.99l-1.08,0.11l-1.56,1.6l-2.34,0.56l-2.5,0.14l-2.7,-0.36l-5.11,-1.6l-7.72,-0.9l-2.47,-0.99l-1.81,-1.73l-0.55,-1.82l-0.49,-4.67l-0.94,-1.66l1.11,-0.1l5.45,-2.26l0.07,-0.7l-3.17,-2.2l-0.57,-0.7l0.61,-3.17l-0.67,-1.31l3.07,-1.83l3.18,-0.81l9.21,-0.12l5.15,1.28l4.89,-0.57l4.92,1.39l0.44,-0.17l1.79,-2.83l0.78,-4.85l0.91,-14.28l0.84,-4.36l1.72,-3.95l8.07,-10.41l2.13,-4.45l0.93,-4.33l0.16,-4.89l-0.91,-9.52l-1.22,-2.76l-0.07,-1.46l2.3,-6.28l0.31,-2.15l-0.36,-5.66l1.96,-1.4l1.78,-2.46l0.39,-1.72l-0.65,-1.5l2.25,-2.78l1.17,-0.49l2.15,-0.03l2.03,0.44l3.4,1.75l1.85,0.61l0.46,-0.16l-0.02,-0.48l-2.36,-2.83l-4.08,-1.29l-22.38,-0.66l-3.4,-1.37l-1.35,-3.49l-0.03,-9.79l0.41,-2.17l1.88,-4.01l0.44,-2.0l0.65,-0.98l5.6,0.72l0.43,-0.22l0.46,-0.95l0.99,-0.52l0.71,-1.31l-0.23,-2.15l-1.01,-1.06l-2.81,-1.15l-1.11,-0.93l-0.17,-1.42l1.22,-1.3l3.18,-1.82l3.53,-3.21l1.94,-1.1l3.58,-3.03l7.63,-2.42l14.93,-1.37l2.11,1.74l2.47,0.45l14.46,-2.45l29.37,-3.34l7.48,1.77l-0.59,4.64l2.75,4.86l4.1,4.31l3.18,1.83l-0.79,2.11l0.21,0.55l3.61,1.09l0.91,1.16l-0.27,2.14l-0.82,1.08l-2.03,1.25l-1.68,0.71l-3.8,0.28l-1.88,0.92l-0.19,0.51l1.79,4.46l0.92,1.72l1.42,1.28l2.69,-0.78l1.49,0.05l1.02,0.45l3.3,2.65l1.97,2.6l1.57,0.6l1.65,-0.04l2.49,-0.83l1.28,-1.04l2.07,-2.81l2.26,-4.79l0.53,-4.59l-2.97,-3.03l-4.15,0.72l-1.61,-0.22l0.15,-1.52l0.84,-2.23l0.69,-4.5l0.77,-1.77l1.18,-1.02l1.53,-0.5l3.96,-0.16l1.71,0.64l3.93,4.81l4.05,1.68l8.34,1.33l3.5,1.38l0.0,0.51l-2.23,1.57l-2.16,2.13l-1.7,3.11l-0.6,3.95l0.12,7.57l0.62,3.43l1.33,2.46l0.43,0.2l0.32,-0.36l0.29,-3.39l-1.03,-8.32l0.08,-3.82l1.4,-2.72l4.03,-2.71l1.35,2.04l0.82,0.41l0.67,-0.14l0.87,1.2l0.75,0.15l2.39,-1.76l1.52,-1.93l0.36,-1.37l0.0,-1.94l-0.66,-2.81l-1.46,-3.59l1.02,-1.68l0.0,-0.68l-0.94,-0.41l-3.99,0.14l-2.08,-0.3l-4.64,-1.39l-1.09,-3.47l-1.37,-3.0l-0.3,-2.13l0.21,-2.17l0.58,-1.91l3.68,-7.48l2.6,-8.07l1.65,-3.52l1.35,-1.64l1.85,-1.44l2.09,-1.01l2.12,-0.4l1.94,0.11l1.04,0.37l2.4,2.2l3.55,2.43l3.79,1.59l7.76,1.55l4.28,-0.11l7.08,-1.43l3.88,0.25l2.06,-1.78l7.65,-1.52l7.72,0.06l1.68,-0.91l1.28,0.74l1.61,0.24l3.29,-0.12l2.8,2.62l9.59,13.75l3.95,3.77l2.77,1.85l1.26,1.32l1.39,4.1l6.74,8.07l1.67,1.23l5.35,1.36l5.81,3.25l6.45,1.19l0.53,5.24l0.83,0.75l0.54,1.1l1.04,0.79l1.06,2.44l1.22,1.71l4.04,3.28l1.17,-0.02l1.34,-1.59l1.38,-0.43l0.72,0.77l0.36,2.98l0.47,0.57l1.03,0.08l2.4,-0.92l2.11,1.06l0.92,0.1l3.61,-1.01l1.68,-0.82l0.46,-0.52l0.05,-1.32l4.58,-1.24l2.69,2.2l2.0,0.47l2.17,2.24l1.6,0.94l1.86,0.35l5.4,-0.3l2.63,-2.81l1.7,-0.67l6.27,0.08l3.44,1.07l13.9,6.86l4.11,1.16l3.3,-1.05l7.18,-0.24l3.19,0.68l1.97,2.0l0.29,3.96l0.69,2.03l1.7,0.76l1.8,0.34l3.11,3.24l3.13,2.07l8.94,4.23l10.75,8.24l4.89,2.99l1.4,-0.58l0.98,-0.99l3.25,-2.19l1.04,-0.13l0.63,0.31l3.15,4.06l0.99,-0.04l1.99,-1.5l1.34,1.35l1.51,0.74l3.41,4.98l3.6,3.47l1.72,0.88l2.23,0.35l1.97,-0.42l3.25,-1.84l1.92,-0.36l2.08,0.54l2.99,2.5l4.12,0.82l4.35,1.42l-1.68,3.84l-0.77,0.46l-2.47,-0.34l-1.12,0.2l-1.04,0.89l-0.56,1.38l-0.56,3.09l0.53,3.24l-2.91,0.34l-5.93,4.56l-3.45,0.76l-5.91,2.07l-3.37,-0.06l-1.5,0.92l-0.84,0.15l-1.33,-1.47l-1.3,-0.46l-1.27,-0.93l-4.82,-0.73l-5.72,0.35l-2.46,-0.91l-2.96,-0.63l-3.66,0.05l-1.29,0.44l-0.55,0.51l-0.87,3.09l-1.82,1.17l-0.98,1.06l-1.75,0.76l-5.41,1.56l-4.22,-0.17l-4.63,0.28l-3.37,1.07l-0.53,0.57l0.1,1.29l-0.37,1.23l0.33,2.15l-0.3,2.12l1.73,3.36l1.89,1.78l0.78,3.5l1.13,0.95l1.14,0.05l1.28,0.66l4.69,7.75l4.3,4.98l0.94,0.24l2.18,-1.25l1.53,0.6l-0.19,0.62l-2.61,2.68l-0.2,3.61l0.79,2.52l1.27,1.25l3.25,4.51l-2.52,-0.34l-2.02,0.75l-1.23,2.54l-0.26,2.01l7.18,8.09l1.1,0.74l1.63,0.46l2.76,1.91l0.46,0.76l-0.67,1.99l-5.37,0.98l-1.02,0.57l-0.16,0.6l0.42,1.71l1.99,1.01l0.29,0.99l0.68,0.86l-1.72,1.63l-0.06,1.01l2.97,3.43l1.55,0.07l0.12,1.84l0.44,0.57l0.57,-0.08l0.71,-0.9l0.41,0.68l0.05,1.57l-0.5,0.99l-4.02,1.27l-0.93,0.84l-0.85,1.67l-0.1,1.23l0.83,1.31l2.6,1.13l0.31,1.8l-0.86,1.53l-3.27,2.63l-1.99,0.93l-3.46,0.91l-1.05,0.78l0.03,1.25l1.94,1.35l0.02,1.63l-0.49,0.91l-6.4,0.12l-2.04,0.26l-2.48,0.82l-12.98,0.0l-5.61,0.73l-1.14,0.51l-0.11,1.63l-2.74,2.39l-1.03,0.26l-2.99,-0.26l-1.25,0.79l0.09,0.97l1.68,2.07l0.45,1.4l2.39,0.99l1.4,1.33l0.88,0.11l-1.44,0.6l-0.63,0.61l-0.61,2.7l0.4,0.91l1.85,1.1l0.42,3.24l-1.01,1.48l-1.41,0.7l-0.96,1.26l-2.27,1.25l-0.47,5.79l0.76,3.7l1.88,1.76l1.54,0.91l0.81,2.15l1.56,2.58l1.95,1.85l0.47,1.72l0.05,3.22l2.55,3.87l-4.37,2.1l-1.93,1.89l-0.17,1.13l2.41,2.9l-0.28,1.58l-0.66,-0.13l-1.34,-1.22l-0.91,-0.14l-5.99,2.2l-4.05,0.05l-3.45,-2.38l-4.79,-2.12l-1.12,-0.13l-4.61,0.8l-0.33,0.78l0.52,1.1l-0.13,0.92l-1.26,3.01l-2.25,1.73l-0.56,0.95l-3.3,1.84l-0.96,2.03l-5.65,2.71l-1.08,-0.06l-1.01,-1.16l-2.25,0.27l-0.95,0.96l-0.19,0.79l0.23,0.63l-0.88,1.42l-2.15,0.83l-0.44,0.51l0.07,0.79l-4.27,-0.14l-1.56,0.26l-1.43,1.41l-2.09,-1.47l-0.61,-0.1l-1.18,1.11l-2.01,0.97l-1.17,1.15l-4.75,3.28l-3.87,-2.56l-0.25,-1.82l-1.11,-0.36l-1.26,1.02l-1.8,0.12l-0.56,0.44l0.01,1.23l1.21,2.13l-1.09,1.14l-0.79,-0.44l-1.69,-2.82l-2.48,-1.28l-1.37,-0.18l-0.39,0.67l0.45,1.17l-0.62,0.54l-2.41,0.65l-5.53,3.1l-0.02,0.88l0.65,1.14l3.25,2.63l0.78,0.04l1.49,-1.24l0.85,0.04l-1.09,1.29l-0.31,1.41l-4.09,3.01l-1.1,-0.09l-2.86,-3.04l-1.29,-0.6l-1.4,-0.02l-8.42,-2.95l-2.76,-2.13l1.84,0.52l1.0,-0.1l0.41,-0.79l-0.87,-2.39l1.42,-1.62l1.48,0.17l3.54,-0.51l0.61,-0.48l0.32,-0.8l-0.35,-3.43l0.22,-1.72l-0.67,-1.45l0.79,-1.08l-0.0,-0.55l-2.2,-1.92l-2.03,-4.2l1.15,-0.18l0.53,-0.45l0.52,-3.49l1.48,0.51l1.18,-0.55l-0.94,-1.81l0.05,-0.77l3.23,1.7l0.81,-0.37l0.85,-1.46l-0.08,-0.5l-1.86,-1.65l-1.21,-3.05l-0.5,-0.51l-1.86,-0.75l-0.72,-1.56l-0.56,-0.31l-3.39,0.67l-1.85,-0.52l-0.82,-1.0l-0.88,-0.35l-2.24,1.51l-2.53,-0.16l-0.61,-0.59l-0.1,-1.76l-1.06,-0.89l-1.84,0.04l-1.55,1.24l-0.93,-0.53l-4.49,1.16l-1.27,-0.04l-0.33,-0.6l0.14,-2.05l1.1,-0.82l0.42,-0.92l-0.26,-1.61l0.62,-1.44l-0.35,-2.27l0.09,-1.97l0.97,-1.1l0.45,-1.29l1.54,-0.82l1.19,-1.09l1.83,-4.09l0.1,-3.07l0.87,-1.01l-0.0,-0.49l-2.09,-1.12l1.52,-1.85l0.52,-1.31l-0.12,-0.43l-0.96,-0.45l-2.14,0.73l-2.17,0.28l-4.42,-0.14l-3.68,0.78l1.21,-2.96l0.24,-1.56l-0.82,-2.63l-0.65,-0.77l-2.46,-0.96l-3.71,0.26l1.38,-1.61l1.11,-3.64l-0.01,-1.25l-4.14,-1.68l-1.96,0.4l-0.87,1.33l-4.09,-1.65l0.35,-1.29l1.55,-1.13l0.61,-1.57l-2.17,-5.31l1.26,-2.23l-0.13,-1.54l-1.36,-1.61l-2.66,-0.94l-0.67,-0.58l0.56,-2.1l-0.42,-0.74l-0.99,-0.53l-7.02,-0.81l-3.33,0.12l-2.84,0.49l0.93,-1.56l0.05,-1.05l-1.75,-3.98l2.55,-0.61l2.71,-0.03l0.42,-0.72l-0.88,-2.83l0.24,-0.48l3.03,-2.05l-0.37,-0.75l-2.65,-0.59l-5.42,-1.94l-0.31,-0.92l1.2,-6.89l1.09,-1.98l3.88,-0.02l2.7,-1.32l2.14,-3.59l3.22,-4.3l-1.8,-5.79l1.98,-1.61l0.46,-1.66l-0.36,-0.48l-1.9,-0.68l-1.64,-1.87l-1.76,-0.31l-5.64,2.47l-3.2,2.9l-2.43,5.57l-0.6,0.76l-6.47,1.19l-3.46,1.17l-3.1,0.29l-11.05,-1.16l-0.34,-1.5l0.39,-2.62l-0.58,-1.49l0.25,-2.87l-0.36,-2.11l-2.87,-4.32l-1.71,-1.2l-1.77,-0.58l-1.21,0.05l-4.82,1.94l-1.5,0.25l-4.82,-0.13l-2.27,0.32l-3.29,2.31l-1.15,4.18l-0.92,0.77l-1.62,0.63l-5.46,0.59l-1.93,-0.59l-2.26,-0.0l-2.14,-0.66l-0.49,0.52l1.95,5.39l1.3,1.69l6.51,2.58l2.76,1.65l1.18,1.57l0.83,2.02l1.01,4.38l0.09,11.88l0.43,1.49l3.2,1.97l-0.55,1.26l-1.48,1.81l-4.92,2.75l-0.82,1.03l-1.0,2.34l-0.51,0.29l-0.57,0.12l-12.68,-2.85l-3.2,2.34l-2.29,2.56l-2.84,1.69l-6.78,2.13l-3.58,-1.05l-3.66,0.55l-1.61,0.66l-4.65,3.55l-2.3,-1.12l-3.31,-1.03l-1.95,-4.25l0.09,-0.44l1.01,-0.92l1.66,-1.09l2.38,-0.91l4.44,-0.76l1.34,-3.69l1.36,-2.54l-0.13,-1.03l-2.75,-1.05l-4.25,0.24l-0.58,-0.37l-0.63,-1.57l-2.6,-0.46l-0.47,-0.59l1.57,-1.68l0.83,-1.43l0.02,-0.69l-0.9,-1.99l2.07,-1.89l0.88,-1.35l-0.05,-0.6l-1.31,-1.82l-0.28,-1.23l3.7,-0.71l0.46,-0.33l0.02,-0.85l-3.03,-4.39l-3.79,-4.04l-1.29,-0.17l-6.88,2.01l-1.96,-1.62l-6.64,-3.45l-2.38,-0.72l-0.49,-0.57l-1.06,-5.25l-0.47,-0.81l-0.94,-0.61l-7.02,-1.79l-1.14,0.23l-0.82,1.0l-1.19,4.42l0.45,1.23l1.48,1.15l-1.05,0.79l-1.37,3.44l-1.33,1.45l-2.55,-0.26l-2.1,0.49l-4.64,3.18l-4.97,4.25l-1.66,0.81l-3.05,0.66l-6.57,4.03l-3.97,0.72l-13.48,0.46l-2.82,1.87l-3.94,1.38l-2.32,-0.08ZM267.32,254.66l3.32,0.02l0.42,0.3l1.31,2.15l0.22,2.67l0.49,1.35l1.59,1.98l4.61,4.16l0.05,4.06l0.58,0.68l1.55,0.22l5.01,-0.89l5.07,2.57l2.07,0.29l2.05,-0.57l0.52,-1.0l4.53,2.68l4.27,-2.41l1.66,-1.57l0.62,-3.85l1.06,-1.85l-0.49,-1.03l-2.34,-2.04l-0.27,-0.6l1.56,-1.38l0.07,-0.82l-3.71,-3.45l-0.75,-0.19l-0.77,0.38l-1.49,2.82l-1.38,0.03l-3.32,-1.36l-3.71,-2.54l-4.35,-0.27l-2.53,-1.4l-0.19,-0.99l-0.64,-0.48l-3.51,-0.02l-1.93,0.44l-6.98,-2.15l-2.86,-1.43l-2.49,0.47l-3.4,-1.71l-1.19,-0.2l-2.22,0.28l-0.3,0.59l1.66,3.23l4.26,1.53l2.28,1.29ZM227.51,180.96l-1.99,1.47l-1.87,-0.53l-0.68,0.29l1.08,-1.64l1.72,-0.61l2.03,0.27l0.75,0.44l-1.04,0.33ZM203.67,172.73l0.94,0.46l-4.32,-0.76l-1.77,0.08l-0.38,0.36l-0.09,0.99l-1.02,-0.6l0.18,-0.36l1.55,-0.47l1.98,-0.18l2.93,0.48ZM191.01,174.13l-5.02,2.07l-2.65,0.13l-2.31,-1.24l-0.49,0.09l-1.57,1.43l-0.87,-0.22l2.08,-2.12l3.95,-0.72l7.87,0.44l-1.0,0.13ZM173.77,177.67l-7.37,-0.07l-3.4,0.67l-0.32,0.35l-0.23,2.01l-2.39,0.1l-0.64,-0.46l-0.29,-1.55l0.41,-1.29l0.99,-0.5l11.55,-0.15l1.69,0.9ZM150.2,180.57l2.02,-0.32l1.74,0.31l0.88,0.58l-0.86,0.38l-3.78,-0.95ZM146.19,181.41l-4.62,1.49l-11.88,1.28l-2.78,-0.63l3.4,-1.62l5.2,-0.71l10.68,0.19ZM118.67,186.33l-15.74,1.45l1.05,-0.42l13.24,-1.39l1.45,0.37ZM104.4,192.52l-2.3,2.1l-1.24,-0.42l-1.0,-0.75l0.02,-1.31l0.81,-0.46l1.59,0.01l2.12,0.83ZM86.49,201.05l-1.79,-0.07l-1.97,0.75l-1.55,-0.63l-1.22,-1.42l-0.29,-1.2l0.84,-0.53l7.38,-1.84l3.39,-0.21l0.85,1.36l-1.66,0.21l-5.17,1.55l-0.32,0.39l0.0,0.82l0.28,0.38l1.22,0.43ZM87.0,201.35l0.07,0.04l0.19,0.21l-0.26,-0.25Z", "name": "Niedersachsen"}, "DE-HE": {"path": "M189.06,662.8l6.22,-3.72l0.46,-0.72l0.37,-2.21l1.03,-1.35l1.72,0.1l1.59,-0.34l1.56,1.35l0.71,0.28l0.56,-0.14l1.0,-3.2l0.01,-0.9l-0.54,-0.58l-2.12,-1.09l-0.61,-0.67l-0.06,-0.76l0.19,-1.05l1.13,-2.19l1.06,-1.29l5.64,-2.46l1.19,-1.1l1.97,1.5l1.1,0.01l2.15,-2.8l-0.16,-0.7l-0.79,-0.83l0.65,-1.58l5.18,0.04l1.71,-0.39l1.12,-1.08l0.01,-1.4l-1.48,-4.04l-0.77,-1.2l-1.95,-1.33l-2.99,-5.25l-1.77,-0.79l-0.33,-1.2l-0.43,-0.34l-4.82,-1.27l1.32,-1.24l1.23,-3.58l1.88,-1.97l-0.26,-0.58l-1.68,-1.09l0.1,-5.36l0.34,-1.28l1.56,-1.0l1.46,-1.69l1.46,-0.49l1.42,0.13l2.34,2.22l1.53,0.16l0.9,-0.33l2.37,-1.77l2.65,-5.78l-0.4,-0.95l-0.99,-0.56l-0.54,-0.95l-0.35,-1.95l-1.97,-4.04l0.97,-2.07l0.42,-2.19l0.87,-1.67l0.55,-0.5l1.34,-0.37l0.43,-0.57l0.8,-4.78l-0.87,-1.26l-2.35,-1.53l-0.08,-0.85l-0.76,-0.58l0.0,-0.35l5.11,-3.82l0.98,-2.01l1.94,-1.17l0.84,-1.0l5.61,-4.56l1.55,-0.06l0.97,1.8l0.86,0.57l1.74,0.25l2.76,-0.24l3.21,-1.88l0.37,-0.79l-0.07,-1.12l2.78,-2.36l1.56,-0.88l2.12,0.06l0.52,-1.07l0.13,-2.84l2.01,-3.69l0.51,-0.49l1.34,-0.46l1.66,-3.08l1.9,-2.43l-0.97,-3.82l0.23,-1.74l-1.61,-2.78l0.25,-0.65l9.73,-0.04l3.41,0.7l4.7,-2.49l0.13,-1.34l-1.08,-1.92l2.08,-2.41l3.15,-2.93l0.33,-0.95l-0.07,-1.74l-1.95,-7.73l-1.12,-0.81l0.39,-1.08l-0.17,-0.64l-0.62,-0.46l-0.83,0.01l-2.71,1.53l-4.44,0.76l-1.35,1.51l-0.75,0.14l-1.38,-0.44l-0.54,-1.6l-1.74,-1.31l0.16,-0.72l1.5,-2.53l2.08,-2.26l3.23,-2.73l0.6,-1.27l1.72,-0.95l1.16,-1.45l4.72,-1.37l3.75,-0.17l3.54,-0.82l4.62,0.89l3.74,-1.97l4.02,-0.17l0.55,-0.29l1.0,-1.67l0.25,-1.18l-1.05,-1.11l-2.21,-0.32l-0.38,-3.62l-1.42,-2.11l0.62,-1.45l5.0,-2.08l4.02,-0.87l1.52,-0.65l3.17,1.66l2.7,0.9l0.5,0.61l0.17,1.06l-0.15,2.25l2.49,2.08l3.82,0.67l1.33,-0.08l3.58,-2.32l1.97,-0.15l0.56,-1.04l0.64,-2.92l7.03,-3.95l1.49,-2.4l2.0,-1.81l0.9,-1.62l1.49,-4.22l-0.27,-0.71l-1.68,-1.12l7.81,-2.32l0.86,-0.74l1.31,-1.93l0.99,0.39l1.68,-1.34l1.57,0.14l0.46,2.42l1.75,0.9l2.24,-0.07l1.99,-1.46l1.18,1.16l1.43,0.54l1.66,0.17l2.57,-0.67l0.82,1.66l2.26,1.14l1.16,2.98l1.77,1.61l-0.91,1.14l-2.57,-1.6l-0.99,0.03l-0.47,0.52l-0.05,0.71l0.99,1.75l-1.64,-0.47l-0.7,0.14l-0.31,0.51l-0.39,3.23l-1.24,0.25l-0.51,0.49l0.18,1.27l1.92,3.63l1.22,1.37l0.91,0.41l-0.82,1.44l0.67,1.4l-0.22,1.74l0.37,3.21l-0.37,0.67l-5.26,0.47l-1.71,1.99l0.1,1.18l0.7,1.56l-3.19,-0.74l-0.45,0.48l0.72,1.25l2.98,2.22l8.44,2.96l1.4,0.03l1.12,0.52l2.78,2.99l1.71,0.24l0.99,-0.41l3.57,-2.85l0.4,-0.61l0.05,-1.02l0.91,-0.92l0.25,-0.83l-0.71,-0.75l-0.63,-0.06l-2.27,1.39l-2.96,-2.41l-0.52,-1.13l5.21,-2.78l2.45,-0.67l0.99,-0.94l-0.43,-1.37l2.91,1.36l1.54,2.67l0.81,0.67l1.3,-0.11l0.91,-0.89l0.29,-0.97l-1.31,-2.87l1.9,-0.18l1.4,-1.02l0.32,1.9l3.81,2.58l-1.46,1.07l-0.75,1.73l0.64,2.78l1.28,1.69l0.21,2.45l0.43,0.75l1.62,0.46l0.82,1.1l1.15,0.78l1.9,0.02l4.46,1.18l0.25,0.35l-0.49,1.09l0.04,0.85l0.56,0.87l1.52,1.05l0.38,1.85l0.52,0.68l3.5,1.25l2.03,0.33l1.52,0.78l2.41,0.13l2.32,1.45l3.23,1.4l-0.24,0.85l-1.43,1.46l-0.63,1.44l-0.64,4.09l-0.9,-1.05l-0.05,-1.06l-1.42,-1.4l-1.74,-0.02l-2.24,0.52l-1.07,0.82l1.54,2.44l2.61,0.65l-0.33,1.29l-1.77,2.83l-0.63,3.16l0.4,0.72l1.69,0.29l1.23,0.8l1.93,0.22l1.12,1.6l0.27,1.05l-1.58,2.94l-5.34,0.22l-0.77,-0.42l0.07,-1.0l-0.63,-0.47l-1.56,0.41l-1.13,-0.34l-4.22,0.2l-2.58,1.51l-0.45,2.05l0.29,0.98l1.64,1.88l0.26,1.48l-0.27,0.7l-2.54,0.46l-3.39,-0.3l-1.58,-0.48l-0.99,0.34l-0.44,0.87l0.21,1.67l0.93,0.27l0.72,-0.49l-0.07,1.56l0.45,1.2l0.86,0.09l1.69,-1.65l1.02,-0.15l2.22,1.43l1.99,3.1l-2.73,2.91l-0.27,0.57l0.31,1.21l-0.24,1.38l-2.81,0.88l-2.01,0.22l-1.52,0.55l-0.92,0.75l-0.79,2.63l0.37,2.31l-1.66,0.35l-0.79,1.45l1.44,1.95l-0.21,2.08l-2.03,3.63l0.06,1.51l-1.9,1.56l-1.21,1.72l-0.4,3.33l0.25,0.99l0.53,0.55l0.64,0.09l1.67,-0.53l2.71,1.2l1.5,0.1l0.86,-0.45l0.74,-1.59l-1.3,-1.8l0.22,-0.79l4.97,-1.71l4.58,0.88l0.84,0.67l1.02,2.21l0.21,2.8l-1.57,0.46l-1.0,0.94l-0.37,0.8l0.33,1.49l-0.08,3.19l0.81,1.99l-1.2,4.17l0.37,0.84l0.48,0.17l-0.79,1.94l-4.23,6.19l-1.88,1.37l-6.08,3.01l-5.77,1.88l-1.85,0.11l-0.86,-0.29l-2.75,-2.43l-2.62,0.79l-1.26,1.68l-2.34,7.08l0.55,5.34l-2.41,1.72l-4.04,1.39l-0.82,0.67l-0.87,1.02l-0.73,1.9l-0.03,1.05l0.51,1.18l-4.68,1.27l-1.31,0.02l-1.71,-0.66l-2.15,0.43l-1.62,-1.37l-1.32,0.45l-1.62,-0.4l-0.79,0.27l-0.3,1.28l0.31,2.57l-0.98,3.73l0.55,0.82l2.43,0.55l-1.67,3.05l-0.14,0.8l0.59,2.64l-0.76,0.76l-5.86,2.1l-1.42,0.19l-2.14,-0.3l-1.19,-1.32l-0.89,-1.92l-0.71,-0.64l-4.87,-2.13l-10.04,-0.61l-3.71,1.06l-0.56,2.17l-1.63,1.62l-1.41,0.86l0.51,-0.78l-0.2,-0.69l-4.5,-1.94l-5.38,2.04l-3.79,0.85l-0.88,0.74l-0.36,0.83l-0.26,3.37l-1.59,0.36l-1.25,1.35l0.13,0.59l1.66,0.94l0.5,0.1l1.48,-0.57l0.77,0.12l0.34,0.4l0.51,2.75l0.93,1.28l-0.09,1.47l1.05,1.97l-1.77,-0.58l-0.52,0.37l-0.2,9.52l3.53,9.26l0.81,1.24l0.73,0.23l1.47,-1.73l-0.18,3.35l0.87,2.03l1.2,0.94l2.28,-0.17l0.56,0.73l-2.08,3.19l0.05,0.77l0.48,0.63l2.33,1.07l-1.56,3.17l-0.13,1.17l0.33,1.26l-0.96,0.79l-1.87,0.26l-0.66,0.5l0.08,1.81l1.07,4.11l-0.39,0.63l-2.41,1.88l-0.97,1.27l0.48,1.19l1.95,1.59l1.21,1.76l-0.66,0.9l-2.0,-1.11l-0.72,0.41l-0.06,0.94l2.49,2.72l2.67,4.35l-0.53,-0.08l-1.27,-1.24l-2.83,-0.14l-1.03,0.15l-2.22,1.81l-0.82,0.27l-2.29,-0.37l-5.77,0.21l-2.88,3.09l1.56,2.62l0.21,0.73l-0.38,0.71l-2.29,1.12l-0.74,-1.11l-0.8,0.1l-1.03,2.77l-3.65,3.39l-3.34,-0.68l-0.21,-0.48l0.2,-1.48l1.57,-0.92l0.38,-0.8l-0.38,-3.0l0.18,-1.13l1.84,-1.85l1.51,1.25l1.11,-0.21l1.61,-2.44l0.13,-1.04l-0.34,-0.85l-0.4,-0.23l-5.94,0.42l-1.96,-2.58l-4.29,-0.09l-4.48,-2.24l-1.09,-1.05l-1.37,-2.83l-0.42,-1.33l0.56,-1.04l-0.1,-1.22l-1.11,-1.39l-0.19,-0.98l-0.45,-0.46l-0.7,-0.06l-7.39,1.79l-0.14,0.84l1.89,7.33l-0.58,0.7l-3.94,1.43l-6.51,-5.73l-2.49,-1.66l-2.58,-0.34l-2.96,1.03l-1.5,-3.6l-3.84,-6.83l0.16,-3.16l1.55,-2.32l2.53,-1.45l3.36,-0.63l3.44,-3.99l0.34,-1.44l-0.27,-0.46l-1.38,-0.46l-3.7,0.45l-1.35,-3.01l-1.84,-2.89l-0.93,-3.51l-1.02,-1.85l-2.22,-2.77l-0.65,-1.41l1.41,-4.57l-1.93,-4.35l-10.62,-10.19l-1.57,-0.86l-1.32,-0.28l-2.83,0.07l-12.29,3.51l-3.89,2.47l-4.64,2.05l-4.18,1.16l-3.72,0.11l-1.57,-1.95l-0.28,-1.51l-0.88,-1.29l-6.36,-4.84l-0.86,-0.31Z", "name": "Hessen"}, "DE-TH": {"path": "M402.19,500.97l-0.34,-2.77l-0.3,-0.79l-0.99,-0.96l-0.56,-2.07l0.55,-1.65l6.77,-4.71l1.13,-1.12l2.04,-0.99l0.85,-0.94l2.62,1.57l0.6,-0.21l1.05,-1.24l1.28,-0.22l4.86,0.16l0.38,-0.56l-0.28,-0.79l1.43,-0.39l1.04,-0.73l0.98,-1.6l-0.07,-1.35l0.65,-0.63l1.64,-0.18l0.79,1.07l1.57,0.18l6.05,-2.87l1.05,-2.11l3.21,-1.76l0.66,-1.04l1.54,-0.93l0.78,-0.87l1.55,-4.04l-0.52,-1.57l4.31,-0.69l0.76,0.13l4.61,2.05l3.63,2.45l4.38,-0.05l5.91,-2.19l0.4,0.03l1.34,1.21l1.03,0.34l0.96,-0.74l0.27,-1.47l-0.34,-0.93l-2.2,-2.53l0.14,-0.48l1.6,-1.55l4.54,-2.19l1.57,0.77l8.78,-0.19l4.35,1.9l2.91,0.08l1.24,1.0l3.26,1.13l1.32,0.05l0.57,0.58l0.58,1.96l-0.87,0.4l-1.43,-0.5l-1.0,0.14l-0.62,0.69l0.01,0.96l1.46,3.53l1.96,2.16l-0.13,3.01l1.55,2.97l1.0,1.28l-0.69,4.97l1.02,1.61l2.73,1.27l15.19,1.55l4.18,-0.07l9.05,1.11l2.46,0.7l5.01,3.28l2.66,4.18l5.47,6.78l-1.54,2.38l-1.08,0.84l-2.39,1.13l-4.99,0.81l-1.09,1.07l-0.46,1.08l1.3,1.73l2.21,1.21l2.1,0.68l2.95,3.75l0.58,1.98l0.11,1.7l-0.76,0.33l-0.32,0.76l0.72,2.5l1.11,1.21l1.82,0.66l5.38,0.23l3.04,-1.43l4.46,0.52l4.62,0.07l3.81,-0.66l2.3,1.43l0.38,3.14l2.26,3.58l0.55,1.81l1.51,1.17l1.05,0.21l1.16,-0.75l8.67,-0.64l1.0,0.16l2.15,1.36l4.75,1.79l1.31,1.02l1.12,2.12l3.5,1.74l0.3,1.17l0.5,0.32l4.04,-0.32l2.76,-0.57l5.71,1.52l2.69,-1.18l2.88,2.04l0.67,1.03l1.11,0.24l2.04,-1.3l-0.04,-2.32l3.36,-3.56l2.39,-3.77l0.0,-1.02l-0.57,-1.06l-2.48,-1.48l0.46,-2.42l1.68,-2.53l-0.08,-0.8l5.81,-0.49l14.88,3.75l0.76,3.76l3.0,4.34l1.01,1.97l1.5,1.27l5.45,2.39l2.27,2.99l2.01,3.61l-0.01,0.58l-1.47,0.71l-1.8,2.03l-1.16,-0.94l-1.6,0.27l-3.12,-0.36l-2.17,0.21l-1.81,-0.61l-0.53,0.3l-0.51,1.26l-3.79,1.75l-3.72,4.11l-1.56,-0.62l-3.6,0.37l-3.95,2.55l-7.1,1.78l-0.3,0.35l0.0,1.64l1.2,1.13l1.63,0.6l0.19,0.36l-1.43,1.5l-1.21,0.18l-1.11,0.78l-1.02,2.57l0.45,0.77l1.65,-0.12l0.77,0.47l-0.39,2.08l0.66,1.89l0.83,1.11l1.25,0.51l2.56,0.08l-1.69,2.45l-1.06,0.98l-3.48,2.13l-2.33,0.11l-1.91,-0.31l-2.41,0.29l-2.8,2.95l0.04,2.82l-0.63,1.84l-0.58,0.56l-2.5,0.69l-1.98,-0.8l-1.73,0.25l-2.42,3.17l-0.87,0.66l-1.37,-0.15l-1.26,-1.39l-0.83,-0.39l-1.1,-0.22l-1.39,0.41l-2.02,2.36l-2.37,1.54l-1.75,2.54l-0.15,1.46l1.69,1.39l0.34,0.72l0.04,0.98l-1.0,1.15l-0.21,1.27l-2.17,0.76l-1.15,0.83l-0.38,1.07l0.56,0.9l-2.8,1.41l-4.3,1.44l0.13,-0.82l-0.29,-0.38l-1.85,-0.74l-0.87,-0.92l-1.28,-0.1l-2.37,0.36l-0.59,0.74l-1.51,0.38l-11.5,2.04l-2.9,-0.97l-2.23,-0.02l-0.59,0.29l-0.89,1.32l-2.68,0.4l-3.61,-2.17l-0.41,-3.07l-0.58,-0.88l-0.89,-0.36l-1.59,0.22l-2.97,-1.89l-0.23,-0.91l0.23,-4.07l1.39,-0.87l0.39,-0.74l-1.2,-2.34l-1.95,-0.62l-6.26,-0.29l-1.14,0.98l-1.37,0.65l-0.75,1.83l-1.9,1.04l-1.91,0.37l-2.72,1.1l-0.23,0.5l0.76,2.05l-0.2,0.97l0.79,2.65l-0.32,3.29l0.49,0.89l0.15,1.3l1.12,1.57l0.29,1.85l-1.11,0.62l0.16,1.51l-1.11,2.58l0.66,2.07l-1.03,2.08l0.1,1.55l-0.77,0.14l-2.12,-0.55l-1.66,-0.95l-0.7,0.37l-0.74,1.15l-4.43,-3.51l-0.53,-0.72l1.74,-1.68l0.17,-1.07l-1.9,-2.81l-0.85,-0.47l-0.79,-0.03l-0.44,-1.11l-0.51,-0.41l-1.68,0.2l-1.36,1.17l-3.38,0.82l-2.23,-1.68l-2.91,-0.35l-0.56,0.27l-0.37,1.38l-4.23,-4.7l-1.66,-0.09l-3.02,0.73l-1.15,-1.23l-1.0,-0.32l-1.56,0.61l-2.29,-0.2l-2.55,1.14l-1.97,-0.51l-1.29,0.82l-2.04,2.91l-2.43,-0.51l-1.13,0.6l-0.51,0.98l-0.29,3.91l0.92,1.07l2.66,1.32l1.94,1.68l2.96,0.17l1.26,1.79l2.78,0.9l0.48,1.34l-0.13,1.2l-0.37,0.4l-0.87,0.11l-2.93,-0.93l-4.01,0.63l-1.94,-0.58l-1.1,1.02l-0.69,4.16l-3.21,-1.63l-2.42,-0.56l-4.35,0.01l-1.01,-1.19l0.26,-1.78l-1.24,-2.29l0.56,-3.11l-0.96,-4.55l-2.51,-1.79l-1.27,-2.36l-0.4,-0.21l-1.63,0.19l-1.03,0.67l-2.44,-0.21l-0.35,-1.35l-2.71,-1.97l-1.63,-2.41l-2.71,0.46l-1.78,-0.14l-0.59,-0.35l-0.4,-0.87l0.92,-1.29l-0.27,-0.77l-2.71,-1.88l-1.71,-1.89l-1.39,-0.95l-0.29,-2.27l-0.56,-1.23l-0.59,-0.48l-9.35,-2.99l-1.01,-2.63l-1.92,-1.77l-1.6,-0.4l-5.19,0.34l-0.36,-0.42l-0.04,-1.3l-0.69,-0.32l-1.69,1.01l-5.23,4.9l-0.39,-0.03l1.12,-4.39l-0.84,-2.13l0.09,-3.09l-0.34,-1.33l1.08,-1.22l1.45,-0.22l0.44,-0.82l-0.26,-3.13l-1.09,-2.35l-0.69,-0.73l-4.95,-1.16l-1.23,0.01l-4.98,2.12l-0.22,1.34l1.26,1.57l-0.67,1.18l-1.42,0.01l-2.79,-1.22l-1.93,0.53l-0.34,-0.26l-0.11,-2.38l0.27,-1.16l1.07,-1.52l2.01,-1.69l0.03,-1.7l2.03,-3.64l0.22,-2.52l-1.38,-1.69l0.34,-0.79l0.93,-0.33l0.62,0.24l0.49,-0.5l-0.35,-2.72l0.73,-2.34l1.94,-0.9l2.0,-0.22l3.05,-0.99l0.51,-0.82l-0.05,-2.64l2.87,-3.0l-0.0,-0.57l-1.08,-1.18l-0.85,-1.76l-1.5,-1.31l-1.4,-0.75l-0.98,-0.04l-0.98,0.49l-1.32,1.37l-0.26,-2.69l-0.89,-0.28l-0.75,0.57l0.01,-1.24l0.99,-0.34l0.99,0.48l3.6,0.32l3.02,-0.64l0.54,-1.23l-0.29,-1.78l-1.9,-2.62l0.22,-1.48l2.22,-1.33l3.94,-0.18l1.16,0.34l1.46,-0.39l0.02,1.12l1.77,0.81l4.9,-0.22l0.64,-0.26l1.77,-3.22l0.11,-0.78l-1.85,-2.88l-2.06,-0.27l-1.26,-0.8l-1.49,-0.22l0.54,-2.9l1.76,-2.79l0.4,-1.79l-0.68,-0.65l-2.26,-0.47l-1.06,-1.66l2.43,-0.68l1.45,0.0l0.97,1.08l0.0,1.01l0.79,0.65l0.29,0.84l0.68,0.13l0.69,-0.82l0.56,-3.98l0.5,-1.2l1.43,-1.46l0.47,-1.12l-0.53,-1.03l-3.17,-1.31l-2.4,-1.49l-2.48,-0.15l-1.5,-0.78l-2.08,-0.34l-3.25,-1.14l-0.67,-2.29l-2.01,-1.77l0.5,-1.75l-0.55,-0.88l-4.8,-1.34l-1.77,0.02l-1.79,-1.79l-1.64,-0.49Z", "name": "Th\u00fcringen"}, "DE-BW": {"path": "M174.35,977.77l0.94,-0.09l1.04,-0.87l1.4,-3.28l-0.41,-0.55l-2.22,0.2l-4.37,1.12l0.43,-1.22l-0.29,-1.37l-1.72,-1.74l-2.19,-3.76l-1.37,-1.65l-1.49,-0.71l-0.28,-0.42l-0.55,-3.8l2.54,-3.12l0.04,-2.16l-1.19,-4.29l0.25,-1.61l1.36,-3.94l1.92,-1.37l0.21,-1.54l-0.52,-3.81l1.96,-2.97l0.08,-2.67l0.47,-1.5l2.54,-2.3l1.06,-1.83l-0.28,-4.11l-4.18,-6.31l-0.29,-5.0l0.6,-2.37l0.64,-1.85l1.87,-2.86l0.23,-1.89l0.6,-1.42l6.17,-7.39l1.08,-1.88l1.5,-7.27l3.36,-1.95l1.43,-2.06l0.11,-1.9l-1.14,-3.28l-0.3,-1.43l0.11,-1.57l1.19,-4.65l1.82,-3.25l0.23,-2.45l0.44,-1.0l3.7,-2.92l-0.03,-1.02l-1.12,-2.6l0.01,-4.26l0.81,-3.99l4.04,-5.37l2.73,-1.12l1.5,-1.11l2.7,-2.74l2.48,-1.74l1.1,-1.24l0.5,-1.1l0.15,-2.47l0.41,-0.89l4.58,-0.59l0.7,-0.62l0.42,-1.85l0.96,-1.12l0.81,-0.06l4.36,-2.22l1.26,-1.82l4.44,-10.4l3.02,-4.86l1.91,-1.87l3.04,-0.98l3.22,-2.96l2.09,-2.77l7.22,-12.62l0.48,-1.41l1.87,-12.06l0.61,-2.04l2.24,-1.43l6.88,-6.97l0.35,-1.6l-0.28,-0.47l-1.97,-0.59l3.62,-7.35l0.04,-1.46l-0.71,-3.04l1.32,-2.87l-1.26,-1.62l-4.76,-1.12l0.0,-0.31l1.82,-0.77l0.24,-1.24l-1.36,-2.54l-2.19,-5.45l-1.84,-2.6l0.73,-2.7l2.97,-1.04l2.18,0.3l2.26,1.53l7.02,5.94l4.3,-1.55l0.92,-0.98l0.02,-1.21l-1.85,-6.88l7.12,-1.49l0.11,0.81l1.31,2.01l-0.6,1.53l0.48,1.6l1.45,2.99l1.28,1.26l4.79,2.38l1.73,0.23l2.4,-0.19l1.16,1.97l0.98,0.67l5.86,-0.39l-0.1,1.47l-1.21,1.67l-0.7,-0.17l-0.89,-0.93l-0.58,-0.14l-2.19,1.89l-0.55,1.38l0.33,3.57l-1.88,1.43l-0.23,1.76l0.53,1.07l3.21,0.91l0.87,-0.12l1.04,-0.64l2.98,-3.01l0.87,-2.61l0.41,0.93l0.75,0.22l2.83,-1.41l0.56,-1.31l-0.67,-1.77l-1.09,-1.36l2.51,-2.51l5.29,-0.11l2.5,0.35l1.07,-0.38l2.19,-1.78l0.64,-0.05l2.42,0.05l1.28,1.23l1.37,0.08l0.34,-0.7l-0.27,-0.91l-2.56,-3.92l-2.42,-2.72l1.27,0.87l0.87,0.15l0.51,-0.21l0.65,-0.94l1.08,0.39l5.51,-1.02l1.46,0.22l6.52,-0.22l1.17,-1.17l0.67,-1.78l1.37,-1.24l-0.23,-2.22l0.53,-0.57l2.02,-0.87l3.16,-0.22l2.78,-1.04l1.67,1.25l1.06,0.06l2.01,-1.51l0.12,-0.46l-0.71,-1.51l1.15,-5.53l-0.13,-0.44l-0.7,-0.62l-2.58,-0.69l-0.78,0.55l-0.77,1.84l-0.89,0.17l0.35,-1.91l-0.59,-0.97l-4.04,-0.75l-1.03,-0.49l-0.04,-0.61l0.69,-1.6l-0.71,-1.85l1.35,-1.35l2.12,-0.87l4.72,0.28l3.66,-1.1l5.15,-0.4l5.34,2.11l1.32,0.08l1.6,-0.49l2.78,1.41l2.75,-0.74l1.57,-0.88l0.24,0.13l0.13,0.5l-0.7,1.2l0.32,1.94l-0.55,1.29l0.2,1.35l-0.81,0.71l0.07,1.15l-0.88,2.04l0.69,1.02l1.74,0.8l1.59,0.16l1.24,-0.5l0.55,-2.17l1.24,-0.56l0.76,-1.11l0.29,1.95l0.94,1.81l0.7,0.53l0.88,-0.26l3.12,-2.95l2.71,-1.0l3.42,3.79l-0.03,3.37l0.31,1.69l3.91,3.76l0.64,1.01l-0.31,0.88l-1.67,1.84l-0.28,0.94l0.08,1.66l-1.98,2.03l0.01,0.88l1.23,0.86l0.82,0.05l0.85,-0.38l0.55,-0.64l0.51,-1.5l1.26,-0.44l1.21,-1.44l0.91,-0.32l0.4,0.54l-0.6,1.42l1.68,1.44l0.42,2.72l-0.21,2.83l0.43,3.16l0.42,0.43l1.1,0.21l7.07,-0.13l0.97,-0.4l3.91,-3.5l0.15,-1.23l-0.84,-1.28l0.17,-0.27l2.11,-1.41l1.27,0.67l-0.61,1.34l0.09,0.66l1.04,0.84l1.49,0.2l0.57,0.44l-0.81,2.13l1.08,2.45l-0.68,1.9l-1.08,1.37l-0.03,0.82l2.74,1.19l2.9,5.97l-1.57,-0.51l-1.19,0.15l-2.06,2.16l-0.26,3.55l0.28,0.98l1.14,1.35l2.01,0.94l-0.71,2.21l1.08,2.44l0.14,1.21l-0.42,0.11l-1.89,-0.85l-0.61,0.29l-0.25,0.8l0.37,1.08l1.37,1.29l0.09,2.58l0.53,1.04l0.99,0.99l-1.22,0.55l-0.06,0.68l1.22,1.14l2.14,1.28l2.35,2.75l1.39,1.16l0.78,0.12l1.66,-0.72l1.83,1.44l0.04,2.34l-0.95,1.98l-0.46,0.34l-1.51,0.1l-0.4,0.9l0.69,0.69l2.45,0.87l-0.21,1.54l1.79,1.53l-0.39,1.61l0.15,0.54l2.69,1.1l1.9,0.12l1.91,0.96l1.45,0.05l1.11,2.72l4.69,3.56l0.78,1.3l1.62,1.6l0.61,1.39l1.23,1.13l0.83,2.66l-1.94,0.8l-0.27,0.67l1.04,0.98l-0.28,4.6l-0.48,1.5l1.08,2.33l-0.47,1.99l-1.17,1.07l-0.28,0.72l0.02,3.22l-0.71,1.13l-0.08,1.39l0.26,1.1l0.77,0.88l2.06,0.96l0.86,0.03l0.58,1.51l1.57,2.49l-5.03,3.67l-0.19,-0.91l0.5,-0.96l-0.02,-0.89l0.57,-0.43l0.07,-0.58l-0.7,-0.76l-1.15,-0.1l-5.56,5.04l-1.96,-3.02l-3.03,-0.16l-2.05,-1.63l-0.93,0.08l-2.24,2.61l-0.28,1.89l1.85,3.16l4.41,2.87l-0.26,0.73l-1.5,0.64l-0.4,0.64l0.12,1.11l0.98,1.84l0.19,1.19l-0.14,1.29l-1.13,2.82l0.19,0.81l-4.23,0.38l-1.51,1.42l-0.39,1.58l-9.25,4.8l-0.75,-0.36l-0.51,-1.82l-0.62,-0.49l-0.81,-0.12l-2.79,1.54l-3.46,0.66l-1.4,1.2l-1.01,1.61l0.17,1.69l-6.03,6.88l-0.03,0.47l0.88,1.4l1.4,0.27l1.82,3.45l3.09,4.45l1.54,4.46l3.86,15.17l2.64,5.14l0.29,1.53l-0.17,4.59l-0.71,2.69l-2.83,6.77l-1.22,0.8l-0.36,0.66l0.2,1.44l2.23,3.13l-0.36,4.33l-0.43,0.61l-0.46,2.19l-0.97,0.93l-0.14,0.54l0.45,0.71l1.34,0.14l2.31,5.03l-0.66,0.29l-0.88,1.27l-2.25,0.27l-0.98,1.58l0.2,0.77l1.27,1.05l0.59,1.08l1.44,0.35l0.21,0.37l0.54,6.42l0.83,2.5l-0.49,1.58l-3.29,-0.55l-0.57,1.1l-0.13,1.76l-0.51,0.56l-1.24,-2.81l-1.02,-0.68l-1.91,-0.04l-2.51,0.59l-2.18,1.03l-3.26,0.94l-2.28,0.02l-2.3,-0.48l-4.2,-1.44l-3.11,1.28l-7.24,5.55l-4.24,1.86l-3.56,-0.78l-1.54,0.64l-0.96,1.29l-3.38,0.68l-1.16,0.76l-1.15,-0.49l-4.02,-0.65l-1.38,-0.64l-1.47,-1.59l-1.45,-3.71l-0.9,-0.99l-1.1,-0.57l-3.16,-0.36l-5.3,-2.32l-6.08,-0.37l-1.75,-0.45l-9.28,-5.3l-1.64,-4.39l-0.84,-0.41l-2.61,-0.39l-10.32,-6.38l-3.9,-0.52l-0.39,0.61l0.85,1.29l3.3,2.99l7.36,3.46l1.19,1.48l2.06,5.28l2.2,2.82l0.05,0.63l-7.24,0.21l-10.93,-1.06l-2.02,0.65l-1.63,1.48l-3.44,0.94l-3.75,0.3l-2.28,-0.51l-4.07,-2.89l-0.0,-0.35l1.48,-0.3l0.17,-0.7l-2.61,-2.11l-3.21,-1.6l-2.8,-0.15l-0.39,0.26l-0.88,2.45l0.2,0.52l-3.89,0.05l-0.36,-1.46l-1.15,-1.75l1.81,-2.78l-0.64,-1.64l-1.25,-0.37l-1.94,0.03l-2.36,-3.55l-1.48,-0.5l-1.27,0.89l-0.6,2.77l-0.84,0.47l-0.62,-0.4l-0.8,-4.17l-1.94,-0.73l-2.44,-0.12l-1.76,0.81l-0.19,0.53l0.74,1.6l-1.06,0.46l-6.26,0.86l-1.09,0.55l-1.37,1.75l-1.19,3.35l-3.35,1.88l-1.07,1.02l-0.23,1.16l0.64,1.98l-0.57,1.23l0.24,0.55l2.01,0.55l4.7,2.66l1.89,-0.1l4.23,-2.09l4.66,-0.68l3.36,0.79l-0.35,1.88l-0.15,-0.7l-0.38,-0.23l-1.05,0.2l-0.61,0.52l-0.23,0.92l0.39,1.05l-0.04,2.04l-0.6,1.57l-0.94,0.27l-2.12,-2.69l-1.8,-1.31l-3.1,0.31l-3.0,1.71l-1.41,2.72l-2.72,0.39l-6.21,-0.03l-3.62,-0.83l-0.82,-0.46l-1.14,-2.27l-0.86,-0.78l-3.62,-0.76l-1.88,-0.01l-5.49,0.82l-1.66,1.49l-1.77,0.46l-2.99,1.55l-1.71,2.02l-0.83,0.49l-4.31,0.83l-12.49,0.0l-0.63,-2.57l-0.72,-0.73l-6.5,-0.43l-1.31,-0.58l-0.48,0.13l-3.26,3.92l-1.73,0.85l-8.06,1.44l-2.04,-0.23l-3.3,-1.5Z", "name": "Baden-W\u00fcrttemberg"}, "DE-HH": {"path": "M382.17,201.49l1.03,-4.25l1.01,-1.1l0.43,-1.53l1.53,0.25l1.9,1.12l-0.31,2.69l0.56,0.58l0.89,0.21l1.29,-0.59l9.63,-6.45l2.35,-0.59l3.23,0.43l1.08,-0.69l1.02,-2.14l0.79,-0.68l1.76,-0.41l1.82,0.19l1.03,-0.46l0.68,-0.62l1.26,-4.23l0.66,-0.65l5.87,0.76l2.92,-1.83l1.14,0.05l-0.19,0.95l-2.1,2.91l-0.53,1.56l0.61,0.99l3.39,2.06l0.35,2.25l1.08,0.81l0.23,0.58l-0.72,2.55l-0.38,3.79l-3.08,0.95l-0.69,0.69l0.75,3.35l0.24,2.74l0.57,0.79l2.65,0.87l3.34,4.02l2.89,1.46l3.39,3.0l0.77,-0.01l0.52,2.29l-3.7,0.0l-1.1,0.29l-1.09,0.58l-2.35,2.62l-5.14,0.28l-1.52,-0.28l-1.48,-0.87l-2.17,-2.25l-2.1,-0.52l-2.94,-2.3l-5.11,1.36l-0.52,0.74l0.02,1.1l-4.04,1.6l-1.45,0.08l-2.33,-1.12l-3.08,0.96l-0.5,-3.1l-0.71,-0.98l-1.08,-0.39l-0.95,0.26l-1.87,1.9l-0.36,0.03l-3.85,-3.12l-1.12,-1.56l-1.12,-2.55l-1.1,-0.86l-0.5,-1.05l-0.81,-0.75l-0.35,-4.61l4.86,0.88l1.48,-0.45l0.2,-0.61l-1.22,-1.74l-3.84,-1.89l-3.7,-0.37Z", "name": "Hamburg"}, "DE-SH": {"path": "M521.78,88.19l-2.9,0.15l-2.4,-0.32l-0.89,-0.89l0.18,-2.57l-0.74,-1.47l-1.51,-0.44l-2.57,-0.07l-1.16,0.28l-1.07,0.79l-0.94,-1.55l-1.39,0.36l-0.17,-1.2l2.65,-5.28l3.69,-2.91l4.54,-0.62l8.23,2.86l3.15,2.45l6.78,10.31l-11.47,-1.56l-2.02,0.86l0.01,0.81ZM297.93,104.64l0.36,-1.02l-0.4,-0.57l-2.98,0.29l-5.15,1.27l-2.94,0.28l-3.64,-0.47l-1.64,0.55l-3.2,2.49l-0.96,0.26l-2.44,-0.71l-2.68,-1.98l-1.93,-2.83l-0.26,-3.23l1.2,-1.2l2.57,-0.94l2.93,-0.48l2.27,0.09l0.42,-0.4l0.0,-0.92l-0.33,-0.39l-1.67,-0.32l-1.27,-0.98l-1.44,-0.4l-1.58,1.41l-0.5,-0.88l0.25,-1.31l1.64,-2.22l2.06,0.68l7.91,-1.75l10.74,0.0l2.58,-0.55l2.22,-1.11l4.11,-2.93l3.74,-1.49l1.7,-1.04l0.85,-2.54l-0.08,-3.53l-2.55,-3.16l-7.98,-6.94l-1.08,-1.36l-0.61,-1.58l-1.14,-0.7l-2.02,0.05l-3.03,0.96l-0.23,-0.34l2.98,-1.65l0.17,-0.52l-3.43,-7.38l-1.3,-1.95l-2.95,-1.54l-5.28,-3.73l-3.16,-1.27l0.51,-3.29l-1.28,-2.77l-3.21,-5.04l-0.54,-3.45l0.43,-3.06l1.2,-3.56l3.17,0.78l3.62,0.13l6.78,-2.02l2.21,-0.27l7.75,1.07l7.73,2.54l20.73,3.93l1.46,1.04l0.71,3.18l0.72,1.62l2.1,0.8l8.69,-0.2l1.08,-0.82l1.3,-0.29l1.15,-0.79l1.51,-0.28l2.04,1.47l1.66,0.15l3.06,-0.45l5.85,-2.38l1.92,-1.88l2.51,-0.89l1.19,-1.71l0.64,-0.42l0.28,4.22l0.29,0.36l4.85,1.43l5.97,0.25l3.99,1.42l6.45,3.17l1.04,2.34l1.49,1.4l2.63,-0.37l4.47,-1.38l0.28,-0.44l-0.33,-2.4l1.78,-0.1l3.03,1.51l2.13,2.18l1.31,4.55l0.66,1.17l2.4,2.37l-0.68,0.42l-3.25,-0.76l-2.58,1.84l-1.55,0.47l-0.33,0.53l-0.05,1.25l0.38,0.41l1.44,0.08l2.64,-0.63l2.34,-0.11l1.35,1.46l0.52,0.06l0.96,-0.67l0.78,-0.05l0.31,0.47l-0.63,1.72l0.47,2.08l0.06,2.62l-1.04,7.93l-1.55,3.35l-1.19,1.39l-3.09,2.32l-3.88,1.74l-4.19,1.1l-4.08,0.37l-0.36,0.4l0.0,0.93l0.24,0.37l4.47,1.81l23.6,-4.54l1.68,0.48l5.45,3.83l-1.69,1.55l0.03,1.65l1.24,3.65l-0.51,1.63l-1.3,1.58l-1.67,1.14l-1.62,0.4l-0.21,0.65l0.53,0.59l-0.55,0.77l0.06,0.53l0.96,0.84l0.24,0.91l-0.33,1.1l-0.92,1.24l-0.01,0.47l0.44,0.15l2.32,-0.74l1.7,-1.71l2.31,-4.21l1.32,-4.52l0.63,-1.0l0.82,-0.44l3.76,-0.35l1.47,-0.73l1.95,-2.12l0.98,-0.26l4.04,0.29l2.06,0.82l5.99,3.86l15.42,5.52l8.7,6.62l4.2,0.89l4.76,-0.7l3.37,-1.69l5.58,-4.2l3.18,-1.66l3.31,-1.13l3.58,-0.38l0.18,0.51l1.7,0.62l1.78,-0.4l2.53,1.22l6.75,-3.35l2.25,0.69l-3.98,3.91l-1.86,-0.76l-0.43,0.11l-0.06,0.44l1.04,2.16l0.89,5.33l0.74,2.47l-0.7,1.74l0.07,2.35l0.65,3.82l-0.39,2.14l-1.78,1.95l-0.49,1.18l-11.26,5.92l-3.99,4.11l-1.62,0.85l-4.58,1.06l-0.87,0.53l-1.3,-0.92l-0.88,-0.07l-0.99,0.45l-5.4,6.39l0.04,1.02l1.34,2.69l1.43,1.94l1.98,1.36l2.8,0.75l3.85,-0.3l0.74,0.24l0.58,1.17l0.48,2.85l1.69,0.61l0.03,3.92l0.76,0.99l0.95,0.56l3.23,0.85l-0.73,0.48l-2.99,0.39l-0.34,-0.34l0.07,-1.26l-1.81,-0.67l-0.89,0.03l-2.4,1.29l-4.79,3.63l-4.49,2.09l-1.24,1.91l-0.47,1.93l1.17,2.93l0.79,3.5l-1.22,5.47l0.1,0.82l0.48,0.35l4.31,0.71l3.87,4.28l1.12,0.84l0.86,0.41l2.17,-0.23l2.65,0.66l2.18,1.53l0.62,0.86l0.1,1.61l0.97,1.86l-0.24,1.9l-1.39,1.01l0.1,2.43l1.27,4.35l-0.04,0.34l-0.84,0.4l-0.14,0.63l0.84,0.33l-1.79,1.8l-0.86,-2.34l-1.15,-0.78l-5.04,0.52l-1.59,-0.49l-1.38,0.31l-0.31,0.71l0.5,2.57l-0.9,2.1l-0.2,2.0l-5.86,3.54l-5.51,1.41l-1.3,2.66l-1.42,-0.26l-1.38,0.17l-2.21,1.08l-0.64,0.97l-0.81,4.25l-0.01,1.64l-0.43,1.23l-1.94,2.42l-2.9,0.99l-3.88,-1.09l-13.96,-6.88l-3.53,-1.09l-2.0,-0.09l-0.67,-2.82l-1.09,-0.23l-3.27,-2.89l-2.93,-1.5l-3.3,-3.99l-2.68,-0.89l-1.2,-5.99l2.97,-0.89l0.67,-0.51l0.5,-4.11l0.73,-2.63l-0.2,-0.87l-1.19,-0.93l-0.42,-2.39l-3.56,-2.2l-0.3,-0.51l1.39,-2.57l1.34,-1.74l0.2,-0.88l-0.56,-0.81l-1.75,-0.07l-2.78,1.79l-5.89,-0.78l-1.24,1.16l-1.24,4.18l-0.36,0.28l-0.63,0.34l-1.89,-0.17l-2.03,0.49l-1.08,0.92l-0.97,2.08l-0.72,0.45l-3.1,-0.46l-2.63,0.69l-10.73,6.95l-0.54,-0.41l0.41,-2.01l-0.17,-0.77l-2.24,-1.36l-1.88,-0.31l-0.6,0.29l-0.47,1.62l-0.96,0.96l-1.21,4.74l-4.38,-0.41l-3.52,-1.14l-7.0,-3.69l-3.1,-2.85l-1.11,-4.13l-0.67,-5.99l-1.21,-1.03l-6.07,-2.52l-2.27,-1.69l-2.23,-3.93l-1.52,-4.25l-0.14,-2.63l-0.28,-0.36l-3.52,-1.13l-6.15,-4.31l-3.86,-1.9l-3.73,-0.71l-12.4,-0.23l-3.67,-1.38l-2.55,-0.58l-1.41,0.63l-1.0,1.28l-1.96,-0.53l-3.36,-2.08l-3.22,-3.23l-7.84,-12.88l3.27,-1.22l1.73,-0.11l2.24,0.5l3.81,2.07l2.2,0.6l2.4,-0.84l0.96,-1.67l0.83,-2.74l0.55,-2.93l-0.02,-2.16l-1.23,-1.63l-3.04,-2.57l0.25,-2.25l-0.3,-0.39l-2.55,-0.6l-3.43,0.51l-3.28,1.27l-2.08,1.57l-4.26,-6.58l-0.21,-0.51l0.74,-2.51l2.52,-4.46l-0.66,-2.92l0.96,-0.59l5.72,-1.08l1.23,-0.75l3.16,-3.93l1.02,-2.09l-0.42,-0.57l-2.24,0.35l-3.82,2.63l-1.25,0.45ZM505.27,92.96l1.41,-0.15l0.0,0.09l-1.41,0.06ZM297.84,80.79l-4.13,0.26l-1.82,-0.53l-0.72,-1.01l0.85,-0.54l0.14,-1.05l-0.95,-1.26l2.66,-2.06l3.33,-1.23l3.77,-0.18l3.41,0.73l-0.11,1.55l-1.7,1.34l-2.58,3.1l-2.15,0.89ZM276.26,76.33l-2.63,1.21l-1.99,-0.03l-1.07,-0.76l-0.89,-1.73l0.52,-1.88l3.0,-1.63l5.83,-2.0l0.12,0.91l-0.75,3.16l-2.15,2.75ZM278.04,137.9l-0.16,0.39l-0.79,-0.21l-1.19,-1.75l0.24,-1.51l0.94,-0.79l0.28,-0.0l0.13,1.76l0.87,0.87l-0.32,1.25ZM248.66,23.66l4.99,1.03l5.58,-0.23l-3.34,1.97l-1.38,0.32l-6.64,0.0l-1.42,-1.42l-1.93,-0.32l-4.34,2.32l-0.85,4.57l0.33,7.4l-0.75,4.1l-0.46,-1.36l-0.08,-3.51l1.13,-14.71l0.91,-2.83l7.39,-16.61l1.52,-1.52l0.16,0.48l2.49,0.21l0.62,1.29l-0.73,1.57l-4.0,1.85l-1.92,2.34l-1.02,2.74l0.83,2.71l-0.56,4.74l3.48,2.89ZM250.3,1.86l1.38,-1.39l2.81,1.2l-4.19,0.18ZM264.77,24.24l8.78,-0.35l-1.1,0.7l-7.68,-0.34ZM266.78,50.31l-0.69,0.79l-1.15,0.3l-1.55,-0.15l-2.54,-1.02l-2.45,0.75l-3.03,-0.75l-5.27,-2.63l1.64,-2.42l2.11,-1.64l2.57,-0.82l3.21,-0.22l5.36,0.26l2.06,1.01l1.62,2.25l0.0,0.67l-0.78,1.07l-1.09,2.55ZM245.09,48.48l-1.98,1.85l-0.04,0.5l4.9,7.42l1.39,0.69l-0.71,0.49l-3.09,0.9l-2.09,-1.53l-1.81,-2.65l-1.77,-1.95l2.64,-4.0l1.65,-1.46l0.9,-0.27ZM203.59,118.61l-0.73,0.18l-0.01,-0.01l0.73,-0.17ZM200.05,118.64l0.62,0.33l0.13,0.51l-0.19,-0.05l-0.56,-0.79Z", "name": "Schleswig-Holstein"}, "DE-NW": {"path": "M55.93,626.7l-2.43,1.05l-2.02,0.01l-0.12,-0.64l-3.35,-4.89l-0.11,-1.32l1.36,-4.73l0.08,-2.23l-0.47,-0.71l-0.78,-0.22l-0.72,-0.99l-0.76,-2.27l0.19,-0.81l1.12,-1.25l-0.36,-0.27l-5.94,-0.89l-1.95,-0.84l-3.93,1.09l-0.8,-0.03l-2.0,-2.3l0.56,-0.8l-0.3,-0.63l-1.62,-0.26l0.61,-1.03l-0.03,-0.52l-1.4,-1.48l1.56,-2.05l3.02,-2.1l2.17,-1.08l1.97,-2.9l-0.18,-1.09l-0.38,-0.29l-6.7,-0.14l-1.83,-0.8l-0.86,-1.39l0.93,-0.5l0.13,-0.6l-5.97,-7.63l-1.95,-1.64l-1.98,-0.21l-3.82,0.88l-0.98,-0.1l-0.26,-0.73l0.3,-2.6l-1.78,-1.06l0.34,-2.53l-1.65,-1.41l-0.9,-1.92l1.19,0.11l1.54,-1.29l0.53,-1.74l-0.29,-2.13l0.72,-1.09l1.15,-0.55l2.11,0.15l1.49,-1.33l0.63,-1.48l0.01,-1.16l-0.8,-2.56l0.85,-1.92l-0.26,-0.52l-3.17,-0.92l-2.85,-1.74l-0.35,-2.63l0.95,-2.34l-0.63,-0.96l-3.45,0.35l-4.06,-0.85l-4.74,1.51l-0.12,-2.95l-1.5,-3.69l-0.49,-2.68l2.29,-1.01l1.12,0.53l2.47,2.25l2.32,-0.18l1.28,-1.2l1.86,-3.25l1.25,-1.2l9.02,-5.89l5.56,-2.51l1.59,-1.71l-0.05,-0.58l-1.63,-1.26l2.52,-1.57l0.22,-0.39l-0.29,-0.35l-2.56,-0.61l-4.71,2.69l-1.95,-0.9l-0.63,-2.15l0.27,-2.78l0.81,-2.49l3.05,-3.5l5.0,-7.67l3.42,-2.21l1.08,-1.23l0.62,-1.84l0.3,-2.78l0.54,-1.08l-0.08,-0.46l-1.35,-1.34l0.12,-2.18l1.1,-5.36l-1.18,-6.76l-4.06,-4.01l-6.46,-7.37l-0.37,-1.41l1.63,-4.65l-0.24,-0.52l-6.56,-2.39l-2.02,-2.13l1.24,-3.47l-1.09,-1.27l-3.43,-1.89l-3.55,-0.18l0.05,-0.93l2.19,-1.97l0.17,-2.64l-1.35,-2.74l-2.12,-1.41l0.21,-0.73l1.43,-0.84l3.93,-0.58l1.97,-0.69l3.43,-1.87l3.87,-0.86l7.0,1.5l0.42,-0.18l-0.02,-0.46l-1.37,-1.78l-4.3,-3.59l2.5,-1.12l2.97,1.16l3.21,2.14l3.32,1.13l3.85,-0.47l2.11,2.52l3.93,0.58l1.34,0.65l0.26,1.83l0.49,0.33l3.97,-1.12l0.41,-1.53l-0.62,-2.3l5.63,1.38l2.23,-0.01l1.7,-0.65l4.78,-3.04l9.66,-2.73l8.64,-0.23l2.81,-1.22l2.45,-2.4l2.21,-3.32l1.99,-1.19l0.24,-1.89l-0.26,-1.01l-3.26,-3.11l-9.91,-4.28l-0.17,-1.68l0.56,-1.13l3.09,-0.94l0.86,-0.93l1.26,-2.32l1.58,-1.36l1.46,-0.67l6.5,-0.66l1.34,-1.05l2.14,-3.6l1.8,-1.56l4.24,-1.55l2.04,-1.52l3.27,-4.01l4.31,-2.16l0.46,-0.99l2.13,0.05l4.05,-1.42l2.66,-1.82l13.4,-0.46l4.12,-0.75l6.73,-4.09l2.95,-0.61l1.84,-0.9l5.03,-4.3l4.49,-3.08l1.76,-0.41l2.87,0.2l1.62,-1.66l1.44,-3.57l1.19,-0.82l-0.18,-0.83l-1.47,-1.15l-0.31,-0.85l1.14,-4.04l0.83,-0.74l7.55,2.02l0.72,1.36l0.83,4.52l0.4,0.68l2.91,1.13l6.57,3.41l1.49,1.44l1.55,0.32l6.37,-2.07l0.76,0.12l3.51,3.8l2.76,3.96l0.09,0.4l-3.29,0.46l-0.78,0.57l-0.12,0.76l0.36,1.19l1.3,1.98l-2.86,2.97l-0.04,0.87l0.86,1.97l-0.7,1.17l-1.65,1.64l-0.05,0.79l0.94,1.08l2.43,0.39l0.46,1.39l0.97,0.63l4.31,-0.22l2.16,0.72l0.15,0.34l-1.33,2.47l-1.17,3.41l-4.06,0.57l-2.52,0.96l-2.97,2.23l-0.27,0.92l2.18,4.83l6.27,2.39l0.81,-0.34l4.22,-3.35l1.41,-0.56l3.43,-0.5l3.67,1.05l6.98,-2.19l3.06,-1.83l2.3,-2.57l2.98,-2.17l12.26,2.9l0.96,-0.18l0.88,-0.59l1.67,-3.2l4.88,-2.72l1.7,-2.05l0.55,-1.04l0.05,-0.96l-3.34,-2.18l-0.25,-1.08l-0.08,-11.85l-1.04,-4.5l-0.89,-2.15l-1.37,-1.81l-2.9,-1.75l-6.35,-2.47l-1.11,-1.42l-1.66,-4.59l1.55,0.46l2.19,-0.01l2.08,0.6l5.68,-0.63l2.55,-1.25l0.65,-1.03l0.93,-3.65l3.06,-2.06l6.74,-0.07l1.67,-0.29l4.8,-1.93l0.89,-0.01l1.52,0.51l1.54,1.11l2.61,3.94l0.32,1.87l-0.24,2.96l0.57,1.39l-0.38,3.23l0.55,1.42l1.51,0.5l10.16,0.9l3.26,-0.31l3.47,-1.18l6.68,-1.27l0.88,-1.06l1.47,-3.79l1.4,-2.26l2.54,-2.16l5.36,-2.34l1.15,0.22l1.6,1.84l1.89,0.68l-0.64,1.47l-1.45,0.96l-0.33,0.56l0.21,1.35l1.64,4.23l-3.1,4.14l-1.73,3.09l-2.63,1.5l-2.96,-0.18l-1.1,0.27l-0.85,1.0l-0.65,1.5l-1.24,7.23l0.46,1.22l0.86,0.67l7.25,2.04l-2.58,1.61l-0.45,0.82l0.82,3.08l-2.42,-0.06l-3.08,0.73l-0.27,0.55l1.88,4.18l-0.01,0.68l-1.06,2.04l0.64,0.61l6.37,-0.63l6.9,0.79l0.59,0.31l0.09,0.59l-0.49,1.24l0.2,0.95l0.95,0.8l2.63,0.93l0.95,1.12l0.1,0.66l-1.26,2.95l2.16,5.18l-0.45,1.13l-1.6,1.2l-0.52,2.01l1.43,0.94l3.48,1.21l0.64,-0.15l0.73,-1.32l1.1,-0.28l3.87,1.35l-1.17,4.15l-1.82,1.87l0.06,0.61l0.98,0.23l3.76,-0.28l2.16,0.87l0.73,1.16l0.34,1.49l-0.2,1.35l-1.37,3.36l0.29,0.54l1.15,0.2l3.23,-0.87l4.42,0.14l4.48,-0.92l-2.0,3.15l0.49,0.92l1.58,0.46l-0.82,1.1l-0.09,3.0l-1.71,3.84l-2.65,1.82l-0.57,1.45l-0.99,1.14l-0.21,1.53l0.39,3.02l-0.62,1.5l0.26,1.49l-1.42,1.45l-0.29,1.32l0.22,1.73l0.79,0.79l1.58,0.03l3.52,-0.91l-1.46,1.85l-6.96,1.91l-1.4,0.8l0.05,0.8l1.94,1.48l-1.81,4.72l-2.41,2.34l-1.13,2.03l-3.45,2.21l-2.98,1.29l-0.92,0.77l-1.12,3.88l-1.78,0.03l-3.78,2.34l-4.23,-0.58l-1.75,-1.22l-0.39,-0.49l0.21,-1.95l-0.2,-1.25l-0.68,-0.91l-0.54,-0.45l-1.13,-0.09l-1.28,-0.55l-2.82,-1.58l-0.89,-0.15l-1.53,0.67l-4.08,0.89l-5.1,2.13l-0.71,0.78l-0.32,0.99l0.13,0.92l1.31,1.81l0.43,3.76l0.57,0.43l2.07,0.26l0.53,0.46l-0.92,2.1l-4.29,0.32l-3.68,1.96l-4.52,-0.9l-3.64,0.83l-4.4,0.3l-4.62,1.48l-0.91,1.32l-1.85,1.04l-0.61,1.29l-3.19,2.69l-2.19,2.38l-1.57,2.64l-0.29,1.01l0.37,0.76l1.55,1.08l0.72,1.81l1.85,0.58l1.2,-0.27l1.16,-1.42l4.44,-0.76l2.24,-1.35l0.97,-0.06l-0.32,1.61l1.16,0.77l1.92,7.63l0.05,1.51l-0.13,0.47l-3.13,2.91l-2.22,2.6l-0.02,0.84l0.96,1.42l0.08,0.89l-4.12,2.16l-3.3,-0.7l-10.05,0.04l-0.37,0.26l-0.38,1.43l1.62,2.74l-0.25,1.65l0.95,3.65l-1.63,1.87l-1.69,3.16l-1.23,0.36l-0.72,0.72l-2.1,3.88l-0.3,3.39l-1.85,-0.11l-1.89,1.03l-3.03,2.64l-0.16,1.73l-2.81,1.64l-2.63,0.22l-1.48,-0.23l-1.64,-2.29l-2.24,0.01l-5.82,4.69l-0.86,1.01l-1.94,1.17l-1.02,2.04l-5.33,4.17l0.01,0.86l0.82,0.66l0.15,0.95l2.49,1.68l0.6,0.89l-0.77,4.27l-1.87,0.89l-1.11,1.82l-2.37,-1.24l-1.31,-0.31l-3.45,0.99l-0.58,-2.08l-1.67,-2.47l-4.17,-4.54l-0.94,-1.51l0.28,-3.74l-0.72,-3.13l-0.67,-1.41l-0.97,-0.23l-2.0,0.68l-1.67,-1.08l-3.78,-3.35l-2.68,-0.79l-1.08,-0.66l0.12,-1.17l0.94,-2.34l0.32,-1.85l-0.3,-0.46l-5.7,-1.33l-1.46,0.32l-3.2,2.53l-0.33,0.85l-0.16,0.97l0.37,3.2l1.24,2.68l-0.11,1.93l-2.86,-0.64l-2.5,2.24l-3.62,1.85l-0.08,0.66l2.14,2.17l-0.19,1.53l-0.5,0.14l-0.47,-0.49l-0.78,0.01l-1.51,1.89l-4.36,1.59l-1.46,2.23l-2.87,-0.08l-3.94,1.83l-8.12,1.89l-3.63,-0.26l-2.5,0.6l-0.95,1.15l0.41,0.64l-0.09,3.01l-0.85,1.41l-0.16,1.67l-2.95,1.78l-5.57,1.28l-5.38,-0.32l-0.92,-1.54l-1.91,-0.55l-0.55,0.4l-1.0,2.06l-0.69,0.25l-2.29,2.03l-0.86,0.22l-2.56,-0.62l-0.61,0.43l-0.88,1.56l-0.88,0.29l-1.85,-0.75l-1.42,-0.09l-6.19,3.41l-5.82,1.52l-1.24,1.89l-1.38,1.39l-2.22,0.55l-0.62,0.52l0.38,3.52l-0.22,2.44l-1.21,1.62l-1.13,0.16l-1.73,-0.55l-2.11,-2.71l-0.75,-0.03l-3.73,1.23l-1.67,0.82l-0.25,0.48l0.11,1.88l-0.83,2.32l0.33,0.6l2.15,1.22l0.36,3.93l1.67,2.69l0.26,1.05l-0.22,0.56l-7.54,1.84l-1.41,-0.24l-1.2,-1.27l-2.0,-1.16l-0.97,0.09l-2.6,1.46l-0.91,0.0l-0.24,-0.03l0.54,-1.3l-0.35,-0.63l-2.4,-1.2l-1.42,-0.31l-1.39,0.49l-4.43,0.67l-4.67,2.88l-2.0,0.62l-1.1,-2.2l-2.26,-1.19l-0.74,-1.22l-0.82,-0.6l-1.29,-0.14l-0.81,0.92l0.05,0.93l3.4,4.77Z", "name": "Nordrhein-Westfalen"}, "DE-SN": {"path": "M613.55,628.95l-0.88,-1.11l-2.79,-0.68l-2.12,0.03l-5.21,-2.72l-0.56,-2.5l0.23,-1.42l-0.35,-0.59l-2.13,-1.24l-2.07,-2.7l-1.04,-0.33l-2.37,0.21l-0.57,-0.77l1.09,-1.06l2.37,-0.89l0.4,-1.53l1.03,-1.22l-0.26,-2.05l-1.83,-1.59l0.74,-1.97l0.98,-1.16l2.32,-1.5l2.34,-2.48l1.81,0.24l1.6,1.61l1.88,0.2l1.29,-0.93l2.1,-2.93l1.3,-0.22l2.18,0.8l2.82,-0.78l0.93,-0.93l0.69,-2.02l-0.13,-2.55l2.56,-2.72l6.43,0.02l3.7,-2.24l1.2,-1.11l2.03,-2.95l-0.19,-0.6l-1.1,-0.37l-2.13,0.07l-0.86,-0.36l-1.17,-2.45l0.48,-1.71l-0.19,-0.66l-0.87,-0.75l-1.92,-0.08l0.8,-1.92l0.8,-0.57l1.42,-0.29l1.72,-1.87l-0.37,-1.2l-1.73,-0.68l-1.0,-0.94l0.08,-0.84l6.95,-1.75l3.87,-2.52l3.34,-0.33l1.12,0.65l0.76,-0.09l3.91,-4.23l3.73,-1.71l0.52,-0.45l0.24,-0.86l1.56,0.49l2.21,-0.21l3.23,0.36l1.42,-0.28l0.89,0.87l0.5,0.1l1.04,-0.77l1.12,-1.44l1.51,-0.7l0.31,-0.91l-0.06,-0.64l-2.07,-3.72l-2.37,-3.13l-5.65,-2.53l-1.2,-1.0l-3.96,-6.22l-0.75,-3.81l-0.29,-0.31l-15.19,-3.83l-6.4,0.51l-3.97,-0.65l-0.55,-0.56l-0.44,-2.26l-2.18,-1.75l-0.81,-1.35l0.44,-3.4l-0.31,-0.44l-2.72,-0.67l-0.03,-0.55l0.97,-1.14l0.45,-1.13l-0.27,-4.27l-0.46,-1.54l-1.79,-2.02l-0.13,-2.54l-0.78,-2.33l0.4,-1.27l1.39,-1.81l2.24,-0.4l0.73,-0.59l0.54,-2.67l-0.19,-1.2l-1.41,-3.02l-0.25,-5.06l-0.88,-1.57l-0.22,-2.52l3.36,-3.03l0.47,-1.66l0.0,-5.89l2.77,-1.98l0.82,-2.16l2.95,1.1l3.18,0.29l5.79,-2.16l7.22,-0.61l0.73,-0.41l0.85,-3.47l0.61,-0.21l7.64,0.27l1.43,0.76l9.37,-1.36l0.83,0.68l1.29,-0.04l2.24,-1.57l1.73,-2.62l1.25,-0.6l3.46,0.4l3.12,1.02l1.97,-0.78l5.13,-3.55l0.86,-1.06l2.42,-0.19l0.95,1.69l1.4,0.87l2.76,0.67l2.07,0.88l1.63,1.4l1.25,-0.19l1.72,-0.96l0.48,0.16l2.71,2.18l2.92,0.78l2.67,2.73l1.44,0.84l1.07,0.29l1.24,-0.44l2.87,1.9l-0.34,3.35l1.09,1.24l1.96,0.98l1.28,3.93l-0.21,1.01l-1.82,1.38l1.0,2.59l-0.17,3.23l-0.63,1.53l-1.33,1.1l-0.42,0.82l0.24,1.5l0.99,1.5l0.84,0.06l1.39,-1.45l0.88,0.11l0.74,-0.78l1.46,0.43l1.22,1.68l0.42,0.15l10.91,-3.01l1.5,-0.66l0.96,-0.85l2.02,-0.19l4.49,1.83l2.18,1.79l2.41,1.35l1.59,1.98l1.37,0.54l2.21,-0.3l5.81,1.42l14.92,0.95l16.88,-1.74l2.3,0.55l1.01,-0.3l7.43,-9.17l1.51,-2.95l0.22,-2.1l0.51,-0.86l3.79,-4.12l1.15,-0.88l3.86,-1.78l6.0,-1.21l4.61,0.5l3.44,1.06l3.56,1.87l3.87,-0.75l12.93,-5.38l4.18,-0.98l4.02,0.25l2.45,1.2l4.22,1.46l4.07,0.17l0.38,1.3l2.33,1.96l6.36,1.78l4.3,2.3l4.65,1.15l2.16,0.86l3.22,2.48l0.87,1.55l-0.78,1.66l1.39,11.49l0.33,1.01l1.82,2.65l2.23,2.2l1.34,2.38l-0.49,3.64l0.64,0.9l-1.54,2.53l-1.35,3.52l-0.8,3.65l-0.31,4.88l-1.95,2.47l-0.47,5.19l-9.27,18.97l-3.44,3.19l-1.44,1.97l-0.09,2.56l-1.51,3.37l-1.73,2.24l-1.42,0.32l-2.05,-0.06l-3.54,-0.66l-5.13,-3.01l-3.3,-0.79l-0.34,-0.69l0.32,-2.13l2.23,-4.98l-0.53,-1.73l-0.37,-0.26l-1.32,0.0l-5.24,1.82l-0.7,-0.46l2.4,-4.8l0.18,-1.95l-0.31,-1.4l-2.04,-2.41l-1.27,-0.84l-2.72,-0.6l-1.1,-0.64l-0.84,-0.97l-1.1,-2.63l-0.72,0.01l-0.79,1.66l-0.89,0.39l-3.47,-0.16l-2.84,1.01l-1.84,-0.43l-2.03,-2.05l-3.65,-1.0l-3.28,0.4l-2.68,2.26l-1.36,3.67l-1.05,1.27l0.12,0.61l1.3,0.68l3.27,0.36l1.27,0.43l-0.61,0.56l0.05,1.69l2.51,2.07l3.74,0.96l2.31,1.11l-0.5,2.77l-2.63,1.86l-7.56,-0.5l-3.63,0.62l-4.19,4.12l-15.18,5.82l-5.35,-0.28l-2.16,0.4l-3.49,2.82l-3.17,0.05l-1.0,1.08l-0.42,1.26l0.29,2.65l-0.51,0.61l-1.12,0.18l-2.78,1.45l-1.65,0.28l-4.52,-0.42l-2.2,0.2l-5.54,1.45l-8.78,-0.04l-4.64,0.74l-4.02,2.03l-0.17,0.56l1.06,1.85l-0.33,1.49l-1.2,1.3l-1.59,1.01l-0.14,0.53l0.51,0.92l-0.06,0.52l-4.72,3.92l-1.62,0.34l-2.0,-0.82l-2.51,-3.07l-1.67,-0.42l-0.96,1.18l-3.78,2.29l-1.57,3.35l-1.76,0.75l-3.18,-1.51l-1.91,-0.15l-0.4,0.24l-3.25,7.28l-1.34,2.04l-2.23,1.4l-5.05,-0.25l-4.63,1.08l-3.43,-0.9l-1.76,0.69l-1.43,7.74l-4.1,3.6l-3.12,-0.15l-9.01,-4.6l-1.07,-0.24l-2.84,1.1l-3.31,-0.12l-1.7,0.5l-1.46,1.18l-2.14,2.78l-0.96,0.78l-1.11,0.1l-5.28,-0.79l-7.34,0.46l-4.03,0.99l-3.7,2.69l-0.82,1.89l0.06,1.54l-1.51,0.27l-1.2,0.89l-2.84,1.34l-1.14,0.93l-3.09,4.69l-2.22,1.64l-0.8,1.0l-0.33,2.11l-1.85,1.99l-0.63,1.43l-0.3,2.41l0.86,3.81l-1.06,0.65l-1.37,-0.15l-0.85,-1.11l-1.85,-5.77l-2.4,-2.27l1.22,-1.33l0.11,-0.76l-0.4,-0.73l-1.02,-0.5l-2.77,-0.06l-1.31,-0.34l-0.94,-0.69l-0.32,-0.82l0.03,-2.13l-0.62,-1.37l-2.04,-1.29l-4.69,-0.34Z", "name": "Sachsen"}, "DE-HB": {"path": "M265.62,250.29l0.77,0.14l2.23,-0.47l2.69,1.38l7.16,2.2l2.11,-0.44l3.26,0.01l0.47,1.29l2.72,1.52l4.48,0.32l3.54,2.47l4.4,1.6l1.36,-0.49l1.23,-2.55l0.76,-0.22l3.33,3.07l-1.4,1.14l-0.28,0.91l0.47,0.95l2.35,2.05l0.26,0.56l-1.01,1.53l-0.59,3.76l-1.36,1.22l-3.97,2.26l-4.58,-2.93l-0.59,0.2l-0.14,1.16l-1.67,0.47l-1.73,-0.22l-5.32,-2.63l-5.13,0.89l-1.22,-0.18l-0.19,-4.35l-4.75,-4.35l-1.5,-1.88l-0.64,-3.9l-1.4,-2.3l-0.98,-0.62l-3.09,0.05l-2.31,-1.3l-3.92,-1.3l-1.3,-2.58l2.51,-0.02l2.99,1.58ZM261.84,196.51l4.03,1.21l2.2,0.32l4.13,-0.11l-0.95,1.95l0.35,1.49l1.13,2.28l0.64,2.7l-0.11,2.44l-1.57,2.18l-1.95,1.5l-1.06,-1.31l-1.38,-0.15l-1.41,-2.21l0.74,-3.74l-2.97,-5.84l-1.83,-2.72Z", "name": "Bremen"}, "DE-SL": {"path": "M65.93,746.0l-0.23,-1.93l-0.65,-1.16l-1.78,-1.49l-9.11,-3.87l-1.37,-0.17l-2.68,1.35l-1.34,0.11l-0.3,-4.41l0.59,-3.76l13.51,-1.05l11.44,0.43l6.27,-2.41l2.29,0.18l1.97,-0.33l14.47,-5.63l7.96,-4.23l2.89,1.17l0.89,-0.17l1.79,-1.14l7.05,3.24l6.38,0.31l2.11,1.74l4.12,2.71l0.79,0.23l1.21,0.11l1.89,-0.35l2.95,-1.49l0.05,1.82l1.71,3.48l0.25,3.41l0.57,0.68l0.74,0.13l0.16,1.73l-2.72,1.68l-1.93,2.1l-0.92,0.5l-0.54,0.98l0.61,1.93l4.08,4.23l-0.04,1.37l1.09,0.55l4.87,0.7l2.32,0.74l0.81,0.39l0.38,0.81l-0.64,1.56l0.39,1.37l-0.74,1.05l-2.08,1.61l-0.56,2.26l-1.52,1.52l-0.72,2.75l-1.14,1.4l-2.18,0.34l-0.95,1.98l0.91,4.25l5.38,4.66l1.21,0.05l-1.12,0.59l-1.6,3.08l-3.65,0.82l-2.07,2.79l-3.13,-1.11l-8.41,-0.07l-2.96,-1.08l-3.73,-2.3l-0.7,-0.12l-1.33,1.19l0.29,1.69l-2.64,1.41l-1.85,-1.23l-1.07,-3.29l0.05,-4.41l-0.38,-0.4l-2.04,-0.09l-6.05,-2.9l-1.21,-0.17l-2.89,0.23l-4.04,-0.78l-1.14,0.2l-0.86,2.29l1.06,3.9l-1.48,1.66l-1.02,0.2l-3.73,-1.17l-4.42,-0.05l-0.97,-0.35l-1.09,-1.54l0.73,-2.95l-0.62,-2.25l-0.78,-0.28l-1.53,0.75l-1.61,-4.5l-2.21,-1.07l0.12,-1.66l-0.28,-0.74l-6.51,-5.32l-1.57,-1.62l-0.52,-1.25l0.36,-0.78l1.85,-0.31l0.42,-1.34l-0.43,-0.9l-5.19,-4.82Z", "name": "Saarland"}, "DE-BY": {"path": "M307.24,662.75l0.86,-0.85l0.92,0.01l0.77,-0.48l0.41,-3.68l0.81,-1.04l3.72,-0.82l5.12,-2.0l2.55,1.34l1.32,0.36l-0.83,1.47l0.4,0.46l0.46,-0.03l2.16,-1.19l1.78,-1.75l0.49,-2.09l3.29,-0.87l9.69,0.58l4.61,1.99l0.68,0.67l0.77,1.74l1.59,1.62l2.33,0.32l1.62,-0.2l6.17,-2.23l0.81,-0.71l0.31,-0.73l-0.49,-3.2l1.7,-3.26l-0.64,-0.92l-2.32,-0.46l0.95,-3.62l-0.18,-3.43l1.88,0.4l1.07,-0.46l1.62,1.38l2.27,-0.43l1.71,0.66l1.51,-0.04l4.99,-1.4l0.46,-0.63l-0.67,-1.37l0.04,-0.77l0.65,-1.65l0.73,-0.82l0.6,-0.5l4.05,-1.4l1.68,-0.95l1.08,-1.11l0.12,-1.5l-0.59,-4.05l2.29,-6.91l1.08,-1.41l1.88,-0.6l2.59,2.37l1.15,0.36l2.03,-0.12l5.96,-1.94l6.14,-3.03l2.02,-1.47l1.25,-1.69l3.15,-4.7l1.02,-2.47l5.27,-4.94l1.17,-0.69l0.08,1.25l0.81,0.65l5.41,-0.31l1.16,0.29l1.63,1.47l0.74,2.27l0.54,0.65l9.39,3.01l0.77,1.25l0.03,1.8l0.44,0.78l1.44,1.0l1.71,1.89l2.58,1.75l-0.8,1.6l0.11,0.62l0.93,1.11l2.6,0.42l2.27,-0.53l0.56,1.24l0.9,1.03l2.62,1.88l0.23,1.17l0.56,0.48l2.81,0.21l1.06,-0.67l1.25,-0.14l1.25,2.28l2.44,1.7l0.83,4.11l-0.62,2.8l1.31,2.75l-0.33,1.46l0.63,1.21l1.07,0.93l4.39,-0.02l2.31,0.54l3.38,1.67l0.63,-0.1l0.41,-0.53l0.49,-4.06l0.51,-0.49l1.78,0.58l3.89,-0.64l3.02,0.94l1.19,-0.17l0.81,-0.86l0.12,-1.97l-0.74,-1.51l-2.78,-0.9l-0.75,-1.34l-0.65,-0.53l-2.94,-0.17l-1.83,-1.61l-2.67,-1.32l-0.59,-0.61l0.29,-3.55l0.33,-0.63l0.53,-0.32l1.93,0.55l0.91,-0.15l2.26,-3.1l0.7,-0.52l2.07,0.49l2.62,-1.16l2.08,0.23l1.63,-0.61l1.98,1.54l3.25,-0.73l1.24,0.05l3.26,4.0l1.12,0.8l0.76,-0.31l0.41,-1.39l2.52,0.3l1.03,0.66l0.58,0.81l0.94,0.27l3.67,-0.89l1.28,-1.14l1.14,-0.21l0.8,1.45l1.46,0.33l1.75,2.56l-1.95,2.16l-0.04,0.53l0.85,1.12l4.81,3.81l0.59,-0.1l1.09,-1.49l1.27,0.86l2.3,0.6l1.35,-0.24l0.41,-0.8l-0.17,-1.28l1.04,-2.16l-0.67,-2.01l1.11,-2.55l-0.17,-1.39l0.9,-0.32l0.25,-0.59l-0.33,-2.13l-1.14,-1.63l-0.11,-1.2l-0.5,-0.91l0.35,-3.12l-0.78,-2.67l0.16,-1.09l-0.65,-1.75l2.34,-0.94l1.98,-0.4l2.01,-1.11l0.52,-0.59l0.42,-1.4l1.23,-0.51l0.79,-0.82l6.04,0.28l1.44,0.39l0.99,1.7l-1.77,1.46l-0.24,4.31l0.32,1.33l3.45,2.23l1.36,-0.2l0.85,0.2l0.31,0.45l0.24,2.83l0.33,0.58l3.94,2.39l0.86,0.11l2.4,-0.52l1.34,-1.56l1.94,0.02l3.06,0.99l11.65,-2.06l1.71,-0.43l0.59,-0.74l2.05,-0.29l0.95,0.07l0.72,0.83l1.73,0.68l0.04,1.1l0.84,0.31l4.45,-1.52l3.2,-1.58l2.44,-0.21l0.65,0.23l2.01,2.64l1.96,1.08l0.37,4.11l0.46,0.54l5.42,2.83l2.27,0.01l2.57,0.63l0.21,0.31l-1.66,-0.1l-0.39,0.25l0.11,0.45l2.22,1.95l0.72,1.03l0.34,1.69l-0.16,1.44l-1.61,1.1l-1.23,1.55l-0.02,0.47l1.16,1.66l4.8,2.52l3.4,3.53l0.71,1.43l0.26,1.79l-0.67,2.84l0.08,2.18l0.97,2.1l4.34,2.83l0.78,1.13l0.55,3.29l15.17,6.93l1.41,1.16l3.71,0.4l1.43,1.15l0.22,1.61l-0.67,1.74l0.11,1.78l5.34,2.42l0.45,0.69l-0.28,2.29l-0.76,1.87l-2.24,3.49l-0.64,1.71l-1.62,-0.42l-0.48,0.26l-0.62,1.92l-0.34,4.58l-1.39,1.19l-3.99,1.43l-1.4,2.43l1.54,3.06l2.13,2.57l2.95,1.97l4.55,1.89l0.69,1.16l0.06,1.48l-0.78,1.47l0.13,0.52l0.72,0.37l-0.28,1.38l1.12,1.11l2.29,1.06l0.94,0.87l0.63,1.26l0.87,4.35l1.27,2.71l0.81,1.02l1.28,1.08l2.14,0.19l0.44,0.3l0.41,6.2l0.53,2.18l1.12,1.84l2.11,1.51l4.46,1.78l1.87,1.64l3.18,6.03l1.79,1.56l2.02,0.61l5.88,0.72l1.84,-0.21l0.34,-0.5l-0.33,-1.25l0.87,-0.23l3.62,0.84l1.6,0.72l4.11,3.4l1.69,0.63l1.12,3.4l3.2,3.22l1.21,0.59l9.1,10.48l1.3,2.51l1.71,2.25l2.78,1.38l6.04,0.27l1.85,0.61l1.11,0.81l2.99,3.39l4.11,3.55l1.02,2.05l0.06,3.46l1.49,2.17l2.89,2.32l3.15,1.92l2.35,0.96l0.51,-0.2l1.85,-3.44l1.14,-0.44l2.08,0.37l5.02,2.79l1.6,-0.1l0.24,2.12l1.04,2.3l1.58,2.05l1.73,1.48l1.97,0.81l3.69,0.51l1.23,0.58l2.21,2.93l4.73,8.01l1.76,1.57l-2.77,4.98l-0.27,1.32l0.72,0.39l0.98,1.59l1.19,0.69l-0.93,0.88l-0.25,1.51l0.51,4.16l-0.36,3.82l-0.59,1.59l-2.07,3.59l-1.4,0.86l-2.62,0.4l-0.87,1.54l-0.73,2.83l-3.74,-1.44l-1.54,-1.97l-3.43,-1.85l-10.31,-2.43l-3.36,0.39l-3.33,1.09l-0.98,0.8l-0.59,1.14l0.75,3.31l0.93,1.31l0.18,0.93l-0.24,1.09l-1.8,3.62l-0.19,5.97l-0.88,1.53l-0.74,3.27l-1.29,1.84l-9.51,7.1l-3.21,1.53l-13.46,2.01l-10.24,3.47l-1.71,1.03l-3.61,2.97l-3.18,1.52l-1.61,1.35l-5.06,0.84l-1.58,0.71l-4.05,4.56l-3.86,2.32l-1.84,2.3l-1.73,0.34l-0.82,1.06l-0.24,2.03l0.53,1.74l0.9,1.55l0.97,1.3l6.85,6.14l1.41,2.68l0.83,2.85l0.85,1.09l2.44,1.29l4.33,3.43l3.29,6.55l2.39,2.99l-6.14,8.46l-0.58,1.08l-0.38,2.35l-2.42,3.25l0.06,0.54l1.8,1.49l5.47,0.87l1.68,-0.24l2.39,-0.9l1.33,0.18l2.26,1.91l1.88,2.76l0.75,1.73l0.26,1.51l-0.25,2.82l-1.47,3.08l-1.87,1.89l0.16,2.88l-1.16,2.39l0.08,2.98l0.81,2.91l-3.21,3.13l-0.82,0.03l-2.2,-1.25l-1.18,0.06l-1.46,0.57l-5.65,-3.39l-5.34,-4.83l-2.51,-0.56l-2.21,-1.53l-0.47,-2.8l1.09,-2.63l2.53,-1.08l0.1,-0.68l-2.01,-1.66l-2.49,-1.41l-1.31,-1.38l0.9,-1.93l-0.41,-0.57l-1.62,0.18l-5.53,-1.21l-3.58,0.01l-3.5,0.72l-1.94,0.83l-4.41,3.37l-1.44,0.55l-3.9,0.29l-1.27,-0.54l-3.58,-2.72l-1.52,-3.59l-0.76,-0.97l-1.8,-0.26l-3.82,1.26l-1.56,0.22l-5.73,-1.03l-2.14,0.26l-3.1,1.1l-0.75,-0.58l-0.44,-1.13l0.9,-1.48l0.88,-2.83l-0.42,-0.58l-2.65,1.08l-2.36,1.68l-1.5,0.52l-0.26,0.45l0.6,1.9l2.2,2.3l0.16,3.24l-0.39,1.75l-2.66,2.94l-23.2,-0.73l-8.35,1.48l-1.11,0.57l-1.09,2.14l-0.75,0.21l-5.44,-0.96l-8.03,-0.03l-6.12,-0.79l-3.44,2.62l-1.92,5.31l-1.66,1.59l-2.01,0.69l-4.49,0.64l-4.61,-0.88l-2.36,0.46l-4.83,4.69l0.19,0.67l2.05,0.77l0.24,0.6l-0.65,0.95l-1.41,0.52l-4.19,0.09l-1.92,0.52l-2.04,1.59l-2.66,2.76l-1.98,0.78l-1.87,-0.18l0.19,-3.0l-0.27,-0.4l-2.32,-0.75l-2.59,0.63l-6.36,3.79l-1.81,0.48l-10.09,-0.13l-1.18,-0.59l-0.71,-1.19l0.59,-1.65l-0.45,-1.68l-4.9,-4.54l-5.06,-2.05l-0.36,-0.53l2.8,-1.64l0.91,-0.92l-0.07,-0.61l-3.34,-1.99l-1.63,-0.11l-5.35,1.9l-2.77,0.29l-0.65,-0.17l-1.31,-1.65l-12.95,-4.21l-2.49,-0.05l-1.67,0.96l-1.95,2.34l-1.13,0.78l-1.01,0.15l-4.07,-0.53l-1.45,-0.57l-1.12,-0.88l-0.13,-0.83l0.94,-1.84l-0.6,-1.59l-0.7,-0.28l-2.39,0.51l-1.47,0.5l-0.27,0.43l0.2,1.23l1.43,2.63l-1.1,5.97l0.22,0.44l2.06,1.33l0.48,1.0l0.38,1.46l0.02,2.56l-0.86,2.7l-1.39,2.45l-1.56,1.79l-3.99,1.77l-2.78,4.56l-1.72,1.99l-1.86,1.46l-4.33,2.29l-2.07,0.69l-7.6,0.8l1.04,-1.69l1.51,-0.48l0.76,-0.68l0.26,-0.97l-0.25,-1.51l1.75,-4.61l0.07,-2.24l-0.23,-0.38l-2.04,-0.87l-4.31,0.67l-1.64,1.38l-1.84,-0.58l-2.6,1.03l-0.76,-0.64l-0.46,-1.04l-0.36,-2.61l-0.84,-0.94l1.83,-1.22l0.61,-1.51l-0.9,-1.8l-4.86,-6.13l-0.46,-0.12l-2.68,1.35l-0.75,-0.39l-0.18,-1.4l-0.89,-1.68l-2.22,-2.21l-0.26,-1.94l-0.62,-0.28l-1.11,0.77l-1.35,0.23l-2.83,-0.19l-3.12,-0.93l-2.33,0.82l-1.74,-0.77l-0.3,-1.06l0.18,-1.57l-0.44,-1.68l-1.15,-1.08l-1.54,-0.52l-1.76,0.16l-1.54,0.73l-2.14,2.14l-1.14,2.09l-3.79,-0.83l-4.02,-2.5l-2.2,-0.96l4.11,-1.04l1.04,-1.33l1.35,-0.56l3.53,0.8l4.42,-1.94l7.33,-5.6l2.8,-1.14l3.86,1.42l2.37,0.49l2.45,-0.02l3.49,-0.99l2.12,-1.01l2.36,-0.56l1.69,0.03l0.49,0.32l1.53,3.25l0.63,0.05l1.06,-1.28l0.32,-2.33l2.77,0.72l0.95,-0.65l0.45,-1.9l-0.84,-2.57l-0.57,-6.54l-0.51,-0.77l-1.25,-0.17l-0.63,-1.11l-1.28,-1.18l0.73,-1.09l2.32,-0.31l0.78,-1.2l0.87,-0.35l0.19,-0.55l-2.55,-5.48l-0.46,-0.42l-1.19,-0.07l0.99,-0.98l0.52,-2.31l0.43,-0.62l0.41,-4.61l-0.21,-0.8l-1.3,-1.23l-0.94,-2.04l0.15,-0.59l1.32,-0.92l2.91,-6.98l0.74,-2.83l0.16,-4.81l-0.34,-1.72l-2.62,-5.07l-3.85,-15.14l-1.57,-4.54l-3.15,-4.58l-1.91,-3.58l-0.58,-0.34l-0.85,0.02l-0.61,-0.97l5.26,-6.27l0.65,-0.36l0.18,-0.49l-0.29,-1.44l0.86,-1.38l1.22,-1.05l3.32,-0.59l2.26,-1.41l0.64,-0.05l0.52,0.41l0.5,1.82l0.68,0.43l0.85,0.06l9.54,-4.95l0.53,-1.77l1.16,-1.12l5.1,-0.59l-0.07,-0.71l-0.53,-0.48l1.09,-2.68l0.18,-1.6l-0.23,-1.4l-0.9,-1.6l-0.18,-0.94l1.66,-0.87l0.43,-0.45l0.1,-0.83l-0.62,-0.92l-4.02,-2.53l-1.63,-2.66l0.12,-1.36l2.05,-2.42l2.29,1.65l2.94,0.13l1.54,2.66l0.82,0.44l0.86,-0.45l4.95,-4.66l0.73,0.33l-0.54,0.39l-0.02,1.02l-0.58,1.71l0.38,0.92l0.51,0.34l1.7,-0.72l4.25,-3.37l0.09,-0.53l-1.73,-2.74l-0.67,-1.65l-2.99,-1.08l-0.6,-0.67l-0.17,-0.81l0.06,-1.09l0.73,-1.24l-0.03,-3.13l1.39,-1.63l0.55,-2.26l-1.07,-2.44l0.47,-1.36l0.33,-4.38l-0.19,-0.8l-0.75,-0.6l1.86,-0.82l0.18,-1.17l-0.92,-2.48l-1.26,-1.18l-0.71,-1.52l-1.57,-1.53l-0.85,-1.38l-4.06,-2.83l-0.5,-0.58l-1.1,-2.75l-0.54,-0.32l-1.35,-0.01l-2.3,-1.07l-1.55,-0.02l-2.24,-0.82l0.39,-1.87l-1.89,-1.74l0.2,-1.55l-3.01,-1.34l1.83,-0.24l1.04,-1.59l0.6,-2.59l-0.35,-1.51l-2.28,-1.74l-0.95,0.09l-1.23,0.62l-3.67,-3.85l-3.02,-1.98l0.92,-0.35l0.31,-0.87l-1.55,-2.1l-0.17,-2.79l-1.4,-1.31l-0.23,-0.65l0.06,-0.21l2.18,0.83l0.87,-0.6l0.1,-1.15l-1.24,-2.85l0.7,-2.29l-0.29,-0.62l-2.05,-0.88l-0.86,-1.0l-0.22,-0.72l0.25,-3.33l1.56,-1.58l0.84,-0.1l1.86,0.55l0.62,-0.68l-3.12,-6.63l-2.65,-1.08l1.1,-1.43l0.77,-2.15l-1.08,-2.6l0.77,-1.6l-0.13,-1.06l-0.64,-0.52l-1.45,-0.17l-0.84,-0.48l0.52,-1.56l-0.13,-0.62l-1.08,-0.74l-1.14,-0.28l-2.36,1.58l-0.49,0.71l0.01,0.44l0.8,0.92l0.02,0.91l-3.59,3.2l-0.7,0.32l-7.69,0.0l-0.45,-3.4l0.24,-2.35l-0.43,-2.82l-0.44,-0.74l-1.19,-0.83l0.57,-1.19l-0.7,-1.14l-1.22,-0.12l-1.73,1.79l-1.44,0.57l-0.95,2.06l-0.66,0.3l-1.11,-0.51l1.98,-2.18l0.04,-2.29l1.77,-2.05l0.43,-1.48l-0.83,-1.39l-3.8,-3.59l-0.24,-4.98l-3.88,-4.3l-0.65,-0.13l-2.79,1.25l-3.39,3.08l-1.09,-1.87l-0.26,-1.92l-0.37,-0.42l-0.69,-0.04l-0.95,1.22l-1.44,0.77l-0.45,2.03l-0.73,0.27l-1.28,-0.13l-1.86,-1.01l0.85,-1.87l-0.08,-1.09l0.84,-0.79l-0.2,-1.41l0.56,-1.34l-0.32,-1.95l0.7,-1.47l-0.22,-0.68l-0.62,-0.5l-0.52,-0.04l-1.67,0.91l-2.47,0.68l-2.58,-1.4l-1.93,0.5l-1.07,-0.08l-5.23,-2.09l-1.95,-0.07l-3.63,0.46l-3.49,1.08l-4.71,-0.28l-1.32,0.34l-1.28,0.7l-1.63,1.68l0.67,2.26l-0.68,1.36l0.15,1.16l1.52,0.85l3.77,0.63l0.26,0.43l-0.4,1.79l0.49,0.74l0.92,0.08l0.9,-0.42l1.16,-2.18l2.28,0.8l-1.01,5.79l0.66,1.44l-1.49,1.17l-0.6,-0.04l-1.11,-1.02l-0.8,-0.27l-2.96,1.06l-3.2,0.23l-2.21,0.94l-0.91,1.03l0.29,2.08l-1.32,1.17l-0.69,1.82l-0.76,0.83l-6.21,0.17l-1.56,-0.21l-5.51,1.02l-0.81,-0.43l-1.36,-1.97l-1.97,-1.61l-0.28,-0.55l3.13,-2.68l0.61,-0.96l-1.14,-5.85l2.13,-0.38l1.38,-1.37l-0.23,-2.35l1.6,-3.44l-0.49,-0.75l-2.19,-0.91l-0.2,-0.63l1.53,-1.91l0.54,-1.57l-1.04,-1.29l-2.07,0.2l-1.03,-0.66l-0.76,-1.74l0.22,-3.05l-0.25,-0.72l-1.03,-0.1l-1.19,1.58l-0.64,-0.99l-3.46,-8.98l0.19,-8.9l1.56,0.51l0.63,-0.19l0.26,-0.5l-1.22,-2.34l0.03,-1.65l-0.89,-1.16l-0.52,-2.77l-0.62,-0.81l-1.3,-0.26l-1.47,0.54l-1.3,-0.69Z", "name": "Bayern"}, "DE-MV": {"path": "M481.88,178.09l1.27,-5.8l-0.83,-3.75l-1.13,-2.45l0.29,-1.56l0.83,-1.66l4.68,-2.26l4.85,-3.67l2.24,-1.2l1.72,0.43l-0.12,1.14l0.99,0.72l3.24,-0.41l1.7,-0.93l0.16,-0.56l-0.33,-0.33l-3.9,-1.01l-0.81,-0.48l-0.52,-0.73l0.03,-3.3l1.59,-0.26l4.11,-3.22l3.45,-0.82l5.17,-2.25l11.79,-1.27l0.68,0.21l0.55,0.62l0.61,1.82l0.75,1.05l3.59,0.9l0.34,0.43l-0.43,2.9l0.44,1.82l1.39,0.62l3.84,-0.01l3.92,-2.68l0.43,0.23l0.95,1.8l0.72,0.58l3.97,0.08l3.88,4.15l1.03,0.52l1.12,0.0l0.4,-0.36l0.12,-1.35l1.74,-4.84l-0.39,-2.18l0.58,-0.78l1.57,-0.67l0.3,-0.51l-0.53,-2.5l3.15,-2.59l0.06,-1.4l2.37,0.48l2.19,-1.25l1.85,-3.64l2.07,-0.97l1.22,-1.54l0.55,-1.83l-0.73,-0.73l0.25,-0.95l3.14,-4.29l2.97,-1.67l3.7,-0.43l8.27,1.17l23.4,-4.06l3.29,-1.69l0.42,3.25l-0.36,3.7l0.21,3.25l2.42,2.44l0.52,0.02l0.1,-0.51l-0.91,-1.57l-0.48,-3.42l-0.47,-1.21l0.85,-1.3l2.72,-1.25l1.04,-2.02l-0.33,-0.57l-1.1,-0.09l-1.94,0.39l3.27,-3.47l2.05,-1.51l2.28,-3.09l9.96,-4.23l3.84,-2.6l1.52,-1.45l3.52,-5.52l1.05,-1.22l-0.59,1.13l0.6,1.49l-0.41,1.37l-1.07,1.02l-1.5,0.28l-0.3,0.53l1.67,4.2l-0.96,0.92l0.08,0.64l4.28,2.4l2.76,0.51l2.1,-1.06l0.21,-0.46l-0.4,-0.3l-1.44,0.05l-1.04,-0.41l-1.72,-1.22l0.5,-1.24l0.86,-1.09l2.41,-1.89l2.2,-1.01l0.58,-2.84l1.52,-1.04l6.33,-2.46l0.06,-0.72l-1.75,-0.91l0.0,-0.3l1.47,-0.44l1.21,0.48l0.61,-0.48l1.52,0.93l3.01,-0.65l5.35,-2.46l0.19,-0.54l-0.53,-1.6l1.75,-0.75l1.13,-0.12l0.84,0.07l0.0,0.31l-1.37,0.36l-1.07,1.21l-0.6,1.63l-0.24,1.69l0.25,0.43l0.47,-0.14l1.82,-3.02l1.44,1.83l1.27,0.53l1.27,-0.9l0.88,0.63l1.3,0.04l1.61,-1.19l1.23,2.28l2.15,2.08l3.54,-0.17l1.13,-0.3l1.19,-0.87l2.71,-4.6l2.43,-1.94l3.83,-2.0l3.76,-1.13l1.58,0.38l-0.75,0.77l-0.02,1.78l0.74,1.72l1.22,1.43l4.35,1.86l0.83,0.64l-1.7,2.66l0.47,2.25l2.74,3.57l0.27,2.86l0.51,1.42l1.24,0.49l3.99,0.0l-2.46,1.08l-0.2,0.46l0.41,0.29l3.11,-0.24l5.03,2.31l3.47,0.68l2.36,1.04l3.17,5.26l2.26,1.65l-2.2,1.58l-0.12,0.44l0.38,0.26l2.45,-0.02l3.67,-1.49l1.35,0.42l-0.96,1.68l-0.73,0.52l0.06,0.68l1.5,0.58l1.28,-0.7l0.58,0.13l3.09,5.62l1.6,1.75l2.0,1.01l2.31,0.03l0.41,-0.4l-0.16,-1.24l-2.58,-2.64l0.0,-0.38l11.86,-1.89l2.96,-1.11l4.97,-2.74l2.47,-0.67l0.11,0.58l-1.67,0.89l0.25,1.2l2.96,1.24l7.58,5.14l0.0,0.58l-1.4,1.99l-0.8,2.57l-1.13,2.22l-2.54,1.27l-0.03,0.7l1.14,0.71l3.92,4.35l3.93,1.64l0.96,2.37l0.13,1.83l0.62,0.29l1.32,-0.1l3.52,1.43l0.11,0.95l-0.54,1.35l-1.02,1.17l-7.11,4.79l-1.03,2.12l1.08,1.82l4.32,1.47l0.64,1.45l1.44,1.69l1.65,1.21l1.2,-0.08l7.09,4.81l3.28,0.64l2.2,1.94l2.93,-0.02l3.77,1.62l7.89,0.48l2.88,-0.69l1.36,-1.95l0.53,-0.3l1.33,0.21l1.2,0.95l0.24,1.85l-0.62,0.81l-4.53,2.63l0.03,0.71l2.74,1.01l2.06,0.16l0.11,3.31l-0.35,2.31l1.47,2.6l2.03,5.14l-0.01,9.18l0.78,2.91l2.34,2.95l1.05,2.83l2.0,2.75l1.02,6.87l1.97,7.47l-6.36,3.2l-2.8,2.92l-2.51,1.0l-0.8,1.97l-1.14,0.69l-6.32,-0.5l-7.49,-1.23l0.07,-1.99l8.07,-4.44l3.64,-4.68l1.56,-2.97l0.5,-2.61l-0.15,-3.62l-0.33,-0.38l-2.38,-0.42l-4.03,0.2l-3.65,-1.45l-2.68,0.55l-1.84,2.12l-4.36,-1.07l-5.89,-0.35l-6.67,0.4l-1.35,-1.65l-0.55,-1.85l-2.78,-4.12l-0.15,-2.8l-0.28,-0.36l-4.46,-1.42l-2.37,-3.03l-1.95,-0.36l-0.45,0.37l-0.11,2.73l2.43,3.71l0.34,1.25l-2.47,0.89l-3.35,-0.2l-3.69,0.49l-5.95,4.16l-1.9,2.75l-2.07,1.57l-3.36,0.12l-2.06,0.87l-1.49,1.2l-0.78,1.6l-0.52,2.46l-3.14,6.23l-2.25,2.12l-1.08,0.32l-5.11,3.37l-1.58,0.46l-1.65,-0.34l-4.03,-1.74l-2.16,-0.35l-2.69,0.23l-1.67,0.7l-1.73,1.64l-1.31,2.48l-0.54,2.42l-2.37,0.0l-1.05,-0.39l-2.24,-2.7l-1.49,-0.38l-0.95,0.24l-3.38,2.33l-0.75,1.93l-0.63,0.7l-5.62,3.47l-3.89,3.57l-2.31,0.33l-2.6,-1.06l1.35,-1.58l-0.23,-0.9l-0.71,-0.49l-2.07,0.58l-2.65,0.02l-3.83,0.71l-1.26,-0.27l-1.45,-0.99l-1.48,-0.42l-1.47,-0.08l-4.28,0.77l-1.03,-0.09l-0.84,-0.76l-0.44,-3.33l-1.02,-0.5l-2.4,-0.1l-3.98,-0.9l-2.57,-2.14l-1.45,-0.6l-11.0,-2.21l-3.17,0.63l-3.42,0.2l-1.36,-0.24l-1.39,-1.6l-2.87,-1.35l-1.69,-1.51l-3.01,-1.91l-4.27,-2.04l-6.72,-1.48l-2.18,-3.07l-1.48,-0.52l-1.36,0.31l-2.9,1.65l-1.67,-1.38l-0.83,-0.27l-2.73,0.44l-3.4,1.19l-1.37,2.07l-2.51,1.41l-0.35,2.12l-0.8,1.81l-1.46,0.23l-3.54,2.59l-1.86,-0.59l-5.53,1.92l-2.27,2.22l-2.68,-0.5l-1.8,0.75l-0.04,0.69l1.83,1.19l0.2,1.19l-4.83,-0.16l-3.84,1.51l-1.16,-2.07l-3.11,-2.09l-1.4,-0.41l-3.47,0.18l-5.42,1.68l-1.98,1.07l-4.34,3.27l-0.73,1.46l0.23,1.27l1.3,1.5l0.92,3.96l-0.59,1.85l-1.78,1.11l-2.39,0.19l-5.25,-2.44l-3.37,-0.04l-1.92,0.94l-0.43,2.95l-1.38,-0.16l-2.38,-0.84l-3.17,0.0l-2.36,-0.41l-1.94,0.19l-1.7,-2.33l-1.63,-0.83l-1.49,-1.47l-0.43,-0.03l-2.56,1.58l-2.84,-3.85l-0.96,-0.51l-1.64,0.19l-5.08,3.67l-4.62,-2.83l-10.76,-8.25l-8.97,-4.25l-3.06,-2.02l-3.18,-3.29l-3.42,-1.07l-0.41,-1.54l-0.3,-4.04l-2.26,-2.41l-3.66,-0.83l-6.36,0.22l1.87,-2.81l0.96,-6.46l0.4,-0.57l2.56,-1.02l2.21,0.2l0.63,-0.57l0.84,-2.19l5.35,-1.32l6.28,-3.89l0.24,-2.17l0.93,-2.22l-0.43,-2.79l0.74,-0.1l1.67,0.49l5.12,-0.46l0.7,0.9l0.38,1.6l0.94,0.58l1.03,-0.62l1.68,-1.92l-0.45,-0.76l0.36,-0.4l-0.03,-1.53l-1.19,-3.64l-0.06,-1.97l1.42,-1.15l0.2,-2.07l-1.01,-2.08l-0.06,-1.48l-0.36,-0.71l-1.78,-1.65l-1.19,-0.66l-2.83,-0.7l-2.05,0.25l-0.63,-0.29l-5.03,-5.16l-4.54,-0.84ZM642.03,96.75l2.68,-3.13l-0.63,2.04l0.39,1.75l-1.9,-0.76l-0.53,0.09ZM646.29,91.77l5.12,-7.49l1.57,-3.56l1.02,-1.06l0.94,-0.38l-0.15,0.3l2.09,2.72l4.42,1.54l22.39,0.02l3.61,1.41l2.46,-1.0l2.55,0.51l0.89,1.08l-2.02,1.51l-2.37,0.42l-10.42,-0.72l-4.15,-1.26l-2.84,-0.27l-0.94,0.39l-1.41,1.42l-4.37,-0.38l-1.18,0.46l-0.54,1.22l-0.68,-0.41l-1.93,0.97l-0.31,0.45l0.18,1.16l0.46,0.67l-0.88,-0.33l-2.27,0.21l-1.77,0.96l-0.78,1.25l-1.36,-1.34l-2.06,-0.82l-3.55,-0.27l-1.75,0.64ZM798.18,135.23l2.91,1.47l17.21,15.3l1.48,0.9l-1.46,3.17l-1.53,0.57l-0.19,0.67l1.65,1.65l0.58,1.53l-10.57,0.99l-2.07,-0.25l-1.58,-0.9l-0.47,0.05l-2.24,2.05l-2.77,1.31l-5.55,1.2l-6.12,0.08l-3.28,-0.8l-1.29,-1.44l2.73,-1.47l3.19,-0.58l3.4,-1.59l1.13,-1.09l0.66,-4.18l-3.57,-5.48l0.22,-2.93l4.5,0.22l1.2,0.4l-0.38,0.56l0.15,0.98l-0.76,2.6l-0.13,2.14l0.27,0.4l0.46,-0.15l1.47,-2.12l1.08,-0.47l2.68,0.0l-0.52,1.44l0.29,0.47l3.34,0.84l0.46,-0.55l-0.72,-1.6l1.22,-3.31l-0.18,-3.59l-1.42,-2.43l-0.47,-0.17l-1.9,0.64l-1.77,-3.7l-1.46,-1.56l-1.7,-1.06l-1.94,-0.38l-2.1,0.34l-1.22,1.15l0.76,2.71l-1.6,1.17l-1.07,2.06l-0.41,0.19l-2.81,0.86l0.13,-1.11l1.42,-1.77l0.37,-1.03l-0.51,-1.88l-1.02,-0.45l-4.22,1.64l-2.77,2.59l-1.39,-0.44l0.66,-2.18l2.64,-4.4l0.59,-3.89l-0.97,-2.23l-3.98,-3.38l-1.02,-1.27l0.73,-1.23l1.4,-1.19l1.62,-0.51l1.59,0.54l2.75,5.55l1.2,1.8l2.68,2.23l6.55,3.11l3.73,1.16ZM717.1,70.94l0.86,-0.33l7.41,-0.88l1.4,0.26l0.65,0.83l2.08,0.95l0.91,2.64l0.59,0.17l0.92,-0.75l0.37,-1.54l-0.73,-2.11l2.98,-2.84l2.59,-1.34l-0.78,1.96l-1.6,2.28l1.38,0.3l0.56,0.55l-1.27,2.45l0.34,0.57l1.55,0.06l1.3,-0.43l0.97,-0.99l0.59,-1.5l-0.15,-0.28l2.04,2.68l-0.5,2.26l1.94,2.26l2.76,0.85l5.06,-0.1l0.32,-0.63l-0.58,-0.81l0.81,-1.53l1.19,-1.21l0.0,-1.0l-0.82,-2.08l-1.25,-1.71l0.0,-0.53l2.07,-1.24l0.0,-0.83l-0.42,-0.4l-1.44,0.13l-2.04,1.73l-4.14,-0.01l-1.71,-2.32l-2.38,-0.69l-2.79,-4.19l-0.59,-0.19l-2.12,1.56l-1.57,1.74l-2.23,1.09l-3.33,2.46l-1.56,-0.4l-0.27,-1.27l0.66,-2.36l1.21,-2.17l1.43,-1.1l0.74,-1.91l0.19,-1.57l-0.73,-0.79l-4.39,0.92l-1.58,0.74l0.04,-1.14l0.47,-0.77l2.06,-1.48l13.37,-3.12l2.61,-0.03l2.27,0.99l0.0,0.36l-5.15,3.06l-0.91,2.1l0.3,2.72l0.9,2.03l1.37,1.57l1.77,1.18l4.26,1.13l12.66,-1.96l4.19,0.74l2.78,2.47l0.59,3.18l-2.4,3.07l-4.28,2.3l-2.21,1.72l-1.07,2.36l0.38,2.35l0.86,2.37l2.2,3.34l2.24,0.98l4.58,0.9l1.91,1.1l2.56,3.78l1.72,1.82l1.71,0.59l-1.88,1.65l-1.04,1.84l-0.61,4.97l-1.03,-0.15l0.56,-0.37l0.42,-1.18l-0.4,-1.44l-0.39,-0.29l-0.93,0.1l-0.94,0.82l-1.37,0.42l-1.45,0.02l-0.87,-0.32l0.0,-0.35l3.37,-1.17l1.59,-1.01l0.95,-1.69l-0.38,-0.59l-4.86,0.27l2.95,-1.26l0.27,-0.38l0.0,-0.92l-0.37,-0.4l-2.64,-0.2l-1.61,0.16l-2.18,1.69l-1.33,-1.1l-1.32,-0.55l-9.78,0.92l-1.95,0.97l-5.19,3.7l-2.26,3.44l-2.3,0.4l-2.4,1.24l-0.38,3.61l0.62,0.37l1.34,-0.92l0.17,-1.07l4.01,-0.37l0.65,2.8l-0.16,1.11l-1.24,0.49l-2.67,-0.34l-3.04,-0.87l-2.94,-1.56l0.47,-0.5l1.52,-3.61l-0.08,-0.46l-0.46,-0.08l-1.52,0.75l-1.29,1.29l0.11,0.63l-2.2,0.09l-1.51,0.81l-2.31,-1.61l-3.15,-0.9l-0.85,-0.92l0.48,-1.51l-0.29,-0.51l-1.67,-0.33l-3.63,1.23l-0.4,-0.62l0.38,-0.57l1.05,-0.32l1.37,0.46l0.53,-0.38l0.0,-0.85l-5.97,-3.92l1.18,-2.54l1.83,-2.27l2.22,-0.81l2.84,1.5l0.51,-0.12l0.43,-0.59l1.12,0.72l1.49,-0.24l2.92,-1.61l0.2,-0.43l-0.36,-0.32l-1.42,-0.13l-0.98,-0.77l-0.39,-1.08l0.43,-2.25l-0.37,-0.4l-1.21,-0.09l-1.21,-1.26l-1.17,-0.47l-3.67,0.72l1.81,-2.6l2.61,-0.53l2.92,-1.24l1.96,-0.29l0.34,-0.4l0.0,-0.64l1.22,-0.93l-0.17,-0.66l-3.75,-1.4l-0.54,-0.84l0.67,-0.9l-0.06,-1.13l-0.52,-0.34l-2.85,0.91l-1.55,0.14l-1.67,-1.29l-0.34,-2.16l-0.75,-0.98ZM739.74,70.67l-2.16,-0.9l0.0,-0.41l0.82,-0.62l1.34,1.93ZM708.19,76.74l0.04,-0.44l3.06,-8.86l0.66,-3.4l0.57,-0.76l1.43,-0.3l2.19,0.07l0.42,1.09l-0.55,0.2l0.0,-0.75l-0.62,-0.33l-2.57,1.82l-0.58,2.3l-0.09,2.57l-0.9,2.68l-2.11,1.75l-0.95,2.35ZM557.96,136.39l-0.46,-2.08l0.42,-0.96l5.48,-2.14l-4.16,3.09l-1.28,2.09ZM553.57,141.62l-2.73,6.57l-0.88,1.07l-0.66,0.02l0.62,-2.98l-0.43,-1.56l-0.38,-0.29l-1.19,0.21l-0.56,1.41l0.38,1.58l-1.1,0.75l-1.36,-0.06l-2.68,-1.57l1.26,-2.66l3.41,-2.37l3.87,-1.03l2.42,0.91Z", "name": "Mecklenburg-Vorpommern"}}, "height": 1013.8952766123396, "projection": {"type": "mill", "centralMeridian": 0.0}, "width": 900.0});
jQuery.fn.vectorMap('addMap', 'europe_mill_en',{"insets": [{"width": 900, "top": 0, "height": 812.9890777806123, "bbox": [{"y": -9891594.817932213, "x": -2895774.757058966}, {"y": -3201145.6268246886, "x": 4510726.063880312}], "left": 0}], "paths": {"BE": {"path": "M246.24,456.55l-0.52,-2.24l-0.56,-0.57l-4.27,-0.9l-0.52,-2.3l-0.72,-1.22l-1.11,-0.96l-1.47,0.14l-2.33,0.95l-0.92,-0.58l-2.09,-2.12l0.05,-1.42l-0.93,-2.11l5.62,-2.88l4.82,-1.88l0.35,1.27l1.0,1.0l0.79,0.0l1.32,-0.71l1.21,0.17l1.92,1.09l1.12,0.14l2.05,-0.73l1.86,-1.11l0.78,-1.23l1.7,0.4l0.63,-0.24l0.21,-0.45l-0.2,-0.83l1.02,-0.54l1.08,0.83l0.82,0.06l1.67,-1.16l0.7,1.3l0.55,0.19l1.3,-0.08l1.16,-0.99l0.54,1.82l1.68,1.4l1.61,0.43l2.17,-0.42l1.55,1.44l2.54,0.82l0.16,0.74l-0.9,1.69l-0.1,0.88l-1.2,1.2l-0.17,0.9l0.73,1.23l0.43,0.19l1.63,-0.55l0.67,0.81l1.43,0.18l1.66,1.17l1.23,1.24l-0.57,0.56l0.11,0.94l0.57,0.56l1.13,0.22l0.42,0.41l0.27,2.03l-2.32,1.34l-0.73,1.47l-2.04,-0.25l-1.48,1.49l-1.77,3.1l-0.26,2.01l2.03,2.91l-0.89,1.45l-3.55,0.48l-3.14,-2.93l-1.98,-0.72l-1.6,-1.01l-1.76,-0.23l-0.27,-1.86l-0.65,-0.86l0.89,-2.9l-0.19,-0.47l-0.91,-0.32l-0.73,0.31l-1.0,0.88l-0.65,1.56l-1.29,0.64l-2.27,0.26l-2.48,-0.26l-0.25,-0.23l0.74,-1.68l-0.73,-1.1l0.42,-1.16l-0.09,-0.82l-1.77,-1.33l-1.44,-0.33l-2.3,-0.2l-1.23,0.59Z", "name": "Belgium"}, "FR": {"path": "M312.76,591.86l0.77,-0.77l0.94,-1.92l1.23,-0.85l3.08,-0.88l1.23,-1.13l1.7,0.56l0.82,-0.34l0.45,-1.04l-0.08,-2.96l0.33,-0.91l0.66,0.38l0.24,2.7l-0.35,2.37l0.97,1.88l0.4,6.27l-2.06,3.66l-0.12,3.27l-1.87,4.26l-0.66,0.88l-3.61,-1.93l-0.93,-0.91l0.98,-1.66l-0.25,-0.45l-2.02,-0.85l0.51,-1.35l-0.22,-1.18l-0.41,-0.29l-1.24,-0.03l1.05,-1.22l0.08,-1.12l-1.58,-1.27l-0.2,-0.63l1.2,-0.79l0.16,-0.59l-0.67,-0.97l-0.55,-0.18ZM158.92,505.37l0.65,-0.84l-0.12,-0.59l-0.73,-0.41l-2.57,0.36l-1.17,-0.3l-1.49,-1.3l-1.37,0.14l-0.87,-0.45l-1.51,-0.0l-0.86,-0.67l-5.4,-1.47l-2.3,-0.18l-2.16,0.65l-0.93,-0.18l-1.64,-2.53l-2.85,-1.02l3.51,-0.98l0.83,-0.82l-0.09,-0.62l-1.42,-0.83l-1.09,-0.24l-0.48,-0.51l4.02,0.01l0.24,-0.69l-0.82,-0.75l-1.49,-0.46l-4.18,0.09l-0.42,-1.11l0.47,-1.3l2.39,-1.29l6.28,-1.5l2.69,0.22l2.0,-0.28l2.38,-0.99l1.02,-0.81l3.05,-0.46l2.89,0.82l2.77,3.21l1.41,1.16l0.45,0.04l3.24,-1.88l4.68,0.05l0.91,0.97l0.66,-0.11l1.03,-1.63l1.04,1.03l6.14,-0.39l0.3,-0.33l-0.2,-0.4l-1.32,-0.73l-1.04,-1.7l-0.23,-6.83l-3.16,-5.2l-0.74,-1.77l0.1,-1.05l3.42,0.27l2.9,-0.67l1.05,0.35l-0.06,1.25l0.44,1.82l1.67,2.18l2.38,-0.09l2.65,0.58l3.27,0.09l4.99,1.0l2.16,-0.63l1.93,-1.21l3.73,-0.81l0.55,-0.6l-0.36,-0.63l-2.09,0.17l-1.74,-0.69l-0.18,-0.56l0.93,-2.26l5.64,-2.73l4.17,-0.84l4.35,-1.55l2.29,-1.65l1.52,-2.13l0.97,-0.76l0.11,-0.58l-0.47,-0.62l0.37,-7.73l0.38,-1.32l0.77,-1.06l3.1,-1.79l7.86,-1.69l0.89,1.97l-0.23,0.88l0.24,0.64l2.36,2.43l1.4,0.74l3.41,-1.17l1.46,1.78l0.66,2.52l0.79,0.51l3.62,0.5l1.16,2.94l0.53,0.06l1.11,-0.65l2.14,0.19l1.16,0.23l1.5,1.13l-0.49,1.57l0.74,1.06l-0.73,1.84l0.74,0.77l2.76,0.32l2.6,-0.31l1.5,-0.75l0.83,-1.78l1.17,-0.8l-0.75,2.86l0.69,1.08l0.35,2.16l0.4,0.31l1.74,0.15l1.55,0.98l2.02,0.76l3.09,2.9l3.87,-0.4l0.55,0.57l2.55,1.05l1.01,-0.16l1.41,-0.77l0.66,0.06l1.34,0.7l1.53,0.18l0.9,0.74l0.57,1.32l2.4,2.91l0.83,0.07l1.34,-0.87l1.17,0.37l0.34,0.99l0.66,0.25l0.87,-0.21l1.22,0.23l3.14,-0.67l0.9,1.02l1.32,0.54l5.31,0.9l1.54,0.57l0.05,1.06l-4.06,4.37l-1.78,6.15l-1.23,2.19l-0.44,1.6l0.31,1.21l-0.19,1.55l-0.73,2.24l-0.14,1.81l0.62,1.43l-1.03,0.58l-0.92,1.44l-0.88,0.32l-1.64,0.02l-0.4,-0.65l-0.67,-0.35l-1.3,0.06l-1.26,0.7l-0.98,1.46l0.57,0.78l0.73,0.13l-4.41,4.92l-2.88,1.4l-0.65,3.27l-3.36,2.49l-1.4,3.22l0.82,1.06l-0.3,1.32l-1.75,1.33l0.3,1.45l1.86,0.05l1.53,-0.78l1.1,-1.08l0.06,-0.49l-0.55,-0.89l1.09,-0.95l1.33,-0.57l1.91,-0.11l2.25,0.34l0.17,1.45l0.39,0.62l-0.48,2.05l2.48,2.54l0.73,1.16l-2.83,1.85l-0.18,1.53l0.36,0.71l0.96,0.63l1.81,2.87l1.7,1.48l-0.9,2.31l-1.21,0.37l-1.74,1.24l-1.94,-0.12l-1.05,0.48l-0.22,0.4l0.1,0.83l0.84,0.96l0.72,1.77l0.97,0.7l2.2,0.58l0.6,1.75l-0.87,0.55l-1.59,2.78l0.62,1.53l-0.2,0.75l0.43,1.08l1.01,1.0l4.77,2.37l0.96,0.2l3.03,-0.67l0.61,0.98l-2.54,3.4l0.06,1.58l-1.05,-0.07l-0.48,0.65l-2.48,1.14l-4.32,3.66l-1.97,1.05l-0.96,1.96l-1.06,0.92l-3.52,0.96l-2.41,1.02l-1.16,-0.44l-2.86,0.05l-1.9,-1.3l-3.42,-0.79l-1.08,-1.77l-3.35,-0.43l-0.12,-1.01l-0.5,-0.38l-2.08,0.32l-0.81,0.45l-0.79,-0.06l-0.3,0.4l-0.61,0.05l-6.5,-1.73l-2.24,-1.83l-2.23,0.45l-1.84,1.74l-7.09,4.4l-2.94,4.71l-0.16,1.52l0.65,4.04l1.42,2.15l-2.55,-0.57l-1.24,0.17l-2.7,0.83l-0.82,1.03l-5.68,-1.28l-2.77,1.03l-0.81,-1.08l-2.69,-1.15l0.34,-0.96l-0.7,-0.84l-2.87,-0.63l-0.99,0.54l-0.97,-1.29l-8.02,-2.44l-1.12,-0.09l-0.58,0.37l-0.39,2.16l-4.74,-0.06l-0.9,-0.43l-3.17,0.48l-3.51,-2.21l-3.8,0.41l-2.46,-2.29l-2.3,-0.16l-4.55,-1.72l-0.58,-0.75l-1.12,1.08l-0.39,-0.03l-0.35,-0.23l0.9,-1.91l-0.24,-1.16l-0.96,-0.5l-3.16,-0.62l-0.85,-0.97l2.08,-0.55l2.08,-2.25l1.89,-7.58l1.35,-8.89l0.9,-1.51l1.14,-0.42l0.17,-0.63l-1.03,-1.24l-0.59,-0.03l-0.43,0.42l0.62,-6.73l1.3,-5.64l2.92,2.19l0.73,1.01l1.11,3.81l1.99,1.6l0.49,-0.04l0.08,-0.49l-1.25,-1.54l-1.21,-4.81l-0.82,-1.5l-1.35,-1.32l-4.11,-2.8l-0.07,-0.37l1.77,0.46l0.54,-0.47l-0.98,-3.08l-0.57,-6.54l-0.32,-0.32l-3.24,-0.63l-5.21,-2.73l-4.02,-5.74l0.92,-3.09l-0.85,-1.26l-1.37,-0.73l0.46,-0.73l0.43,-0.53l0.88,-0.15l3.8,0.98l0.44,-0.27l-0.2,-0.48l-3.38,-1.66l-5.05,0.54l-1.01,-0.19l-0.71,-0.28l-0.22,-0.74l1.25,-1.47l-0.06,-0.51l-0.74,-0.7l-1.24,-0.37l-2.75,0.2ZM177.97,531.5l1.87,1.8l-0.15,0.47l-1.61,-1.84l-0.11,-0.43Z", "name": "France"}, "BG": {"path": "M506.97,608.28l0.29,-3.93l0.71,-1.74l-0.05,-0.72l-0.86,-0.68l-1.47,-3.53l-0.69,-0.61l-2.79,-1.24l-2.72,-2.83l0.66,-0.27l1.35,-1.8l0.2,-0.83l-1.28,-2.5l0.35,-1.28l-0.28,-1.38l0.24,-0.54l0.99,-0.47l2.26,-0.25l3.24,-3.57l0.5,-1.6l-1.7,-1.41l-1.32,-1.72l-2.82,-1.62l-0.65,-0.92l-1.73,-4.24l-0.05,-1.22l0.63,-2.11l2.3,-1.11l0.53,-2.07l0.7,-0.5l3.98,2.36l-2.14,1.89l-0.0,1.56l1.14,0.79l4.09,-0.64l4.12,0.33l5.61,1.1l3.77,0.39l2.8,-0.5l9.8,1.77l4.62,0.26l2.68,-0.69l1.87,-0.94l1.63,-1.76l3.73,-2.21l3.64,-1.25l7.86,-1.35l4.52,2.38l3.3,0.38l0.99,0.7l1.95,-0.44l2.27,2.65l4.45,1.3l2.5,0.06l-0.27,3.43l-1.07,1.52l-1.89,-0.54l-2.52,0.51l-1.56,2.22l-1.43,1.35l-0.55,2.98l-0.1,4.21l-1.73,0.67l-3.64,3.9l0.11,0.63l2.9,1.84l3.86,5.44l-1.29,-0.19l-1.14,0.47l-1.76,-0.06l-1.67,0.63l-3.01,-2.44l-0.84,-0.32l-3.32,0.55l-1.81,1.1l-3.71,0.47l-0.64,0.45l-0.79,1.79l-2.1,0.49l-0.67,1.12l-1.29,-0.3l-1.48,0.42l-0.64,1.22l1.04,2.43l-0.05,1.85l-2.57,1.05l-1.96,-0.27l-7.01,1.36l-1.54,-1.11l-1.95,-0.82l-1.99,-0.47l-1.13,0.51l-2.11,-1.23l-0.94,-1.63l-0.73,-0.26l-1.48,0.51l-4.42,-0.06l-0.73,1.11l-1.79,0.08l-3.22,1.09l-2.62,-0.19l-2.69,0.22l-1.27,1.01l-2.51,-0.16Z", "name": "Bulgaria"}, "DK": {"path": "M400.13,370.7l-0.27,0.17l-2.03,-0.48l-2.42,-1.16l0.34,-2.18l0.45,-0.71l4.45,2.57l0.04,0.75l-0.57,1.04ZM366.37,360.46l-0.22,-0.58l0.73,-0.82l0.32,0.88l-0.83,0.52ZM365.94,356.59l0.03,1.74l-0.24,0.39l-3.01,1.27l-1.04,0.95l-0.5,1.54l0.89,1.35l1.45,0.59l0.28,1.41l-0.97,0.73l-3.08,0.9l-0.28,0.33l-0.5,6.77l-2.01,0.63l-1.42,-2.32l-0.04,-1.1l-1.16,-4.02l-2.76,-0.73l-2.33,0.2l-1.41,-2.12l0.24,-2.45l-0.86,-1.5l-0.07,-1.09l-0.84,-0.87l-0.75,-0.28l-0.25,-0.91l2.9,-0.04l1.44,-0.44l2.05,-2.52l0.14,-1.11l1.62,-0.2l0.65,0.66l-0.05,3.29l0.25,0.34l1.83,0.62l0.44,-0.26l0.83,-1.97l0.58,-0.6l0.15,-1.48l-0.66,-1.19l4.24,-2.53l1.27,-0.06l3.22,1.02l0.2,0.29l-1.04,2.05l0.58,2.71ZM362.58,370.92l1.62,0.27l1.26,0.71l-1.93,-0.19l-2.4,1.25l-0.36,-0.17l1.81,-1.88ZM349.75,373.74l2.47,1.21l1.72,-0.02l0.86,0.38l0.26,1.84l-0.8,0.33l-1.36,-0.13l-1.58,0.57l-5.32,-2.52l0.22,-2.52l2.26,-0.18l1.27,1.03ZM345.52,328.07l-0.34,0.28l-1.08,-0.37l0.32,-0.35l1.92,-0.37l-0.83,0.82ZM341.24,375.71l-0.81,-1.41l2.93,-3.52l-1.79,4.2l-0.33,0.72ZM313.95,372.81l-0.42,-2.39l-0.69,-1.32l0.85,-0.26l0.28,-0.41l-0.25,-3.26l-0.49,-1.77l-6.51,-3.54l0.92,-6.99l-1.09,-3.14l0.55,-8.57l1.13,-0.11l3.55,1.07l0.63,0.75l1.02,0.47l0.49,-0.15l0.69,-1.1l0.22,-1.47l1.92,-1.94l2.1,-1.0l1.52,1.57l0.43,0.13l0.28,-0.35l0.79,-5.96l-0.27,-0.44l-1.95,-0.62l-1.84,0.53l-1.79,2.66l-1.34,2.97l-2.06,0.26l-1.76,0.83l-2.33,-1.47l0.18,-1.51l1.88,-2.47l2.45,-2.32l2.45,0.02l2.0,-0.79l1.05,-0.09l3.53,0.17l2.07,-0.61l1.73,-1.22l3.51,-4.76l1.88,-1.89l4.03,-0.74l3.39,-2.11l-0.97,1.0l-0.51,1.76l1.22,2.36l-0.16,3.78l-1.14,1.35l-1.29,2.83l-0.65,0.67l-0.18,7.29l1.49,1.58l1.55,0.73l4.8,0.01l0.83,1.17l-0.84,2.51l-2.95,1.65l-0.87,0.03l-1.39,-1.34l-0.5,-0.05l-0.78,0.52l-0.84,0.9l-1.81,6.5l-1.88,-0.35l-1.7,0.66l-0.08,0.69l1.35,1.25l-1.45,0.7l-1.73,1.9l-1.54,1.0l-0.95,1.22l0.98,4.53l-0.3,0.94l-1.79,1.6l-0.79,1.57l0.37,0.57l1.54,-0.02l1.37,0.66l0.38,0.38l-0.27,0.76l0.33,1.37l-1.22,-0.48l-3.69,0.91l-0.99,-0.03l-0.97,-0.68l-3.83,-0.98l-2.88,-0.13ZM340.07,360.25l2.16,5.07l-0.38,0.82l0.26,1.43l-0.26,1.07l-1.96,1.37l-2.27,0.06l-5.88,-2.06l-1.67,-3.43l0.02,-2.59l5.38,-1.72l1.83,0.94l1.1,0.04l1.67,-1.0ZM339.43,356.41l-0.34,-0.12l0.24,-1.95l-0.31,-1.06l1.06,1.49l-0.65,1.64ZM336.25,373.56l0.79,0.15l0.48,0.27l-0.26,0.06l-1.01,-0.47ZM328.94,370.61l2.32,1.32l0.69,1.27l-0.87,0.16l-1.78,-0.57l-0.36,-2.19Z", "name": "Denmark"}, "HR": {"path": "M385.7,540.33l1.22,0.46l3.99,-0.1l0.92,-0.53l1.59,-2.34l0.82,1.3l2.12,1.66l1.03,0.14l1.21,-0.48l2.01,0.79l1.89,0.18l1.48,-0.45l0.26,-0.49l-0.73,-1.78l0.98,-1.18l-0.97,-1.19l4.31,-1.53l0.65,-0.75l0.33,-2.14l-0.13,-1.17l-0.95,-1.16l0.13,-0.69l0.25,-0.33l4.89,-1.77l0.95,-1.13l2.19,-0.05l0.5,-0.65l-0.2,-1.45l0.85,-0.55l3.09,0.8l2.35,1.14l1.58,1.24l0.96,1.48l1.26,1.12l2.8,1.84l1.02,1.44l1.3,0.76l2.64,0.6l1.38,1.46l1.44,0.67l7.71,0.66l2.51,-0.79l1.72,-1.77l2.6,-0.25l-0.74,1.25l1.37,2.81l-0.3,1.16l0.68,0.87l0.9,0.34l-0.43,0.82l0.1,1.43l1.31,1.12l3.14,1.15l0.78,0.85l-2.14,0.07l-0.85,-0.43l-0.57,0.26l-0.1,0.53l-0.62,0.17l-0.29,0.46l0.49,2.65l-0.14,0.57l-0.99,0.12l-0.22,0.71l-0.35,0.03l-1.73,-0.65l-0.58,-1.84l-1.46,-1.06l-2.31,-0.14l-2.73,-0.8l-2.09,0.23l-1.83,-0.36l-1.83,1.07l-0.59,-0.01l-1.55,-1.26l-0.68,-0.17l-2.03,0.71l-2.45,-0.72l-2.58,-0.11l-2.74,-1.72l-0.46,0.02l-1.61,1.24l-3.67,-0.22l-3.03,3.33l-1.48,-0.9l-1.72,-1.94l-1.03,-0.46l-1.26,-0.1l-1.52,0.7l-0.82,5.65l0.14,1.89l1.91,1.38l2.26,2.38l0.73,0.32l1.41,4.87l1.26,1.68l3.92,3.5l1.7,2.25l5.01,4.32l2.43,1.02l0.02,1.53l0.33,0.88l1.52,1.8l2.96,2.52l0.33,0.7l-0.53,0.3l-3.22,-2.74l-2.74,-1.6l-3.2,-3.05l-4.07,-1.17l-2.76,-1.29l-3.77,0.57l-1.68,-0.17l-0.41,-0.57l-0.18,-1.66l-5.97,-4.16l-4.19,-4.31l-0.56,-0.93l1.66,-0.36l2.37,0.27l0.45,-0.22l-0.12,-0.48l-2.72,-1.86l-3.84,-3.59l-1.08,-1.6l0.16,-4.24l-0.73,-2.02l-4.36,-3.87l-2.22,-0.75l-1.46,0.24l-0.65,1.06l-0.42,1.98l-3.52,5.21l-0.94,-0.0l-3.02,-4.36l-1.43,-5.93l0.28,-0.2l0.5,0.51l3.57,0.81l1.03,-0.39l0.69,-0.89ZM432.19,582.77l2.81,1.18l-0.64,-0.13l-2.17,-1.05ZM436.37,584.23l-0.27,-0.82l0.24,-0.07l0.56,0.15l0.72,1.01l-1.25,-0.27ZM444.09,588.56l1.28,0.46l0.04,0.42l-0.83,-0.51l-0.49,-0.37ZM419.17,578.26l2.28,0.14l0.46,0.53l0.95,0.21l-2.53,-0.34l-1.17,-0.53ZM422.29,582.13l1.73,0.32l1.9,-0.2l1.58,0.28l-1.6,-0.19l-1.62,0.5l-1.35,-0.25l-0.64,-0.46ZM423.33,576.69l-2.03,0.04l-2.35,-0.62l0.18,-0.53l1.76,0.07l3.31,0.71l-0.86,0.32ZM397.58,555.25l1.48,1.21l2.63,2.62l-0.28,0.25l-3.0,-2.6l-0.82,-1.49ZM396.17,552.13l-1.0,-0.23l0.11,-0.54l0.35,0.02l0.54,0.75ZM392.18,546.87l0.86,-0.59l0.52,-0.96l2.47,3.2l-0.91,0.2l-1.06,-1.13l-1.25,-0.15l-0.63,-0.56ZM390.21,546.1l0.07,0.66l-0.21,-0.59l0.14,-0.08ZM390.72,548.1l0.9,0.94l-0.18,1.58l0.44,3.21l-1.56,-3.88l0.39,-1.85Z", "name": "Croatia"}, "DE": {"path": "M275.98,444.34l0.92,-0.06l2.69,-2.08l-0.1,-0.78l-0.62,-0.26l-0.01,-0.35l1.2,-2.31l0.46,-1.8l-0.14,-0.96l-1.32,-1.91l-0.18,-0.88l-1.74,-2.06l0.0,-0.39l2.54,-1.2l2.72,0.96l0.9,-0.57l1.26,0.05l3.03,-1.03l1.09,-1.58l-1.19,-1.26l0.08,-0.38l3.32,-2.17l0.69,-1.23l0.26,-2.25l-0.57,-1.0l-0.78,-0.57l-1.72,0.03l-0.99,-0.34l-0.56,-0.77l0.32,-0.8l-0.14,-0.63l0.26,-0.15l3.47,0.01l0.58,-0.47l1.19,-4.39l0.87,-1.53l0.25,-5.87l-0.69,-1.09l-1.22,-0.85l0.66,-2.97l1.24,-1.66l0.91,-0.42l4.56,-0.29l4.94,0.12l1.85,2.36l-0.66,1.16l0.16,0.55l1.25,0.65l0.93,-0.22l1.1,-2.84l1.7,1.34l0.03,2.08l0.36,0.39l0.43,-0.32l0.59,-3.0l-0.42,-2.19l0.28,-1.89l0.99,-1.44l3.66,0.69l4.05,-0.37l1.41,0.7l3.62,3.97l1.33,0.69l1.5,0.2l0.44,-0.29l-0.24,-0.47l-1.98,-0.81l-4.39,-4.82l-1.42,-0.63l-1.93,-0.18l-1.77,-1.03l-0.25,-5.55l-0.75,-0.72l-1.14,-0.35l-1.62,0.32l-0.16,-0.67l0.18,-0.5l2.27,-0.51l1.71,-0.77l0.31,-1.66l-3.73,-4.93l-0.12,-1.53l2.64,0.11l3.73,0.96l1.1,0.72l1.3,0.02l3.51,-0.88l1.75,0.87l1.88,0.47l1.56,1.78l0.07,1.44l-2.01,1.87l-0.12,0.46l0.4,0.25l3.45,-0.28l0.84,1.3l0.43,0.15l1.86,-0.51l4.89,2.22l3.71,-1.11l0.53,1.41l-0.65,1.6l-2.59,1.9l-0.12,0.5l0.59,1.21l1.09,0.48l2.61,-0.23l4.2,1.16l0.93,-0.43l3.2,-2.73l1.18,-0.54l4.48,-0.58l0.73,-1.01l1.74,-1.1l3.61,-3.28l5.78,1.01l1.62,2.35l4.07,2.64l3.72,-0.15l1.18,2.21l0.71,3.25l2.2,1.62l3.04,0.68l0.48,2.96l1.56,5.01l-0.04,1.42l-0.54,1.61l-0.94,1.33l-1.28,0.77l-0.84,0.99l-0.23,1.2l1.8,2.08l3.52,2.51l1.27,1.9l-0.81,3.14l0.34,0.97l1.43,1.19l0.26,2.34l0.57,0.56l-0.95,2.89l-1.01,1.59l0.34,1.21l1.35,1.96l-0.22,1.8l0.22,0.65l2.56,1.24l1.33,3.48l-1.28,4.17l-1.87,3.19l-1.45,-0.48l0.11,-0.81l-1.26,-1.82l-3.37,-0.82l-0.7,0.29l-0.4,0.92l1.31,1.41l-5.94,2.33l-4.66,1.03l-1.5,1.77l-0.93,-0.3l-2.04,0.95l-0.67,1.03l-2.05,0.33l-0.98,1.46l-2.31,-0.4l-3.18,0.72l-1.39,0.84l-2.01,2.57l-1.76,-1.93l-0.72,-0.08l-0.44,0.32l-0.04,1.02l1.14,1.65l0.52,1.47l1.03,1.05l2.35,1.46l0.63,0.9l-1.6,2.81l1.52,1.82l2.46,3.97l1.86,1.56l1.49,0.06l2.95,2.94l2.61,1.64l0.92,1.52l0.79,0.46l1.3,-0.06l3.28,2.99l-0.15,2.43l-0.83,1.09l-0.5,0.23l-2.76,-0.87l-0.49,0.51l-0.66,2.87l-0.38,0.46l-6.36,2.66l-1.17,0.77l-0.82,1.02l-0.01,1.03l2.54,3.11l0.01,1.17l-0.74,1.45l0.24,0.51l1.68,0.35l0.18,0.48l-0.4,2.6l-2.25,-1.03l-0.43,-1.57l-1.34,-0.67l-2.77,0.52l-1.62,-0.85l-2.1,-0.52l-0.57,0.25l-0.13,1.45l-6.21,0.61l-4.39,1.66l-1.31,1.07l-1.45,0.0l-1.9,0.52l-0.6,-0.06l-1.65,-2.11l-5.77,-0.52l-0.56,0.34l-0.83,3.0l-0.68,0.81l-1.08,0.46l0.2,-0.9l-0.26,-0.48l-1.5,-0.34l-0.22,-1.01l-1.29,-1.05l-3.11,-1.25l-0.84,0.48l-7.42,-4.0l-0.69,0.18l-0.13,0.52l0.62,1.16l-3.24,0.23l-0.69,-0.77l-0.81,-0.23l-0.59,0.27l-1.4,-1.07l-0.92,-0.24l-1.99,0.82l-0.57,0.89l0.1,0.75l0.96,0.47l-0.22,0.19l-3.27,-0.22l-1.5,0.54l-2.18,0.2l-3.01,-0.1l-1.57,-0.55l-0.38,-0.91l0.11,-1.57l0.74,-2.3l0.21,-1.67l-0.31,-1.12l0.39,-1.44l1.21,-2.15l1.76,-6.09l4.04,-4.31l0.04,-1.82l-0.29,-0.36l-1.84,-0.66l-5.26,-0.89l-1.02,-0.38l-1.24,-1.21l-3.4,0.67l-2.09,-0.1l-0.44,-1.02l-1.72,-0.51l-1.81,0.85l-2.04,-2.61l-0.66,-1.43l-1.18,-0.92l-1.21,-0.27l0.41,-1.96l1.46,-1.98l0.04,-1.7l-3.27,-1.56l-1.51,-1.7l-0.35,-1.87l0.82,-2.21l2.45,-1.41l0.19,-0.42l-0.31,-2.35l-0.74,-0.87l-1.49,-0.56l0.7,-0.84l-0.06,-0.62l-3.07,-2.45l0.64,-2.94l-0.69,-0.92l-1.76,-0.93ZM383.69,388.37l4.42,2.8l-0.02,0.84l-1.71,0.2l-1.35,-0.24l-0.07,-2.1l-1.26,-1.51ZM381.44,383.22l0.19,1.05l-1.39,-0.88l-1.53,0.01l-1.16,1.66l-0.33,0.03l-2.15,-1.36l-0.36,-1.04l0.29,-2.61l0.72,-0.83l0.1,-0.88l1.08,-0.91l0.74,-0.03l0.89,1.42l2.03,0.8l0.23,0.33l-1.12,1.59l0.47,0.93l1.3,0.71ZM348.45,381.91l-1.43,0.03l-1.18,-0.81l0.48,-0.55l1.68,0.5l0.45,0.83ZM308.86,374.08l0.28,-1.31l0.49,0.9l0.97,0.04l-1.75,0.36ZM312.01,376.65l-0.21,0.19l-1.34,-0.23l0.93,-0.31l0.63,0.35Z", "name": "Germany"}, "BA": {"path": "M453.51,550.99l3.06,-0.74l1.2,0.42l-0.79,2.62l-1.92,2.88l-0.45,3.02l0.51,1.08l2.61,1.36l3.16,2.87l-0.23,0.38l-1.19,0.13l-2.07,-0.23l-0.97,0.56l0.15,0.91l3.04,3.84l0.08,0.82l-0.38,0.94l-1.06,-0.49l-0.81,0.03l-0.9,0.24l-0.68,0.71l-1.4,0.25l-1.34,-0.37l-0.66,0.34l-0.25,0.99l1.25,2.2l-0.08,0.64l-0.78,-0.82l-1.48,-0.05l-2.53,2.08l-0.73,1.8l0.01,1.33l-1.63,0.26l-0.76,0.89l0.27,3.35l1.07,2.1l-1.07,0.98l-1.62,-0.59l-2.38,-1.46l-3.76,-2.49l-0.73,-1.03l-2.17,-0.15l0.47,-0.54l-0.1,-0.84l-4.83,-4.92l-0.31,-2.36l-0.52,-0.52l-2.14,-0.74l-4.92,-4.24l-1.7,-2.25l-3.9,-3.47l-1.1,-1.42l-1.5,-5.07l-0.87,-0.45l-2.22,-2.34l-1.83,-1.33l0.67,-6.5l0.28,-0.24l0.73,-0.18l1.63,0.37l1.74,1.95l1.95,1.12l1.36,-0.9l2.12,-2.54l3.35,0.32l1.79,-1.25l2.69,1.66l1.15,0.26l1.55,-0.13l2.52,0.74l2.07,-0.71l2.09,1.41l1.04,-0.04l1.55,-1.0l1.73,0.34l2.04,-0.24l2.67,0.79l2.33,0.15l0.96,0.73l0.49,1.68l0.79,0.76l2.59,0.32Z", "name": "Bosnia and Herz."}, "HU": {"path": "M419.21,503.1l1.54,-0.97l2.57,1.22l3.96,-0.49l0.32,-0.51l-0.38,-2.53l0.54,-0.63l0.13,-0.94l0.82,-0.63l1.72,0.33l4.26,3.09l1.92,0.75l5.22,0.12l7.83,-0.41l1.05,-1.32l-0.32,-1.6l0.46,-0.86l1.47,-0.78l4.67,-0.38l2.79,-0.66l1.42,-1.79l0.6,-0.13l3.87,1.55l5.91,-2.85l2.25,-4.03l1.81,-0.35l2.93,0.07l2.8,0.69l5.04,-0.81l1.4,0.9l2.13,2.57l0.79,0.23l6.35,-1.27l1.33,2.56l2.33,0.93l0.97,1.29l1.36,0.54l1.12,-0.08l0.79,0.7l0.31,1.75l-3.23,2.69l-1.5,-0.12l-2.91,0.86l-2.4,2.66l-1.56,1.19l-0.16,1.98l-1.62,1.48l-1.17,2.89l-1.73,1.75l-0.13,1.34l-2.11,2.94l-0.24,0.62l0.18,0.84l-2.28,1.58l-0.95,2.12l0.13,1.12l-0.94,0.47l-0.52,1.42l-1.26,0.86l-2.61,-0.28l-1.17,0.24l-0.9,1.33l-0.99,0.54l-1.52,-0.53l-3.55,0.89l-1.03,-0.47l-3.08,-0.33l-1.29,0.26l-3.02,-0.38l-1.28,0.24l-1.63,1.6l-1.87,1.0l-1.49,0.24l-1.07,-0.47l-1.04,0.98l-1.05,0.42l-2.7,0.54l-0.69,-0.13l-2.05,1.91l-2.19,0.68l-7.34,-0.61l-2.08,-1.2l-0.59,-0.86l-1.18,-0.5l-1.58,-0.16l-1.14,-0.67l-0.95,-1.36l-4.04,-2.96l-0.99,-1.51l-1.74,-1.35l-3.0,-1.37l-1.72,-2.19l-0.02,-0.77l-0.66,-0.74l-0.73,-2.29l-1.88,-0.24l2.28,-1.61l1.32,0.05l0.62,-0.39l0.55,-2.05l-0.16,-0.54l-0.64,-0.29l-0.2,-0.9l0.58,-1.02l-0.33,-1.7l2.31,-0.85l0.87,-1.68l-0.74,-1.82l-2.35,-0.68Z", "name": "Hungary"}, "JO": {"path": "M676.04,763.88l0.58,-3.52l1.27,-3.17l-0.33,-4.96l0.5,-2.13l-0.27,-2.33l0.23,-3.32l0.39,-0.64l1.55,-0.66l1.88,0.21l2.08,2.57l2.33,0.72l2.12,1.65l6.35,1.0l26.01,-15.66l3.59,12.4l-0.65,0.2l-0.27,0.51l0.81,2.51l0.49,0.26l2.43,-0.61l0.39,1.04l-4.13,3.47l-27.1,7.54l-0.18,0.66l7.04,7.22l6.44,7.17l-4.14,2.36l-2.32,4.87l-9.56,1.89l-0.85,0.58l-3.15,5.03l-5.39,4.24l-14.47,-2.21l0.34,-1.52l-0.11,-1.11l1.26,-6.16l0.98,-2.39l0.03,-4.27l4.01,-10.48l-0.48,-1.65l0.27,-1.3Z", "name": "Jordan"}, "DZ": {"path": "M312.04,678.73l0.2,0.96l-1.89,1.0l-1.15,2.08l-1.8,1.3l-0.48,0.75l0.24,0.71l1.18,0.57l0.48,1.05l-1.37,8.75l0.97,2.37l-0.03,3.73l1.02,3.03l-1.02,1.67l-0.52,1.71l-0.43,3.76l-1.55,2.43l-3.78,2.29l-1.32,2.46l-3.17,2.66l-0.33,1.77l0.06,2.26l3.21,8.79l0.53,0.63l4.63,2.6l1.28,1.87l1.23,3.4l0.54,2.52l9.48,6.93l6.34,27.14l-2.58,1.56l-0.13,0.55l4.45,7.05l2.41,7.6l0.29,2.12l-0.36,6.0l0.62,7.78l-250.18,0.0l0.2,-9.84l13.11,-9.25l2.7,-0.64l4.54,-3.31l6.7,0.76l0.68,-0.16l1.25,-1.34l0.32,-2.2l3.5,0.13l2.91,-0.31l3.15,-0.57l4.42,-1.3l2.22,-1.57l1.59,-1.64l2.86,-4.41l2.45,-1.23l6.15,-2.17l4.57,-3.18l3.74,-0.45l0.71,-0.41l0.65,-0.82l-0.08,-1.26l-0.77,-0.77l-1.92,-1.01l0.58,-2.4l-0.81,-3.06l0.22,-1.11l1.4,-0.46l1.34,0.19l2.31,-0.28l5.72,-1.94l0.65,-0.87l0.72,-2.37l0.66,-0.35l5.54,-0.82l15.86,0.61l0.83,-0.3l0.25,-0.37l-0.47,-2.47l0.23,-0.77l2.26,-1.88l0.11,-0.49l-0.72,-1.4l-4.52,-3.45l-0.75,-1.29l-0.59,-3.03l-1.67,-3.54l0.63,-3.66l-1.12,-3.37l0.29,-3.16l-0.19,-2.83l-1.11,-2.87l0.74,-1.61l-0.21,-0.67l-1.32,-1.45l0.7,-1.54l-0.0,-0.67l-4.68,-3.61l-0.88,-1.28l3.6,0.09l3.36,-1.39l2.62,-1.86l2.1,-1.02l3.29,-3.24l2.26,-1.35l6.56,-2.93l3.16,0.65l2.11,-0.3l1.4,-1.16l1.36,-2.43l2.08,-1.47l8.87,-4.33l3.78,-1.15l14.64,-1.4l3.35,0.15l5.24,-2.86l7.34,-0.16l3.58,-1.57l13.1,-0.0l3.06,1.31l2.8,2.08l1.57,0.45l1.83,-0.45l4.03,-1.91l4.63,-1.02l2.5,-1.15l1.15,-1.7l1.77,-0.51l1.23,1.22l4.76,1.3l4.43,-0.77l0.27,-0.48l-0.32,-1.34l2.45,0.41l2.28,0.89l2.45,1.83l1.76,0.44l3.09,-0.83l5.73,-0.39Z", "name": "Algeria"}, "JE": {"path": "M168.55,476.28l-0.06,0.37l-0.56,-0.27l-1.49,0.09l0.08,-0.63l2.02,0.44Z", "name": "Jersey"}, "FI": {"path": "M487.72,242.22l1.12,-0.27l0.17,-0.8l-3.0,-6.75l-1.65,-1.51l1.26,-4.64l-0.13,-1.29l-0.44,-1.65l-2.0,-1.4l-0.8,-4.19l0.5,-2.28l0.65,-0.99l3.51,-3.35l0.3,-1.68l2.07,-0.11l0.31,-0.63l-1.08,-1.53l-0.27,-1.43l2.99,-0.62l1.43,0.56l3.04,-0.72l2.79,-1.45l0.17,-1.13l-0.9,-1.84l1.23,0.03l-0.36,-1.05l1.03,0.05l1.75,-1.9l0.16,-1.41l2.9,-0.77l3.47,-2.95l3.21,-1.63l3.22,-2.9l1.63,-0.39l0.7,-1.93l2.7,-2.57l0.99,-0.5l1.28,-2.36l3.49,-2.87l2.17,-3.56l1.18,-1.25l0.4,-1.27l1.07,-0.09l1.37,-1.04l2.48,-0.66l2.46,0.18l1.24,0.48l1.0,-0.15l0.34,-0.43l-0.1,-1.23l-0.58,-0.75l1.83,-1.31l-0.47,-2.07l-1.06,-0.97l1.19,-7.21l-1.66,-1.93l-5.45,-2.53l-2.14,-0.22l-1.07,-1.63l0.59,-2.18l-0.41,-0.44l-0.76,0.14l-0.76,0.77l-1.53,0.82l-2.1,-0.66l-0.96,0.1l-1.35,-3.85l-1.94,-3.59l-2.51,-1.49l-0.59,-3.55l0.1,-1.32l0.2,-0.66l0.88,-0.57l1.4,-1.76l0.39,-2.96l1.27,-2.54l-0.7,-1.67l-3.54,-4.28l-0.46,-1.32l-0.2,-2.18l1.98,-2.11l-0.54,-2.43l-1.32,-0.69l-2.45,-0.23l0.14,-1.03l1.04,-2.32l-0.56,-2.0l0.01,-3.86l1.64,-1.24l0.06,-1.15l-2.19,-1.44l-1.54,-1.59l-0.47,-0.92l-1.92,-0.34l-1.17,-2.75l-3.36,-2.61l-1.05,-0.59l-5.69,-1.71l-2.28,-0.33l-2.6,-0.97l-7.12,-3.96l-0.62,-0.81l-3.27,-2.48l-3.41,-1.76l-0.16,-1.36l-0.37,-0.48l-3.13,-1.14l2.85,-0.25l2.64,0.65l0.68,-0.47l0.33,-0.96l-0.97,-2.39l0.11,-0.39l2.45,-1.26l4.53,0.04l9.06,9.72l1.07,1.79l0.36,1.29l0.39,0.29l8.78,1.05l1.17,0.77l2.43,-0.15l5.26,-1.54l2.04,-2.14l1.69,0.15l4.53,2.05l4.93,1.36l1.47,1.12l2.14,0.27l2.15,-1.29l1.14,-2.91l0.96,-1.23l1.35,-0.9l3.03,-0.64l2.4,-2.5l0.36,-2.24l-0.26,-3.72l0.23,-1.11l1.13,-2.03l1.5,-5.29l1.37,-2.28l3.19,-2.19l2.92,-3.18l2.69,-0.38l5.3,0.64l1.17,-0.33l5.2,-2.97l2.0,-0.52l1.71,0.07l2.05,2.1l4.98,3.63l5.31,2.23l4.5,1.41l2.4,4.4l-1.12,1.66l-2.88,2.51l-2.42,2.65l-0.24,1.85l1.37,1.93l-6.8,2.58l-0.22,0.62l0.84,0.92l3.35,0.16l0.61,0.39l0.04,0.39l-0.3,0.87l-3.66,5.46l-0.16,1.52l2.91,7.01l9.04,3.16l2.4,3.03l4.02,4.06l2.13,1.71l-0.59,2.59l-4.93,5.06l-4.46,5.23l-2.13,2.88l-0.36,2.02l0.45,1.23l2.69,3.47l2.3,3.67l2.8,5.78l3.13,4.13l2.47,6.74l0.12,1.92l-2.62,0.33l-2.15,0.65l-0.35,0.42l0.09,0.48l1.15,1.02l-1.13,2.01l-0.17,2.89l-1.24,1.48l-0.21,0.7l0.62,0.87l2.25,0.39l0.09,0.91l-0.16,0.59l-2.59,1.65l-0.27,1.72l1.38,2.87l1.19,1.01l3.94,0.91l0.37,0.52l0.12,1.58l-1.72,1.8l-0.07,1.16l1.84,3.65l3.79,1.8l1.2,0.91l0.47,1.84l-0.02,1.3l-0.27,1.1l-3.85,4.53l-2.71,1.17l-0.31,0.89l5.83,5.01l7.56,4.37l2.71,1.91l2.09,2.95l2.32,2.38l0.27,1.14l-3.31,6.62l-1.3,1.77l-3.36,3.28l-5.03,4.14l-11.82,12.08l-2.67,2.11l-3.25,3.23l-6.9,4.69l-1.08,1.18l-3.43,2.15l-8.19,7.32l-1.68,0.75l-1.87,0.16l-0.83,0.47l-3.54,-1.54l-1.89,0.43l-1.6,1.04l-3.06,0.33l-2.14,0.64l0.29,-1.94l0.65,-0.96l0.13,-0.85l-0.45,-0.43l-0.5,0.07l-1.27,1.66l-0.55,1.72l-0.89,0.72l-2.09,0.32l-2.16,-1.32l-1.3,-0.04l-0.33,0.63l1.05,2.04l-1.03,-0.03l-2.51,1.57l-0.89,-1.14l-0.5,-0.16l-2.7,1.44l-2.64,0.33l-1.46,1.06l-7.44,1.6l-1.27,1.45l-0.76,0.39l-1.42,-0.39l-8.38,1.54l-3.68,-0.35l-3.79,2.82l-1.98,0.53l2.57,-2.49l0.22,-1.2l-0.2,-0.4l-1.63,-0.55l-1.01,-0.9l-1.36,-2.4l-1.04,0.08l-0.67,2.34l-0.77,0.71l-1.25,0.53l-2.15,-0.02l-0.2,-0.77l0.41,-1.08l-0.13,-0.82l1.1,-0.12l0.67,-0.88l-0.37,-0.93l-0.64,-0.1l0.93,-1.94l-0.28,-0.49l-4.42,-0.42l-4.33,-2.0l-0.96,-0.12l-0.58,-1.57l-0.46,-0.25l-1.2,0.29l-1.31,0.9l-2.09,-1.15l-0.93,-7.29l0.21,-1.74l1.36,-2.28l0.49,-2.36l0.11,-2.74l-0.24,-1.14l0.43,0.0l0.38,-0.53l-0.76,-1.2ZM532.29,168.42l-1.79,0.65l-1.22,-0.34l-0.02,-0.9l0.75,-0.51l1.65,-0.25l1.69,0.46l-1.07,0.89ZM496.39,266.82l1.57,0.43l0.67,-0.11l0.36,0.47l-1.17,0.78l-0.1,0.84l0.62,0.92l-0.71,-0.0l-0.85,-1.34l-1.17,-0.85l0.39,-0.98l0.37,-0.17ZM491.93,265.96l0.23,-0.82l0.48,0.4l-0.15,0.7l0.64,0.5l-1.19,-0.79ZM491.4,270.79l-1.06,0.55l-0.05,-0.01l0.07,-0.67l0.56,-0.37l0.66,-0.03l-0.18,0.54ZM488.67,271.37l-0.79,0.13l-0.32,-0.25l1.18,-0.39l-0.07,0.5ZM486.11,263.34l-0.06,0.32l-1.37,0.07l-0.55,-0.69l-0.31,-1.48l2.29,1.77ZM483.0,206.57l0.17,0.59l0.43,0.26l0.96,-0.17l0.88,-0.6l0.27,0.45l-0.56,-0.04l-1.2,1.03l-1.17,-0.84l-0.53,-1.0l0.8,-0.0l-0.05,0.32Z", "name": "Finland"}, "BY": {"path": "M515.36,433.8l-0.13,-0.27l0.06,-1.46l1.09,-1.97l-0.23,-1.17l0.55,-1.58l0.0,-1.53l-0.91,-1.32l-1.92,-1.22l-3.4,-1.52l-0.13,-0.46l3.0,-3.65l5.76,-2.63l0.89,-0.8l0.33,-2.39l-0.78,-5.47l-3.53,-9.0l-1.36,-5.54l2.78,0.28l1.96,-0.44l4.11,-0.26l1.98,1.03l4.05,-1.59l1.9,0.09l0.64,-0.62l0.52,-2.24l0.36,-0.29l2.43,0.17l1.02,-0.51l0.87,-1.04l1.25,-0.61l1.3,-0.06l0.97,-0.62l0.5,0.91l-0.32,0.99l0.36,0.45l1.01,0.4l2.51,-0.34l0.49,-0.81l-0.35,-1.77l-0.79,-0.72l-1.78,-0.34l0.92,-2.2l1.45,-2.06l-0.02,-2.88l0.75,-2.05l0.96,-1.47l2.97,-0.74l1.28,-0.84l1.11,-2.32l0.33,-0.17l4.08,0.17l1.26,-1.86l1.38,-0.93l0.08,-0.49l-0.47,-0.58l-3.73,-0.67l1.4,-3.6l0.38,-2.2l2.86,-0.65l1.83,-1.98l1.15,-0.29l3.4,0.5l3.98,-0.04l0.92,-2.17l3.34,-3.06l1.74,-1.03l1.25,-0.18l1.75,1.58l0.64,0.16l1.24,-0.67l2.07,-0.07l0.81,0.47l1.37,1.97l0.92,0.38l3.4,-1.49l3.19,1.0l1.29,0.8l-0.51,2.55l1.82,1.97l0.47,0.03l2.62,-1.56l1.95,-0.51l1.41,-0.91l3.91,-0.0l2.82,1.04l2.23,2.21l1.47,0.96l2.03,0.41l0.22,0.33l-0.08,3.0l-1.06,1.29l-0.11,1.14l1.98,2.79l0.22,1.34l-1.98,2.55l-0.54,2.11l0.11,0.59l4.79,3.05l-1.06,2.23l0.22,0.44l1.4,0.68l1.5,2.94l1.41,1.78l5.67,3.03l-0.04,1.47l-0.93,2.24l0.22,0.54l1.06,0.37l5.01,0.19l3.1,1.5l-0.32,1.27l0.64,1.38l3.15,2.25l0.01,1.08l-3.01,1.21l-0.7,1.17l-3.64,2.08l-3.71,-0.26l-1.43,-1.43l-1.17,-0.32l-3.42,0.09l-0.75,0.46l-1.7,2.99l0.04,0.52l4.02,4.53l-0.61,1.04l0.17,1.41l0.94,1.23l-0.33,4.37l1.59,1.88l0.82,1.53l-5.15,-0.05l-1.77,0.96l-1.99,-0.42l-1.45,0.63l-3.04,2.72l-1.29,1.6l-1.83,3.95l1.26,4.36l-0.97,1.32l-0.91,-0.12l-1.36,-0.79l-0.43,-1.39l-2.23,-1.49l-8.26,0.78l-2.68,0.89l-2.11,-3.37l-0.52,-0.66l-0.8,-0.34l-0.77,0.12l-1.09,0.93l-1.76,0.6l-0.87,0.66l-0.7,1.15l-0.62,-0.26l-0.83,-1.64l-5.64,-1.18l-2.43,0.84l-2.32,-0.51l-1.81,1.97l0.15,-1.23l-0.24,-0.41l-1.34,-0.56l-3.99,0.09l-2.18,-2.79l-4.99,-0.34l-4.25,-0.76l-0.91,-0.57l-8.24,-1.44l-9.79,-0.12l-2.74,0.57l-6.84,0.57l-0.74,0.64l-0.63,1.19l-2.0,1.91l-1.93,1.27l-1.28,-0.61l-2.2,-0.32l-1.06,0.29l-0.7,0.7Z", "name": "Belarus"}, "FO": {"path": "M109.05,227.53l-0.39,0.91l-0.68,-0.21l-0.02,-1.72l1.1,1.02ZM106.06,237.21l-2.12,-1.38l-0.34,-0.59l2.21,0.79l0.36,0.54l-0.11,0.64ZM104.89,233.23l-3.25,-2.63l-1.86,-3.49l2.24,-0.5l4.05,1.71l-0.25,2.13l-1.83,-0.93l-0.67,0.61l-0.01,0.72l1.59,2.38ZM103.05,241.48l1.56,0.47l0.55,2.17l-1.8,-1.85l-0.31,-0.79ZM98.79,230.26l1.28,0.95l-1.0,0.36l-0.92,-0.11l-1.47,-0.53l-0.27,-0.63l1.88,-0.23l0.51,0.19Z", "name": "Faeroe Is."}, "PS": {"path": "M669.94,755.96l0.24,-0.99l-0.44,-3.64l1.39,-4.26l1.49,-0.96l2.07,0.37l0.46,0.8l1.11,0.74l0.77,0.13l0.23,1.98l-0.5,2.04l0.32,4.99l-0.78,1.37l-0.61,2.56l-4.48,1.73l-2.55,0.12l0.95,-3.04l1.02,-0.96l2.18,-1.1l0.26,-0.45l-0.26,-0.66l-1.05,-0.65l-1.0,-0.32l-0.82,0.19ZM660.71,764.12l-0.82,0.74l-0.34,-0.91l3.33,-3.42l0.17,0.18l-2.21,2.27l-0.13,1.14Z", "name": "Palestine"}, "LB": {"path": "M678.06,734.32l-0.47,-0.12l-0.63,0.32l-0.7,2.08l-0.87,0.52l-3.29,-0.17l1.59,-4.04l1.15,-1.7l2.36,-5.69l1.35,-2.29l0.52,-3.34l2.01,-2.73l1.51,-0.81l0.87,-0.91l0.09,-1.12l3.5,-0.06l0.61,-0.64l0.8,0.21l0.33,0.34l-1.18,1.22l-0.06,0.59l2.41,1.18l1.0,2.95l-1.51,2.17l-1.39,0.72l-0.91,0.95l-0.26,1.22l0.47,0.44l-2.71,0.06l-1.67,1.32l-0.64,1.77l1.11,1.11l-3.13,2.9l-2.26,1.55Z", "name": "Lebanon"}, "PT": {"path": "M71.98,654.4l0.09,-1.29l-0.52,-1.53l1.89,-0.52l1.05,-0.88l0.66,-1.19l-0.29,-1.44l0.72,-1.29l1.9,-1.21l0.16,-0.48l-0.45,-0.25l-1.03,0.19l-1.32,0.85l-2.53,4.32l-2.69,0.63l-1.22,-0.39l0.0,-1.57l0.59,-1.74l0.23,-2.35l0.81,-2.1l-0.23,-1.47l1.55,-1.26l1.44,-1.93l4.2,-9.12l-0.16,-0.87l-0.43,-0.47l0.16,-1.05l1.33,-5.45l1.22,-2.51l0.34,-5.42l-1.08,-3.29l-0.9,-4.38l-0.06,-1.28l0.63,-0.63l-0.25,-0.68l-1.02,-0.09l-0.39,-0.67l0.1,-0.85l2.49,-2.69l1.85,-0.94l3.63,-1.08l0.35,0.03l0.97,1.43l-1.22,1.94l0.7,1.49l0.68,0.39l0.93,-0.07l2.17,-1.03l3.05,-0.14l2.39,0.83l1.68,0.04l2.73,-1.05l0.62,-1.3l1.57,0.47l2.23,0.09l0.56,-0.29l1.5,0.44l1.18,-0.08l0.55,0.78l-0.02,2.65l0.26,0.7l3.35,0.69l0.74,0.55l0.27,0.69l-2.34,2.38l-2.17,1.14l-1.76,1.49l-1.17,1.72l-1.44,0.74l-0.73,1.02l1.23,3.93l0.23,1.89l-0.45,3.45l0.51,1.45l-2.56,1.95l-0.37,0.82l0.17,0.84l1.64,1.7l-1.02,3.32l-0.78,1.27l-0.86,0.37l-4.58,0.03l-1.1,0.3l-0.24,0.59l1.23,2.0l1.47,1.18l0.41,1.95l1.8,3.22l1.87,0.6l0.43,0.57l-0.58,2.03l-3.13,2.98l-0.94,4.27l3.28,4.64l1.82,-0.01l-0.65,1.59l-2.2,0.65l-3.58,4.49l-0.83,2.41l1.24,5.96l-0.9,0.16l-4.52,2.48l-1.25,0.0l-2.72,-1.11l-6.18,-0.68l-2.07,0.72l-1.4,-0.02l-1.47,0.83l2.33,-5.97l-0.06,-2.49l0.35,-2.3l-0.42,-2.18l-0.72,-1.33l1.01,-3.51l-0.12,-1.82l-0.72,-1.81l2.2,0.27l0.41,-0.22l-0.07,-0.46l-0.89,-0.92l-1.23,-0.68l-1.65,0.12l-3.48,1.12Z", "name": "Portugal"}, "NO": {"path": "M573.49,36.56l0.23,0.63l1.36,0.34l2.9,-0.91l0.43,0.5l-0.87,2.14l-0.5,5.31l0.03,1.92l0.75,1.21l0.37,-0.28l1.53,-4.62l1.78,-1.58l0.63,-2.83l1.64,-3.36l1.81,-1.92l0.95,-0.48l3.48,0.08l1.42,0.68l1.33,1.62l1.13,0.75l3.31,0.75l1.46,1.45l1.05,0.06l2.14,-1.23l1.18,-0.17l1.99,1.69l-0.39,1.45l0.53,0.75l2.77,-0.09l2.23,0.54l4.3,2.88l0.39,1.18l-0.18,1.34l-6.18,1.79l-2.82,1.78l-4.43,0.67l-15.45,-1.18l-0.42,0.49l0.6,1.58l10.65,2.77l0.42,0.55l-0.32,1.58l0.21,2.35l1.07,1.15l1.47,0.42l2.6,-0.2l1.62,0.37l1.06,-0.94l0.31,-2.12l0.45,-0.29l1.13,0.5l0.61,2.27l0.6,0.49l0.57,-0.18l0.64,-1.48l4.64,0.21l0.66,2.85l-0.32,1.93l-1.14,0.59l-2.22,-0.09l-3.1,-1.22l-2.03,-1.16l-1.02,-0.06l-0.46,0.65l0.45,1.08l-0.11,0.76l-1.24,2.43l-1.17,0.9l-2.11,0.74l-6.0,1.48l-0.74,0.88l-1.91,4.08l-1.08,0.98l-1.79,0.57l-1.49,-1.93l0.15,-1.12l2.31,-2.53l2.9,-2.54l1.32,-1.95l0.02,-0.42l-2.6,-4.76l-10.05,-3.81l-4.85,-3.54l-2.11,-2.16l-2.31,-0.18l-2.22,0.59l-3.29,1.98l-2.88,1.25l-2.51,-0.53l-2.63,-0.12l-3.06,0.46l-3.08,3.3l-3.22,2.21l-0.89,1.04l-0.68,1.54l-1.51,5.33l-1.14,2.08l-0.26,1.33l0.26,3.65l-0.25,1.89l-2.12,2.22l-2.89,0.58l-1.58,1.03l-1.18,1.51l-1.11,2.83l-1.72,0.95l-1.64,-0.27l-1.4,-1.1l-5.0,-1.38l-4.51,-2.04l-2.06,-0.21l-2.25,2.22l-5.04,1.49l-2.23,0.14l-1.05,-0.74l-8.7,-1.08l-1.5,-3.08l-9.19,-9.86l-5.11,-0.19l-1.89,0.71l-1.2,1.0l-0.17,0.91l0.95,2.35l-0.45,0.51l-2.34,-0.67l-2.89,0.05l-0.9,0.78l-6.68,0.37l-0.25,0.69l2.87,2.75l0.13,1.02l-0.37,2.11l-1.02,1.82l-1.19,1.47l-2.36,1.5l0.06,0.71l3.05,1.26l-2.99,2.31l-12.22,-3.17l-3.87,-0.18l-5.24,-1.45l-1.26,0.17l-2.17,0.96l-0.21,1.5l0.39,6.17l-0.64,1.44l-2.6,3.63l-7.73,-3.12l-7.68,4.88l-2.93,6.45l-1.5,1.48l-3.44,1.03l-1.16,2.04l0.05,0.43l3.12,3.95l0.93,2.07l-0.36,2.0l-2.17,1.74l-9.2,9.62l-1.79,1.39l-0.15,0.39l0.78,3.91l-1.25,1.03l-4.42,1.85l-6.66,0.85l-0.35,0.48l1.23,7.35l-1.15,3.31l-0.93,7.52l-4.88,7.77l-6.28,7.97l0.14,0.61l5.64,2.51l0.87,4.14l-0.09,1.74l-0.99,1.59l-1.2,1.56l-10.1,-1.3l-3.0,0.54l-2.79,1.15l-1.82,1.33l-4.89,5.81l-1.7,1.6l0.35,2.43l-2.78,4.14l2.79,6.36l-1.39,1.81l0.42,4.15l-0.34,2.72l2.55,6.54l-0.15,2.34l-1.85,9.31l2.03,1.81l4.11,2.33l3.65,3.69l-0.64,2.39l-1.64,3.29l-4.51,0.59l-1.11,0.86l0.31,2.38l3.23,7.07l0.44,1.8l-0.97,2.96l-0.38,3.86l-2.5,2.68l-1.57,1.04l-2.33,0.41l-0.95,0.63l-1.43,3.46l-2.02,2.05l-0.04,1.14l1.5,5.21l-1.13,5.28l-0.85,1.67l-1.08,0.53l-0.66,-0.22l-1.62,-3.95l-7.03,-1.56l-2.45,-3.91l-0.13,-4.21l-0.52,-3.19l-0.31,-0.36l-0.44,0.18l-0.83,1.38l0.38,2.25l-2.28,1.54l0.12,1.28l0.55,0.47l-0.21,2.88l-3.21,5.06l-1.35,-0.24l-1.59,1.15l-1.18,0.14l-0.57,-1.24l-2.23,-1.81l-1.34,0.01l-0.24,0.69l1.66,1.78l-0.34,0.49l-4.56,2.17l-0.1,0.66l0.86,0.76l-0.63,0.74l-1.2,0.24l-0.9,1.31l-3.32,2.05l-5.47,5.28l-2.78,1.47l-1.92,1.51l-1.6,-0.04l-2.35,1.34l-5.41,1.13l-3.61,-0.51l-2.53,0.43l-1.12,-0.74l0.13,-0.98l-0.23,-0.57l-0.48,-0.15l-1.41,0.03l-0.43,0.44l-0.3,1.11l-1.64,-0.49l-0.19,-0.2l0.48,-0.73l1.12,-0.9l0.02,-0.61l-0.66,-0.86l-3.6,-0.1l-4.4,-2.05l-1.12,-1.16l-3.58,-1.77l-1.54,-1.81l-0.87,-1.97l0.49,-4.67l0.5,-0.49l3.01,0.98l3.54,1.8l0.77,-0.24l0.99,-1.32l1.94,-1.08l-0.0,-0.7l-0.92,-0.33l-2.81,1.2l-2.48,-1.9l0.0,-0.39l0.79,-0.82l0.27,-1.01l-0.4,-1.11l0.16,-1.06l4.65,-4.0l1.44,-0.81l0.15,-0.54l-0.62,-0.47l-1.77,0.56l-5.82,3.61l-3.77,1.24l-1.46,1.82l-1.26,0.66l-2.2,0.07l-0.41,-0.92l0.7,-4.4l0.75,-2.16l0.74,-1.38l1.38,-0.37l0.81,-1.01l3.79,1.04l1.57,-1.49l1.65,-0.23l3.05,-1.49l0.15,-0.72l-0.45,-0.3l-5.04,0.73l-0.67,-0.19l-0.29,-0.73l4.43,-4.24l0.62,-1.06l0.38,-2.02l2.7,-2.32l1.96,-0.95l0.44,0.56l-0.61,2.89l0.01,1.23l0.32,0.39l0.45,-0.24l1.79,-4.3l0.74,-0.96l0.8,-0.64l2.32,-0.59l0.68,-1.13l-0.39,-0.22l-2.63,0.24l-6.22,1.66l-2.71,1.52l-3.49,4.08l-0.42,1.66l-0.85,0.74l-1.49,0.42l-1.92,2.07l-0.86,1.66l-3.07,2.3l-1.17,1.31l-0.32,-1.44l0.18,-1.93l0.87,-1.4l0.48,-1.54l-0.55,-1.46l0.22,-0.45l2.08,0.41l1.6,-0.06l2.76,-1.1l0.18,-0.59l-0.72,-0.8l-3.18,-0.01l-1.6,-0.94l-1.29,-1.95l-0.58,-2.58l0.3,-0.56l5.02,-2.79l1.46,-1.35l-0.21,-0.69l-1.12,-0.04l-1.87,1.53l-2.48,0.88l-1.51,-1.18l-0.82,-1.33l-0.5,-2.96l-0.01,-3.46l0.81,-0.47l2.51,0.46l3.0,-0.18l6.46,-1.25l4.1,0.74l1.78,-0.06l2.67,-1.09l2.1,-0.1l1.55,0.75l0.78,0.8l0.21,1.37l0.79,0.85l0.48,0.08l0.53,-0.27l0.19,-0.51l-0.46,-2.11l6.52,-1.69l0.96,-0.77l-0.22,-0.7l-2.49,-0.22l-0.59,-1.22l1.35,-2.63l-0.13,-0.32l-0.63,-0.15l-1.62,1.45l-0.74,1.82l0.08,1.93l-1.15,0.26l-3.02,0.11l-3.76,-0.92l-0.35,-0.26l0.16,-0.78l-0.54,-0.64l-0.52,0.09l-0.77,0.93l-0.68,1.78l-1.19,0.34l-4.08,-0.68l-5.9,0.41l-2.67,0.93l-1.54,-0.11l-2.81,-1.56l-1.03,-1.16l-0.28,-3.27l3.3,-0.44l1.09,-0.62l-0.04,-0.72l-2.18,-1.12l-0.87,-1.5l-1.48,-0.65l-0.8,-1.17l-0.22,-1.9l0.22,-1.2l0.46,-0.29l1.72,0.29l4.64,-0.24l7.53,2.27l6.21,-0.44l3.57,-1.3l0.06,-0.73l-0.92,-0.4l-3.84,0.74l-3.5,-0.03l-8.88,-1.94l-2.82,0.2l-1.23,-0.38l-0.69,-1.18l0.55,-2.44l0.89,-0.4l0.78,0.65l1.21,-0.11l1.76,-1.91l0.61,-1.38l2.32,-1.32l2.49,-0.75l0.72,0.14l1.38,1.17l2.02,-0.0l5.02,-1.15l1.71,-1.38l0.08,-0.46l-0.41,-0.22l-7.18,1.24l-0.09,-0.31l1.54,-1.49l0.43,-1.2l0.85,-0.45l5.23,-0.56l2.87,0.23l4.3,0.51l2.76,1.23l1.27,-0.08l1.19,-0.35l0.66,-0.54l-0.17,-0.69l-1.95,-0.46l0.08,-0.64l3.39,-0.97l3.89,-0.23l0.29,-0.65l-1.04,-0.98l-8.52,1.24l-2.15,-0.82l-1.92,-0.02l-1.28,0.5l-3.31,0.42l0.48,-1.1l2.15,-2.94l0.74,-0.46l5.09,-1.38l2.52,-1.63l3.75,-0.26l3.03,0.43l1.55,2.02l5.54,3.15l0.45,-0.02l-0.16,-1.34l-3.66,-3.43l-1.38,-0.85l-0.91,-1.47l0.29,-1.31l0.99,-0.9l4.06,-0.56l0.95,-0.71l0.22,-1.34l-0.74,-1.02l-2.78,-0.45l-0.24,-0.78l0.35,-0.54l2.29,-1.35l3.42,-0.91l3.71,1.05l-0.85,1.41l0.03,1.1l0.36,0.34l0.97,0.09l2.49,-2.4l2.53,-0.31l2.19,-0.78l1.71,2.01l1.34,0.96l0.53,1.62l0.88,0.37l1.1,-0.94l3.29,-0.73l3.34,0.47l2.32,-0.3l0.39,-0.56l-1.05,-1.98l0.54,-1.1l2.88,-1.45l2.34,-0.5l3.37,-1.81l0.2,-0.52l-0.89,-1.59l-1.46,-0.23l3.34,-1.94l0.12,-0.61l-0.57,-0.59l-1.9,-0.53l-3.19,1.33l-2.22,1.47l0.02,0.68l1.46,1.29l-1.22,1.3l-7.97,4.23l-3.73,1.21l-1.44,-0.16l-2.05,-3.62l-0.37,-0.22l-2.26,0.2l0.56,-1.66l1.16,-1.39l2.18,-1.22l1.06,-1.46l0.91,-2.09l3.04,-2.09l4.4,-5.12l3.55,-1.62l1.42,-1.85l2.13,-0.82l1.74,-1.35l1.46,-0.17l2.6,-1.28l1.59,-1.6l-0.25,-0.68l-0.96,-0.1l-3.19,1.24l0.62,-2.52l1.77,-1.44l8.8,-4.34l2.08,1.97l2.73,-0.3l3.32,-2.62l2.45,-2.81l0.03,-0.49l-0.47,-0.15l-1.3,0.48l-4.17,2.69l-1.12,0.22l-0.44,-0.12l-0.57,-1.09l-0.96,-0.34l-0.9,0.17l-0.6,-0.5l-0.14,-1.58l1.98,-4.42l4.74,-5.22l0.87,-2.16l1.5,-0.98l2.11,0.24l0.9,-0.36l0.18,-0.55l-0.77,-1.41l-2.48,-1.33l7.73,-1.75l3.84,0.06l1.35,-0.96l2.16,-0.63l1.6,-1.13l-0.02,-0.67l-1.13,-0.54l-6.35,1.51l-4.77,0.46l-0.62,-4.08l0.41,-2.05l0.83,0.04l0.41,-0.35l0.25,-2.21l1.17,-1.19l1.89,-0.34l2.23,-1.72l2.18,0.26l2.32,-0.27l0.24,-0.68l-0.57,-0.57l-2.9,-0.79l-0.45,-0.79l1.7,-0.95l1.18,-0.24l2.91,-3.35l1.39,0.1l1.69,-1.01l1.64,0.34l4.22,-1.18l8.63,-0.18l0.38,-0.3l0.26,-1.01l-0.34,-0.5l-8.3,-0.5l-4.76,0.14l4.07,-4.73l2.62,-1.62l1.91,0.39l2.4,1.68l1.53,0.19l0.6,0.42l1.44,2.4l0.56,0.07l0.45,-0.44l-0.23,-2.01l1.45,-1.65l0.01,-0.52l-0.82,-0.62l-2.23,0.61l-1.61,-0.6l-1.29,-1.22l-0.31,-0.94l1.51,-1.57l0.08,-0.57l-0.57,-0.71l-0.5,-0.1l-3.5,1.88l-2.87,0.28l0.41,-1.34l-0.24,-1.37l3.16,-3.18l0.98,-0.33l1.73,0.25l1.88,0.97l3.07,-0.68l0.26,-0.47l-0.56,-1.23l-3.24,-0.35l-0.56,-0.49l0.13,-0.32l2.22,-0.77l2.23,-1.39l2.55,-0.4l2.04,-1.02l0.41,0.39l0.79,4.04l1.89,3.27l0.98,0.31l0.45,-0.5l-0.67,-2.58l1.33,-1.18l0.41,-0.88l-0.28,-0.53l-0.85,-0.2l-0.68,-0.84l-1.07,-2.97l0.28,-0.58l2.32,-1.59l2.93,-0.37l3.24,1.16l1.3,0.04l8.5,-1.9l0.25,-0.5l-0.23,-0.56l-2.0,-0.82l-3.16,0.52l-8.2,-0.17l-0.57,-0.4l-0.1,-0.67l0.77,-1.23l0.88,-0.7l3.04,-1.35l3.47,-0.26l3.51,-2.5l1.5,-2.1l0.74,-2.8l1.99,-2.19l5.53,-1.56l0.2,-0.9l-0.53,-1.14l0.04,-2.01l1.39,-2.43l0.86,-0.78l1.14,0.66l1.52,1.87l2.2,1.03l3.03,0.21l1.01,-0.57l-0.05,-0.7l-2.2,-1.0l-1.53,-1.2l-0.1,-0.97l0.53,-0.47l2.72,-0.08l1.64,-0.96l0.77,-2.49l2.01,-1.96l6.28,-1.3l0.22,0.25l-0.34,3.85l-0.77,2.7l0.02,1.91l0.29,0.38l0.45,-0.16l1.34,-2.01l1.72,-5.21l1.25,-2.38l1.35,-1.31l3.09,-1.38l0.59,1.44l-0.72,4.5l0.06,1.44l-0.77,1.81l-3.13,4.27l0.08,0.89l0.5,0.28l2.12,-1.02l3.77,-3.95l3.21,0.49l0.46,-0.35l-0.06,-0.66l-2.38,-2.31l-0.35,-1.25l0.17,-3.65l0.84,-1.24l4.4,-0.04l0.96,0.67l1.77,-0.05l0.35,-0.24l1.13,-2.54l2.02,-0.2l2.09,1.76l2.52,1.2l2.02,1.72l0.51,0.0l0.58,-0.48l0.13,-0.41l-1.11,-4.1l-1.29,-1.64l-2.78,-0.89l-2.71,-1.79l-0.53,-0.8l2.14,-0.51l3.45,0.62l2.73,-1.45l0.93,0.35l2.03,-0.73l1.6,1.01l1.09,-0.57l0.42,-1.25l3.23,-0.82l2.09,0.77l1.06,0.76l1.38,4.79l1.87,1.95l1.31,0.98l1.7,0.08l0.63,-0.88l-0.06,-0.53l-1.13,-0.99l-0.26,-0.79l0.54,-2.3l0.62,-0.88l3.75,-3.65l3.07,-1.86l2.1,-0.31l3.32,-4.3l0.84,-0.7l0.77,-0.16l0.31,-0.47l-0.22,-1.06l-1.84,-0.88l-0.04,-0.83l2.27,-1.52l2.83,-2.62l1.15,-0.15l0.87,0.7l2.8,1.2l3.02,2.1l1.09,-0.1l1.51,-1.52l1.59,0.24l2.47,1.05l0.09,0.44l-1.4,0.88l-5.33,5.54l-0.92,1.61l-0.87,4.06l-2.09,2.72l-0.04,2.12l1.23,0.95l2.42,-0.75l2.8,-2.41l0.8,-2.65l6.93,-6.89l3.29,-3.86l3.65,-3.13l1.68,-0.53l0.77,1.67l-0.73,2.54l-1.53,1.7l0.07,0.6l0.97,0.67l-0.8,4.28l0.01,1.07l0.5,0.38l5.55,-2.51l2.3,-4.32l0.49,-1.51l1.5,-1.29l3.06,-0.01l0.39,-0.32l-0.08,-1.01l-3.76,-1.98l-0.27,-0.54l4.5,-3.23l1.64,0.23l1.18,0.54l4.35,0.4l3.09,1.53l-0.11,2.24l-0.66,0.96l-0.66,0.6l-4.29,1.95l-0.87,1.1ZM601.48,57.86l-2.18,0.6l-0.05,-0.09l1.05,-2.35l0.65,0.05l1.43,1.11l-0.91,0.68ZM539.33,27.69l3.23,-1.92l3.47,0.91l1.18,-0.0l1.68,1.65l0.73,0.05l-0.05,0.28l-1.54,0.43l-3.25,0.51l-2.14,-0.15l-1.48,-1.46l-1.84,-0.29ZM520.99,39.19l-2.24,0.85l-1.26,-0.71l-0.51,-0.7l-0.08,-1.73l0.28,-0.94l0.86,-0.43l3.58,2.06l-0.64,1.59ZM515.47,40.07l0.31,1.82l-1.1,1.19l-2.86,1.76l-0.12,0.61l-0.64,0.29l-1.35,0.3l-0.41,-0.17l0.09,-1.24l-0.29,-0.67l-0.54,-0.17l-0.94,0.5l-0.81,-0.53l0.24,-1.01l0.99,-0.93l1.65,-0.64l1.41,0.18l3.73,-2.53l0.64,1.24ZM513.02,33.5l-0.57,1.15l-4.22,3.84l-1.78,0.48l-1.29,0.76l-2.23,-0.41l-1.54,1.06l-2.44,0.03l-2.47,-1.11l-1.75,-1.58l2.44,-0.24l1.5,0.21l1.19,-1.09l1.93,0.11l3.79,-0.75l1.69,0.33l3.14,-2.47l1.07,0.02l1.3,-0.61l0.25,0.27ZM477.1,50.92l-1.42,0.59l-1.43,-0.54l-0.88,0.07l-0.57,-0.73l0.06,-0.57l0.93,-1.0l2.0,-0.61l1.58,0.25l-0.3,2.55ZM463.46,48.32l0.85,0.4l1.16,0.04l1.08,1.21l1.15,0.66l-0.82,0.46l-2.67,-0.01l-0.82,-1.9l-1.32,-1.36l-0.11,-0.62l0.52,-0.08l0.99,1.21ZM456.44,51.72l1.3,1.58l1.41,0.0l0.97,-0.71l1.04,0.5l-0.13,0.73l-1.99,1.49l-1.37,2.0l-1.61,0.43l-1.14,-0.16l-1.7,1.26l-2.75,2.91l-0.29,1.36l-6.6,1.0l-1.74,-0.48l-0.67,-0.77l1.81,-0.35l0.35,-0.37l0.05,-0.86l1.11,-0.95l0.4,-1.1l0.49,-0.21l1.67,0.18l1.11,-0.91l0.51,0.57l0.68,-0.15l0.32,-1.04l-0.18,-1.5l1.77,-1.59l0.83,-1.23l0.97,-0.66l0.97,0.11l0.43,-0.29l0.32,-1.16l-0.2,-1.94l0.85,-1.63l0.54,-0.04l0.39,1.32l0.08,2.67ZM433.26,63.69l1.23,1.04l2.36,-0.47l1.73,1.23l1.08,0.15l0.79,2.14l-0.59,0.87l-1.19,0.73l-0.29,1.47l0.32,1.44l-4.58,0.77l-0.96,-0.77l-0.48,-0.01l-2.22,1.59l-2.19,2.44l-0.49,0.13l-0.3,-0.65l-1.58,-0.54l-1.71,-0.05l2.12,-1.1l0.35,-1.25l-0.29,-2.32l0.35,-1.67l0.84,-0.67l3.6,0.4l0.4,-0.21l0.46,-0.84l-0.28,-0.91l-1.76,-0.93l1.26,-0.6l1.26,-0.07l0.78,-1.35ZM409.16,87.51l0.26,0.57l0.6,-0.03l1.77,-2.18l1.94,-0.67l1.19,-1.96l-0.08,-1.16l0.29,-0.74l1.54,-0.57l0.51,-0.13l1.1,0.69l1.51,2.7l-0.32,1.67l-2.27,1.42l-2.04,0.75l-1.97,1.76l-0.98,1.4l-0.62,0.23l-0.99,-0.45l-1.0,-0.0l-1.32,1.29l-3.11,0.95l-0.9,-0.2l-0.04,-0.93l-0.45,-0.38l-0.78,0.1l-1.43,1.55l-1.75,0.57l-1.75,-0.48l-3.96,2.48l-3.62,0.45l-0.87,-0.2l-0.0,-1.04l4.2,-3.16l6.8,-0.95l4.51,-4.2l1.14,-4.6l0.98,-1.56l-0.46,-1.31l-1.13,-0.33l-0.05,-0.99l0.54,-1.38l3.48,-3.0l1.99,-2.5l0.83,-0.48l0.9,0.0l0.78,0.48l-0.15,1.02l-1.57,2.35l-2.54,2.45l0.3,1.51l0.98,1.32l0.28,3.87l-1.78,2.63l-0.46,1.42ZM401.69,78.79l2.5,3.66l-0.58,2.33l-1.51,1.16l-4.23,0.12l-0.93,-0.5l-0.38,-0.83l-0.67,-0.21l-2.01,0.91l-1.05,0.11l-1.32,-0.6l-0.27,-0.72l2.17,-2.25l1.51,0.08l1.57,0.56l0.44,-0.22l0.64,-1.34l0.13,-1.3l1.98,0.41l0.48,-0.39l0.0,-2.19l0.63,-0.04l0.9,1.25ZM383.86,94.95l0.96,0.42l1.95,-0.11l-0.83,0.76l-1.83,0.42l-1.5,1.47l-2.62,0.27l-1.11,0.86l-0.71,-0.54l-0.6,0.13l-0.44,1.35l-1.52,0.4l-0.29,-1.54l1.17,-1.47l1.82,-0.2l1.4,-1.89l1.85,-0.52l2.31,0.17ZM371.55,103.36l-1.03,0.63l1.42,-3.35l1.2,-1.04l0.24,0.17l-0.26,1.89l-1.56,1.71ZM365.44,148.17l-0.58,0.03l0.0,-0.35l1.33,-1.13l2.37,-0.19l-3.13,1.64ZM364.25,145.01l-0.66,0.08l1.06,-1.26l0.59,-1.35l0.56,-0.36l0.86,0.5l0.02,0.91l-0.5,0.9l-1.93,0.58ZM357.88,154.45l-0.68,0.52l-1.31,-0.35l0.37,-0.9l0.78,-0.38l1.19,0.26l-0.35,0.85ZM347.88,171.29l-0.44,0.38l-1.53,-0.44l-3.0,0.36l-0.68,-0.32l0.6,-0.69l2.64,-1.15l1.27,0.05l1.27,1.24l-0.12,0.57ZM310.84,197.12l-1.51,0.0l4.87,-1.52l0.48,-0.61l0.38,0.44l-0.14,0.94l-4.1,0.75ZM305.71,204.17l-2.55,-0.29l-0.83,-0.71l3.05,-1.01l0.58,0.58l0.05,1.08l-0.3,0.35ZM263.6,265.19l1.08,2.54l0.03,1.89l-0.59,-0.09l-0.56,-1.19l-0.17,-2.74l0.21,-0.42ZM263.0,251.46l-1.35,0.07l0.25,-1.42l0.69,-0.25l0.54,0.73l-0.13,0.87ZM74.93,32.44l-1.19,-0.01l1.39,-1.15l5.96,-2.81l2.44,-2.71l4.11,-0.83l0.21,1.04l-0.26,1.57l-3.82,1.4l-4.48,1.0l-4.35,2.5Z", "name": "Norway"}, "TR": {"path": "M563.04,666.92l2.05,-0.84l0.41,-2.6l-0.3,-1.51l-0.34,-0.32l-3.8,-1.3l-0.85,0.07l-0.95,-1.23l-1.69,-0.94l-1.65,0.68l-3.36,-1.66l0.47,-0.97l0.73,0.03l0.41,-0.34l0.16,-1.36l-0.74,-1.82l0.05,-0.62l0.5,-0.16l0.74,0.14l0.84,0.97l0.27,0.93l-0.14,1.26l1.21,1.44l0.59,-0.24l0.28,-0.94l0.56,0.4l1.4,0.24l3.21,-0.67l0.81,-0.67l0.1,-0.44l-0.38,-0.25l-2.23,0.06l-0.7,-0.43l-0.87,-1.11l-0.88,-2.11l1.82,-0.87l1.41,-1.76l-0.05,-0.55l-0.59,-0.51l-0.8,-0.31l-0.76,0.12l-0.42,-0.36l-0.06,-0.51l0.54,-0.78l-0.03,-1.21l-2.15,-2.63l2.91,-3.24l-0.08,-0.89l-1.42,-0.49l-4.64,0.67l-1.83,0.58l-2.84,0.23l-0.12,-0.46l0.79,-2.13l-0.07,-3.39l0.36,-1.6l1.76,-0.62l2.17,-2.73l3.41,-3.12l3.55,0.06l1.61,-0.9l1.87,-0.04l0.7,1.23l1.93,0.9l3.6,-0.11l1.82,-0.91l0.07,-0.62l-1.28,-1.3l1.32,-0.12l1.19,0.29l-0.77,1.24l0.21,0.57l0.46,0.17l4.56,-0.5l4.58,0.42l5.14,-0.21l0.91,-0.65l-0.05,-0.64l-3.12,-1.42l1.75,-1.18l11.88,-1.7l0.41,-0.69l-0.39,-0.46l-6.45,-0.78l-1.33,-0.57l-2.67,-2.32l0.59,-2.43l0.54,-0.53l2.17,-0.1l8.04,1.23l5.79,-0.73l6.35,1.8l6.02,-0.37l1.56,-1.01l1.45,-2.51l8.4,-4.3l2.99,-2.28l3.11,-1.22l5.45,-1.38l4.59,-1.83l1.22,-0.2l10.94,0.87l7.57,0.11l3.51,-1.7l1.47,0.42l-0.45,0.92l0.19,1.27l2.54,2.76l3.78,1.55l4.81,-1.27l1.47,0.41l1.73,4.1l1.44,1.54l1.72,0.99l1.56,0.25l2.03,-1.46l1.58,-0.16l2.7,1.33l1.19,1.54l4.94,1.13l4.48,0.56l2.02,1.25l6.48,1.25l2.47,-0.21l3.97,-1.3l7.63,-1.4l5.13,1.98l1.4,0.26l1.24,-0.16l1.83,0.54l1.85,-0.29l5.8,-2.38l1.8,-1.33l1.9,-0.36l1.68,-0.8l4.51,-2.64l1.22,-1.39l4.03,1.3l1.6,-1.01l3.68,0.14l3.44,0.76l0.89,-0.58l1.21,-1.67l1.74,-0.0l0.9,1.39l1.08,0.39l3.21,2.53l-0.05,0.97l0.83,0.78l2.28,0.25l0.71,0.38l0.35,1.5l2.34,2.13l1.17,3.19l-0.11,1.0l-1.85,2.5l-0.06,0.46l0.57,1.28l-0.05,0.73l1.25,2.72l-0.45,0.57l0.15,0.56l1.75,0.92l2.96,0.92l3.83,-0.41l1.36,0.65l2.13,1.69l2.49,2.48l-1.62,-1.2l-0.45,-0.02l-1.05,0.68l-0.82,1.03l-0.94,3.88l-0.48,0.27l-3.91,0.06l-0.59,0.77l0.85,2.67l1.24,1.1l-0.44,2.31l0.36,0.95l1.32,1.59l-0.18,1.92l0.55,2.32l0.02,2.75l0.46,0.44l1.56,0.41l-0.92,1.08l-0.65,2.14l-1.38,2.27l-0.25,1.23l0.5,0.7l1.41,0.12l3.09,2.14l-0.51,0.83l0.43,1.54l-0.04,1.93l3.0,2.45l-0.46,1.36l-1.89,-0.12l-4.32,3.01l-0.56,-0.78l-0.15,-3.14l-1.33,-1.08l-1.46,-0.19l-2.49,1.4l-2.06,-0.05l-2.08,-0.26l-5.73,-1.92l-2.24,0.64l-2.29,-0.7l-0.63,0.28l-1.4,1.72l-2.33,1.8l-0.87,0.21l-0.51,-1.54l-0.67,-0.86l-1.31,-0.45l-2.03,1.45l-7.22,1.78l-3.32,0.3l-4.16,-0.62l-3.47,0.18l-9.43,4.25l-4.42,1.35l-4.4,0.87l-7.89,-0.18l-0.92,-0.3l-3.38,-2.31l-3.5,-0.63l-10.34,4.01l-4.81,-0.15l-1.71,-1.63l-3.89,-0.69l-0.82,0.65l-1.25,5.04l1.38,3.17l-1.94,0.18l-1.49,0.83l-0.49,2.61l-1.87,1.01l-0.67,1.53l-2.54,-1.23l0.53,-1.07l-1.9,-4.64l0.83,-1.27l4.23,-4.18l-0.21,-2.57l-1.83,-1.66l-2.38,0.94l-1.39,1.07l-1.93,0.86l-0.59,1.19l-1.03,0.75l-1.76,0.31l-2.82,-0.89l-5.01,-2.57l-1.67,-0.26l-1.47,0.55l-4.08,2.8l-4.65,4.78l-3.45,1.72l-2.21,0.56l-1.14,-0.13l-6.89,0.88l-1.84,0.9l-3.33,-0.94l-2.02,-1.23l-3.27,-4.03l-1.52,-1.39l-3.41,-1.27l-5.74,-2.91l-9.74,-1.05l-1.26,1.43l-0.31,4.12l-0.66,1.08l-0.34,2.22l-0.38,0.48l-0.53,0.27l-2.28,-0.9l-1.99,0.89l-5.15,1.4l-4.48,-1.54l-1.61,-0.97l-0.97,-1.0l-0.34,-1.79l-0.69,-1.15l-0.37,-1.58l-1.17,-0.6l-1.25,0.62l-0.89,-0.02l-4.39,-1.95l-2.59,-0.17l-1.75,2.04l-1.0,0.54l-0.76,0.11l0.84,-1.12l-0.34,-0.64l-3.79,0.23l-2.05,0.95l-2.04,-0.37l1.87,-0.57l4.05,-0.35l1.06,-0.38l1.19,-1.45l1.85,-1.15l0.39,-0.68l-0.36,-0.57l-7.77,0.34l-4.3,-0.19l-0.83,0.62l-0.11,-1.01l0.43,-0.47l0.87,0.04l2.26,-0.65l0.29,-0.44l-0.2,-1.33l-2.3,-1.77l-1.08,-0.11l-0.72,-0.48l-0.21,-1.52l-0.76,-1.75l-0.99,-0.84ZM566.29,597.74l2.42,1.76l1.97,-0.61l1.78,0.08l1.08,-0.48l1.36,0.21l-0.26,1.68l0.89,2.12l2.0,2.83l2.18,1.56l8.13,3.52l1.17,0.24l-0.7,2.23l-0.43,0.68l-2.13,0.49l-8.2,-1.7l-1.39,0.36l-2.05,1.08l-2.41,-0.34l-3.36,0.65l-1.2,2.31l-2.24,2.35l-6.6,3.07l-4.12,3.79l-1.85,2.19l-0.86,0.44l0.53,-1.21l-0.05,-1.78l2.42,-1.92l3.65,-1.57l1.14,-1.45l-0.33,-0.64l-9.04,0.23l-0.6,-1.27l0.72,-0.29l3.05,-3.37l0.35,-0.85l-0.35,-1.64l0.02,-2.02l2.54,-1.54l0.82,-0.16l0.6,-1.01l-0.57,-3.48l-2.46,-1.76l-1.08,-0.32l0.07,-0.39l2.46,-0.84l1.18,-2.08l3.64,-0.45l1.8,-1.09l2.99,-0.52l1.32,0.97ZM547.36,627.54l-2.69,0.43l-0.35,-0.18l0.51,-0.51l2.02,-0.59l0.51,0.85Z", "name": "Turkey"}, "LI": {"path": "M324.98,513.14l0.02,-1.41l0.15,-0.43l0.74,1.46l-0.19,0.45l-0.72,-0.06Z", "name": "Liechtenstein"}, "LV": {"path": "M538.64,313.27l3.54,1.99l1.98,0.57l1.08,0.9l2.52,0.56l0.49,0.96l3.61,3.59l2.41,1.22l1.17,0.26l5.64,-1.51l2.97,1.35l4.18,0.48l0.5,1.59l3.77,2.5l0.01,1.64l-0.89,1.1l-0.61,1.56l-0.11,1.54l-0.95,2.5l0.51,0.58l2.08,-0.43l0.37,0.17l0.31,0.4l0.24,1.72l1.27,1.73l0.34,1.03l1.17,0.94l1.3,5.23l-0.59,1.84l-1.51,0.28l-1.91,1.14l-3.42,3.12l-0.81,2.05l-7.02,-0.58l-1.55,0.46l-1.71,1.9l-2.95,0.71l-2.36,-0.64l-1.52,-0.83l-2.67,-2.79l-5.79,-4.01l-1.15,-0.51l-6.81,-1.3l-1.59,-2.23l-0.53,-1.35l-1.1,-0.49l-2.14,0.57l-3.01,1.85l-4.66,0.37l-4.19,-1.24l-8.33,-0.72l-1.96,0.8l-1.07,-1.05l-1.25,-0.31l-1.54,0.36l-2.45,0.04l-6.9,-0.6l-5.94,1.81l-7.71,4.36l-0.35,-2.96l0.22,-7.19l0.51,-3.43l2.4,-2.01l1.32,-1.7l0.8,-2.31l0.72,-3.66l3.51,-4.66l2.8,-0.51l7.96,-2.38l1.22,2.37l6.51,5.2l2.2,4.67l4.88,2.3l4.08,-0.69l4.89,-3.23l1.54,-1.77l0.28,-1.57l-0.54,-6.24l-0.82,-2.71l0.2,-1.21l10.29,-3.78l1.63,1.26l0.73,-0.15l0.24,-0.8Z", "name": "Latvia"}, "EE": {"path": "M525.88,315.96l1.81,-4.11l0.33,-3.0l0.83,-0.92l-0.26,-1.25l-2.11,-0.9l-0.93,0.07l-1.54,1.85l-1.37,0.39l-1.33,-0.75l-3.15,-1.02l-0.72,-1.22l-0.33,-1.61l-1.67,-1.33l-0.63,-1.42l0.21,-0.83l1.41,-0.67l0.61,-0.79l-0.35,-0.63l-2.02,0.06l-0.86,-2.22l1.01,-1.49l-0.57,-0.94l0.62,-1.45l-0.25,-1.46l3.53,-1.43l4.02,-0.33l0.36,-0.5l-0.28,-1.13l1.37,-0.12l2.65,-1.85l2.77,0.3l3.92,-1.31l7.6,0.02l1.28,-0.85l-0.01,-1.45l3.44,0.02l8.98,1.61l2.19,0.01l2.98,1.6l1.75,0.46l4.97,0.02l7.52,0.73l1.76,-1.19l1.19,1.24l0.06,0.34l-0.8,0.25l-0.7,0.83l-0.88,0.08l-0.74,0.46l-2.01,4.62l-1.0,1.16l-1.85,-0.45l-3.14,0.26l-2.71,0.88l-1.96,1.68l-0.01,1.85l2.52,3.06l1.06,3.79l1.27,1.16l1.32,1.87l0.64,1.7l2.35,4.14l0.34,1.32l1.4,1.23l-3.14,1.13l-0.66,1.41l-1.28,1.23l-0.65,2.48l-1.76,-0.23l-3.09,-1.39l-1.03,0.03l-4.84,1.48l-0.81,-0.22l-2.12,-1.05l-3.52,-3.5l-0.79,-1.2l-2.57,-0.57l-0.91,-0.82l-2.12,-0.63l-3.1,-1.88l-0.9,-0.23l-0.43,0.19l-0.22,0.83l-1.91,-1.28l-2.69,1.15l-6.12,1.9l-1.25,0.77ZM511.87,302.56l-0.76,0.14l-2.16,-1.14l0.85,-0.75l1.88,0.49l0.18,1.27ZM492.62,308.14l1.2,-0.99l0.33,-0.87l-1.39,-2.14l1.13,-0.04l1.0,0.59l1.86,-0.79l0.72,0.23l0.47,-0.18l0.75,-1.29l2.76,-0.86l1.92,0.58l1.76,-0.47l1.78,0.29l4.31,2.35l-2.28,0.37l-1.11,1.14l-0.83,0.23l-3.35,2.53l-2.9,-0.1l-1.98,0.46l-1.39,1.11l-0.69,2.29l-0.93,1.53l-0.87,0.51l-0.69,0.06l-0.04,-0.64l2.7,-3.11l-0.23,-0.59l-1.05,-0.32l-2.98,-1.88ZM506.44,297.03l-1.11,0.89l-0.64,-0.61l-0.66,0.02l-1.35,2.08l-1.32,0.31l-0.56,-0.26l0.03,-0.74l-1.12,-2.38l-1.4,-0.64l-2.38,-0.32l4.36,-0.48l1.83,-2.15l0.62,-0.09l0.4,0.14l0.6,1.28l2.33,0.44l0.83,1.22l0.26,1.2l-0.72,0.09Z", "name": "Estonia"}, "LT": {"path": "M483.98,366.01l-0.39,-1.12l0.47,-2.2l-2.37,-6.77l-0.19,-4.6l7.93,-4.5l5.72,-1.74l6.78,0.6l2.52,-0.04l1.38,-0.35l1.04,0.25l1.27,1.12l1.22,-0.19l0.91,-0.62l8.18,0.71l4.27,1.25l4.85,-0.4l3.11,-1.88l1.75,-0.52l0.53,0.16l0.53,1.3l1.94,2.55l6.95,1.34l0.97,0.45l5.66,3.93l2.72,2.83l1.69,0.92l2.31,0.65l-0.33,1.84l-1.47,3.86l0.12,0.41l0.74,0.56l3.28,0.4l-1.47,1.08l-0.6,1.26l-4.12,-0.12l-0.74,0.49l-0.95,2.15l-0.97,0.67l-1.72,0.29l-1.62,0.68l-1.1,1.7l-0.79,2.16l0.04,2.82l-1.38,1.93l-1.03,2.49l0.51,0.92l1.76,0.29l0.47,0.48l0.08,1.37l-2.02,0.25l-0.64,-0.28l0.32,-0.84l-0.29,-0.93l-0.72,-0.7l-0.47,-0.03l-1.13,0.71l-1.24,0.04l-1.41,0.69l-0.99,1.14l-0.7,0.32l-2.57,-0.13l-0.73,0.71l-0.6,2.36l-1.95,-0.05l-3.91,1.55l-1.77,-1.04l-4.3,0.27l-1.89,0.43l-3.0,-0.41l0.02,-2.29l-0.39,-1.31l-1.24,-1.23l-2.8,-1.57l-1.61,-0.43l-0.45,-0.8l-1.71,-0.82l-1.06,-0.13l-0.74,0.5l-0.85,-1.98l0.06,-1.18l1.96,-5.07l-0.06,-0.83l-1.32,-1.32l-1.44,-0.78l-1.1,-1.77l-6.64,-0.08l-2.62,-0.68l-4.29,-1.77l-2.12,-1.43l-2.02,0.1Z", "name": "Lithuania"}, "LU": {"path": "M278.58,460.49l-0.02,1.53l0.46,1.19l0.9,1.04l1.7,1.44l2.06,0.7l-0.04,1.05l-1.43,1.94l-0.47,2.13l-1.8,-0.59l-2.33,0.93l-2.45,-1.15l1.0,-2.16l-2.03,-2.82l0.23,-1.64l1.61,-2.81l1.29,-1.3l1.16,0.19l0.17,0.33Z", "name": "Luxembourg"}, "AT": {"path": "M326.56,513.24l0.13,-0.58l-1.06,-2.67l1.05,-2.02l0.09,-1.66l1.32,-0.27l0.2,-0.84l3.49,1.6l0.5,1.42l1.54,0.43l-0.16,1.16l0.45,0.42l1.89,-0.63l0.89,-1.0l0.56,-1.07l0.32,-1.89l2.67,-0.0l2.55,0.45l1.56,1.96l1.22,0.23l3.45,-0.54l1.49,-1.13l4.19,-1.59l6.31,-0.62l0.56,-0.68l-0.02,-0.91l1.71,0.39l1.72,0.89l2.71,-0.54l0.93,0.41l0.03,1.0l0.54,0.69l2.21,1.17l0.81,-0.01l0.6,-0.84l0.29,-2.74l-0.54,-1.0l-1.44,-0.25l0.66,-1.24l-0.01,-1.43l-2.62,-3.33l0.61,-1.03l3.5,-1.9l3.24,-0.97l0.81,-0.58l0.62,-0.8l0.73,-2.89l2.33,0.93l1.08,-0.42l0.94,-0.96l0.25,-2.75l1.81,1.07l1.04,1.68l1.98,0.43l2.41,0.04l1.64,-0.85l2.7,0.44l0.45,-0.33l0.19,-1.16l1.34,-1.54l1.19,0.04l0.39,-0.27l0.74,-3.73l0.73,0.04l1.42,0.9l1.99,-0.47l5.15,1.95l1.69,-0.05l3.21,1.91l4.24,0.28l1.59,-1.06l5.11,1.61l0.79,1.59l-1.13,2.45l0.03,1.29l1.48,3.33l1.49,2.65l0.58,0.5l-0.55,0.63l-0.13,0.94l-0.66,1.21l0.37,2.0l-3.34,0.39l-2.63,-1.21l-0.78,0.17l-1.67,1.19l-0.17,0.52l0.4,0.53l2.62,0.76l0.36,0.9l-0.61,1.27l-2.5,1.01l0.22,2.14l-0.57,1.05l0.29,1.33l0.71,0.37l-0.38,1.52l-1.55,0.13l-1.07,0.52l-3.01,2.23l-0.95,1.05l-0.06,1.64l-2.43,-0.52l-1.82,0.22l-2.61,1.16l-3.0,-0.22l-4.41,0.63l-0.86,0.49l-1.18,1.41l-2.57,1.55l-9.63,-1.84l-4.6,-0.75l-4.37,-0.3l-9.27,-1.69l-1.1,-0.46l-3.07,-3.85l-0.22,-0.59l0.9,-1.44l-0.7,-0.65l-5.52,1.62l-3.28,-0.2l-4.0,0.41l-1.66,0.8l-1.47,2.35l-1.02,0.32l-2.04,-0.36l-1.13,-0.95l-2.82,-0.17l-0.56,-1.62l-1.1,-0.55l-3.06,2.23l-3.12,-1.32l-0.64,-1.3l-3.07,-0.86Z", "name": "Austria"}, "RO": {"path": "M476.64,535.62l-1.61,-2.14l-2.97,-1.77l-1.3,-1.89l2.99,-0.64l1.59,0.53l1.44,-0.77l0.67,-1.16l0.81,-0.18l2.68,0.29l1.42,-0.78l0.52,-0.55l0.45,-1.28l1.09,-0.68l-0.15,-1.22l0.78,-1.77l2.37,-1.65l0.06,-1.56l2.13,-2.96l0.14,-1.37l1.69,-1.68l1.11,-2.79l1.64,-1.48l0.18,-2.0l1.41,-1.03l2.32,-2.59l2.53,-0.74l1.8,0.04l3.69,-3.16l2.28,-0.96l1.16,-1.36l0.58,0.03l2.92,1.64l3.46,-0.04l4.48,0.97l0.86,-0.12l1.63,0.64l4.1,-0.7l1.11,0.24l4.49,3.71l2.52,-0.49l1.41,-1.38l3.86,-1.46l9.41,-1.41l1.83,-2.26l0.38,-1.45l5.18,-0.96l2.32,0.84l0.99,0.89l2.29,3.33l2.5,5.51l1.56,1.55l2.19,3.58l2.09,1.96l1.18,1.95l2.93,2.32l2.2,5.58l-0.22,2.16l0.27,1.0l-1.66,5.19l-0.28,2.89l0.8,5.34l-1.04,0.72l0.01,0.55l1.84,2.47l1.42,1.74l1.94,1.02l4.28,1.01l0.85,-0.41l-0.23,-0.85l1.39,0.33l1.88,-0.54l2.59,-1.35l2.27,-0.26l2.06,0.76l1.64,1.61l-0.91,4.48l-0.93,2.03l-5.83,1.21l-0.37,-2.15l0.51,-0.66l-0.24,-0.64l-1.85,-0.24l-1.32,1.35l0.37,1.95l-0.96,1.47l-0.08,1.37l-0.53,1.28l0.45,0.45l0.39,-0.06l-2.26,2.64l-0.78,1.51l0.18,5.11l-0.96,3.65l-2.41,-0.04l-4.23,-1.23l-2.16,-2.63l-0.42,-0.14l-1.85,0.48l-0.84,-0.66l-3.32,-0.39l-4.72,-2.43l-8.13,1.39l-3.75,1.28l-3.9,2.3l-1.59,1.74l-1.69,0.86l-2.46,0.65l-4.48,-0.25l-9.84,-1.78l-2.85,0.5l-3.66,-0.38l-5.66,-1.11l-4.19,-0.34l-4.07,0.63l-0.45,-0.32l0.03,-0.95l2.02,-1.54l0.02,-1.12l-4.46,-2.72l-0.15,-0.7l-1.44,-0.93l-0.99,-1.35l0.08,-0.66l0.56,-0.68l2.38,-0.47l0.2,-0.47l-0.33,-0.8l-3.35,-1.74l-1.99,0.5l-2.12,1.94l-1.09,0.23l-0.9,-1.21l-1.59,-0.77l-3.62,-0.71l-0.58,-0.76l-1.0,-0.58l-2.02,-0.57l1.83,-0.2l0.48,-0.55l-0.18,-0.85l-2.12,-0.96l0.61,-0.23l0.99,-1.51l0.07,-1.02l-0.98,-0.87l-2.71,-0.8l-1.0,-0.8l-1.73,-0.54l-3.05,-2.42l-0.11,-4.44l-0.37,-0.46l-0.8,0.27Z", "name": "Romania"}, "EG": {"path": "M609.87,762.03l-0.4,0.47l0.36,0.35l1.86,0.2l4.18,-0.88l0.68,-0.86l0.41,-1.22l1.34,0.21l4.57,1.95l1.25,0.02l3.65,-1.22l0.28,0.16l-0.58,0.2l-0.2,0.94l-1.36,1.74l0.15,0.61l3.15,1.07l1.14,1.73l0.46,0.19l1.62,-0.52l1.02,-1.22l-0.36,-0.98l3.2,2.53l1.24,0.57l6.91,-1.41l0.75,1.03l0.42,0.13l2.43,-0.68l3.94,-0.0l3.28,-0.79l3.67,-1.82l3.73,10.29l0.56,2.28l1.74,3.76l3.23,10.3l-2.19,3.09l-1.61,7.52l-2.3,5.85l-0.63,4.98l-7.3,0.0l-2.91,-3.58l-2.45,-2.02l-2.2,-2.52l-0.57,-1.74l0.0,-1.27l-1.02,-3.01l-0.79,-1.47l-2.74,-3.1l-1.98,-3.4l-1.01,-4.1l-1.1,-2.6l-0.57,-0.19l-1.25,0.72l-0.01,1.35l-1.04,1.46l-0.66,1.75l0.5,1.71l2.32,2.28l0.41,0.85l0.5,1.97l-0.08,2.74l0.46,1.22l1.67,2.04l1.59,3.31l1.67,1.79l2.45,3.46l2.38,2.37l-112.97,0.0l-0.01,-17.03l-1.55,-5.75l-0.85,-4.71l-1.33,-4.48l2.32,-3.72l1.16,-3.39l0.16,-1.61l-1.3,-4.23l-0.32,-3.87l3.51,-4.31l1.07,1.6l2.12,0.31l6.98,-1.6l18.18,3.6l3.99,2.48l1.2,0.33l2.7,-0.05l1.96,1.45l7.35,0.7l3.87,1.57l2.22,1.27l1.56,0.45l2.89,-0.56l2.11,-0.94l6.77,-4.46l1.48,-0.52l2.32,0.1l2.52,-2.99l2.07,-0.2ZM628.36,761.36l0.23,0.13l0.28,0.29l-0.51,-0.42Z", "name": "Egypt"}, "PL": {"path": "M388.82,391.65l2.24,0.2l4.47,-1.73l7.73,-2.25l8.25,-2.11l3.89,-0.68l5.14,-4.93l4.3,-0.78l5.14,-2.5l7.81,-1.62l3.25,-0.36l3.11,-0.04l2.2,0.99l-0.57,-0.04l-0.39,0.57l2.04,4.34l1.16,1.6l2.4,1.27l1.99,0.42l5.96,-0.69l2.68,-1.3l8.1,0.66l26.53,1.14l7.63,0.18l1.39,-0.84l1.75,0.49l1.01,1.2l3.11,1.14l2.16,1.67l0.33,1.04l-0.04,2.27l1.64,6.65l2.59,6.1l1.31,4.4l0.39,3.76l-0.18,1.9l-0.61,0.58l-4.87,2.03l-1.0,0.68l-2.88,3.32l-0.47,1.1l0.51,0.98l3.5,1.57l1.84,1.18l0.6,0.91l-0.02,1.06l-0.57,1.62l0.2,1.31l-1.02,1.69l-0.08,2.01l1.6,3.04l0.13,2.59l2.66,3.25l1.67,3.34l1.47,1.21l-1.1,0.52l-0.48,0.6l1.51,3.27l-0.05,1.28l-1.46,1.98l-3.56,0.67l-4.08,3.59l-5.07,4.89l-5.27,6.39l1.05,4.5l-0.35,2.22l1.95,1.75l-0.24,0.4l-2.87,-0.93l-1.5,-0.09l-5.92,-2.16l-0.66,-1.44l-1.17,-0.92l-3.6,-1.28l-3.94,-0.3l-3.66,0.18l-1.34,1.46l-1.49,0.35l-1.83,-0.95l-1.53,-0.38l-3.51,0.1l-3.0,1.33l-0.84,0.92l-0.53,1.22l-1.56,-0.57l-1.81,0.42l0.34,-0.9l-0.2,-1.86l-0.8,-0.59l-1.17,-0.23l-2.68,-3.39l-0.49,0.01l-2.67,1.6l-1.25,1.79l-1.9,0.05l-0.36,-1.49l-1.44,-0.45l-0.45,-1.76l-2.79,-2.46l-0.56,-2.25l-0.76,-0.46l-2.27,-0.48l-0.66,0.22l-3.68,-2.08l-0.89,0.68l-1.67,0.27l-1.96,-2.02l-0.77,-0.32l-0.17,-0.17l1.21,-0.48l0.56,-0.84l-0.17,-1.46l-0.42,-0.42l-2.29,0.71l-1.7,0.16l-3.57,-2.17l-3.73,-0.88l-0.39,0.17l-0.17,0.62l1.62,2.71l-1.84,0.81l-1.61,1.27l-0.79,0.19l-3.92,-4.51l-1.55,-0.77l0.71,-0.73l1.08,-0.38l0.91,-1.37l-0.16,-0.72l-1.83,-1.3l-3.84,0.66l-0.82,-0.97l-2.85,-1.21l-5.01,-1.25l-0.91,-1.11l-0.5,-1.57l-3.63,-1.01l-0.61,0.61l0.01,1.78l-1.34,0.36l1.82,-3.65l0.72,-3.12l-1.56,-3.89l-2.47,-1.15l0.28,-1.67l-1.8,-3.5l0.94,-1.3l1.05,-3.19l-0.67,-0.85l0.02,-1.7l-0.34,-0.77l-0.97,-0.65l-0.68,-1.21l0.8,-3.26l-1.53,-2.24l-3.49,-2.48l-1.53,-1.58l0.1,-0.7l0.63,-0.77l1.41,-0.89l1.02,-1.45l0.65,-1.92l0.03,-1.69l-1.56,-5.01l-0.4,-2.5l3.7,1.43l0.56,-0.46l-0.4,-1.21l0.07,-2.12l-0.31,-0.36l-4.43,-0.86l-0.11,-0.47ZM448.78,377.06l0.62,0.32l-0.19,-0.07l-0.43,-0.25Z", "name": "Poland"}, "LY": {"path": "M352.28,736.51l1.65,0.75l2.05,0.37l6.36,3.56l6.46,0.88l7.16,-1.7l3.37,1.34l4.08,0.5l4.27,1.22l4.89,3.01l8.86,1.78l1.1,1.07l1.17,2.15l0.07,2.85l1.81,4.74l3.01,3.64l1.77,1.01l3.94,1.44l8.99,0.76l7.63,1.97l6.45,2.27l1.66,1.15l3.19,1.09l6.5,5.38l3.61,1.86l2.66,0.4l2.5,-0.36l4.04,-1.87l1.72,-1.14l4.14,-4.72l1.38,-2.5l0.57,-1.79l-0.12,-1.89l-0.52,-1.66l-1.16,-1.71l-0.76,-2.08l-0.46,-3.8l0.61,-2.61l0.74,-1.56l1.18,-1.61l3.32,-3.14l3.34,-2.22l5.87,-2.89l3.38,-0.03l1.52,-0.33l2.91,-2.08l0.96,-0.07l1.66,0.51l4.65,-0.14l11.92,4.4l0.47,2.26l-0.14,2.11l2.62,1.84l6.88,0.82l4.57,2.25l4.74,0.19l2.76,-0.29l2.53,0.46l0.86,0.4l0.91,0.95l1.52,3.09l-3.92,4.91l0.34,4.11l1.3,4.23l-0.16,1.35l-1.1,3.18l-2.4,4.04l3.75,15.06l0.0,16.92l-203.8,0.0l-0.63,-7.82l0.36,-6.03l-0.51,-3.13l-2.26,-6.85l-4.29,-6.8l7.67,-3.9l4.42,-5.99l0.54,-1.22l0.04,-1.35l-1.9,-7.71l2.02,-3.07l2.73,-0.78l0.97,-1.07l0.88,-1.85l2.05,-1.28l0.8,-0.93l9.29,-5.15l0.42,-0.9l0.01,-0.96l-1.08,-1.87l0.07,-3.7l0.56,-3.73Z", "name": "Libya"}, "-99": {"path": "M640.16,706.11l1.44,-0.49l0.63,-1.5l0.18,-1.4l4.59,0.67l4.13,-0.2l6.23,-1.86l1.81,-1.12l3.09,-1.32l-6.88,4.52l-0.62,1.84l0.66,1.39l-1.1,-0.15l-0.89,0.62l-1.5,0.43l-1.88,-0.3l-0.56,0.28l-0.14,-1.08l-1.09,-1.05l-2.7,-0.2l-3.88,1.29l-1.53,-0.37Z", "name": "N. Cyprus"}, "CH": {"path": "M320.32,503.5l0.93,1.21l2.73,1.44l1.42,0.09l0.68,0.53l-1.86,4.75l-0.08,1.49l0.52,0.93l1.73,0.08l2.8,0.77l0.53,1.22l3.54,1.5l1.01,-0.27l2.11,-1.92l0.51,0.2l0.41,1.32l-0.74,3.43l0.56,0.96l-0.02,0.64l-1.64,-0.23l-1.29,-0.99l-1.55,0.38l-0.6,1.17l-0.22,1.86l0.55,0.62l0.74,2.51l-0.69,0.02l-1.59,-2.16l-0.9,-0.09l-3.29,1.2l-1.2,-0.13l-0.52,-0.58l-0.68,-2.13l-0.42,-0.32l-1.84,-0.17l-0.8,0.69l-0.12,3.08l-3.33,4.56l-0.07,0.81l0.58,1.67l-0.72,0.36l-0.75,-1.35l-1.21,-1.09l0.49,-0.81l-0.08,-0.63l-2.58,-0.79l-2.32,-2.15l-0.24,-2.99l-0.6,-0.57l-0.93,0.09l-1.91,1.78l-1.9,1.25l-0.22,0.68l0.55,1.27l-1.71,2.33l-2.5,1.44l-3.29,-0.92l-3.01,1.12l-2.55,0.51l-0.83,-0.33l-1.25,-1.79l-2.34,-2.36l0.54,-1.66l-0.64,-1.73l0.1,-0.55l-0.58,-0.62l-2.43,-0.37l-2.1,0.11l-1.58,0.66l-1.5,1.41l0.49,1.29l-0.73,0.73l-1.4,0.71l-1.05,0.03l-0.01,-0.52l1.68,-1.25l0.38,-1.73l-0.81,-1.03l1.23,-2.7l3.3,-2.41l0.66,-3.29l2.8,-1.32l3.98,-4.25l0.71,-1.15l-0.34,-0.8l-0.94,-0.37l0.69,-0.76l1.0,-0.54l0.9,-0.01l0.97,0.98l2.09,-0.03l1.04,-0.38l1.17,-1.65l1.37,-0.65l1.08,0.36l3.1,0.1l2.31,-0.21l1.45,-0.53l3.47,0.18l1.83,-0.89l0.01,-0.53l-0.38,-0.39l-1.79,-0.1l0.3,-0.51l1.54,-0.64l2.09,1.29l1.18,-0.13l0.95,0.88l3.85,-0.25Z", "name": "Switzerland"}, "GR": {"path": "M572.83,693.59l-0.79,0.26l-0.27,-0.39l0.51,-1.56l-0.52,-1.53l2.47,-2.51l3.69,-1.26l-1.12,2.79l-1.0,1.2l0.08,0.93l-1.45,0.33l-1.59,1.75ZM572.72,683.64l0.3,-0.19l-0.05,0.46l-0.26,-0.27ZM562.23,680.49l2.44,-1.19l0.78,0.05l-1.92,1.05l-1.31,0.09ZM563.43,698.44l0.89,2.16l-0.83,0.63l0.1,-1.01l-0.52,-1.14l0.37,-0.63ZM556.67,665.86l1.58,-0.77l0.97,-0.02l2.63,0.58l0.06,0.28l-2.4,0.93l-1.62,-0.93l-1.22,-0.07ZM561.19,677.08l0.54,0.48l-0.03,0.04l-0.63,0.1l0.12,-0.62ZM553.23,640.86l-0.05,1.13l1.82,1.52l0.64,1.18l-0.8,-0.3l-0.49,0.49l0.43,0.99l-0.37,0.12l-3.88,-0.79l-0.36,-0.44l1.98,-1.69l-0.34,-0.63l-1.6,0.18l-1.23,1.37l-1.92,-0.59l-0.59,-0.58l0.65,-1.01l1.36,0.04l0.99,-0.34l1.05,-0.45l0.25,-0.65l1.92,-0.12l0.56,0.56ZM468.86,635.88l0.8,0.1l0.84,-0.47l0.47,-0.56l0.3,-1.23l0.8,-0.02l0.42,-0.51l-0.08,-0.84l-0.89,-1.73l1.18,-1.04l2.5,-0.46l0.86,-0.63l2.04,-5.23l1.84,-0.75l0.87,-1.26l0.46,-1.74l-1.01,-1.95l0.07,-0.75l4.51,-0.26l1.17,-0.64l2.44,0.55l2.7,-1.28l2.12,-2.57l0.71,-0.31l2.56,-0.43l4.2,0.63l3.18,-0.98l0.81,-2.46l4.87,0.17l1.31,-1.02l5.29,-0.03l3.3,-1.1l1.87,-0.11l0.72,-1.05l4.18,0.07l1.53,-0.49l1.01,1.67l2.49,1.47l1.25,-0.53l1.81,0.43l3.69,1.97l7.18,-1.39l1.97,0.27l2.95,-1.23l0.46,-1.18l-0.61,-2.88l-0.57,-0.89l0.35,-0.54l1.03,-0.24l2.67,0.72l2.17,1.52l0.5,2.83l-0.19,0.47l-0.81,0.19l-2.78,1.68l-0.26,1.9l0.38,2.25l-3.15,3.72l-0.55,0.18l-0.34,-0.49l-2.24,-1.25l-4.81,-0.7l-2.28,-0.87l-1.1,0.12l-2.16,-0.96l-1.44,0.48l-2.75,1.7l-1.32,-0.16l-1.58,-1.01l-1.46,-0.22l-1.38,0.65l-1.97,1.99l-1.87,0.91l-1.79,-0.37l-2.48,0.01l-0.39,0.31l-0.22,1.44l1.67,1.98l-0.49,1.12l0.47,1.01l0.97,0.38l-1.37,-0.1l-1.29,0.61l-0.32,1.0l1.52,1.65l1.87,1.37l0.37,1.18l-0.35,0.48l-1.18,-0.7l-2.26,-3.15l-3.47,-0.8l-0.39,0.14l-0.6,1.06l0.63,1.7l0.61,0.86l2.44,1.6l-2.92,-0.93l-0.79,-1.39l-0.43,-2.26l-5.48,-2.86l-0.45,-1.07l0.86,-1.57l-0.43,-0.54l-1.68,0.27l-2.63,1.63l0.16,2.07l-0.97,3.9l0.31,1.48l3.34,3.89l1.1,2.67l0.86,1.13l1.73,1.19l1.71,2.06l0.7,1.04l0.44,1.48l-1.16,0.88l-0.56,0.03l0.43,-1.37l-0.31,-1.06l-2.29,-1.16l-1.37,0.42l-1.12,0.76l-0.14,0.5l1.35,2.35l0.34,1.2l0.45,0.29l-2.35,1.25l-2.75,0.18l-0.61,0.48l0.16,0.67l1.59,0.3l1.19,0.76l3.26,0.9l1.74,1.2l1.37,0.09l1.7,2.14l2.56,0.54l1.7,2.19l2.01,0.42l1.63,0.73l0.65,1.85l0.5,5.04l-0.07,1.48l-0.27,0.28l-0.29,0.01l-1.2,-1.48l-4.0,-3.63l-1.32,-0.49l-1.27,0.69l-3.1,0.54l-1.91,0.86l-0.41,0.62l0.17,0.49l1.3,1.11l0.04,1.25l0.68,1.5l1.08,0.59l1.64,0.17l1.16,1.6l-3.97,1.5l-0.47,-0.26l-0.24,-1.31l-2.12,-1.2l-1.23,-0.26l-0.95,-0.77l-0.53,0.03l-0.67,0.67l0.43,2.7l1.21,1.71l2.79,6.7l0.16,1.11l-0.37,2.25l1.29,2.29l-1.47,-1.01l-1.96,-2.37l-0.69,-1.49l-1.16,-0.35l-1.89,0.44l-1.62,3.28l-0.04,1.39l-0.21,-0.11l-0.53,-0.43l-0.06,-2.97l-1.96,-2.81l-0.93,-0.41l-1.11,-1.87l-0.41,-0.16l-1.04,0.23l-0.97,0.71l-0.56,3.34l-1.67,-1.57l-2.02,-3.25l-0.05,-1.59l1.53,-1.91l-0.24,-1.36l-1.56,-2.52l-2.1,-1.55l-1.09,-0.44l-0.63,-1.66l-2.02,-1.46l2.41,-2.01l1.21,-2.48l1.73,0.55l1.48,-0.16l2.34,-2.39l1.5,0.09l3.85,2.04l4.27,1.21l2.03,1.0l1.29,1.07l1.7,0.38l0.46,-0.42l-0.23,-1.23l2.56,-0.15l0.74,-0.53l0.42,-1.05l-0.47,-0.67l-1.03,-0.49l-1.47,-0.29l-0.73,0.18l-1.18,-0.46l-5.54,-3.18l-0.57,0.13l-0.43,0.73l-0.7,0.36l-1.11,0.06l-3.71,-0.92l-2.14,0.71l-4.24,0.68l-1.88,-2.53l-0.6,0.34l-0.26,1.46l-1.28,0.35l-0.68,-0.45l-1.66,-4.24l-1.61,-1.92l-1.24,-0.53l-0.08,-0.76l0.07,-0.5l1.17,-0.16l2.36,0.85l0.88,-0.23l0.71,-0.78l-0.49,-1.82l-2.97,-0.34l-1.94,0.42l-0.66,-0.31l-3.29,-3.43l-2.27,-1.18l-1.42,-3.34l-1.01,-1.26ZM520.05,623.97l1.33,-0.04l2.3,1.21l1.04,1.36l-1.4,-1.3l-3.26,-1.24ZM552.69,684.22l-0.15,0.18l-0.36,-0.26l0.41,0.1l0.11,-0.02ZM553.58,683.62l0.03,-0.08l0.05,0.06l-0.07,0.03ZM548.5,668.67l0.95,-0.85l2.0,-0.19l-0.72,0.46l-2.23,0.57ZM517.64,698.89l0.47,1.17l1.82,0.46l1.71,-0.13l0.86,-0.88l0.55,-0.01l0.13,0.28l-0.96,0.59l0.02,0.55l1.04,0.63l0.84,-0.04l0.27,0.97l0.84,0.59l1.91,-0.04l3.69,-0.89l3.65,0.22l1.49,0.97l2.57,0.11l2.39,0.5l3.39,-0.62l-0.05,2.82l0.84,0.58l0.89,-0.12l0.87,-0.75l1.68,-0.51l1.83,0.0l1.35,-1.09l-0.21,1.45l-0.45,1.56l-0.8,0.3l-4.5,-0.1l-13.85,1.38l-0.4,-0.13l-0.14,-1.43l-0.43,-0.64l-3.48,-1.22l-7.91,-1.34l-2.54,0.18l-1.22,-0.27l-0.31,-0.42l-0.17,-1.69l0.27,-1.64l0.87,0.49l0.43,-0.08l0.58,-0.56l0.16,-1.18ZM546.98,657.64l0.83,-0.47l0.56,-1.18l-0.51,-1.11l-1.36,-1.35l-0.04,-0.53l1.74,-0.34l1.56,0.89l0.07,3.17l-0.61,0.53l-0.14,0.76l-0.95,0.65l-1.15,-1.02ZM543.3,622.98l-0.87,0.24l-0.94,-0.73l0.76,-0.25l1.05,0.74ZM541.67,677.54l-0.82,0.4l-0.9,-1.58l1.84,-1.63l0.35,0.34l-0.04,1.56l-0.42,0.91ZM540.58,686.4l0.09,0.29l-0.33,0.42l0.18,-0.35l0.05,-0.37ZM539.91,670.41l-0.74,0.06l0.03,-0.53l1.07,0.27l-0.36,0.21ZM535.7,630.46l1.88,-0.07l0.57,0.64l0.49,0.09l1.51,-1.03l-0.9,1.57l-0.18,1.09l-0.59,-0.12l-0.12,-0.88l-0.43,-0.38l-0.69,0.27l-0.36,0.76l-1.05,-0.22l-0.14,-1.72ZM539.48,682.06l-0.68,-0.65l-0.17,-0.27l0.96,0.71l-0.1,0.21ZM537.9,676.19l-0.77,0.85l-0.65,-0.29l0.4,-0.8l0.94,-0.5l0.09,0.74ZM535.78,667.62l1.65,0.25l0.14,0.17l-0.25,0.5l-0.45,-0.08l-1.09,-0.84ZM534.05,665.46l-0.12,0.31l-1.78,-1.57l-1.08,-1.14l-0.1,-0.51l0.58,-0.25l0.74,1.01l1.24,0.26l0.51,1.9ZM531.1,619.94l-1.25,0.41l-1.41,-0.87l0.01,-0.29l1.17,-1.42l0.97,0.08l0.69,0.95l-0.17,1.13ZM530.55,677.44l0.32,0.58l-0.13,0.1l-0.14,-0.26l-0.05,-0.41ZM527.82,646.84l0.51,0.29l0.25,0.92l-0.86,-0.53l0.1,-0.68ZM529.05,648.51l0.31,0.27l-0.26,0.07l-0.04,-0.34ZM506.57,648.07l3.08,-1.79l1.96,-0.47l1.2,1.04l0.73,1.64l0.92,0.78l4.77,2.0l2.99,0.27l1.17,1.85l-0.19,1.12l1.21,3.89l1.43,1.15l2.66,0.25l-0.01,1.43l-0.63,0.53l-1.01,-0.67l-0.75,-0.06l-1.88,-1.44l-0.34,-1.37l-2.27,-3.04l-3.75,-0.18l-1.21,-0.55l-0.6,-1.79l-4.9,-3.9l-3.13,-1.2l-1.45,0.5ZM526.08,681.87l0.47,0.25l-0.55,0.09l0.08,-0.33ZM527.2,682.01l0.36,-0.4l0.35,-0.09l0.0,0.38l-0.72,0.11ZM527.8,675.11l-0.52,-0.06l0.35,-0.53l0.24,0.11l-0.07,0.48ZM526.82,671.42l-0.28,-0.62l0.23,-0.28l0.32,0.46l-0.27,0.43ZM525.55,668.08l-0.29,0.25l0.39,-1.19l0.31,-0.03l-0.41,0.98ZM517.4,644.21l-0.6,-0.11l-0.2,-0.36l0.79,0.47ZM513.82,662.81l0.26,-0.51l0.33,0.09l-0.09,0.46l-0.5,-0.04ZM506.84,687.57l1.47,1.52l-0.51,0.97l-0.83,-0.27l-0.27,-0.47l0.14,-1.75ZM478.67,665.05l0.48,0.52l-1.16,0.88l-1.25,-0.99l-0.97,-1.4l0.5,-0.59l0.61,0.8l1.24,0.33l0.56,0.47ZM472.09,658.33l0.7,-1.67l0.81,0.42l0.52,-0.22l0.61,-1.26l0.25,1.94l1.11,0.64l1.09,1.41l-0.07,0.54l-1.85,-0.68l-0.97,0.24l-0.29,-1.09l-0.71,-0.87l-0.52,0.0l-0.69,0.6ZM475.93,654.68l0.08,0.08l-0.0,0.17l-0.08,-0.26ZM474.85,651.83l0.45,-1.92l0.83,-0.95l0.06,2.56l-0.21,0.26l-1.14,0.06ZM465.8,638.46l-0.15,-0.1l-1.04,-1.97l-2.07,-2.4l2.13,-0.65l0.9,0.56l-1.09,1.25l0.72,1.12l0.59,2.17Z", "name": "Greece"}, "RU": {"path": "M570.87,313.83l1.43,0.47l1.39,1.78l1.34,0.66l1.83,0.02l1.0,-1.42l-1.01,-2.64l-1.75,-1.83l-1.78,-0.92l-3.38,0.01l-0.29,-1.23l0.24,-0.8l2.93,-2.82l0.33,-0.92l-0.98,-8.5l-0.88,-1.41l0.98,-1.16l1.86,-4.41l1.59,-0.49l0.55,-0.74l1.26,-0.69l-0.24,-1.11l-1.43,-1.46l0.6,-1.35l-0.65,-3.34l0.42,-0.81l0.57,-0.06l1.12,1.2l2.03,0.6l1.21,-0.84l0.54,-1.72l0.56,-0.46l1.07,0.55l1.95,0.23l2.87,-0.46l2.71,-3.42l6.87,0.87l6.1,1.65l0.89,-0.77l0.29,-1.23l-0.19,-0.42l-2.6,-1.38l-1.43,-1.91l-2.04,-1.51l-2.27,-0.21l-2.74,0.52l-3.9,-0.3l-3.37,-2.77l-2.3,-0.91l-1.57,-2.16l0.84,0.47l0.58,-0.26l0.39,-2.49l-2.06,-1.74l-4.83,2.13l-3.8,0.52l7.26,-6.49l3.43,-2.16l1.07,-1.17l6.96,-4.74l3.25,-3.22l2.69,-2.13l11.83,-12.09l5.01,-4.12l3.4,-3.31l1.38,-1.87l3.44,-6.93l-0.01,-0.97l-0.42,-0.8l-2.34,-2.4l-2.18,-3.04l-2.82,-1.99l-7.5,-4.33l-5.46,-4.61l2.72,-1.21l3.99,-4.71l0.38,-1.46l-0.17,-2.72l-0.38,-0.89l-1.51,-1.2l-3.7,-1.76l-1.54,-3.22l-0.01,-0.49l1.82,-2.02l-0.21,-2.19l-0.75,-0.87l-3.83,-0.84l-0.98,-0.8l-1.23,-2.51l0.18,-1.22l2.39,-1.4l0.44,-1.18l-0.26,-1.49l-2.69,-0.77l1.34,-1.72l0.27,-3.16l1.19,-2.03l-0.08,-0.5l-1.02,-0.9l4.59,-0.92l0.39,-1.34l-0.21,-1.44l-2.56,-6.98l-3.14,-4.15l-2.8,-5.77l-2.33,-3.72l-2.67,-3.44l-0.31,-0.83l0.25,-1.56l2.06,-2.8l4.42,-5.18l5.0,-5.14l0.73,-3.16l-0.28,-0.7l-2.1,-1.49l-3.98,-4.02l-2.61,-3.2l-8.75,-2.93l-2.79,-6.72l0.1,-0.96l3.64,-5.42l0.41,-1.27l-0.18,-0.86l-1.04,-0.69l-3.45,-0.31l9.0,-3.31l0.82,-0.57l0.66,-0.76l2.29,-4.6l8.2,-2.29l1.33,-1.03l1.08,-1.72l0.48,-2.01l-0.34,-0.96l5.47,2.43l2.48,0.12l1.08,-0.25l0.77,-0.81l0.37,-1.19l-0.59,-3.8l1.82,0.26l5.42,1.9l1.54,-0.18l1.8,-0.72l1.58,-2.18l0.98,-0.31l1.48,0.49l0.45,-0.15l0.48,-1.01l-0.7,-2.16l5.04,1.88l2.43,1.53l5.01,1.29l0.69,0.55l-0.14,1.84l-0.82,0.45l-2.03,-0.09l-8.13,-1.55l-1.15,1.0l-0.01,0.6l1.05,0.93l2.13,0.95l0.58,1.64l0.41,0.27l3.45,-0.24l3.29,0.67l1.42,-0.18l-0.88,1.4l0.08,0.55l0.89,0.44l3.72,-1.43l1.59,-0.36l0.6,0.25l0.09,0.86l-0.58,1.41l-0.09,1.2l-1.07,2.55l-1.8,0.91l-0.74,1.6l0.43,0.15l2.6,-0.7l1.47,-0.8l2.68,-3.84l0.61,-0.4l7.23,-0.07l8.52,2.02l2.04,0.17l2.32,-0.23l1.51,-1.05l7.55,1.96l10.25,4.46l15.01,7.34l8.41,6.45l1.17,1.5l3.07,0.79l0.85,-0.48l1.45,0.4l10.1,5.94l3.44,0.31l0.41,-0.54l-0.6,-1.54l7.59,7.3l1.96,0.98l5.8,1.73l1.23,5.96l0.98,1.39l0.0,2.6l1.91,1.45l1.12,0.21l-0.05,1.63l-1.04,4.63l-1.11,1.9l-8.96,8.53l-5.59,3.26l-10.95,3.75l-8.54,1.4l-3.42,0.1l-6.68,-0.69l-3.62,-0.75l-4.47,-2.12l-4.28,-1.09l-2.98,-0.48l-5.34,-0.2l-11.58,-2.1l-1.96,-0.72l-7.27,-4.11l-3.2,1.12l-1.46,0.18l-0.77,-0.94l0.53,-0.72l-0.24,-0.58l-4.13,-1.18l-3.42,-0.09l-4.01,-1.75l-1.59,0.43l-4.37,-1.76l-1.92,-1.4l-1.89,-2.33l0.92,-1.16l-0.19,-0.68l-7.25,-1.51l-6.83,-0.2l-0.4,0.29l0.18,0.46l1.19,0.72l3.04,0.42l3.72,2.28l-0.44,1.72l0.17,0.43l5.17,3.72l0.29,0.74l4.17,0.93l0.44,1.28l-0.47,0.94l0.67,1.15l5.48,1.85l-0.52,0.8l-1.44,0.78l-1.53,0.38l-0.3,0.36l0.24,0.4l0.93,0.34l1.97,-0.12l7.28,2.12l3.8,2.13l3.88,3.89l1.2,1.83l-0.12,1.88l-2.15,5.67l-0.9,1.09l-1.82,1.32l-0.1,0.55l3.57,5.01l1.76,3.93l0.38,3.97l1.24,0.96l-0.89,1.1l0.15,3.2l2.34,2.85l3.6,1.82l2.16,0.34l2.78,-0.65l1.94,0.86l4.56,3.11l2.06,3.28l0.94,0.78l8.4,2.09l5.46,2.01l1.19,0.01l2.56,-1.69l4.64,-1.31l1.39,-1.66l-0.02,-1.7l-1.16,-2.59l-0.48,-2.67l-2.93,-1.7l-4.4,0.47l-1.78,-0.09l-1.31,-0.61l-1.88,-1.7l-3.65,-4.26l-1.98,-1.45l-0.57,-0.81l-0.62,-1.12l0.06,-1.49l1.43,-0.01l1.8,-1.14l1.41,-4.08l3.1,-0.42l5.12,1.85l6.46,5.01l1.55,0.59l3.93,-0.02l0.42,0.59l1.34,0.79l7.01,1.73l6.92,3.12l2.77,-0.11l1.55,-2.62l2.63,-1.63l1.82,-0.27l2.69,0.62l0.88,-0.63l0.09,-0.41l-0.94,-2.58l-1.3,-2.3l-1.94,-1.52l-4.58,-6.2l-0.62,-2.02l0.82,-3.03l6.85,-3.4l2.55,-2.09l2.37,-2.62l1.0,-0.49l4.11,-0.76l5.49,-2.34l4.13,-3.05l4.13,-4.68l1.56,-1.1l1.19,0.1l1.76,0.69l2.2,1.39l2.77,0.25l5.71,-0.1l4.17,2.06l1.11,1.24l-1.2,1.5l-0.2,1.33l0.57,0.4l2.45,-0.74l1.29,0.32l3.45,2.95l0.63,-0.2l0.57,-2.39l-0.63,-2.77l1.6,-3.71l1.3,-1.7l2.33,-4.3l-0.65,-3.03l-0.11,-3.29l-0.41,-1.65l-1.66,-2.3l-2.94,-1.55l-2.91,-0.5l-0.81,-1.24l0.16,-1.54l0.8,-2.46l2.44,-5.35l2.56,-7.53l-0.26,-6.2l-0.66,-2.0l-10.32,-6.58l-0.67,-0.91l1.25,-0.06l7.85,3.09l1.79,0.17l12.18,-0.85l5.9,0.73l4.89,1.52l3.54,4.34l7.01,7.38l0.08,2.31l-3.17,0.52l-3.47,0.13l-8.91,1.48l-7.99,6.48l-0.63,1.92l0.69,1.65l2.75,1.54l5.6,2.22l2.51,4.37l1.93,2.37l1.51,0.92l4.23,0.24l2.87,0.92l0.74,-0.39l1.85,-0.15l10.9,-2.37l2.25,-1.08l0.94,-1.88l0.79,-5.21l1.88,-4.09l-0.4,-2.84l10.14,-2.46l2.36,0.31l0.41,-0.21l0.58,-1.57l-2.2,-2.98l0.22,-0.14l2.59,0.9l2.98,-0.41l10.5,-4.52l4.11,-2.58l2.47,-1.02l3.83,-2.31l1.8,-0.72l3.25,-0.32l3.49,-0.92l3.83,-1.74l4.65,-1.33l0.0,343.83l-5.0,3.15l-2.79,0.22l-0.91,-0.3l-0.4,-1.62l-1.6,-1.18l-5.16,-1.54l-7.64,7.94l-4.24,1.65l-1.51,1.17l-4.49,0.95l-1.08,1.15l-1.3,2.99l-6.75,4.33l-2.52,-0.17l-0.24,0.56l0.52,1.05l0.47,3.49l1.89,5.87l-0.94,1.21l-2.08,0.92l-2.09,0.76l-1.14,-0.44l-1.98,-1.88l-4.5,-5.53l-1.99,-1.74l-1.54,-0.7l-1.71,0.24l-2.52,2.45l-0.46,1.16l0.01,2.68l-0.53,0.85l-3.43,2.59l-1.52,2.95l-1.19,5.85l0.75,1.37l2.21,1.8l0.14,0.67l-0.82,1.69l-1.51,1.24l-2.03,2.86l-1.32,4.14l0.88,3.27l2.6,1.54l2.02,0.68l0.7,0.77l0.68,1.68l-0.31,3.18l1.51,2.74l1.32,0.99l2.86,-1.0l8.28,0.98l0.64,0.52l5.19,6.62l5.41,9.18l-0.07,0.47l-0.6,0.23l-1.3,-0.08l-2.32,-0.94l-0.95,0.22l-0.68,0.58l-0.24,0.79l0.58,1.74l1.09,0.82l8.3,3.97l-1.17,0.12l-0.85,1.64l-3.46,1.42l-1.75,0.26l-0.28,0.4l0.06,1.05l0.72,1.78l-1.59,-0.69l-1.52,0.0l-3.26,2.71l-1.24,0.64l-4.37,1.23l-1.93,-0.31l-0.69,0.5l-0.24,0.7l-1.63,-1.24l-0.63,0.14l-0.13,0.55l0.77,1.23l0.06,1.03l-0.46,1.05l-1.11,0.78l-0.29,2.07l-0.51,1.21l-3.19,5.2l-0.32,1.09l-0.53,-0.63l-0.7,0.13l-0.55,1.41l-2.69,2.07l-0.66,1.85l0.07,1.95l0.52,0.69l3.73,1.36l2.74,2.45l0.98,1.4l1.61,5.23l0.45,3.69l0.36,0.35l0.44,-0.38l-0.44,2.79l0.31,2.69l-0.61,3.26l0.95,1.19l1.42,1.04l0.91,1.38l0.35,2.27l1.29,1.12l3.45,4.19l4.07,6.46l2.36,1.67l-2.22,3.58l-1.16,0.84l-3.41,1.53l-2.54,3.83l-0.73,0.17l-3.54,-0.46l-3.27,-1.25l-0.71,-2.14l-0.93,-1.11l-1.79,-1.16l-3.7,-3.75l-1.09,-0.3l-1.36,0.45l-0.47,-1.11l-1.36,-0.31l-2.91,-1.58l-3.5,-0.75l-1.44,-1.19l-2.67,-1.46l1.22,-4.06l-0.37,-0.73l-2.15,-0.75l-2.89,0.08l-2.55,-2.35l-4.21,-1.29l-1.21,1.86l-1.44,-1.49l-2.09,-0.29l-2.56,0.78l-4.99,2.2l-1.57,-0.07l-0.84,-0.44l0.74,-1.27l-0.02,-0.68l-0.38,-0.45l-3.09,-1.62l-6.25,-2.33l-1.05,-0.86l-0.31,-0.83l-3.17,-1.3l-2.67,0.21l-2.07,-1.13l-1.96,-0.06l-3.09,0.61l-6.19,-0.47l-2.91,-1.82l-3.84,-0.73l-5.84,-2.61l-1.9,0.32l-5.11,-0.93l-1.09,0.42l-1.26,1.88l-5.83,-4.81l-2.57,-2.83l-8.28,-6.48l-7.27,-2.21l-4.41,-4.59l-2.32,0.5l-2.62,-0.52l-1.77,-1.42l-0.9,-1.9l-1.27,-1.31l-3.6,-1.66l-3.83,-0.92l-0.2,-0.36l3.1,-1.0l1.03,-0.69l-0.05,-0.69l-2.45,-1.0l1.22,-0.52l3.0,1.97l1.61,0.58l1.01,-0.66l5.07,-1.09l0.64,-1.13l0.01,-1.14l-0.83,-0.39l0.02,-0.79l0.7,-1.37l2.37,-2.55l1.2,-3.3l0.78,-0.55l0.38,0.24l0.1,1.27l0.32,0.31l0.41,-0.18l1.33,-2.52l3.97,0.07l0.24,-0.67l-2.44,-2.6l-3.21,-2.58l-1.55,0.09l-0.65,-0.3l-1.32,-1.99l-0.39,-1.18l2.34,0.25l3.36,-1.37l3.63,0.63l0.44,-0.46l-0.69,-2.27l4.52,-1.44l4.36,-1.98l2.18,-0.55l0.33,-1.4l-0.68,-1.65l-1.0,-1.39l-2.33,-0.06l-1.52,1.68l-3.32,0.51l-0.54,-0.04l1.79,-0.88l0.38,-0.89l-0.41,-0.19l-2.5,0.39l-1.4,1.14l-3.13,1.23l-0.09,-0.81l0.81,-0.93l0.26,-0.87l-1.06,-0.72l0.71,-1.43l0.38,-2.46l0.91,-0.72l1.92,-0.23l1.84,-0.8l1.15,-0.92l1.32,-2.0l0.85,-0.25l6.59,0.37l4.7,-0.19l0.87,-0.89l0.05,-1.5l1.42,-3.39l0.99,-1.16l0.05,-0.83l-1.48,-0.71l0.56,-0.88l-0.75,-3.24l-1.15,-0.75l-1.32,-0.29l0.66,-2.06l0.97,-0.98l1.32,0.21l1.24,-0.24l0.55,-0.79l-0.46,-0.75l-3.05,-1.04l-0.67,-1.1l2.55,-0.9l2.44,-2.38l0.59,-0.98l0.29,-2.27l-0.93,-1.24l0.0,-0.89l0.48,-1.04l-0.19,-0.6l-1.1,-0.62l-2.1,0.5l-1.11,-0.07l-4.22,-2.69l-2.18,-0.27l-1.68,-1.95l-2.29,0.57l-1.31,-0.1l-3.55,-2.2l-2.76,-0.26l-2.75,-1.57l-0.96,0.15l-0.52,0.67l-0.27,1.26l-1.02,0.25l-4.43,-3.2l-1.26,-1.76l-0.43,-1.51l-2.37,-2.21l-1.25,-0.09l-2.82,1.16l-5.06,1.07l-1.8,1.38l-1.54,-1.19l-1.77,-0.29l-0.86,0.24l-2.57,-2.23l-3.27,-0.48l-2.82,1.54l-0.78,-0.28l-0.55,-1.12l-0.87,-0.5l-0.93,-1.26l-0.22,-1.05l0.59,-1.13l0.05,-1.0l-1.71,-4.08l0.2,-1.4l-0.59,-0.56l-1.82,-0.2l-1.28,-2.53l-1.34,-0.09l-3.09,0.57l-3.48,-1.19l-3.31,-0.13l0.6,-0.53l0.05,-0.87l-0.67,-0.61l-0.33,-3.21l-1.12,-1.87l3.23,-0.64l0.55,-0.61l0.0,-0.97l-3.92,-3.8l-1.29,-3.11l-1.31,-1.82l-1.46,-1.24l-1.22,-0.58l-3.97,0.16l-2.31,-0.36l-1.88,0.24l-3.41,1.53l-1.13,0.06l-3.96,-1.0l-1.1,0.01l-1.26,0.77l-1.12,2.87l-1.95,1.02l-1.83,0.07l-2.57,-0.94l-1.01,-2.05l-1.46,-1.55l0.1,-3.65l0.34,-0.73l-1.14,-1.49l-0.07,-0.9l0.58,-0.74l-0.03,-0.72l-3.96,-4.55l1.74,-2.86l3.22,-0.09l0.87,0.25l1.6,1.49l4.17,0.24l3.89,-2.22l0.66,-1.14l2.95,-1.12l0.33,-0.34l-0.01,-1.77l-0.42,-0.68l-2.85,-1.77l-0.46,-0.97l0.32,-0.71l-0.24,-1.09l-3.51,-1.67l-5.53,-0.36l0.81,-2.03l0.17,-1.22l-0.27,-0.89l-0.58,-0.55l-5.16,-2.56l-1.32,-1.67l-0.7,-1.81l-0.87,-1.23l-1.36,-0.72l0.98,-1.81l-0.1,-0.74l-4.72,-2.93l0.42,-2.0l2.05,-2.77l-0.32,-1.87l-1.9,-2.6l0.05,-0.6l1.12,-1.46l0.08,-3.3l-0.53,-0.83l-2.18,-0.5l-1.25,-0.82l-2.4,-2.33l-3.18,-1.13l-4.11,0.02l-2.57,1.41l-1.63,0.4l-1.8,1.13l-1.34,-1.48l0.57,-1.78l-0.08,-0.77l-0.47,-0.67l-4.05,-1.61l-2.03,0.38l-1.98,1.08l-0.45,-0.15l-1.32,-1.91l-1.12,-0.71l-2.41,0.01l-1.23,0.67l-1.72,-1.42l0.66,-2.19l-1.34,-5.48l-1.33,-1.21l-0.23,-0.85l-1.3,-1.81l-0.13,-1.47l-0.53,-0.78l-0.98,-0.41l-1.57,0.36l0.75,-1.97l0.11,-1.54l0.56,-1.41l0.95,-1.24l0.0,-2.12l-0.62,-0.74l-3.35,-2.1l-0.53,-1.63l-1.92,-0.42l0.56,-2.1l1.17,-1.07l0.68,-1.41l2.69,-0.77l0.62,-0.66l-0.15,-0.75l-1.29,-1.03l-0.25,-0.99ZM839.77,569.8l0.52,-1.77l0.2,-0.15l-0.05,0.27l-0.67,1.65ZM899.6,16.61l-2.0,-0.34l-2.83,-1.88l-1.01,-1.83l-1.09,-4.31l0.19,-2.63l1.79,-3.28l2.86,-1.69l0.94,-0.24l1.14,0.26l0.0,15.94ZM876.14,73.02l0.21,2.01l-0.66,0.74l-0.24,0.08l-0.33,-1.19l-0.64,-0.65l-0.52,-0.04l-2.34,1.72l-1.18,1.96l-2.78,2.6l-9.54,2.71l-3.15,0.22l-2.87,-1.58l-1.59,-3.11l-0.47,-2.2l0.54,-5.26l1.18,-1.69l2.86,-2.1l2.82,-1.37l1.38,-0.33l3.54,-0.05l12.57,5.98l1.2,1.55ZM845.18,538.87l0.05,0.13l-0.04,-0.11l-0.0,-0.02ZM773.82,130.4l-2.37,-0.89l-0.14,-0.5l1.66,0.08l0.85,1.31ZM680.69,164.88l0.44,1.89l-0.38,0.81l0.1,0.76l-0.3,0.19l-1.11,-1.48l-0.96,-0.18l-0.66,-0.6l-0.26,-0.83l0.78,0.0l1.48,-0.81l0.85,0.25ZM462.42,381.37l1.54,-1.19l1.4,-1.73l1.15,-2.18l0.41,-3.11l1.51,-0.56l4.02,0.06l1.67,-0.82l1.32,-1.22l-0.78,0.82l0.13,0.64l1.12,0.5l1.36,0.19l1.61,0.71l1.47,0.13l2.74,-0.62l0.3,-0.33l0.62,-5.86l1.56,-0.18l2.23,1.46l4.3,1.78l2.74,0.72l6.55,0.09l0.88,1.63l2.48,1.71l-1.92,5.56l-0.04,1.46l0.9,2.13l-41.29,-1.79Z", "name": "Russia"}, "IQ": {"path": "M769.91,675.97l1.17,-0.32l2.43,-1.88l1.62,-1.8l2.14,0.7l2.18,-0.64l5.65,1.89l2.23,0.28l2.17,0.06l2.52,-1.4l1.11,0.16l0.83,0.64l0.18,0.58l0.15,3.05l0.46,0.58l0.73,0.22l4.54,-3.07l1.44,0.14l0.7,1.33l1.11,4.09l1.9,1.66l0.44,3.45l0.92,1.14l1.3,0.24l0.34,0.47l1.87,5.47l1.7,0.13l0.93,0.43l1.05,0.7l1.02,1.36l0.91,0.37l2.36,-0.19l2.95,0.22l1.02,0.52l-3.02,1.16l-0.94,2.4l0.1,1.03l1.81,2.35l0.53,1.79l-0.2,0.76l-2.83,1.51l-3.29,3.52l-0.49,3.31l-1.56,-0.11l-0.45,0.37l-0.83,2.43l1.39,3.18l-0.16,0.8l-1.75,2.72l0.01,0.42l1.1,0.79l3.52,4.81l1.93,-0.05l-0.15,1.37l0.29,0.52l1.3,0.3l0.44,0.68l1.64,2.7l-0.87,2.07l0.18,1.76l0.37,0.47l3.71,0.52l2.55,1.41l7.44,5.52l2.38,-0.03l0.92,0.6l1.86,4.01l1.15,1.05l3.08,4.2l-1.97,5.7l-0.02,6.07l0.38,0.4l4.1,0.17l0.06,7.42l1.89,1.01l1.11,1.43l1.41,0.53l0.78,1.13l0.01,1.25l0.51,1.15l0.94,0.8l-1.53,-0.15l-2.99,-1.26l-1.09,-0.01l-1.4,0.7l-3.84,-1.51l-4.69,0.24l-1.57,0.59l-1.64,1.31l-2.86,6.32l-1.82,2.77l-3.1,3.57l-2.18,0.44l-22.08,-1.91l-25.0,-19.18l-10.65,-8.75l-23.1,-12.86l-15.84,-2.68l1.37,-1.24l0.11,-0.44l-0.61,-1.61l-0.45,-0.25l-2.45,0.58l-0.56,-1.75l0.64,-0.19l0.27,-0.49l-3.76,-12.97l25.61,-14.41l3.27,-0.82l0.88,-0.74l2.94,-5.45l0.29,-7.95l0.42,-2.08l1.45,-3.37l-0.04,-2.77l-1.42,-3.99l0.21,-2.94l0.44,-1.63l1.46,-1.83l5.1,-1.34l4.02,-3.57l3.6,-3.65l0.22,-0.71Z", "name": "Iraq"}, "IS": {"path": "M0.4,178.74l0.0,-1.19l0.28,0.28l-0.28,0.91ZM0.4,176.09l0.0,-19.93l2.4,-1.1l1.7,-0.3l3.0,0.56l1.13,0.59l0.69,1.09l0.47,0.16l1.25,-0.35l0.48,0.46l0.02,0.45l-0.66,1.81l-1.49,0.63l-0.34,0.8l1.16,1.47l0.98,0.15l-0.05,0.56l-1.32,0.87l0.08,0.68l2.26,1.05l0.04,1.17l-0.86,0.89l-1.6,0.06l-1.18,0.49l-0.2,0.53l0.29,1.5l-0.28,1.01l-1.25,1.61l-2.28,1.39l-2.02,-0.19l-1.14,-0.44l-0.54,0.41l0.11,1.26l-0.87,0.65ZM0.4,155.26l0.0,-3.68l0.83,-0.08l0.79,2.01l-1.63,1.75Z", "name": "Iceland"}, "AL": {"path": "M458.49,624.1l0.68,0.32l0.52,-0.18l0.25,-0.48l-0.24,-1.33l-1.36,-2.97l1.67,-4.37l-0.07,-2.75l0.32,-2.07l-0.52,-3.06l0.7,-2.04l1.06,-1.29l0.08,-2.58l-1.64,-1.44l-1.53,-0.24l0.23,-2.81l0.98,0.15l0.61,-0.73l-1.53,-3.1l4.14,-5.38l0.14,1.72l0.8,0.94l1.32,-0.11l2.49,-1.0l2.19,3.21l2.39,1.18l1.42,1.52l0.76,3.92l-1.02,3.37l0.14,2.01l-0.9,1.2l0.57,2.03l-0.01,2.05l1.13,2.43l1.16,1.07l0.79,2.18l0.74,0.47l2.31,-0.02l0.26,0.53l-0.07,1.35l0.98,2.2l-0.97,1.82l-2.02,0.9l-1.22,2.5l-0.81,2.73l-0.5,0.4l-2.65,0.53l-1.34,1.13l-0.18,0.98l0.92,1.95l-0.95,0.1l-0.49,1.55l-0.64,0.55l-2.3,-0.88l-0.5,-2.33l-1.56,-2.79l-5.08,-2.79l-1.08,-1.11l-0.61,-1.17Z", "name": "Albania"}, "IT": {"path": "M306.09,527.3l1.78,-1.15l1.79,-1.7l0.38,-0.01l0.0,2.35l0.39,0.92l2.51,2.32l2.26,0.58l-0.51,0.84l0.07,0.5l1.36,1.23l0.36,1.05l1.03,0.61l0.95,-0.26l0.54,-0.68l-0.54,-2.46l3.31,-4.51l0.17,-3.16l0.27,-0.16l1.28,0.23l0.67,1.99l0.92,0.96l1.59,0.19l2.14,-0.87l1.7,-0.27l1.26,1.93l0.98,0.35l0.84,-0.3l0.31,-0.66l-0.48,-1.86l-0.93,-1.88l0.56,-1.69l1.03,-0.25l1.07,0.92l1.23,0.3l1.39,-0.33l0.12,-1.32l-0.53,-0.86l0.59,-2.75l2.77,0.16l0.85,0.81l1.18,0.42l2.31,-0.03l0.73,-0.56l1.37,-2.23l1.33,-0.6l3.77,-0.37l3.33,0.19l5.13,-1.58l-0.68,0.99l0.28,1.2l3.39,4.2l1.31,0.54l9.34,1.7l4.37,0.3l2.39,0.5l-0.11,0.38l-3.71,2.45l-0.42,1.14l0.72,1.27l1.07,-0.01l1.62,0.59l-1.84,1.75l-0.19,0.73l0.54,0.98l1.22,0.01l-0.54,1.93l0.36,0.78l-1.47,0.98l-3.63,-0.93l-2.36,2.23l-1.64,0.43l-1.99,1.14l-3.29,1.28l0.8,-1.07l-1.15,-0.24l-1.93,0.95l-1.23,0.99l-0.67,3.48l0.91,0.9l1.39,2.72l1.66,1.19l-0.65,1.62l-0.77,0.56l-0.88,-0.49l-0.92,0.33l-0.41,1.83l0.76,5.03l1.32,3.61l1.28,1.54l2.76,2.31l2.98,1.26l5.22,3.86l2.9,1.25l0.66,0.58l1.7,2.91l1.49,3.4l1.62,5.37l1.23,2.78l2.38,3.05l4.88,4.3l4.4,3.12l4.29,2.0l3.26,0.34l7.53,-0.42l2.39,0.6l0.24,0.97l-0.38,0.67l-3.17,2.21l-0.18,2.38l1.61,1.29l7.3,3.28l7.46,2.74l2.27,1.36l2.76,2.2l6.42,2.94l1.11,1.44l3.91,3.08l1.7,2.28l0.3,1.64l-1.71,4.1l-1.3,-0.38l-1.78,-1.25l-3.15,-5.61l-5.21,-0.55l-1.02,-0.38l-1.67,-0.84l-0.59,-1.34l-0.79,-0.46l-2.01,-0.17l-1.64,0.95l-3.65,5.31l-1.89,4.43l-0.14,1.92l1.31,2.14l3.01,0.95l2.28,1.48l1.42,1.46l0.11,3.71l0.65,2.09l-0.74,0.9l-1.94,-0.28l-2.65,0.79l-2.0,1.48l-0.94,1.69l0.2,3.42l-0.33,1.13l-3.54,2.52l-1.87,2.56l-1.09,2.11l-4.06,0.04l-0.87,-1.22l-0.03,-1.98l0.65,-1.15l1.75,-0.82l1.12,-2.84l-0.3,-2.11l0.54,-0.75l0.52,-0.55l2.9,-0.7l0.32,-0.37l0.18,-2.87l-1.43,-1.55l-1.14,-5.2l-2.27,-4.3l-1.22,-3.84l-0.98,-1.97l-1.82,-1.22l-3.78,-0.25l-4.53,-2.63l-0.17,-0.69l0.75,-1.36l-1.08,-2.88l-1.07,-1.38l-1.28,-0.67l-4.63,0.8l0.88,-1.13l-0.46,-1.0l-1.89,-0.99l-2.75,-0.23l-0.43,0.22l-0.03,-0.73l-2.54,-4.18l-1.92,-1.87l-1.09,-0.32l-1.45,0.34l-4.14,-0.9l-2.16,0.68l-0.35,-0.2l-0.31,-0.6l-2.37,-1.74l-2.98,-1.01l-5.67,-5.48l-1.75,-2.07l-3.65,-2.33l-2.36,-3.39l-1.96,-1.27l-2.74,-0.98l-2.13,0.48l0.88,-0.72l-0.33,-1.49l-3.11,-3.33l-1.85,-1.11l-1.4,-2.23l-2.36,-0.46l0.05,-3.7l-0.99,-2.75l-1.72,-2.36l-1.03,-5.61l-0.93,-1.74l-1.9,-1.2l-4.34,-1.37l-5.93,-3.59l-1.39,-0.12l-3.64,-1.41l-2.23,-0.24l-3.22,1.38l-3.51,3.48l-2.85,3.59l-0.94,0.63l-3.6,1.2l-2.77,0.5l-0.11,-1.04l2.19,-2.65l0.39,-0.9l-0.55,-1.68l-0.96,-0.28l-3.0,0.66l-0.58,-0.14l-4.65,-2.3l-0.8,-0.82l-0.26,-0.71l0.2,-0.75l-0.61,-1.26l1.41,-2.42l1.0,-0.77l-0.46,-2.17l-0.92,-0.77l-1.87,-0.41l-0.68,-0.51l-0.19,-0.82l-1.23,-2.0l0.54,-0.27l2.16,0.07l1.81,-1.29l1.33,-0.43l1.23,-2.95l-0.1,-0.39l-1.86,-1.65l-1.78,-2.84l-1.02,-0.7l-0.03,-1.21l2.62,-1.64l1.52,0.64l2.74,-0.55l2.79,-1.08l3.49,0.9l2.81,-1.61l1.89,-2.54l0.07,-0.89l-0.5,-0.93ZM363.7,565.89l-0.02,0.45l0.8,0.86l1.1,-0.35l0.42,-1.12l-0.15,-0.61l-0.45,-0.3l-1.11,0.28l-0.6,0.79ZM381.53,535.83l1.58,1.4l0.32,0.85l-0.4,0.08l0.05,-0.55l-1.55,-1.79ZM406.78,657.96l-1.42,2.53l-3.31,4.45l-1.83,5.1l0.22,2.17l1.34,1.24l-0.41,0.3l-0.08,0.57l1.49,1.71l0.07,0.48l-0.01,0.44l-2.03,1.92l-0.54,1.74l0.13,1.16l-2.53,-0.51l-1.6,0.18l-3.49,-1.28l-1.84,-2.71l-3.08,-2.07l-3.35,-0.01l-7.22,-3.81l-2.58,-2.04l-1.81,-0.46l-1.69,-1.02l-2.3,0.05l-1.38,-0.37l-1.44,-1.1l-1.11,-2.08l1.41,-3.39l1.55,-0.85l0.7,-0.79l1.23,1.47l1.07,0.59l2.11,-0.82l0.29,-0.86l1.15,-0.77l1.61,-0.02l0.59,0.12l0.56,0.87l1.46,0.38l2.5,1.56l1.64,0.37l3.57,-0.93l3.16,0.37l3.01,-0.45l1.89,-0.64l2.03,-1.27l4.48,0.21l0.95,-0.35l0.59,-0.61l1.54,-0.09l2.06,-1.12l1.03,0.08l-0.37,0.35ZM384.19,618.41l0.02,-0.05l0.31,0.09l-0.18,0.04l-0.14,-0.08ZM358.21,680.29l0.48,0.16l0.18,0.38l-0.64,-0.31l-0.02,-0.23ZM336.9,584.52l-0.16,0.87l-0.71,-0.33l-2.4,0.32l-0.12,-0.29l2.89,-0.24l0.5,-0.33ZM307.75,616.0l0.86,0.72l2.19,0.38l3.33,-1.01l1.79,-0.98l2.33,-2.51l1.52,-0.57l1.25,-1.66l0.82,0.82l0.84,0.09l1.28,0.67l1.77,1.99l-0.54,1.02l0.07,0.46l1.66,1.73l1.62,4.9l-2.18,3.78l0.86,3.94l-1.21,10.49l-0.69,2.77l-0.7,0.28l-2.82,-1.16l-1.72,0.25l-1.03,-0.57l-0.63,0.27l-0.44,3.02l-0.67,1.12l-0.99,0.69l-0.91,0.04l-1.96,-0.27l-0.55,-0.46l-2.32,-3.69l-0.25,-4.18l0.64,-1.3l0.09,-2.37l0.53,0.16l0.66,-0.55l0.1,-1.65l-0.78,-1.21l-1.15,-0.39l0.02,-1.42l0.64,-0.73l0.21,-0.85l0.02,-2.69l-0.87,-1.14l-0.82,-2.44l-2.12,-2.31l-0.11,-1.75l0.39,-1.75ZM309.77,644.67l0.71,0.34l-0.33,0.67l-0.36,-0.48l-0.02,-0.53ZM308.32,612.92l0.1,-0.18l0.14,-0.07l-0.06,0.1l-0.19,0.16Z", "name": "Italy"}, "GG": {"path": "M161.17,471.95l0.51,-0.24l-0.15,0.36l-0.36,-0.11Z", "name": "Guernsey"}, "CZ": {"path": "M360.26,457.39l1.19,1.01l0.6,1.08l0.65,0.07l2.33,-2.93l1.17,-0.69l2.88,-0.65l2.52,0.38l1.09,-1.48l2.01,-0.32l0.92,-1.17l1.6,-0.76l0.75,0.3l0.81,-0.32l1.06,-1.52l1.95,-0.22l2.67,-0.8l6.37,-2.45l0.37,-0.51l-0.15,-0.48l-1.0,-0.65l-0.25,-0.73l2.97,0.56l0.95,1.47l0.08,1.06l1.75,0.8l0.83,-0.18l0.54,-0.61l2.25,-0.51l0.25,-0.32l0.04,-1.86l2.94,0.83l0.28,1.28l1.19,1.39l5.16,1.32l2.81,1.21l0.78,0.97l3.92,-0.66l0.89,0.52l0.57,0.52l-0.41,0.79l-1.8,1.04l-0.5,1.03l0.46,0.7l1.32,0.49l2.02,2.0l1.45,2.2l0.85,0.53l0.79,0.04l4.41,-2.77l-0.02,-0.68l-1.44,-2.27l3.1,0.77l3.73,2.22l1.99,-0.18l1.8,-0.62l-0.09,1.16l-1.49,0.59l-0.24,0.49l0.61,0.9l0.8,0.34l2.0,2.05l0.71,0.26l1.72,-0.47l0.64,-0.55l0.67,0.66l2.73,1.36l0.82,-0.21l2.07,0.44l0.44,0.29l0.4,2.01l2.89,2.63l0.27,1.23l-2.96,0.35l-2.54,1.84l-0.69,0.93l-2.64,1.32l-0.88,1.57l-0.32,1.96l-2.18,1.01l-2.08,1.92l-1.71,0.77l-1.83,0.23l-3.89,-0.57l-0.97,0.38l-1.15,1.21l-1.27,2.45l-0.71,-1.29l-2.26,-0.52l-2.32,-1.09l-1.21,-0.03l-1.45,1.01l-3.91,-0.26l-3.07,-1.87l-1.85,0.01l-5.23,-1.96l-1.92,0.46l-1.3,-0.84l-1.15,-0.1l-0.71,0.65l-0.56,3.35l-1.36,0.07l-1.59,1.81l-0.23,1.07l-2.49,-0.4l-0.95,0.24l-0.75,0.6l-2.22,-0.04l-1.68,-0.37l-0.85,-1.54l-2.34,-1.31l-3.62,-3.34l-1.57,-0.02l-1.9,-2.36l-2.01,-1.08l-3.04,-3.02l-1.53,-0.08l-1.62,-1.36l-2.41,-3.9l-1.35,-1.5l1.34,-1.87l0.16,-1.15l-0.82,-1.14l-2.45,-1.54l-0.83,-0.87l-1.54,-3.16Z", "name": "Czech Rep."}, "CY": {"path": "M638.64,705.94l1.16,0.89l1.95,0.45l3.68,-1.29l2.54,0.16l0.67,0.66l0.1,1.37l0.4,0.41l0.95,-0.52l2.07,0.25l2.53,-1.09l1.62,0.44l0.2,0.42l-4.21,0.2l-2.73,2.59l-1.27,0.8l-4.76,1.16l-0.65,0.68l-0.17,0.86l-0.37,-0.04l-0.44,-0.88l-0.64,-0.39l-2.49,0.12l-3.1,-1.14l-1.67,-3.23l-0.14,-1.24l0.94,0.23l2.25,-1.62l1.59,-0.25Z", "name": "Cyprus"}, "IM": {"path": "M132.24,388.26l0.75,-2.11l1.12,-0.81l1.38,-1.96l1.15,-0.38l0.45,1.96l-0.91,1.44l-2.48,2.13l-1.47,-0.27Z", "name": "Isle of Man"}, "GB": {"path": "M113.96,338.69l0.76,-0.5l2.21,-0.36l1.99,-1.42l-0.04,-0.68l-1.32,-0.72l1.38,-0.78l1.96,-2.74l0.47,-2.7l-1.5,-2.39l-1.71,-0.79l-0.08,-1.23l3.03,-1.74l-0.26,-0.39l-1.21,-0.45l-0.73,-1.5l0.65,-2.05l1.0,-1.76l3.29,0.06l0.77,-0.52l1.74,0.44l0.45,-0.58l-3.36,-3.49l0.78,-1.43l0.07,-1.57l4.31,-0.43l0.23,-0.54l-1.06,-2.23l0.29,-2.53l0.56,-0.77l0.99,-0.34l1.4,0.28l1.48,1.26l2.8,-1.1l1.06,1.04l3.28,-0.87l9.91,-1.18l2.63,-0.65l2.44,0.26l-0.8,1.82l-0.05,2.13l-1.23,1.57l-10.63,7.27l-0.65,2.19l0.34,0.47l1.91,0.38l-2.8,2.5l-0.76,1.94l0.39,0.55l3.68,-0.45l6.27,-2.1l1.36,-0.03l3.53,0.74l2.45,-0.39l8.27,0.22l2.28,-0.41l1.34,0.44l1.16,1.15l1.11,2.31l-3.19,4.11l-0.97,3.09l-2.28,4.56l-2.22,2.52l-2.22,3.23l-2.32,1.42l-3.73,0.66l-3.51,1.63l-0.28,0.45l0.41,0.33l1.52,-0.05l1.56,-0.44l2.58,-0.15l2.76,1.33l-0.19,0.79l-1.05,0.82l-2.98,0.24l-2.66,2.16l-2.31,0.93l-4.34,-0.66l-1.23,-0.59l-0.51,0.14l0.07,0.52l1.15,0.99l1.42,0.59l7.65,1.24l3.03,-1.41l3.04,-0.02l5.97,2.31l4.23,4.34l2.32,1.88l3.11,10.18l1.77,4.74l0.84,1.38l1.25,1.09l6.44,2.77l4.05,4.17l3.43,2.71l-0.61,0.48l-0.7,1.43l0.53,1.56l3.18,4.99l-1.41,-0.05l-2.85,-1.73l-2.54,0.37l-2.69,-0.14l-0.39,0.36l0.31,0.43l2.37,0.55l2.55,0.05l5.56,4.03l1.86,2.35l1.07,3.0l-0.66,1.22l-3.4,3.22l0.1,0.61l3.39,1.82l1.62,-0.4l2.3,-2.51l1.81,-0.17l4.72,0.34l4.26,1.15l3.6,2.48l0.73,1.26l0.39,3.59l-2.05,6.21l-2.28,2.13l-1.08,0.57l-1.17,-0.2l-0.37,0.34l0.56,2.12l-0.93,0.6l-1.03,0.28l-2.15,-0.35l-2.75,1.41l0.05,0.73l1.83,0.67l0.25,0.48l-0.38,1.04l-1.05,0.51l-3.93,0.66l-1.21,0.67l-0.17,0.49l0.47,0.24l1.3,-0.31l0.71,0.22l0.53,0.99l0.71,0.48l2.88,0.53l6.79,-0.18l-0.22,2.8l-0.29,0.32l-4.27,1.9l-1.27,2.12l-2.49,-0.05l-1.13,0.82l-6.31,2.15l-5.54,-0.91l-3.4,0.08l-4.47,0.79l-4.58,-1.39l-2.07,-0.23l-1.73,-0.69l-0.47,0.14l0.01,0.49l0.8,0.98l-1.99,1.05l-4.6,0.55l-2.19,-0.18l-0.41,0.53l0.75,1.52l-0.44,0.12l-4.19,-0.6l-0.73,0.12l-0.59,0.52l-1.26,-0.25l-3.18,-1.6l-1.68,-0.3l-1.51,0.11l-5.7,1.65l-1.16,1.64l-1.29,3.9l-1.15,1.29l-1.24,0.15l-5.47,-2.89l-1.51,0.6l-2.84,0.32l-3.11,0.94l-3.89,2.36l-1.47,2.11l-1.08,0.22l-1.33,-1.05l-1.5,-0.38l-2.58,0.83l-0.13,-0.76l0.96,-0.96l3.14,-0.92l2.75,-2.29l1.87,-2.16l1.56,-0.78l0.4,-0.8l3.82,-3.56l0.77,-3.42l3.09,-1.03l1.41,-2.78l4.4,-0.65l3.11,0.04l3.18,0.57l3.46,-0.2l1.38,-0.88l2.16,-2.8l3.93,-3.65l2.13,-2.38l0.01,-0.52l-0.51,-0.1l-1.44,0.82l-2.72,2.03l-3.22,0.78l-4.1,2.61l-3.44,-0.4l-2.62,-2.19l-1.93,-1.02l-3.91,0.43l1.53,-1.32l-0.33,-0.33l-2.45,-0.4l-1.58,-1.07l-3.01,0.07l-3.99,1.96l-3.21,-1.78l-0.02,-1.23l-0.45,-0.96l-0.53,-0.33l0.67,-0.79l1.19,-0.77l2.83,-0.84l6.67,-2.8l2.32,-1.5l1.06,-1.03l1.33,-2.69l0.92,-1.17l-0.2,-0.63l-0.75,-0.24l-0.29,-0.65l0.5,-1.83l-1.03,-2.09l0.2,-1.56l-0.4,-0.48l-3.5,0.34l-3.14,1.52l-0.8,0.1l0.49,-0.83l3.18,-2.28l1.77,-2.32l2.07,-1.33l4.52,-1.59l1.65,0.17l4.19,-0.89l2.99,1.55l0.45,-0.06l0.11,-0.44l-0.79,-2.12l0.75,-0.33l1.96,2.14l0.94,0.25l1.55,-0.32l0.31,-0.32l-0.78,-0.79l-1.61,-0.37l-0.67,-0.62l-1.19,-2.12l0.06,-1.14l1.75,-2.59l-0.2,-0.62l-1.19,-0.59l0.05,-1.98l1.74,-1.15l0.72,-3.51l-0.69,-1.04l-1.82,0.15l-2.03,0.77l-1.98,-1.77l-3.26,-4.33l-0.27,-1.6l1.64,-3.73l2.53,-2.38l3.04,-0.85l0.29,-0.39l-0.29,-0.39l-5.49,-0.22l-1.65,0.31l-1.57,1.06l-1.72,0.45l-2.24,1.6l-2.18,0.01l-1.0,-1.04l-0.84,-0.18l-3.46,1.62l-3.89,-1.59l-0.98,0.57l-0.72,1.99l-1.08,-0.89l-1.34,-1.73l-0.45,-2.0l0.37,-0.24l0.61,0.34l0.56,-0.2l1.21,-3.01l3.27,-5.07l0.68,-1.8l-0.1,-1.0l-0.6,-1.02l-2.2,-1.88l0.25,-3.01l0.63,-0.99l2.88,0.03l0.39,-0.31l-0.22,-0.45l-3.27,-1.98l0.55,-1.71l-0.12,-0.45l-0.46,-0.04l-1.81,2.55l-2.04,0.67l-0.54,0.96l-1.03,0.34l0.28,-2.24l0.57,-0.88l2.39,-2.19l0.05,-0.53l-0.52,-0.11l-1.22,0.72l-2.72,2.09l-1.84,1.98l-0.11,1.04l0.59,2.29l-0.16,0.98l-2.29,7.14l-0.67,0.9l-1.13,-0.06l-0.3,-0.72l1.15,-4.25l2.4,-3.65l-0.54,-0.36l-1.04,0.13l0.17,-4.37l0.74,-1.57l0.27,-2.18l1.89,-4.93l0.89,-0.94l0.21,-1.12l1.66,-2.66l-0.05,-0.45l-0.94,0.08l-5.72,4.12l-2.59,-0.52l-0.82,-0.71l-0.4,-1.5l-0.37,-0.3l-1.51,-0.14ZM185.23,257.4l-0.57,2.18l-0.53,-0.03l-0.06,-1.73l0.74,-0.02l0.42,-0.4ZM181.84,263.06l-0.93,-1.45l0.79,-1.92l0.62,0.04l0.08,0.26l-0.75,0.66l0.18,2.41ZM175.48,263.77l0.8,-0.37l1.06,-1.31l0.86,-0.15l0.22,2.56l0.58,0.28l0.4,-0.21l1.17,1.26l0.91,-0.16l-1.6,5.88l-0.26,2.05l-0.62,0.77l-0.43,1.39l-0.23,-0.2l1.01,-3.9l-0.25,-1.08l-0.77,-0.9l-1.95,0.21l-0.43,-0.99l-1.48,-0.05l-0.32,-0.39l2.03,-0.14l1.62,-0.82l0.19,-0.49l-1.01,-2.76l-1.52,-0.49ZM176.06,450.33l1.54,-0.47l0.94,-0.65l2.53,0.99l-0.75,0.49l-0.48,0.82l-0.59,0.15l-0.6,0.0l-2.6,-1.33ZM161.65,288.97l-0.68,0.01l0.29,-0.43l0.71,-0.23l0.87,0.07l-1.19,0.59ZM155.52,287.6l0.37,-0.11l1.33,1.02l-1.5,-0.66l-0.2,-0.25ZM157.96,289.51l1.02,0.29l-0.03,0.18l-0.74,0.32l-0.25,-0.78ZM154.57,293.13l-0.26,0.62l0.38,0.54l3.28,0.45l0.39,0.27l-0.24,0.55l-0.56,0.19l-1.92,-0.95l-2.24,0.39l-0.45,-0.22l-0.26,-1.19l-0.58,-0.1l-0.79,0.43l0.01,-1.32l0.41,-1.08l0.57,-0.18l1.09,0.13l1.3,0.68l0.27,0.34l-0.41,0.45ZM156.3,298.56l-0.02,-0.02l-0.47,-0.75l0.7,-0.11l-0.2,0.87ZM152.48,297.94l-0.45,-0.01l-1.04,-1.0l-0.33,-0.85l1.05,0.14l0.77,1.71ZM139.15,402.89l0.66,0.42l0.9,0.03l-3.54,2.21l-0.41,-0.53l-0.84,-0.13l-0.91,-1.28l-0.16,-1.92l1.09,-0.46l1.73,0.03l1.49,1.64ZM126.81,362.52l-1.32,0.01l-1.07,-0.48l-0.74,-2.34l0.77,-1.35l0.64,-0.11l0.96,0.74l0.71,1.66l0.05,1.87ZM89.64,377.21l2.06,-0.03l2.54,-1.08l1.47,-2.17l0.71,-2.42l2.02,-1.34l0.58,0.54l1.33,0.1l1.07,-0.74l1.03,-1.76l3.17,-0.18l3.03,-0.89l1.24,-0.01l3.2,0.46l1.08,1.18l0.71,2.2l1.58,2.13l2.0,1.81l0.06,0.77l-2.04,1.18l-0.22,1.17l0.55,0.37l1.77,-0.56l1.9,0.16l0.59,0.65l0.71,2.04l-0.07,0.41l-0.62,-0.98l-1.49,-0.75l-0.51,0.48l0.32,1.28l-0.13,1.73l0.21,0.38l0.95,0.23l-0.41,1.14l-3.0,0.79l-1.45,2.64l-0.91,0.58l-3.72,-0.8l-1.47,0.62l-2.99,0.05l0.16,-1.49l-0.39,-0.7l-1.83,-0.6l-0.68,-0.91l-0.33,-1.22l-2.04,-1.57l-0.85,0.07l-2.1,2.01l0.44,1.34l-2.24,1.85l-3.2,-0.35l-1.07,-0.82l-2.16,-0.48l-0.53,-1.29l-3.24,-2.76l1.06,-0.79l3.34,-1.08l0.67,-0.52l0.24,-0.59l-0.22,-0.47l-1.93,-1.02ZM107.25,322.58l2.76,-0.68l0.52,-1.27l0.92,0.27l0.97,1.14l0.26,1.42l-0.24,1.95l0.61,2.1l1.01,0.62l2.54,0.39l2.3,-0.1l0.21,0.31l-3.16,2.98l-0.73,0.23l-0.24,-2.65l-0.48,-0.35l-2.96,0.32l-0.61,-0.28l-1.79,-2.49l-3.03,-0.66l-0.76,-0.83l-0.17,-0.38l0.46,-0.56l0.82,0.18l0.99,-0.58l-0.18,-1.09ZM115.15,355.7l-0.57,-0.07l-0.11,-1.03l1.95,-1.32l-0.03,-0.72l-0.51,-0.21l0.28,-0.48l1.95,-1.22l-2.96,5.05ZM117.67,345.53l-5.05,1.0l-1.53,-0.08l1.83,-0.73l0.62,-2.57l-0.21,-0.45l-2.18,-1.11l0.09,-0.39l2.25,-0.74l1.95,2.0l2.41,0.81l-0.19,2.26ZM108.88,357.59l0.29,-1.38l0.53,-0.67l0.58,-0.27l0.79,0.24l1.94,-1.18l0.86,3.47l-0.29,0.84l-2.15,0.87l0.34,-0.95l-0.39,-0.98l0.18,-0.71l-0.36,-0.57l-0.93,0.13l-1.38,1.15ZM101.24,313.58l0.69,-0.49l-0.15,-0.72l-1.04,-0.51l-0.13,-0.81l0.1,-0.64l0.69,-0.72l1.74,0.86l2.01,-0.12l0.46,-0.5l-0.77,-1.86l6.85,-3.74l0.24,2.18l-1.59,3.17l-0.74,0.23l-0.53,0.78l-1.74,0.9l-0.21,0.45l0.38,0.31l1.47,0.02l-0.0,0.7l-1.99,1.51l-1.51,0.67l-1.42,1.51l-0.92,0.18l-1.2,1.33l-0.95,-0.75l2.61,-1.89l0.17,-0.55l-2.55,-1.49ZM110.97,333.63l-0.49,0.1l-0.68,-0.67l0.84,-0.35l0.46,0.45l-0.13,0.47ZM107.25,340.41l0.28,-0.27l0.09,-0.02l-0.03,0.04l-0.34,0.26ZM94.96,321.31l0.35,-0.38l1.03,0.14l2.35,-0.64l1.01,0.72l-0.88,1.32l-1.56,-0.01l-2.3,-1.16ZM97.75,330.67l-1.08,-0.23l-0.4,-1.03l0.09,-3.19l1.14,0.03l0.25,4.41ZM94.61,333.73l0.68,-0.43l0.37,0.2l-0.96,0.26l-0.09,-0.03Z", "name": "United Kingdom"}, "NL": {"path": "M253.59,437.43l-2.97,-1.02l-2.62,0.56l-1.62,-0.68l-1.47,-0.1l-1.42,-1.16l0.85,-0.48l2.54,-0.12l1.8,0.37l3.39,2.09l2.12,-0.24l0.2,-0.64l-0.47,-0.58l-2.47,-1.11l1.43,-0.15l0.27,-0.65l-0.68,-1.16l-2.31,-2.26l1.63,-2.95l1.7,-1.21l3.78,-4.65l1.1,-2.5l1.57,-6.67l1.03,-2.07l1.57,0.51l2.02,-0.83l0.61,2.01l1.67,1.87l-0.05,0.7l-2.39,1.05l0.04,3.12l-0.71,1.48l0.08,0.43l0.54,0.48l6.51,1.6l4.06,-3.19l1.17,-1.37l-0.04,-1.42l-0.47,-1.01l-2.62,-0.56l-0.29,-0.33l0.01,-1.58l0.57,-0.88l-0.05,-0.97l-0.42,-0.31l-1.44,0.1l-1.37,-0.36l-0.26,-2.86l-0.66,-0.7l1.23,-2.18l1.06,-0.92l4.53,-1.92l2.48,-0.57l10.0,-0.62l2.06,2.06l2.83,0.79l-0.08,4.82l-1.86,4.58l-0.24,1.67l-3.47,0.08l-0.9,0.62l0.09,0.93l-0.34,0.85l0.87,1.38l1.41,0.52l1.7,-0.01l0.65,0.85l-0.19,1.84l-0.5,0.96l-3.48,2.4l-0.14,0.97l1.13,1.12l-0.6,0.76l-2.86,0.97l-1.43,-0.0l-0.68,0.49l-2.7,-0.95l-2.27,0.9l-0.97,0.89l0.08,0.97l1.83,2.21l0.1,0.74l1.31,1.87l0.06,0.56l-0.41,1.55l-1.26,2.49l0.11,0.92l0.53,0.33l-2.23,1.63l-0.78,-0.07l-0.53,0.48l0.1,0.74l0.47,0.55l1.53,0.63l0.41,0.58l-0.61,2.27l-2.94,-0.14l-0.55,-0.2l-0.58,-0.96l1.23,-1.32l0.21,-1.07l0.9,-1.7l0.16,-0.82l-0.5,-0.82l-2.66,-0.92l-1.81,-1.56l-2.38,0.42l-1.15,-0.3l-1.39,-1.09l-0.5,-1.76l-0.54,-0.52l-0.49,0.01l-1.1,1.02l-1.05,0.07l-0.27,-0.73l-0.84,-0.78l-0.46,0.02l-1.54,1.17l-1.75,-0.93l-1.73,0.91l0.02,1.19l-1.77,-0.51ZM266.73,419.97l4.64,-2.99l1.49,-0.51l0.91,0.08l0.98,0.62l-0.3,0.84l-3.91,2.86l-0.85,0.06l-2.96,-0.97ZM261.97,407.06l-1.02,0.99l-0.51,-0.25l0.29,-0.71l1.25,-1.06l-0.0,1.03ZM252.8,438.41l-2.05,1.53l-1.75,0.66l-0.79,-0.07l-2.0,-1.12l-1.46,-0.21l-1.89,0.74l-0.5,-0.59l-0.29,-1.11l2.7,-0.27l3.98,0.8l1.77,-0.7l1.2,0.56l1.08,-0.22ZM246.76,431.92l0.8,-0.2l1.99,0.12l1.26,0.97l-1.02,0.24l-1.64,-1.11l-1.39,-0.02Z", "name": "Netherlands"}, "AD": {"path": "M219.01,589.34l-1.45,0.73l-1.49,0.29l-0.26,-1.45l0.13,-0.56l0.71,-0.55l2.52,0.57l0.23,0.3l-0.38,0.67Z", "name": "Andorra"}, "IE": {"path": "M90.89,378.81l-3.74,1.39l-1.45,1.19l0.42,1.29l3.08,2.4l0.64,1.39l2.29,0.51l1.07,0.82l3.68,0.38l2.78,-2.26l0.09,-0.46l-0.49,-0.95l1.7,-1.62l0.3,0.02l1.51,1.24l0.25,1.06l0.9,1.22l1.92,0.73l-0.18,1.5l0.56,0.74l3.31,-0.04l1.44,-0.63l0.9,0.09l0.42,0.48l-0.42,0.31l-1.28,-0.03l-0.65,0.73l-0.03,0.85l0.37,1.23l0.72,0.86l0.98,3.58l0.72,1.21l0.15,3.21l-0.29,0.63l1.44,5.05l0.23,2.85l-1.88,3.39l-0.67,3.57l-1.65,2.44l-1.46,0.93l-0.11,0.65l1.47,1.41l-0.98,0.51l-1.52,0.23l-1.77,-0.43l-1.26,0.04l-1.48,0.84l-1.01,-1.55l-0.81,1.62l-0.81,0.37l-1.8,-0.09l-4.3,0.86l-1.41,1.95l-3.3,1.02l-1.16,1.29l-1.3,0.66l-0.96,0.18l-1.89,-1.33l-1.79,-0.0l-0.38,0.32l0.85,0.97l-0.0,1.56l-1.6,0.5l-1.42,0.95l-1.89,0.26l-1.2,0.95l-6.41,1.53l-2.25,-0.55l-4.24,0.91l1.2,-1.54l2.33,-1.17l0.24,-0.3l-0.24,-0.64l-0.89,-0.15l-4.32,0.76l-2.08,0.72l3.75,-2.46l0.67,-0.73l1.96,-0.87l0.21,-0.5l-0.49,-0.25l-6.49,1.84l-1.48,-0.2l-0.69,-0.54l-1.02,0.19l-0.29,-0.71l1.77,-1.7l1.09,-0.77l2.7,-1.08l0.66,-0.93l-0.19,-0.58l-0.79,-0.28l-5.39,0.07l0.29,-0.66l1.81,-1.08l0.94,-0.17l2.66,0.8l2.24,-0.23l0.34,-0.28l-0.13,-0.43l-0.8,-0.65l-0.15,-1.36l-0.44,-0.48l1.55,-0.82l1.69,-1.42l7.68,-1.31l3.72,-1.07l0.29,-0.38l-0.28,-0.39l-1.81,-0.57l-0.84,-0.73l-0.56,0.03l-1.42,1.55l-0.92,0.54l-2.82,0.31l-2.44,-0.63l-2.93,1.34l4.73,-3.84l0.96,-1.34l0.03,-0.41l-0.67,-0.88l1.86,-2.33l0.63,-0.41l3.33,-0.7l1.03,-0.9l-0.13,-0.67l-2.91,-0.82l-5.03,0.23l-0.66,-0.44l-0.24,-0.84l-0.5,-0.44l-2.92,0.12l0.68,-0.6l-0.2,-0.69l-3.69,-0.25l0.42,-0.62l-0.05,-0.58l-0.65,-0.76l4.96,-0.86l0.35,-0.37l-0.29,-0.42l-2.28,-0.83l0.06,-0.78l1.9,-0.9l2.21,-0.43l0.31,-0.49l-0.01,-1.2l-0.35,-0.48l-2.28,-0.21l-1.79,0.38l0.68,-2.03l-0.0,-1.79l-0.53,-0.33l-0.58,0.2l-0.57,-1.72l-0.49,-0.19l-1.0,0.37l0.02,-0.42l0.33,-0.58l0.58,-0.24l2.28,0.12l1.54,-0.59l2.01,-0.14l3.2,0.18l2.2,1.59l1.01,-0.26l1.2,-1.11l5.47,1.04l0.81,-0.19l0.26,-0.48l-0.31,-1.16l-0.59,-0.71l1.72,-1.42l3.26,-1.22l1.44,-2.62l-0.38,-0.63l-4.28,0.58l-3.56,-1.15l1.06,-0.91l1.46,-0.4l0.38,-0.61l1.96,-1.47l-0.31,-1.74l0.19,-0.79l0.94,-0.8l0.56,-1.44l3.44,-0.89l2.63,-0.09l0.63,0.24l0.54,-0.43l-0.11,-0.78l0.77,-0.09l1.01,1.4l0.13,0.65l-0.89,1.03l-0.02,0.6l0.31,0.29l-0.67,0.73l-0.03,0.5l0.48,0.14l2.51,-1.47l0.1,-1.18l-0.63,-1.96l0.14,-0.75l0.6,-0.48l2.01,-0.31l0.26,-0.64l-0.46,-0.62l4.0,2.13l-5.2,3.61l-1.07,2.91l-1.25,1.9l-2.3,0.96l-1.79,-0.12l-0.73,0.44l-0.03,0.88l1.97,1.2ZM58.58,390.24l-0.12,-0.01l0.03,-0.02l0.09,0.03ZM59.81,390.39l1.03,0.02l0.27,0.15l0.07,0.94l-1.37,-1.11Z", "name": "Ireland"}, "ES": {"path": "M254.04,632.3l-3.94,-1.74l-1.35,-0.22l-0.04,-0.91l2.42,-0.17l2.05,0.62l1.1,1.67l-0.24,0.75ZM238.42,633.32l0.24,0.47l1.3,0.53l1.55,-0.43l0.59,0.12l0.47,0.17l0.11,0.64l-2.84,4.75l-2.01,1.18l-3.5,-1.26l-0.53,-1.7l-0.91,-0.82l-1.18,-0.19l-1.55,1.01l-0.31,-0.47l-1.13,-0.56l0.01,-0.32l5.41,-3.72l1.56,-0.82l3.06,-0.88l-0.05,0.57l0.37,0.41l-0.66,1.31ZM92.06,569.39l1.24,0.54l1.33,-0.16l1.25,0.64l1.99,1.73l2.72,0.67l2.32,-0.51l11.02,-0.15l3.16,-0.8l2.44,1.01l4.7,0.48l2.86,0.85l7.95,1.43l2.93,0.01l5.68,-1.37l1.65,0.32l2.21,-0.66l0.92,0.12l1.48,0.98l5.04,1.32l1.61,-1.14l0.81,-0.2l3.51,0.66l3.74,1.41l1.98,0.1l2.78,-0.38l2.23,-0.92l0.61,1.08l0.69,0.42l3.89,0.99l-0.15,1.08l-0.77,1.27l0.05,0.44l0.81,0.66l1.08,0.03l0.59,-0.74l0.3,0.36l4.78,1.81l2.21,0.15l2.36,2.24l1.74,0.09l2.28,-0.43l3.46,2.21l3.36,-0.44l0.82,0.42l5.1,0.05l0.52,-0.55l0.4,-1.99l8.51,2.44l0.9,1.31l0.03,2.1l0.64,0.81l1.32,-0.09l2.19,-0.97l2.73,1.13l1.03,1.2l0.88,0.03l2.1,-1.03l6.04,1.29l0.84,-1.12l2.55,-0.78l0.93,-0.16l3.01,0.58l1.08,1.68l-1.81,0.71l-0.22,1.53l1.19,1.45l0.12,2.0l-3.1,2.69l-9.36,4.85l-3.06,2.87l-6.91,1.47l-7.23,2.16l-4.46,3.93l0.14,0.7l1.0,0.28l0.97,0.99l-1.93,1.07l-1.87,0.41l-3.13,4.72l-5.94,7.08l-3.43,5.7l-0.07,1.95l1.73,5.72l1.03,1.55l1.35,1.24l2.56,1.08l0.41,0.67l-3.15,2.44l-4.43,2.35l-1.98,1.93l-0.48,1.83l-1.34,0.98l-0.48,2.46l-1.79,3.56l-0.11,0.91l1.16,1.29l-0.26,0.21l-2.08,0.34l-5.26,0.16l-4.45,2.78l-2.27,2.58l-1.89,4.41l-2.23,2.52l-0.74,0.35l-1.6,-1.09l-1.99,-0.18l-2.05,0.39l-1.14,0.95l-1.39,0.45l-1.51,-0.42l-3.39,-0.24l-1.6,0.06l-2.22,0.71l-1.95,-0.48l-3.37,-0.25l-7.44,0.61l-1.11,0.41l-3.08,2.86l-3.53,0.09l-3.2,1.21l-1.0,0.94l-1.34,2.13l-0.35,1.21l-0.96,-0.07l-0.5,1.29l-1.82,0.61l-2.32,-0.9l-2.02,-1.42l-1.1,-0.16l-2.35,-3.46l-0.56,-2.6l-1.61,-0.8l-0.28,-1.07l1.01,-1.65l1.59,-1.37l-0.41,-0.31l-1.41,0.08l-0.96,0.94l-1.11,-1.58l-5.05,-3.55l0.19,-1.23l-0.7,-0.22l-1.27,1.12l-2.7,-0.15l-2.76,0.4l-1.22,-5.84l0.75,-2.07l2.03,-2.76l1.34,-1.45l2.35,-0.79l0.9,-2.3l-0.45,-0.59l-1.76,0.15l-2.97,-4.03l0.8,-3.78l3.1,-2.95l0.63,-1.46l0.03,-1.41l-0.83,-0.95l-1.59,-0.4l-1.69,-3.01l-0.39,-1.95l-1.57,-1.32l-0.92,-1.48l5.19,-0.2l1.22,-0.59l0.9,-1.43l0.9,-2.28l0.23,-1.44l-0.4,-0.91l-1.43,-1.44l0.17,-0.44l2.06,-1.45l0.76,-1.07l-0.54,-1.44l0.45,-3.47l-0.24,-1.98l-0.33,-1.74l-0.89,-1.95l1.97,-1.35l1.13,-1.68l1.61,-1.38l2.16,-1.14l1.61,-1.33l1.17,-1.66l-0.43,-1.18l-1.01,-0.82l-1.24,-0.43l-1.88,-0.09l-0.11,-3.05l-0.36,-0.8l-0.88,-0.56l-1.06,0.12l-1.76,-0.47l-0.6,0.3l-2.06,-0.08l-1.77,-0.47l-0.81,0.53l-0.24,0.98l-2.33,0.85l-1.37,-0.03l-2.54,-0.85l-3.23,0.12l-2.87,1.11l-0.62,-1.01l1.22,-2.06l-1.12,-1.87l-1.06,-0.33l-4.56,1.4l-2.58,1.82l-0.72,0.16l-0.18,-2.32l2.52,-2.6l-0.12,-0.66l-1.4,-0.22l1.06,-1.44l-0.13,-0.55l-0.91,-0.75l-0.01,-2.73l-0.53,-0.28l-2.47,0.81l-0.02,-0.66l1.44,-2.26l-0.32,-0.5l-1.45,-0.24l-1.05,-0.76l-1.33,-1.66l0.7,-2.84l1.99,-1.02l1.91,-1.47l2.77,0.27l1.74,-0.34l2.56,-1.02l1.67,-1.08l-0.05,-0.95l-0.41,-0.69l0.23,-0.35l3.26,-1.81l2.09,-0.23l1.93,-0.88ZM215.68,646.86l-0.59,0.91l-1.81,-0.41l0.26,-0.64l0.7,-0.46l0.03,-0.65l0.46,-0.57l2.59,-0.57l0.4,0.32l0.08,0.41l-1.53,1.47l-0.58,0.19ZM215.76,650.29l0.42,0.46l-0.55,0.0l0.12,-0.46ZM10.49,799.23l-0.91,0.89l-0.44,-0.15l0.76,-2.17l3.26,-1.23l0.83,-1.22l-0.52,2.63l-2.98,1.26ZM1.51,811.6l2.36,-1.45l3.21,-7.29l0.46,-0.35l0.91,0.01l0.27,0.45l-0.01,1.41l-0.47,2.51l-0.8,2.08l-3.46,1.17l-1.83,1.6l-0.64,-0.13Z", "name": "Spain"}, "ME": {"path": "M446.17,589.02l1.19,-0.97l0.28,-0.68l-0.09,-0.72l-1.0,-1.61l-0.28,-2.92l0.33,-0.4l1.75,-0.24l0.34,-0.4l-0.02,-1.54l0.64,-1.55l2.2,-1.75l0.74,0.07l0.92,0.94l0.98,-0.46l0.08,-1.33l-1.22,-2.13l0.13,-0.28l1.2,0.35l1.26,-0.26l0.56,1.35l2.57,1.71l2.74,2.81l2.41,1.12l2.14,0.45l5.14,2.95l0.06,0.52l-1.49,0.4l-0.45,0.68l-1.62,-0.06l-0.66,0.62l0.72,1.91l-0.19,0.92l-3.36,1.16l-0.38,-0.46l-0.16,-1.84l-0.88,-0.44l-0.81,0.44l-3.96,5.48l-0.67,0.29l-2.57,-0.2l-0.31,0.65l1.59,1.94l1.69,0.84l-0.04,2.91l-1.44,-0.88l-0.9,-1.82l-3.09,-3.07l-3.52,-2.1l0.23,-0.58l-0.34,-0.59l-1.52,0.19l-0.92,-1.42Z", "name": "Montenegro"}, "MD": {"path": "M557.32,492.49l2.3,-1.33l5.13,0.23l1.53,-1.02l1.05,0.19l1.71,-0.95l3.49,0.95l0.98,0.89l2.02,0.78l0.72,1.12l1.08,0.35l1.68,-0.01l0.39,0.23l-0.18,0.59l0.23,0.62l1.14,0.03l0.57,0.96l0.6,-0.0l0.78,-0.88l2.88,0.47l1.15,1.98l0.95,0.93l0.99,0.32l1.65,-0.6l0.82,1.24l0.21,1.73l-0.32,1.86l-0.84,2.16l0.18,1.06l0.34,0.58l2.43,1.47l0.73,0.86l1.97,0.87l-0.38,2.88l0.67,0.87l0.19,1.51l2.11,1.48l2.08,0.9l0.74,1.52l-0.07,3.42l2.43,1.71l-0.33,0.31l-2.9,0.38l-0.99,-1.27l-0.81,-0.32l-1.41,0.81l-2.02,-0.91l-1.01,0.26l-0.87,-0.4l-0.6,0.12l-0.62,1.14l-0.1,-1.81l-0.5,-0.51l-0.54,-0.05l-2.77,1.21l-0.63,0.95l0.04,1.05l0.21,1.4l0.76,1.71l-0.7,1.95l-1.19,1.08l-1.44,0.68l-0.35,1.64l-3.14,3.05l0.03,2.48l-2.33,0.21l-1.08,0.59l-1.37,-1.88l0.96,-0.86l-0.81,-5.48l0.26,-2.72l1.68,-5.25l-0.27,-1.13l0.22,-2.18l-2.29,-5.92l-3.04,-2.49l-1.16,-1.93l-2.06,-1.92l-2.22,-3.63l-1.52,-1.5l-2.47,-5.44l-2.4,-3.49l-1.17,-1.03l-1.54,-0.77l-1.63,-0.15Z", "name": "Moldova"}, "SY": {"path": "M688.58,715.55l1.05,-1.15l-0.02,-0.54l-0.85,-0.79l-1.19,-0.32l-0.77,0.7l-3.37,0.05l-1.09,-4.51l0.03,-1.63l0.7,-2.46l-0.54,-3.2l-1.83,-2.35l0.95,-4.01l0.54,-0.78l3.38,1.25l0.95,-1.76l2.03,-1.2l0.35,-2.44l1.08,-0.58l2.14,-0.21l0.34,-0.34l0.03,-0.68l-1.35,-2.89l0.77,-3.61l0.59,-1.27l3.45,0.62l0.6,0.84l1.34,0.85l4.98,0.14l10.3,-4.01l3.17,0.57l3.24,2.24l1.17,0.4l8.17,0.19l4.49,-0.89l4.49,-1.37l9.31,-4.22l3.29,-0.17l5.23,0.59l7.48,-1.35l2.34,-0.77l1.79,-1.38l1.15,0.83l0.5,2.24l-3.51,3.56l-3.92,3.48l-5.11,1.35l-1.75,2.23l-0.47,1.77l-0.22,3.11l1.45,4.17l0.02,2.43l-1.41,3.24l-0.45,2.21l-0.29,7.92l-2.74,5.07l-0.58,0.53l-3.32,0.85l-25.93,14.59l-26.35,15.86l-5.76,-0.99l-2.04,-1.6l-2.14,-0.6l-1.38,-1.96l-0.84,-0.71l-1.22,-0.32l1.56,-2.74l-0.55,-2.18l0.5,-0.94l-0.93,-2.78l0.39,-1.37l2.24,-2.38l-0.11,-0.56l-1.05,-0.91l0.27,-0.75l1.48,-1.32l3.25,0.08l0.54,-0.28l0.11,-0.6l-1.13,-0.94l0.89,-1.07l1.43,-0.74l1.78,-2.59l-1.07,-3.53l-0.79,-0.7l-1.29,-0.53Z", "name": "Syria"}, "TN": {"path": "M307.74,684.93l2.01,-1.55l1.07,-2.02l2.03,-1.09l0.2,-0.37l-0.22,-1.31l3.07,-0.89l4.22,-3.01l7.26,-2.23l1.49,0.34l-0.57,1.45l0.63,1.19l0.6,0.12l0.89,-0.72l-0.1,-1.06l2.33,0.05l1.17,0.56l-0.09,2.42l1.91,2.69l-0.46,1.09l0.2,0.52l1.61,0.77l1.82,-0.95l0.78,-1.37l2.61,-0.81l2.42,-1.94l0.9,-0.13l0.78,2.46l-0.74,0.43l-1.21,1.53l-2.26,3.83l-2.01,1.09l-1.66,1.55l-0.6,1.18l-0.19,1.36l0.44,2.44l1.22,2.34l1.33,1.35l1.38,0.5l2.76,1.97l0.54,4.43l0.95,1.42l-3.28,5.24l-2.33,3.1l-2.06,2.0l-5.65,4.06l-0.84,1.22l-0.35,1.24l0.16,1.41l1.49,3.14l2.07,1.97l2.34,1.1l3.01,-0.35l0.18,2.26l0.41,0.33l2.45,-0.3l0.86,-1.25l1.23,0.69l0.84,2.78l1.37,0.98l-0.54,0.42l0.07,0.66l1.93,0.64l0.91,-0.2l1.02,0.47l-0.59,4.01l-0.07,3.89l1.09,1.89l0.02,0.58l-0.32,0.69l-9.08,4.95l-0.8,0.93l-2.17,1.36l-0.98,2.0l-0.8,0.87l-2.17,0.44l-0.67,0.46l-1.59,2.14l-0.64,1.5l1.73,6.43l0.17,2.32l-0.49,1.11l-4.25,5.77l-4.56,2.08l-6.37,-27.15l-0.45,-0.6l-9.14,-6.49l-0.39,-2.21l-1.26,-3.48l-1.38,-2.03l-0.66,-0.65l-2.67,-1.25l-1.79,-1.28l-3.1,-8.44l0.17,-3.55l3.04,-2.5l1.28,-2.41l3.79,-2.31l1.05,-1.39l0.76,-1.5l0.87,-5.24l1.08,-1.79l-0.99,-3.33l0.01,-3.87l-0.96,-2.29l1.36,-8.77l-0.69,-1.49l-1.2,-0.63ZM347.9,712.06l0.6,-0.51l-0.01,0.19l-0.59,0.31ZM344.37,727.35l-1.12,0.49l-1.48,-0.57l0.19,-1.69l1.96,-0.06l1.27,1.1l-0.82,0.72Z", "name": "Tunisia"}, "MA": {"path": "M30.01,812.59l4.18,-1.13l5.87,-2.65l1.71,-1.08l4.75,-4.89l8.04,-5.17l3.97,-4.75l6.19,-8.54l1.1,-2.4l0.59,-3.61l-0.4,-1.58l-1.69,-2.43l-1.08,-0.65l-0.22,-0.82l0.57,-1.93l0.32,-8.52l1.76,-4.17l4.46,-5.7l0.84,-2.4l0.55,-4.87l5.42,-5.14l4.34,-4.99l2.81,-1.81l10.0,-4.03l5.65,-2.89l3.43,-2.22l2.0,-2.55l5.45,-9.82l5.77,-15.36l3.91,-0.64l2.98,-1.5l0.72,0.19l-0.38,0.51l0.05,1.92l1.2,2.08l2.05,2.31l3.73,2.92l2.91,1.17l4.04,0.69l4.83,-1.25l2.58,-0.02l1.25,-0.49l1.38,0.75l2.65,0.25l2.66,-0.42l2.08,-1.25l0.82,-0.9l0.15,0.85l1.49,2.81l3.12,0.43l2.85,-0.16l2.48,0.27l0.39,1.04l0.8,0.9l4.47,3.3l-0.7,2.2l1.5,1.89l-0.75,1.72l1.13,2.87l0.19,2.72l-0.28,3.25l1.1,3.25l-0.61,3.85l0.73,2.05l1.0,1.67l0.54,2.89l0.86,1.53l4.61,3.56l0.44,0.9l-2.25,1.97l-0.29,1.23l0.47,2.08l-16.17,-0.47l-5.66,0.83l-1.23,0.75l-1.05,2.92l-5.55,1.89l-2.13,0.25l-1.37,-0.19l-1.83,0.61l-0.52,1.76l0.81,3.01l-0.53,2.73l0.29,0.47l2.47,1.45l-0.02,0.64l-0.4,0.4l-4.29,0.74l-4.53,3.17l-6.11,2.16l-2.61,1.31l-3.0,4.55l-1.49,1.54l-2.01,1.45l-7.39,1.83l-2.84,0.3l-3.75,-0.09l-0.47,0.41l-0.26,2.15l-0.86,0.99l-7.23,-0.64l-1.44,0.74l-3.29,2.63l-2.8,0.69l-13.3,9.41l-0.37,1.61l-0.0,8.73l-48.32,0.0Z", "name": "Morocco"}, "AX": {"path": "M473.44,272.85l0.15,-0.05l0.84,0.08l0.31,0.31l-0.62,0.06l-0.68,-0.41ZM466.69,267.18l1.25,-0.06l2.01,1.49l-0.63,0.99l-0.79,-0.15l-1.25,0.46l-0.31,1.73l-2.69,0.2l-0.49,-0.23l-0.9,-2.44l0.11,-0.4l0.54,-0.21l0.06,1.04l0.47,0.37l0.84,-0.15l0.32,-0.29l0.34,-1.72l-1.05,-1.11l0.25,-0.39l0.48,-0.17l0.58,0.75l0.84,0.28ZM461.9,270.08l-0.55,0.17l-0.39,0.42l0.16,-1.31l0.49,-0.02l0.28,0.74Z", "name": "Aland"}, "RS": {"path": "M452.45,533.14l1.41,-0.57l0.68,-0.79l0.8,0.43l1.93,-0.29l2.06,-1.11l1.45,-1.49l0.91,-0.19l3.1,0.39l1.26,-0.26l3.52,0.55l2.01,2.54l2.9,1.71l1.75,2.28l0.78,-0.01l-0.05,3.72l0.4,0.78l3.18,2.51l1.75,0.56l1.1,0.84l2.7,0.79l0.59,0.54l-0.89,1.5l-0.59,0.16l-0.38,0.58l0.52,0.87l1.88,0.81l-2.09,0.34l-0.26,0.39l0.32,0.95l2.16,0.6l1.55,1.33l1.5,0.52l2.22,0.24l1.43,0.69l1.25,1.38l1.65,-0.41l1.95,-1.85l1.75,-0.44l2.72,1.5l-2.07,0.47l-0.94,1.17l-0.06,1.13l0.49,0.96l1.71,1.18l0.39,0.86l-0.82,0.68l-0.41,1.88l-2.37,1.2l-0.77,2.48l0.04,1.45l1.83,4.55l0.75,1.06l2.94,1.72l1.29,1.71l1.37,0.92l-0.36,1.06l-3.07,3.34l-1.91,0.1l-1.49,0.81l-0.37,0.83l0.32,0.92l-0.37,2.03l0.49,1.4l0.78,0.91l-1.33,2.11l-0.79,0.18l-1.59,-0.67l-2.38,0.83l-2.12,-0.25l-2.26,0.89l-1.99,0.33l-0.41,-0.94l1.19,-0.88l1.62,-3.36l0.31,-1.02l-0.21,-0.67l-4.64,-1.26l-0.05,-1.36l-2.12,-1.27l-0.24,-0.7l-2.28,-2.26l-2.82,-1.32l-0.6,-1.42l-1.02,-0.04l-2.04,1.13l-0.19,0.7l0.51,1.44l-0.26,0.47l-2.07,1.44l-0.22,0.82l0.25,0.56l-1.01,0.29l-0.25,-0.85l-0.97,-0.7l-4.42,-2.41l-2.27,-0.5l-2.24,-1.04l-2.63,-2.73l-2.59,-1.73l-0.26,-0.89l0.64,-0.66l1.1,-0.11l1.31,0.51l0.77,-0.71l0.28,-1.06l-0.17,-1.2l-3.13,-4.0l3.68,-0.06l0.68,-0.49l0.14,-0.84l-3.44,-3.31l-2.76,-1.62l0.3,-2.92l1.91,-2.86l0.89,-2.97l-0.3,-0.61l-1.61,-0.6l-1.79,0.3l0.22,-0.98l-0.44,-2.37l0.55,-0.15l0.3,-0.53l0.62,0.27l2.5,-0.09l0.48,-0.45l0.05,-0.62l-1.26,-1.31l-3.08,-1.11l-1.0,-0.88l0.03,-0.83l0.71,-1.15l-1.87,-1.28l0.32,-1.03l-1.29,-2.78l0.59,-0.56l0.11,-0.78Z", "name": "Serbia"}, "GE": {"path": "M784.54,611.83l-0.76,-1.01l-2.62,-0.36l-0.55,-0.47l0.19,-0.88l-0.3,-0.31l-3.3,-2.6l-1.11,-0.43l-0.39,-0.99l-0.78,-0.5l-2.24,0.05l-0.68,0.47l-1.14,1.7l-3.31,-0.73l-3.88,-0.15l-1.48,0.99l-3.47,-1.13l2.28,-2.71l0.8,-1.96l0.06,-2.48l-1.37,-3.02l-2.42,-8.45l-1.12,-1.42l-3.79,-1.43l-0.96,-1.69l-3.05,-2.18l-5.09,-1.37l-6.22,-4.3l1.14,-1.72l0.67,-0.21l4.88,0.93l1.79,-0.33l5.79,2.58l3.71,0.68l3.13,1.9l6.35,0.48l3.16,-0.62l1.75,0.06l2.12,1.14l2.57,-0.23l2.81,1.14l0.22,0.73l1.3,1.05l6.33,2.37l2.95,1.55l-0.57,1.05l-0.08,1.0l1.35,0.87l1.91,0.11l7.5,-2.98l1.65,0.2l1.55,1.79l0.68,-0.05l1.02,-2.02l3.72,1.25l2.66,2.4l2.91,-0.1l1.16,0.27l0.67,0.41l-1.2,3.69l0.22,0.96l2.81,1.55l1.54,1.25l3.5,0.76l2.55,1.31l-1.38,1.69l-1.56,0.55l-0.27,0.7l0.09,1.35l0.97,0.62l0.74,1.51l4.2,2.62l0.57,0.72l-0.54,1.72l-1.1,1.01l-0.83,0.24l-3.72,-2.0l-2.09,0.44l-3.02,-0.87l-1.04,-0.78l0.19,-0.56l-0.24,-0.51l-5.94,-1.82l-1.18,0.5l-3.17,2.29l-2.14,0.28l-0.35,0.38l0.09,0.4l-4.29,0.31l-3.36,-0.35l-5.9,1.33l-4.31,0.3Z", "name": "Georgia"}, "MK": {"path": "M474.73,600.43l1.84,0.11l0.77,-0.95l0.41,-2.59l3.6,-1.54l0.89,-0.05l1.45,1.15l0.65,0.06l0.91,-1.54l0.63,-0.43l3.04,-0.35l3.83,-1.29l2.05,0.27l2.47,-0.84l1.15,0.64l3.2,3.37l3.36,1.73l1.43,3.49l0.79,0.71l-0.73,1.84l-0.29,3.94l-1.61,0.11l-0.61,0.4l-0.51,2.18l-2.81,0.86l-4.12,-0.64l-2.65,0.45l-1.15,0.53l-1.97,2.45l-2.56,1.2l-2.24,-0.57l-1.23,0.65l-4.43,0.26l-0.63,-0.82l-2.8,-0.25l-0.69,-2.04l-1.23,-1.16l-1.01,-2.21l0.03,-1.94l-0.54,-1.92l0.88,-0.93l-0.14,-2.11l0.57,-2.22Z", "name": "Macedonia"}, "_0": {"path": "M468.27,588.8l0.23,-1.37l-0.65,-1.57l1.63,0.09l0.64,-0.79l3.47,-1.07l0.27,-0.76l-0.2,-0.76l1.92,-1.27l0.5,-0.84l0.09,-0.77l-0.53,-1.12l1.94,-0.92l0.57,1.37l2.88,1.35l2.08,2.07l0.36,0.86l2.01,1.18l-0.14,1.06l0.28,0.43l4.61,1.19l-1.88,4.11l-1.1,0.71l-0.15,0.66l0.36,0.88l-1.96,0.42l-0.92,0.68l-0.55,1.19l-1.39,-1.12l-1.4,-0.04l-3.95,1.66l-0.58,1.06l-0.11,1.91l-0.39,0.51l-1.14,-0.15l0.02,-2.13l-1.26,-3.52l-1.98,-1.52l-1.4,-0.49l-2.18,-3.22Z", "name": "Kosovo"}, "SK": {"path": "M500.77,479.11l-1.87,2.96l-1.25,3.22l-2.01,1.99l-0.31,2.95l-4.92,0.82l-2.04,-2.5l-1.79,-1.11l-5.18,0.8l-2.74,-0.69l-3.02,-0.07l-2.16,0.4l-2.33,4.1l-5.07,2.52l-0.54,0.2l-3.78,-1.55l-1.02,0.28l-1.32,1.71l-2.51,0.6l-4.72,0.38l-1.81,0.92l-0.78,1.39l0.31,1.5l-0.48,0.75l-7.62,0.4l-5.11,-0.11l-1.61,-0.64l-4.24,-3.08l-2.48,-0.39l-0.57,-0.39l-2.93,-5.85l-0.03,-0.76l1.02,-1.78l0.6,-2.24l1.91,-2.7l0.52,-0.25l3.98,0.55l2.05,-0.28l1.8,-0.81l2.23,-2.01l1.68,-0.56l0.65,-0.61l0.43,-2.18l0.57,-1.15l2.66,-1.33l0.77,-1.01l2.28,-1.67l3.08,-0.34l1.14,0.17l0.33,1.5l0.41,0.33l2.45,-0.07l1.61,-2.02l2.35,-1.35l2.39,3.22l1.74,0.5l0.15,1.44l-0.41,1.13l0.26,0.48l0.62,0.21l1.69,-0.45l1.76,0.64l0.5,-0.22l0.65,-1.5l0.65,-0.68l2.54,-1.15l3.34,-0.11l1.37,0.34l1.03,0.74l2.12,0.22l1.03,-0.55l0.93,-1.21l3.46,-0.19l3.82,0.29l3.33,1.17l0.91,0.68l0.88,1.68l6.66,2.34Z", "name": "Slovakia"}, "MT": {"path": "M392.86,695.09l-1.11,0.1l-0.87,-0.59l-0.01,-0.91l0.71,0.18l1.27,1.23ZM389.04,692.13l0.21,-0.04l0.18,0.07l-0.23,0.07l-0.16,-0.09Z", "name": "Malta"}, "SI": {"path": "M403.55,537.43l-0.58,0.35l-0.27,0.83l0.66,1.7l-0.87,0.28l-1.64,-0.15l-2.27,-0.83l-1.45,0.51l-0.51,-0.13l-1.81,-1.47l-0.69,-1.19l-0.57,-0.36l-0.96,0.41l-1.35,2.21l-0.59,0.31l-3.71,0.06l-1.44,-0.5l-1.46,1.32l-3.29,-0.75l1.3,-1.09l1.84,-0.21l0.49,-0.85l-0.67,-1.21l-1.48,-1.36l-1.86,-0.9l0.48,-2.39l-0.56,-0.5l-1.19,-0.12l1.78,-1.87l0.27,-0.99l-2.22,-1.02l-1.0,-0.0l0.01,-1.09l3.6,-2.33l0.41,-0.89l11.42,1.93l2.8,-1.68l1.79,-1.78l4.24,-0.61l3.12,0.21l2.64,-1.17l1.66,-0.2l2.52,0.56l0.72,-0.63l0.04,-1.7l0.63,-0.57l0.61,-0.25l2.29,0.09l0.53,2.01l0.65,0.7l0.07,0.9l1.15,1.32l-1.92,-0.14l-1.21,0.94l0.08,1.7l-2.19,0.06l-1.02,1.18l-0.8,0.41l-4.2,1.44l-0.66,1.31l0.16,0.75l0.85,0.93l-0.17,2.79l-4.88,2.01l-0.16,0.91l0.87,0.78Z", "name": "Slovenia"}, "SM": {"path": "M364.94,566.32l-0.44,-0.16l0.66,-0.49l0.03,0.12l-0.25,0.53Z", "name": "San Marino"}, "SA": {"path": "M801.29,795.83l22.3,1.94l2.42,-0.47l11.93,1.54l1.07,2.01l0.82,3.04l1.28,1.55l10.51,-0.0l2.36,5.77l1.07,1.38l-182.09,0.0l-1.93,-1.27l-4.77,-0.63l-1.07,0.62l2.14,-5.61l0.28,-3.21l1.97,-8.93l14.03,2.34l0.86,-0.15l5.68,-4.42l3.13,-5.01l0.56,-0.41l9.76,-1.98l2.48,-5.01l4.37,-2.43l0.11,-0.62l-6.78,-7.56l-6.58,-6.75l26.47,-7.36l2.49,-1.91l16.32,2.74l22.97,12.79l10.58,8.7l25.26,19.32Z", "name": "Saudi Arabia"}, "UA": {"path": "M498.0,491.01l-0.48,-1.02l-1.33,-0.03l0.12,-2.21l2.03,-2.04l1.28,-3.28l1.97,-3.28l3.26,0.94l0.74,-0.39l0.29,-0.58l-0.19,-0.78l-1.79,-1.47l0.38,-2.03l-1.1,-4.12l0.67,-1.03l4.44,-5.13l5.0,-4.82l4.04,-3.54l3.4,-0.56l1.92,-2.52l0.04,-1.69l-0.66,-1.88l-0.81,-1.03l1.47,-0.7l0.01,-0.92l-1.58,-1.38l-1.64,-3.3l-2.62,-3.2l0.21,-1.47l-0.93,-2.1l-0.01,-1.45l0.96,-0.36l1.05,0.07l2.34,0.92l2.54,-1.53l2.07,-1.98l1.02,-1.59l6.69,-0.55l2.72,-0.57l11.49,0.31l11.46,2.58l4.83,0.31l2.07,2.73l4.29,0.01l0.86,0.38l-0.14,1.19l0.77,0.66l0.82,-0.23l1.34,-1.78l2.03,0.55l0.94,-0.09l1.34,-0.76l5.34,1.07l0.77,1.59l1.25,0.46l1.86,-1.96l1.65,-0.54l1.52,-0.99l0.7,0.66l1.68,3.01l0.73,0.64l3.14,-0.84l8.01,-0.78l1.77,1.25l0.48,1.44l1.57,0.92l1.44,0.22l1.62,-2.14l-0.44,-2.15l-0.87,-2.05l0.63,-1.52l1.11,-2.21l1.14,-1.4l2.98,-2.67l1.15,-0.48l2.04,0.41l1.64,-0.95l2.97,-0.05l2.73,0.15l2.68,0.97l2.06,-0.07l2.35,-1.21l1.22,-2.99l0.71,-0.45l4.96,0.99l1.41,-0.1l3.31,-1.5l1.76,-0.22l2.23,0.36l3.78,-0.19l2.3,1.56l1.21,1.65l1.4,3.29l3.74,3.5l-0.11,0.61l-3.31,0.63l-0.34,0.35l-0.02,0.88l1.11,1.58l0.4,3.4l0.62,0.53l-0.81,1.11l0.12,0.5l0.5,0.29l3.41,0.12l3.04,1.16l4.62,-0.55l1.24,2.49l0.76,0.36l1.35,0.04l-0.19,1.29l0.94,2.75l0.76,1.25l-0.65,2.08l0.27,1.27l1.11,1.57l0.8,0.42l0.78,1.34l1.47,0.36l2.76,-1.54l2.86,0.47l2.5,2.22l1.1,-0.21l1.55,0.25l0.81,0.78l1.22,0.44l1.88,-1.44l4.95,-1.04l2.8,-1.15l0.83,0.08l2.0,1.97l0.34,1.37l1.42,1.96l4.68,3.37l1.87,-0.43l0.48,-1.59l0.61,-0.26l2.66,1.55l2.58,0.2l3.76,2.26l1.64,0.09l1.77,-0.59l1.55,1.86l2.31,0.35l4.2,2.68l1.5,0.14l2.03,-0.5l0.42,0.22l-0.38,2.27l0.93,1.25l0.02,0.88l-0.71,1.67l-2.33,2.27l-1.74,0.48l-0.99,0.5l-0.2,0.47l0.33,0.98l0.8,0.9l3.07,1.14l-2.65,0.06l-1.31,1.36l-0.82,2.6l0.3,0.5l2.33,0.72l0.65,2.73l-0.56,1.13l0.37,0.56l1.14,0.33l-0.98,1.31l-1.48,3.52l0.0,1.35l-0.38,0.48l-4.47,0.18l-6.62,-0.37l-1.19,0.33l-1.58,2.23l-0.97,0.76l-1.65,0.7l-2.07,0.29l-1.24,1.08l-0.43,2.63l-0.72,1.43l0.07,0.65l0.94,0.53l-1.0,1.31l0.1,1.33l-4.75,-0.22l-3.92,0.37l-2.88,2.69l-1.6,0.01l-2.39,0.73l-1.65,0.94l-1.64,1.66l-1.38,-0.74l-1.76,0.02l-1.92,0.57l-2.0,1.22l-1.01,0.2l-2.39,-0.34l-2.68,0.72l-5.91,4.19l-0.84,1.25l-0.06,-0.98l-0.83,-1.19l-0.64,-0.01l-2.18,2.84l-2.85,1.3l-0.28,2.37l0.89,3.43l1.61,3.05l3.21,4.28l1.57,1.61l1.22,0.7l1.53,0.14l2.77,-1.33l0.98,-0.18l2.35,0.49l1.17,-0.93l1.12,-0.43l1.51,-0.06l3.31,0.89l-1.49,2.39l-0.7,2.56l-1.95,0.58l-2.39,-0.07l-2.35,0.4l-2.61,-1.59l-1.46,-0.29l-1.49,0.35l-1.71,2.08l-2.67,1.33l-0.94,1.49l-2.44,-0.32l-2.41,0.27l-3.45,1.46l-2.66,3.12l-2.7,1.84l-2.09,0.57l-1.95,-0.18l-1.25,-0.53l-2.53,-1.82l1.01,-1.83l1.11,-3.79l-0.15,-1.47l-0.78,-2.15l-2.2,-1.51l-1.95,0.2l-0.86,-0.34l-3.79,-2.62l-2.11,-0.17l-2.05,0.49l-0.9,-0.75l8.18,-5.53l1.9,-0.29l2.57,-1.26l2.69,-1.84l0.16,-0.43l-0.38,-1.45l-0.61,-1.16l-0.44,-0.2l-2.11,0.61l-3.2,-1.95l-3.46,0.86l-2.0,-0.12l-4.22,0.79l-5.89,-2.97l-1.5,-0.45l-1.23,0.06l-0.17,-0.17l0.25,-0.11l2.24,-0.47l0.37,-0.66l-0.06,-0.73l-0.3,-0.35l-2.07,-0.55l-1.91,-0.16l-1.14,-0.62l9.71,1.35l2.89,-2.05l0.45,-0.95l-0.45,-0.17l-2.94,0.84l-2.89,-0.52l-1.01,-0.69l-0.86,-1.03l-0.34,-1.11l0.24,-1.24l-0.37,-2.3l-1.35,-2.94l-1.18,-1.12l-0.51,-0.02l-0.12,0.49l2.03,4.81l-0.14,3.33l-0.31,0.96l-0.98,0.24l-2.85,-0.46l0.34,-1.53l-0.17,-0.42l-0.46,0.01l-0.99,0.76l-1.19,1.74l-0.91,0.22l-2.55,-0.19l-4.61,1.23l-2.15,5.05l-1.91,2.65l-3.9,3.97l-4.2,1.88l-0.95,0.3l-1.74,-0.36l-1.2,0.75l-0.41,0.86l-0.01,1.39l0.97,1.2l0.62,3.61l-1.51,-1.32l-2.4,-0.84l-2.58,0.32l-2.62,1.36l-1.64,0.47l-1.56,-0.31l-0.55,0.61l0.02,0.59l-3.79,-0.88l-1.69,-0.86l-1.11,-1.36l0.85,-0.48l2.63,-0.36l0.43,-1.31l-0.26,-1.45l3.08,-2.97l0.2,-1.43l1.39,-0.67l1.45,-1.41l0.77,-2.4l-0.82,-1.85l-0.2,-2.07l0.28,-0.4l2.58,-1.04l0.09,2.09l0.34,0.39l0.95,-0.28l0.59,-0.99l0.99,0.29l0.82,-0.29l2.19,0.94l1.42,-0.79l1.78,1.6l3.15,-0.45l1.01,-0.9l-0.07,-0.59l-2.61,-1.83l0.21,-3.08l-0.93,-1.89l-4.08,-2.23l-0.11,-1.3l-0.67,-0.88l0.48,-2.46l-0.27,-0.75l-2.1,-0.98l-0.72,-0.85l-2.53,-1.77l-0.12,-0.51l0.82,-2.14l0.35,-2.1l-0.29,-2.08l-1.12,-1.56l-0.78,-0.17l-1.42,0.65l-1.15,-0.89l-1.49,-2.29l-3.32,-0.54l-0.93,0.8l-0.37,-0.7l-0.98,-0.21l-0.04,-0.93l-0.76,-0.44l-2.59,-0.27l-0.22,-0.69l-0.56,-0.44l-1.12,-0.28l-1.93,-1.43l-3.99,-1.06l-1.85,1.0l-1.08,-0.18l-1.37,0.99l-5.23,-0.22l-2.8,1.61l-0.37,0.61l-4.05,0.91l-0.67,1.79l-1.38,1.87l-9.38,1.41l-3.99,1.51l-1.37,1.35l-2.08,0.42l-4.13,-3.55l-1.48,-0.38l-4.16,0.69l-1.51,-0.63l-0.93,0.12l-4.47,-0.97l-3.47,0.03l-2.68,-1.57l-1.03,-0.1l-1.43,1.47l-2.08,0.84l0.02,-1.1l-1.22,-1.43l-1.5,-0.07l-1.1,-0.44l-0.93,-1.27l-2.26,-0.88l-0.94,-1.63Z", "name": "Ukraine"}, "SE": {"path": "M365.99,347.48l2.3,0.87l1.42,-0.61l0.14,-0.52l-1.75,-2.9l2.48,-0.3l0.9,-1.54l-0.49,-1.96l-2.38,-1.12l-1.88,-2.96l-2.08,-1.66l-3.59,-6.1l-1.32,-4.23l-0.51,-0.26l-0.86,0.28l-0.98,-4.46l-1.97,-1.0l-0.41,-4.75l-0.3,-0.35l-1.93,-0.51l-1.22,-2.07l-0.43,-4.59l-1.37,-0.8l-0.88,0.07l0.29,-1.67l-0.86,-7.71l-0.81,-2.41l0.49,-1.42l0.99,-0.13l1.05,0.84l1.08,2.44l1.23,0.55l1.65,-0.68l1.12,-2.02l1.19,-5.7l-1.56,-5.81l2.04,-2.12l1.28,-3.24l0.58,-0.43l2.52,-0.49l1.72,-1.15l2.65,-2.85l0.49,-4.19l0.98,-2.96l-0.5,-2.21l-3.2,-7.01l-0.24,-1.94l1.97,-0.63l2.88,-0.11l0.56,-0.36l1.77,-3.51l0.73,-2.75l-1.76,-2.26l-2.22,-2.01l-1.56,-0.71l-4.23,-2.88l1.8,-9.07l0.16,-2.55l-2.55,-6.51l0.33,-2.72l-0.41,-4.03l1.37,-1.57l0.05,-0.47l-2.85,-5.96l2.75,-4.1l-0.39,-2.31l6.45,-7.27l1.66,-1.2l2.56,-1.06l2.84,-0.52l10.15,1.32l0.91,-0.69l0.87,-1.25l1.05,-1.69l0.15,-2.07l-0.38,-2.84l-0.59,-1.74l-5.54,-2.57l6.01,-7.62l5.0,-8.0l0.94,-7.62l1.16,-3.35l-1.16,-7.17l6.37,-0.83l4.57,-1.91l1.56,-1.27l-0.64,-4.29l1.67,-1.3l4.42,-4.9l7.13,-6.69l0.39,-2.55l-1.05,-2.3l-3.0,-3.8l0.7,-1.43l3.43,-1.04l1.77,-1.7l2.83,-6.34l5.13,-3.07l1.95,-1.6l7.79,3.14l0.47,-0.13l2.83,-3.94l0.73,-1.62l-0.2,-7.54l1.64,-0.55l0.9,-0.15l5.21,1.44l3.87,0.18l11.01,3.05l1.69,0.08l3.69,-2.86l-0.1,-0.68l-2.96,-1.22l1.86,-1.21l2.41,-3.64l0.39,-2.24l-0.15,-1.32l-2.41,-2.48l5.81,-0.32l3.48,1.27l0.41,1.76l3.53,1.82l3.19,2.42l0.7,0.87l7.15,3.98l2.75,1.04l2.31,0.34l5.62,1.69l0.91,0.52l3.18,2.47l1.11,2.73l1.96,0.38l2.07,2.53l2.08,1.38l-1.82,1.6l-0.02,4.21l0.55,1.9l-1.01,2.1l-0.15,1.45l0.57,0.59l3.26,0.52l0.47,1.83l-1.41,1.1l-0.54,0.92l0.17,2.66l0.56,1.56l3.56,4.31l0.53,1.22l-1.21,2.31l-0.38,2.91l-1.21,1.48l-0.85,0.53l-0.43,1.07l-0.12,1.59l0.35,2.85l0.77,1.59l2.15,1.03l1.83,3.39l1.27,3.65l-3.0,0.43l-2.88,-1.0l-1.28,0.49l-5.01,0.43l-1.55,1.09l-2.26,-1.04l-2.3,-1.85l-0.51,0.01l-1.64,1.38l-0.76,0.19l-1.06,-1.24l-1.23,-0.12l-1.65,2.67l-0.35,3.08l-1.94,-0.25l-0.44,0.48l0.14,0.6l0.53,0.47l-2.89,0.43l-0.18,0.93l0.46,0.62l-0.61,0.63l-4.4,0.46l-0.55,0.67l-0.09,0.87l0.29,0.61l0.76,0.46l0.08,0.6l-1.87,-1.4l-0.49,0.08l-0.3,0.57l1.84,2.46l0.35,1.44l-1.92,2.37l-3.1,2.99l-0.84,1.58l0.1,0.49l1.81,1.74l1.54,3.9l1.61,1.71l-0.59,1.43l-2.78,1.72l-3.31,2.75l-3.42,6.62l-1.03,0.8l-2.97,1.11l-1.22,1.15l-2.17,1.25l-4.04,1.18l-1.79,1.55l-0.81,1.53l-0.53,0.07l-2.03,-1.05l-0.54,0.31l-0.16,1.14l-1.24,-0.74l-0.51,0.08l-0.96,1.15l-0.66,1.65l-2.52,2.16l-2.77,-0.4l-0.7,0.56l0.41,0.71l-2.59,0.41l-0.39,0.27l-0.94,2.25l-2.29,0.6l-0.72,0.96l0.32,0.59l2.05,0.13l-0.3,1.29l-2.73,0.93l-1.06,1.24l-0.7,-0.02l0.17,-0.42l-0.38,-0.55l-1.68,0.04l-0.49,-0.9l-0.6,-0.13l-0.37,0.29l0.07,1.31l1.01,2.2l-0.78,1.02l-0.03,0.58l1.47,0.79l-0.87,0.37l-1.41,1.48l-1.41,0.03l-1.13,1.05l-0.71,-0.0l-2.16,-1.18l-0.52,0.21l-0.53,1.85l0.78,2.11l2.2,1.98l-1.11,1.3l-1.84,6.28l0.9,3.42l-2.79,-0.75l-0.53,0.45l0.23,1.25l-1.12,1.82l0.44,2.38l-0.33,1.49l0.78,1.46l-0.42,0.9l0.53,6.72l0.99,2.75l-0.36,2.21l1.62,1.58l3.12,0.25l0.84,1.75l0.4,0.25l1.24,-0.12l2.49,-0.95l0.7,1.43l2.08,2.14l1.34,1.02l1.94,0.48l1.88,1.5l-0.11,2.19l1.01,0.75l2.4,0.77l1.86,2.63l0.72,2.14l-0.21,1.12l-3.27,1.95l-1.93,1.86l-3.29,1.82l-0.78,0.74l-0.61,0.26l-0.88,-0.13l-2.7,1.42l-0.19,0.48l0.54,0.87l2.07,0.26l1.22,-0.32l0.88,-0.73l1.45,-0.01l1.59,-0.76l0.43,0.17l0.48,0.84l-2.57,0.82l-0.54,2.14l-1.03,1.23l-2.46,0.91l-3.55,2.1l-1.05,-0.11l-1.25,0.94l-2.83,1.13l-1.56,1.58l-3.24,1.35l-1.66,1.09l-8.82,-0.19l-1.54,0.56l-0.25,0.42l2.6,0.99l1.39,-0.17l3.99,0.51l1.35,1.35l-3.08,0.88l-0.3,0.52l1.51,4.13l-0.88,1.13l-0.06,4.41l-1.32,0.35l-0.56,1.97l0.4,1.19l0.25,3.76l0.62,1.3l-0.25,1.16l-2.12,3.38l0.05,1.5l0.64,2.27l-2.36,6.76l-1.76,2.25l-0.93,1.77l-2.07,5.3l-1.98,1.63l-2.7,-1.1l-1.67,0.06l-2.41,0.6l-3.72,-0.4l-3.82,0.25l-0.92,0.53l-0.18,0.46l0.43,1.51l-0.79,0.15l-1.55,-0.48l-2.19,1.42l-1.9,1.7l-0.71,1.14l-0.17,2.37l1.76,3.55l-1.99,2.17l-4.88,-0.6l-6.48,1.53l-5.27,-1.1l0.53,-1.06l0.42,-5.19l-0.52,-1.24l-1.43,-1.41l-3.24,-4.82l-1.03,-2.15ZM455.37,314.89l-0.44,1.16l-0.16,-0.02l-0.35,-0.49l0.95,-1.01l0.98,0.04l-0.99,0.33ZM453.63,316.87l-0.69,0.4l-0.58,1.21l-1.89,1.0l-0.31,4.35l1.22,1.47l-1.22,0.69l-1.15,2.24l-2.02,0.82l-0.98,0.77l-1.3,1.6l-0.6,1.99l-1.6,0.85l1.52,-2.4l-0.04,-0.53l-0.96,-0.91l-1.29,-2.49l0.57,-1.33l-0.21,-4.02l3.53,-3.78l1.69,-1.36l2.26,-0.59l0.99,0.53l0.56,-0.21l0.42,-1.14l0.49,-0.18l1.6,1.02ZM447.84,284.05l0.09,-0.33l0.59,-0.21l-0.46,0.3l-0.23,0.24ZM445.2,293.07l0.11,-0.28l0.27,-0.3l-0.35,0.57l-0.02,0.01ZM419.58,346.71l-0.65,0.71l-0.31,-0.98l0.14,-4.76l2.85,-5.73l1.39,-0.62l3.63,-8.04l0.2,-0.26l0.38,0.11l-0.59,0.73l0.06,1.24l-2.27,4.26l-0.62,2.76l-0.83,0.77l-3.36,9.84Z", "name": "Sweden"}, "IL": {"path": "M663.37,759.89l2.58,-4.47l1.71,-4.56l1.59,-6.27l2.46,-6.83l3.98,0.09l1.29,-0.9l0.49,-1.81l0.95,0.09l2.54,-1.98l-0.11,1.2l0.9,2.08l-0.48,0.82l0.55,2.07l-1.56,2.88l-2.22,0.79l-0.69,0.76l-0.33,3.49l-1.31,-0.65l-0.67,-0.93l-2.72,-0.41l-1.89,1.3l-1.49,4.53l0.43,3.82l-0.36,1.51l0.55,0.34l1.08,-0.28l1.47,0.67l-1.92,1.03l-1.21,1.12l-1.16,3.23l0.09,0.66l0.79,0.56l2.62,-0.22l4.23,-1.73l-0.6,3.27l0.49,1.55l-4.0,10.48l-0.02,4.21l-0.98,2.41l-1.26,6.15l-0.43,0.53l-3.08,-9.9l-1.74,-3.77l-0.55,-2.24l-3.22,-8.87l1.2,-1.08l0.15,-1.17l2.26,-2.32l0.09,-0.55l-0.52,-0.66Z", "name": "Israel"}}, "height": 812.9890777806123, "projection": {"type": "mill", "centralMeridian": 11.5}, "width": 900.0});
jQuery.fn.vectorMap('addMap', 'fr_mill_en',{"insets": [{"width": 900, "top": 0, "height": 749.2159980728637, "bbox": [{"y": -6244653.662562441, "x": -571670.6975907331}, {"y": -4882430.695155527, "x": 1064707.428102987}], "left": 0}], "paths": {"FR-28": {"path": "M407.07,246.39l-2.7,-0.64l-6.08,2.98l-1.29,0.33l-1.3,-0.03l-4.61,-1.88l-2.65,0.56l-2.46,-3.3l-2.56,-2.35l-1.46,-1.98l-0.99,-0.54l-2.75,-0.62l-0.56,-2.81l-0.76,-0.98l-0.97,-0.09l-2.55,1.38l-1.99,0.58l-3.85,0.17l-1.75,0.55l4.24,-2.29l0.59,-0.56l0.14,-0.72l-1.12,-1.06l-3.14,-0.41l-2.36,-1.54l1.12,-0.96l0.25,-1.0l-1.86,-3.44l0.03,-2.94l-1.33,-1.67l0.61,-1.35l2.29,-0.4l5.6,-2.3l2.13,-1.95l0.67,-1.64l1.22,-1.8l-0.16,-0.83l-1.74,-2.11l0.08,-3.7l-3.65,-3.73l-2.55,-1.62l-1.61,-2.81l-0.36,-3.23l1.82,-1.67l1.34,-0.77l5.76,-1.41l2.04,-0.07l0.74,-0.36l1.7,-2.02l3.48,-0.35l0.63,-0.53l0.22,-1.53l3.0,1.67l3.49,-0.02l1.93,0.63l4.71,-2.07l1.42,-1.16l0.69,-1.87l0.95,-1.4l1.34,-1.03l2.49,-1.16l1.05,-1.01l0.26,-1.64l-0.52,-1.68l0.12,-0.44l2.22,-1.39l3.12,5.29l1.41,1.78l0.26,1.59l-0.56,2.83l0.31,1.68l0.56,0.67l1.6,0.81l-0.36,1.11l-1.35,1.63l-0.2,0.71l0.26,0.98l1.48,0.99l0.55,1.38l1.5,1.71l3.83,2.4l0.73,2.38l2.38,1.58l0.52,0.67l0.38,1.69l-0.03,2.29l1.38,2.04l1.1,0.79l4.59,1.88l2.43,-0.21l0.24,2.38l2.15,2.42l0.66,2.91l0.56,0.84l1.29,0.92l-1.7,2.02l0.05,0.99l0.8,0.61l-1.24,2.16l0.67,3.68l-0.27,0.93l-0.37,0.49l-2.85,1.06l-1.77,4.01l-0.98,1.3l-1.0,0.81l-1.08,0.27l-1.41,-0.35l-1.39,0.17l-3.64,1.38l-3.25,-0.59l-1.79,0.16l-1.29,0.78l-1.79,2.16l-0.7,0.16l-1.79,-0.73l-1.17,0.14l-1.18,0.96l-0.45,1.05l0.17,2.31Z", "name": "Eure-et-Loir"}, "FR-29": {"path": "M25.63,242.25l0.98,-1.98l0.98,0.49l19.62,-3.77l3.65,0.88l0.91,-0.32l0.5,-0.76l0.62,-2.51l-0.36,-1.04l-0.81,-0.89l-0.58,-2.39l-1.01,-0.81l-2.92,-0.69l-0.66,-1.14l-0.5,-0.27l-1.37,0.44l-3.11,-1.71l-2.01,0.46l-2.96,4.7l-0.73,0.21l0.57,-1.39l-1.14,-2.33l0.91,-1.36l-0.39,-1.22l-1.09,-0.38l-3.21,-0.11l-0.03,-1.0l1.84,0.17l0.95,-0.24l0.41,-0.81l-0.22,-0.93l0.98,-2.21l0.53,-0.43l0.46,0.19l-0.71,2.55l0.23,0.48l1.87,0.72l5.36,-0.32l1.36,0.83l1.04,0.18l3.66,-0.78l2.04,-0.12l0.21,0.35l1.46,0.44l5.01,-0.91l0.33,-0.98l-0.42,-0.4l-1.83,0.11l-0.45,-0.19l-0.2,-0.74l-0.68,-0.16l-1.09,0.67l-1.22,-1.03l-2.07,0.18l0.59,-0.25l0.44,-0.73l1.79,-1.5l0.1,-0.44l-0.38,-0.25l-1.24,0.08l-1.29,0.8l0.0,-0.47l-0.85,-0.4l-0.96,1.04l-0.96,-0.2l-1.87,1.11l-0.5,0.08l-0.43,-0.77l-0.56,-0.05l-1.09,0.68l-1.02,0.2l3.24,-3.36l6.46,-3.39l0.19,-0.5l-0.47,-0.25l-4.22,1.6l-4.19,0.6l-5.77,2.77l-2.94,0.62l-1.85,0.8l-1.08,0.12l-4.35,-1.11l-0.58,0.4l-0.15,1.12l-0.27,0.13l-3.57,-0.23l-0.68,-1.74l0.68,-0.06l0.36,-0.44l-0.1,-1.01l-1.05,-2.18l-0.09,-1.34l0.28,-1.34l0.6,-0.89l1.01,-0.27l0.3,-0.88l-1.49,-1.16l0.52,-1.93l2.34,-3.42l1.07,0.45l0.46,-0.14l-0.19,-0.71l0.54,-0.32l2.86,-0.47l3.08,1.22l1.04,-0.16l0.21,-0.65l-1.67,-2.31l0.37,-0.22l2.65,0.59l1.24,-0.03l0.38,-0.34l-0.26,-0.44l-1.23,-0.43l0.07,-0.55l-0.35,-0.44l4.17,-0.0l3.43,-1.04l1.35,-0.03l0.38,-0.31l-0.2,-0.45l-0.86,-0.45l1.38,-0.23l3.24,-1.36l1.36,0.05l0.84,0.86l-0.39,1.52l0.42,0.5l1.58,-0.18l2.35,-1.07l2.95,0.58l0.4,-0.4l0.0,-0.59l-1.04,-0.57l0.11,-0.28l1.91,-1.43l2.45,-0.6l1.27,0.07l1.03,0.52l0.71,-0.39l0.36,0.69l0.75,0.24l1.01,-1.05l-0.02,-1.18l4.45,-1.51l-0.24,1.62l0.55,0.4l-0.25,0.84l1.04,1.07l-0.07,1.9l0.48,-0.03l1.68,-1.43l0.9,-0.29l-0.28,0.38l0.1,0.75l3.35,2.74l0.61,-0.01l0.45,-0.54l-0.24,-0.79l0.28,-0.74l-0.54,-1.41l0.79,0.35l0.21,-0.4l0.01,-2.72l0.24,-0.43l0.93,0.16l0.45,-0.85l1.48,0.59l2.89,-0.11l2.82,1.61l2.57,-0.38l0.01,5.63l0.41,1.35l3.32,3.92l0.57,1.55l-0.36,1.83l-1.33,2.12l-0.1,1.26l0.52,0.77l1.4,0.36l0.66,0.75l0.01,0.67l-0.6,1.06l-1.9,0.16l-0.76,0.41l-0.39,1.02l0.05,1.22l2.94,1.69l0.6,2.77l2.0,4.19l-0.39,1.62l-1.49,2.95l0.56,2.13l-9.89,3.86l-1.13,1.08l-0.47,1.46l0.1,1.1l3.11,3.22l2.08,5.24l1.33,1.07l3.63,-0.54l1.28,0.09l3.08,1.88l1.56,0.51l3.03,-0.58l0.9,0.18l0.66,0.71l0.41,1.48l-0.28,3.56l-0.88,1.31l-1.5,-0.11l-0.95,0.28l-0.67,0.77l-0.51,1.32l-0.62,0.5l-0.54,0.09l-1.97,-0.83l-1.48,0.68l-0.82,2.17l0.47,2.09l-2.3,-0.46l-2.06,0.0l-1.6,-1.08l-2.25,0.1l-0.95,-0.29l-0.44,-0.91l-0.74,-0.41l-3.29,1.44l-0.96,-0.68l-3.48,0.2l-1.22,-1.97l-0.89,-0.77l0.11,-1.0l-0.37,-0.51l-1.34,-0.44l-0.26,-0.87l-1.15,-1.13l-1.72,-1.0l-1.75,-0.32l-0.44,0.53l0.51,1.46l-0.36,0.96l-0.24,0.22l-0.49,-0.49l-1.37,0.27l-0.79,0.62l-1.44,-1.0l-2.43,-0.67l-0.69,-0.82l-1.04,-2.67l-0.42,0.16l-0.7,1.27l0.43,1.31l1.4,1.55l-1.0,0.23l-0.97,0.66l-0.91,-1.34l-1.28,0.04l-0.48,1.28l0.73,0.75l-0.22,0.89l0.4,0.4l1.27,0.0l-1.81,1.5l-2.27,0.79l-8.52,-0.35l-0.07,-1.48l1.2,-0.18l0.52,-0.76l-0.21,-1.72l-1.54,-4.18l-0.96,-1.47l-2.99,-3.31l-6.1,-3.99l-1.18,0.45l-1.3,1.04l-1.84,-1.46l-3.15,-0.06l-3.8,-0.92ZM1.37,208.95l2.5,-0.92l1.47,0.95l-2.48,1.11l-0.61,-1.01l-0.88,-0.14Z", "name": "Finist\u00e8re"}, "FR-22": {"path": "M104.04,181.46l-0.28,0.54l0.32,0.6l2.41,-0.01l1.55,-1.18l5.84,-2.09l1.17,0.0l1.67,-1.78l0.55,0.11l0.3,0.85l-0.03,1.41l-0.4,1.28l-0.83,1.08l0.5,1.21l0.41,0.18l0.97,-1.9l1.78,-1.89l1.89,-1.51l0.81,0.06l1.06,-1.09l0.51,-0.13l0.85,0.83l-0.4,1.97l0.68,0.68l-1.05,2.42l-1.65,2.02l-0.1,0.85l0.4,0.4l0.8,-0.2l3.03,-4.81l0.76,0.15l1.33,-0.56l0.67,0.24l-0.02,0.75l-1.71,1.0l-0.01,1.15l2.48,1.16l4.01,0.41l0.01,1.2l-0.8,0.72l0.21,0.84l1.94,1.27l1.37,1.73l3.87,2.85l0.88,3.1l-0.26,0.69l0.22,0.77l2.78,1.74l3.18,1.32l-1.16,1.99l1.46,0.52l1.88,1.65l0.62,-0.24l0.25,-2.13l2.16,0.1l1.16,-0.4l3.22,-3.61l5.89,-2.95l0.99,-1.12l0.0,-0.53l-0.84,-0.45l1.49,-0.39l1.05,0.13l0.44,0.89l0.49,0.2l3.51,-1.61l2.1,-2.09l0.67,0.82l1.02,0.23l-1.01,1.46l-1.68,1.58l0.05,0.62l1.51,0.76l3.43,-2.2l0.62,2.37l0.78,0.42l0.63,2.14l0.57,0.3l1.25,-1.02l0.75,0.88l1.35,-0.4l0.22,-0.89l-0.64,-0.57l0.93,-0.86l1.16,0.66l0.55,-0.01l0.02,-0.55l-1.01,-1.64l2.26,-0.68l2.61,-0.22l1.31,2.11l0.42,1.64l1.16,0.92l-0.26,1.06l1.54,2.0l0.32,0.9l-0.23,1.64l0.21,0.41l2.88,-1.61l-0.12,-0.77l0.31,-0.32l1.0,3.2l0.07,0.98l-0.5,1.15l-1.56,2.03l-0.55,1.44l1.21,5.85l-0.19,0.43l-1.6,0.61l-0.26,0.89l0.25,2.37l-1.06,1.3l-1.44,-0.16l-1.87,-0.79l-1.86,-0.12l-1.43,0.93l-1.63,1.7l-2.5,0.01l-0.83,0.43l-0.6,0.93l-0.51,1.8l-1.36,0.88l-0.58,0.89l-0.84,2.78l-3.24,2.24l-1.18,0.08l-1.98,1.13l-1.07,-0.2l-1.02,-1.98l-0.71,-0.74l-2.2,-0.9l-5.18,0.18l-1.12,0.38l-0.78,1.34l-0.32,3.61l-0.63,1.03l-3.24,2.8l-1.93,1.02l-0.89,-0.31l0.03,-6.22l-1.02,-0.8l-3.85,1.09l-2.18,1.62l-1.52,-2.73l-1.06,-0.54l-2.3,-0.42l-4.05,-2.12l-1.96,-0.25l-3.07,0.85l-0.87,-2.72l-1.63,-0.71l-3.91,-0.25l-1.45,0.38l-0.67,0.79l-0.52,1.85l-0.51,0.69l-0.75,0.34l-7.76,0.9l-1.49,-0.44l-1.57,-1.45l-4.69,1.36l-0.71,-0.6l-0.17,-1.41l-0.94,-0.58l-6.12,0.21l0.62,-0.67l-0.63,-2.09l1.45,-2.84l0.43,-1.94l-0.2,-0.94l-1.84,-3.43l-0.68,-2.96l-1.07,-0.87l-1.75,-0.64l0.16,-1.46l2.41,-0.37l0.67,-0.68l0.36,-1.88l-0.59,-1.08l-1.99,-0.83l0.03,-0.79l1.74,-3.13l0.01,-1.29l-0.67,-1.83l-3.26,-3.8l-0.36,-1.12l-0.02,-4.22l2.89,0.27l1.04,-0.44l0.21,-0.49l-0.71,-3.08l2.98,-0.46l0.33,-0.33l-3.03,-3.0l-0.19,-0.98l2.29,-1.26l1.58,-2.51l0.68,0.39l1.86,0.1l2.17,1.06Z", "name": "C\u00f4tes-d'Armor"}, "FR-23": {"path": "M407.84,404.16l2.43,-1.5l1.15,-1.7l-0.27,-0.62l-1.4,-0.23l-1.46,-5.31l-2.08,-1.27l-0.26,-0.59l0.44,-2.8l-0.54,-1.42l-1.49,-1.67l-3.65,-1.46l-0.95,-1.46l-0.08,-1.94l3.24,-5.87l0.11,-1.78l-1.22,-1.12l1.46,-0.82l3.93,-3.54l0.68,-0.15l2.17,0.53l2.02,-0.06l0.36,1.35l0.7,0.52l1.01,0.19l1.02,-0.2l1.87,-1.33l3.01,0.41l0.9,-0.2l1.03,-0.98l0.25,-2.59l0.71,-0.54l0.76,0.32l1.92,1.93l0.96,0.16l2.07,-1.12l1.08,-0.24l5.41,0.14l2.45,0.84l3.5,0.01l2.22,0.72l3.19,-0.59l5.83,0.29l2.01,2.5l1.67,1.44l0.91,2.78l0.59,0.64l0.74,0.43l2.88,0.63l0.67,0.63l1.08,2.07l0.77,0.02l0.86,-0.61l0.63,0.2l3.01,4.0l1.01,3.07l2.11,3.67l-0.39,3.35l0.22,1.7l2.06,4.03l-0.15,3.39l-1.62,1.78l-1.56,3.24l-2.36,2.46l-2.3,0.1l-4.07,3.26l0.03,1.36l1.66,2.11l0.73,2.07l0.5,0.47l1.47,0.35l0.87,0.8l-1.59,1.22l-1.28,0.53l-4.46,-0.26l-0.54,0.33l-1.09,1.7l-2.01,0.86l-0.63,-0.08l-6.99,-3.85l-4.38,-0.7l-1.8,-1.52l-1.17,-0.47l-1.17,0.08l-1.19,0.61l-1.14,1.13l-1.47,2.58l-3.43,0.58l-1.46,-0.05l-1.05,-0.8l0.64,-1.91l0.16,-2.73l-1.27,-1.93l-4.16,-1.9l-1.02,-0.88l-1.0,-1.64l-0.86,-0.45l-1.58,-0.05l-4.36,1.16l-1.89,-0.21l-0.58,-1.04l0.41,-3.19l-0.67,-1.02l-1.19,-0.57l-3.98,-0.11l-0.45,-0.43l0.14,-1.22Z", "name": "Creuse"}, "FR-21": {"path": "M575.96,257.27l0.42,-2.75l1.05,-2.73l2.12,-1.57l13.22,-1.52l1.29,-0.82l0.21,-1.86l1.09,-0.89l1.41,-0.3l3.05,0.51l2.38,-0.98l2.0,1.2l4.19,1.0l-0.48,1.26l0.41,0.79l2.84,0.99l0.59,0.52l-1.02,1.96l0.47,1.65l1.15,0.43l0.67,-0.37l0.54,-0.83l0.47,-0.03l4.35,5.21l1.1,2.15l0.05,1.03l-2.6,0.55l-0.58,0.46l-0.24,0.88l1.41,1.97l0.59,3.57l0.48,0.95l0.76,0.58l1.41,0.03l1.38,-1.3l0.41,0.07l2.15,2.8l2.67,1.55l2.02,-0.25l1.44,-1.65l0.75,-0.28l0.64,1.53l0.67,0.7l3.65,2.12l0.68,2.08l0.72,0.4l0.98,-0.16l2.08,-1.37l1.56,1.15l0.73,-0.29l0.57,-0.7l2.12,0.66l1.85,-1.62l1.32,0.46l0.47,0.78l-0.15,1.58l0.96,1.46l0.24,1.5l-2.04,2.72l-2.41,0.69l-0.46,0.6l-0.51,2.35l0.56,0.82l2.03,0.82l0.58,3.42l0.55,0.75l1.63,1.12l0.52,4.8l1.07,1.44l-1.39,4.41l-0.25,2.08l-0.45,0.8l-5.64,7.93l-5.33,2.53l-0.45,1.23l0.54,1.75l-0.09,0.77l-3.17,1.8l-1.27,-0.38l-1.39,0.38l-2.65,1.37l-5.08,0.22l-1.89,-1.56l-3.71,0.97l-5.06,0.51l-7.43,2.91l-3.36,0.22l-1.48,1.18l-1.07,0.3l-0.64,-0.34l-1.05,-2.42l-3.56,-1.1l-0.91,-0.86l-1.77,-3.81l-0.5,-0.46l-2.63,0.05l-3.91,-1.17l-2.82,-2.95l-2.6,0.5l-1.77,-2.91l-3.29,-1.19l-2.43,-2.51l-1.01,-0.28l0.09,-1.16l0.73,-1.82l-0.33,-1.87l-0.83,-1.33l-1.12,-0.8l-3.77,-0.35l-0.09,-5.37l-1.07,-1.4l-0.27,-2.24l-0.42,-0.68l-0.93,-0.37l-0.88,-2.41l0.48,-0.93l1.77,-0.82l0.87,-1.18l0.15,-3.95l0.39,-0.79l1.06,-0.69l3.61,-5.79l1.07,-2.54l1.57,-1.87l0.79,-2.55l0.09,-3.43l4.19,-1.97l0.84,-1.26l-0.19,-1.71l-1.61,-4.02l-1.03,-0.48l-1.89,0.05Z", "name": "C\u00f4te-d'Or"}, "FR-26": {"path": "M609.51,454.85l0.02,-0.57l3.87,-0.36l5.44,-2.98l1.85,-0.05l0.97,1.55l1.89,0.16l1.14,1.78l0.99,0.77l2.55,0.12l-0.44,2.43l0.54,0.44l2.01,-0.78l0.58,1.1l0.15,2.45l0.87,4.09l-1.17,3.72l0.41,1.63l0.58,0.24l0.72,-0.4l2.23,0.09l0.9,1.68l3.94,0.49l1.79,-0.37l0.3,0.76l0.53,0.35l2.46,0.05l4.23,-2.52l0.98,-0.04l-0.68,1.52l0.16,1.34l1.19,3.22l-0.69,2.72l0.01,2.73l-1.34,7.85l0.13,1.72l1.13,1.08l4.47,1.24l0.51,-0.39l-0.02,-1.07l0.46,0.2l5.46,4.76l7.39,1.17l2.2,-0.2l0.89,0.97l-0.25,1.02l-1.71,1.52l-4.17,1.0l-3.09,-0.29l-1.24,0.51l-0.43,1.87l-2.53,3.81l-0.14,0.94l0.84,1.52l2.0,1.4l0.28,0.97l-0.33,0.33l-3.19,1.81l-4.23,-1.27l-3.35,-0.13l-0.63,0.63l0.07,1.69l0.63,1.09l1.24,0.83l0.0,0.57l-0.98,0.17l-2.3,-0.43l-1.08,0.62l-0.06,0.66l1.42,1.81l0.6,1.94l2.39,1.76l4.27,1.43l3.69,-0.02l-0.41,1.18l0.12,0.71l1.56,1.75l2.09,1.43l-0.14,4.66l-0.66,1.16l0.12,1.87l-0.76,-0.17l-0.63,-1.31l-0.81,-0.55l-1.74,-0.29l-0.98,0.29l-3.26,3.17l-1.73,0.96l-1.95,-0.21l-4.26,-2.77l-0.76,-2.13l-1.01,-1.15l-2.12,-0.25l-4.34,-1.4l-2.82,0.21l-2.6,-0.66l-0.67,-0.77l-0.1,-1.5l0.78,-2.2l-0.29,-0.88l-0.62,-0.28l-2.47,1.42l-4.48,-0.52l-4.27,1.08l-3.5,1.47l-2.77,0.41l-2.98,1.5l-1.01,-0.71l-1.74,-4.11l-1.5,-1.39l-1.0,-0.49l-1.77,-0.25l-3.2,0.13l0.91,-6.09l-0.09,-0.98l1.91,-3.48l1.11,-7.45l1.1,-2.37l3.09,-4.1l0.42,-3.02l-1.45,-3.45l-0.09,-2.65l0.96,-1.96l2.09,-1.76l0.57,-1.55l1.89,-1.85l1.93,-5.75l-0.42,-1.5l-1.76,-2.74l-0.36,-1.32l0.45,-3.31l-1.04,-1.77l0.19,-0.82l-0.19,-0.44l-1.15,-0.66l0.27,-3.41l-0.8,-2.96l-0.1,-4.66l0.26,-1.41l-0.36,-0.43ZM619.51,528.65l1.54,-0.89l1.27,-2.18l1.36,-1.26l0.07,-0.97l-0.77,-1.43l-2.49,-2.28l-2.0,-0.54l-1.01,0.36l-0.89,0.76l-3.05,4.55l-0.55,2.1l0.5,1.33l0.7,0.43l5.31,0.04Z", "name": "Dr\u00f4me"}, "FR-27": {"path": "M332.92,132.9l6.85,-1.33l2.9,-1.27l2.43,-2.0l2.13,1.51l2.15,2.4l1.37,0.48l2.33,-0.41l1.96,2.85l2.96,0.4l5.7,-1.35l0.69,0.25l2.91,2.44l2.44,1.07l0.61,0.63l0.04,1.17l-3.24,-0.47l-0.43,0.53l1.04,2.61l1.94,1.1l2.11,0.61l3.9,2.82l1.33,0.19l1.52,-0.46l0.26,-0.51l-0.39,-1.15l0.41,-0.82l0.89,-0.65l4.02,-0.98l0.71,-0.53l0.82,-1.31l1.09,-0.77l1.27,-0.37l4.38,0.27l1.04,-0.64l2.79,-5.08l1.55,-1.8l2.41,-0.87l8.83,1.1l8.42,3.24l2.29,-0.78l0.17,1.85l1.76,5.64l1.98,4.52l-0.91,-0.06l-0.81,-0.99l-1.21,-0.74l-0.85,0.03l-0.88,0.48l-0.92,1.37l0.38,1.6l-1.77,3.08l-2.9,8.4l-2.17,1.01l-7.75,1.57l-0.75,0.55l-0.17,1.05l0.69,1.52l-0.24,2.26l0.57,0.74l1.67,0.42l0.21,2.28l-2.16,1.15l-0.44,0.6l-0.21,0.94l0.52,1.61l-0.14,1.15l-0.79,0.76l-2.47,1.15l-1.51,1.17l-1.09,1.61l-0.67,1.82l-0.53,0.5l-4.94,2.31l-1.82,-0.62l-3.38,0.04l-2.24,-1.49l-1.25,-0.15l-0.48,0.48l-0.06,1.17l-0.31,0.42l-3.47,0.34l-2.42,2.37l-1.92,0.04l-5.91,1.45l-1.53,0.88l-1.84,1.69l-2.56,-0.94l-1.25,-1.56l-1.01,-0.49l1.29,-1.62l0.54,-1.51l-1.16,-2.36l-1.26,-0.82l-2.33,-0.57l-1.49,-0.86l-2.76,-3.3l-0.98,-2.3l-0.73,-0.39l-0.92,0.06l-2.15,0.77l-4.68,-1.11l-2.05,0.04l-1.51,-1.08l-0.27,-0.99l1.87,-3.64l0.25,-4.05l-0.86,-1.45l-2.12,-1.54l-0.49,-1.34l0.35,-0.36l1.57,0.06l0.59,-0.55l-0.39,-2.41l0.87,-2.03l-1.68,-3.19l-0.73,-2.11l-2.48,-2.25l-0.45,-0.94l0.06,-0.6l2.03,-0.96l0.42,-0.91l-0.82,-1.2l-2.45,-0.56l-1.1,-1.77l-0.07,-6.22l-0.51,-3.02Z", "name": "Eure"}, "FR-24": {"path": "M314.48,486.38l2.21,-3.24l-0.09,-0.97l-1.46,-1.8l0.11,-0.89l1.91,-2.6l-0.01,-1.78l1.7,-3.57l-0.17,-1.51l-1.03,-2.19l-1.3,-0.94l-3.17,0.0l1.56,-1.93l0.02,-0.71l-0.65,-1.26l0.58,-0.84l4.32,-2.1l0.99,-0.15l2.1,0.65l1.19,-0.32l1.22,-1.11l0.8,-1.83l2.77,-1.19l1.9,-1.66l0.55,-1.77l-0.03,-3.99l0.77,-2.85l0.66,-1.26l6.52,-4.29l1.11,-0.35l0.88,0.11l0.87,-0.54l4.41,-6.14l0.49,-1.81l0.23,-3.15l0.79,-0.39l1.26,-0.03l0.77,-0.51l2.26,-3.05l1.88,-1.54l1.09,0.73l4.71,0.47l2.19,2.61l-0.7,2.48l0.06,0.82l1.7,1.06l2.04,0.48l1.19,-0.1l0.81,-0.34l1.25,-1.36l1.25,0.8l3.25,-0.49l4.3,0.25l3.95,4.87l1.43,0.54l2.5,0.33l0.6,0.42l-0.17,0.68l-1.67,1.44l-0.1,0.87l0.38,0.6l4.23,2.02l1.93,-0.26l1.79,1.23l1.56,0.22l-0.04,0.74l-1.01,1.7l0.11,1.19l0.83,0.73l2.37,-0.06l-0.41,1.14l-1.53,0.87l-2.43,2.37l-0.63,3.22l0.4,0.65l1.93,1.39l-0.41,0.68l-1.65,1.24l-0.56,1.57l0.46,0.73l2.59,0.41l0.07,0.86l-0.73,1.62l0.87,1.3l2.81,1.17l3.51,-0.14l0.38,0.23l-0.49,2.38l0.26,0.87l1.61,2.88l1.96,2.11l-1.43,0.93l-0.47,1.47l1.31,4.0l-0.03,0.72l-0.72,1.24l0.17,1.64l-2.71,2.63l-1.66,2.62l-2.23,0.65l-0.87,1.1l-0.29,0.94l0.72,1.44l-0.03,0.57l-1.25,1.78l-4.31,2.66l-2.26,0.48l-1.02,0.79l-3.42,5.27l-2.22,1.89l-1.15,-1.69l-2.43,-1.73l-2.96,-1.21l-2.23,0.1l-3.98,2.49l-1.65,0.12l-1.09,-1.41l1.15,-1.09l0.19,-1.6l-0.74,-1.47l-1.44,-1.06l-1.33,-0.13l-3.49,1.12l-2.89,0.24l-1.12,-0.4l-0.76,-1.1l-0.75,-0.43l-2.73,-0.11l-0.98,0.27l-1.66,2.01l-0.66,0.39l-1.74,-0.76l-0.88,-0.04l-4.01,2.01l-1.21,0.29l-2.31,-0.83l-1.43,-2.24l-1.35,-2.99l-2.8,-3.51l-0.48,-1.07l-0.54,-2.25l1.77,-0.61l1.64,-1.81l-0.08,-0.54l-0.82,-0.74l-4.83,-1.21l-0.43,0.55l0.31,0.75l-2.6,2.49l-0.96,0.33l-8.53,-1.0l-2.05,-1.71Z", "name": "Dordogne"}, "FR-25": {"path": "M688.99,356.49l-3.01,-2.44l-0.3,-1.03l2.61,-2.75l-0.18,-0.94l-0.68,-1.03l-0.01,-0.89l6.56,-4.56l0.94,-1.19l-0.07,-0.55l-7.63,-6.19l-3.48,-0.87l-1.8,-2.69l-0.2,-3.0l-0.41,-1.24l-1.38,-2.14l-0.82,-0.72l-2.31,-1.03l-4.64,-0.91l-2.02,-1.7l-1.1,0.17l-1.14,1.02l-0.84,-0.15l-0.19,-0.71l0.21,-0.42l1.01,-0.87l0.65,-1.18l-0.05,-2.0l1.71,-1.85l0.57,-1.45l0.03,-0.97l-2.12,-3.71l-3.5,-2.24l-1.18,-2.95l1.46,-0.01l11.91,-6.07l4.21,0.52l4.83,-1.49l2.98,-2.96l1.96,0.09l1.28,-0.46l1.15,-1.98l0.7,-0.56l2.48,0.3l1.02,-0.19l1.05,-0.99l1.87,-4.02l1.59,-0.97l6.12,-0.77l2.06,1.6l0.7,-0.11l1.02,-0.95l3.1,1.45l1.21,-0.84l1.11,-2.3l0.58,-0.55l2.31,0.4l2.04,-1.31l2.08,-0.58l4.57,1.14l1.75,-1.38l1.11,1.02l2.86,-0.39l1.23,0.06l0.74,0.46l0.78,1.52l-0.56,1.79l0.03,0.89l1.44,4.33l-0.72,0.44l-0.08,1.24l-1.37,0.7l-1.06,1.16l-1.11,2.3l0.42,0.52l7.29,-0.62l1.04,-0.41l2.04,1.73l-0.29,0.52l-1.73,0.73l-0.94,1.05l-0.92,0.22l-1.15,1.02l-0.52,1.79l0.21,1.82l-4.0,2.53l-1.78,1.58l-1.19,1.68l-3.91,3.12l-1.76,0.53l-0.28,0.41l0.06,1.05l-0.9,0.44l-0.31,0.51l-1.37,0.42l-0.72,0.57l-0.9,1.31l0.59,1.61l-1.2,1.49l-3.98,2.62l-6.53,1.77l-3.04,1.51l-1.11,2.94l1.07,2.32l0.08,1.66l-1.81,4.3l0.94,1.51l-0.16,1.55l-1.18,1.03l-2.12,1.0l-2.15,1.96l-4.43,2.12l-8.29,6.58l-0.82,0.93l0.08,1.25Z", "name": "Doubs"}, "FR-95": {"path": "M472.15,160.47l-0.57,1.17l-0.34,2.93l-0.72,1.39l-1.7,0.89l-3.08,2.77l-1.79,0.51l-6.03,-1.25l-1.59,1.06l-1.49,0.13l-2.45,0.94l-2.51,1.9l-1.87,0.64l-1.91,2.31l-1.15,-0.18l-0.15,-1.53l0.8,-1.99l1.85,-1.25l0.69,-1.15l0.06,-1.58l-0.55,-0.62l-1.79,-0.69l-3.19,-0.24l-1.41,0.41l-0.96,1.17l-1.13,2.37l-0.81,0.54l-0.64,-0.2l-0.35,-0.74l0.37,-1.7l-1.09,-1.77l-0.96,-0.82l-2.38,-0.34l-3.48,1.12l-0.7,-1.24l-0.75,-3.02l-1.03,-1.11l-1.25,-0.42l-1.35,0.0l-1.35,0.31l-3.47,1.74l-0.79,-0.03l-0.51,-1.72l-1.59,-0.6l-2.87,-0.41l2.79,-8.08l1.58,-2.72l0.43,0.35l0.8,2.03l0.97,0.67l3.39,0.3l5.65,1.41l6.54,-0.78l5.01,-2.69l3.66,2.09l2.47,0.26l3.97,1.5l1.83,0.1l3.18,-1.39l11.5,5.26l0.91,0.03l0.87,-0.37l2.41,2.32Z", "name": "Val-d'Oise"}, "FR-94": {"path": "M466.21,178.65l2.11,0.61l2.35,1.33l2.16,1.85l0.38,4.44l-0.29,1.33l-1.36,1.9l-0.03,0.91l-1.22,-0.15l-1.91,-2.76l-1.06,-0.43l-6.59,0.94l-0.95,-0.2l-1.79,-1.39l-1.1,-0.45l-0.05,-2.34l0.67,-2.35l6.74,0.05l1.04,-0.63l0.91,-2.65Z", "name": "Val-de-Marne"}, "FR-93": {"path": "M472.66,181.23l-1.56,-1.32l-2.43,-1.37l-5.3,-1.53l-2.33,-2.22l-1.05,-0.36l-5.61,0.01l2.25,-0.99l0.64,-0.68l0.25,-1.61l-0.47,-0.74l1.16,-0.77l5.85,1.29l2.14,-0.65l3.11,-2.8l1.54,-0.8l0.44,0.13l0.66,0.88l-0.46,1.83l1.31,2.84l0.0,1.04l-1.18,3.47l-0.12,1.34l1.15,3.02Z", "name": "Seine-Saint-Denis"}, "FR-92": {"path": "M453.01,174.53l-2.13,2.61l-0.44,1.64l0.52,1.5l0.5,0.25l1.06,-0.33l4.2,1.5l-0.66,2.43l-0.15,1.7l0.24,1.0l-0.8,1.08l-0.44,-0.05l-1.28,-1.75l-1.79,-0.89l-4.42,-4.05l-0.76,-1.72l-0.05,-3.0l1.83,-2.23l1.79,-0.6l2.49,-1.89l2.33,-0.89l1.22,-0.09l0.43,0.49l-0.12,1.09l-3.59,2.2Z", "name": "Hauts-de-Seine"}, "FR-91": {"path": "M456.79,187.38l2.59,1.71l1.27,0.31l6.54,-0.94l0.61,0.19l1.97,2.81l0.97,0.45l0.87,-0.1l0.16,0.88l-2.22,2.01l-0.87,1.32l-0.24,4.09l-1.52,5.03l0.4,6.02l0.31,0.86l0.95,0.72l-2.17,1.51l-5.68,5.42l-0.27,1.05l-1.4,0.19l-2.83,-1.36l-0.86,0.16l-1.36,1.23l-1.4,0.35l-0.76,-0.38l-0.47,-1.03l-0.68,-0.61l-0.85,-0.52l-0.84,-0.03l-0.66,0.4l-1.38,1.92l-1.99,0.8l-8.7,1.71l-0.72,-0.42l-0.0,-0.42l1.65,-1.87l0.02,-0.74l-1.91,-1.77l-0.62,-2.84l-0.52,-0.9l-1.62,-1.5l-0.13,-3.53l2.05,-7.23l2.71,-0.1l1.11,-0.59l0.78,-1.27l0.5,-2.83l-0.54,-3.08l0.18,-1.2l1.3,-1.52l2.25,-0.6l0.6,-0.93l0.51,-2.22l0.82,-1.31l5.93,-1.53l0.8,0.81l1.61,0.75l1.6,1.97l1.04,0.01l0.7,-0.5l0.4,-0.78Z", "name": "Essonne"}, "FR-90": {"path": "M734.8,260.13l0.14,1.19l0.91,0.99l8.6,4.3l1.49,1.43l0.42,3.57l-0.51,1.44l-1.54,2.09l0.01,1.47l0.98,0.9l2.57,0.38l3.26,3.13l0.91,1.7l-0.38,2.33l-2.02,-0.53l-3.13,0.45l-2.79,-0.68l-2.25,0.79l-0.29,0.46l0.15,0.87l0.88,1.86l-1.14,1.05l-1.28,0.52l-1.43,-4.29l0.53,-2.44l-0.33,-1.39l-0.77,-0.9l-1.08,-0.61l-4.07,0.32l-0.83,-0.9l0.15,-1.25l-1.27,-1.96l-0.19,-3.89l-1.58,-4.63l0.26,-2.81l1.14,-2.01l2.88,-3.16l1.57,0.24Z", "name": "Territoire de Belfort"}, "FR-17": {"path": "M244.25,389.03l0.07,-0.62l-0.38,-0.5l-2.85,-0.2l-0.42,-0.73l1.36,-1.47l0.19,-0.43l-0.29,-1.3l0.52,-0.79l4.3,-2.4l0.54,-1.19l-0.81,-3.17l1.05,-1.33l0.86,-0.51l6.91,-1.45l0.17,0.65l-1.0,1.63l0.99,0.9l1.99,-0.09l4.86,-0.96l1.46,0.21l4.02,2.22l0.83,2.01l-0.02,0.89l-0.54,0.92l0.13,0.54l1.67,1.05l5.25,5.83l1.44,0.93l1.64,0.37l2.47,-0.03l1.07,0.48l2.44,2.27l4.27,-0.1l3.24,2.1l4.08,0.11l2.6,0.81l4.93,3.14l3.23,3.61l1.35,0.53l0.76,1.2l-0.59,0.7l-2.91,0.66l-0.35,0.33l-0.05,0.62l1.66,4.54l0.07,0.94l-0.24,1.04l-0.93,1.34l-1.71,1.68l-1.68,0.97l-1.08,-0.4l-1.42,-1.39l-1.56,-0.29l-5.31,1.39l-3.52,0.2l-1.54,0.5l-1.01,1.01l-0.55,2.06l0.41,0.49l2.22,-0.09l0.28,5.29l-0.58,2.52l0.05,1.06l0.3,0.36l2.01,0.51l5.09,3.43l-1.26,1.89l0.12,0.61l4.33,2.22l-1.19,2.13l1.11,2.92l-0.43,1.28l-0.85,1.14l-2.34,1.67l-0.02,0.63l1.71,1.72l-0.36,1.26l0.14,1.33l0.44,0.68l0.99,0.35l3.23,-0.63l4.16,1.92l1.86,0.07l-0.34,2.71l0.36,0.45l4.73,0.43l1.66,1.08l0.31,2.23l-0.73,1.33l0.67,1.71l-1.85,2.2l-1.43,0.56l-1.58,-0.52l-1.1,0.11l-2.6,1.0l-1.58,0.23l-3.9,-1.19l-2.34,-1.94l-1.85,-0.63l-1.88,-1.13l-2.58,0.24l-0.76,-0.22l-1.52,-2.46l-0.05,-3.59l-1.3,-1.65l-2.79,-1.63l-2.48,-0.15l-1.8,-0.57l-0.72,-2.44l-1.16,-1.24l-1.2,0.22l-0.92,1.41l-0.63,0.41l-4.5,-0.2l-0.74,-2.71l-2.06,-4.83l-2.62,-4.07l-2.88,-2.9l-8.68,-5.52l-0.48,-1.77l-2.47,-1.03l-3.22,-2.81l-4.04,-1.44l-2.76,-2.39l-2.34,0.33l-0.67,-0.24l0.99,-5.73l3.71,-0.99l0.98,0.04l3.79,3.91l1.46,1.04l4.4,1.81l0.48,-0.15l-0.05,-0.5l-1.38,-1.36l-5.52,-3.9l-1.78,-2.15l-0.36,-2.01l-0.73,-1.64l2.03,-1.93l0.85,-0.46l1.49,-0.18l0.47,-1.14l-0.1,-1.07l-0.95,-1.64l0.89,-0.77l-0.02,-0.68l-0.92,-0.54l-1.09,-2.34l1.82,0.24l0.92,-0.76l0.72,-1.95l-0.78,-1.03l-1.49,-0.65l-0.71,-3.23l-1.9,-1.16l0.55,-0.47l-0.04,-0.64l-1.96,-1.09ZM235.41,400.43l1.09,0.41l1.35,-0.28l0.64,0.57l0.15,2.37l0.68,0.73l-0.16,1.32l2.38,1.46l0.35,0.53l-0.41,3.62l-0.61,1.91l-0.67,0.91l-0.62,-0.25l-0.84,-2.53l-1.25,-2.19l-3.59,-3.54l-1.32,-0.83l-2.14,-2.59l0.33,-1.57l-1.72,-3.8l1.1,0.13l1.99,0.91l3.27,2.7ZM219.58,381.29l3.07,-0.67l0.94,0.18l0.51,0.48l-0.09,0.29l-1.95,-0.5l-0.35,0.62l1.41,1.8l1.75,-0.06l1.83,-0.69l0.25,0.77l1.02,0.43l6.19,0.88l1.32,0.74l1.5,1.94l-0.96,0.35l-3.3,-0.75l-5.87,-3.31l-3.6,0.51l-0.76,-0.27l-2.9,-2.73Z", "name": "Charente-Maritime"}, "FR-16": {"path": "M362.89,390.47l0.58,2.28l-0.05,2.42l0.47,1.18l2.26,2.74l0.64,0.29l1.45,-0.41l0.5,0.27l1.86,3.56l-1.18,1.27l-1.48,0.92l-1.24,0.43l-2.32,0.15l-0.58,0.36l-0.39,1.01l0.03,1.69l-1.25,6.55l-0.51,0.55l-1.1,0.02l-1.68,-0.77l-1.19,0.49l-0.97,1.76l-2.34,1.96l-1.37,2.98l-2.13,1.76l-2.19,2.98l-0.47,0.34l-1.88,0.21l-0.55,0.47l-0.33,0.71l-0.08,2.84l-0.44,1.62l-4.25,5.89l-2.66,0.63l-6.76,4.5l-0.78,1.47l-0.8,2.98l-0.04,4.61l-0.94,1.41l-1.05,0.85l-2.57,1.0l-0.63,0.64l-0.63,1.62l-0.92,0.86l-0.88,0.24l-2.68,-0.62l-4.63,2.09l-0.46,-2.32l-1.9,-1.24l-4.6,-0.47l0.35,-2.74l-0.39,-0.45l-2.07,-0.04l-4.41,-1.97l-3.64,0.52l-0.36,-1.43l0.32,-1.55l-0.46,-0.82l-1.1,-0.91l1.97,-1.41l1.07,-1.44l0.49,-1.76l-1.1,-2.64l1.3,-2.17l-0.15,-0.57l-4.28,-2.2l1.22,-1.86l-0.09,-0.59l-5.52,-3.72l-1.92,-0.51l0.55,-3.24l-0.25,-5.68l-0.42,-0.42l-2.13,0.09l0.3,-1.25l0.86,-0.86l1.22,-0.36l3.51,-0.2l5.08,-1.38l1.34,0.25l1.18,1.25l1.5,0.6l2.31,-1.18l1.82,-1.8l0.99,-1.44l0.34,-1.31l-0.1,-1.28l-1.64,-4.51l3.05,-0.82l0.85,-1.01l0.03,-0.47l-0.7,-1.1l2.14,-1.0l3.16,-5.24l2.77,-2.14l3.15,-1.37l2.74,-0.38l2.49,1.27l1.37,-0.59l1.27,0.36l2.69,1.78l1.37,0.37l7.15,-0.07l2.62,0.71l1.14,-0.58l0.82,-1.73l-0.13,-0.5l-1.38,-0.98l1.45,-2.09l1.35,-0.14l3.32,3.2l3.03,0.6l3.05,-0.72l3.64,-3.43l4.95,0.29Z", "name": "Charente"}, "FR-15": {"path": "M458.84,445.76l1.95,-0.35l3.03,1.58l1.95,0.27l0.86,-0.25l0.6,-0.61l0.62,-1.58l1.16,-4.44l0.73,-0.04l3.18,1.89l3.22,0.73l1.42,0.74l2.43,3.63l2.81,0.16l5.14,-0.78l3.9,1.73l0.89,0.93l1.96,3.79l3.01,1.68l2.83,-0.95l3.8,-3.67l0.38,1.88l-0.06,2.68l0.45,0.41l3.22,-0.38l1.54,0.27l1.42,0.66l0.39,0.49l0.46,2.74l1.75,2.34l0.32,0.9l0.47,4.09l1.0,1.32l2.22,0.5l0.12,0.72l-2.16,2.18l-0.27,1.3l0.38,1.24l3.69,3.59l0.61,1.24l0.11,1.01l-1.67,0.38l-3.17,1.81l-1.69,-0.0l-0.85,0.32l-4.65,3.8l-0.58,0.1l-1.2,-1.57l-0.6,-0.32l-1.46,0.59l-0.57,0.8l-0.62,3.19l-1.64,1.03l-0.58,0.99l-1.42,4.71l-0.35,2.6l-1.83,2.78l-0.72,2.01l-1.6,-1.21l-1.15,-1.79l-0.53,-3.47l-0.56,-1.36l1.14,-0.77l-0.12,-1.16l-2.88,-1.38l-0.69,-1.95l-2.44,-3.26l-0.78,-0.22l-2.44,0.35l0.05,-1.49l-0.34,-1.19l-1.91,-2.42l-1.03,-0.42l-8.44,7.7l-0.74,2.6l-2.44,3.55l-0.58,2.41l-3.68,3.99l-0.93,0.45l-1.89,0.2l-3.45,-0.1l-1.45,0.62l-1.19,-1.14l-1.48,-0.11l-5.33,1.64l-0.67,1.8l-0.21,-0.03l-0.95,-1.01l-0.89,-3.39l-1.7,-1.05l1.55,-5.49l-0.1,-0.85l-1.32,-2.73l-3.07,-4.61l-0.85,-5.71l-0.6,-1.16l0.94,-0.4l2.23,-0.24l1.11,-0.74l0.08,-1.24l-1.43,-2.43l-0.11,-0.76l3.2,-2.58l2.85,-5.59l0.22,-1.14l-1.07,-2.31l0.11,-1.37l2.59,-1.98l0.51,-1.87l3.08,-1.33l2.04,-2.9l1.09,-0.69l1.42,-3.08l-0.14,-1.07l-0.95,-0.99Z", "name": "Cantal"}, "FR-14": {"path": "M332.14,133.05l0.5,2.91l0.12,6.48l1.43,2.16l2.42,0.54l0.46,0.57l-0.57,0.58l-1.68,0.72l-0.23,1.35l0.62,1.25l2.42,2.18l0.67,1.99l1.53,2.55l-0.8,2.37l0.44,2.09l-1.99,0.1l-0.58,1.01l0.65,1.85l2.18,1.62l0.66,1.06l-0.48,4.27l-1.02,-1.0l-1.2,-0.16l-2.3,1.38l-0.84,0.1l-1.86,-0.85l-0.91,-1.19l-1.02,0.1l-1.91,2.15l-2.8,0.09l-2.06,1.2l-1.53,-1.99l-1.73,0.25l-3.13,3.65l-11.86,5.98l-10.27,-2.39l-1.31,0.46l-0.43,1.35l-0.43,0.43l-1.16,-0.68l-2.68,-2.58l-2.04,-0.34l-3.2,1.7l-7.41,1.57l-4.44,-0.95l-1.37,1.01l-0.13,0.93l0.58,0.88l-0.66,0.7l-4.12,0.97l-1.09,0.66l-1.67,1.7l-1.01,0.33l-3.39,-1.55l-3.63,-0.84l-2.55,0.72l-2.87,-0.11l-2.72,-0.89l-0.41,-1.55l-0.54,-0.63l-2.19,-0.52l0.8,-1.64l1.8,-1.44l2.54,-0.96l1.41,-1.45l0.05,-1.06l-1.6,-1.58l-0.02,-0.85l0.4,-0.78l0.65,-0.34l2.53,0.58l1.24,-0.22l2.04,-1.45l3.38,-3.42l1.9,-0.87l0.2,-0.52l-0.48,-1.11l-0.84,-5.35l-2.31,-4.25l0.77,-3.01l-0.34,-0.92l-0.94,-0.21l-3.67,1.17l-1.36,-0.09l-6.82,-6.1l-0.76,-1.51l1.05,-2.02l0.04,-1.46l0.93,-0.54l-0.09,-0.79l-0.48,-0.6l0.33,-0.79l0.91,-0.85l0.91,-0.36l7.94,0.35l7.3,2.35l10.46,0.54l4.16,0.79l2.31,-1.02l4.08,1.27l4.12,0.0l2.91,1.4l3.03,0.6l5.69,2.93l1.91,-1.18l9.72,-1.95l2.93,-1.18l1.7,-1.25l1.45,-0.37l2.06,-2.35l3.94,-2.42l7.63,-1.46Z", "name": "Calvados"}, "FR-13": {"path": "M574.87,589.37l0.92,-0.18l1.37,-1.04l2.17,-0.54l3.45,-2.45l1.63,-0.49l0.58,-1.36l1.97,-0.33l0.5,-0.38l0.72,-1.53l-0.09,-0.84l-1.94,-0.6l1.3,-2.75l1.5,-1.9l1.28,-0.92l2.03,-0.52l3.72,1.32l1.03,-0.3l0.65,-1.54l-0.04,-1.78l1.98,-4.92l-0.49,-4.74l5.08,-3.33l2.62,-1.09l7.98,2.74l3.77,2.11l7.34,6.02l6.46,2.82l3.93,0.02l4.9,0.69l2.46,2.09l2.3,1.25l7.19,1.94l3.24,0.25l2.63,-1.13l1.36,-1.05l4.1,-0.86l2.52,-1.83l0.87,0.32l1.2,2.08l0.89,0.51l-1.04,1.57l-5.2,1.45l-1.69,2.68l0.17,2.27l2.54,2.31l0.04,0.87l-0.92,2.93l0.18,1.74l3.7,4.62l-0.86,0.23l-2.91,-0.16l-1.58,0.6l-0.22,0.53l1.07,2.83l-0.63,1.29l-0.12,1.51l0.56,1.02l1.68,-0.02l1.52,0.96l0.62,1.17l-0.73,0.94l-1.96,0.9l-1.32,1.08l-0.82,1.73l-0.43,2.15l-2.32,-0.23l-1.22,1.76l-2.05,-0.53l-1.98,-2.66l-0.96,-0.55l-1.48,0.47l-6.6,-0.49l-1.53,0.31l-1.02,-0.43l0.34,-1.68l0.94,-1.98l-0.08,-0.43l-0.62,-0.64l-1.13,-3.95l-2.92,-1.81l-3.73,1.99l-4.48,-0.09l-2.35,0.26l-3.62,-0.16l-1.71,-0.5l-1.11,-1.51l-0.44,-1.53l1.11,-1.82l1.71,-0.86l5.36,0.0l1.8,-0.48l2.62,-2.32l0.89,-2.0l-0.21,-1.77l-0.6,-0.3l-3.34,1.54l-1.34,-0.21l-1.17,-1.2l-0.81,-2.2l-1.53,-0.53l-1.81,-0.01l-1.47,-1.47l-0.5,0.08l-0.49,0.59l-0.81,2.82l0.42,1.59l2.15,1.63l0.63,1.61l-0.57,1.4l-1.25,0.8l-1.63,0.16l-4.46,-1.86l-2.21,1.1l-1.58,0.35l-0.71,0.61l-0.46,1.44l0.98,2.54l0.42,0.33l0.81,-0.05l-1.29,0.81l-1.31,-2.62l-2.66,-1.4l-1.98,-1.65l-0.86,-1.8l-0.02,-5.7l-1.08,-2.53l-0.85,-1.1l-1.19,-0.67l-0.59,0.35l0.0,0.46l2.09,3.43l0.0,5.28l0.86,2.64l4.89,4.15l-0.11,1.02l-9.05,-0.1l-4.41,-0.9l-1.34,-0.7l-0.03,-0.85l1.11,-1.09l0.22,-1.41l-0.65,-1.13l-1.58,-1.03l-2.76,-0.96l-6.31,0.6l-10.72,-0.78l1.08,-2.45Z", "name": "Bouches-du-Rh\u00f4ne"}, "FR-12": {"path": "M496.69,503.56l5.22,5.97l1.03,1.89l-0.19,2.29l0.3,1.4l3.32,4.5l-0.18,2.17l-0.64,1.51l-0.08,1.13l0.32,2.23l1.01,1.78l-1.38,2.78l0.09,1.06l1.58,0.39l3.9,2.06l0.78,0.87l0.34,1.61l0.66,0.45l6.25,-0.23l1.47,0.82l0.29,0.68l-1.87,1.21l-1.04,1.36l-0.22,2.18l-2.12,1.24l-0.14,0.98l1.39,1.0l1.66,-0.16l1.15,1.08l2.11,0.24l2.74,1.92l0.74,1.08l-5.4,4.95l-1.0,2.67l-1.08,0.84l-2.91,0.28l-1.88,1.2l-0.58,0.8l-0.32,1.84l-1.22,1.35l-1.52,0.35l-5.75,-0.72l-2.03,0.54l-0.42,0.6l-0.29,1.6l0.73,1.98l-0.44,1.8l0.13,1.84l-0.64,1.29l-1.29,0.19l-2.18,-0.74l-2.67,0.48l-0.59,-1.83l-1.29,-1.26l-5.47,-1.39l-3.0,1.45l-1.79,0.45l-1.91,-0.45l-2.02,-1.27l-3.54,-3.31l-1.66,-2.27l-1.18,-2.69l-0.93,-3.79l-2.18,-2.52l0.34,-2.35l-2.77,-4.03l-1.28,-1.09l-2.75,-0.57l-0.93,-2.29l-1.02,-1.08l-2.26,-1.19l-2.6,-0.58l-1.68,-1.39l-2.52,-0.18l-1.78,-1.74l-3.12,-1.79l-1.43,-0.3l-1.58,0.16l-5.48,2.79l-1.48,0.37l-1.08,-1.93l-3.23,-0.97l-0.49,-1.35l0.62,-1.43l2.44,-1.04l0.72,-2.26l-0.35,-0.49l-4.72,-0.46l-1.09,-0.58l0.05,-2.42l1.74,-1.34l0.2,-1.22l-2.54,-3.9l-1.55,-5.39l5.46,-2.32l3.69,-2.65l4.47,-2.28l4.69,0.38l2.58,-0.64l1.69,-1.09l0.08,-1.68l0.48,-1.65l0.74,-0.34l4.28,-1.18l1.0,0.08l1.12,1.11l0.62,0.08l1.36,-0.63l3.34,0.11l1.98,-0.21l1.17,-0.54l3.99,-4.3l0.61,-2.45l2.43,-3.52l0.63,-2.44l7.94,-7.42l2.16,2.45l0.35,2.78l0.85,0.31l2.55,-0.29l2.18,2.96l0.8,2.12l1.02,0.73l1.85,0.66l-1.03,0.82l-0.2,0.72l0.58,1.36l0.56,3.56l1.34,2.1l2.09,1.6Z", "name": "Aveyron"}, "FR-11": {"path": "M447.59,651.06l0.02,-0.92l-0.7,-1.19l-3.09,-1.57l-1.3,-1.89l-0.78,-0.52l-1.45,-0.09l-4.97,0.99l-3.19,-1.51l-0.09,-2.0l-0.33,-0.79l-1.13,-1.02l-1.47,-0.6l1.45,-2.0l2.2,-0.09l2.98,-1.12l0.66,-0.91l-0.7,-3.27l-1.98,-1.59l0.22,-0.47l2.52,-0.94l0.35,-0.87l-1.18,-4.24l-1.84,-1.68l1.01,-1.4l-0.13,-1.62l-0.81,-1.39l-1.37,-1.06l-2.78,-0.31l-2.44,-1.23l-5.03,-1.67l-2.51,-2.02l-0.25,-1.95l-0.77,-1.95l0.54,-2.7l1.15,-1.61l0.25,-1.25l2.04,-0.61l1.77,-0.12l1.18,-0.91l0.17,-0.74l-0.43,-1.26l0.08,-0.79l1.5,-1.66l0.46,-1.21l1.39,0.39l0.18,1.21l0.84,0.58l4.13,-1.6l4.75,-0.59l1.8,1.66l1.22,0.49l1.49,0.09l3.87,-0.65l2.63,1.32l1.45,-0.69l0.36,-1.12l-0.32,-1.36l0.34,-0.67l0.77,-0.52l7.02,1.26l5.86,-0.38l6.37,0.52l1.03,0.55l-1.22,1.31l-0.84,1.82l0.3,1.84l1.51,1.68l1.85,1.41l1.87,0.88l1.81,-0.36l1.11,-1.37l1.13,3.01l2.95,1.49l0.41,-0.07l5.14,-4.34l0.88,-2.31l-0.02,-2.2l0.19,-0.52l0.5,-0.11l0.44,0.27l2.43,4.27l0.78,0.62l1.28,0.31l2.93,-0.3l-0.01,1.4l0.71,1.15l3.08,0.45l3.07,1.73l2.64,0.07l2.13,0.47l2.89,1.67l-1.14,1.47l-2.59,2.25l-1.5,2.23l-2.52,2.24l-2.67,5.89l-1.95,6.31l0.17,0.94l0.79,0.58l-0.47,5.83l-8.86,-4.09l-1.6,-1.19l-0.82,-0.21l-4.72,1.87l-2.6,3.06l-0.65,0.56l-1.43,0.42l-20.24,-0.95l-2.07,0.73l-0.85,1.3l1.16,5.96l0.02,0.97l-0.39,0.66l-1.93,0.88l-2.6,-0.26l-3.16,3.14l-1.43,0.99l-0.93,-0.56Z", "name": "Aude"}, "FR-10": {"path": "M542.23,201.62l1.67,2.04l2.4,0.7l3.77,0.44l0.48,-0.31l0.39,-1.88l0.75,-1.38l1.18,-0.59l7.36,-6.27l2.86,-0.72l1.4,-2.14l2.16,0.14l4.84,-1.39l7.15,0.57l0.36,0.37l0.36,1.45l-0.67,4.15l0.66,1.26l12.12,6.47l1.16,-0.11l2.23,-1.24l1.26,-0.24l3.99,1.31l-0.44,2.54l-1.43,2.0l-0.13,0.94l0.39,0.68l2.31,1.4l2.28,2.89l2.18,1.21l1.32,1.98l2.99,1.23l-0.35,2.17l1.65,1.75l0.92,7.61l-1.03,1.78l-0.12,1.84l-0.85,2.37l-0.61,0.38l-3.32,-0.77l-2.22,0.32l-1.04,0.8l-0.98,1.93l1.31,2.94l-1.01,1.36l-2.19,0.96l-2.98,-0.51l-1.76,0.38l-1.47,1.25l-0.22,1.84l-0.81,0.45l-13.17,1.5l-2.39,1.7l-0.5,0.01l-1.12,-0.71l-1.95,-2.64l-0.78,-0.38l-0.55,0.41l-0.26,2.11l-1.42,-0.99l-1.02,-0.13l-0.91,0.39l-1.31,1.25l-1.75,0.05l-1.93,-0.43l-1.85,1.2l-2.25,-0.63l-2.87,0.17l-1.97,-0.36l-0.57,-0.86l0.08,-2.22l-0.52,-0.94l-0.98,-0.2l-1.67,0.35l-1.41,-0.73l1.56,-0.67l0.12,-0.94l-4.65,-7.0l-1.91,-1.9l-1.19,-2.29l-1.36,-0.51l-0.78,0.28l-0.57,1.04l-1.58,0.12l-2.82,-1.93l-2.05,-0.84l1.35,-1.41l0.55,-1.05l-0.39,-3.31l-0.49,-0.96l-5.62,-6.39l-3.0,-1.66l-2.3,-0.01l-0.47,-2.37l-1.12,-0.92l-0.15,-0.51l0.56,-2.27l-0.63,-1.75l1.81,-1.89l-0.93,-1.96l2.55,-0.54l0.75,-0.59l1.02,-2.47l0.98,-1.32l2.57,-1.91l1.37,-0.09l1.99,2.7l1.48,0.1l0.62,2.61l0.57,0.31l1.15,-0.57l2.83,-0.55l0.95,-0.81Z", "name": "Aube"}, "FR-2B": {"path": "M840.29,672.01l0.19,-0.25l0.97,0.12l1.07,-2.21l1.86,-0.26l0.74,-0.59l0.25,-1.79l0.9,-1.48l-0.38,-0.73l-0.69,-0.15l0.49,-1.84l0.66,-0.7l2.07,-0.66l0.26,-0.57l-0.29,-0.57l0.29,-1.57l1.09,-0.31l1.75,0.99l1.22,-0.28l0.96,-0.92l0.83,-2.39l1.69,-0.12l3.84,-1.79l6.8,-1.3l2.03,-0.92l0.4,-1.61l3.75,-3.54l2.7,-0.22l4.3,0.91l1.55,0.91l1.19,2.4l0.37,0.25l0.75,-0.18l2.19,-3.35l0.93,-2.22l-0.53,-1.78l0.44,-1.29l-0.33,-1.53l-1.69,-2.25l1.55,-2.06l-0.41,-1.45l0.2,-1.05l1.75,-1.77l0.11,-1.69l-1.01,-1.98l0.14,-1.93l0.77,-0.45l2.42,-0.01l0.97,-0.35l0.69,0.85l1.59,0.95l-0.62,1.65l0.32,1.04l0.64,0.74l-0.24,1.34l1.15,6.71l-0.1,2.14l-1.97,6.87l-0.02,4.12l-0.45,1.01l0.91,0.83l0.24,0.8l-0.14,1.25l1.14,1.91l2.33,1.17l0.51,-0.65l0.25,0.54l0.31,7.85l0.73,1.54l-0.6,1.91l-0.19,2.68l1.67,5.79l-0.45,9.13l0.43,1.76l-0.38,2.31l-0.37,0.56l-1.68,1.43l-1.61,2.76l-5.49,7.01l-0.44,6.49l-0.8,-0.12l-1.39,0.44l-2.65,1.71l-4.61,-1.41l0.81,-2.11l0.12,-1.38l-1.48,-3.98l0.03,-4.84l-0.41,-0.48l-3.1,0.15l-0.62,-0.31l-0.74,-1.15l-0.82,-3.61l-4.08,-4.46l-1.23,-3.5l-0.78,-0.4l-2.41,-0.33l-6.35,-3.95l-1.27,-4.03l-1.02,-0.49l-2.14,0.51l-6.63,-1.58l-5.01,-2.35l-2.75,-0.26Z", "name": "Haute-Corse"}, "FR-2A": {"path": "M838.53,672.37l1.83,0.51l2.41,0.15l5.06,2.36l6.76,1.61l2.26,-0.49l0.44,0.27l0.67,2.74l0.64,1.31l6.51,4.05l2.96,0.55l1.14,3.37l4.05,4.41l0.77,3.47l0.9,1.47l1.16,0.59l2.69,-0.13l0.06,4.61l1.47,3.89l-0.09,1.14l-0.94,2.44l0.24,0.52l5.33,1.6l2.87,-1.77l1.24,-0.39l0.58,0.13l0.47,5.63l-0.08,5.26l-1.16,0.85l-0.93,1.45l0.36,0.56l0.38,0.0l-0.34,1.47l-1.74,0.45l-0.13,1.0l-2.1,-0.31l-0.71,0.1l-0.34,0.46l0.08,0.47l-0.87,1.33l0.15,0.53l1.18,0.53l2.94,-0.89l0.29,0.34l-0.16,0.77l-1.25,1.25l-1.71,0.61l-1.08,1.44l-0.92,0.16l-0.29,0.57l0.28,0.85l-0.28,0.85l0.82,0.98l-0.71,0.84l0.01,0.67l-2.14,1.17l-0.98,0.12l-0.35,0.4l0.0,0.54l0.75,0.99l-0.59,0.7l-0.15,0.77l0.54,0.37l1.71,-1.1l-1.36,2.96l-0.77,0.37l-0.56,-0.17l-1.56,-1.26l-4.09,-1.13l0.5,-1.41l0.63,-0.25l0.15,-0.7l-3.04,-1.76l0.64,-0.96l0.0,-0.46l-0.51,-0.38l-2.15,1.21l-0.36,-0.76l-1.07,0.38l-0.9,-0.82l-1.69,-0.51l-2.48,-0.05l-1.61,-1.23l-1.4,-0.31l-0.77,-0.93l-1.36,-0.18l0.42,-0.48l-0.28,-0.83l-3.45,-1.04l0.22,-1.42l-0.44,-0.73l-0.5,-0.17l1.06,-2.73l1.05,0.33l3.28,-1.35l0.76,-0.71l0.25,-0.88l2.21,-1.71l-0.28,-0.67l-8.03,-1.29l-0.49,-0.46l0.45,-1.23l-0.37,-0.54l-1.66,0.01l-3.15,0.9l0.15,-0.36l-0.39,-0.56l-1.58,-0.18l1.37,-0.22l1.43,-1.12l0.36,-1.08l-0.11,-0.68l-0.53,-0.48l2.22,-0.4l2.07,-1.1l0.18,-0.51l-0.3,-0.7l-0.72,-0.7l1.32,-0.68l0.04,-0.58l-0.51,-0.92l1.44,-2.22l-1.63,-2.04l-1.3,-0.47l-1.37,0.15l-3.3,1.36l-2.54,0.15l-1.78,0.63l-0.16,-0.36l0.64,-1.35l-0.36,-1.17l-1.16,-1.23l2.2,-0.2l1.3,-0.47l1.04,-1.45l-0.12,-0.56l-0.44,-0.27l0.27,-0.44l1.08,-0.73l3.47,-1.33l0.38,-0.36l0.09,-0.92l-0.43,-0.78l-0.97,-0.68l-1.71,-2.86l-0.82,-0.13l-1.52,0.37l-0.72,-1.14l-1.11,-0.59l-2.23,-0.31l0.1,-0.87l-0.66,-0.46l0.63,-0.4l0.19,-0.89l-0.4,-0.4l-0.84,0.0l0.49,-1.2l-0.24,-0.73l-0.53,-0.37l0.18,-0.95l-1.46,-1.0l2.12,-0.06l1.46,-0.81l2.49,-0.44l2.27,-0.94l0.28,-0.91l-1.26,-1.16l-2.16,-0.95l-0.59,-1.02l-0.54,-0.04l-0.76,0.57l-0.02,-0.4l1.8,-0.96l0.05,-0.67l-1.61,-1.07l-1.41,0.12l-1.48,0.55l-0.55,-1.32l-0.01,-0.82Z", "name": "Corse-du-Sud"}, "FR-19": {"path": "M391.83,442.28l1.35,-1.87l1.52,-1.17l3.83,-0.97l2.33,-1.62l0.94,-1.27l1.29,-2.82l3.51,1.97l4.0,-0.33l8.09,-5.41l3.21,-1.16l2.32,-2.4l0.78,-0.11l1.2,0.95l3.0,-0.08l2.35,-1.05l0.13,-0.63l-0.36,-0.41l4.47,-0.61l1.76,-2.84l1.97,-1.47l1.24,0.07l2.42,1.87l4.27,0.65l7.14,3.9l1.73,-0.03l0.97,-0.41l2.02,-2.4l4.42,0.27l1.5,-0.64l1.68,-1.29l1.28,1.41l0.51,1.09l-0.24,3.82l-0.55,0.67l-1.79,0.8l-1.06,3.12l0.17,0.96l1.69,2.26l0.25,4.1l1.11,1.0l-1.72,5.84l-0.79,0.43l-1.66,-0.23l-3.58,-1.66l-1.74,0.31l-0.64,0.49l-0.08,0.65l0.95,0.93l0.15,0.84l-1.24,2.6l-1.06,0.64l-1.96,2.84l-3.1,1.35l-0.66,2.04l-2.65,2.08l-0.16,1.81l0.96,1.75l-0.04,1.26l-2.76,5.43l-2.8,2.03l-0.55,0.87l0.17,1.26l1.47,2.59l-0.74,0.72l-2.13,0.22l-1.44,0.59l-4.52,0.2l-1.94,0.88l-1.38,-0.66l-0.83,-0.05l-4.06,1.88l-3.12,0.95l-1.23,-0.04l-3.73,-1.98l-1.24,-1.82l-2.13,-1.68l-3.13,-1.75l-1.92,-0.51l-2.06,0.56l-0.77,-1.17l-0.7,-0.11l-3.75,2.17l-0.61,-0.97l-1.41,-1.24l-1.53,-2.72l-0.16,-1.05l0.45,-2.03l-0.39,-0.62l-0.76,-0.29l-3.42,0.15l-1.37,-0.4l-1.11,-0.64l-0.51,-0.73l0.71,-1.38l-0.24,-1.53l-0.65,-0.48l-1.73,0.03l-0.5,-0.28l0.37,-0.93l2.04,-1.69l0.24,-0.77l-0.56,-0.85l-1.85,-1.47l0.6,-2.56l1.28,-0.93l0.89,-1.14l1.62,-0.95l0.73,-1.34l-0.14,-0.73l-0.54,-0.5l-1.94,0.2l-0.72,-0.38l-0.05,-0.67l0.94,-1.5l0.23,-1.06l-0.86,-0.96l-1.17,-0.07Z", "name": "Corr\u00e8ze"}, "FR-18": {"path": "M490.39,283.47l1.8,3.36l1.35,1.6l0.08,0.79l-0.52,2.31l-0.86,1.93l-2.02,2.99l-0.08,0.93l0.92,1.57l1.73,0.94l3.6,3.47l0.78,3.4l1.43,3.27l1.23,3.95l-0.07,3.7l2.22,2.27l0.43,5.38l-1.31,4.71l1.16,3.29l-2.28,4.15l-0.31,1.64l-3.08,-0.17l-2.72,0.77l-4.06,2.3l-1.68,2.09l-2.02,-0.32l-1.56,1.24l-2.13,-0.62l-0.64,-0.74l-0.84,-0.12l-4.12,3.34l-1.44,0.06l-0.57,0.31l-0.14,1.87l-1.92,-0.0l-0.79,0.54l-0.1,0.83l1.0,1.52l-0.51,1.0l0.05,1.2l1.67,2.1l0.24,1.43l-5.01,1.3l-7.99,0.81l-3.73,1.66l-1.58,1.88l-1.55,0.74l-2.19,3.55l-6.26,-0.22l0.78,-1.45l2.17,-2.14l0.28,-1.08l-0.07,-1.22l-0.65,-1.92l-1.5,-1.65l-0.02,-0.65l1.42,-2.43l0.37,-2.53l-0.24,-1.1l-0.78,-1.0l-1.58,-0.98l0.11,-2.26l-0.63,-0.94l-1.04,-0.53l-2.48,-0.4l-0.73,-0.83l0.44,-1.13l1.97,-1.4l0.44,-0.97l-0.37,-1.39l-1.89,-1.35l-0.19,-0.92l0.24,-1.28l1.08,-2.18l1.97,-1.79l0.3,-0.97l-0.68,-1.15l-2.11,-1.19l-0.46,-0.89l0.85,-3.02l0.0,-1.33l-0.55,-1.28l-2.59,-2.57l0.65,-2.75l-0.34,-1.74l-0.76,-0.77l-1.4,-0.58l-3.25,-0.31l-4.86,1.54l-6.14,-1.76l2.79,-2.55l0.88,-1.85l0.0,-1.77l1.71,0.31l1.27,-0.24l0.99,-0.69l0.35,-0.65l0.21,-2.35l1.53,-1.56l3.38,1.02l3.17,0.36l3.19,-0.39l2.5,-1.37l0.55,-0.86l0.1,-1.08l-1.75,-4.11l-0.26,-2.32l0.2,-0.97l1.0,-1.16l0.66,-0.24l3.91,1.21l1.76,0.01l0.37,-0.26l0.85,-2.33l-0.32,-2.41l-0.49,-1.05l-1.46,-1.65l-1.55,-3.15l-1.22,-0.7l-2.39,0.04l-0.52,-0.53l0.22,-1.85l1.64,-1.09l6.44,-1.59l1.33,0.16l3.11,1.74l1.71,0.36l3.28,-1.04l0.88,0.11l2.95,2.37l1.53,0.4l3.18,-0.09l0.94,0.6l2.58,3.54l2.15,2.02l1.37,0.65l1.81,-0.28l1.67,-2.81l0.94,0.08l2.84,2.04l1.46,-0.15l3.11,-1.59Z", "name": "Cher"}, "FR-88": {"path": "M751.57,206.43l-0.94,1.25l-0.59,7.58l-0.82,2.89l0.48,1.0l1.16,0.64l3.71,0.29l1.04,0.99l-0.01,0.68l-7.65,10.83l-0.6,1.6l0.78,1.75l-0.29,1.31l-1.35,1.61l-3.07,5.74l-3.51,4.22l-0.66,3.17l-1.65,3.3l0.55,2.46l-0.81,0.78l-2.2,0.86l-1.5,-0.16l-6.14,-4.25l-3.36,-1.49l-2.89,-3.05l-1.0,-0.52l-0.66,-0.08l-0.72,0.37l-1.82,2.29l-2.17,0.57l-2.22,-0.33l-5.28,-2.92l-2.42,-0.87l-3.37,0.19l-1.11,0.31l-1.36,0.92l-2.15,0.18l-3.33,-1.51l-0.16,-1.78l-1.1,-1.33l-1.36,-0.79l-3.03,-0.56l-1.94,0.42l-2.72,2.89l-3.08,1.95l0.04,-2.28l-0.66,-0.67l-1.05,0.29l-1.69,2.58l-1.46,0.73l-2.76,-2.68l-1.27,0.12l-1.23,0.64l-0.33,-0.86l0.11,-2.75l-0.67,-1.26l-3.49,-1.97l-4.37,-3.63l0.64,-1.84l1.18,-2.01l0.51,-2.47l1.45,-1.47l-0.5,-1.38l-3.56,-2.51l-0.06,-1.62l-0.6,-1.04l-1.48,-0.72l-2.31,0.06l-3.01,-3.86l-1.61,-1.35l-2.24,-0.13l-0.71,0.34l-0.86,1.14l-0.51,0.13l-0.78,-3.46l1.77,-2.56l1.42,0.46l1.57,-0.51l3.0,-1.66l3.71,-0.07l3.32,-2.0l2.83,0.26l1.3,-0.32l1.14,-0.94l0.65,-1.14l0.82,0.57l0.72,-0.1l1.72,-0.97l1.33,-0.16l1.35,0.19l1.94,1.21l-0.3,2.25l-1.49,2.14l0.21,1.01l4.75,2.05l-0.31,1.39l0.26,0.46l1.87,0.64l8.74,-0.33l1.96,-0.8l0.25,-0.39l-0.09,-2.23l1.21,0.45l5.1,-0.33l1.64,-2.43l1.06,1.35l1.64,0.83l1.97,0.22l1.36,-0.21l-0.09,0.7l0.45,0.44l0.93,-0.13l1.95,-1.32l4.3,-0.37l6.3,-4.24l1.45,-0.08l0.65,2.62l1.05,1.0l4.61,0.62l4.63,1.54l3.31,-2.91l1.13,1.02l0.47,0.05l1.7,-1.01l3.3,-3.19l5.2,-3.55l1.87,-0.35l2.98,1.42Z", "name": "Vosges"}, "FR-89": {"path": "M572.78,248.31l2.01,2.7l1.73,0.94l-1.28,3.9l-0.11,1.94l0.52,0.4l2.09,-0.18l0.54,0.22l1.64,4.91l-0.53,0.88l-4.51,2.33l-0.11,3.62l-0.69,2.29l-1.52,1.8l-1.11,2.61l-3.54,5.68l-1.1,0.73l-0.52,1.14l-0.07,3.69l-0.72,0.98l-1.66,0.74l-0.61,0.72l-0.05,1.75l0.85,1.97l1.28,0.9l0.18,1.68l-3.19,0.02l-1.92,2.05l-0.77,0.04l-1.21,-0.94l-0.67,-3.65l-0.98,-1.49l-0.51,-0.13l-3.89,1.9l-0.56,-0.31l-0.04,-0.63l0.52,-1.46l0.01,-1.16l-0.78,-1.25l-0.73,-0.22l-1.49,0.75l-0.85,2.16l-0.57,0.68l-5.63,-1.91l-4.42,-3.53l-1.2,-0.44l-2.2,-0.2l-1.5,-2.6l-1.93,-1.61l-2.41,-3.11l-0.66,0.33l0.14,2.56l-0.3,2.07l-4.03,-1.06l-1.63,0.16l-2.81,2.01l-0.62,-0.05l-2.71,-1.56l-2.22,0.8l-0.72,-0.1l-1.75,-1.81l-1.34,-0.46l-2.7,-0.28l-0.9,-0.76l-0.52,-2.7l-0.85,-0.59l-0.8,-0.12l-6.31,1.19l-1.26,-0.27l-0.52,-1.14l-2.08,-2.61l0.57,-2.21l-1.26,-2.45l-2.54,-2.22l-1.81,-0.58l-0.63,-0.61l0.13,-1.83l0.76,-0.58l4.07,-0.42l4.77,-2.29l0.53,-0.86l-0.08,-2.09l0.82,-1.64l-0.97,-2.16l-0.15,-2.18l1.55,-0.25l1.46,-1.47l2.5,-1.52l2.08,-4.18l-0.63,-2.78l-2.95,-2.35l-0.89,-1.09l-1.46,-4.45l-1.91,-1.27l-3.81,-0.73l0.73,-2.78l3.72,-2.26l1.64,-2.66l0.15,-0.86l-0.86,-1.48l-0.18,-1.43l1.15,-3.5l0.41,-0.36l3.03,0.06l2.27,-0.89l4.61,0.48l6.23,-0.91l2.51,0.47l0.72,-0.38l0.87,-1.43l1.29,-1.21l0.68,0.48l0.65,2.62l0.7,0.31l1.89,-0.13l2.82,1.56l5.42,6.18l0.37,0.67l0.39,2.99l-1.82,2.13l0.14,1.13l2.19,0.89l3.06,2.04l1.02,0.12l1.09,-0.29l0.78,-1.18l1.07,0.24l1.04,2.12l1.93,1.93l4.55,6.82l-1.58,0.69l-0.06,1.02l2.02,1.14l2.25,-0.31l0.24,0.47l-0.05,2.31l0.83,1.24l2.41,0.53l2.82,-0.18l1.96,0.66l0.71,-0.08l1.68,-1.15l1.71,0.44l2.04,-0.07l2.04,-1.61l0.63,0.05l1.22,0.92l0.82,0.12l0.66,-0.82l0.03,-1.6Z", "name": "Yonne"}, "FR-80": {"path": "M411.99,58.04l2.13,1.96l1.56,0.75l1.81,0.01l3.71,-1.21l3.67,-0.22l0.86,0.15l1.05,0.68l1.93,2.02l1.13,0.56l1.08,-0.04l1.34,-1.04l0.83,-0.09l0.45,0.32l-0.93,1.21l0.23,1.04l6.67,3.17l0.5,0.49l0.08,1.01l0.75,1.43l1.91,1.29l8.93,-0.46l3.92,-0.85l1.24,-1.53l1.52,1.73l0.76,0.31l0.74,-0.23l0.76,-0.74l1.3,0.11l2.71,1.26l0.54,0.67l-4.33,2.61l-1.17,1.54l-0.21,1.73l0.37,1.17l1.07,1.26l0.76,0.26l0.97,-0.29l1.56,-2.2l2.16,-0.19l2.38,0.33l1.34,-0.69l1.45,-0.17l0.19,0.32l-0.33,1.26l0.52,0.66l3.45,0.68l2.92,1.4l1.0,0.18l0.86,-0.76l-0.13,-1.95l0.49,-1.31l1.67,1.4l1.14,1.83l0.06,0.74l-1.28,1.91l0.29,0.94l0.77,0.38l0.95,-0.07l3.86,-2.53l0.65,0.79l0.19,2.96l0.68,0.44l0.7,-0.01l2.37,-1.26l3.76,-0.4l0.75,-1.0l-0.04,-1.56l0.65,-0.42l2.34,0.28l3.76,1.96l3.79,2.28l2.03,3.11l-2.34,2.6l-2.16,4.61l-2.01,1.7l-0.28,1.39l0.23,2.55l-1.71,2.13l0.19,1.14l1.13,0.63l1.39,0.25l0.81,4.05l-3.34,-0.53l-0.46,0.4l0.03,1.37l-0.41,0.46l-0.68,-0.0l-1.91,-1.21l-1.0,-0.13l-2.69,0.76l-1.97,-1.18l-1.26,-0.06l-0.99,0.81l-1.79,2.72l-2.52,0.78l-0.48,1.04l-0.11,2.07l-0.51,0.11l-2.55,-0.88l-2.55,0.31l-1.95,1.8l-1.21,1.85l-0.34,-0.2l-0.36,-1.68l-0.68,-0.87l-1.0,-0.11l-1.83,0.88l-0.78,-0.29l-2.35,-1.97l-0.9,-0.16l-1.94,0.33l-2.45,-2.09l-4.82,-0.91l-3.22,-1.99l-4.27,-0.69l-10.45,1.06l-5.9,-2.44l-6.94,1.08l-0.3,-0.21l-0.8,-2.81l-4.85,-1.97l-0.28,-1.33l-2.44,-4.06l-0.9,-3.09l-1.01,-1.33l-10.08,-8.97l-8.3,-4.93l5.17,-5.05l1.41,-4.28l1.94,-2.2l1.85,-0.21l5.97,2.46l0.78,-0.01l0.75,-0.53l0.14,-0.85l-1.42,-0.64l0.57,0.0l0.4,-0.4l0.0,-0.59l-0.39,-0.4l-2.26,-0.33l-0.8,-0.54l-1.15,-2.03l-2.54,-1.04l-0.42,-0.47l0.59,-5.43l1.08,-1.83l1.07,0.18Z", "name": "Somme"}, "FR-81": {"path": "M493.7,574.5l-2.7,2.83l-6.65,2.58l-1.23,-0.04l-2.62,-1.24l-1.35,-0.31l-2.38,0.11l-0.75,0.39l-1.36,2.84l-0.07,2.58l0.55,1.19l1.7,1.63l0.13,0.42l-0.6,2.34l0.7,1.51l-1.8,1.74l-1.39,0.83l-2.18,0.54l-6.45,-0.53l-5.8,0.38l-7.23,-1.26l-0.84,0.38l-0.74,0.89l-0.21,0.68l0.29,1.74l-0.63,0.62l-0.74,-0.06l-2.2,-1.21l-3.19,0.57l-2.01,0.01l-0.91,-0.34l-1.82,-1.67l-0.33,-1.07l0.47,-1.88l1.17,-1.37l-0.68,-1.43l-1.18,-0.81l-1.23,-0.17l-0.75,0.44l-1.07,1.47l-0.88,0.41l-0.68,-0.17l-4.07,-3.0l-2.62,-3.3l-1.16,-0.87l-1.98,-0.58l-5.89,-3.16l0.72,-0.96l1.33,-0.48l0.31,-0.44l-0.16,-1.17l-0.64,-1.01l-2.15,-1.92l-2.26,-5.99l-3.89,-1.82l-0.09,-1.78l-1.81,-3.27l0.4,-2.51l-0.43,-2.33l0.58,-0.65l2.56,0.13l0.84,-0.38l1.54,-1.99l2.42,-1.71l1.08,-1.24l0.1,-2.05l-2.77,-3.24l0.3,-1.07l1.35,-0.48l5.87,1.98l1.56,-1.93l2.93,-1.72l2.7,0.07l1.8,-1.38l2.38,0.13l0.5,-0.33l0.53,1.08l0.46,0.21l1.93,-0.49l5.45,-2.78l2.49,0.16l2.9,1.68l1.85,1.79l2.62,0.22l1.67,1.4l2.66,0.59l2.05,1.09l0.74,0.78l1.13,2.56l1.19,0.49l1.85,0.21l0.87,0.8l2.63,3.82l-0.4,1.19l0.1,1.19l2.17,2.49l0.92,3.73l1.23,2.83l1.81,2.47l3.59,3.36l2.17,1.37l2.19,0.54l2.21,-0.52l2.63,-1.37l5.04,1.24l1.03,0.95l0.59,1.82Z", "name": "Tarn"}, "FR-82": {"path": "M361.5,548.73l-0.38,-1.14l-0.84,-1.04l0.59,-2.03l0.66,-0.78l1.81,-0.88l0.77,-1.7l1.0,-0.23l2.75,0.7l1.35,-0.49l0.37,-0.64l-0.02,-0.8l-0.33,-0.62l-1.03,-0.71l2.05,-1.55l2.5,-4.95l-0.22,-1.41l-2.82,-1.29l-0.59,-1.01l0.8,-1.93l0.07,-1.99l0.39,-0.51l3.33,1.13l5.11,-0.37l1.05,-0.9l2.02,-0.88l0.87,-0.07l0.35,0.4l-0.07,0.83l-0.73,1.97l0.16,1.27l0.79,1.18l1.19,0.98l4.38,2.12l2.05,0.47l1.39,-0.81l0.66,-0.06l0.59,0.63l-1.05,1.88l0.06,0.43l0.6,0.6l3.28,0.95l1.71,0.05l4.46,-2.18l1.37,-1.13l0.86,-1.34l1.47,0.78l1.42,1.93l1.06,0.86l1.56,0.05l1.31,-1.11l-0.08,-1.21l-0.67,-1.6l0.2,-0.67l0.8,-0.28l1.34,0.12l0.85,1.57l1.15,0.47l0.75,-0.41l1.84,-1.99l4.93,-1.93l4.75,-0.19l1.1,-0.33l0.1,3.15l1.58,0.8l4.34,0.42l-0.33,1.34l-2.62,1.23l-0.75,2.01l0.87,1.94l3.26,0.98l-0.27,0.29l-2.35,-0.12l-1.84,1.39l-2.82,-0.03l-3.2,1.9l-1.32,1.74l-5.42,-2.01l-1.96,0.6l-0.61,2.05l2.82,3.32l-0.08,1.27l-0.89,1.04l-2.43,1.71l-1.48,1.95l-0.46,0.24l-2.56,-0.13l-0.9,0.4l-0.41,1.15l0.42,2.0l-1.8,1.09l-0.55,0.17l-1.8,-0.54l-2.59,2.11l-2.28,-0.39l-1.91,0.05l-4.54,2.48l-0.05,0.67l1.26,0.97l1.89,0.83l-6.27,3.21l-1.28,0.04l-3.61,-3.13l-1.84,0.04l-1.95,0.78l-3.2,-0.07l-5.96,1.36l-2.81,-0.07l0.43,-1.79l-0.76,-2.68l-0.26,-2.94l-1.14,-2.26l-4.63,-0.38l-1.59,-0.6l-0.43,-0.55l1.28,-0.83l3.25,-3.79l0.65,-1.48l-0.11,-1.38l-0.86,-0.96l-1.17,-0.19l-3.14,1.38Z", "name": "Tarn-et-Garonne"}, "FR-83": {"path": "M662.32,612.72l0.43,-2.22l0.66,-1.46l1.12,-0.93l2.01,-0.92l1.1,-1.34l0.04,-0.43l-0.93,-1.64l-1.71,-1.08l-1.69,-0.05l-0.08,-0.36l0.1,-1.12l0.67,-1.59l-0.97,-2.72l0.94,-0.38l3.01,0.14l1.51,-0.41l0.21,-0.64l-3.97,-4.91l-0.12,-1.32l0.91,-2.86l-0.03,-1.21l-0.75,-1.05l-1.89,-1.51l-0.06,-1.74l1.46,-2.21l4.97,-1.29l1.61,-2.25l-0.16,-0.58l-1.02,-0.49l-1.21,-2.1l-0.87,-0.42l0.93,-1.28l4.57,2.34l1.88,-0.03l0.85,-0.52l0.84,-1.19l0.9,-0.05l1.69,1.78l1.74,1.27l1.27,2.25l1.33,0.49l0.98,-0.5l0.89,-1.66l1.23,-1.17l4.05,-1.61l4.51,-4.06l1.63,-0.62l1.12,0.55l3.72,3.26l2.04,0.99l2.19,-0.51l1.52,-2.88l0.88,-0.93l2.86,0.06l2.77,-0.66l1.75,0.84l3.87,-1.13l1.01,1.11l0.79,1.82l1.06,0.97l3.03,1.01l2.2,0.16l0.33,0.36l0.78,2.08l-0.15,2.6l0.56,1.08l3.76,3.14l1.08,0.56l2.88,-0.18l0.52,0.59l0.07,0.9l-1.59,2.99l-0.52,1.83l0.87,1.71l2.23,1.3l-0.53,1.99l-1.2,0.73l-0.35,0.74l-0.79,0.06l-0.5,-0.8l-0.56,-0.07l-0.45,0.47l0.04,1.32l-0.33,0.1l-1.7,-0.24l-2.06,0.51l-0.64,-0.66l-0.97,-0.32l-0.96,0.39l-1.15,1.12l0.09,1.77l-0.82,1.01l-0.09,1.11l-2.6,0.48l-0.8,1.76l-2.13,1.86l-1.83,1.09l-0.39,1.12l0.27,0.52l1.27,0.34l3.83,-0.86l1.11,0.38l-0.61,1.02l-1.15,0.87l-0.18,1.36l0.76,1.4l-2.03,1.21l-1.78,0.59l-1.1,-1.03l-3.19,0.39l-1.04,1.7l-1.07,0.59l-1.62,-0.35l-3.45,0.27l-1.36,0.42l-1.49,0.84l-0.91,1.44l0.37,1.87l-1.34,0.0l-1.03,-0.98l-2.86,-1.09l-1.75,-0.16l-2.14,0.34l-2.56,1.04l-1.16,0.98l-0.63,1.67l-0.02,1.77l0.91,0.63l-3.08,0.19l0.74,-0.26l0.95,-0.93l-0.33,-1.65l-1.19,-0.96l-5.05,0.37l-0.84,-1.54l-3.51,-0.25l-1.12,-0.63l0.3,-1.17l-0.36,-0.56l-2.16,0.24l-1.78,0.81l-0.23,0.38l1.15,0.68l1.01,1.7l1.82,0.87l-3.07,-0.08l-0.89,0.28l-1.2,1.7l-1.96,-0.54l-1.85,-1.41l1.88,-1.3l0.07,-0.54l-0.41,-0.57l-1.72,-0.7l-0.74,-1.26l-2.11,-0.09l-2.49,-1.0l-0.47,-1.46l-0.88,-0.93ZM708.84,625.18l0.07,-0.56l1.07,-0.35l0.67,-0.95l0.94,-0.47l-1.31,1.7l-1.44,0.64ZM692.6,626.12l1.76,-0.0l0.97,-0.54l0.94,-0.02l0.43,-0.62l0.24,0.26l0.04,0.66l-2.62,1.0l-1.76,-0.73Z", "name": "Var"}, "FR-84": {"path": "M604.27,544.85l-0.38,-2.49l0.33,-2.07l-0.19,-2.88l-0.5,-0.93l-1.47,-1.11l-0.09,-1.56l-1.29,-1.64l-0.54,-1.66l-0.02,-2.97l3.17,-0.14l2.43,0.62l1.57,1.66l1.7,4.01l1.31,0.65l1.08,-0.2l2.24,-1.34l2.77,-0.41l3.47,-1.46l4.07,-1.05l3.48,0.59l1.1,-0.08l2.31,-1.4l0.14,0.38l-0.71,1.56l-0.03,1.7l0.31,1.17l0.77,0.67l2.96,0.79l2.82,-0.21l4.22,1.37l1.95,0.19l0.66,0.8l0.94,2.37l3.97,2.67l2.43,0.48l-0.2,4.0l0.24,0.39l1.05,-0.21l0.97,0.36l0.28,0.59l-0.31,1.92l-1.83,3.84l0.0,1.28l0.75,0.97l0.93,0.32l1.85,0.01l0.72,0.39l0.66,2.08l-0.21,0.96l-2.3,3.79l-0.22,1.71l0.52,0.42l3.8,-1.25l3.06,1.6l5.26,5.65l-2.2,1.58l-4.01,0.82l-1.48,1.11l-2.3,1.04l-3.02,-0.23l-7.12,-1.92l-2.07,-1.14l-2.7,-2.21l-5.03,-0.71l-3.78,0.01l-6.35,-2.77l-7.2,-5.93l-3.9,-2.2l-7.57,-2.61l2.0,-1.55l0.6,-1.17l-0.07,-1.83l1.4,-0.03l0.4,-1.37l-0.44,-0.88l-4.39,-4.94l-1.65,-0.36l-1.13,0.37ZM619.44,527.85l-4.96,0.01l-0.37,-0.2l-0.33,-0.9l0.44,-1.6l2.99,-4.46l1.31,-0.8l1.47,0.37l2.37,2.16l0.58,1.0l-0.0,0.54l-1.24,1.1l-1.26,2.17l-1.01,0.62Z", "name": "Vaucluse"}, "FR-85": {"path": "M204.85,362.1l-0.62,-0.64l-1.32,-5.47l0.25,-1.25l-0.25,-0.45l-0.84,-0.31l-1.14,-2.75l-2.53,-2.31l-0.74,-2.09l-0.93,-0.62l-1.98,-0.4l-2.24,-3.59l-3.41,-3.09l-4.13,-2.11l-0.62,-2.47l0.07,-2.83l0.33,-0.63l1.48,-0.93l0.17,-0.46l-0.28,-0.85l3.12,-1.98l2.48,-5.26l0.78,-0.51l1.11,0.64l3.64,3.66l2.0,1.43l6.44,2.71l3.21,3.11l1.09,0.43l3.21,0.02l6.4,1.46l2.1,-0.76l1.05,-1.03l0.11,-0.59l-1.05,-1.36l-1.3,-3.38l-0.81,-3.57l0.33,-1.77l2.67,-1.06l0.57,0.06l0.82,1.52l0.0,4.18l0.55,1.33l1.18,0.72l1.41,-0.13l2.92,-1.69l0.67,-0.76l0.52,-1.76l-0.33,-2.96l0.24,-0.7l0.9,-0.55l2.21,0.43l0.42,-0.18l1.98,-2.63l2.07,0.63l5.08,2.9l4.49,1.72l2.8,0.29l2.35,-1.23l1.75,1.21l1.01,0.26l2.14,1.33l2.18,3.03l1.67,0.89l0.69,0.84l0.74,3.47l1.17,1.57l4.88,2.98l0.6,0.88l-0.77,1.55l0.04,1.22l3.83,6.52l0.57,3.11l1.58,2.68l0.65,4.43l-1.22,1.54l-0.25,0.91l0.97,4.27l-0.6,2.86l0.25,1.23l0.83,0.72l1.04,-0.23l1.97,1.38l0.71,1.02l-0.74,0.77l-1.26,-0.1l-1.22,0.34l-2.25,2.0l-2.76,0.16l-3.62,1.68l-4.06,-2.24l-1.7,-0.27l-6.67,1.09l-0.44,-0.27l0.9,-1.15l0.08,-0.99l-0.69,-0.77l-0.69,-0.05l-7.38,1.76l-1.66,1.88l-0.75,-0.72l-2.95,-0.11l-2.27,1.19l-0.16,2.27l-1.02,-0.24l-2.4,-2.73l-1.56,-0.33l-4.08,-2.32l-3.43,0.87l-1.24,-0.06l-0.97,-3.42l-1.1,-1.51l-1.55,-0.91l-6.9,-0.76l0.18,-1.01l-1.0,-0.83l-3.36,-0.58l-1.97,-1.51l-2.47,-0.81l-1.08,-2.24l-0.58,-0.83l-0.45,-0.15l-0.26,1.35l0.41,1.74ZM179.99,325.41l2.68,1.47l0.24,2.88l-0.47,-0.24l-2.28,-3.55l-1.56,-0.93l-1.75,0.59l-0.73,-0.9l-0.93,-2.89l-0.56,-0.68l2.62,-0.12l2.02,0.71l-0.04,2.78l0.75,0.89ZM174.33,345.92l-4.93,-0.12l-0.49,-0.98l0.24,-0.36l1.99,0.02l3.18,1.44Z", "name": "Vend\u00e9e"}, "FR-86": {"path": "M318.26,311.84l1.47,2.34l0.64,0.37l0.98,-0.07l1.14,-0.55l0.13,1.56l0.57,0.55l2.68,-0.26l0.19,0.85l-0.35,1.75l0.25,0.7l0.48,0.33l1.15,0.07l2.51,-0.61l1.03,1.31l1.83,0.26l-0.34,5.65l0.36,1.29l1.37,1.15l1.25,0.23l2.61,-0.25l2.91,0.46l1.93,-1.14l1.04,-0.24l5.49,-0.33l0.79,-0.44l0.19,-0.71l-0.77,-1.6l-0.1,-0.95l5.63,2.78l1.17,1.63l1.3,3.39l7.23,9.31l2.64,1.85l1.67,1.93l0.84,2.19l-0.61,2.63l0.01,1.65l0.57,2.3l0.59,0.87l2.29,1.98l3.29,1.27l0.85,2.04l0.88,0.33l4.33,0.13l1.69,1.4l0.35,0.75l-0.49,1.9l0.16,1.06l0.74,0.86l1.78,1.01l0.54,0.76l-0.93,2.7l-3.26,1.63l-2.54,0.08l-1.43,0.44l-1.28,1.12l-2.44,3.01l-0.64,1.72l-1.05,0.36l-4.1,0.06l-4.24,3.26l-2.35,0.69l-0.42,1.05l0.42,1.23l1.24,1.86l0.56,2.78l-0.2,0.35l-6.81,-0.46l-3.83,3.52l-2.69,0.59l-2.66,-0.56l-2.57,-2.68l-0.81,-0.54l-0.92,-0.09l-1.71,0.84l-1.25,2.22l0.13,0.5l1.39,0.98l-0.61,1.28l-0.66,0.27l-2.39,-0.72l-7.06,0.08l-1.13,-0.29l-2.69,-1.78l-1.37,-0.41l-0.11,-0.51l0.62,-2.25l-0.52,-1.52l-4.27,-1.83l-1.11,-0.91l-0.06,-0.84l0.74,-1.99l2.18,-2.58l0.93,-1.69l0.38,-1.84l-0.32,-1.84l-1.41,-1.28l-1.65,-0.08l-1.22,0.62l-1.77,2.02l-0.69,0.21l-1.1,-0.71l-1.04,-1.26l-0.38,-1.12l-0.02,-2.18l-1.51,-1.42l-0.57,-1.02l0.19,-2.74l-0.21,-1.47l-1.19,-1.45l-0.0,-1.77l1.57,-2.08l1.72,-4.63l-0.41,-1.38l-1.63,-0.57l-0.81,-0.98l0.11,-2.33l1.63,-2.79l0.76,-2.63l-0.45,-1.48l-1.38,-1.45l-0.19,-2.93l0.13,-0.94l1.44,0.09l1.03,-0.72l0.28,-1.38l-0.35,-0.86l-1.32,-1.09l-0.88,-1.27l-1.68,-4.96l0.02,-1.98l-0.89,-1.06l-1.34,-0.4l-0.63,-2.7l-1.27,-2.64l0.8,-0.94l2.51,-0.92l1.0,-2.45l1.89,-2.08l0.9,-0.26l2.97,0.49Z", "name": "Vienne"}, "FR-87": {"path": "M400.84,373.71l1.37,1.0l-0.09,1.47l-3.2,5.72l0.1,2.58l1.3,1.83l2.84,0.95l2.04,1.94l0.38,0.95l-0.44,2.84l0.39,0.99l2.07,1.25l1.49,5.38l1.33,0.42l-0.69,1.04l-1.03,0.82l-1.49,0.68l-0.2,2.25l0.97,0.78l4.05,0.11l0.71,0.32l0.46,0.63l0.05,0.85l-0.46,2.3l0.28,0.99l0.81,0.68l2.21,0.26l4.48,-1.17l1.31,0.05l1.7,2.18l0.88,0.66l4.16,1.91l0.9,1.33l-0.15,2.54l-0.7,2.03l0.14,0.45l1.94,1.69l-1.68,0.77l-2.33,0.13l-1.47,-0.98l-1.27,0.11l-2.55,2.52l-3.15,1.12l-8.04,5.38l-3.36,0.29l-3.78,-2.12l-0.56,0.18l-2.2,4.2l-2.13,1.5l-3.94,1.03l-1.68,1.31l-1.46,2.02l-1.5,-0.89l-1.67,0.31l-3.97,-1.86l0.03,-0.66l1.79,-1.66l-0.12,-1.13l-0.97,-0.71l-3.78,-0.79l-0.97,-0.93l-2.29,-3.4l-0.77,-0.58l-0.71,-0.28l-2.28,0.21l-1.67,-0.27l-3.12,0.5l-1.36,-0.83l-0.67,0.19l-1.04,1.31l-0.53,0.24l-0.92,0.1l-1.95,-0.46l-1.21,-0.71l0.7,-2.38l-0.14,-1.2l-2.33,-2.53l-0.86,-0.39l-4.12,-0.22l-0.84,-0.59l1.24,-2.69l2.24,-1.82l1.25,-1.95l1.82,0.71l1.43,-0.0l1.03,-0.91l0.59,-1.88l0.92,-7.22l3.93,-0.81l2.62,-1.86l0.48,-0.93l-0.03,-0.82l-2.06,-3.42l-0.65,-0.47l-1.46,0.4l-0.62,-0.18l-2.23,-2.92l-0.09,-2.84l-0.51,-2.08l1.19,-0.01l0.56,-1.09l-0.6,-2.96l-1.3,-2.02l-0.18,-1.29l2.22,-0.61l4.13,-3.21l3.91,-0.02l1.37,-0.47l0.49,-0.56l0.37,-1.36l2.95,-3.54l1.62,-0.7l2.72,-0.12l2.77,-1.57l3.18,1.35l1.69,0.1l3.59,-0.55l1.16,-1.42l1.05,-0.24l1.47,1.8l2.71,1.62Z", "name": "Haute-Vienne"}, "FR-01": {"path": "M617.23,362.0l1.76,-0.36l4.28,1.38l1.47,-0.15l3.7,-1.24l1.74,-0.16l1.25,0.39l2.16,1.97l1.64,0.85l4.11,0.99l0.02,2.41l0.61,1.09l1.69,0.58l0.98,0.74l0.72,2.39l1.08,1.11l2.12,0.65l0.91,1.09l1.74,0.37l-0.08,3.17l0.9,0.94l1.79,0.47l2.93,-1.5l1.13,-1.19l1.49,-0.38l0.56,-1.17l2.38,-2.03l2.83,2.21l0.53,0.68l0.4,1.81l0.7,0.56l7.33,0.5l1.48,-0.19l1.31,-0.52l4.16,-3.47l1.29,-1.9l5.29,-5.36l2.71,1.45l0.82,0.77l0.73,1.68l-2.15,4.4l-0.57,4.01l-1.43,0.34l-1.27,-0.13l-5.25,2.42l-0.38,1.48l1.62,2.13l-1.34,2.71l-2.71,0.14l-1.68,2.2l-0.62,0.32l-1.36,-1.23l-0.5,0.04l-1.27,1.21l-0.19,3.73l0.91,6.14l0.09,2.81l-0.51,2.57l-2.91,7.65l-0.73,4.3l-0.93,1.66l-2.6,1.32l-4.3,4.06l-1.02,0.12l-1.0,-0.76l-3.27,-4.86l-4.27,-3.42l-1.62,-2.12l-0.91,-2.52l0.21,-0.6l-0.57,-0.85l-2.84,-2.33l-1.05,-0.51l-0.66,0.02l-2.0,1.0l-3.71,5.19l-0.84,0.68l-0.94,0.26l-1.02,-0.21l-1.71,-1.04l-4.67,-1.87l-4.14,0.52l-3.63,-0.52l-4.19,1.09l-0.75,-3.12l0.3,-1.1l-0.2,-0.46l-3.83,-2.69l-1.54,0.13l-0.34,-0.93l-1.17,-0.79l-0.65,-1.05l-2.11,-0.86l0.45,-2.94l-0.39,-4.61l1.2,-3.66l1.56,-3.33l0.22,-1.64l-0.23,-1.26l1.28,-4.71l3.52,-6.66l0.17,-1.98l1.46,-2.52l0.86,-4.24l1.47,-3.8Z", "name": "Ain"}, "FR-02": {"path": "M567.45,89.94l3.32,1.51l1.54,0.17l0.08,2.76l1.79,2.83l0.07,1.8l-1.86,3.26l-0.49,2.91l0.31,0.92l0.9,0.74l0.32,1.65l-0.7,1.08l-3.14,2.62l-1.8,1.1l-1.44,2.0l-1.21,0.65l-2.01,0.15l-1.16,1.07l0.06,0.89l1.48,3.98l-0.45,1.42l0.37,2.06l-1.37,1.28l-0.45,0.95l0.11,0.84l1.61,2.67l-1.45,0.55l-0.75,1.27l0.2,0.5l0.68,0.33l0.4,0.93l-0.07,1.86l-0.4,1.06l-0.57,0.36l-2.25,-0.85l-1.92,0.68l-2.88,-1.37l-2.38,-0.13l-1.45,0.91l-0.06,1.82l-4.11,0.52l-5.16,1.25l-3.39,1.78l-0.06,0.98l0.85,1.81l0.67,5.15l0.51,0.49l1.41,0.26l2.36,2.15l-0.2,0.54l-0.95,0.74l-1.13,0.21l-3.3,-0.33l-1.41,0.67l-0.54,1.6l0.35,1.68l-0.15,1.05l-0.98,1.37l-1.47,1.05l-0.17,1.35l0.25,0.78l0.6,0.45l3.9,0.07l0.6,0.44l-0.02,0.44l-2.28,1.99l-0.73,1.1l-1.76,1.18l-1.05,2.05l-3.83,3.24l-2.02,3.25l-1.48,0.21l-1.71,-0.42l-2.07,-1.34l-0.43,-0.63l-0.43,-2.64l-0.39,-0.68l-0.73,-0.42l-1.48,0.55l-0.51,-0.14l-9.06,-6.98l-0.18,-0.8l0.61,-1.88l-0.14,-0.89l-0.92,-1.78l-1.36,-1.39l-2.91,-0.8l1.22,-1.17l1.33,-2.47l-0.1,-1.34l-0.76,-1.04l-1.11,-0.7l-2.26,-0.71l-1.32,-0.01l-3.62,0.78l-0.68,-0.81l-0.22,-1.54l2.46,-1.51l0.85,-1.77l-0.61,-1.84l-2.74,-2.56l1.36,-0.9l3.13,-0.24l1.77,-1.04l0.96,-1.77l1.02,-3.74l0.86,-0.6l1.32,0.6l1.02,-0.06l0.79,-0.7l0.27,-0.81l-0.52,-2.08l-1.67,-1.09l-0.65,-1.37l-0.08,-1.74l0.68,-3.72l-0.01,-1.49l-1.53,-3.7l0.85,-5.59l-0.68,-2.03l-0.32,-2.65l-0.76,-1.41l-1.35,-0.18l-0.84,-0.47l0.01,-0.4l1.31,-1.18l0.38,-0.9l-0.06,-3.69l2.03,-1.74l2.17,-4.63l2.43,-2.74l-0.36,-1.23l-1.5,-2.16l3.58,-0.7l1.83,0.05l3.72,0.8l0.96,-0.15l1.87,-0.98l5.14,1.35l1.1,-0.07l3.93,-1.62l1.69,-1.03l0.9,0.04l2.79,0.99l0.93,-0.14l3.23,-1.67l0.73,-0.05l3.32,0.71l6.2,0.65l1.83,1.69l0.78,0.18l3.05,-1.51l1.71,-0.23l0.41,0.51l-0.04,2.45l0.56,0.74l5.66,1.94l1.22,0.15l1.87,-0.46Z", "name": "Aisne"}, "FR-03": {"path": "M499.59,339.93l0.27,1.52l1.25,1.52l3.22,1.84l2.72,0.19l2.74,2.56l0.75,0.33l1.03,0.0l2.4,-1.05l1.66,-0.1l1.61,0.25l2.97,1.11l0.77,-0.19l1.41,-1.51l0.75,-0.34l1.37,0.37l1.29,2.19l0.04,1.49l0.5,0.54l0.6,0.12l1.71,-0.33l4.06,-2.15l0.58,-1.97l1.34,-0.87l0.39,-1.8l1.21,0.2l1.4,2.25l0.6,1.79l2.46,2.19l1.56,2.63l0.94,0.54l0.28,1.5l-0.41,3.04l0.32,0.67l4.03,2.05l1.74,0.08l2.67,2.22l3.67,0.71l2.12,1.04l0.8,2.92l-0.64,3.08l0.52,1.3l-0.02,1.46l0.82,1.68l-1.19,1.0l-5.54,2.72l-4.06,1.13l-3.09,2.23l-0.46,0.67l0.1,0.81l1.06,1.16l0.45,3.18l-0.15,4.03l0.68,2.18l0.34,3.41l0.64,2.1l-0.42,0.97l-1.55,0.78l-3.88,0.68l-2.22,1.06l-1.3,-0.52l-2.73,-2.25l-1.7,-0.84l-4.04,-0.77l-1.99,0.11l-1.42,0.57l0.01,-0.79l-1.21,-3.96l-0.51,-0.26l-6.28,2.04l-1.17,-0.97l-4.88,-1.19l-5.39,0.45l-0.97,-0.29l-2.45,-3.12l-4.46,0.7l-1.86,-0.94l-2.01,-1.92l-1.55,-2.4l-0.54,-2.4l0.09,-2.71l-0.61,-1.08l-1.32,-0.68l-2.45,0.07l-1.33,0.64l-1.02,1.09l-0.17,2.84l-0.65,0.18l-3.18,-1.75l-1.24,-0.04l-0.54,0.83l-0.21,2.58l-2.52,2.99l-1.55,0.94l-1.67,0.26l-1.7,-0.42l-1.35,-0.55l-2.11,-3.65l-1.03,-3.11l-3.21,-4.25l-1.27,-0.36l-1.13,0.66l-1.17,-2.27l-0.72,-0.46l-2.83,-0.61l-0.88,-0.67l-0.94,-2.84l-1.76,-1.56l-1.91,-2.38l2.1,-3.42l1.46,-0.64l1.48,-1.8l3.52,-1.57l7.94,-0.8l5.29,-1.4l0.38,-0.42l-0.0,-1.27l-1.97,-2.78l-0.03,-0.72l0.53,-1.33l-1.01,-1.81l2.56,-0.35l0.41,-0.79l-0.21,-1.13l1.75,-0.2l4.07,-3.3l0.82,0.8l2.07,0.75l0.7,-0.08l1.5,-1.22l2.21,0.26l1.77,-2.17l3.83,-2.18l2.59,-0.73l2.86,0.18Z", "name": "Allier"}, "FR-04": {"path": "M651.92,546.28l0.17,-3.46l1.76,-0.99l3.2,-3.13l1.92,0.05l0.53,0.33l0.75,1.42l1.06,0.44l0.64,-0.19l0.44,-0.58l-0.18,-1.95l0.27,-0.4l1.58,0.11l5.96,-1.63l3.73,1.33l1.73,-0.0l0.66,-0.63l0.07,-0.48l-0.57,-1.04l-2.45,-2.72l-1.44,-1.05l-0.22,-0.74l0.57,-1.37l1.35,0.23l3.02,2.06l0.62,-0.3l0.32,-2.78l-0.85,-1.11l0.13,-1.09l1.7,-1.84l1.73,-3.22l3.99,-2.13l2.54,-2.48l1.12,-0.39l2.15,0.09l1.6,2.63l1.39,0.64l1.99,2.81l1.38,0.49l1.86,-1.26l0.69,-1.82l-0.1,-1.94l-0.44,-1.35l2.08,-0.62l1.7,-1.27l2.27,-2.81l3.81,3.91l2.32,1.58l2.87,0.74l6.29,0.16l1.29,-0.64l0.95,-2.17l1.43,-1.71l0.76,-2.54l1.87,-0.29l4.74,-4.19l4.97,-2.21l1.9,-1.9l0.77,-0.44l0.6,0.11l-0.11,0.7l0.56,1.29l-0.69,0.5l-2.06,3.14l-3.05,2.06l-0.83,1.38l0.25,2.53l1.44,2.18l2.96,2.54l-1.46,0.71l-0.65,0.92l-0.69,3.25l0.55,1.28l-4.5,2.46l-1.8,2.73l-1.72,1.55l-2.54,5.66l-0.47,2.74l1.43,2.4l1.69,1.86l0.53,1.82l0.33,2.99l1.73,1.32l1.97,0.96l2.36,3.75l3.58,2.65l1.13,1.23l-2.14,0.22l-3.05,-1.51l-2.25,0.02l-3.1,2.61l-2.55,0.17l-0.83,0.45l-1.01,2.11l0.66,2.69l-1.81,0.32l-1.82,0.77l-1.31,-1.19l-1.32,0.16l-2.71,0.98l-1.61,-0.83l-2.91,0.66l-3.08,-0.02l-1.25,1.2l-1.45,2.78l-1.63,0.29l-1.54,-0.81l-3.72,-3.26l-1.74,-0.72l-1.99,0.79l-4.39,3.99l-4.18,1.7l-1.33,1.27l-1.22,1.88l-0.77,-0.22l-1.3,-2.26l-3.72,-3.26l-1.68,0.15l-0.86,1.22l-0.65,0.4l-1.45,-0.03l-4.62,-2.41l-0.51,0.12l-1.18,1.63l-5.3,-5.7l-3.38,-1.79l-3.68,1.08l0.09,-0.84l2.29,-3.78l0.29,-1.36l-0.24,-1.42l-0.74,-1.26l-1.1,-0.55l-1.88,-0.01l-0.61,-0.22l-0.41,-0.61l0.02,-0.67l1.83,-3.86l0.35,-2.24l-0.65,-1.22l-1.85,-0.49Z", "name": "Alpes-de-Haute-Provence"}, "FR-05": {"path": "M662.86,537.06l0.07,-5.03l-0.46,-0.67l-1.82,-1.02l-1.39,-1.55l0.47,-1.33l-0.29,-0.71l-1.33,-0.38l-2.81,0.16l-3.98,-1.31l-2.2,-1.6l-0.54,-1.85l-1.31,-1.69l0.85,-0.19l2.33,0.46l0.67,-0.16l0.58,-0.67l-0.17,-1.21l-1.58,-1.26l-0.32,-1.32l0.2,-0.43l2.95,0.15l4.34,1.28l0.95,-0.24l2.8,-1.78l0.61,-0.81l-0.12,-1.02l-0.85,-1.05l-1.56,-0.99l-0.6,-0.98l0.34,-1.04l1.84,-2.49l0.74,-2.54l1.28,-0.26l2.49,0.32l4.9,-1.34l1.9,-1.99l0.0,-1.34l-0.94,-1.02l1.78,-2.52l4.33,-0.43l2.59,-0.77l1.06,-1.17l-0.23,-1.81l1.51,-1.3l1.93,-0.81l1.61,0.45l1.3,-0.18l3.71,-2.08l2.21,0.4l1.91,-0.35l1.7,0.15l3.74,-0.98l2.72,0.76l1.33,-0.13l0.6,-0.99l0.28,-3.45l-0.47,-1.39l-1.68,-1.88l-0.61,-3.45l-1.52,-0.82l-3.62,0.45l-0.92,-0.3l-0.21,-0.57l1.03,-6.05l1.31,-1.51l1.5,0.78l3.9,0.36l1.08,0.74l1.0,1.99l4.33,1.4l1.59,-0.46l0.96,-1.07l0.85,-2.13l2.87,-0.24l2.8,-1.28l-0.62,0.73l-0.02,0.5l2.03,2.18l0.17,1.69l0.79,1.24l0.95,0.66l2.05,0.17l1.38,0.88l0.35,1.96l-0.12,4.19l1.23,1.91l2.07,1.56l4.22,2.16l1.41,0.3l3.93,-0.45l2.94,1.06l1.2,1.26l-0.4,2.57l1.25,4.13l2.03,3.55l-3.87,-0.56l-1.58,0.72l-1.43,1.8l-1.1,-0.11l-1.03,0.61l-1.77,1.8l-5.05,2.27l-4.7,4.15l-1.97,0.35l-0.95,2.83l-1.41,1.68l-0.9,2.07l-0.84,0.33l-6.01,-0.18l-2.67,-0.7l-2.04,-1.41l-4.1,-4.21l-0.6,0.03l-2.45,3.06l-1.6,1.2l-2.28,0.65l-0.27,0.51l0.53,1.6l0.11,1.65l-0.5,1.44l-1.25,0.99l-0.83,-0.24l-1.98,-2.8l-1.32,-0.57l-1.61,-2.68l-0.35,-0.24l-2.63,-0.09l-1.43,0.54l-2.52,2.47l-3.05,1.5l-1.67,1.48l-1.17,2.53l-1.72,1.87l-0.37,1.01l0.16,0.89l0.77,0.79l-0.25,2.0l-2.67,-1.78l-1.75,-0.3l-0.44,0.24l-0.75,1.8l0.29,1.27l1.6,1.25l2.33,2.58l0.4,0.73l-0.31,0.3l-1.05,-0.06l-3.91,-1.37l-6.17,1.64l-1.06,-0.09Z", "name": "Hautes-Alpes"}, "FR-06": {"path": "M739.85,588.82l0.14,0.15l-0.95,1.09l-2.27,-1.32l-0.56,-1.01l0.46,-1.62l1.62,-3.07l-0.17,-1.52l-1.01,-0.96l-2.81,0.22l-0.88,-0.44l-3.9,-3.31l0.04,-2.99l-0.85,-2.3l-0.56,-0.67l-2.49,-0.28l-2.75,-0.88l-0.93,-0.85l-0.56,-1.35l3.81,-1.23l0.21,-1.17l-0.69,-1.94l0.78,-1.63l3.17,-0.47l2.96,-2.56l1.83,-0.02l3.14,1.53l3.1,-0.36l0.22,-0.66l-1.7,-1.85l-3.45,-2.52l-2.38,-3.78l-3.69,-2.28l-0.17,-2.56l-0.58,-2.04l-3.05,-3.97l0.41,-2.46l1.72,-4.25l0.72,-1.21l1.71,-1.53l1.69,-2.6l4.53,-2.48l1.25,1.52l1.14,2.19l2.27,1.81l0.83,2.02l0.81,0.8l1.01,0.31l2.19,-0.38l0.67,0.17l6.04,2.48l6.53,3.55l3.45,0.91l1.49,1.72l3.23,0.17l10.62,-2.7l1.73,-0.12l2.57,-1.44l1.28,0.21l-0.66,2.31l0.83,1.51l1.3,1.15l0.87,1.66l-0.1,1.05l-2.22,2.08l-1.33,3.37l-4.45,3.63l-1.3,1.81l-2.63,2.56l-1.02,1.63l0.26,2.23l1.1,3.29l-1.5,0.69l0.05,1.26l-0.73,0.15l-1.26,1.13l-0.56,-0.67l-1.18,-0.6l-1.65,0.49l-1.0,1.05l-0.43,1.64l-1.32,1.04l-0.71,1.53l-2.86,-0.54l-1.56,0.17l-1.86,1.37l0.04,0.96l-1.09,1.0l-0.54,-0.78l-1.17,-0.24l-1.72,0.39l-1.25,1.27l-0.66,2.71l0.71,3.75l-0.22,0.12l-0.57,-0.92l-0.68,-0.42l-1.15,-0.07l-1.27,0.64l-1.75,1.52l-0.56,-0.6l-3.4,0.07l-2.2,1.77l-0.26,1.1l0.65,0.74Z", "name": "Alpes-Maritimes"}, "FR-07": {"path": "M577.55,476.22l1.11,-1.41l2.95,-0.55l0.74,-0.72l-0.0,-0.72l-1.19,-1.6l2.16,-2.5l-0.86,-2.16l1.27,0.23l1.38,1.13l0.92,-0.02l0.45,-0.42l0.63,-2.87l1.86,-3.84l0.13,-1.54l-0.32,-0.45l7.61,-0.57l0.23,-1.28l-0.35,-2.29l0.79,-1.72l1.18,-0.9l5.42,-2.49l2.64,-0.46l0.25,1.75l0.5,1.07l1.67,1.89l-0.05,1.4l0.31,0.32l-0.26,3.51l0.16,2.41l0.8,2.99l-0.27,3.52l1.29,0.96l-0.12,0.95l1.02,1.63l-0.44,3.35l0.44,1.57l1.71,2.65l0.36,1.15l-1.81,5.39l-1.82,1.73l-0.54,1.53l-2.15,1.83l-1.09,2.24l-0.14,2.08l1.66,4.33l-0.4,2.69l-2.95,3.83l-1.23,2.68l-1.1,7.4l-2.03,4.07l0.16,0.54l-0.95,6.57l0.01,2.92l-3.85,-1.27l-2.16,-2.01l-1.95,-0.76l-3.44,0.06l-0.76,0.36l-0.51,0.78l-0.28,1.65l-1.3,0.63l-1.06,-0.63l0.11,-1.94l-0.77,-0.99l-1.14,-0.12l-1.89,0.45l-5.53,3.89l-1.17,-0.23l-4.88,-2.4l-1.24,-1.11l-4.78,0.52l-0.65,-3.42l0.81,-1.28l-0.09,-1.09l-1.77,-2.77l-1.61,-1.3l-2.22,-6.93l-0.89,-1.48l-1.35,-0.86l-0.56,-0.98l-0.68,-1.98l-0.52,-3.12l-1.27,-3.49l0.05,-2.72l1.27,-0.58l3.25,-4.5l3.93,-1.27l1.08,-2.19l2.26,0.12l4.33,-0.67l1.51,-0.63l2.02,-2.74l1.34,-3.3l0.62,-0.22l1.42,0.25l2.97,-1.28l0.14,-1.25l-0.57,-1.03Z", "name": "Ard\u00e8che"}, "FR-08": {"path": "M573.11,91.52l3.32,-0.4l9.73,2.22l1.91,-0.29l8.49,-3.54l2.64,-0.38l0.81,-0.51l1.03,-2.26l0.49,-2.73l-0.42,-1.4l0.42,-1.14l6.43,-5.47l1.16,-0.45l0.17,0.74l0.95,0.53l1.9,-0.28l0.3,0.34l-0.46,3.48l-0.42,-0.16l-0.65,0.28l-1.15,2.13l-0.07,2.33l-2.32,4.87l-0.3,1.37l0.89,1.44l2.96,1.1l0.83,1.27l-0.04,1.46l-1.51,3.13l0.87,1.86l0.09,3.19l0.8,0.73l1.6,0.19l4.15,-0.98l1.14,-0.05l0.97,0.46l2.32,1.92l3.4,1.12l3.27,3.72l2.07,1.47l1.72,0.4l3.86,-0.67l2.26,2.11l0.31,0.88l-0.71,0.59l-0.19,1.13l0.55,1.39l1.85,0.16l0.97,-1.0l2.53,0.92l0.24,0.19l-0.05,0.81l-6.21,3.82l-0.34,-0.04l-0.49,-0.99l-0.68,-0.39l-3.82,0.0l-2.25,-1.55l-1.05,-0.35l-1.15,0.2l-1.35,1.12l-0.38,0.72l-0.36,3.28l-1.46,1.89l0.74,2.38l1.02,0.78l0.75,2.44l-0.1,1.25l-1.08,2.51l-3.38,4.46l0.01,1.28l0.73,2.15l-3.98,3.18l-2.32,-1.4l-2.13,0.05l-4.27,1.39l-6.83,-1.28l-5.3,1.34l-0.89,-0.62l-1.22,-2.2l-1.55,-1.05l-1.7,-0.2l-6.2,0.85l-1.94,-0.43l-2.29,-2.8l-2.67,-0.15l-0.88,-0.49l-1.45,-1.44l-6.0,-4.02l-2.07,-0.61l-6.54,-0.45l-0.4,-0.92l-0.68,-0.44l0.36,-0.58l1.56,-0.48l0.31,-0.52l-1.78,-3.16l0.25,-1.03l1.13,-0.91l0.39,-0.79l-0.38,-2.04l0.46,-1.54l-1.6,-4.48l0.75,-0.67l1.86,-0.09l1.55,-0.83l1.47,-2.03l1.72,-1.03l3.2,-2.67l0.94,-1.48l0.01,-1.35l-1.51,-2.11l0.44,-2.67l1.83,-3.2l0.19,-1.43l-0.27,-1.06l-1.76,-2.77l-0.03,-2.56Z", "name": "Ardennes"}, "FR-09": {"path": "M418.24,606.75l-0.29,1.54l0.8,2.04l0.24,1.92l0.48,0.75l3.51,2.37l4.07,1.14l2.5,1.26l2.66,0.27l1.08,0.84l0.66,1.11l0.15,1.08l-1.08,1.79l1.93,1.96l1.1,3.87l-0.38,0.48l-2.23,0.75l-0.49,1.18l2.08,1.84l0.62,2.74l-0.3,0.38l-2.78,1.03l-1.69,-0.0l-1.08,0.43l-1.46,2.27l0.23,0.77l1.63,0.67l0.9,0.82l0.09,2.3l0.54,0.69l2.38,1.32l1.14,0.3l6.15,-0.98l1.95,2.33l2.97,1.46l0.54,0.91l-0.2,0.8l-0.35,0.18l-3.39,-0.53l-6.47,0.84l-2.14,2.49l-0.42,2.59l-1.41,1.09l-3.35,-0.73l-6.66,0.81l-0.58,-0.62l-2.03,-0.75l0.42,-1.19l-0.34,-0.53l-6.9,-0.61l-4.12,-2.32l-2.77,0.67l-1.86,-0.09l-0.4,0.28l-0.88,2.73l-0.91,0.33l-0.66,-0.77l-1.07,-2.58l-2.23,-3.15l-1.29,-0.49l0.21,-0.83l-0.29,-0.49l-1.53,-0.36l-7.55,-0.02l-2.58,0.53l-0.9,-0.58l-1.64,-3.14l-1.32,-1.06l-1.36,-0.37l-5.14,-0.31l-1.98,-1.15l-1.93,0.82l-1.92,-1.37l-1.71,-0.61l-1.37,-5.0l0.27,-1.51l1.85,-1.22l0.45,-1.83l0.46,-0.57l1.64,0.0l2.6,-0.62l1.31,-0.73l1.08,-1.1l0.45,-1.8l-0.66,-3.57l0.04,-1.54l0.44,-0.83l2.59,-1.15l1.0,-2.04l0.48,-0.39l1.42,0.0l1.96,-0.78l0.71,0.04l3.3,1.87l1.98,2.72l1.28,0.28l3.23,-2.67l0.04,-0.55l-1.04,-1.27l-2.95,-1.28l-0.15,-0.52l0.76,-0.88l4.09,-0.47l2.73,-0.96l1.52,-0.93l0.72,-1.27l-0.05,-0.44l-0.95,-1.03l-3.22,-1.18l-0.68,-0.75l0.21,-1.57l0.95,-0.54l1.39,0.16l1.24,0.65l2.71,2.5l-0.22,2.41l1.88,1.37l1.81,-0.13l1.54,-1.1l0.92,-2.0l-0.93,-2.11l0.32,-0.65l0.79,-0.2l3.53,2.42l2.17,-0.13l1.54,1.52l1.28,-0.4l1.47,-1.74l1.11,0.38Z", "name": "Ari\u00e8ge"}, "FR-75": {"path": "M465.44,178.43l-0.81,2.42l-0.63,0.32l-6.66,-0.1l-4.66,-1.66l-1.08,0.25l-0.35,-1.01l0.33,-1.1l1.86,-2.31l6.5,-0.01l0.75,0.27l1.32,1.54l1.0,0.67l2.45,0.72Z", "name": "Paris"}, "FR-74": {"path": "M679.63,390.63l1.41,-0.73l2.69,-0.56l2.68,-0.09l2.31,0.77l2.11,-0.97l3.09,-3.14l3.94,-2.28l1.58,-1.45l-0.19,-2.13l-0.68,-0.47l-1.16,0.35l-0.4,-0.18l-0.89,-2.03l4.08,-5.7l3.32,0.16l1.15,1.46l0.93,0.33l0.77,-0.37l0.82,-1.0l4.35,-1.83l1.15,-1.48l11.95,-1.05l5.16,0.78l0.08,0.91l-0.38,1.12l-1.55,1.58l-0.38,1.39l1.23,1.83l2.14,1.97l1.23,1.83l-2.07,3.51l-1.08,2.81l-0.54,2.86l0.83,1.53l4.77,0.91l0.69,0.58l-1.17,1.69l0.25,3.27l1.29,0.49l1.46,-0.85l1.18,0.45l4.32,4.17l1.84,4.74l-1.27,1.06l-1.66,3.08l-1.14,0.85l-2.54,0.9l-1.94,0.05l-0.44,1.16l-1.45,-0.68l-2.69,0.96l-0.98,1.38l-0.34,1.34l0.04,2.12l-4.13,2.65l-0.73,-0.03l0.35,-2.15l-1.24,-1.81l-2.0,-0.99l-2.81,-0.28l-1.03,-0.51l-1.81,-1.57l-0.56,-1.14l1.0,-1.78l0.02,-1.93l-1.76,-1.43l-1.59,-0.03l-3.28,3.19l-0.87,1.3l-1.24,3.11l-0.67,0.83l-2.92,2.02l-1.3,3.76l-1.06,1.36l-1.32,0.92l-1.47,0.48l-1.52,0.03l-0.54,-0.18l-2.86,-3.29l-1.72,-1.36l-1.97,-0.89l-2.29,-0.03l-1.84,1.2l-1.36,0.1l-2.67,-0.73l-1.01,-0.85l-0.99,-3.12l-1.13,-0.8l-3.31,-0.61l-0.71,-0.81l-0.96,-6.52l-0.65,-1.13l-1.01,-0.37l-0.98,-8.24l0.06,-3.25l0.91,-0.87l0.83,0.89l0.88,0.31l1.03,-0.56l1.55,-2.09l1.78,0.11l1.01,-0.3Z", "name": "Haute-Savoie"}, "FR-77": {"path": "M527.01,179.34l-0.11,1.1l-0.51,0.67l-2.55,0.08l-0.94,0.42l-0.16,0.75l1.09,1.07l-1.54,1.52l-0.27,1.55l0.54,0.66l1.24,-0.02l1.67,1.83l0.7,2.85l-0.5,1.9l0.28,1.65l0.9,0.56l2.22,-0.3l1.49,1.83l-2.45,1.85l-1.06,1.42l-0.92,2.34l-0.48,0.4l-2.35,0.42l-0.63,0.51l-0.08,0.73l0.94,1.41l-1.79,1.84l-0.05,0.79l0.65,1.23l-0.56,2.16l0.16,0.69l-1.39,1.3l-0.9,1.45l-0.77,0.1l-1.91,-0.46l-6.17,0.91l-4.68,-0.48l-2.32,0.9l-3.26,0.0l-0.8,0.78l-1.15,3.24l0.03,1.71l0.9,2.26l-1.5,2.46l-3.77,2.32l-0.95,3.37l-6.65,1.88l-0.6,-0.12l0.46,-1.24l-0.4,-0.63l-0.91,-0.28l-1.66,0.13l-1.16,0.39l-1.65,1.59l-1.87,0.81l-8.32,-0.58l-4.04,0.66l-1.59,-0.77l0.02,-0.63l0.53,-0.53l2.04,0.27l0.77,-0.41l0.21,-0.87l-0.51,-1.19l0.65,-0.98l0.18,-1.12l-1.38,-1.72l-3.43,-1.97l-0.96,-3.2l-1.72,-2.25l5.65,-5.46l1.78,-1.03l0.76,-0.92l-0.07,-0.57l-1.16,-0.88l-0.12,-0.46l-0.39,-5.8l1.51,-4.97l0.18,-3.88l0.77,-1.17l2.31,-2.12l-0.19,-2.68l1.31,-1.81l0.38,-1.59l-0.6,-6.14l-1.09,-2.66l0.08,-1.07l1.2,-3.57l0.0,-1.26l-1.33,-2.97l0.48,-1.75l-0.39,-0.89l-0.98,-0.66l0.63,-1.27l0.34,-2.93l0.59,-1.15l2.39,-0.95l1.28,0.25l1.79,1.42l0.99,0.02l1.16,-0.44l1.27,0.83l1.39,0.28l2.4,-1.49l4.01,0.91l5.72,-1.07l1.57,0.83l2.35,-1.11l1.82,-0.03l2.03,-1.04l3.48,0.96l0.98,1.05l0.87,1.67l-0.52,2.79l0.73,1.41l8.88,6.73l0.87,0.26l1.23,-0.5l0.48,0.14l0.61,2.97l0.7,1.03l3.28,1.81l2.3,-0.04Z", "name": "Seien-et-Marne"}, "FR-76": {"path": "M421.48,106.09l-2.06,1.53l-2.09,2.85l-0.45,1.3l0.44,0.98l2.53,-0.43l0.4,0.34l-0.82,1.37l-1.94,1.09l-0.47,0.89l0.74,1.37l0.19,3.89l0.54,1.79l0.44,3.63l0.8,0.82l2.01,-0.46l0.65,0.53l-0.4,1.31l-1.05,0.52l-0.47,0.65l-1.01,2.31l-0.24,1.82l-2.08,0.81l-8.41,-3.23l-9.16,-1.1l-2.76,1.06l-1.7,1.98l-2.65,4.9l-0.59,0.43l-4.31,-0.27l-1.66,0.48l-1.22,0.86l-1.39,1.74l-3.89,0.92l-1.17,0.83l-0.65,1.2l0.29,1.23l-0.88,0.29l-0.99,-0.12l-3.87,-2.8l-2.21,-0.65l-1.68,-0.96l-0.59,-1.63l3.05,0.44l0.46,-0.41l-0.17,-2.06l-0.9,-0.89l-2.36,-1.02l-2.91,-2.45l-0.98,-0.39l-5.97,1.34l-2.55,-0.37l-1.75,-2.77l-0.47,-0.17l-2.35,0.47l-1.02,-0.38l-1.98,-2.28l-2.48,-1.7l-0.84,0.03l-4.29,2.28l-4.93,0.6l-4.99,-0.57l-4.35,-1.26l-3.7,-0.45l-1.09,-0.56l-1.65,-2.15l0.22,-1.23l3.15,-4.92l2.42,-6.93l3.76,-2.82l9.31,-3.67l0.73,-0.8l7.56,-3.82l2.18,-0.58l2.37,-1.37l4.68,-1.45l5.32,0.04l25.22,-6.87l1.56,-1.02l1.59,-0.51l2.41,-2.26l6.63,-4.5l8.53,5.05l10.02,8.92l0.82,1.05l0.92,3.13l1.89,2.97l0.77,2.22Z", "name": "Seine-Maritime"}, "FR-71": {"path": "M562.27,336.18l0.34,-0.39l2.2,-0.79l0.73,-1.26l-0.24,-1.31l-2.75,-2.1l0.02,-3.93l-0.92,-0.98l-1.84,-0.56l-0.18,-0.63l0.21,-0.67l2.84,-0.75l0.95,-1.27l0.11,-1.78l-1.0,-2.98l0.55,-2.03l4.19,-0.67l3.55,-1.98l1.28,-0.32l0.94,0.2l2.52,2.56l3.25,1.17l1.71,2.88l0.9,0.16l1.88,-0.56l1.71,2.13l1.13,0.82l4.1,1.22l2.31,-0.15l2.09,4.11l1.21,1.07l3.27,0.91l0.98,2.32l1.15,0.68l1.06,-0.1l1.91,-1.42l3.31,-0.2l7.33,-2.89l5.05,-0.51l3.5,-0.95l1.75,1.53l5.44,-0.2l4.0,-1.74l0.92,0.33l1.55,2.84l3.44,3.22l2.4,1.27l1.61,0.29l1.67,1.37l1.99,0.63l-1.05,1.51l-4.39,0.61l-1.2,1.17l-0.05,0.66l0.39,0.73l1.85,1.61l-0.8,1.32l-0.1,0.94l1.47,1.38l1.77,6.19l-1.03,3.43l-1.83,1.08l-0.81,1.06l-0.2,2.01l0.61,1.51l2.83,1.66l0.43,0.91l-1.02,0.93l-4.32,0.87l-1.26,0.59l-4.14,-0.98l-1.53,-0.8l-2.16,-1.97l-1.58,-0.52l-2.05,0.18l-3.7,1.25l-1.28,0.13l-4.17,-1.37l-0.92,-0.05l-1.3,0.44l-1.85,4.3l-0.85,4.21l-1.47,2.56l-0.15,1.93l-3.53,6.7l-1.32,4.86l0.08,0.87l-2.89,-0.32l-0.98,-0.75l-0.98,-2.54l0.04,-1.79l-1.73,-1.29l-0.18,-1.86l-0.76,-0.6l-1.87,-0.55l-1.12,0.62l-0.53,1.93l-1.03,0.26l-2.35,-2.01l-0.72,0.04l-1.62,0.92l-1.03,0.08l-2.29,-0.51l-2.25,-0.92l-0.92,0.11l-0.68,0.9l-1.27,4.46l-1.74,2.06l-1.51,1.09l-1.62,0.57l-1.65,0.02l-4.83,-1.24l-3.08,0.65l-4.17,-0.93l-4.25,1.28l-1.42,-0.08l-2.06,-1.47l-2.77,-1.06l0.11,-2.73l-0.6,-1.7l5.26,-2.58l1.52,-1.33l0.08,-0.97l-0.86,-1.29l0.04,-1.38l-0.52,-1.25l0.64,-3.0l-0.8,-3.17l-2.08,-1.35l-4.18,-0.89l-2.7,-2.24l-1.72,-0.07l-3.83,-1.94l0.37,-3.1l-0.38,-1.88l-1.07,-0.72l-1.57,-2.64l-2.41,-2.14l-0.47,-1.58l-1.23,-1.99l6.23,-0.88l1.46,0.86l2.65,2.87l0.44,0.1l1.46,-0.58l1.52,-1.21l3.71,-1.21l4.85,-2.87l3.05,-0.59l0.49,-0.7l0.09,-2.12l-0.8,-1.29Z", "name": "Sa\u00f4ne-et-Loire"}, "FR-70": {"path": "M732.55,259.44l-2.88,3.17l-1.2,2.11l-0.42,2.48l1.68,5.43l0.2,3.95l1.28,2.06l-0.19,0.86l-1.42,1.33l-4.67,-1.11l-2.25,0.63l-1.97,1.28l-2.26,-0.42l-1.03,0.82l-1.64,2.83l-3.01,-1.42l-0.7,0.17l-0.94,0.9l-1.98,-1.56l-1.16,-0.14l-5.54,0.9l-1.91,1.17l-1.98,4.16l-0.8,0.72l-3.35,-0.18l-1.04,0.81l-1.02,1.85l-0.9,0.3l-2.2,-0.03l-2.92,2.94l-4.6,1.44l-4.42,-0.47l-11.89,6.05l-3.92,-0.48l-4.0,0.76l-3.44,-1.66l-0.69,-0.66l-0.63,0.02l-0.84,-1.07l-0.56,-4.91l-2.21,-1.91l-0.59,-3.43l-0.81,-0.72l-1.67,-0.59l0.44,-1.97l0.7,-0.55l1.95,-0.44l2.03,-2.43l0.31,-1.4l-0.34,-1.34l-0.93,-1.42l0.2,-1.34l-0.22,-0.65l-1.0,-1.07l-0.91,-0.31l-0.83,0.13l-1.8,1.57l-1.46,-0.6l2.09,-4.03l1.01,-0.53l3.99,-0.6l3.21,1.65l1.53,0.3l6.58,-1.86l0.7,-0.44l0.69,-0.83l0.2,-0.97l-0.19,-2.21l0.55,-2.48l-0.58,-2.14l0.19,-0.51l0.63,-0.82l6.42,-3.94l2.41,-2.91l2.03,-0.75l0.4,-0.92l-0.24,-0.87l1.66,-0.91l1.8,-2.61l0.31,0.88l-0.17,1.53l0.84,0.59l3.53,-2.14l2.66,-2.84l1.54,-0.3l2.78,0.53l1.12,0.68l0.83,1.02l-0.06,1.28l0.31,0.67l3.72,1.77l2.64,-0.19l2.39,-1.21l3.0,-0.19l2.26,0.8l5.28,2.92l1.38,0.35l2.17,-0.03l1.59,-0.57l1.93,-2.36l0.72,-0.14l3.61,3.45l3.4,1.51l5.45,3.8Z", "name": "Haute-Sa\u00f4ne"}, "FR-73": {"path": "M658.46,427.8l1.73,-0.16l4.42,-4.15l2.23,-1.04l0.99,-1.05l0.84,-2.26l0.46,-3.28l2.91,-7.66l0.55,-2.73l0.4,0.1l0.46,0.75l0.65,5.41l0.44,1.39l1.0,1.06l3.47,0.68l0.76,0.58l0.53,2.21l0.99,1.46l2.07,0.99l1.65,0.28l1.63,-0.15l1.83,-1.19l1.78,0.03l1.77,0.79l1.66,1.31l2.85,3.29l1.02,0.37l1.77,-0.06l1.58,-0.52l1.6,-1.13l1.2,-1.57l1.17,-3.53l2.91,-2.03l0.8,-1.02l1.25,-3.12l0.78,-1.16l2.92,-2.92l0.45,-0.1l1.07,0.4l0.92,1.0l-0.17,1.13l-1.03,1.87l0.69,1.7l2.0,1.78l1.23,0.62l2.94,0.32l1.7,0.87l0.94,1.44l-0.47,2.15l0.38,0.48l1.56,-0.02l3.93,-2.52l0.65,2.99l1.41,1.87l1.65,1.08l2.44,0.57l2.19,1.73l2.63,0.83l0.29,0.87l-0.98,2.48l1.03,2.1l0.33,3.09l0.49,1.22l5.55,3.27l1.58,2.67l3.47,1.57l0.2,0.81l-1.73,3.0l-2.31,2.53l0.24,2.49l0.65,1.55l0.0,0.91l-1.6,1.21l-1.33,1.99l-0.85,-0.84l-0.72,-0.2l-4.4,1.41l-2.78,3.01l-2.44,0.32l-0.53,0.84l0.54,1.12l-1.68,0.71l-4.26,-1.68l-2.26,-0.35l-2.28,1.23l-2.07,0.11l-2.41,1.23l-1.98,0.23l-2.21,1.2l-2.53,0.08l-0.73,0.39l-0.94,2.26l-0.81,0.88l-1.02,0.26l-3.86,-1.22l-0.85,-1.84l-1.43,-1.0l-4.54,-0.57l-0.87,-0.62l-0.8,-1.5l-1.95,-0.61l-3.81,-0.24l-0.27,-2.67l-1.39,-5.1l0.11,-1.29l0.63,-1.24l2.75,-2.38l0.41,-2.05l-0.5,-2.06l-1.14,-1.71l-2.71,-2.72l-0.85,-0.35l-4.2,-0.4l-3.65,-2.95l-2.4,-0.56l-1.35,0.34l-1.1,0.96l-0.35,5.75l-8.79,-3.19l-0.82,-0.79l-7.95,-14.1Z", "name": "Savoie"}, "FR-72": {"path": "M351.4,270.06l0.02,0.93l-2.17,0.43l-3.23,1.43l-2.52,0.52l-1.04,0.58l-0.9,0.99l-1.95,-0.85l-1.07,0.0l-0.78,0.53l-0.36,0.7l0.4,2.57l-5.8,-1.04l-6.07,-1.69l-0.5,0.27l-0.57,1.88l-1.08,0.05l-3.11,-1.35l-2.23,-0.37l-6.66,-3.2l-3.43,-0.45l-0.68,0.27l-0.86,1.05l-1.16,0.43l-1.42,-0.29l-1.32,-0.88l-0.81,-1.26l-0.1,-1.37l1.2,-0.92l0.27,-0.59l-0.87,-1.29l-0.99,-0.13l-2.11,1.18l-9.84,-4.01l1.52,-1.18l0.27,-1.75l-0.32,-0.43l-2.15,-0.41l-0.74,-0.43l-0.62,-0.89l0.02,-0.71l2.8,-1.29l0.77,-0.83l0.19,-1.25l-0.86,-1.98l0.51,-1.45l1.22,-0.73l2.99,-0.23l1.11,-0.49l0.65,-0.82l0.05,-1.28l-0.48,-1.18l-2.27,-2.6l-0.42,-0.77l0.21,-0.82l4.77,-1.14l1.85,-1.48l0.52,-2.07l-0.91,-2.91l0.27,-2.05l4.53,-2.75l1.2,-2.44l-0.88,-8.62l0.85,-1.78l0.67,-0.45l7.89,-1.16l3.37,0.46l0.6,-0.45l0.44,-1.41l2.46,-0.81l2.23,-2.53l2.43,-1.15l5.27,-1.07l1.66,0.18l3.55,1.66l0.35,1.07l-0.32,2.68l0.3,3.32l0.87,2.03l1.63,1.4l1.84,0.94l2.82,-0.07l0.41,2.48l1.13,0.63l5.3,1.27l2.3,0.07l0.97,-0.32l1.62,1.39l1.93,2.55l2.19,1.39l1.53,0.31l1.53,-0.36l2.97,1.92l3.09,0.38l0.63,0.45l-0.41,0.52l-4.24,2.22l-0.26,1.28l1.21,1.18l-2.67,0.5l-0.68,0.75l0.01,0.82l1.12,2.05l1.71,0.46l-0.65,3.22l0.42,1.92l-0.62,1.15l-3.06,2.39l-0.56,1.67l-0.05,3.43l-1.51,4.18l-1.33,1.2l-1.74,0.98l-3.44,1.47l-1.46,1.3l-0.79,1.81l0.48,1.28Z", "name": "Sarthe"}, "FR-79": {"path": "M307.7,318.83l1.01,2.11l0.31,2.12l0.43,0.78l1.59,0.62l0.51,0.63l-0.04,1.91l1.71,5.06l2.48,2.93l-0.11,0.87l-0.46,0.4l-1.76,-0.04l-0.36,0.34l-0.18,1.29l0.21,3.21l1.5,1.72l0.3,0.95l-0.7,2.37l-1.66,2.9l-0.27,1.28l0.15,1.41l0.77,1.23l1.89,0.75l0.18,0.78l-1.63,4.28l-1.29,1.43l-0.35,0.87l0.03,2.17l1.17,1.4l0.04,4.29l0.67,1.2l1.43,1.29l-0.04,2.02l0.5,1.39l1.12,1.37l1.4,0.93l1.33,-0.26l1.92,-2.12l0.98,-0.48l0.98,0.03l1.05,0.86l0.28,1.47l-0.35,1.7l-0.79,1.42l-2.24,2.67l-0.55,1.15l-0.3,1.85l0.85,1.39l4.2,1.72l0.65,0.44l0.28,0.88l-0.61,2.2l0.12,0.72l-0.77,0.42l-2.59,-1.26l-3.0,0.43l-3.33,1.46l-2.96,2.31l-3.1,5.17l-2.17,0.89l-1.1,-0.39l-3.28,-3.64l-5.12,-3.24l-2.81,-0.86l-4.02,-0.1l-3.17,-2.08l-1.48,-0.19l-2.64,0.33l-2.25,-2.14l-1.36,-0.65l-3.99,-0.28l-1.25,-0.8l-5.25,-5.83l-1.47,-0.94l0.45,-0.86l0.02,-1.06l-0.75,-1.98l3.3,-1.6l2.86,-0.19l2.34,-2.04l2.9,-0.42l0.56,-0.59l0.18,-0.79l-0.96,-1.5l-2.15,-1.52l-1.48,-0.05l-0.2,-0.92l0.59,-2.98l-0.97,-4.09l1.47,-2.55l-0.66,-4.53l-1.62,-2.86l-0.6,-3.2l-3.78,-6.41l-0.05,-0.67l0.83,-1.82l-0.25,-0.71l-1.96,-1.84l-3.53,-1.93l-0.97,-1.29l-0.82,-3.62l-0.91,-1.07l-1.53,-0.78l-2.22,-3.06l-2.05,-1.29l0.28,-0.66l0.72,0.13l4.34,1.93l4.31,-0.56l5.13,0.68l3.99,-0.34l1.28,-0.41l1.37,-1.03l2.73,-1.24l0.34,-1.13l-0.81,-1.37l1.0,-0.85l1.73,-0.42l2.13,0.74l5.97,-1.69l6.45,-0.7l3.52,0.09l1.83,-0.35l1.08,0.56l1.0,2.22l1.71,0.55l0.63,-0.49Z", "name": "Deux-S\u00e8vres"}, "FR-78": {"path": "M418.01,161.81l0.47,1.62l1.53,0.32l3.71,-1.8l2.31,-0.25l0.99,0.35l0.64,0.72l0.72,2.92l0.93,1.67l0.47,0.18l3.61,-1.19l1.99,0.28l1.59,2.11l-0.41,1.35l0.52,1.33l1.23,0.51l1.54,-0.92l1.78,-3.26l1.06,-0.33l3.04,0.23l1.68,0.75l-0.28,1.59l-2.23,1.75l-0.89,2.2l0.17,2.13l0.34,0.36l1.31,0.21l0.05,2.93l0.86,2.02l3.06,2.77l-5.57,1.66l-0.64,0.67l-1.39,3.89l-1.84,0.37l-0.95,0.59l-0.89,1.34l-0.26,1.51l0.54,3.15l-0.45,2.53l-0.65,1.03l-0.75,0.35l-2.82,0.14l-0.66,0.79l-1.85,7.72l-2.31,0.34l-4.37,-1.8l-0.92,-0.66l-1.17,-1.71l0.01,-2.65l-0.44,-1.51l-0.7,-0.87l-2.25,-1.46l-0.79,-2.45l-3.87,-2.43l-1.32,-1.5l-0.63,-1.5l-1.41,-0.91l0.0,-0.93l1.6,-2.06l0.18,-1.09l-0.28,-0.53l-1.69,-0.85l-0.41,-0.65l-0.06,-1.41l0.53,-2.41l-0.31,-1.9l-1.49,-1.94l-3.28,-5.55l-0.4,-2.82l-2.11,-0.85l0.25,-2.13l-0.72,-1.71l0.41,-0.57l7.7,-1.56l2.34,-1.08l4.31,0.9Z", "name": "Yvelines"}, "FR-66": {"path": "M419.41,662.94l0.18,-1.54l0.62,-1.4l0.95,-0.83l6.33,-1.23l1.62,-0.04l2.87,0.76l1.42,-0.31l1.24,-1.33l0.24,-2.08l0.4,-0.91l1.5,-1.63l6.16,-0.76l3.36,0.54l0.91,-0.41l1.55,0.66l1.74,-1.21l2.82,-2.93l2.32,0.28l1.26,-0.26l1.25,-0.79l0.69,-1.19l-1.22,-6.76l0.48,-0.85l1.85,-0.65l20.21,0.96l1.72,-0.54l3.27,-3.63l4.2,-1.71l2.09,1.3l9.15,4.22l-0.42,6.18l0.26,1.92l-0.34,3.08l0.88,9.52l1.12,1.26l4.27,1.24l0.37,0.52l-0.12,1.76l1.98,2.59l0.3,1.34l-2.29,0.36l-3.05,-0.09l-1.83,-0.7l-1.61,-2.13l-2.87,-0.28l-1.16,0.57l-2.17,-0.57l-1.94,1.35l-3.1,0.24l-3.76,2.65l-4.83,-0.08l-1.22,0.53l-2.65,1.86l-0.57,0.72l0.5,1.8l0.52,0.57l-2.26,-0.17l-2.79,-0.85l-1.31,0.01l-0.83,0.63l-0.48,1.11l-0.67,0.22l-2.94,-1.07l-1.08,-0.76l-1.67,-2.44l-2.78,-0.4l-6.16,-2.91l-1.99,0.2l-3.71,1.04l-3.02,-0.29l-1.14,0.54l-1.01,1.86l-2.45,1.95l-0.62,0.36l-2.45,0.36l-0.71,-0.1l-1.77,-1.24l-1.32,-3.75l-1.07,-1.5l-3.53,-0.74l-3.45,-2.1l-1.38,-0.5l-3.76,-0.46l-0.8,-0.3l-0.31,-0.6ZM436.08,668.09l0.96,-0.22l0.2,-0.59l-1.32,-2.33l-0.63,-0.79l-0.47,-0.12l-0.9,0.48l-0.67,1.33l0.07,1.16l0.97,0.84l1.79,0.25Z", "name": "Pyr\u00e9n\u00e9es-Orientales"}, "FR-67": {"path": "M749.43,204.53l5.77,-0.36l0.71,-0.43l0.65,-1.16l2.35,-1.16l0.73,-0.71l0.93,-1.77l1.44,-4.66l-0.53,-0.88l-1.5,-0.78l-0.14,-0.62l2.91,-4.3l0.33,-1.37l-0.57,-1.43l-3.83,-3.82l-1.83,-0.81l-0.15,-1.32l-0.77,-0.76l-0.74,0.09l-0.54,0.56l-0.45,1.75l-2.17,0.87l-1.14,1.58l-1.05,0.07l-0.85,-1.8l-0.77,-0.61l0.26,-0.79l0.96,-0.95l-0.06,-1.04l-5.03,-1.96l-1.91,-1.6l-0.2,-0.81l0.44,-1.33l0.89,-1.07l2.61,-2.08l0.31,-1.9l2.13,-2.7l-0.21,-1.76l0.28,-0.4l1.23,0.18l0.29,0.32l0.81,2.78l0.94,1.02l8.51,2.56l1.02,1.76l1.21,0.68l1.4,0.29l2.12,-0.08l7.03,-1.14l3.26,1.63l1.38,-0.12l0.76,-0.45l1.05,-1.41l1.35,-2.8l1.9,-2.92l2.27,-0.55l2.64,0.55l2.77,-0.96l5.0,1.23l4.59,-0.2l9.65,4.37l6.29,1.29l-1.02,1.01l-1.91,3.08l-2.79,6.52l-0.7,1.0l-3.2,1.38l-0.7,0.85l-0.46,1.3l-2.12,0.14l-0.95,0.41l-0.65,2.78l-3.8,3.45l-2.72,1.47l-2.58,3.44l-0.59,2.73l-0.01,2.81l0.72,2.0l-2.23,1.72l-0.47,2.28l-1.12,1.98l-0.77,3.01l-0.07,1.2l0.89,2.96l-0.06,0.91l-0.71,0.98l-2.24,1.43l-0.92,4.51l-4.46,5.68l-0.61,2.23l-1.29,2.14l-2.85,-0.38l-0.93,-1.96l-2.43,-0.53l0.39,-2.66l-0.86,-1.15l-9.78,-4.05l-0.93,-2.72l-1.79,-0.58l-3.01,-0.19l-0.06,-0.79l-1.49,-1.39l-3.3,-0.17l-1.31,-0.59l-0.23,-0.56l0.82,-2.61l0.59,-7.58l1.09,-1.01l0.02,-0.68l-3.11,-1.58Z", "name": "Bas-Rhin"}, "FR-64": {"path": "M204.81,598.27l0.63,0.4l0.52,-0.08l1.38,-0.84l5.64,-0.92l1.36,-1.72l2.57,-1.46l2.17,-3.85l2.64,-3.02l2.34,1.93l1.96,0.84l3.62,-0.6l4.13,-0.08l2.15,-0.46l2.54,-1.24l2.39,-2.3l1.4,0.72l0.29,0.8l-0.18,2.62l1.09,1.13l0.44,0.09l4.3,-2.38l2.57,1.36l1.05,0.16l1.13,-0.26l1.13,-0.65l0.53,-1.09l-0.02,-1.16l3.11,0.76l1.49,-0.99l2.78,0.18l3.59,-1.69l2.16,0.06l2.94,1.44l2.65,-0.72l6.78,1.04l1.02,-0.26l5.11,-3.37l0.44,0.14l-0.23,1.88l1.48,0.88l6.8,-0.81l3.48,-1.38l3.8,-0.5l5.59,1.04l1.06,0.66l0.67,1.47l1.56,1.16l2.16,4.89l-0.31,0.26l-1.15,-0.07l-0.56,0.49l0.03,2.28l0.52,0.69l0.76,0.17l1.43,-1.29l0.75,0.02l-0.11,3.16l1.06,3.23l-0.48,0.48l-1.62,0.52l-0.96,1.06l-0.61,2.64l0.6,2.08l-0.4,0.75l-1.97,1.89l-1.1,3.23l-1.55,0.13l-1.74,2.98l-2.28,1.29l-0.98,1.23l0.15,3.83l-0.4,0.28l-2.98,0.33l-2.69,2.77l-0.17,0.81l0.39,1.61l-0.03,1.69l-1.67,2.29l-0.35,1.23l0.55,3.77l-0.88,-0.07l-0.78,1.18l-0.86,-0.35l-4.31,2.79l-1.69,0.12l-3.22,-1.34l-1.7,-0.07l-0.41,0.38l-0.09,1.49l-1.58,0.74l-0.62,-1.55l-1.55,-0.25l-0.08,-0.92l-2.44,-2.91l-3.24,-2.0l-1.85,-0.11l-0.47,-0.41l-0.25,-0.49l0.25,-1.36l-1.4,-2.86l-1.82,-0.51l-4.68,0.75l-4.79,-0.35l-2.24,-0.65l-2.95,-2.22l-3.08,-0.49l-2.02,-1.09l-2.32,0.15l-4.04,-2.44l-3.6,-0.59l-1.04,-0.56l-0.92,-0.94l-0.21,-0.75l0.38,-0.75l1.21,-0.93l-0.15,-0.71l-1.6,-0.32l-1.53,0.56l-1.05,1.06l-0.53,1.66l-0.16,1.94l-0.41,0.78l-2.38,0.12l-2.68,-0.98l-1.02,-1.03l-0.63,-1.32l3.7,-3.88l0.95,-2.41l0.66,-2.96l-0.35,-3.1l-2.03,-1.72l-2.04,0.3l-2.51,-1.16l-3.21,-0.56l-1.3,0.75l-0.75,1.77l-1.7,0.25l-0.8,-0.46l-0.49,-1.68l0.17,-0.84l-0.85,-0.76l-1.84,-0.58l-3.76,1.0l-0.43,-1.87l-0.91,-1.03l-1.52,-0.66l0.07,-2.41ZM309.11,602.32l1.15,-0.9l0.67,-2.47l-0.61,-1.33l-1.64,-0.44l-1.19,0.8l-0.49,2.49l0.63,1.45l1.49,0.4ZM307.84,608.3l0.94,-0.4l1.08,-1.94l-0.6,-1.74l-1.63,-0.95l-0.46,0.07l-1.45,1.45l-0.2,1.38l0.25,1.08l0.52,0.68l1.55,0.37Z", "name": "Pyr\u00e9n\u00e9es-Atlantiques"}, "FR-65": {"path": "M296.09,638.61l-0.69,-4.39l0.23,-0.9l1.78,-2.58l-0.28,-3.88l2.39,-2.45l2.79,-0.25l0.84,-0.59l0.32,-0.83l-0.41,-1.39l0.02,-1.75l0.72,-0.92l2.37,-1.37l1.67,-2.92l1.05,0.11l0.6,-0.32l1.2,-3.37l1.88,-1.77l0.55,-1.02l0.07,-0.67l-0.62,-1.7l0.51,-2.21l0.68,-0.76l2.02,-0.75l0.42,-0.66l-0.06,-1.09l-0.97,-2.51l0.21,-2.73l-0.21,-0.77l-0.56,-0.5l-0.61,-0.06l-0.78,0.37l-1.02,1.09l-0.38,-0.27l-0.07,-1.71l1.65,-0.19l0.4,-0.55l-0.04,-0.91l-1.88,-4.23l-1.97,-1.72l-0.58,-1.36l-0.95,-0.68l0.87,-0.85l1.51,-0.95l1.62,-0.48l1.39,0.18l0.57,2.55l1.26,2.72l1.24,0.37l3.06,1.7l1.79,0.31l0.52,1.92l1.02,1.53l-0.53,1.94l0.23,1.42l1.31,0.87l1.13,1.6l0.97,0.79l2.03,0.3l4.05,-0.88l0.82,0.14l1.23,1.44l1.4,0.78l0.95,-0.14l1.36,-0.84l1.27,1.95l0.96,0.24l2.74,-0.2l8.19,1.7l0.38,1.06l-2.92,2.88l0.13,2.25l-0.32,0.39l-2.29,0.86l-1.23,1.77l-3.84,3.53l0.07,0.64l7.15,4.1l-1.97,3.94l0.1,1.15l0.5,0.33l0.87,-0.24l1.82,-1.22l1.58,-0.52l2.13,5.0l-3.75,5.0l-1.72,1.29l-3.06,-0.36l-1.37,0.25l-1.04,1.57l-0.46,1.98l-0.12,4.52l0.7,5.23l-2.01,0.47l-2.19,-0.13l-0.39,-1.05l-2.06,-1.35l-1.26,0.44l-2.75,3.06l-0.55,0.07l-2.26,-3.03l-4.46,-1.22l-1.15,0.19l-1.08,0.65l-3.75,0.5l-4.68,1.54l-1.99,0.16l-2.26,-0.8l-1.02,-1.0l-1.36,-0.45l-0.27,-0.97l-1.39,-1.16l-0.66,-0.99l-0.32,-1.14l0.13,-1.21l-0.54,-0.42l-2.76,0.82l-1.36,-0.14l-0.79,-1.35l-3.39,-1.83ZM309.0,601.52l-0.8,-0.16l-0.41,-0.99l0.4,-2.01l0.84,-0.4l0.79,0.28l0.31,0.77l-0.59,2.03l-0.54,0.47ZM307.75,607.5l-0.9,-0.16l-0.53,-1.24l0.07,-0.86l1.14,-1.14l1.03,0.52l0.48,1.4l-0.86,1.31l-0.43,0.15Z", "name": "Hautes-Pyr\u00e9n\u00e9es"}, "FR-62": {"path": "M413.26,57.99l0.02,-1.01l-3.2,-2.12l1.12,-3.04l0.33,-6.83l1.74,-1.1l0.1,-0.58l-1.61,-2.08l-0.3,-1.01l-0.26,-3.74l-0.64,-3.46l0.26,-2.94l2.0,-4.41l0.34,-1.54l-1.52,-6.24l1.26,-0.84l3.05,-0.71l2.82,-2.96l1.8,-1.42l11.58,-4.22l1.24,0.13l2.03,-1.0l5.25,-0.55l2.42,2.31l4.96,8.43l2.25,6.01l1.42,1.12l1.84,0.6l5.52,-0.1l1.0,0.31l0.46,0.59l-2.34,2.65l-0.02,1.1l0.98,1.29l-0.35,2.13l0.77,0.98l3.22,0.58l2.96,2.38l1.15,0.37l15.06,0.55l1.38,-0.82l1.83,-2.04l1.02,-0.52l0.9,0.15l1.0,0.69l1.3,1.43l-2.22,0.94l-0.91,0.89l-0.4,1.05l0.06,1.66l-1.07,1.87l0.19,1.3l1.07,1.24l1.24,0.31l2.29,-0.59l0.86,0.1l2.28,2.2l3.62,-0.22l1.06,0.77l0.59,2.11l0.72,1.19l2.6,0.82l-0.15,0.97l-2.82,1.98l-0.48,1.75l1.16,1.72l1.53,1.4l0.91,1.31l0.1,0.8l-2.5,2.87l-0.01,1.38l0.7,0.76l0.97,0.21l2.38,-1.03l2.06,0.16l1.0,0.46l1.66,1.62l0.28,0.93l-1.83,1.86l-0.79,1.44l-2.26,8.75l-0.05,1.35l-3.49,-1.73l-2.18,-0.15l-1.29,0.85l-0.01,1.73l-0.42,0.53l-3.52,0.3l-2.63,1.27l-0.35,-0.48l-0.01,-2.43l-0.6,-1.0l-0.66,-0.3l-0.96,0.27l-3.34,2.32l-0.75,-0.07l-0.01,-0.57l1.09,-1.47l-0.03,-1.29l-1.31,-2.12l-0.95,-1.02l-1.19,-0.66l-0.76,0.22l-0.47,0.72l-0.22,3.08l-3.59,-1.54l-3.28,-0.62l0.23,-1.55l-0.84,-0.78l-1.17,-0.0l-1.89,0.86l-2.21,-0.34l-2.47,0.23l-0.82,0.62l-1.01,1.74l-0.72,-0.02l-0.81,-0.93l-0.31,-0.93l0.37,-1.76l1.95,-1.64l2.76,-1.45l0.65,-0.83l-0.19,-0.81l-0.67,-0.61l-2.96,-1.39l-1.81,-0.11l-1.13,0.92l-1.61,-1.74l-0.92,-0.29l-0.8,0.45l-0.34,0.97l-1.02,0.36l-6.98,0.99l-4.57,0.1l-1.52,-1.03l-0.6,-1.14l-0.08,-1.04l-0.83,-0.91l-6.58,-3.15l0.97,-1.81l-1.0,-0.9l-1.27,0.07l-1.48,1.08l-0.5,0.02l-0.91,-0.44l-1.88,-1.99l-1.36,-0.85l-2.32,-0.22l-2.56,0.27l-4.46,1.3l-2.04,-0.71l-1.31,-1.35ZM502.82,75.26l-0.41,-1.74l-0.71,-0.15l-1.47,1.47l-1.82,0.28l-0.4,0.37l-0.14,2.13l0.33,0.42l1.15,0.19l3.31,-0.77l0.35,-0.44l-0.19,-1.76Z", "name": "Pas-de-Calais"}, "FR-63": {"path": "M539.28,403.78l-0.1,0.97l0.42,0.81l2.12,1.59l0.81,1.4l-1.18,2.85l-0.09,2.56l-0.9,1.89l0.2,0.76l1.8,2.84l1.04,0.63l0.51,0.79l3.2,6.42l7.55,6.03l2.43,5.41l0.06,0.97l-0.44,1.28l-0.44,0.82l-2.82,2.97l-0.8,1.5l-0.51,2.35l-4.5,-1.88l-1.24,0.65l-0.7,1.6l-1.04,0.46l-1.35,-0.11l-2.73,-1.3l-0.8,-0.09l-3.34,1.65l-0.8,-0.4l-2.4,-2.99l-3.95,-1.79l-1.72,-0.06l-5.17,1.19l-2.96,-1.53l-1.3,-0.04l-1.64,1.33l-4.08,1.3l-2.15,2.12l-1.79,0.43l-4.22,0.04l-4.2,4.06l-2.11,0.79l-2.63,-1.43l-1.86,-3.64l-1.2,-1.24l-4.3,-1.84l-5.21,0.79l-2.48,-0.15l-2.22,-3.5l-1.67,-0.85l-3.09,-0.68l-3.23,-1.92l-1.25,-0.0l-0.9,-0.64l-0.26,-4.14l-1.44,-1.87l-0.36,-0.94l0.86,-2.7l1.65,-0.68l0.84,-1.03l0.29,-4.28l-0.66,-1.43l-1.92,-2.11l-0.96,-0.86l-1.78,-0.64l-0.67,-1.98l-1.61,-2.01l-0.03,-0.75l3.69,-2.85l2.41,-0.16l2.54,-2.66l1.57,-3.25l1.7,-1.93l0.18,-3.82l-2.07,-4.09l-0.15,-0.82l0.28,-3.52l3.05,0.89l1.97,-0.34l1.66,-1.01l2.79,-3.32l0.51,-3.05l3.68,1.89l1.34,-0.26l0.47,-1.3l0.01,-1.99l1.77,-1.21l2.08,-0.06l1.0,0.54l0.34,0.69l-0.12,2.57l0.62,2.65l1.67,2.57l2.09,2.0l2.1,1.08l4.49,-0.67l1.39,2.21l0.96,0.86l1.28,0.36l5.27,-0.46l4.72,1.15l1.48,1.05l6.11,-1.99l1.07,3.51l-0.05,1.21l0.55,0.39l1.81,-0.75l1.87,-0.1l3.84,0.75l1.44,0.71l2.74,2.26l1.24,0.52Z", "name": "Puy-de-D\u00f4me"}, "FR-60": {"path": "M505.12,111.37l0.08,1.16l-0.83,4.81l1.53,3.74l-0.67,5.09l0.09,1.94l0.84,1.77l1.58,0.97l0.42,1.49l-0.66,0.97l-1.93,-0.64l-1.46,0.84l-1.21,4.06l-0.7,1.39l-1.58,0.93l-3.16,0.25l-1.68,1.1l-0.17,0.42l0.21,0.63l2.72,2.49l0.45,1.35l-0.69,1.31l-2.48,1.5l0.11,2.24l0.53,0.91l0.61,0.44l0.8,0.05l3.28,-0.78l1.11,0.02l2.04,0.66l1.38,1.21l0.1,0.94l-1.19,2.18l-3.14,2.31l-2.42,0.25l-2.07,1.06l-1.51,-0.82l-5.87,1.07l-4.04,-0.91l-0.77,0.16l-1.31,1.18l-0.79,0.15l-2.03,-1.11l-1.93,0.48l-1.66,-1.34l-1.69,-0.39l-2.67,0.99l-2.8,-2.54l-1.69,0.38l-11.67,-5.3l-1.4,0.29l-2.01,1.11l-1.55,-0.09l-3.94,-1.5l-2.4,-0.25l-1.47,-0.68l-1.66,-1.28l-0.74,-0.17l-1.89,0.7l-3.44,2.04l-4.01,0.26l-2.09,0.47l-5.65,-1.4l-3.29,-0.27l-0.95,-0.91l-0.49,-1.57l-0.8,-0.65l-0.36,-1.25l1.17,-1.22l0.93,0.15l1.28,1.38l0.8,0.35l1.12,-0.28l0.34,-0.65l-2.06,-4.76l-1.74,-5.57l-0.28,-3.2l1.24,-3.11l1.48,-1.09l0.51,-1.75l-0.83,-1.22l-2.26,0.41l-0.42,-0.32l-0.42,-3.51l-0.53,-1.76l-0.18,-3.85l-0.71,-1.37l2.11,-1.28l1.1,-1.85l-0.66,-1.22l-2.68,0.42l0.29,-1.1l2.51,-3.29l1.48,-0.9l4.6,1.83l0.57,2.49l0.73,0.66l7.29,-1.02l5.86,2.44l10.5,-1.06l4.03,0.67l3.21,1.99l4.78,0.9l2.38,2.06l2.76,-0.21l2.31,1.93l1.09,0.42l2.66,-0.82l0.63,2.13l1.2,0.68l0.73,-0.37l0.96,-1.74l1.68,-1.61l2.18,-0.25l2.67,0.88l1.01,-0.32l0.43,-0.71l-0.08,-1.86l0.32,-0.63l2.36,-0.62l2.47,-3.38l0.78,-0.0l2.24,1.25l2.85,-0.78l0.67,0.11l2.0,1.24l1.28,-0.13l0.73,-0.98l-0.02,-1.04l3.31,0.53Z", "name": "Oise"}, "FR-61": {"path": "M339.45,171.33l-1.19,2.6l0.44,1.49l1.28,1.11l0.76,0.28l2.03,-0.04l4.74,1.12l3.05,-0.82l0.53,0.56l0.61,1.79l2.9,3.45l1.71,1.0l2.29,0.55l0.97,0.6l0.98,1.74l-0.43,1.2l-1.34,1.44l0.1,1.13l1.12,0.58l1.33,1.63l2.71,1.01l0.4,3.39l1.71,2.99l2.69,1.76l3.44,3.47l-0.31,2.12l0.17,1.43l1.87,2.7l-1.12,1.47l-0.63,1.57l-1.95,1.77l-1.26,0.69l-4.1,1.48l-2.34,0.41l-0.89,1.14l-0.23,0.89l0.24,0.83l1.14,1.2l-0.05,2.88l1.83,3.34l-0.46,0.79l-1.04,0.63l-1.56,0.37l-2.49,-1.01l-2.47,-2.98l-1.91,-1.6l-3.5,0.2l-5.14,-1.24l-0.71,-0.36l-0.06,-1.74l-0.56,-0.94l-3.09,-0.02l-2.45,-1.44l-1.01,-1.58l-0.49,-1.75l0.27,-4.85l-0.45,-1.45l-1.38,-1.0l-2.69,-1.04l-1.94,-0.2l-5.54,1.15l-3.07,1.61l-1.67,2.12l-2.54,0.86l-0.55,1.53l-0.8,0.2l-1.9,-0.51l-3.9,0.33l-0.22,-3.58l-0.39,-0.79l-0.77,-0.81l-1.89,-0.44l-3.02,-2.76l-0.65,-1.6l0.49,-1.46l-0.32,-0.81l-0.74,-0.61l-3.82,-1.27l-0.99,0.47l-0.03,1.62l-0.34,0.71l-1.15,0.57l-1.4,-0.02l-1.63,0.51l-1.2,1.45l-0.68,0.11l-4.11,-0.95l-3.98,-0.16l-1.2,0.44l-2.14,1.99l-1.05,0.56l-5.18,1.05l-1.18,-1.31l-0.96,-0.14l-3.52,0.92l-0.5,1.08l-0.81,0.48l-1.68,-1.15l-1.86,0.23l-1.74,-2.89l-0.78,-0.61l1.1,-1.52l3.31,-2.63l1.9,-3.49l0.3,-1.03l-0.88,-3.57l1.71,-1.91l-0.07,-0.62l-5.1,-3.21l-1.17,-0.16l0.06,-1.22l1.15,-0.43l2.61,-2.27l4.22,-1.02l0.97,-0.99l-0.03,-0.75l-0.53,-0.71l0.58,-0.88l4.69,0.87l7.52,-1.59l2.99,-1.66l1.62,0.23l2.59,2.51l1.48,0.83l0.96,-0.29l0.67,-1.71l0.64,-0.21l10.57,2.36l12.06,-6.08l3.02,-3.58l1.06,-0.25l1.1,1.64l0.8,0.44l2.26,-1.25l3.01,-0.19l1.72,-2.05l0.59,-0.06l0.57,0.97l1.0,0.69l1.27,0.35l1.32,-0.17l2.03,-1.3l0.66,0.04l1.0,0.98Z", "name": "Orne"}, "FR-68": {"path": "M752.43,285.23l0.39,-1.2l0.0,-1.45l-1.07,-2.08l-3.5,-3.34l-0.86,-0.37l-1.8,-0.05l-0.57,-0.53l0.01,-0.77l1.5,-2.01l0.6,-1.7l-0.15,-2.99l-0.41,-1.19l-1.75,-1.66l-8.58,-4.29l-0.62,-0.69l-0.05,-0.84l2.13,-0.87l1.13,-1.09l0.16,-1.12l-0.61,-1.66l1.6,-3.12l0.61,-3.06l3.45,-4.12l3.12,-5.81l1.69,-2.31l0.01,-1.28l-0.73,-1.48l0.49,-1.19l7.55,-10.68l3.11,0.2l1.43,0.48l0.9,2.69l9.88,4.09l0.43,0.5l-0.47,1.92l0.32,1.28l1.01,0.53l1.61,0.15l0.88,1.92l3.01,0.47l-0.42,1.72l0.19,3.23l2.65,4.1l0.12,2.21l-2.19,2.41l-0.36,2.63l-1.24,1.91l0.21,3.21l-1.19,0.9l-1.06,3.68l0.75,2.84l-0.03,1.09l-1.25,1.28l-0.34,0.8l0.43,2.7l1.98,1.77l2.51,3.91l-0.3,0.82l-3.51,1.37l-2.73,1.91l0.1,0.7l1.12,0.69l0.01,0.32l-1.72,0.61l-0.07,0.53l0.6,1.0l-0.84,0.74l-2.31,-0.79l-0.93,0.18l-0.3,0.87l0.84,1.21l-0.09,0.79l-1.08,1.21l-1.53,0.53l-4.27,-0.15l-4.24,1.21l-0.96,-0.82l-3.02,-1.12l-0.26,-0.95l1.04,-2.07l-0.39,-0.58l-1.82,0.11Z", "name": "Haute-Rhin"}, "FR-69": {"path": "M607.86,387.47l-0.14,1.11l-1.54,3.29l-1.25,3.86l0.39,4.66l-0.52,2.34l0.25,1.14l2.23,0.97l0.62,1.03l1.0,0.58l0.4,1.1l0.43,0.26l1.44,-0.22l3.49,2.5l-0.24,1.13l0.79,3.5l0.47,0.36l4.54,-1.15l3.58,0.52l2.61,-0.37l-1.69,2.95l0.03,1.65l0.82,1.02l3.8,1.9l0.51,0.57l-0.08,0.59l-1.28,0.04l-1.68,0.77l-2.91,2.33l-1.43,2.94l-1.05,0.63l-11.83,0.9l-1.41,0.84l0.15,0.46l3.9,3.08l-0.81,2.28l-4.09,3.12l-1.38,1.83l-1.36,-1.77l-1.0,-0.6l-2.55,0.09l-0.75,-0.19l-0.42,-0.56l-0.08,-1.27l0.8,-3.52l-0.38,-1.29l-1.35,-0.96l-2.33,-0.3l-3.66,0.5l-2.87,-0.52l-3.66,-2.12l-3.05,-3.02l-1.06,-3.12l1.95,-2.75l-0.06,-1.23l-1.2,-0.62l-2.02,-0.41l-0.0,-0.93l2.32,-2.98l0.65,-2.37l-1.32,-1.76l-1.91,-1.02l-0.38,-0.51l-0.14,-0.62l0.55,-2.07l-0.83,-1.56l-4.23,-2.25l-0.21,-0.67l2.75,-1.04l0.49,-1.41l-0.62,-0.98l-2.67,-1.83l0.26,-0.95l5.82,-5.57l3.12,-0.19l1.74,-0.79l0.43,-1.75l-0.46,-1.69l-0.9,-1.34l-1.87,-1.23l1.47,-4.64l5.06,1.43l1.25,-0.12l1.94,-0.93l1.54,1.64l0.93,0.37l1.05,-0.11l0.65,-0.45l0.73,-2.14l1.87,0.38l0.31,0.19l0.27,1.99l1.62,1.08l0.05,2.15l1.07,2.48l1.36,0.98l3.19,0.35Z", "name": "Rh\u00f4ne"}, "FR-53": {"path": "M310.77,215.54l-4.2,0.74l-1.58,1.61l-0.37,1.34l0.91,8.38l-0.94,2.05l-4.74,3.0l-0.35,2.5l0.91,2.88l-0.43,1.64l-1.48,1.12l-4.22,0.81l-0.96,0.75l-0.24,1.37l2.76,3.47l0.44,1.72l-0.49,0.61l-0.78,0.3l-3.0,0.23l-1.53,0.91l-0.58,0.88l-0.18,1.13l0.88,2.13l-0.14,0.78l-0.47,0.48l-2.09,0.77l-1.07,0.98l0.04,1.28l0.87,1.18l1.01,0.56l1.86,0.35l-0.09,0.98l-0.78,0.72l-2.11,0.84l-4.17,-1.53l-1.62,1.77l-1.25,0.22l-1.78,-0.37l-0.76,0.32l-1.18,1.37l-0.82,0.05l-20.13,-4.54l-0.91,0.5l-0.94,1.8l-2.53,-0.86l-6.81,-0.22l-3.08,-0.79l-2.72,-1.42l0.85,-1.47l2.89,-9.08l0.53,-0.9l1.85,-1.62l4.09,-0.58l1.25,-0.49l0.67,-0.66l-0.07,-4.84l-1.76,-2.27l-0.71,-4.7l0.64,-0.86l0.08,-0.99l-0.82,-4.82l-1.09,-2.36l1.95,-4.01l-0.03,-2.5l-0.74,-5.78l0.2,-5.45l4.76,0.37l3.56,-1.09l2.14,0.78l2.29,-0.33l0.82,0.61l1.89,3.04l0.78,0.28l1.22,-0.43l1.2,1.0l0.96,0.2l0.9,-0.36l0.74,-1.34l3.16,-0.79l0.67,0.27l0.43,0.85l0.82,0.32l5.49,-1.07l1.32,-0.69l2.1,-1.96l0.92,-0.33l3.75,0.17l4.09,0.95l1.06,-0.14l1.34,-1.53l1.33,-0.41l1.5,0.0l1.45,-0.72l0.62,-1.2l-0.17,-1.13l0.3,-0.28l3.98,1.51l0.19,0.36l-0.49,1.44l0.18,1.02l0.67,1.13l3.2,2.92l2.03,0.53l0.36,0.46l0.28,0.51l0.22,3.61Z", "name": "Mayenne"}, "FR-52": {"path": "M620.05,191.66l0.83,3.39l1.78,2.43l2.21,1.63l2.79,1.3l4.32,3.1l5.08,2.47l3.16,0.28l1.23,0.4l0.83,1.56l5.79,4.67l-1.67,2.08l-0.22,0.82l0.6,3.51l0.45,0.64l0.99,0.2l1.86,-1.66l1.62,0.08l1.4,1.19l3.12,3.97l0.92,0.25l1.78,-0.17l1.05,0.53l0.59,2.6l2.43,1.57l1.39,1.38l-1.32,1.49l-0.55,2.56l-1.17,1.96l-0.63,2.55l4.62,3.89l3.34,1.83l0.57,1.4l-0.05,2.95l0.46,0.64l1.01,0.19l0.95,-0.67l0.94,-0.09l2.41,2.53l0.3,0.85l-0.2,0.45l-1.94,0.67l-2.38,2.89l-6.41,3.93l-0.82,1.02l-0.32,0.82l0.58,2.29l-0.54,2.43l0.2,2.14l-0.17,0.81l-0.92,0.79l-6.35,1.81l-1.15,-0.23l-3.43,-1.72l-4.29,0.62l-1.46,0.81l-2.83,5.28l-0.39,0.11l-0.67,-0.88l-0.77,-0.22l-2.89,1.56l-0.53,-0.69l-0.42,-1.51l-3.74,-2.21l-0.5,-0.48l-0.45,-1.41l-0.55,-0.47l-1.19,0.09l-1.76,1.89l-1.49,0.14l-2.23,-1.34l-2.42,-2.98l-1.06,-0.04l-1.33,1.3l-0.7,0.01l-0.9,-1.16l-0.61,-3.64l-1.3,-1.58l0.33,-0.6l2.33,-0.37l0.83,-0.93l-0.18,-1.31l-1.18,-2.31l-4.52,-5.41l-1.18,-0.18l-1.09,1.24l-0.51,-0.21l-0.23,-0.95l0.85,-1.35l0.11,-1.07l-1.02,-0.91l-2.65,-0.91l0.44,-1.3l-0.31,-0.7l-0.84,-0.49l-3.68,-0.69l-1.62,-1.0l0.99,-1.7l-1.33,-2.62l0.84,-1.66l1.62,-0.79l4.26,0.81l1.15,-0.58l0.78,-1.43l0.45,-3.19l1.01,-1.73l0.08,-0.84l-1.0,-7.31l-1.65,-1.75l0.44,-1.44l-0.18,-0.9l-3.13,-1.39l-1.38,-2.02l-2.2,-1.22l-2.15,-2.78l-2.26,-1.34l-0.15,-0.85l1.4,-1.94l0.4,-1.04l0.13,-1.76l5.87,-0.24l0.87,-0.28l0.33,-1.09l-1.07,-2.3l0.32,-1.17l4.51,-1.27l0.38,-0.55l-1.04,-2.5l-0.35,-0.25l-3.14,-0.04l1.22,-1.88l3.77,-1.11l7.44,0.03Z", "name": "Haute-Marne"}, "FR-51": {"path": "M522.82,186.37l0.16,-1.02l1.68,-1.84l-0.22,-0.68l-0.89,-0.72l3.35,-0.37l0.76,-1.01l0.2,-1.75l1.48,-2.59l4.29,-3.81l1.07,-2.07l1.68,-1.1l0.81,-1.18l2.06,-1.61l0.39,-0.63l-0.02,-1.16l-0.99,-0.78l-3.39,0.04l-0.83,-0.47l0.06,-1.11l1.31,-0.86l1.17,-1.67l0.21,-0.79l-0.25,-2.97l1.17,-0.73l3.12,0.34l1.45,-0.25l1.33,-1.0l0.36,-0.86l-0.5,-1.26l-1.41,-0.81l-0.87,-0.98l-1.6,-0.47l-0.56,-4.86l-0.91,-2.12l2.95,-1.52l5.1,-1.23l4.31,-0.57l0.52,-0.78l-0.12,-1.35l0.85,-0.54l2.04,0.1l3.04,1.4l2.06,-0.68l2.32,0.84l1.14,-0.78l0.47,-1.24l0.08,-1.7l6.33,0.44l1.77,0.51l8.42,5.99l2.47,0.04l2.51,2.92l2.29,0.48l6.22,-0.85l1.44,0.18l1.21,0.87l1.1,2.07l1.24,0.92l5.55,-1.3l7.04,1.27l4.31,-1.4l1.84,-0.03l2.07,1.32l0.06,1.73l-1.31,2.24l-0.19,1.39l1.8,5.02l0.13,4.29l0.32,0.97l0.62,0.73l1.6,0.68l0.35,0.84l-0.84,1.15l-0.07,2.87l-0.56,1.42l-1.01,0.68l-2.7,0.71l-1.22,1.6l-0.51,2.57l0.58,2.62l-1.01,1.24l-0.44,1.14l0.49,1.38l4.23,3.15l0.58,1.99l-0.08,1.85l-7.28,-0.03l-4.31,1.35l-1.76,2.71l0.38,0.62l3.61,-0.06l0.71,1.71l-3.66,0.98l-0.9,0.62l-0.42,0.75l-0.05,0.99l1.03,2.63l-6.61,0.41l-4.47,-1.41l-1.54,0.31l-2.8,1.32l-11.93,-6.37l-0.31,-0.68l0.66,-4.11l-0.44,-1.76l-0.57,-0.63l-0.88,-0.35l-6.81,-0.4l-4.94,1.4l-1.13,-0.22l-1.49,0.3l-1.23,2.03l-2.91,0.76l-7.38,6.28l-1.28,0.67l-0.6,0.81l-0.67,2.46l-3.36,-0.35l-2.25,-0.66l-0.93,-1.47l-1.09,-0.78l-1.26,1.02l-3.5,0.89l-0.66,-2.48l-0.41,-0.29l-1.24,0.06l-1.99,-2.71l-1.85,-0.07l-1.65,-2.04l-0.63,-0.31l-2.37,0.21l-0.2,-1.26l0.51,-1.93l-0.76,-3.12l-2.03,-2.25l-1.36,-0.04Z", "name": "Marne"}, "FR-50": {"path": "M199.1,110.63l3.02,0.17l0.93,1.73l6.68,0.92l5.27,1.29l0.19,0.68l0.67,0.4l0.84,-0.17l1.4,-0.93l2.68,0.54l1.2,-0.43l3.43,-3.16l2.74,-0.72l1.03,-0.08l7.56,1.27l2.02,5.19l-1.5,1.01l-0.48,1.56l-1.27,0.04l-1.1,0.67l-0.37,2.34l1.83,2.99l0.97,2.27l4.63,4.95l0.53,1.09l0.2,1.62l-0.75,1.97l0.17,1.08l0.44,0.3l1.7,-0.5l1.73,1.31l0.02,1.02l-1.12,2.23l0.89,2.06l7.07,6.37l1.82,0.2l3.77,-1.18l0.35,0.33l-0.73,2.09l-0.02,1.11l2.33,4.3l1.19,6.19l-1.73,0.82l-3.41,3.44l-1.89,1.33l-0.75,0.13l-2.59,-0.59l-1.17,0.51l-0.67,1.15l-0.02,1.28l1.46,1.49l0.17,0.61l-1.14,1.16l-2.44,0.91l-2.01,1.58l-0.85,1.16l-0.26,1.31l0.31,0.46l2.27,0.49l0.45,1.59l0.59,0.65l2.89,0.95l3.11,0.13l2.44,-0.72l3.49,0.8l3.18,1.45l-0.08,1.6l0.36,0.42l1.28,0.13l4.59,2.89l-1.59,2.0l0.04,1.15l0.84,2.61l-0.18,0.54l-1.78,3.33l-3.29,2.61l-1.34,1.83l-1.98,0.34l-2.37,-0.8l-3.57,1.1l-2.0,0.01l-3.01,-0.43l-2.56,-1.35l-6.25,-1.53l-1.67,-0.15l-1.33,0.23l-2.22,2.41l-1.99,0.71l-2.78,1.91l-1.65,0.53l-1.32,0.02l-0.77,-0.19l-2.96,-2.18l-1.8,-2.76l-0.99,-2.96l-2.54,-5.28l4.98,0.51l6.48,-1.24l2.14,0.69l0.44,-0.14l0.0,-0.47l-1.13,-1.5l-1.5,-0.64l-2.34,-0.18l-0.46,0.44l-0.7,-1.34l-2.87,-0.97l-0.88,-2.35l-2.17,-1.65l-0.47,-1.69l-0.34,-4.2l-0.74,-1.24l-1.4,-0.44l1.45,-1.15l0.44,-1.03l0.49,-3.71l0.92,-0.11l0.34,-0.9l0.0,-1.07l-1.2,-0.91l0.97,-5.38l0.51,-0.24l1.33,0.54l0.55,-0.37l-0.25,-0.86l-1.33,-0.51l-1.38,0.0l-1.32,0.6l-0.59,1.22l-0.56,-1.29l0.43,-3.35l-0.31,-0.52l-0.67,-0.12l-0.18,-0.32l0.72,-2.62l1.48,-1.06l0.02,-0.68l-0.75,-0.5l-0.56,0.09l-0.66,-2.09l-0.35,-2.8l0.3,-0.47l0.85,-0.05l2.15,0.54l0.5,-0.39l0.0,-0.49l-0.3,-0.39l-2.96,-0.99l-1.32,-0.03l-0.67,1.15l-0.44,-0.44l-0.98,-2.84l-0.71,-0.78l0.42,-0.24l0.06,-0.7l-2.38,-1.94l-0.24,-0.63l0.68,0.0l0.4,-0.4l-0.83,-2.29l-0.82,-0.22l-0.71,1.2l-3.02,-2.14l0.32,-0.66l-0.42,-0.61l-2.16,0.52l-0.37,-0.34l-0.17,-5.35l-1.15,-1.92l-0.39,-1.49l-2.39,-2.79l0.28,-0.81l1.64,-1.27l0.51,-0.95l0.27,-4.14l-1.3,-2.8l-0.63,-0.67l-4.47,-1.27l0.43,-3.05l1.34,-0.15l1.62,0.85Z", "name": "Manche"}, "FR-57": {"path": "M697.12,128.57l4.59,2.63l1.98,0.19l2.29,-0.93l0.53,0.08l5.52,2.34l0.95,0.78l0.43,1.78l3.49,3.43l-1.28,0.51l-0.34,1.05l0.39,0.92l5.12,4.46l-0.0,1.31l1.48,0.85l1.03,2.86l0.65,0.17l0.76,-0.38l0.24,0.78l-0.46,1.9l1.04,1.55l0.86,0.29l2.67,0.02l2.33,0.73l0.97,-0.14l1.37,-1.65l-0.67,-2.53l0.24,-0.75l2.79,0.42l1.85,-0.14l4.34,1.88l1.09,0.08l-0.03,2.41l0.73,2.3l1.51,1.11l2.29,-0.99l0.3,-0.66l-0.21,-0.77l0.26,-0.22l2.39,1.43l1.98,0.72l5.31,0.06l2.06,0.7l0.67,-0.41l0.98,-1.46l2.37,-0.6l0.98,-1.9l2.23,-0.77l0.85,0.06l0.55,0.9l3.47,0.42l0.22,0.64l-0.49,0.46l-0.0,0.71l3.02,3.51l1.57,0.84l2.62,0.39l1.24,0.55l1.04,1.49l0.76,0.49l-3.08,5.46l-1.37,1.52l-0.94,0.11l-3.4,-1.65l-9.1,1.22l-2.18,-0.77l-0.57,-1.35l-0.66,-0.54l-8.43,-2.52l-0.63,-0.69l-0.58,-2.32l-0.9,-1.14l-1.12,-0.32l-1.33,0.51l-0.22,0.75l0.3,1.4l-2.13,2.71l-0.26,1.81l-2.5,1.95l-1.01,1.21l-0.49,1.21l0.0,1.18l0.54,1.07l0.95,0.87l5.74,2.33l-0.95,1.04l-0.38,1.39l0.94,0.93l0.85,1.8l0.62,0.41l1.5,-0.31l1.16,-1.59l2.22,-0.91l0.43,-0.63l0.2,-1.32l0.37,-0.29l0.49,1.78l1.97,0.95l3.72,3.7l0.4,0.92l-0.22,0.99l-3.01,4.58l0.29,1.21l1.86,1.19l-1.76,5.33l-0.93,1.1l-2.37,1.17l-1.19,1.51l-5.74,0.33l-0.53,0.33l-7.11,-6.72l-2.93,-1.24l-3.41,0.49l-9.75,-3.72l-2.42,-2.06l-2.68,-0.83l-1.47,-0.83l-1.93,-2.75l-0.67,-0.39l-2.37,0.0l-5.29,-2.7l-3.73,0.68l-4.05,-5.03l-0.21,-0.84l0.25,-1.56l1.24,-1.79l-0.32,-1.43l-0.67,-0.65l-1.55,-0.63l-8.73,-0.26l-0.71,-0.47l-1.27,-1.94l-3.43,-1.16l-0.36,-1.98l-0.72,-1.09l-4.16,-1.75l-0.7,-0.77l-1.12,-2.35l-0.02,-0.87l0.69,-0.55l2.54,-0.84l1.33,-1.27l0.36,-1.9l-1.71,-3.68l1.93,-2.33l0.06,-1.16l-0.97,-3.93l-0.53,-1.05l-1.64,-1.12l-1.0,-2.7l-1.73,-1.76l1.1,-4.12l-0.52,-3.06l0.89,2.24l0.48,0.25l7.2,-0.85l1.6,-1.26l0.33,-1.21l1.94,-0.22l0.21,-0.79l2.88,-0.27l1.66,0.15l1.65,0.58Z", "name": "Moselle"}, "FR-56": {"path": "M109.52,267.85l0.38,-0.4l0.08,-1.06l0.95,0.1l0.65,-0.32l1.28,-2.54l0.88,-0.82l-0.25,-0.95l-0.44,0.09l-2.95,2.66l-1.78,0.9l-1.23,0.25l-0.32,0.34l0.22,0.41l0.92,0.77l-4.61,0.99l-0.63,-0.17l-2.02,-2.33l-2.01,-3.11l-0.6,-0.18l-0.35,0.25l-0.45,-1.04l-0.01,-1.54l0.9,-1.31l0.97,0.03l1.25,0.66l1.03,-0.09l1.08,-0.85l0.86,-1.79l2.18,-0.09l1.0,-0.67l0.57,-1.29l0.33,-2.58l-0.6,-3.09l-0.82,-0.87l-1.32,-0.34l-2.96,0.59l-1.33,-0.42l-3.3,-1.97l-1.52,-0.09l-3.2,0.59l-0.96,-0.72l-2.13,-5.31l-2.99,-2.98l-0.09,-0.73l0.41,-1.27l0.88,-0.78l8.58,-3.25l1.34,0.41l5.97,-0.26l0.36,1.66l1.26,0.9l1.53,-0.21l3.13,-1.15l1.22,1.3l1.94,0.58l8.02,-0.95l1.06,-0.53l0.62,-0.83l0.85,-2.33l1.12,-0.31l3.78,0.24l1.1,0.41l0.64,2.34l0.64,0.68l0.92,0.0l2.55,-0.85l1.49,0.2l4.05,2.12l3.19,0.86l0.96,2.18l1.0,0.73l0.89,-0.2l1.68,-1.5l3.3,-1.04l0.45,0.25l-0.04,6.27l0.27,0.38l1.32,0.46l2.52,-1.2l3.4,-2.96l0.76,-1.28l0.3,-3.56l0.45,-0.92l0.78,-0.28l4.92,-0.19l1.9,0.76l2.15,3.06l1.28,0.01l2.14,-1.17l0.89,-0.02l1.02,0.9l1.37,2.64l0.68,0.66l2.99,0.0l0.39,0.31l0.01,0.41l-0.64,0.66l-4.17,1.19l-0.87,1.19l-0.04,1.67l1.29,1.01l5.3,0.98l2.55,1.59l1.01,1.3l0.35,1.81l-0.59,5.45l0.39,0.48l2.72,0.15l0.42,0.57l-0.04,0.91l-0.87,1.82l-0.68,0.52l-2.12,0.6l-0.62,0.86l0.22,1.11l0.9,0.49l2.15,0.11l0.36,0.63l-0.49,0.45l-2.42,0.13l-0.84,0.83l0.08,2.27l1.03,2.25l0.0,1.69l0.23,0.68l1.13,1.14l-1.56,6.13l-0.54,0.87l-2.04,1.23l-1.46,2.33l-0.6,-0.23l-0.05,-1.13l-0.56,-0.55l-0.75,-0.02l-2.38,0.9l-1.56,-0.86l-0.9,0.05l-0.9,0.52l-1.89,2.82l-1.08,0.35l-2.85,0.22l-1.9,-0.8l-1.35,0.35l-0.47,0.66l-1.07,-0.28l0.4,-1.16l-0.67,-1.08l0.25,-0.19l3.7,-0.17l2.26,-0.53l1.21,0.07l0.42,-0.34l-0.3,-0.45l-0.99,-0.24l-2.8,0.23l-5.66,-1.72l-2.91,0.66l-1.93,0.0l1.05,-1.04l0.47,-1.05l-0.12,-0.48l-0.5,0.01l-0.86,0.73l-2.73,0.25l-0.32,0.4l1.11,0.66l-1.57,-0.11l-0.6,-0.37l-0.61,0.32l-0.09,1.63l-0.48,0.24l-1.89,-0.59l-1.16,0.04l-4.35,1.05l-1.51,-0.37l-2.24,-2.86l-1.34,-0.5l-0.54,-0.67l1.53,-0.13l1.13,1.56l1.15,-0.56l0.69,0.46l0.65,-0.25l0.21,-0.93l0.66,0.6l1.69,0.45l1.67,-0.14l1.46,-0.78l-0.13,-0.88l2.17,-2.6l0.37,-1.63l-1.48,-1.88l-0.44,-0.11l-0.26,0.86l0.64,0.9l-1.1,0.64l0.6,0.74l-0.39,0.02l-1.13,-0.82l0.39,-0.14l-0.02,-0.47l-0.84,-1.0l-0.86,-0.45l-1.89,-0.29l-0.44,0.26l0.31,0.55l-3.56,0.47l-0.85,0.64l-0.55,0.91l-2.13,0.65l0.0,-0.48l-0.46,-0.4l-1.32,0.49l-0.19,-1.21l0.7,-1.13l-1.61,-0.61l-0.47,-1.47l-0.85,-0.33l-0.4,0.46l0.45,2.1l0.01,1.94l0.27,0.88l1.3,1.72l-0.77,0.06l-1.84,-1.77l-0.48,-0.01l0.02,1.33l-0.45,-1.98l-0.51,-0.31l-0.67,0.4l-0.04,1.56l-1.22,-0.46l-1.86,0.87l-0.79,0.06l0.11,-0.88l-1.36,-0.9l-0.9,-0.02l-0.6,0.64l-1.75,-2.35l-1.96,-1.13l0.78,-2.82l4.43,-1.77l0.2,-0.57l-0.36,-1.98l-0.6,-0.34l-0.71,0.3l0.01,-1.53l-0.4,-0.43l-0.73,0.2l-0.33,0.57l-1.35,-0.45l-0.97,0.16l-0.33,0.36l1.51,1.12l0.5,1.38l-0.92,0.03l-0.89,0.76l-0.75,0.18l-0.19,0.67l0.52,0.61l-0.59,0.38l-0.66,1.45l-2.06,-1.94l-1.14,-0.34l-0.21,-0.79l-2.13,-0.87l-1.87,-0.17ZM122.84,278.42l0.11,0.08l-0.08,0.32l-0.03,-0.4ZM122.52,282.02l0.23,1.3l1.65,2.47l-0.96,-0.23l-0.59,0.29l-0.71,-2.5l0.37,-1.33ZM133.84,278.57l0.45,0.38l-0.04,0.12l-0.41,-0.51ZM123.36,297.99l1.01,0.42l1.66,-0.07l0.33,0.33l-0.17,0.99l-1.32,0.33l-4.68,-0.38l-3.08,-0.8l-0.79,-0.48l0.14,-1.16l-1.41,-3.37l0.57,-0.67l4.02,1.8l3.72,3.05Z", "name": "Morbihan"}, "FR-55": {"path": "M625.46,127.51l1.43,-1.72l0.37,-3.32l1.33,-1.31l1.39,0.12l2.52,1.66l3.7,-0.04l0.91,1.24l0.89,0.23l1.45,-0.59l3.12,-2.32l2.22,-1.14l0.23,-0.81l2.9,4.42l0.21,0.61l-0.22,2.41l0.64,0.91l0.95,0.21l-0.76,2.22l1.67,3.94l1.55,0.77l4.36,-0.27l3.79,-1.81l1.09,0.5l2.04,1.97l1.1,1.55l0.63,1.81l-0.13,2.9l0.75,0.94l1.21,0.71l-2.13,3.84l-0.11,3.18l0.87,1.09l1.45,0.54l0.1,0.71l-0.75,2.39l0.04,1.87l0.65,1.66l1.29,0.41l1.97,-0.41l0.46,0.43l1.27,4.3l-1.39,3.28l-0.07,1.12l0.54,1.24l1.09,0.73l0.27,0.53l-0.2,0.91l-1.94,-0.32l-0.92,0.23l-1.77,1.51l-0.73,1.37l1.09,3.21l-0.04,3.79l-0.93,3.38l-2.08,2.91l-0.17,1.07l1.73,2.41l0.27,6.76l-0.43,0.81l-1.63,1.18l-0.42,1.58l0.55,1.31l2.0,1.04l0.35,0.6l0.09,2.67l-0.7,1.3l-0.86,0.74l-1.0,0.27l-2.89,-0.26l-3.49,2.04l-3.64,0.05l-4.52,2.15l-1.28,-0.5l-5.97,-4.81l-0.81,-1.57l-1.66,-0.59l-3.06,-0.26l-4.93,-2.41l-4.26,-3.07l-2.86,-1.34l-2.09,-1.55l-1.19,-1.4l-0.58,-1.33l-0.28,-2.43l-0.47,-0.59l0.07,-2.24l-0.69,-2.27l-4.55,-3.64l0.3,-1.22l0.98,-1.18l0.19,-0.77l-0.65,-2.29l0.44,-2.23l0.86,-1.22l2.6,-0.67l1.38,-0.95l0.61,-1.14l0.15,-3.39l0.86,-1.2l-0.06,-0.86l-0.53,-0.77l-2.02,-1.13l-0.4,-5.12l-1.78,-5.41l1.45,-2.76l-0.02,-2.07l4.21,-3.39l0.13,-1.1l-0.75,-1.69l-0.03,-0.85l3.33,-4.34l1.37,-3.47l-0.92,-3.48l-1.1,-0.9l-0.58,-1.83Z", "name": "Meuse"}, "FR-54": {"path": "M650.32,128.04l3.92,-2.09l2.36,0.84l1.04,-0.1l1.27,-1.8l1.33,-0.57l3.92,0.99l0.96,-0.3l1.37,-1.14l2.44,0.88l3.06,3.02l1.61,0.63l3.65,0.74l0.78,3.77l-1.03,3.1l-0.04,1.34l0.3,0.64l1.52,1.31l1.02,2.74l1.64,1.13l1.35,4.58l-0.0,0.78l-1.41,1.42l-0.59,1.33l1.73,3.75l-0.32,1.43l-0.91,0.84l-2.65,0.9l-1.05,1.04l0.06,1.32l1.18,2.48l0.86,0.98l4.16,1.75l0.5,0.76l0.18,1.53l0.43,0.8l3.48,1.18l1.06,1.73l1.04,0.76l8.98,0.32l1.16,0.47l0.45,0.39l0.23,0.93l-1.15,1.54l-0.3,0.94l0.21,2.07l0.72,1.27l3.6,4.17l1.51,0.17l2.53,-0.72l5.26,2.69l2.31,-0.02l2.42,3.04l1.64,0.91l2.5,0.74l2.53,2.12l9.89,3.78l3.56,-0.46l2.61,1.15l6.62,6.3l-1.46,0.31l-5.3,3.62l-3.26,3.16l-1.41,0.83l-1.19,-1.07l-0.54,0.01l-3.27,2.95l-4.16,-1.53l-4.42,-0.54l-0.72,-0.61l-0.34,-2.13l-0.86,-1.0l-1.99,0.17l-6.31,4.24l-4.11,0.31l-1.99,1.33l-0.32,0.05l0.09,-0.71l-0.46,-0.44l-1.73,0.29l-1.7,-0.17l-1.49,-0.75l-1.17,-1.57l-0.63,-0.01l-1.77,2.56l-4.63,0.3l-1.52,-0.62l-0.55,0.39l0.1,2.57l-1.64,0.67l-8.45,0.29l-1.32,-0.47l0.31,-1.38l-0.25,-0.46l-4.74,-1.96l1.73,-3.24l0.09,-1.26l-0.31,-1.09l-2.18,-1.23l-1.59,-0.25l-1.57,0.18l-2.18,1.04l-0.64,-0.6l0.01,-2.15l-0.37,-1.18l-2.28,-1.39l-0.33,-0.8l0.34,-1.17l1.42,-0.93l0.7,-1.27l-0.27,-7.02l-0.47,-1.04l-1.24,-1.32l0.08,-0.66l2.08,-2.93l1.0,-3.6l0.04,-4.03l-1.08,-2.99l0.55,-0.95l1.58,-1.33l2.72,0.18l0.71,-1.21l-0.21,-1.21l-1.37,-1.07l-0.32,-0.75l0.04,-0.86l1.42,-3.48l-1.35,-4.65l-1.15,-0.91l-2.08,0.43l-0.61,-0.16l-0.48,-1.26l-0.03,-1.69l0.73,-2.24l-0.12,-1.24l-1.83,-0.91l-0.47,-0.58l0.1,-2.78l1.9,-3.0l0.23,-1.3l-0.44,-0.62l-1.51,-0.98l0.13,-2.84l-0.71,-2.05l-1.23,-1.73l-2.12,-2.04l-1.71,-0.68l-3.78,1.82l-4.78,0.08l-0.65,-0.64l-1.24,-3.19l0.78,-2.16Z", "name": "Meurhe-et-Moselle"}, "FR-59": {"path": "M468.73,0.56l0.71,1.42l0.6,3.51l0.63,1.64l3.14,3.26l0.16,1.34l-1.61,1.47l-0.46,0.87l1.16,3.76l-0.52,1.99l1.22,0.87l1.03,1.61l4.25,0.56l0.92,1.61l2.23,1.78l1.46,2.61l1.24,0.91l5.27,2.03l1.32,0.13l0.92,-0.63l1.82,-2.63l2.37,-1.63l7.93,-2.08l1.41,0.36l0.92,0.73l2.64,4.35l0.72,0.59l1.48,0.27l0.38,0.58l0.61,1.69l-0.8,1.48l0.51,2.38l1.6,4.47l0.09,2.5l0.42,1.17l1.9,1.66l3.82,1.44l1.7,-0.16l2.68,-0.82l2.06,-1.38l0.72,-0.05l0.89,0.38l-0.6,1.19l0.12,0.56l0.76,0.47l4.13,0.08l2.56,0.75l1.12,0.9l0.91,1.39l1.05,10.05l2.3,1.94l1.29,-0.74l1.51,-2.44l1.09,-0.6l2.59,-0.16l2.45,0.25l3.52,1.61l1.52,-0.04l3.85,-1.36l1.15,-0.1l1.03,0.41l1.98,1.84l2.53,1.56l1.84,3.13l1.53,0.38l0.59,-0.74l-0.06,-0.72l0.39,-0.14l1.83,1.02l0.14,0.88l-2.69,2.35l-1.79,5.34l-0.17,1.55l1.11,0.78l1.48,-0.45l0.84,0.08l1.74,4.81l-2.7,1.39l-1.71,1.5l-0.59,1.62l0.66,2.17l-2.04,0.47l-1.03,-0.14l-5.08,-1.67l-0.55,-0.62l-0.05,-2.72l-0.69,-0.57l-0.96,-0.16l-2.19,0.7l-1.93,1.12l-2.51,-1.85l-6.24,-0.65l-3.45,-0.71l-0.98,0.1l-3.23,1.68l-0.69,0.09l-2.57,-0.97l-1.25,-0.05l-4.85,2.46l-1.59,0.26l-5.33,-1.36l-2.8,1.13l-3.55,-0.79l-1.98,-0.06l-4.16,0.8l-3.88,-2.32l0.05,-1.61l2.24,-8.66l0.61,-1.13l1.71,-1.56l0.28,-1.47l-0.42,-0.84l-1.75,-1.71l-1.31,-0.62l-2.38,-0.17l-2.28,1.01l-0.95,-0.58l0.47,-1.35l1.77,-1.49l0.37,-1.0l-0.19,-1.17l-0.99,-1.43l-2.5,-2.65l0.23,-1.14l2.9,-2.08l0.2,-1.9l-0.78,-0.64l-1.93,-0.31l-1.19,-3.12l-1.47,-1.14l-1.12,-0.16l-2.71,0.31l-2.16,-2.16l-1.21,-0.11l-2.08,0.58l-0.88,-0.19l-0.79,-0.94l-0.1,-0.8l1.06,-1.81l-0.04,-1.78l0.31,-0.72l1.51,-1.11l1.79,-0.4l0.25,-0.67l-1.93,-2.11l-1.11,-0.77l-1.27,-0.25l-1.45,0.65l-1.96,2.14l-1.32,0.64l-0.95,-0.25l-13.54,-0.34l-0.79,-0.25l-3.08,-2.44l-3.17,-0.57l-0.37,-0.8l0.39,-1.69l-1.03,-1.49l0.06,-0.6l1.78,-1.77l0.6,-0.85l-0.01,-0.48l-0.91,-1.06l-1.18,-0.37l-5.52,0.1l-1.57,-0.49l-1.27,-1.01l-2.13,-5.83l-5.01,-8.51l-2.04,-1.97l3.54,-0.38l11.16,-3.16l4.16,0.3l5.0,-1.09l3.16,-1.35ZM502.03,75.37l0.14,1.34l-2.79,0.71l-0.69,-0.11l0.09,-1.4l1.76,-0.34l1.28,-1.06l0.2,0.85Z", "name": "Nord"}, "FR-58": {"path": "M528.78,280.97l1.59,2.28l2.55,2.41l0.9,1.86l3.66,0.81l4.42,3.53l5.43,1.99l0.7,-0.02l0.78,-0.5l1.06,-2.57l1.16,-0.44l0.49,0.82l-0.57,2.37l0.27,1.26l1.3,0.52l3.77,-1.84l0.67,0.98l0.68,3.72l1.6,1.37l1.61,-0.09l1.72,-1.96l3.18,0.03l0.85,1.0l0.1,5.56l0.32,0.39l1.92,0.37l1.13,-0.2l0.92,0.22l0.85,0.63l0.65,1.09l0.26,1.33l-0.71,1.77l-0.13,1.41l-1.24,0.33l-3.52,1.97l-3.93,0.47l-0.56,0.45l-0.72,2.59l1.01,3.06l-0.05,1.31l-1.08,1.16l-1.74,0.2l-0.94,0.58l-0.29,0.95l0.25,1.13l0.79,0.6l1.47,0.34l0.52,0.64l-0.04,3.9l0.72,0.83l1.99,1.19l0.18,1.0l-0.49,0.71l-1.97,0.63l-0.72,0.74l0.01,0.76l0.72,0.99l-0.2,2.06l-2.99,0.57l-4.86,2.88l-3.65,1.19l-1.65,1.29l-1.04,0.4l-2.51,-2.71l-1.72,-1.04l-7.17,0.93l-1.66,-0.27l-0.44,0.26l-0.43,1.96l-1.36,0.87l-0.44,1.79l-3.8,2.0l-1.31,0.28l-0.45,-0.19l-0.06,-1.53l-1.67,-2.57l-1.59,-0.43l-0.82,0.13l-1.33,1.43l-0.97,0.48l-2.64,-1.07l-1.82,-0.29l-1.87,0.11l-3.04,1.06l-3.34,-2.82l-1.29,-0.36l-1.77,0.04l-2.77,-1.63l-1.05,-1.28l-0.19,-0.83l0.34,-2.43l2.35,-4.46l-1.16,-3.32l1.31,-4.66l-0.44,-5.56l-2.26,-2.43l0.11,-3.58l-1.26,-4.05l-1.41,-3.21l-0.84,-3.54l-3.63,-3.57l-1.85,-1.04l-0.71,-1.21l2.92,-5.34l0.56,-3.19l-0.17,-0.62l-1.7,-2.2l-1.25,-2.57l-1.44,-1.56l0.08,-0.29l2.79,-1.26l2.32,-0.04l1.28,-0.37l1.6,0.31l6.32,-1.19l0.9,0.34l0.47,2.6l1.22,1.11l4.09,0.77l1.89,1.87l1.16,0.11l1.96,-0.77l2.43,1.48l1.01,0.12l1.16,-0.52l1.82,-1.52l1.28,-0.15l4.38,1.15l0.5,-0.33l0.29,-4.18Z", "name": "Ni\u00e8vre"}, "FR-48": {"path": "M521.61,538.83l-0.52,-1.13l-1.33,-0.92l-6.93,0.03l-0.32,-1.55l-1.01,-1.16l-4.04,-2.16l-1.29,-0.2l1.45,-3.24l-0.19,-0.85l-0.85,-1.25l-0.29,-2.01l0.71,-2.49l0.15,-2.55l-3.33,-4.54l-0.25,-1.16l0.15,-2.52l-1.11,-2.03l-5.17,-5.93l0.78,-2.2l1.89,-2.92l0.36,-2.65l1.38,-4.58l0.47,-0.79l1.76,-1.22l0.98,-3.72l0.74,-0.4l1.59,1.82l1.21,-0.05l1.38,-0.79l3.42,-3.06l2.41,-0.28l3.68,-2.03l1.93,-0.24l0.36,0.35l0.79,2.6l3.5,5.9l1.31,1.29l1.23,0.42l1.33,-0.63l3.37,-0.36l1.07,-0.91l0.56,-2.31l0.89,-0.32l1.69,0.16l0.84,0.67l-0.48,1.5l0.3,0.89l4.51,0.95l4.08,3.38l2.89,1.45l1.57,0.41l-0.03,2.85l1.28,3.55l0.51,3.07l0.72,2.11l0.66,1.17l1.36,0.88l0.8,1.32l2.15,6.73l-1.98,3.13l-0.84,0.57l-2.06,0.37l-1.0,0.81l-0.08,0.53l1.91,2.93l0.62,3.31l1.55,3.3l0.16,0.98l-0.44,1.55l-2.23,4.29l-2.6,2.5l-4.89,-0.36l-6.09,-3.28l-1.5,-0.33l-1.99,0.8l-0.31,0.97l-0.05,2.63l-1.0,0.63l-5.86,0.25l-2.2,-0.6l-6.15,-3.38Z", "name": "Loz\u00e8re"}, "FR-49": {"path": "M233.03,298.51l1.68,-1.19l4.85,-0.76l3.64,-1.93l2.11,-0.43l7.86,-0.14l4.72,-0.85l0.24,-0.64l-1.06,-1.36l-0.84,-1.98l-0.51,-2.15l-0.06,-1.85l-0.36,-0.38l-9.92,-1.02l-1.33,-0.83l-1.22,-1.81l-0.2,-1.33l0.7,-0.39l6.35,0.53l1.77,-0.53l1.47,-1.4l-0.04,-0.61l-1.54,-1.13l-7.67,-2.31l-0.6,-0.61l-0.59,-4.56l-1.04,-1.15l-1.13,-0.59l-1.63,-0.18l-0.33,-0.63l-0.18,-3.53l0.36,-1.67l2.85,1.47l3.17,0.81l6.88,0.23l2.53,0.88l1.05,-0.55l0.86,-1.75l20.14,4.52l1.2,-0.13l1.7,-1.61l2.6,0.36l0.88,-0.45l1.24,-1.52l2.86,1.33l1.03,0.2l1.11,-0.23l10.64,4.33l1.01,-0.16l1.58,-1.05l0.32,0.09l0.32,0.56l-0.94,0.75l-0.47,0.91l0.2,1.48l1.05,1.63l1.59,1.02l1.83,0.32l1.37,-0.51l1.29,-1.24l3.12,0.44l6.53,3.17l2.26,0.37l3.15,1.37l1.63,-0.03l0.36,-0.28l0.54,-1.77l2.61,0.81l-1.52,3.88l0.46,3.58l-1.91,3.72l-1.03,3.13l0.2,2.82l-4.39,6.08l-1.47,5.38l-0.85,5.56l-2.84,-0.47l-1.46,0.44l-2.01,2.22l-0.96,2.4l-2.38,0.81l-1.53,2.05l-1.11,-0.31l-0.83,-2.02l-0.97,-0.76l-0.79,-0.2l-1.88,0.35l-3.55,-0.08l-6.53,0.7l-5.83,1.67l-2.05,-0.73l-2.08,0.46l-1.21,0.8l-0.31,0.62l0.12,0.77l0.69,0.97l-0.13,0.38l-4.92,2.46l-3.85,0.33l-5.2,-0.68l-4.23,0.56l-3.49,-1.69l-1.61,-0.38l-0.68,0.31l-0.33,0.87l-0.46,-0.1l-1.99,-1.33l-2.8,1.27l-2.3,-0.29l-3.58,-1.38l1.02,-0.49l0.2,-0.51l-0.78,-1.82l-2.01,-1.72l-3.92,-1.8l0.51,-1.32l3.47,-4.13l-1.27,-3.9l-0.81,-1.39l-0.43,-0.19l-1.65,0.37l-1.37,-0.22l-3.02,-3.81l-2.17,-0.39l0.19,-1.21Z", "name": "Maine-et-Loire"}, "FR-44": {"path": "M159.66,300.12l3.14,1.13l1.62,-0.32l1.05,-1.07l0.07,-0.47l-0.56,-1.04l-2.21,-2.2l-0.46,-0.11l-0.82,0.44l-0.77,-1.59l-2.05,-1.2l4.12,-2.13l1.57,0.33l-0.09,0.55l0.45,0.48l0.58,0.01l2.59,-1.53l0.4,-0.74l-0.31,-0.53l-2.95,-0.38l0.35,-0.69l-0.16,-0.53l-0.77,-0.68l0.87,-0.21l2.37,0.81l3.21,-0.37l0.81,-0.45l0.88,-1.05l1.08,-1.85l0.93,-0.29l1.83,0.9l2.88,-0.91l0.01,0.96l0.41,0.72l0.57,0.29l0.85,-0.14l0.92,-1.04l0.66,-1.38l2.05,-1.24l0.71,-1.09l0.79,-3.53l0.74,-1.69l0.12,-1.43l-0.24,-0.62l0.35,-1.02l2.91,-1.59l2.21,-0.38l2.07,0.05l5.67,-2.08l1.82,0.61l1.85,0.19l7.5,-2.05l2.87,-1.7l1.19,-1.55l1.73,-1.21l6.3,-2.55l1.6,-1.15l3.02,-0.01l1.01,0.42l0.73,1.19l0.96,0.56l6.76,1.15l0.16,3.45l0.67,1.05l1.76,0.23l1.0,0.53l0.75,0.86l0.19,3.41l0.37,1.1l0.83,0.9l7.87,2.42l0.98,0.74l-1.05,1.0l-1.44,0.39l-6.49,-0.5l-1.25,1.0l0.26,1.69l1.38,2.12l1.77,1.1l9.66,0.99l0.59,3.84l0.89,2.13l0.74,0.97l-4.04,0.73l-7.8,0.13l-2.28,0.45l-3.64,1.92l-3.75,0.4l-1.21,0.4l-1.97,1.38l-0.44,2.05l0.34,0.46l2.15,0.27l3.27,3.95l1.6,0.25l1.59,-0.33l0.58,0.98l0.46,1.89l0.78,1.46l-3.34,3.98l-0.73,1.85l0.21,0.51l4.21,1.93l1.79,1.56l0.5,1.23l-1.33,0.64l-4.88,-2.79l-2.44,-0.76l-0.42,0.12l-2.08,2.69l-2.09,-0.41l-1.44,0.76l-0.51,1.31l0.34,2.89l-0.42,1.43l-3.09,2.07l-0.96,0.14l-0.76,-0.4l-0.43,-0.97l-0.0,-4.16l-0.54,-1.5l-0.62,-0.62l-1.05,-0.2l-3.16,1.21l-0.63,2.53l0.85,3.73l1.33,3.46l0.87,1.16l-0.79,0.87l-1.72,0.58l-6.12,-1.46l-3.27,-0.03l-0.79,-0.34l-3.21,-3.11l-6.39,-2.68l-1.88,-1.34l-3.66,-3.68l-1.27,-0.75l-0.14,-1.25l-0.69,-1.37l-1.79,-1.89l-3.8,-1.82l-7.01,-1.07l-1.45,-0.69l1.47,-1.03l1.91,-0.24l0.8,-0.55l0.42,-2.94l-0.66,-1.35l-0.09,-1.84l1.02,-2.31l1.32,-0.5l5.58,-0.5l1.1,-0.5l1.01,0.86l3.14,0.71l1.04,-0.02l0.24,-0.51l0.65,0.2l-0.47,0.4l0.19,0.91l2.51,1.59l2.62,0.48l1.97,1.62l1.54,0.57l3.31,0.09l0.4,-0.29l-0.19,-0.46l-1.24,-0.71l-2.55,-0.47l-5.05,-4.17l-2.19,-1.13l-2.7,-0.49l-1.38,-0.93l-2.33,-0.59l-8.57,0.49l-2.09,1.06l-1.63,2.06l-1.9,0.52l-1.37,1.18l-2.09,0.34l-0.98,-0.34l-2.32,-2.13l-1.22,-0.61l-2.17,0.0l-0.78,0.6l-0.33,0.97l-1.39,-0.03l-4.87,-2.21ZM161.53,297.57l0.02,0.14l-0.01,0.02l-0.01,-0.17Z", "name": "Loire-Atlantique"}, "FR-45": {"path": "M460.91,221.47l0.33,-0.04l0.75,0.86l1.36,3.99l3.56,2.09l1.09,1.21l-0.82,1.86l0.48,1.68l-2.36,-0.11l-1.14,1.09l0.09,1.33l1.07,0.83l2.02,0.26l3.17,-0.65l8.35,0.59l2.29,-0.94l1.66,-1.6l0.83,-0.26l2.03,0.05l-0.41,1.53l0.32,0.38l1.06,0.2l7.05,-1.97l1.76,0.12l2.27,0.58l1.52,1.02l1.38,4.33l1.05,1.28l1.91,1.34l1.11,1.26l0.31,1.76l-1.88,3.81l-2.42,1.45l-1.42,1.43l-1.36,0.14l-0.46,0.42l0.1,2.67l0.95,2.06l-0.78,1.4l0.13,1.67l-0.42,0.96l-4.41,2.06l-4.1,0.43l-1.2,0.99l-0.29,1.64l0.41,1.33l2.48,1.05l2.32,2.0l1.13,2.08l-0.6,1.62l0.07,0.78l2.52,3.57l-3.22,0.29l-3.17,1.42l-0.3,1.25l0.72,0.77l-2.84,1.5l-1.07,0.08l-2.48,-1.92l-1.53,-0.21l-0.83,0.83l-1.2,2.16l-1.24,0.11l-0.91,-0.47l-2.08,-1.96l-2.56,-3.52l-1.22,-0.81l-3.47,0.03l-1.28,-0.35l-3.03,-2.4l-1.26,-0.12l-3.06,1.02l-1.43,-0.29l-3.28,-1.8l-3.15,0.05l-1.1,-3.21l-3.19,-1.1l-12.45,0.99l-1.67,-0.21l-3.13,-1.95l-2.01,-0.61l-0.99,0.36l-0.62,2.28l-1.06,1.75l-1.56,0.16l-1.79,-0.95l-1.35,-1.56l-0.91,-3.7l-0.83,-0.87l-2.54,-0.96l-2.25,-1.44l-0.58,0.18l-0.68,1.58l-0.69,0.36l-2.68,-2.27l1.14,-1.83l-0.03,-0.53l-2.02,-2.07l2.53,-2.72l0.15,-3.26l-0.91,-1.06l-1.61,-0.86l1.52,-1.97l0.29,-1.12l-0.39,-1.13l-0.72,-0.68l-1.86,-0.04l-0.18,-2.02l0.27,-0.71l0.82,-0.73l0.73,-0.12l1.8,0.74l1.17,-0.19l2.1,-2.38l0.86,-0.52l1.54,-0.15l3.3,0.6l3.84,-1.4l1.12,-0.16l1.62,0.35l1.42,-0.39l2.22,-2.35l1.73,-3.94l2.64,-0.88l0.63,-0.75l0.39,-1.43l-0.68,-3.44l1.26,-2.08l8.8,-1.74l2.18,-0.89l1.74,-2.19l1.08,0.42l1.34,1.84l0.89,0.32l1.9,-0.44l1.41,-1.25l0.41,-0.04l2.61,1.32l2.09,-0.21Z", "name": "Loiret"}, "FR-46": {"path": "M440.29,478.66l0.61,1.12l0.9,5.86l3.12,4.71l1.22,2.47l-0.85,4.57l-0.66,1.67l0.43,0.65l1.41,0.75l0.84,3.28l0.5,0.83l1.27,0.7l-0.05,1.13l-3.48,1.2l-4.94,-0.35l-4.66,2.37l-3.63,2.62l-5.71,2.41l-0.24,0.48l1.66,5.79l2.5,3.77l-0.0,0.52l-3.11,1.27l-4.89,0.22l-5.08,1.99l-2.39,2.3l-1.58,-2.03l-1.59,-0.15l-1.24,0.4l-0.55,1.27l0.76,2.73l-0.66,0.49l-1.02,0.03l-2.32,-2.65l-2.03,-1.07l-0.49,0.16l-0.92,1.48l-1.2,1.0l-4.32,2.11l-1.36,-0.08l-3.04,-0.89l-0.16,-0.19l1.05,-1.93l-0.97,-1.37l-1.29,-0.04l-1.21,0.77l-1.83,-0.42l-4.22,-2.04l-1.03,-0.86l-0.62,-0.96l-0.08,-0.89l0.72,-1.87l-0.01,-1.35l-0.93,-0.81l-1.27,0.13l-1.62,0.71l0.11,-2.87l-1.84,-1.84l-0.96,-2.38l-0.09,-1.96l-1.25,-1.9l0.7,-0.81l2.99,-1.33l3.6,-2.94l3.41,-5.27l0.78,-0.63l2.29,-0.5l1.89,-1.35l1.85,-0.79l1.77,-1.9l0.54,-1.79l-0.67,-1.05l0.11,-0.81l0.64,-0.86l2.37,-0.76l1.69,-2.66l2.13,-1.79l0.74,-1.12l-0.14,-1.73l0.68,-1.13l0.08,-1.03l-1.31,-3.89l0.24,-0.96l3.33,-2.09l1.05,-0.26l1.04,-0.9l1.16,1.27l2.28,-0.55l1.67,0.46l2.94,1.66l2.03,1.61l1.3,1.87l1.92,0.91l1.31,1.01l0.92,0.2l1.46,0.02l3.21,-0.98l3.94,-1.84l2.17,0.72l1.98,-0.89l4.23,-0.19Z", "name": "Lot"}, "FR-47": {"path": "M319.78,553.37l-1.2,-3.4l1.04,-0.97l1.37,-3.11l2.04,-2.74l-0.11,-0.58l-1.17,-0.7l-12.14,-2.12l-2.72,0.1l-0.02,-2.51l-0.58,-2.42l4.21,-1.88l2.04,-1.73l0.12,-0.43l-0.81,-2.36l-2.17,-2.67l0.43,-0.38l4.03,-1.09l1.11,0.2l0.47,-0.37l0.04,-1.27l-1.02,-2.11l0.74,-2.96l-0.36,-0.86l-1.26,-1.08l-0.12,-0.67l0.63,-1.59l2.34,-2.93l2.17,-0.04l0.8,-0.56l5.55,-6.3l0.27,-1.37l-0.64,-0.97l-2.55,-0.77l-0.6,-0.65l-0.14,-1.7l0.97,-1.37l0.8,-0.39l1.36,-0.1l1.73,1.8l1.12,0.02l0.79,-0.68l0.54,-2.67l2.3,0.19l1.33,-0.33l1.71,2.3l1.3,2.9l1.55,2.44l2.75,1.08l1.68,-0.35l3.94,-1.97l1.83,0.78l0.82,0.01l0.96,-0.61l1.52,-1.88l0.64,-0.14l2.33,0.07l1.41,1.49l1.49,0.49l3.11,-0.26l3.45,-1.11l0.96,0.12l1.08,0.85l0.53,1.13l-0.18,1.09l-1.19,1.0l-0.06,0.55l1.45,1.89l2.31,0.01l4.15,-2.55l1.83,-0.04l2.6,1.09l2.33,1.66l1.03,1.57l-3.67,1.83l-0.75,0.74l-0.26,0.78l1.31,2.09l0.06,1.85l1.05,2.61l1.8,1.78l-0.18,3.0l-0.59,0.58l-4.81,0.36l-1.13,-0.2l-1.77,-0.98l-0.77,0.08l-0.72,0.57l-0.27,2.47l-0.74,1.55l-0.06,0.88l0.85,1.37l2.45,0.96l0.36,0.51l-2.45,5.11l-2.16,1.72l0.1,0.72l1.14,0.8l-0.03,0.97l-1.25,0.21l-2.22,-0.7l-1.4,0.32l-0.49,0.48l-0.46,1.35l-2.26,1.33l-1.04,2.84l-3.57,1.87l-1.05,0.18l-2.71,-2.15l-1.51,-0.47l-5.15,1.53l-2.7,-0.26l-1.21,0.8l-4.35,1.91l-1.3,0.2l-3.0,1.53l-4.83,-1.62l-0.8,0.09l-1.07,0.84l-1.29,1.99l-1.07,0.78l-0.59,0.02l-0.58,-0.74l-0.76,-0.21l-2.2,0.65Z", "name": "Lot-et-Garonne"}, "FR-40": {"path": "M257.68,586.1l-3.47,-0.76l-0.46,0.4l0.02,1.53l-0.37,0.7l-0.71,0.37l-1.74,0.1l-2.93,-1.39l-4.19,2.35l-0.77,-0.8l0.28,-2.2l-0.4,-1.23l-2.1,-1.2l-0.55,0.19l-0.33,0.71l-1.9,1.61l-2.45,1.2l-1.9,0.4l-4.17,0.09l-3.36,0.61l-1.68,-0.7l-2.34,-1.93l2.16,-2.92l0.41,-2.32l1.48,-4.27l2.51,-12.23l1.46,-4.3l2.15,-9.72l3.95,-21.25l1.83,-12.26l6.25,-1.83l4.03,-2.64l4.42,1.75l0.54,1.31l-1.08,3.38l0.25,0.5l1.12,0.37l1.26,0.04l3.0,-0.66l5.04,1.27l9.78,-2.13l2.02,0.19l0.84,0.91l0.31,1.52l0.82,1.09l4.86,2.61l0.9,2.07l0.99,0.56l3.91,0.98l2.79,2.16l0.27,0.44l-0.71,3.25l0.4,1.51l0.71,0.82l8.88,0.94l1.27,-1.19l0.32,-3.47l0.59,-0.27l3.55,2.64l0.62,2.47l0.02,2.84l0.42,0.4l3.0,-0.12l12.02,2.1l0.6,0.37l-1.85,2.5l-1.36,3.07l-1.19,1.39l1.46,4.12l-0.51,0.98l0.35,1.83l-0.42,1.05l-0.84,0.31l-3.14,-0.52l-0.37,-0.73l0.78,-1.23l-0.06,-1.08l-0.91,-0.88l-1.22,-0.35l-1.33,0.44l-1.59,1.05l-1.8,1.72l-1.77,0.13l-2.38,-0.3l-2.89,1.82l-0.59,0.71l-0.12,1.04l1.56,1.74l0.82,2.14l-1.14,2.17l-0.36,1.38l-0.05,2.41l0.76,1.67l-1.41,2.79l-1.21,0.16l-0.79,0.5l-0.11,0.65l0.54,1.41l-1.35,2.19l0.02,0.65l0.98,0.76l0.55,1.63l-4.66,1.61l-6.63,0.79l-0.71,-0.35l0.26,-1.88l-0.28,-0.39l-1.04,-0.28l-0.87,0.23l-4.57,3.24l-0.72,0.17l-6.65,-1.04l-2.64,0.72l-2.68,-1.37l-1.42,-0.25l-1.34,0.18l-3.55,1.67l-2.71,-0.2l-1.3,0.91Z", "name": "Landes"}, "FR-41": {"path": "M366.23,238.4l1.39,-0.45l3.94,-0.19l2.09,-0.61l1.72,-1.09l1.22,-0.18l0.94,3.47l1.02,0.64l2.8,0.62l6.81,7.85l2.85,-0.52l4.43,1.84l1.58,0.07l1.59,-0.4l5.9,-2.92l2.85,0.84l1.93,-0.34l0.73,1.25l-0.22,0.64l-1.27,1.31l-0.37,1.04l0.15,0.45l2.42,1.6l-0.02,2.63l-2.71,2.99l0.04,0.51l2.01,2.06l-1.16,1.86l0.06,0.55l3.14,2.66l1.32,-0.28l0.95,-1.67l1.97,1.25l2.36,0.86l0.57,0.54l0.99,3.84l1.46,1.69l2.08,1.13l2.41,-0.33l1.21,-1.99l0.29,-1.73l0.66,-0.46l1.55,0.51l3.16,1.97l1.96,0.29l12.33,-1.01l2.92,1.01l0.77,2.69l-4.29,1.25l-1.96,1.28l-0.44,2.51l1.18,1.24l2.44,-0.04l0.8,0.51l1.38,2.93l1.89,2.53l0.29,2.13l-0.7,1.84l-1.42,-0.0l-3.86,-1.21l-1.11,0.31l-0.9,0.73l-0.53,0.94l-0.2,2.46l0.28,1.35l1.7,3.88l-0.46,1.37l-2.19,1.15l-2.93,0.33l-2.99,-0.35l-3.07,-1.09l-0.73,0.1l-1.95,1.93l-0.49,2.89l-1.71,0.63l-1.85,-0.46l-6.98,-5.39l-3.46,1.18l-4.12,-0.91l-0.44,0.3l-0.58,1.73l-1.13,-0.19l-1.56,0.32l-1.05,0.86l-0.43,1.45l-3.05,-0.69l-2.94,0.73l-5.7,2.97l-3.12,-5.16l-2.14,-1.75l-2.74,-0.57l-2.1,0.29l-2.59,-1.62l-0.99,-1.5l1.2,-3.48l0.32,-2.78l-0.28,-2.83l-0.95,-2.44l-1.95,-2.96l-1.21,-0.99l0.13,-0.95l0.82,-1.43l-0.03,-0.86l-1.89,-2.92l-0.86,-0.32l-1.67,0.72l-0.61,-2.06l-0.84,-0.53l-1.01,-0.13l-2.04,0.25l-1.06,0.53l-1.16,1.28l-1.06,0.22l-0.75,-0.8l0.44,-2.41l-0.21,-1.3l-0.61,-0.88l-0.9,-0.49l-6.06,-1.44l-2.11,0.75l-2.89,-1.54l-0.89,-0.16l-1.08,0.26l-1.07,0.76l-0.13,-0.27l0.59,-1.42l1.29,-1.16l5.17,-2.45l1.63,-1.53l1.57,-4.34l0.07,-3.55l0.45,-1.34l2.91,-2.22l0.88,-1.62l-0.43,-1.98l0.6,-3.59l-0.6,-0.63l-1.31,-0.12l-0.89,-1.68l0.21,-0.59l2.27,-0.25l0.71,-0.46l0.07,-1.0l-0.69,-0.59Z", "name": "Loir-et-Cher"}, "FR-42": {"path": "M583.09,383.52l1.72,1.09l0.77,1.17l0.35,1.21l-0.35,1.44l-1.12,0.39l-3.17,0.2l-1.25,0.79l-5.05,5.08l-0.45,1.47l0.12,0.4l2.9,2.04l0.31,0.55l-0.33,0.68l-1.86,0.46l-0.95,0.6l-0.16,0.46l0.36,1.11l4.31,2.35l0.65,1.11l-0.54,1.84l0.24,1.21l0.63,0.77l1.77,0.9l1.13,1.52l-0.55,1.62l-2.44,3.28l0.24,1.69l3.02,0.77l0.08,0.5l-2.0,2.9l1.13,3.68l3.25,3.28l3.98,2.29l3.0,0.54l3.8,-0.5l1.89,0.21l1.14,0.81l0.17,0.81l-0.79,3.31l0.17,1.78l0.8,0.92l0.95,0.24l2.4,-0.12l0.7,0.4l1.54,2.0l-0.27,3.07l0.76,2.48l-2.68,0.48l-5.51,2.54l-1.35,1.01l-0.94,1.46l0.19,3.77l-7.86,0.47l-1.9,-1.64l-1.54,-0.81l-2.83,-0.33l-1.06,-2.26l0.79,-1.98l-0.44,-1.83l-1.29,-2.03l-1.55,-0.99l-2.48,1.54l-4.06,-1.11l-2.36,0.02l-0.64,0.32l-0.28,1.19l-0.59,0.59l-5.7,0.96l-2.47,0.09l-1.61,-1.66l-0.73,-0.21l-2.27,0.68l-1.66,1.06l-0.4,-0.55l0.57,-2.63l0.71,-1.31l2.82,-2.97l0.97,-2.32l-0.07,-1.42l-2.55,-5.63l-7.56,-6.05l-3.13,-6.33l-0.58,-0.9l-1.05,-0.64l-1.81,-3.03l0.87,-1.71l0.1,-2.6l0.88,-1.58l0.32,-1.57l-0.57,-1.38l-2.48,-1.95l-0.33,-0.83l0.19,-0.43l2.19,-1.04l4.84,-1.05l0.92,-0.65l0.52,-0.86l-0.92,-6.28l-0.68,-2.16l0.16,-3.93l-0.45,-3.2l-1.15,-1.48l0.18,-0.5l2.9,-2.1l3.64,-1.01l0.56,1.52l-0.19,2.42l0.26,0.72l1.01,0.63l2.01,0.62l2.09,1.49l0.94,0.18l5.09,-1.32l3.56,0.89l3.56,-0.61l4.78,1.24l1.92,-0.02l1.84,-0.64l1.67,-1.19l1.71,-2.0Z", "name": "Loire"}, "FR-43": {"path": "M552.14,449.48l0.67,0.85l0.84,0.2l1.6,-1.2l1.9,-0.6l2.13,1.82l2.81,-0.06l5.93,-1.02l0.73,-0.54l0.63,-1.51l2.08,-0.01l4.17,1.12l0.77,-0.18l1.64,-1.34l1.05,0.73l1.46,2.67l-0.74,2.73l1.01,2.4l0.55,0.5l2.83,0.32l1.35,0.69l2.79,2.4l0.01,0.38l-0.57,2.1l-1.56,2.88l-0.39,2.24l-0.49,0.1l-1.12,-1.01l-1.15,-0.45l-0.79,0.06l-0.57,0.5l-0.04,0.8l0.87,1.5l-1.86,1.79l-0.32,0.95l1.23,1.99l-1.15,0.49l-2.02,0.27l-0.8,0.49l-0.88,1.68l0.6,1.25l-0.04,0.58l-2.45,0.94l-1.75,-0.24l-0.7,0.42l-1.47,3.48l-2.26,2.8l-5.01,0.84l-2.52,-0.04l-0.63,0.49l-0.58,1.76l-3.92,1.29l-3.33,4.57l-1.1,0.45l-1.34,-0.28l-3.14,-1.55l-4.13,-3.41l-4.32,-0.85l0.51,-1.34l-0.08,-0.66l-1.42,-1.21l-1.93,-0.18l-1.33,0.48l-0.47,0.69l-0.31,1.9l-0.69,0.54l-3.23,0.32l-1.34,0.6l-0.62,-0.3l-1.06,-1.05l-3.45,-5.83l-1.02,-2.98l-1.04,-0.38l-0.16,-1.22l-0.68,-1.37l-3.66,-3.52l-0.3,-0.83l0.23,-1.07l2.14,-2.1l-0.09,-1.37l-0.66,-0.63l-1.9,-0.28l-0.72,-1.02l-0.39,-3.9l-0.44,-1.16l-1.67,-2.2l-0.5,-2.83l-0.66,-0.76l-1.65,-0.75l-1.77,-0.29l-2.82,0.33l0.05,-2.32l-0.44,-2.12l3.43,0.06l2.05,-0.48l2.28,-2.19l0.84,-0.45l2.27,-0.41l1.03,-0.48l1.31,-1.17l0.83,-0.02l3.17,1.58l5.41,-1.2l1.34,0.03l3.7,1.65l2.36,2.96l1.35,0.62l0.97,-0.2l2.41,-1.46l3.22,1.35l1.86,0.13l1.28,-0.57l0.79,-1.69l0.57,-0.41l4.6,1.93Z", "name": "Haute-Loire"}, "FR-39": {"path": "M636.54,324.96l3.3,-1.96l0.29,-0.73l-0.62,-2.26l0.27,-0.68l5.24,-2.45l5.77,-8.09l0.56,-1.07l0.24,-2.05l1.4,-4.44l3.31,2.04l1.05,0.28l1.17,0.03l3.94,-0.81l0.76,0.37l0.46,0.74l1.09,2.82l3.51,2.25l1.95,3.33l-0.51,1.91l-1.77,1.97l-0.1,2.5l-1.72,1.99l0.3,1.45l1.37,0.56l2.08,-1.29l2.03,1.7l4.71,0.92l2.03,0.9l1.96,2.56l0.58,4.16l1.96,2.96l0.83,0.55l2.78,0.44l7.29,5.91l-0.57,0.75l-6.3,4.25l-0.52,0.66l0.0,1.44l0.82,1.57l-1.76,1.41l-0.84,1.22l0.33,1.61l1.72,1.74l3.37,1.86l-1.94,2.13l-3.09,4.33l0.33,2.88l-3.79,4.35l-2.1,1.94l-1.03,1.64l-4.26,3.58l-2.33,0.56l-7.03,-0.44l-0.45,-0.65l-0.22,-1.3l-0.66,-0.88l-3.08,-2.47l-0.52,-0.06l-2.8,2.33l-0.57,1.15l-1.28,0.24l-1.18,1.22l-1.45,0.59l-0.82,0.73l-1.63,-0.33l-0.55,-0.58l0.29,-2.41l-0.42,-1.04l-1.87,-0.45l-0.9,-1.08l-2.11,-0.64l-0.82,-0.85l-0.79,-2.49l-1.25,-0.94l-1.43,-0.41l-0.41,-0.65l-0.02,-2.36l1.02,-0.49l4.42,-0.91l1.13,-0.73l0.39,-0.89l-0.11,-0.84l-0.52,-0.67l-2.59,-1.42l-0.66,-1.39l0.39,-1.98l1.89,-1.03l0.5,-0.65l1.1,-3.74l-1.49,-5.71l-0.52,-1.09l-1.27,-1.09l0.92,-2.13l-0.29,-0.66l-1.72,-1.29l-0.18,-0.73l1.26,-0.72l3.88,-0.5l1.03,-0.96l0.46,-1.58l-0.25,-0.34l-2.12,-0.68l-1.69,-1.38l-1.75,-0.35l-2.19,-1.16l-3.31,-3.1l-1.32,-2.47Z", "name": "Jura"}, "FR-38": {"path": "M609.43,431.43l0.37,-0.26l11.99,-0.96l1.42,-0.94l1.29,-2.78l2.74,-2.21l1.55,-0.72l1.38,0.0l0.4,-0.35l0.15,-1.12l-0.77,-1.09l-3.91,-1.99l-0.55,-0.73l-0.01,-0.96l1.81,-3.4l1.46,0.25l5.22,2.56l1.5,0.29l1.26,-0.39l0.95,-0.77l3.72,-5.2l1.66,-0.79l1.02,0.37l2.95,2.53l-0.16,0.54l1.05,2.91l1.74,2.31l4.28,3.44l1.11,1.33l2.09,3.44l1.43,3.24l7.19,12.36l0.99,0.97l9.61,3.52l0.53,-0.42l0.24,-5.99l0.77,-0.59l1.92,-0.13l0.96,0.33l3.69,2.98l4.95,0.68l2.57,2.57l1.08,1.62l0.41,1.78l-0.28,1.51l-2.76,2.4l-0.7,1.38l-0.16,1.59l1.41,5.27l0.16,2.5l0.48,0.71l0.6,0.2l3.54,0.13l1.61,0.52l0.42,0.96l-1.56,1.89l-1.05,4.98l0.01,1.51l0.51,1.03l1.24,0.41l3.69,-0.43l0.93,0.46l0.56,3.36l1.97,2.53l-0.32,4.01l-0.85,0.16l-2.83,-0.77l-3.8,0.98l-1.71,-0.15l-1.86,0.35l-2.28,-0.4l-3.91,2.12l-3.38,-0.2l-3.2,2.03l-0.33,0.77l0.25,1.63l-0.69,0.66l-2.32,0.66l-4.54,0.49l-2.12,2.84l-2.13,0.21l-7.15,-1.11l-5.25,-4.64l-1.23,-0.57l-0.56,0.37l0.02,1.16l-3.85,-1.07l-0.77,-0.79l-0.02,-1.18l1.34,-7.85l0.0,-2.77l0.7,-2.77l-1.35,-4.55l0.89,-1.79l-0.37,-0.58l-1.95,0.13l-4.0,2.45l-2.19,-0.04l-0.76,-1.11l-1.94,0.36l-1.68,-0.41l-1.95,-0.01l-1.01,-1.74l-2.6,-0.1l-0.59,0.26l-0.24,-0.8l1.17,-3.91l-0.89,-4.16l-0.15,-2.44l-0.84,-1.66l-0.5,-0.19l-1.67,0.65l0.4,-2.19l-0.39,-0.47l-2.66,-0.05l-0.71,-0.53l-1.36,-2.01l-1.81,-0.09l-1.11,-1.65l-1.05,-0.26l-1.5,0.3l-5.43,2.97l-3.6,0.31l-2.13,-2.79l-0.16,-1.49l-1.08,-3.38l0.27,-3.03l1.51,-2.04l4.14,-3.16l1.07,-2.82l-0.1,-0.43l-1.88,-1.77l-1.7,-1.15Z", "name": "Is\u00e8re"}, "FR-31": {"path": "M438.35,594.54l-4.57,0.58l-3.86,1.57l-0.35,-1.32l-0.56,-0.57l-1.18,-0.36l-0.78,0.18l-0.7,1.44l-1.61,1.87l-0.18,0.68l0.42,1.98l-0.7,0.55l-1.69,0.11l-2.37,0.73l-1.83,3.99l-1.62,-0.34l-1.69,1.92l-0.67,0.15l-0.53,-0.93l-0.7,-0.5l-2.26,0.09l-3.43,-2.4l-1.51,0.22l-0.75,1.47l0.93,2.1l-0.77,1.46l-1.23,0.84l-1.35,0.05l-1.19,-0.81l0.4,-1.59l-0.23,-0.93l-3.02,-2.84l-1.49,-0.75l-1.59,-0.19l-1.48,0.75l-0.37,2.57l1.03,1.07l3.21,1.18l0.54,0.63l-0.4,0.78l-1.31,0.81l-2.63,0.93l-4.2,0.5l-1.19,1.26l0.41,1.54l2.88,1.2l0.73,0.9l-2.48,2.2l-0.7,-0.1l-2.02,-2.74l-3.53,-1.98l-1.05,-0.07l-2.07,0.8l-1.63,0.09l-0.77,0.7l-0.87,1.86l-2.5,1.07l-0.7,1.18l-0.08,1.93l0.65,3.53l-0.3,1.26l-1.98,1.54l-2.5,0.59l-1.87,0.07l-0.84,0.99l-0.34,1.64l-1.88,1.25l-0.41,2.1l1.2,4.4l-1.96,-1.01l-2.28,-0.07l-3.17,-0.95l-2.82,0.01l-1.52,0.52l-0.54,1.34l0.11,1.63l-0.82,1.99l0.47,0.91l-0.83,1.28l0.24,0.56l0.76,0.24l0.61,0.69l0.36,0.97l-0.05,1.0l-0.39,0.58l-10.29,0.14l-0.66,-0.25l-0.7,-5.3l0.12,-4.44l0.39,-1.7l0.65,-1.16l1.0,-0.2l3.45,0.3l1.97,-1.5l3.97,-5.65l-2.4,-5.55l-0.48,-0.2l-1.96,0.65l-2.16,1.31l0.36,-1.37l1.29,-2.08l0.35,-1.15l-0.18,-0.46l-6.96,-3.98l3.47,-3.2l1.19,-1.73l2.09,-0.72l0.7,-0.75l-0.1,-2.33l2.19,-1.81l0.75,-1.08l-0.3,-1.32l1.57,-0.13l1.53,-0.85l3.15,-3.7l2.01,-0.99l2.09,-1.87l7.67,0.4l1.23,0.7l2.77,2.43l1.75,0.36l1.71,-1.59l0.5,-2.5l0.11,-4.81l1.16,-3.23l0.85,-1.05l3.79,-0.02l2.88,-2.08l0.92,-2.77l-0.11,-0.42l-2.97,-2.72l-4.72,-2.63l-1.01,-2.3l-2.09,-1.29l-2.6,-2.61l-0.98,-1.95l5.54,-1.27l3.13,0.08l2.12,-0.81l1.48,-0.01l3.38,3.05l1.92,-0.01l6.87,-3.51l0.09,-0.65l-0.7,-0.63l-2.44,-1.22l3.91,-2.14l4.12,0.36l0.93,-0.42l1.66,-1.68l1.72,0.56l2.12,-1.15l-0.25,2.12l1.83,3.3l0.04,1.74l2.14,1.35l1.79,0.59l2.29,5.99l2.73,2.76l0.1,0.71l-1.25,0.52l-0.73,0.77l-0.45,0.83l0.16,0.54l6.28,3.37l1.9,0.54l0.98,0.72l2.66,3.34l4.34,3.17l1.17,0.2l1.26,-0.64l1.07,-1.48l1.14,-0.06l1.3,1.29l-1.5,2.12l-0.12,1.34l0.26,0.94Z", "name": "Haute-Garonne"}, "FR-30": {"path": "M566.02,584.87l-0.06,-1.85l3.33,-1.3l1.57,-2.94l-0.27,-4.12l-2.13,-3.56l-0.92,-0.7l-2.81,-1.24l-3.53,-2.48l-3.2,-0.45l-0.09,-3.29l-0.36,-1.11l-0.69,-0.87l-1.07,-0.59l-2.18,-0.12l-4.39,0.66l-1.56,-1.15l1.35,-3.1l-0.1,-0.46l-2.7,-2.28l-3.77,-0.42l-2.69,1.99l-0.9,2.3l-2.1,-0.17l-1.35,0.34l-1.85,2.64l-0.86,0.74l-0.97,-0.02l-1.81,-1.45l-1.55,-0.47l-1.27,0.54l-0.57,1.76l-0.36,0.59l-0.4,0.09l-1.06,-0.9l-1.22,-2.44l-1.2,-0.57l-2.57,0.04l0.68,-1.95l5.28,-4.67l0.31,-0.63l-0.08,-0.85l-0.93,-1.06l-2.91,-2.03l-1.78,-0.14l-1.54,-1.21l-1.67,0.17l-0.93,-0.62l2.15,-1.34l0.28,-2.27l0.84,-1.14l1.88,-1.21l6.14,3.38l2.51,0.67l6.22,-0.32l1.43,-1.05l0.3,-3.47l1.43,-0.44l1.03,0.26l6.27,3.34l4.61,0.45l0.9,-0.21l2.81,-2.74l2.28,-4.39l0.51,-1.75l-0.2,-1.4l-1.55,-3.3l-0.62,-3.31l-1.79,-2.77l0.63,-0.51l2.02,-0.35l0.99,-0.67l1.96,-3.09l1.34,1.08l1.64,2.61l-0.83,2.07l0.49,3.26l0.66,0.8l4.86,-0.5l1.08,1.04l4.93,2.42l1.51,0.3l0.78,-0.21l1.6,-1.52l3.36,-2.18l2.44,-0.38l0.36,0.44l-0.26,1.47l0.24,0.69l0.83,0.79l0.97,0.26l0.84,-0.14l1.05,-0.78l0.64,-2.28l2.19,-0.38l1.44,0.09l1.68,0.67l2.19,2.02l1.73,0.78l2.57,0.61l0.57,1.69l1.23,1.54l0.1,1.58l1.9,1.83l0.18,2.73l-0.33,2.14l0.45,2.79l0.62,0.47l1.22,-0.4l1.2,0.21l4.51,5.33l-0.09,0.53l-1.09,-0.09l-0.55,0.26l-0.07,2.45l-1.05,1.25l-1.67,1.19l-2.8,1.16l-5.36,3.57l-0.17,0.92l0.54,4.15l-1.95,4.79l-0.24,2.71l-0.49,0.37l-1.49,-0.73l-2.67,-0.6l-2.03,0.57l-1.49,1.04l-1.68,2.12l-1.37,2.92l0.45,1.06l1.58,0.26l-0.69,1.49l-2.15,0.42l-0.61,1.38l-1.54,0.44l-3.46,2.46l-2.02,0.48l-1.44,1.06l-1.17,0.31l-1.37,3.01l-2.27,-0.34l-2.81,-1.63l-0.8,-1.47l0.87,-1.81l-1.93,-1.64Z", "name": "Gard"}, "FR-33": {"path": "M238.0,500.65l3.34,-33.36l2.55,-12.04l1.09,-15.98l2.41,-4.69l0.79,-1.06l0.72,-0.24l0.41,0.27l-0.33,2.59l1.44,2.01l4.22,2.89l3.51,1.53l7.32,7.13l1.65,2.15l1.65,6.53l1.42,7.99l2.13,4.49l2.13,2.43l2.35,2.0l2.44,1.49l0.52,1.41l-0.17,1.23l0.35,3.2l0.54,1.31l0.97,0.73l0.45,-0.0l0.16,-0.42l-0.81,-4.06l0.53,-2.18l-0.8,-1.78l-1.38,-1.23l1.66,0.3l2.68,1.57l0.51,-0.03l0.06,-0.51l-1.72,-2.53l-5.08,-1.82l-2.05,-1.4l-1.05,-1.86l-0.76,-2.33l-2.25,-14.04l4.57,0.18l1.0,-0.64l1.05,-1.41l0.92,0.83l0.37,1.95l0.61,0.79l2.13,0.71l2.33,0.11l3.23,2.19l0.41,0.91l-0.17,2.14l0.36,1.62l1.1,1.8l0.99,0.81l3.02,-0.17l1.87,1.12l1.79,0.6l2.4,1.97l4.08,1.26l1.94,-0.24l3.34,-1.09l1.62,0.54l1.87,-0.63l3.77,-0.0l0.86,0.7l0.85,1.9l0.12,1.21l-1.66,3.4l0.03,1.68l-1.47,1.64l-0.45,1.0l-0.12,1.41l1.53,1.97l-0.01,0.4l-2.58,3.64l0.39,0.63l0.61,-0.09l1.97,1.69l8.78,1.03l1.48,-0.51l2.82,-2.66l-0.03,-0.86l3.63,0.92l0.66,0.53l-1.25,1.32l-1.81,0.49l-0.36,0.49l0.68,2.82l1.1,1.81l-2.83,-0.11l-0.79,0.27l-0.38,0.53l-0.22,2.0l-0.4,0.64l-0.52,0.05l-1.67,-1.76l-0.96,-0.21l-2.05,0.69l-0.81,0.75l-0.67,2.2l0.31,1.13l1.02,1.08l2.35,0.65l0.34,0.39l-0.21,1.07l-5.31,5.95l-0.48,0.38l-1.65,-0.17l-0.88,0.43l-2.92,3.93l-0.27,1.03l0.15,1.03l1.6,1.84l-0.76,2.83l1.04,2.29l-0.04,0.56l-0.94,-0.13l-4.21,1.14l-0.89,0.74l-0.09,0.48l0.63,1.22l1.67,1.71l0.69,2.02l-1.69,1.46l-4.28,1.92l-4.05,-2.75l-1.25,0.81l-0.23,3.33l-0.71,0.8l-8.28,-0.78l-0.44,-0.46l-0.35,-1.31l0.73,-3.12l-0.54,-1.05l-3.06,-2.33l-3.93,-0.99l-0.75,-0.44l-0.94,-2.1l-4.74,-2.51l-0.63,-0.78l-0.41,-1.73l-1.27,-1.23l-2.36,-0.21l-9.74,2.12l-4.86,-1.26l-4.17,0.64l-0.69,-0.23l1.0,-3.14l-0.68,-1.87l-5.07,-2.13l-4.33,2.73l-5.9,1.73l0.19,-2.24l-0.62,-3.67l1.83,-2.53l1.26,-4.35l1.04,-1.14l1.32,-0.04l3.7,0.81l2.29,-0.28l1.4,-0.83l0.21,-1.48l-1.01,-1.12l0.28,-0.48l-0.7,-1.19l-4.63,-3.83l-1.79,-0.89l-0.92,0.36l-3.56,5.22l-0.53,2.34Z", "name": "Gironde"}, "FR-32": {"path": "M359.79,547.18l0.65,0.81l0.4,1.58l0.66,0.23l3.14,-1.63l0.89,0.14l0.43,0.57l0.03,0.93l-0.49,1.07l-3.18,3.71l-1.5,0.87l-0.15,0.61l0.99,1.17l1.74,0.65l4.32,0.23l0.53,0.72l1.39,6.68l-0.62,1.87l0.36,0.56l3.17,0.08l1.18,2.38l2.68,2.69l2.04,1.25l0.51,1.61l0.55,0.73l4.81,2.7l2.66,2.45l-0.8,2.4l-2.51,1.73l-3.62,-0.05l-1.33,1.4l-1.3,3.59l-0.11,4.84l-0.46,2.27l-1.31,1.13l-0.93,-0.27l-2.74,-2.4l-1.42,-0.82l-7.83,-0.52l-1.11,0.52l-1.55,1.52l-2.15,1.1l-3.04,3.62l-1.39,0.77l-1.79,0.11l-8.42,-1.75l-3.48,0.02l-1.29,-2.02l-0.57,-0.05l-0.64,0.61l-1.27,0.43l-0.98,-0.57l-0.81,-1.16l-0.76,-0.46l-1.13,-0.17l-4.88,0.9l-0.78,-0.25l-1.87,-2.23l-1.19,-0.73l-0.11,-0.88l0.54,-2.12l-1.07,-1.75l-0.7,-2.22l-0.78,-0.41l-1.24,-0.05l-3.06,-1.7l-0.93,-0.16l-1.15,-2.48l-0.59,-2.7l-0.34,-0.31l-1.92,-0.22l-1.76,0.52l-2.87,2.2l-5.51,-1.02l-1.94,0.13l-0.8,-1.93l-0.88,-0.6l1.33,-2.32l-0.5,-1.87l1.85,-0.49l1.64,-3.16l0.08,-0.71l-0.81,-1.29l0.05,-2.22l1.48,-3.42l-0.0,-0.64l-0.91,-2.1l-1.51,-1.7l0.46,-0.78l2.03,-1.39l0.59,-0.28l2.14,0.33l2.0,-0.16l2.08,-1.86l2.5,-1.32l1.3,0.7l0.06,0.52l-0.83,1.47l0.38,1.15l1.26,0.69l2.78,0.25l1.22,-0.46l0.56,-0.85l0.17,-0.92l-0.33,-1.74l0.68,-1.02l1.79,-0.56l0.96,0.87l1.31,-0.01l1.3,-0.95l2.0,-2.61l5.5,1.55l3.19,-1.57l1.3,-0.2l4.46,-1.96l1.1,-0.75l2.5,0.3l5.09,-1.52l1.7,0.75l2.48,1.88l1.39,-0.26l3.55,-1.86Z", "name": "Gers"}, "FR-35": {"path": "M193.66,200.25l0.91,0.63l0.48,-0.04l0.09,-0.48l-0.55,-1.04l-0.7,-0.57l-1.7,-0.54l-1.61,-3.1l0.51,-1.02l1.66,-0.82l0.37,-1.34l0.28,-0.13l2.22,0.0l0.28,-0.7l4.99,-0.86l0.54,1.16l-1.35,1.87l-0.06,2.08l1.7,1.73l2.67,0.63l4.54,0.04l4.83,-0.64l3.02,-1.39l2.6,5.45l1.04,3.06l1.91,2.9l3.27,2.38l2.44,0.21l1.93,-0.61l2.78,-1.91l2.08,-0.77l2.22,-2.4l2.39,0.03l6.14,1.5l2.32,1.25l-0.2,5.67l0.77,8.15l-1.95,4.1l0.21,1.05l0.9,1.52l0.8,4.72l-0.73,1.74l0.74,4.88l0.57,1.17l1.18,1.08l0.09,4.44l-1.36,0.63l-4.18,0.61l-2.21,1.9l-0.63,1.08l-2.9,9.1l-1.14,1.77l-0.41,1.91l-6.47,-1.09l-0.75,-0.44l-0.77,-1.22l-1.29,-0.55l-3.34,-0.0l-1.83,1.23l-6.34,2.57l-1.86,1.31l-1.2,1.55l-2.58,1.54l-7.31,2.01l-3.72,-0.8l-4.42,1.41l-1.22,0.67l-4.0,0.25l-3.59,1.82l-0.51,1.1l-0.32,-0.19l-0.17,-2.18l-1.02,-2.2l-0.09,-1.86l0.33,-0.32l2.98,-0.32l0.46,-1.25l-0.89,-1.18l-2.27,-0.12l-0.44,-0.27l-0.01,-0.41l0.68,-0.49l1.58,-0.35l0.94,-0.71l1.05,-2.15l0.07,-1.24l-0.88,-1.2l-2.57,-0.21l0.4,-6.26l-0.33,-1.06l-1.18,-1.53l-2.87,-1.77l-5.29,-0.98l-0.72,-0.47l-0.03,-1.08l0.71,-0.97l4.1,-1.14l0.83,-0.85l0.1,-1.05l-1.0,-0.9l-2.74,0.1l-1.37,-2.46l-1.39,-1.47l3.16,-2.19l0.88,-2.86l0.34,-0.59l1.51,-1.03l0.97,-2.6l0.45,-0.27l2.77,-0.1l1.73,-1.78l1.25,-0.81l4.97,1.15l1.64,-1.71l0.01,-3.24l1.33,-0.34l0.57,-1.09l-1.23,-5.68l2.64,-4.77l-1.01,-4.44l-0.63,-0.64l-0.55,0.02l-0.71,0.73l-0.55,-0.33l0.13,-0.69l-0.92,-1.66Z", "name": "Ille-et-Vilaine"}, "FR-34": {"path": "M472.95,595.08l2.8,-1.36l1.66,-1.38l0.42,-0.75l-0.67,-1.83l0.6,-2.13l-0.19,-0.87l-1.8,-1.81l-0.4,-0.78l0.06,-2.31l1.08,-2.4l2.53,-0.35l4.36,1.68l1.08,-0.09l6.9,-2.67l1.13,-0.84l0.89,-1.44l0.94,-0.73l2.76,-0.52l2.05,0.72l1.31,-0.01l1.13,-0.87l0.42,-1.21l-0.12,-1.91l0.44,-1.97l-0.73,-1.88l0.22,-1.3l0.63,-0.54l1.14,-0.13l5.68,0.72l1.26,-0.14l1.39,-0.84l0.82,-1.13l0.22,-1.48l0.5,-0.93l1.64,-1.06l2.89,-0.27l1.28,-0.95l2.91,-0.05l0.8,0.42l1.07,2.27l1.44,1.2l1.25,-0.29l0.99,-2.42l0.74,-0.23l0.99,0.34l1.86,1.49l1.5,0.12l1.36,-1.05l1.56,-2.39l3.67,-0.32l0.92,-2.34l2.17,-1.72l3.48,0.38l2.17,1.9l-1.36,3.12l0.13,0.48l1.96,1.44l4.72,-0.6l2.04,0.12l0.73,0.44l0.75,1.51l-0.04,2.62l0.4,1.15l3.35,0.52l3.47,2.44l2.8,1.24l0.71,0.51l2.04,3.41l0.25,3.51l-1.45,2.7l-3.23,1.15l-0.27,0.38l0.03,2.02l-2.89,-0.25l-3.46,0.39l-2.5,0.88l-13.02,9.46l-7.26,2.86l-2.05,1.55l-4.61,5.42l-1.04,0.41l-2.52,-1.04l-4.18,0.38l-4.24,1.6l-4.26,3.08l-3.27,-1.88l-2.29,-0.5l-2.5,-0.06l-3.01,-1.69l-2.94,-0.4l-0.36,-0.71l0.07,-1.71l-0.55,-0.39l-3.21,0.47l-0.86,-0.2l-0.54,-0.39l-2.44,-4.28l-1.1,-0.6l-1.16,0.45l-0.31,0.94l0.04,2.06l-0.7,1.96l-4.87,4.11l-2.35,-1.1l-1.39,-3.47l-0.66,-0.06l-1.39,1.71l-1.27,0.17l-3.16,-2.04l-1.4,-1.56l-0.17,-1.38l0.72,-1.43l1.48,-1.55l-0.1,-0.63l-0.49,-0.26Z", "name": "H\u00e9rault"}, "FR-37": {"path": "M352.22,269.97l1.75,-1.0l3.68,1.68l0.83,-0.03l1.3,-0.71l5.87,1.39l1.05,0.87l0.18,0.97l-0.4,2.78l0.41,0.75l0.8,0.52l0.91,0.07l0.85,-0.34l1.29,-1.38l0.8,-0.37l1.8,-0.2l1.2,0.39l0.34,1.65l0.49,0.6l0.66,0.12l1.09,-0.66l0.59,-0.01l1.67,2.46l-0.09,0.96l-0.83,1.38l0.08,1.15l1.3,1.12l1.88,2.86l0.85,2.17l0.27,2.64l-0.31,2.69l-1.21,3.49l0.39,1.26l3.11,2.54l0.91,0.24l1.99,-0.29l2.4,0.46l1.91,1.54l5.1,8.02l0.3,1.55l-0.35,1.42l-2.1,0.31l-0.75,2.28l-0.93,0.25l-1.44,2.34l-1.86,1.74l-3.39,-1.22l-1.61,-0.11l-3.27,0.8l-1.71,0.81l-1.23,1.46l-0.2,1.11l0.21,2.5l-1.27,0.79l-0.13,2.05l-1.79,8.58l-1.51,3.53l-1.97,0.76l-1.3,-1.56l-0.5,-0.09l-1.92,1.07l-2.81,-2.03l-7.16,-9.22l-1.26,-3.31l-1.44,-1.93l-6.17,-2.97l-0.71,0.68l0.16,1.39l0.73,1.37l-0.4,0.35l-5.41,0.31l-1.21,0.29l-1.78,1.09l-2.67,-0.46l-2.71,0.24l-1.01,-0.19l-0.92,-0.81l-0.25,-0.98l0.04,-2.48l0.47,-2.57l-0.35,-1.03l-2.01,-0.4l-0.72,-1.12l-0.61,-0.29l-3.43,0.61l-0.29,-0.38l0.35,-1.68l-0.32,-1.32l-0.99,-0.39l-1.98,0.41l-0.5,-1.99l-0.74,-0.2l-1.7,0.66l-1.69,-2.39l0.88,-5.76l1.43,-5.26l4.43,-6.2l-0.2,-2.84l0.98,-2.98l1.96,-3.88l-0.45,-3.6l1.51,-3.81l7.61,1.68l0.98,-0.08l0.62,-0.83l-0.48,-2.31l0.7,-0.71l2.9,0.89l2.04,-1.63l2.39,-0.48l3.32,-1.45l2.28,-0.47l0.53,-0.73l-0.11,-1.0Z", "name": "Indre-et-Loire"}, "FR-36": {"path": "M393.95,318.07l0.9,-0.09l0.61,-2.25l1.58,-0.11l0.8,-0.54l0.42,-1.84l-0.33,-1.69l-1.6,-2.47l5.44,-2.85l2.8,-0.69l3.15,0.76l0.48,-0.3l0.36,-1.49l0.86,-0.71l1.2,-0.21l1.29,0.24l0.46,-0.3l0.59,-1.74l3.84,0.88l3.17,-1.22l6.69,5.17l0.04,1.92l-0.81,1.69l-3.06,2.75l0.08,0.65l1.25,0.67l5.66,1.45l5.07,-1.54l3.01,0.3l1.15,0.49l0.43,0.43l0.26,1.29l-0.65,2.27l0.08,0.95l2.03,1.92l1.02,1.64l0.02,1.03l-0.75,2.0l-0.09,1.49l0.73,1.27l2.01,1.1l0.45,0.6l-0.11,0.46l-1.99,1.83l-1.21,2.47l-0.26,1.4l0.24,1.28l2.04,1.59l0.18,0.69l-0.21,0.55l-2.03,1.48l-0.56,0.91l-0.03,0.97l0.45,0.84l0.67,0.46l3.34,0.78l0.4,0.52l-0.05,2.41l0.47,0.67l1.3,0.58l0.57,0.68l0.21,0.95l-0.34,2.17l-1.41,2.37l-0.02,1.11l1.58,1.86l0.63,2.64l-0.65,1.45l-2.3,2.34l-0.36,1.17l-1.91,0.36l-2.11,-0.72l-3.44,0.0l-2.44,-0.84l-5.56,-0.15l-1.36,0.29l-1.79,1.06l-1.02,-0.37l-1.84,-1.89l-0.73,-0.15l-0.91,0.28l-0.52,0.62l-0.16,2.28l-0.72,0.98l-3.85,-0.24l-2.6,1.5l-1.18,-0.45l-0.12,-1.0l-0.46,-0.52l-0.8,-0.24l-1.55,0.21l-2.31,-0.53l-1.04,0.29l-3.98,3.58l-1.69,0.94l-2.46,-1.47l-0.93,-1.4l-0.84,-0.54l-0.84,-0.04l-0.83,0.37l-1.03,1.35l-3.36,0.5l-1.43,-0.08l-2.37,-1.16l0.93,-3.22l-0.72,-1.01l-1.32,-0.68l-1.11,-1.06l0.45,-2.58l-0.89,-1.68l-1.75,-1.2l-5.0,-0.37l-0.32,-1.41l-0.46,-0.57l-3.41,-1.35l-2.52,-2.46l-0.51,-2.09l-0.01,-1.46l0.61,-2.86l-0.92,-2.42l-1.03,-1.33l1.45,-0.81l1.27,1.52l0.45,0.12l2.62,-1.14l1.61,-3.8l1.81,-8.66l0.09,-1.84l1.3,-0.85l-0.12,-3.47l0.97,-1.2l1.52,-0.73l3.17,-0.77l1.22,0.08l2.76,1.19l1.01,0.08l2.31,-2.0l1.48,-2.38Z", "name": "Indre"}}, "height": 749.2159980728637, "projection": {"type": "mill", "centralMeridian": 0.0}, "width": 900.0});
jQuery.fn.vectorMap('addMap', 'in_mill_en',{"insets": [{"width": 900, "top": 0, "height": 932.9661457393942, "bbox": [{"y": -4125883.782575976, "x": 7589536.343670783}, {"y": -752405.3962423205, "x": 10843813.641475728}], "left": 0}], "paths": {"IN-AN": {"path": "M786.03,923.93l0.01,-2.47l0.71,-1.66l1.1,-0.13l0.59,-0.57l1.24,-0.26l1.04,-0.8l0.96,0.7l0.57,1.41l0.32,2.29l1.27,2.41l0.03,1.46l-1.11,2.56l-0.1,1.29l0.41,0.66l-1.31,0.13l-0.67,1.5l0.01,-1.41l-0.81,-0.89l0.05,-0.68l-0.44,-0.46l-0.29,-1.55l-0.7,-0.41l-0.89,-2.01l-1.06,-0.91l-0.92,-0.2ZM785.02,916.8l-0.54,-1.41l0.47,-1.37l1.32,-0.39l0.58,-0.69l0.93,0.88l-0.04,0.59l-2.72,2.39ZM782.63,894.17l0.29,0.95l-0.0,0.53l-1.15,-1.01l0.86,-0.47ZM780.5,891.72l-0.4,-0.52l-0.31,-1.96l1.06,-1.6l0.69,-0.13l0.06,0.48l-0.79,1.64l0.65,1.74l-0.29,-0.16l-0.66,0.5ZM781.79,892.53l-0.6,0.48l-0.41,0.67l-0.01,-0.52l1.02,-0.63ZM777.4,894.02l0.09,1.05l1.22,0.8l0.7,1.14l-0.03,0.45l-0.93,-0.4l-1.7,0.32l-0.12,-1.23l-1.17,-0.29l0.37,-1.49l1.57,-0.36ZM770.19,887.29l-1.18,-0.38l-0.98,-1.26l-0.11,-1.42l0.4,-0.73l0.16,2.27l0.42,0.72l1.29,0.81ZM768.4,766.2l-0.53,-0.93l0.37,-1.58l0.2,0.17l-0.27,1.01l0.23,1.33ZM751.49,774.12l0.88,-1.81l1.07,1.76l0.79,-0.06l0.11,-0.27l0.28,-2.36l-0.24,-1.3l0.63,-1.54l-0.05,-3.07l0.91,-2.0l0.45,0.12l0.42,-0.38l-0.13,0.98l0.73,0.48l1.83,-0.55l0.47,-0.81l-0.31,-1.49l-0.55,-0.41l0.77,-0.26l0.05,-0.92l-0.62,-0.6l-1.27,-0.21l-0.37,-1.1l0.12,-7.3l0.85,-1.29l0.61,-0.06l0.41,-0.65l-0.14,-0.45l-0.94,-0.64l-0.3,-3.47l0.61,-0.75l0.78,-0.04l0.52,-0.68l0.41,-1.58l0.01,-1.58l0.64,-1.33l-0.17,-0.58l-0.62,-0.37l0.62,-2.2l0.77,-1.37l-0.52,-0.97l0.18,-1.42l0.66,-0.54l-0.55,-3.24l1.34,-1.74l0.16,-1.78l1.42,-1.61l0.17,-1.04l1.5,0.01l0.36,-0.57l0.61,-0.13l0.39,0.69l-0.32,1.01l0.14,3.07l0.36,0.22l-0.97,1.23l-0.37,0.19l-0.32,-0.4l-0.65,-0.09l-0.59,0.8l0.51,1.08l1.25,0.22l1.33,1.3l-0.64,1.07l-0.13,2.9l-0.46,2.09l-0.32,0.53l-0.73,-0.2l-0.43,0.42l0.01,-1.38l-0.39,-0.32l-1.19,0.78l-0.29,1.52l0.64,1.07l-0.98,-0.16l-0.37,0.28l-0.91,2.21l0.36,0.65l0.53,0.22l0.74,-0.35l1.04,1.19l0.14,1.72l-0.24,0.98l0.95,1.63l-0.54,2.9l0.5,1.29l0.04,2.05l-1.01,1.21l0.24,0.65l-0.74,0.57l-0.86,-0.65l-0.46,0.06l-0.03,0.59l-1.15,-0.04l-0.43,0.4l0.65,1.8l1.06,0.71l0.12,0.47l-0.83,0.84l0.68,1.2l-0.59,0.69l0.3,1.14l-1.88,2.04l0.04,0.7l-0.77,0.79l-1.34,0.41l-0.13,0.54l0.54,0.76l-1.11,1.91l-0.1,3.33l0.4,0.4l0.63,-0.35l0.24,-1.5l0.24,-0.04l0.31,0.28l0.02,1.58l-1.11,4.78l-1.06,0.35l-1.07,1.13l-0.28,0.88l0.14,1.02l1.12,0.1l0.35,-0.4l0.06,-0.84l0.63,-0.36l0.09,-0.39l0.16,1.37l-0.54,0.66l-0.51,2.56l-1.5,-1.08l-0.07,-0.68l-0.92,-0.79l-0.1,-0.4l0.72,-0.38l0.02,-0.66l-0.9,-0.46l-0.4,-1.88l-0.33,-0.31l-0.95,-0.05l0.1,-3.11l-1.16,-0.79ZM766.4,766.0l0.11,0.62l0.39,0.73l-0.4,-0.42l-0.1,-0.93ZM766.14,717.57l0.26,-0.08l0.11,0.23l-0.14,-0.04l-0.24,-0.1ZM764.5,769.92l0.71,-0.98l0.67,-0.02l1.15,3.22l-0.42,-0.93l-2.11,-1.29ZM758.46,855.43l1.65,1.52l-0.05,1.49l-0.73,0.79l-1.73,-0.53l-0.46,-1.12l-0.04,-0.78l0.91,-0.49l0.44,-0.89ZM756.86,735.74l-0.0,-0.0l0.0,0.0l-0.0,0.0ZM756.0,743.21l0.29,-3.46l0.53,-0.59l0.3,0.45l-0.2,2.01l-0.92,1.58ZM754.65,789.3l-1.08,-0.41l0.1,-0.42l0.79,-0.21l0.37,-0.63l-0.25,-1.63l0.26,-0.56l1.0,1.26l-0.55,1.24l0.54,0.89l-1.17,0.46ZM746.83,808.06l1.1,-0.64l0.47,-1.64l1.46,-0.96l1.09,-0.24l0.89,1.13l0.95,5.03l-1.65,1.72l-0.03,1.18l0.75,0.47l-1.33,1.68l-0.74,-0.18l-1.27,-0.94l-0.69,-0.03l-0.86,0.53l0.62,-0.89l0.47,-1.76l-0.28,-0.78l-0.88,-0.81l-0.09,-2.85ZM751.89,783.09l0.03,-0.27l0.15,0.08l-0.18,0.2ZM742.26,782.71l0.82,0.26l-0.03,0.97l-0.62,-0.14l-0.17,-1.09Z", "name": "Andaman and Nicobar"}, "IN-BR": {"path": "M484.32,277.67l0.73,-0.96l-0.3,-0.93l-0.88,-0.99l2.18,-0.33l2.83,0.22l2.64,-2.44l0.65,0.88l1.12,0.53l0.73,1.16l1.44,0.13l0.88,1.39l0.78,0.52l8.92,1.6l1.49,1.54l0.75,2.31l-0.09,2.43l-1.0,2.2l0.17,0.95l0.56,0.5l3.94,1.04l1.49,-0.43l1.1,0.93l2.15,0.84l0.79,1.78l1.96,0.85l0.04,0.75l0.36,0.35l0.96,0.04l2.23,-0.69l0.89,0.36l0.08,1.86l1.02,1.19l3.03,0.83l1.86,-0.39l1.41,-1.3l1.63,-0.0l2.51,-1.3l2.45,-0.81l2.64,1.62l0.21,0.97l-0.22,2.39l0.42,1.46l2.16,1.84l1.01,-0.0l0.22,0.89l0.54,0.28l1.3,-0.5l2.57,-2.01l1.7,-0.38l3.07,1.67l1.2,0.08l1.34,0.59l2.79,-0.96l0.36,0.09l0.11,0.57l0.46,0.36l1.14,-0.05l4.28,1.79l1.88,1.41l4.91,2.34l0.65,-0.32l0.42,-0.67l1.5,0.42l1.07,-0.27l0.84,-0.55l0.93,-1.39l2.89,-1.18l1.56,-1.41l0.73,3.4l1.29,2.14l1.24,0.5l2.44,-0.41l0.71,1.14l2.25,0.92l0.7,-0.4l0.94,-1.66l1.64,-0.68l1.77,0.1l2.15,1.18l1.43,0.3l2.71,-1.46l0.9,0.58l0.74,0.03l0.64,-0.42l0.39,-1.06l1.69,0.41l1.28,-0.84l0.78,0.58l1.04,1.56l1.36,0.93l1.28,-0.0l1.4,-1.3l0.98,-1.67l0.32,-2.54l1.11,0.19l1.81,-0.54l-0.25,1.26l2.57,2.21l-0.61,0.46l-0.14,0.71l1.31,0.93l0.18,0.65l-0.99,0.12l-1.4,1.13l-1.21,0.45l-3.14,3.08l-1.92,1.35l-1.46,0.45l-1.05,1.31l-3.05,2.6l-0.73,2.89l-0.66,0.33l-0.26,0.54l0.49,1.44l1.99,1.18l1.38,2.54l1.16,1.11l1.88,0.79l1.0,0.91l0.39,1.89l-0.42,2.19l0.68,1.39l-1.31,-0.23l-0.83,-0.82l-1.07,-0.2l-2.31,1.07l-0.91,0.98l-2.54,1.15l-0.86,1.17l-0.03,0.52l1.06,1.26l0.71,0.03l1.1,2.34l-1.16,1.61l-1.13,-0.8l-2.11,0.07l-2.4,-0.65l-0.85,-1.16l-1.55,-0.73l-2.09,1.48l-1.42,3.04l-1.75,-0.38l-1.94,0.54l-0.7,1.28l-0.53,2.54l-1.11,-0.28l-1.23,0.43l-1.15,1.08l-0.95,1.56l-0.02,4.14l-1.58,2.6l0.22,1.29l-0.25,2.5l-0.67,2.32l-3.65,-0.85l-1.11,1.73l-0.08,0.78l-1.8,-0.56l-1.86,-1.14l-0.7,0.13l-0.57,0.88l-0.58,0.3l-1.44,0.17l-1.24,-0.58l-1.1,0.08l-2.84,2.71l-0.35,2.31l-0.66,0.61l-0.34,1.45l-4.74,-2.95l0.93,-1.5l-0.46,-2.24l-2.49,-0.71l-1.39,0.5l-1.2,-0.75l-0.53,-2.93l-0.94,-1.11l-1.16,-0.27l0.25,-0.54l-0.25,-0.67l-1.15,0.06l-1.82,1.29l-1.16,0.12l-1.33,-1.63l-1.34,-0.72l-2.71,0.04l-1.03,0.64l-0.64,1.13l-0.35,1.75l-1.32,0.86l0.46,1.43l-0.08,1.26l-2.09,-0.13l-1.88,1.89l-1.05,-0.3l-2.8,-0.01l-3.56,0.74l-0.45,0.74l-3.09,1.2l-0.45,0.51l-0.04,0.72l-1.53,1.38l0.11,-1.07l-0.45,-0.39l-3.33,1.32l-1.97,-0.04l-0.37,-0.38l-0.39,-2.05l-0.44,-0.37l-0.85,0.15l-0.38,-1.56l-1.06,-0.48l-3.69,2.24l-0.86,1.72l-2.29,-0.51l-1.24,1.5l-0.27,0.79l-0.51,0.49l-0.76,0.1l-1.39,-1.35l-2.08,-1.34l-1.51,-1.71l0.38,-0.69l-0.02,-1.06l-0.71,-1.19l-0.78,-0.19l-0.66,0.49l-0.73,-0.27l-1.47,0.23l-0.36,0.39l-0.0,1.03l-0.3,-0.98l-0.78,-0.09l-0.53,1.26l-0.76,-0.87l-1.6,-3.93l-0.85,-0.67l-0.69,0.16l-0.72,1.49l-2.03,1.42l-2.05,0.28l-1.37,-0.23l-0.86,0.31l-0.55,0.68l-1.94,0.19l-4.92,-0.81l0.03,-2.88l-0.43,-1.19l0.61,-1.14l-0.28,-1.64l-0.55,-0.62l-2.0,-0.71l-2.6,-2.78l0.35,-1.72l-0.05,-2.24l-1.27,-2.58l0.34,-3.02l0.62,-1.14l1.7,-1.27l11.06,-6.27l0.86,-0.66l0.44,-0.81l2.19,-0.92l3.62,-3.02l1.7,-2.16l2.53,-1.98l0.88,-0.25l0.74,0.43l-0.04,1.29l0.37,0.92l0.82,0.61l1.2,0.16l1.16,-0.32l0.69,-0.62l0.03,-1.0l-0.41,-1.1l0.17,-0.52l1.25,-0.49l1.93,1.49l1.54,0.6l1.32,0.01l2.29,-1.37l0.73,-1.81l-0.34,-0.78l-2.28,-2.05l-2.42,-0.33l-1.18,-0.71l-0.5,-0.92l-0.82,-0.67l-3.49,0.28l-0.93,-0.9l-0.59,-1.69l-0.97,-0.39l-0.91,-1.45l-2.52,-1.19l-1.28,-2.57l-1.04,-0.81l0.41,-0.8l2.49,-0.34l0.91,-0.6l1.31,0.19l0.82,-0.39l0.25,-0.57l-0.78,-1.52l0.71,-1.33l0.02,-0.66l-0.45,-0.55l-2.83,-0.73l-2.18,-1.58l-1.33,0.6l-1.31,-0.25l0.0,-2.11l0.43,0.93l0.6,0.15l0.88,-1.02l1.95,-0.62l1.34,-2.77l8.58,0.29l0.57,-0.33l0.16,-0.55l-0.47,-0.95l-2.41,-2.3l-0.79,-0.41l-1.03,-0.04l0.16,-2.85l-0.51,-1.31l-1.39,-0.46l-1.37,0.64l-2.26,-1.46l-1.22,-2.32l-0.19,-2.14l-0.79,-0.77l-0.57,-1.24l-1.11,-1.03l0.06,-2.11l-0.66,-1.12l-1.11,-0.96l0.19,-1.5l-0.52,-0.38l-0.62,0.03Z", "name": "Bihar"}, "IN-MZ": {"path": "M743.96,392.77l0.71,0.19l0.37,-0.45l-0.14,-2.85l0.55,-1.85l-0.42,-1.43l0.33,-2.14l-0.11,-2.89l-0.65,-1.18l2.99,-0.03l-0.38,1.02l0.75,1.88l1.11,0.72l1.07,-0.2l3.08,-2.92l1.24,-0.79l-0.05,-1.35l2.53,-2.77l1.3,-3.49l2.32,3.71l1.02,0.04l1.89,-0.78l1.44,0.32l0.94,-0.24l0.11,0.82l0.68,0.79l-0.94,1.59l0.08,1.22l-0.6,3.47l-0.55,0.59l0.12,0.67l2.91,1.14l1.2,0.91l1.31,-0.55l0.72,0.69l0.62,0.01l1.32,-0.83l0.11,1.34l0.61,0.24l0.97,-0.45l0.25,1.53l1.46,2.27l0.56,5.39l1.62,1.71l0.15,1.2l-0.99,6.3l0.22,3.39l-0.91,1.69l-0.09,5.36l-1.22,2.4l-1.63,1.33l-0.58,0.03l-1.4,-1.49l-0.78,-0.25l-0.99,0.29l-0.58,0.74l0.04,2.05l0.88,1.94l0.12,0.97l-1.74,2.48l-1.23,1.16l-0.27,2.69l1.21,3.12l-0.33,2.8l0.6,1.65l1.1,1.18l0.34,1.19l0.24,3.97l-1.47,0.77l-0.09,0.62l0.38,0.78l-2.29,-0.79l-1.1,0.42l-0.08,2.78l-1.0,0.47l-0.71,1.34l0.31,2.1l-0.63,-0.79l-0.82,-0.32l-0.71,0.4l-0.47,1.47l-0.37,-1.67l-0.66,-0.91l-2.03,-1.9l-1.96,-1.42l-0.88,-0.27l-0.8,0.54l0.01,1.48l-0.37,0.18l-0.18,0.63l-0.08,1.63l-0.92,0.25l-0.78,0.79l-1.04,-4.15l0.88,-0.24l0.27,-1.25l-1.83,-11.1l-0.51,-1.55l-0.17,-4.45l-0.52,-1.11l-1.15,-1.14l-0.55,-3.59l-0.61,-0.67l-0.91,-0.36l-0.68,-1.66l0.02,-2.29l-0.78,-4.56l0.13,-1.61l0.79,-1.88l-0.27,-2.46l-0.7,-0.81l-0.08,-0.97l-0.71,-0.88l-1.55,-6.66l0.55,-2.59l-0.21,-1.75l0.23,-1.48l0.46,-0.67Z", "name": "Mizoram"}, "IN-DD": {"path": "M144.48,504.35l0.06,-0.81l0.49,-1.24l0.48,0.6l0.06,1.15l-1.09,0.3Z", "name": "Daman and Diu"}, "IN-DN": {"path": "M146.62,508.98l1.49,0.02l0.64,-1.32l0.96,0.1l1.81,-1.3l0.0,1.2l1.42,0.47l-2.51,1.64l-0.2,0.71l0.26,1.36l0.63,0.79l1.15,0.12l0.71,-0.32l0.3,-1.06l1.1,0.26l-0.01,2.67l-0.38,1.21l-1.24,-0.9l-1.12,0.47l-0.96,-0.54l-0.98,0.61l-1.35,-2.56l-0.26,-1.86l-1.39,-1.3l-0.07,-0.48Z", "name": "Dadra and Nagar Haveli"}, "IN-DL": {"path": "M269.18,237.92l-1.09,-1.45l1.02,-1.35l1.39,-0.53l0.24,-1.0l0.78,-0.87l-0.35,-3.41l0.21,-0.9l1.59,-0.79l1.2,-0.05l0.91,-0.88l2.3,0.67l1.4,-0.39l0.27,0.61l-0.2,0.97l0.58,1.16l2.51,2.23l0.25,0.66l0.62,2.22l-0.95,1.04l-0.26,0.81l0.7,1.44l-2.32,0.75l-0.66,0.79l0.48,1.01l-0.98,0.25l-2.63,-1.33l-0.89,-1.75l-2.19,-1.1l-0.66,0.01l-0.48,0.79l-2.76,0.39Z", "name": "Delhi"}, "IN-NL": {"path": "M779.92,344.86l0.24,-2.48l-0.5,-1.53l-1.51,-1.38l-1.72,-2.41l5.61,-4.5l1.79,-2.48l3.84,-3.32l0.18,-0.6l-0.86,-1.43l1.99,-1.01l0.92,0.2l0.22,1.55l-1.05,1.7l0.18,0.61l0.39,0.2l3.95,-0.86l1.52,-1.07l1.37,-2.13l-0.58,-1.75l0.0,-0.99l1.01,-1.64l0.11,-3.4l2.88,-3.87l2.12,-1.95l0.79,-3.49l2.04,-2.58l0.89,2.11l0.8,0.16l0.76,-0.33l1.67,-1.57l0.74,-1.09l0.25,-1.63l1.49,-1.74l1.12,-0.19l0.86,-0.7l1.24,0.02l2.52,-1.07l3.03,-1.88l1.13,-0.97l1.92,-2.9l1.52,-1.46l1.31,0.78l1.78,-0.04l4.5,-2.81l1.45,1.13l0.13,1.9l-0.88,1.28l-0.18,0.95l0.32,0.93l0.81,0.73l-0.26,2.06l0.63,1.74l-1.12,0.02l-0.96,1.1l-1.61,0.79l-0.48,2.09l-2.17,2.74l0.78,2.22l-0.69,2.6l0.11,2.79l0.48,1.15l0.9,0.47l-0.42,0.83l0.3,2.22l0.56,0.6l1.14,0.39l0.23,0.64l-2.48,2.95l-2.14,1.25l-0.24,1.45l0.63,3.47l-0.08,1.03l-1.42,0.62l-3.3,4.31l-0.08,0.67l-0.92,0.26l-1.66,2.11l-2.18,0.49l-1.29,0.92l-0.79,-0.14l-2.19,-1.69l1.06,-3.49l0.1,-2.14l-0.72,-0.37l-2.49,2.12l-1.72,0.98l-1.48,1.73l-1.75,0.89l-3.83,0.5l-1.34,-0.81l-1.99,0.08l-1.96,-1.16l-6.95,0.35l-1.1,0.4l-0.54,1.41l0.25,0.38l1.19,0.4l0.13,0.77l-3.93,3.81l-0.97,2.24l-1.16,1.64l-1.08,-1.27l-1.34,-0.42l-1.8,-1.16Z", "name": "Nagaland"}, "IN-WB": {"path": "M545.45,405.85l-0.5,-0.98l0.56,-0.42l5.08,-0.89l0.31,-0.72l-0.47,-1.55l0.74,-0.53l1.67,0.87l0.84,0.07l-0.32,2.17l0.35,0.57l1.81,0.66l1.35,0.95l1.69,-0.33l1.95,-1.65l0.58,-2.23l1.76,-1.44l7.16,-2.58l3.6,-0.58l1.37,-0.52l0.56,-0.8l0.21,-1.04l-0.38,-1.28l0.13,-0.59l1.64,-2.23l2.89,1.56l1.05,0.13l2.02,1.46l1.68,0.42l1.24,-0.23l0.42,-0.94l-0.98,-1.3l1.48,0.29l0.47,0.6l0.77,0.13l0.6,-0.83l0.08,-1.2l0.67,-0.26l0.38,-0.66l-0.04,-1.15l-1.61,-2.24l1.91,-0.48l0.42,1.44l0.56,0.34l1.97,-0.7l1.91,0.1l1.22,-1.17l-0.03,-2.65l0.4,-0.06l1.12,0.83l0.64,-0.01l0.71,-0.96l0.29,-1.21l1.52,0.03l0.69,-0.57l0.01,-0.7l-0.45,-0.74l-0.74,-0.19l-0.01,-0.67l2.93,-1.81l1.74,-3.39l0.04,-1.52l0.75,-1.33l-0.41,-1.07l0.04,-1.25l-0.42,-0.42l1.37,0.59l1.07,-0.12l0.94,-0.6l0.46,-0.93l-0.2,-0.47l-0.58,-0.24l0.58,-0.51l0.08,-0.51l-0.69,-2.04l-0.63,-1.08l-1.12,-0.31l-0.14,-0.29l0.68,0.28l0.62,-0.34l0.26,-2.07l0.61,-1.34l-0.14,-1.71l-1.05,-3.44l-2.07,-1.79l-0.21,-1.92l0.46,-1.62l0.97,-1.02l0.74,-1.55l-0.87,-2.23l-0.57,-0.72l-0.74,-0.08l-0.57,-0.84l0.56,-0.79l2.33,-1.03l0.96,-1.0l2.16,-0.97l1.4,1.03l1.9,0.33l0.47,-0.45l-0.11,-1.05l-0.63,-0.84l0.41,-2.35l-0.5,-2.1l-1.25,-1.16l-1.89,-0.81l-1.11,-1.14l-1.2,-2.32l-1.92,-1.09l-0.39,-1.0l0.85,-0.61l0.64,-2.73l2.92,-2.46l1.08,-1.34l1.42,-0.41l1.96,-1.39l2.66,-2.74l1.56,-0.7l1.28,-1.06l1.18,-0.21l0.32,-0.73l-0.46,-1.15l-1.07,-0.55l0.79,-0.66l-0.12,-0.71l-1.34,-1.38l-1.14,-0.68l0.23,-1.51l-0.57,-0.35l-2.11,0.6l-0.78,-0.16l2.21,-5.06l0.16,-2.07l-0.51,-3.36l-1.72,-3.31l-1.28,-1.98l-1.44,-0.95l-1.12,-1.75l0.87,-4.21l1.51,1.11l0.39,1.54l0.74,0.73l4.09,0.21l3.92,1.74l2.29,-0.56l2.85,-2.48l2.71,0.28l1.59,-0.16l0.79,0.57l1.28,0.26l2.69,1.54l0.46,1.37l0.19,3.46l0.29,0.34l1.63,-1.15l0.76,1.97l0.84,0.27l1.26,-0.33l0.64,0.28l1.07,0.92l0.7,1.54l0.63,0.6l3.73,0.29l1.04,-0.28l0.94,-0.75l1.87,-0.3l3.01,1.82l2.09,-0.18l2.3,0.6l0.6,0.46l-0.29,1.59l0.63,0.37l2.22,-0.41l1.68,0.7l2.49,0.24l0.75,-0.98l0.75,2.6l0.28,3.28l-0.9,2.05l-0.46,2.89l-0.88,0.81l0.31,0.9l-1.25,0.59l-0.72,1.5l-0.86,0.56l0.04,1.22l-1.55,0.49l-0.18,-0.8l-0.86,-0.37l-1.27,0.64l-0.02,1.22l-0.94,0.39l-0.42,1.08l0.57,0.68l-0.48,0.58l0.23,0.75l1.09,0.15l-1.54,1.52l-0.38,1.81l-1.38,-1.31l-2.29,0.18l-0.73,-0.75l-1.31,0.6l-0.84,-0.27l-1.33,-1.22l-1.01,-0.45l-0.8,-1.36l-2.47,-1.14l-0.46,-0.78l-0.28,-2.06l-1.01,-1.97l-0.01,-0.39l0.84,-0.04l0.09,-1.08l-1.36,-0.64l-0.24,-0.96l-1.33,-0.55l-1.96,-1.58l-0.57,-0.06l-0.99,0.67l-0.74,1.31l-0.01,0.73l0.75,0.92l1.61,0.68l0.49,1.17l0.62,0.23l0.34,0.57l0.65,0.14l-0.29,0.34l-1.18,0.29l-0.68,-0.22l-1.29,-1.25l-1.04,-0.25l-0.91,0.46l-0.72,1.18l-0.91,-1.51l-1.33,-0.61l-1.97,0.6l0.81,-0.62l0.24,-1.27l-1.29,-0.96l-0.66,-1.82l-1.2,-0.43l-0.74,-1.07l-1.95,-0.46l-2.01,-1.77l-1.53,-0.53l-0.33,-2.09l-0.46,-0.49l-0.9,0.45l-0.68,1.2l-1.21,3.24l0.06,0.87l0.87,0.76l0.58,-0.35l0.14,-0.78l2.98,0.87l0.96,2.56l-1.84,-0.15l-3.0,2.73l-0.3,2.13l-3.15,1.09l-1.89,1.47l-0.78,1.93l0.51,1.07l-0.12,0.57l-0.79,0.64l-1.63,3.72l0.4,2.48l1.35,2.12l1.02,0.06l2.3,-0.88l0.79,0.4l1.81,2.04l2.96,2.25l0.25,2.15l1.56,0.98l1.71,2.04l2.13,0.28l2.25,1.05l0.73,-0.2l0.76,-0.76l1.66,-0.37l1.12,1.2l-0.48,1.96l1.4,2.3l1.33,0.44l0.8,0.66l2.14,0.08l-0.15,0.49l-1.45,1.22l-0.04,1.1l-0.32,0.07l-0.24,0.62l-2.61,-0.88l-0.47,0.18l-0.58,0.98l-1.64,-0.16l-2.86,-0.85l-1.23,-0.01l-1.12,0.71l-2.46,-0.78l-1.5,0.37l-0.35,0.76l-0.17,3.89l-0.99,1.68l-0.5,1.66l-1.59,2.27l-1.78,-0.3l-0.37,-1.1l-1.21,-1.04l-1.33,0.16l-1.59,0.83l-0.21,0.5l0.78,2.11l-0.83,1.08l-0.67,0.34l-0.28,1.04l-0.9,0.53l-0.14,1.33l-0.83,2.23l0.28,0.45l0.9,0.3l0.73,1.05l0.07,1.91l1.05,1.48l0.84,0.18l8.01,4.07l2.42,1.81l5.01,0.7l1.0,-1.38l1.17,0.59l0.6,0.78l0.3,2.04l-0.42,0.68l-1.42,0.76l-0.3,0.7l-0.09,2.48l0.81,1.21l0.65,0.38l-0.58,0.9l0.35,2.32l-1.67,1.6l-1.68,0.07l-0.85,0.66l-0.02,1.23l-0.76,1.49l0.25,1.1l-0.6,3.39l0.72,0.51l-0.1,0.68l0.41,0.56l1.25,0.21l1.1,1.66l1.75,1.33l0.39,0.76l0.88,0.04l0.61,-0.71l-1.51,4.2l-1.03,1.81l-0.01,0.88l0.44,0.92l2.58,1.08l1.56,-0.51l3.8,1.0l-2.85,2.89l-0.46,0.98l-0.39,3.23l1.78,3.39l1.51,0.97l-0.23,1.76l-0.92,1.57l1.48,4.98l-0.13,0.51l-0.56,0.36l0.08,0.71l1.11,0.51l0.92,3.0l-0.39,1.34l0.91,2.85l-0.27,0.58l1.66,2.45l0.42,1.62l-1.03,0.69l-0.22,1.48l0.63,1.91l0.14,2.67l-1.18,0.15l-0.44,0.52l-1.34,-0.77l-0.36,-1.32l-0.38,-0.28l-0.81,0.22l-0.3,0.82l0.64,1.51l2.25,1.42l0.54,0.87l0.86,3.85l1.27,1.9l-0.01,1.43l-0.48,0.14l-0.33,-0.52l-0.69,-0.07l-0.64,0.78l-1.89,-1.22l-1.24,-0.27l-0.7,-3.49l-0.61,-0.28l-0.4,0.34l-0.62,2.07l0.63,2.03l-0.94,0.29l0.5,-1.05l-0.26,-0.97l-0.39,-0.27l-1.42,1.86l0.48,2.23l-0.61,0.28l-1.15,-0.41l0.33,-1.07l-1.1,-2.67l0.57,-3.6l-0.26,-0.99l0.59,-1.77l0.2,-2.12l1.06,-1.02l0.23,-0.74l-0.27,-0.9l-1.35,-1.0l1.61,-2.01l-1.14,-0.17l-1.44,1.2l-0.31,1.39l1.07,0.87l-0.15,0.5l-0.98,2.08l-1.2,-0.05l0.8,-2.06l-0.43,-2.86l1.34,-2.58l-0.1,-0.63l-0.99,-0.36l-1.64,3.33l0.18,2.1l-0.71,1.31l-0.13,2.49l-0.97,2.58l-0.07,2.69l0.46,0.46l1.46,-0.37l0.16,0.55l-0.31,1.14l-0.55,-0.13l-0.4,0.44l0.23,2.14l-0.66,0.46l-0.07,1.76l-0.47,-0.41l-0.69,0.01l-0.11,1.32l-0.51,-0.09l0.07,-1.06l0.6,-0.74l0.46,-2.03l-0.73,-2.54l0.85,-1.8l-0.11,-1.1l-0.98,-1.56l0.53,-1.9l-0.75,-0.79l-0.46,-0.03l-0.08,0.85l-0.75,1.52l0.64,2.32l-0.63,0.42l-0.66,1.98l0.48,3.04l-0.28,0.49l-1.35,0.68l-0.22,-1.85l0.28,-0.81l-0.46,-0.52l-1.07,0.39l-0.38,-0.84l-0.84,0.2l-0.44,-2.18l-0.57,-0.66l-0.63,-0.16l-0.42,0.44l0.08,0.75l1.01,3.85l-0.42,1.45l0.66,1.05l-0.95,0.35l-0.35,-1.27l-0.51,-0.52l-0.6,0.03l-0.58,-1.49l0.87,-2.47l-0.23,-0.94l0.2,-0.63l-1.67,-3.15l-0.24,-2.24l0.24,-0.83l2.02,-2.79l-0.71,-3.23l-3.61,-1.75l-0.09,-0.54l-0.61,-0.27l-0.84,0.43l-0.77,-0.39l-1.03,-1.26l-0.97,-4.14l-0.49,-0.54l-0.92,-0.13l-0.41,0.6l0.54,0.86l0.74,3.83l0.6,1.16l1.56,1.46l3.72,0.8l0.73,0.61l0.32,1.05l-0.22,0.69l-1.51,1.64l-2.08,0.56l0.04,1.33l-2.0,4.07l-2.48,1.79l-1.01,1.44l-4.96,3.02l-2.47,0.14l-4.13,1.11l-1.25,-2.09l0.04,-2.21l-0.26,-0.62l-0.76,-0.57l-4.7,-1.12l-0.64,-1.11l-0.35,-2.0l-0.83,-1.17l-2.44,-0.78l-2.21,2.36l-0.3,-0.07l-0.94,-1.35l0.28,-2.14l-0.68,-1.6l-1.45,-1.03l-1.64,-0.67l-1.74,-0.15l-2.08,-1.48l-1.77,-0.61l-0.33,-0.57l0.32,-0.22l0.61,-0.36l1.19,0.03l0.28,-1.32l2.26,-0.3l0.3,-0.79l-1.52,-1.54l-0.47,-2.23l-2.14,-1.64l-0.14,-0.58l0.98,0.03l0.45,-0.53l-0.69,-1.9l-1.33,-1.0l-2.63,-0.5l-0.79,-2.5l-1.98,-1.62l-0.94,-0.49l-1.31,-0.05l-1.46,-1.14l0.13,-2.51l0.41,-1.21l-0.13,-0.83l0.77,-0.68l1.92,-0.56l0.18,-0.83l-1.95,-0.64l-4.23,-0.15l-1.7,-0.37l-1.31,-0.0l-1.19,0.45l-5.28,-5.12l-1.99,-0.54l-1.51,0.49l-0.33,-1.19l-1.25,-1.57l0.38,-1.25l1.12,-1.59l0.49,-2.12l-0.57,-0.72l-1.16,-0.03ZM621.37,462.65l0.62,0.85l-0.48,1.24l-0.1,-0.46l-0.03,-1.63ZM639.28,467.29l-1.47,0.01l-0.03,-1.73l1.33,0.75l0.17,0.97ZM630.2,458.45l-0.18,-0.62l0.39,-0.95l1.22,-1.6l0.22,0.26l-0.7,3.21l-0.96,-0.3ZM615.62,464.13l-1.95,-0.31l-0.34,-0.61l1.43,-4.38l1.08,-1.59l0.53,2.85l-0.1,1.69l-0.79,0.55l-0.14,0.48l0.28,1.31ZM614.23,456.85l0.15,-1.15l0.64,-1.08l0.26,0.49l-0.18,0.81l-0.87,0.92Z", "name": "West Bengal"}, "IN-HR": {"path": "M197.67,196.54l-1.92,0.66l-0.68,-0.19l-0.12,-0.33l0.58,-1.74l1.54,-0.71l0.56,-0.71l0.04,-0.87l-1.03,-1.19l0.03,-0.46l3.74,1.02l2.05,-1.87l3.05,-0.56l0.68,0.68l2.25,0.52l0.65,1.26l1.95,1.36l2.44,-0.58l0.57,-1.17l-0.41,1.39l0.24,1.61l1.61,1.38l0.49,-0.02l0.38,-1.05l0.49,-0.25l0.24,0.89l0.89,1.26l-0.77,0.21l-0.05,1.32l-0.89,0.47l-0.18,0.49l2.26,4.51l0.68,0.02l1.72,-0.75l-0.08,-1.9l0.4,-0.66l1.05,-0.42l0.07,-0.72l1.15,-1.12l1.84,-2.76l4.54,1.48l1.87,-0.35l1.18,0.2l0.81,-0.43l0.25,-1.03l1.84,-0.6l1.45,0.72l0.68,1.43l0.66,0.57l2.19,0.36l1.5,-0.6l1.29,-0.08l1.38,-1.54l2.31,-0.92l2.19,-1.64l-0.08,-0.61l-0.99,-0.75l-0.42,-1.25l0.77,-2.4l0.6,-0.91l-0.16,-0.9l0.93,-0.28l0.17,-0.47l-1.41,-0.86l0.04,-0.31l1.21,0.8l1.17,0.28l1.1,-0.22l0.28,-0.67l0.98,0.56l0.49,-0.29l0.43,-0.88l0.03,-1.16l0.63,1.85l0.67,0.93l1.52,0.62l1.31,-0.04l3.08,-2.2l0.45,-2.11l-1.11,-0.83l-0.74,-1.06l1.96,-0.97l2.75,-2.1l0.15,-0.69l-0.67,-0.42l0.18,-0.95l0.62,-0.28l0.94,0.26l1.29,-0.13l1.11,2.15l0.94,0.05l0.48,-0.5l0.29,-1.07l-0.34,-3.0l0.44,-1.02l-0.52,-1.05l0.23,-1.9l-0.5,-1.28l-0.77,-0.38l-0.31,-1.22l-0.78,-0.13l0.06,-1.77l-0.44,-1.16l0.68,-1.4l0.01,-0.71l-0.29,-0.49l-0.85,-0.37l-0.78,-1.44l0.75,-0.5l0.96,1.15l1.8,0.0l0.72,0.82l0.49,1.43l1.37,0.91l0.34,0.94l3.46,1.85l0.71,0.88l0.16,2.59l-0.5,1.22l0.09,0.78l2.08,1.94l0.25,0.78l0.44,0.23l0.93,-0.4l1.76,0.9l1.62,0.31l0.93,0.77l1.26,-0.33l0.59,0.71l2.07,-0.23l2.03,1.34l-0.49,3.0l-4.77,4.22l-0.4,1.32l-2.42,1.67l-0.2,0.66l-0.96,0.19l-0.26,0.72l-1.47,1.42l-0.66,1.71l-0.89,4.15l-0.47,0.9l-0.85,0.28l0.03,1.48l-0.81,0.56l-0.03,0.91l-0.63,0.62l-0.17,1.53l0.38,1.01l-0.82,0.38l-0.38,0.67l0.4,1.11l-0.1,1.06l0.71,0.51l0.71,-0.06l-1.49,1.77l0.33,0.56l2.21,0.16l-0.49,1.16l0.06,1.19l0.44,0.83l-0.56,1.13l0.32,4.99l-0.22,0.57l1.83,3.91l-0.49,0.52l-0.07,0.59l1.38,1.81l-0.48,0.8l-1.19,0.43l-2.62,-0.68l-1.12,0.96l-1.76,0.23l-1.23,0.79l-0.42,1.42l0.38,3.16l-0.71,0.77l-0.21,0.93l-1.26,0.39l-1.28,1.97l1.21,2.02l0.49,0.29l3.29,-0.53l0.51,-0.79l1.96,0.95l0.92,1.77l2.96,1.49l1.17,-0.15l0.67,-0.44l0.11,-0.6l-0.47,-0.68l0.36,-0.34l2.21,-0.63l1.36,1.03l-0.01,0.77l0.51,0.3l0.72,-0.35l0.65,1.19l0.96,-0.1l-0.04,0.82l0.65,0.59l-0.7,2.07l0.67,0.83l0.27,1.32l1.0,0.34l-0.17,0.55l-0.64,0.25l-0.17,0.47l0.74,0.72l-0.77,0.85l0.01,1.32l-0.24,-0.15l-0.61,0.36l0.19,1.33l-0.23,0.73l0.1,0.41l1.03,0.81l0.7,1.8l-0.54,0.3l-1.08,1.73l-1.24,-0.14l-1.14,1.02l-2.4,0.84l-0.96,0.82l-1.05,0.03l-0.37,0.47l-0.86,-0.73l-0.59,0.56l-0.3,-0.44l-0.52,-0.11l-0.85,0.76l-1.92,-0.54l-0.95,0.12l-0.53,1.25l0.42,0.62l0.78,0.36l-1.77,0.36l-1.03,1.64l-1.71,0.27l-0.23,-0.17l0.72,-0.3l0.15,-0.38l-0.57,-0.95l0.43,-2.47l0.88,-1.72l-0.19,-3.96l-0.52,-2.28l0.64,-2.88l-0.31,-0.93l-2.2,-2.22l-0.95,-0.48l-1.46,0.62l-1.38,1.94l-3.45,2.5l-0.25,0.95l0.49,1.35l-1.85,0.43l-0.89,0.93l-0.83,-2.12l-1.96,-0.59l0.71,-0.57l-0.55,-0.72l0.54,-0.08l0.22,-0.4l-0.98,-1.7l-0.96,-0.35l-1.98,0.38l-0.71,-1.02l-1.24,-0.44l-0.56,0.44l-0.0,0.81l1.23,1.18l-0.83,0.3l-0.23,0.52l0.19,0.51l1.05,0.65l-0.19,0.59l-0.5,0.06l-1.74,-1.05l-0.94,0.38l-1.54,-0.12l-0.66,0.79l-0.18,1.38l0.66,2.16l0.02,1.52l0.69,0.96l0.29,1.5l-0.62,0.44l-1.77,-1.38l-3.88,0.2l-0.48,-1.45l-1.14,-0.82l-0.09,-0.38l1.1,-0.25l0.59,-0.56l0.14,-0.71l-0.49,-0.68l0.63,-1.33l1.08,-1.16l0.14,-0.82l-0.76,-0.63l-0.7,0.22l-0.51,0.59l-0.74,-0.62l1.69,-0.98l0.71,-0.94l0.81,0.77l0.71,0.05l0.34,-1.01l-1.72,-2.96l-2.17,-2.79l-2.33,-2.11l-2.17,-0.91l-1.14,0.06l-0.05,-1.25l-2.28,-1.69l-3.18,-4.01l-3.25,-9.33l1.03,-1.13l-0.06,-1.08l-0.44,-0.58l-1.68,-0.7l-1.73,-2.58l0.02,-0.98l-0.52,-1.06l0.81,-0.33l0.22,-0.76l-0.73,-2.06l-0.71,-0.18l-1.11,0.73l0.1,-1.56l-0.26,-0.42l-0.65,-0.14l-1.3,0.6l-0.77,0.84l-0.86,0.08l-1.19,-0.66l-1.07,0.71l-1.9,0.54l-1.12,-1.64l-0.56,-0.19l-1.59,0.27l-1.1,-2.41l-0.82,-0.74l-2.52,-0.92l-0.97,0.26l-1.36,1.06l-1.48,-0.23l-1.78,0.2l-0.51,0.37l-0.23,0.76l-0.28,-0.03l-2.1,-3.33l0.28,-0.41l1.47,-0.13l0.47,-0.84l0.07,-1.62l-1.13,-1.94l0.92,-5.58l-0.73,-0.83l-1.02,0.44ZM259.41,180.33l-0.42,0.53l-0.13,0.09l0.07,-0.25l0.48,-0.37Z", "name": "Haryana"}, "IN-HP": {"path": "M229.45,117.96l1.78,-1.92l0.71,-1.52l-0.42,-0.79l-1.07,0.13l-0.02,-1.36l3.39,-1.15l1.65,-1.71l4.23,-3.05l-0.07,-0.68l-1.73,-2.9l0.38,-1.22l1.73,-1.98l0.07,-1.31l-0.71,-1.74l0.32,-2.08l-1.4,-2.4l-1.75,-1.91l-0.13,-0.95l1.18,-0.43l1.48,0.51l0.94,0.92l0.79,-0.09l4.49,-3.83l4.22,-1.75l0.9,-0.95l0.55,-1.64l2.1,-1.4l1.27,-0.58l3.51,-0.66l0.95,-0.52l2.35,1.47l3.95,-0.18l5.58,5.42l4.66,2.96l1.53,0.84l6.68,2.06l0.97,-0.1l0.54,-0.69l2.55,-0.39l2.39,-0.78l1.97,-1.57l2.83,-1.51l4.08,4.65l1.07,2.36l1.06,1.32l0.31,2.34l2.3,3.1l1.48,0.01l1.99,-1.8l2.17,-0.84l2.03,-0.16l0.85,-0.83l1.36,-0.66l0.22,-1.01l0.92,0.01l0.38,1.9l-0.26,1.58l-2.3,2.04l-0.82,2.5l0.0,1.13l0.76,0.84l0.89,0.12l1.87,-1.75l1.92,3.19l-0.51,1.13l0.86,3.58l-0.14,1.8l1.83,1.02l4.14,5.78l2.59,1.76l0.19,0.99l-0.67,1.45l-0.59,2.7l-0.94,1.85l0.75,1.03l-0.01,1.01l0.96,1.57l1.22,0.41l1.58,1.69l-3.62,3.17l0.06,1.16l1.86,1.29l-0.72,3.51l0.1,0.8l0.49,0.69l1.22,0.56l2.79,-0.26l1.58,1.74l1.69,2.52l0.03,0.64l-1.52,0.33l-1.82,-0.11l-0.93,-0.71l-1.48,-2.18l-4.35,-0.29l-1.49,-0.5l-3.2,0.35l-2.0,-1.63l-0.97,-0.01l-1.04,-0.74l-1.82,-0.16l-1.0,0.16l-1.58,1.0l-1.51,0.46l-4.45,2.55l-3.03,-0.02l-4.59,4.61l0.1,1.68l-1.55,0.35l-0.07,0.87l1.2,1.32l0.08,0.92l-0.09,0.37l-0.57,-0.32l-0.55,0.2l-1.49,3.28l0.05,1.22l0.89,0.92l0.27,1.62l0.79,1.6l-0.76,0.85l-0.03,0.51l0.97,1.5l1.17,0.3l-0.02,0.5l-4.31,2.33l-2.78,0.6l-0.54,1.0l-1.24,-0.9l-1.78,0.25l0.35,-0.76l-0.47,-0.5l-2.06,0.86l-0.62,-0.66l-1.76,-0.37l-1.86,-0.95l-0.96,0.35l-0.19,-0.67l-1.61,-1.27l-0.4,-0.67l0.53,-1.47l0.06,-1.86l-0.36,-1.18l-0.9,-1.08l-3.39,-1.8l-0.27,-0.87l-1.32,-0.83l-0.45,-1.35l-0.95,-1.09l-1.97,-0.09l-1.17,-1.21l-1.44,0.74l-4.03,-3.4l-0.52,-1.32l0.49,-1.87l-0.67,-0.63l0.08,-1.55l0.76,-1.11l-0.03,-0.41l-0.37,-0.37l-0.92,-0.05l-0.01,-0.8l-0.54,-0.83l-0.54,-0.15l-0.51,0.57l-0.55,-0.83l-1.05,0.02l-0.81,-0.71l-0.55,0.31l-2.49,-4.37l-1.8,0.74l-0.04,1.86l-0.67,0.19l-0.54,1.21l-0.85,-0.29l-1.23,0.33l-0.44,-0.26l-0.89,-1.09l-2.37,-7.15l-4.5,-8.19l0.07,-0.38l1.15,-0.14l0.15,-0.7l-2.74,-4.52l-5.6,-2.94l-3.59,-0.7Z", "name": "Himachal Pradesh"}, "IN-AS": {"path": "M663.07,316.48l0.01,-0.33l2.23,-0.81l0.27,-0.58l-0.2,-0.73l0.78,-0.56l0.58,-1.33l1.61,-0.9l-0.43,-0.98l0.82,-0.66l0.51,-3.03l0.94,-2.19l-0.3,-3.5l-0.71,-2.22l1.37,0.07l6.69,-1.16l1.04,-0.91l0.73,-1.87l0.84,-0.52l2.26,-0.19l1.89,-1.28l0.86,0.13l2.83,1.94l3.6,1.77l4.05,0.43l8.94,-0.5l1.75,-0.74l0.81,-0.01l3.25,0.08l2.45,0.93l1.24,-0.17l1.11,-0.58l1.4,-2.16l0.7,-0.32l1.42,0.14l0.88,1.73l0.8,0.57l2.17,-0.43l1.87,0.42l1.57,-0.18l3.68,-1.8l0.91,1.59l0.76,0.22l0.63,-0.55l-0.09,-1.07l0.42,-0.45l-0.02,-0.62l1.9,1.21l2.1,-0.24l1.36,-1.2l0.28,-0.99l3.65,0.29l3.76,-0.78l8.62,-2.47l2.73,-1.83l3.43,0.48l3.48,1.5l0.3,0.71l0.71,0.55l1.88,0.49l10.99,-1.18l1.14,0.32l1.27,0.98l0.87,0.01l1.48,-0.64l3.25,-0.5l1.99,-0.77l4.25,-3.13l0.32,-0.77l-0.24,-1.72l0.51,-0.89l4.15,-4.24l8.09,-6.65l0.47,-1.11l-1.32,-1.97l0.7,-0.82l1.01,1.03l2.02,0.77l3.03,-0.68l1.08,0.66l1.54,-0.32l4.22,-2.16l4.21,-1.1l4.59,-2.26l9.18,-3.21l1.71,-0.97l1.72,0.75l1.48,0.08l4.22,-1.06l4.0,-2.54l1.27,-0.38l7.37,-0.1l-2.08,3.62l-3.49,4.12l-0.39,1.22l0.72,3.03l2.67,2.25l0.25,1.82l-0.48,1.35l0.33,0.7l-0.05,1.3l0.79,0.26l1.3,-1.47l0.92,-0.12l0.74,0.97l-0.03,1.23l-1.02,0.66l-0.4,0.89l-1.02,0.43l-0.42,0.76l-0.96,-0.32l-2.26,0.04l-4.83,1.83l-2.47,-1.34l-1.74,0.34l-0.89,0.84l-0.76,2.13l-1.08,1.05l-2.06,0.87l-2.93,2.18l-2.33,0.23l-1.17,1.42l-3.92,2.33l-1.33,0.03l-1.25,-0.77l-0.62,0.03l-1.42,1.26l-2.28,3.32l-0.98,0.83l-2.89,1.8l-2.43,1.03l-1.31,-0.0l-0.86,0.71l-1.1,0.15l-1.9,2.12l-0.28,1.68l-0.66,0.97l-1.47,1.38l-0.68,0.17l-0.59,-1.92l-0.66,-0.39l-0.54,0.12l-2.29,2.96l-0.75,3.42l-2.08,1.89l-2.98,4.02l-0.17,3.6l-1.03,1.73l0.01,1.2l0.57,1.47l-1.16,1.72l-1.19,0.85l-3.43,0.81l1.09,-1.91l-0.08,-1.11l-0.43,-0.8l-1.57,-0.43l-2.36,1.15l-0.41,1.0l0.9,1.2l-3.78,3.26l-1.75,2.44l-5.74,4.65l0.02,1.06l1.74,2.27l1.43,1.25l0.42,1.24l-0.09,1.81l-1.83,2.72l-2.5,5.47l-0.88,0.27l-0.67,0.79l-0.14,1.08l0.51,1.11l-1.1,0.82l0.37,1.06l-1.35,2.11l-0.19,0.93l-1.4,-0.34l-0.76,0.41l-0.42,0.68l-0.98,3.15l0.15,0.92l0.37,0.32l-0.7,1.62l0.54,1.23l-1.03,0.63l-0.78,4.46l-0.49,0.04l-0.71,1.05l-1.92,-0.33l-2.5,0.78l-1.72,-3.21l-0.61,-0.53l-0.52,-0.02l-0.53,0.59l-1.18,3.26l-2.61,2.91l0.05,1.31l-0.98,0.5l-3.21,2.95l-0.74,-0.22l-0.53,-0.84l-0.23,-0.86l0.42,-1.1l-0.34,-0.48l-4.04,-0.06l-1.99,-0.48l0.99,-2.26l0.18,-1.77l-0.74,-1.72l-0.3,-1.98l-2.13,-1.46l0.78,-3.19l1.58,-4.31l0.04,-1.65l-0.52,-1.57l0.67,-0.52l0.99,0.32l2.9,1.82l3.14,-0.9l0.81,-1.3l-0.35,-1.35l-0.87,-0.64l-0.1,-0.43l-1.9,-1.24l3.56,-3.27l1.3,-0.42l0.35,-0.75l2.67,-0.27l0.89,-0.99l3.76,-1.27l0.46,-0.64l-0.78,-1.58l0.37,-1.38l-0.38,-1.05l-2.72,-2.53l-2.06,-0.78l-0.47,-0.7l-0.81,-0.43l1.34,-1.1l1.33,-1.73l0.23,-0.63l-0.27,-0.67l-1.06,-0.16l-1.61,0.87l-3.56,-3.68l-2.01,-1.75l-1.09,-0.46l-2.26,1.22l-2.7,0.45l-1.34,0.75l0.18,-1.73l-0.23,-1.9l1.48,-3.54l-0.29,-0.86l-0.88,-0.3l-0.05,-0.67l2.62,-2.44l0.29,-0.89l-0.27,-0.45l-3.49,-0.3l-3.33,1.02l-1.08,-0.05l-2.93,0.66l-0.79,-0.14l-2.03,-1.5l-0.88,0.03l-1.87,1.45l-1.06,2.67l-1.17,1.02l-0.79,-0.11l0.48,-1.79l-0.31,-1.05l-0.62,-0.43l-1.23,-0.02l-3.89,4.8l0.26,0.86l-1.79,0.13l-1.8,0.55l-1.04,0.78l-1.85,2.29l-1.11,0.57l-0.36,-0.65l-0.11,-3.58l-0.9,-0.34l-2.65,0.99l-0.98,-0.4l-0.72,0.37l0.17,-1.18l-0.25,-0.83l-1.14,-0.53l-0.7,-0.86l-3.36,-0.26l-1.72,0.28l-0.87,0.55l-0.12,-0.83l-0.79,-0.34l-3.3,0.94l-0.24,-0.8l-0.65,-0.4l-0.61,0.19l-1.3,1.31l0.29,-0.71l-0.11,-0.76l-1.17,-0.96l-1.09,-0.45l-2.78,-0.18l-0.9,0.14l-1.44,0.94l-5.77,0.82l-3.11,2.52l-1.92,2.43l-0.44,1.79l-0.72,1.25l0.16,2.24l1.61,1.92l-0.05,0.49l-0.77,0.48l-2.0,0.28l-0.42,0.72l-0.22,2.1l-1.52,0.65l0.59,-5.87l-1.02,-2.98l-0.55,-2.85l0.1,-0.67l1.34,-2.33l0.13,-0.78l-0.68,-0.66l0.5,-0.89l-0.56,-0.92l-0.84,0.15l-0.91,-1.29l-0.12,-1.51l-1.12,-2.31l-0.58,-0.37l-1.15,-0.04Z", "name": "Assam"}, "IN-UT": {"path": "M290.95,175.24l-0.31,-0.45l0.16,-0.23l3.37,-0.85l3.64,-1.92l0.42,-0.6l-0.06,-1.2l-1.32,-0.46l-0.68,-1.08l0.48,-0.37l0.27,-0.91l-0.22,-0.97l-0.63,-0.85l-0.26,-1.61l-0.89,-0.91l-0.01,-0.76l1.22,-2.78l0.89,0.28l0.59,-1.05l-0.14,-1.41l-1.18,-1.28l0.81,0.08l0.67,-0.49l0.3,-0.73l-0.32,-1.05l3.9,-4.07l0.54,-0.28l2.79,0.1l4.5,-2.57l3.73,-1.55l1.69,0.15l0.85,0.68l1.03,0.03l1.2,1.2l0.94,0.46l2.61,-0.37l2.11,0.53l4.18,0.25l1.13,1.91l1.22,0.95l3.16,0.05l1.25,-0.6l0.0,-1.27l-1.82,-2.75l-1.58,-1.74l0.87,-1.39l0.96,0.85l1.0,-0.03l1.1,-3.41l1.16,-0.22l2.08,1.39l0.62,1.44l1.05,0.36l-0.03,1.25l0.74,0.86l0.04,1.22l1.46,0.85l0.54,2.52l0.53,0.57l2.26,0.97l1.08,2.47l2.17,0.27l1.63,2.04l1.6,0.58l1.91,-0.81l3.23,-0.54l3.15,0.76l1.58,2.12l3.25,1.54l1.81,2.14l1.15,0.36l1.78,-0.62l0.99,1.35l0.94,0.56l-0.58,1.06l-0.99,0.19l-0.34,0.48l0.09,0.66l0.95,1.13l0.08,0.47l-0.68,1.46l0.45,0.55l2.1,-0.18l2.17,0.6l5.67,2.86l2.65,0.07l3.78,2.21l1.84,2.43l5.1,1.78l0.86,0.44l0.68,1.13l-2.12,0.8l-0.8,-0.96l-0.55,-0.09l-0.49,0.35l-1.01,1.05l0.22,1.15l-0.44,0.64l-2.27,1.77l-1.2,1.7l-2.2,1.62l-2.18,0.57l-0.85,1.97l-2.18,2.84l-0.56,0.44l-1.9,0.52l-0.92,0.77l-0.45,0.93l-0.04,1.03l0.96,3.25l-1.75,1.83l-0.16,1.01l-1.64,1.45l-0.25,0.68l-1.2,0.53l-0.28,0.84l1.3,3.62l0.76,0.26l-0.56,2.85l-0.47,-0.21l-0.86,0.34l-0.15,0.75l0.5,1.37l-0.14,0.51l-1.7,0.08l-1.15,0.63l-0.63,1.38l-0.35,2.99l-1.44,0.97l-0.65,1.28l0.08,2.75l1.04,0.9l-1.16,1.58l-1.43,0.55l-0.87,-0.37l-0.04,-1.04l-0.44,-0.24l-0.79,0.2l0.08,-0.94l-0.38,-0.4l-1.62,0.37l0.3,-1.52l-1.13,-0.87l-2.18,-0.29l-0.6,0.22l-0.26,0.74l-0.54,0.19l-1.94,-0.41l-1.16,0.47l-0.67,-0.89l-1.55,-0.1l-2.32,0.86l-0.71,-2.13l-1.46,-1.68l-2.4,-0.13l-3.8,-2.61l-0.66,-0.74l-0.55,-1.37l-2.39,-1.3l-0.84,-0.11l-3.42,1.35l-0.4,-1.87l-1.03,-1.41l-4.38,-2.28l0.11,-0.62l0.69,-0.26l1.19,0.27l0.76,-1.03l0.69,0.21l0.69,-0.27l1.77,-1.76l0.03,-1.29l-3.55,-1.07l-4.97,-2.81l-1.61,-1.38l-2.29,-3.67l-1.11,-1.1l-3.59,-1.79l-2.29,-3.9l-2.23,-2.17l-1.68,0.04l-0.85,1.12l0.16,1.82l1.13,4.27l-0.23,1.21l-0.92,0.93l-1.27,0.59l-0.53,-0.16l-3.81,-2.16l-3.95,2.04l-1.26,-2.37l-1.0,-3.95l-0.15,-3.69l1.35,-2.08l1.34,-3.04l3.16,-2.75l0.2,-1.02l-0.65,-0.63l-5.42,-2.71l-2.87,-2.4l-1.41,-0.26l-0.93,0.49Z", "name": "Uttaranchal"}, "IN-JH": {"path": "M485.62,401.35l-2.2,-0.83l-1.66,0.13l-0.64,-0.47l-0.92,-2.18l0.46,-1.96l-0.75,-2.15l-5.31,-5.13l-0.45,-1.24l-0.28,-2.67l-2.23,-1.57l-3.11,-0.55l0.74,-1.85l1.39,-1.87l0.17,-1.31l1.15,-1.83l-0.17,-0.87l-1.63,-2.76l0.11,-0.69l0.93,-0.61l2.97,-0.32l4.77,0.81l1.87,-0.08l1.71,-1.09l1.28,0.23l2.91,-0.51l1.72,-1.44l0.63,-1.37l1.28,2.2l0.99,2.58l0.91,0.66l0.71,-0.13l0.37,-0.54l0.48,0.46l0.71,-0.09l0.31,-0.39l0.0,-0.99l1.13,-0.14l0.85,0.26l0.77,-0.44l0.4,0.65l0.01,0.81l-0.37,0.6l0.15,0.73l1.64,1.83l3.74,2.84l1.49,-0.24l1.96,-2.6l1.54,0.48l0.78,-0.11l0.96,-1.83l3.19,-2.01l0.37,0.18l0.47,1.68l1.14,0.05l0.36,1.93l0.73,0.76l1.93,0.23l3.38,-1.36l-0.14,0.95l0.71,0.62l2.29,-1.85l0.34,-1.09l2.75,-1.0l0.7,-0.85l3.22,-0.65l2.72,-0.0l1.15,0.31l2.07,-1.87l1.74,0.23l0.61,-0.3l0.36,-0.71l0.0,-1.21l-0.39,-1.16l1.12,-0.67l0.91,-2.77l0.59,-0.38l2.49,-0.03l0.87,0.51l1.73,1.86l1.65,-0.22l1.97,-1.34l-0.19,1.0l1.95,0.69l0.56,2.96l0.66,1.0l1.38,0.68l1.57,-0.48l1.85,0.5l0.24,1.48l-0.96,1.25l0.15,0.88l5.46,3.3l0.78,-0.54l0.24,-1.39l0.74,-0.75l0.22,-2.08l2.61,-2.45l1.79,0.61l1.64,-0.17l0.97,-0.45l0.63,-0.86l1.69,1.09l2.36,0.74l0.49,-0.24l0.04,-1.06l0.79,-1.32l2.54,0.86l1.25,-0.22l0.91,-2.73l0.27,-2.7l-0.24,-0.98l1.59,-2.79l-0.02,-3.96l1.79,-2.25l0.83,-0.3l1.16,0.31l0.51,-0.24l1.12,-3.76l1.51,-0.38l1.41,0.51l0.77,-0.28l1.6,-3.24l1.37,-1.12l1.1,0.52l1.08,1.31l2.68,0.7l1.93,-0.1l0.67,0.49l0.1,0.59l-0.46,1.42l0.24,2.13l2.17,2.01l1.05,3.9l-0.72,3.72l-1.0,-0.18l-0.39,1.06l0.51,0.67l1.0,0.23l0.43,0.82l0.61,1.83l-0.66,0.58l-0.05,0.67l0.77,0.42l-1.14,0.75l-2.41,-0.72l-0.85,0.38l0.07,0.8l1.03,0.5l-0.1,1.01l0.4,0.96l-0.7,1.06l-0.04,1.52l-1.26,2.69l-3.44,2.56l0.02,1.36l0.28,0.36l0.67,-0.02l0.2,0.56l-1.83,0.11l-0.91,2.13l-1.27,-0.85l-1.16,0.28l-0.22,0.53l0.12,2.26l-0.83,0.87l-1.67,-0.16l-1.77,0.66l-0.38,-1.37l-0.75,-0.37l-2.33,0.63l-0.38,0.95l1.58,2.04l0.13,0.85l-0.99,0.74l-0.22,1.61l-0.67,-0.67l-1.24,-0.31l-1.18,0.26l-0.11,0.83l0.9,1.18l-0.74,0.16l-1.48,-0.36l-1.99,-1.45l-1.11,-0.15l-2.74,-1.55l-0.75,0.01l-2.05,2.64l-0.2,0.99l0.37,1.17l-0.54,1.3l-4.61,0.89l-7.31,2.64l-2.04,1.68l-0.42,2.01l-1.8,1.61l-1.1,0.29l-1.25,-0.91l-1.7,-0.6l0.37,-1.76l-0.17,-0.83l-3.17,-1.24l-0.91,0.23l-0.6,0.76l0.27,2.08l-4.66,0.65l-1.05,0.72l-0.09,0.97l0.72,1.07l1.45,0.25l-0.37,1.69l-1.12,1.59l-0.47,1.62l0.4,0.99l0.91,0.9l0.58,1.59l0.42,0.13l1.6,-0.54l1.56,0.43l4.28,4.41l1.21,0.8l2.64,-0.43l6.48,0.73l-1.12,0.37l-1.06,1.04l-0.38,5.19l1.78,1.49l1.55,0.14l2.47,1.85l0.25,1.52l0.66,1.08l0.97,0.46l1.88,0.17l1.02,0.78l0.5,1.15l-1.24,0.06l-0.21,0.5l0.21,1.04l2.24,1.83l0.38,2.09l1.43,1.35l-2.14,0.24l-0.34,0.37l-0.06,1.01l-0.83,-0.19l-1.36,0.84l-5.58,-3.66l-3.08,0.44l-0.93,-0.27l-2.33,-2.54l-5.72,-2.93l-1.38,-1.66l-0.96,-0.22l-0.63,0.3l-0.7,0.93l-1.56,0.42l-0.49,0.53l0.14,1.26l1.25,1.79l0.31,2.33l-0.08,0.94l-0.78,1.36l0.01,0.75l0.7,1.68l-0.43,2.63l-1.68,2.46l-1.06,0.74l-1.12,0.27l-1.32,-0.84l-0.04,-1.41l0.7,-1.51l-0.5,-0.78l-3.63,1.66l-3.84,-0.98l-3.16,-1.78l-1.39,-0.0l-2.85,1.24l-2.91,3.01l-0.82,-0.88l-2.85,-1.79l-1.6,-0.26l-1.46,0.46l1.5,-2.94l1.65,-2.4l0.39,-1.42l-0.54,-3.97l-0.68,-1.83l-0.62,-0.17l-2.32,1.61l-1.27,0.2l-0.95,0.73l-3.4,-0.9l-1.07,0.16l-1.02,0.58l-6.68,0.19l-0.58,0.37l-0.42,1.49l-2.34,1.14l-2.91,0.15l-2.41,-1.06l-1.51,-0.19l-0.86,-0.65l-2.56,-3.71l-2.65,-1.24l0.21,-0.7l2.1,-1.9l1.68,-0.16l2.55,-1.92l1.17,-2.68l0.95,-0.49l2.7,-2.47l0.21,-1.44l-0.78,-2.37l-1.27,-0.8l-2.38,0.04l-2.05,-0.95l-0.44,0.2l-0.1,0.88l-0.34,-0.13l-0.73,-2.68l-1.84,-1.99l-0.24,-1.17l0.56,-3.95l-0.52,-2.22l-1.03,-0.81l-1.27,0.92l-0.09,-0.36l0.24,-2.83l1.54,-1.82l0.43,-1.07l-0.96,-2.79l-0.87,-0.33l-1.62,0.72l-0.34,0.71l0.12,1.14Z", "name": "Jharkhand"}, "IN-JK": {"path": "M176.08,35.04l2.37,-2.36l-0.15,-2.71l0.72,-0.56l5.27,-0.96l3.12,-1.98l1.87,-0.7l1.84,-0.15l1.87,0.3l7.81,2.66l10.87,2.04l5.97,-0.52l1.57,1.55l2.54,1.46l8.19,2.07l5.87,-0.33l2.57,-2.29l3.11,-1.82l1.42,-1.8l0.86,-0.17l1.84,0.74l1.27,-0.01l3.39,-0.84l5.27,-2.66l0.99,0.15l1.97,1.12l3.39,-0.56l3.4,-2.92l0.32,-0.85l0.08,-2.41l0.59,-0.43l1.96,-0.39l1.61,0.69l0.77,0.01l2.91,-2.36l0.56,-0.77l0.2,-1.26l-0.34,-1.59l0.44,-0.53l22.94,-13.34l0.94,1.29l1.66,0.81l1.15,-0.36l2.19,-1.83l1.4,0.07l0.25,0.97l-1.39,3.65l-0.24,2.94l1.11,2.66l2.85,4.79l0.56,3.9l0.5,1.32l1.45,1.99l1.9,6.57l0.74,1.28l1.29,1.15l1.47,0.62l7.06,1.14l1.68,0.66l2.57,1.86l1.66,2.01l3.68,1.47l0.79,0.71l0.72,1.3l0.34,1.43l-0.32,1.36l-2.12,1.93l-2.99,1.23l-2.52,1.81l-0.26,3.11l1.51,4.2l0.72,4.34l-0.37,6.71l0.6,2.02l0.76,1.24l2.91,2.63l1.83,2.73l2.61,1.09l0.44,1.63l0.42,0.49l2.17,-0.32l3.4,1.53l2.5,0.11l0.76,0.38l0.07,0.93l-1.15,2.16l-0.31,3.79l0.76,1.2l1.74,1.47l1.04,2.98l1.58,1.74l-0.13,2.04l-1.78,2.45l-2.99,2.26l-1.28,1.37l-2.29,-0.49l-2.63,0.8l-0.83,0.67l-1.0,3.25l-1.34,-0.22l-2.55,1.01l-0.76,-0.22l-4.17,-3.55l-0.99,-2.71l0.36,-2.45l-0.62,-0.72l-0.73,-0.26l-0.88,0.28l-1.95,1.75l-6.89,0.7l-0.72,0.37l-0.3,0.78l-1.91,1.79l-0.48,-0.21l-0.24,-0.53l0.84,-2.71l2.04,-1.64l0.41,-0.81l0.1,-2.61l-0.35,-1.18l-0.52,-0.44l-1.59,0.09l-0.31,0.35l-0.01,0.78l-1.28,0.59l-0.52,0.64l-1.76,0.13l-2.36,0.83l-1.87,1.76l-1.16,0.19l-1.94,-2.71l-0.28,-2.27l-1.13,-1.48l-1.11,-2.41l-4.43,-4.94l-0.7,-0.03l-1.02,0.5l-3.7,2.62l-4.93,1.16l-0.67,0.74l-0.48,-0.0l-6.46,-2.01l-1.4,-0.78l-4.53,-2.86l-5.76,-5.55l-4.11,0.12l-1.88,-1.36l-0.71,-0.13l-1.11,0.56l-3.58,0.69l-3.2,1.74l-0.74,0.87l-0.39,1.36l-0.68,0.71l-4.17,1.72l-4.44,3.8l-1.01,-0.85l-1.7,-0.58l-1.74,0.49l-0.44,0.98l0.29,1.07l3.0,3.83l-0.27,2.22l0.73,1.87l-0.04,0.89l-1.7,1.9l-0.05,0.61l-0.99,1.43l-2.76,1.28l-0.43,1.18l-0.85,0.7l-2.45,0.3l-1.37,0.77l-2.13,2.4l-1.29,-0.76l0.03,-0.69l-0.42,-0.49l-1.71,0.82l-2.67,0.07l-3.04,-2.13l-2.21,-0.52l-3.16,-1.86l-3.66,0.69l-2.22,-1.01l-3.41,0.48l-0.92,-0.3l-0.7,-0.79l-0.95,-2.82l0.8,-1.82l-0.19,-2.8l1.2,-2.89l-0.26,-1.2l-0.74,-0.4l-0.76,0.21l-0.63,0.65l-0.62,1.67l-1.02,0.49l-2.05,0.22l-2.05,-1.37l-2.17,0.76l-0.5,-0.09l-0.91,-1.05l0.73,-1.21l0.13,-0.85l-0.81,-4.48l-1.14,-0.74l-2.8,-0.45l-1.0,-0.55l-1.7,-2.2l-2.9,-2.45l-0.36,-0.9l0.31,-1.78l2.08,-1.05l0.87,-1.05l1.26,-3.13l0.67,-2.87l-0.65,-2.12l-5.01,-3.36l-0.4,-1.27l0.28,-1.74l1.77,-2.59l3.3,-0.55l2.28,-1.26l1.59,-1.84l0.35,-1.48l-0.54,-1.32l-1.2,-0.71l-3.32,0.36l-2.29,-0.58l-2.14,0.5l-0.78,-0.15l-1.4,-1.35l-0.24,-0.86l0.22,-0.85l3.05,-2.05l0.2,-1.12l-1.36,-3.16l-0.58,-0.7l-2.81,-0.24l-1.92,-1.19l-0.07,-1.35l1.86,-1.69l0.23,-1.76Z", "name": "Jammu and Kashmir"}, "IN-UP": {"path": "M275.34,205.39l0.08,-0.87l-0.4,-0.81l0.98,-0.64l0.26,-0.62l-0.39,-1.02l0.09,-1.08l0.63,-0.63l-0.03,-0.78l0.85,-0.74l-0.12,-1.31l0.85,-0.26l0.57,-1.11l1.48,-5.73l1.43,-1.37l0.17,-0.58l0.94,-0.1l0.3,-0.86l2.37,-1.61l0.44,-1.41l4.79,-4.24l0.56,-1.76l0.08,-1.88l0.69,-0.43l1.01,0.2l2.73,2.32l5.75,3.03l-3.25,2.91l-1.42,3.18l-1.4,2.22l0.14,4.1l1.02,4.01l1.5,2.84l0.53,0.17l3.93,-2.12l4.27,2.33l1.87,-0.79l1.16,-1.27l0.27,-1.53l-1.31,-5.86l0.44,-0.6l0.93,-0.03l1.97,1.95l2.37,3.99l3.63,1.83l1.01,1.0l2.3,3.68l1.72,1.49l5.15,2.91l3.22,0.87l-0.29,0.67l-1.36,1.2l-1.25,-0.03l-0.74,1.01l-0.97,-0.35l-0.89,0.33l-0.75,1.13l0.36,0.82l4.44,2.28l0.82,1.11l0.45,2.3l0.61,0.28l1.07,-0.68l2.94,-0.83l2.2,1.17l0.37,1.16l0.83,0.95l3.93,2.71l1.56,0.36l0.81,-0.24l1.2,1.39l0.83,2.42l0.51,0.21l2.48,-0.94l0.99,-0.02l0.51,0.84l0.69,0.17l1.07,-0.46l2.12,0.39l0.81,-0.28l0.49,-0.86l1.92,0.26l0.58,0.43l-0.37,1.25l0.26,0.54l0.61,0.21l1.18,-0.4l0.11,1.23l0.97,0.05l0.34,0.98l1.38,0.56l1.93,-0.72l0.97,-1.03l0.5,-1.07l2.2,2.05l1.78,0.44l1.1,1.2l1.02,0.42l1.36,2.19l0.82,0.27l1.64,-0.21l2.4,2.1l0.56,-0.22l0.15,-0.44l-0.17,-2.69l0.63,-0.53l0.74,0.02l0.4,1.04l2.24,0.66l1.17,1.65l1.64,0.62l1.64,1.48l0.65,0.35l2.05,0.21l0.35,1.28l0.73,0.61l1.33,0.34l1.04,-0.11l0.72,1.29l5.03,1.12l0.53,0.65l1.04,2.88l2.01,2.4l-0.35,0.91l0.75,0.97l1.19,0.06l0.59,-0.34l0.52,-0.97l0.76,0.17l1.08,0.92l0.65,1.65l0.59,0.53l2.77,1.38l1.6,1.47l2.32,0.63l1.89,1.78l3.25,1.95l1.27,0.05l1.97,-1.88l0.73,-0.31l1.44,0.14l0.64,0.2l1.19,1.09l1.86,0.8l3.63,2.88l2.4,1.17l1.78,1.68l1.35,0.37l2.68,-0.3l3.76,-0.93l0.61,0.23l0.78,1.86l0.64,3.77l1.05,1.07l3.78,0.24l2.16,1.0l1.95,0.46l3.79,-0.02l1.0,0.38l1.46,1.18l1.22,1.83l0.87,0.34l1.01,-0.06l1.26,-0.95l0.95,-1.56l-0.43,-1.73l0.64,-0.32l6.11,0.45l7.74,3.44l-0.08,0.57l0.44,0.31l0.89,-0.1l-0.14,1.46l1.68,1.8l-0.02,2.27l2.55,3.19l0.12,2.0l1.36,2.56l2.76,1.74l1.3,-0.6l0.85,0.05l0.44,0.97l-0.19,2.57l0.25,0.77l1.93,0.52l2.54,2.63l-8.75,-0.21l-0.69,0.64l-0.89,2.26l-1.87,0.57l-0.58,0.71l-0.53,-0.86l-1.04,0.3l-0.27,2.29l0.45,0.95l1.56,0.43l1.39,-0.63l2.0,1.49l2.85,0.74l-0.75,1.75l0.72,1.59l-1.71,-0.01l-0.98,0.62l-2.56,0.37l-0.78,0.73l-0.02,1.17l1.57,1.59l0.8,1.89l2.75,1.4l0.66,1.24l1.01,0.41l0.56,1.63l1.2,1.16l0.84,0.22l2.77,-0.43l1.0,1.36l1.44,0.91l2.29,0.25l2.18,1.96l0.09,0.43l-0.43,1.02l-1.48,1.05l-1.13,0.16l-1.72,-0.61l-1.57,-1.34l-1.31,-0.02l-1.48,0.93l0.37,2.52l-1.19,0.43l-1.3,-0.47l-0.42,-2.32l-1.02,-0.59l-1.43,0.28l-2.76,2.12l-1.74,2.2l-3.5,2.93l-2.15,0.89l-1.31,1.48l-12.02,6.86l-1.28,1.31l-0.44,1.05l-0.35,3.14l0.15,0.85l1.12,1.85l-0.29,4.03l2.54,2.96l2.69,1.36l0.21,1.11l-0.62,1.25l0.43,1.32l-0.04,2.89l-2.45,0.3l-1.39,1.1l-0.01,1.49l1.65,3.07l-0.95,1.29l-0.26,1.5l-1.39,1.86l-1.72,4.05l-1.53,1.2l-0.32,1.67l-0.84,1.34l-3.39,1.26l-4.96,-0.24l-1.19,-0.65l-1.66,-1.53l-1.22,-0.35l-0.94,-1.34l-0.99,-0.75l0.07,-1.48l-1.86,-1.99l0.85,-0.12l0.85,-0.74l0.33,-2.2l0.73,-1.76l-0.05,-2.43l-0.94,-0.86l0.33,-2.55l-0.28,-1.36l0.21,-0.26l0.93,0.28l0.92,-0.26l0.51,-1.09l-1.52,-2.87l-1.63,-0.31l-0.22,-1.37l-0.98,-0.12l-2.9,1.04l-1.34,-0.13l-2.9,-0.97l-1.02,0.1l-0.38,0.54l0.07,1.74l-0.34,0.46l-2.48,0.03l0.46,-0.94l-0.09,-0.81l-0.63,-0.61l-1.13,-0.04l0.05,-2.17l-0.46,-0.58l-0.5,0.11l-0.69,1.01l-0.23,-0.11l0.34,-1.13l-0.43,-1.53l-0.75,-0.06l-2.07,1.15l-2.62,-1.65l-2.34,-0.36l-2.44,-1.83l0.1,-1.46l-1.19,-1.84l-1.25,-0.33l-1.65,0.49l-0.55,-0.18l-0.66,-1.21l-3.93,-0.58l0.12,-0.94l-1.36,-2.79l-0.44,-0.15l-3.52,1.18l-0.04,0.71l1.17,0.85l-1.17,0.38l-1.22,-0.17l0.17,-0.95l-0.6,-0.6l-1.6,-0.5l-2.36,0.14l-0.44,0.65l0.07,2.14l-1.89,2.61l0.26,1.6l-1.41,0.32l-0.94,1.06l-2.61,-1.77l-1.96,0.4l-1.39,-1.0l-2.12,0.47l-1.76,-0.18l0.84,-1.31l0.15,-0.88l0.88,-0.9l0.2,-1.29l0.88,-2.03l-0.08,-0.99l-0.92,-0.55l-1.39,0.37l-0.83,1.53l-3.3,0.4l-0.04,0.77l1.71,1.4l-2.08,0.3l-0.9,-0.82l-0.8,-1.5l-0.89,-0.3l-0.66,0.44l0.01,1.06l-2.31,-0.37l-0.6,0.3l0.4,1.75l1.24,0.71l-0.82,0.53l-0.4,0.04l-1.56,-1.55l-0.56,0.43l0.22,1.27l-1.38,-0.38l-1.63,0.37l-0.51,-0.7l-0.17,-0.93l1.06,-0.2l1.53,-1.78l2.0,-1.08l0.21,-0.73l-0.78,-2.05l-0.88,-0.18l-0.5,-0.7l-0.94,-0.49l-0.28,-2.59l-0.93,-1.59l-0.79,-0.28l-1.27,0.27l-0.88,-0.25l-2.49,2.19l-1.13,-0.36l-2.27,1.05l-3.01,2.29l-2.37,0.66l-0.35,0.48l0.02,0.73l1.03,1.63l-1.68,0.65l-0.98,-0.78l-3.65,0.23l-3.08,-0.97l-0.92,0.48l-1.43,1.94l-0.32,-0.02l-0.21,-0.76l-0.47,-0.4l-1.47,0.02l-0.45,0.65l0.08,1.56l-0.7,0.07l-0.49,-0.55l0.21,-1.36l0.89,-0.87l1.71,-2.67l0.6,-1.48l-0.19,-0.47l-0.47,-0.14l-1.16,0.86l-0.87,-0.19l-0.77,0.28l-0.81,0.96l-0.37,-0.96l1.04,-2.22l-0.64,-0.78l-0.75,0.11l-1.26,2.01l-0.04,1.23l0.78,3.19l-3.22,-0.57l-1.29,1.21l-0.23,-1.37l-0.3,-0.28l-0.87,-0.01l-1.75,0.66l-0.09,-0.73l1.1,-1.71l-0.97,-0.87l-0.86,-0.22l-0.71,0.35l-0.16,1.32l-1.22,0.43l-1.02,1.15l-0.59,0.21l-0.12,-0.99l0.32,-0.89l1.91,-1.82l-0.03,-1.44l0.63,-1.25l0.16,-1.42l-0.55,-0.91l-1.06,0.13l0.35,-1.08l-0.08,-1.1l-0.23,-0.57l-0.88,-0.52l-0.72,0.25l-0.62,0.73l-0.32,0.9l0.03,1.77l-0.3,0.25l-0.55,-0.02l-0.1,-2.28l-0.54,-0.97l-0.57,-0.09l-1.75,1.02l-0.19,1.54l0.75,0.94l-0.52,0.98l0.19,1.26l-2.07,-2.02l-1.41,-0.23l-1.13,0.35l-0.36,0.65l0.12,0.74l-1.48,1.74l-0.57,1.6l0.32,0.71l1.59,1.5l1.08,2.41l1.2,6.41l2.31,3.04l0.36,3.85l-0.65,1.88l0.4,1.02l1.03,0.66l2.06,-0.54l1.03,0.19l1.85,3.2l-0.17,1.52l0.39,0.4l1.51,0.37l-0.16,1.09l-0.47,0.87l-1.67,1.57l-1.07,2.4l-1.57,1.53l-0.99,-0.36l-0.45,-1.43l-2.96,-0.6l-3.64,-3.03l-1.66,-0.82l-1.14,0.44l-0.61,1.98l-0.56,0.69l-0.97,0.47l-0.88,-0.44l-0.41,-0.83l0.63,-1.22l-0.08,-0.85l-2.21,-1.45l-0.19,-0.65l-0.85,-0.52l-0.49,-0.89l1.35,-2.51l0.03,-0.97l-0.38,-0.52l0.07,-1.6l-0.96,-1.46l-0.21,-2.0l-0.83,-1.48l-0.83,-0.73l0.24,-0.53l2.34,-1.55l2.17,-2.14l0.53,-1.55l-0.31,-1.12l1.1,-3.45l-0.18,-1.0l-1.96,-3.91l-1.39,-2.03l2.35,-2.06l0.58,-0.87l0.55,-1.89l3.26,-0.78l2.42,0.06l1.81,-1.06l2.97,-0.59l1.28,-0.74l0.27,-0.98l-0.81,-2.2l0.14,-1.22l0.38,-0.7l1.92,-1.49l0.81,-2.07l1.37,-1.68l1.06,-2.84l1.2,-1.91l-0.03,-0.77l-0.96,-0.97l0.0,-0.62l1.1,-0.89l-0.56,-1.88l0.59,-0.57l1.79,-0.57l1.29,-1.72l0.13,-0.63l-0.6,-0.73l0.33,-1.15l-0.1,-1.04l-0.67,-1.92l-2.1,-3.28l-0.72,-3.17l-0.59,-0.68l-1.97,0.16l-2.0,-1.93l-0.9,-0.14l-0.36,-0.7l-0.99,0.05l-0.56,-0.52l-1.79,0.76l-1.18,-0.01l-0.74,0.63l-0.64,-0.02l-1.43,-0.82l-1.72,-0.3l-1.05,-1.0l-1.16,-0.1l-0.54,-0.83l-0.76,-0.27l-2.23,0.18l-0.93,1.15l-1.2,-0.18l-0.62,-0.89l0.78,-0.3l1.09,-1.02l0.27,-0.71l-0.74,-0.73l-1.94,-0.48l-2.22,0.1l-1.26,1.15l-1.17,0.12l-0.39,0.59l-0.88,-0.48l-2.81,-0.37l-1.09,0.33l-0.92,-0.47l-3.28,-0.47l-2.51,1.71l-3.97,1.63l-1.26,-0.07l-0.91,1.46l-0.86,0.49l0.13,-2.17l0.57,-0.69l6.23,-2.89l2.25,-0.54l0.72,-0.58l0.09,-0.67l-0.84,-0.74l-0.84,0.58l-0.62,-1.04l-0.47,-0.22l-0.8,0.55l-1.65,-0.21l-0.65,-1.0l-0.85,-0.27l0.11,-0.38l2.42,-0.72l0.53,-1.05l1.15,-0.65l0.56,-1.2l-1.43,-2.52l-0.3,-1.75l-1.54,-0.43l-3.64,-2.12l-0.61,-1.8l-2.26,-2.94l0.03,-1.53l-0.68,-0.68l0.5,-0.81l-0.04,-0.86l-0.47,-1.19l-0.72,-0.53l-0.37,-2.72l0.75,-0.66l2.6,-0.95l0.83,-0.85l0.99,0.2l0.51,-0.21l1.14,-1.79l0.79,-0.67l-0.81,-2.35l-1.02,-0.86l0.1,-1.29l0.34,0.21l0.6,-0.43l-0.26,-1.77l1.08,-0.7l0.18,-0.62l-0.76,-0.58l0.74,-1.51l-1.42,-0.68l-0.05,-0.97l-0.62,-0.65l0.87,-2.29l-0.41,-0.56l-0.44,0.04l-0.11,-1.16l-0.36,-0.26l-0.88,0.17l-0.49,-1.15l-0.94,0.01l-0.29,-0.67l-1.11,-0.66l-1.05,-1.92l1.12,-1.48l-0.06,-1.04l-0.85,-2.6l-2.48,-2.18l-0.53,-1.11l0.23,-0.83l-0.41,-0.93l0.54,-1.42l-1.35,-1.66l0.54,-1.2l-1.8,-3.7l-0.14,-5.52l0.56,-1.3l-0.47,-0.92l-0.03,-0.89l0.47,-1.5l-0.93,-0.73l-1.3,0.03l1.29,-1.31l-0.05,-0.56l-0.46,-0.39l-0.95,-0.01Z", "name": "Uttar Pradesh"}, "IN-SK": {"path": "M624.09,256.17l1.74,-1.11l1.5,0.04l2.71,-2.5l1.43,1.15l2.65,0.52l2.31,1.81l-0.23,2.08l1.28,1.8l0.06,0.92l-1.46,6.18l-1.76,3.15l-0.24,1.13l0.49,0.78l-0.09,1.51l0.63,1.96l3.56,3.09l-0.14,0.55l-0.53,0.4l-1.78,0.44l-1.01,0.67l-1.42,2.94l-1.56,-0.85l-4.67,-0.11l-3.06,2.58l-1.78,0.44l-3.84,-1.72l-3.55,-0.05l-0.65,-0.3l-0.58,-1.87l-1.79,-1.32l0.79,-2.13l-0.61,-1.91l0.81,-1.92l-0.56,-1.88l2.65,-4.71l1.54,-4.54l-0.12,-1.42l0.29,-1.16l-0.51,-0.51l-1.07,-0.3l-0.48,-1.12l0.06,-0.62l0.47,-0.48l1.19,0.1l6.6,-1.18l0.74,-0.55Z", "name": "Sikkim"}, "IN-CT": {"path": "M376.2,561.12l-0.76,-1.04l-0.54,-2.04l-1.09,-0.57l-0.15,-0.57l0.27,-0.65l2.07,-1.28l0.36,-0.85l-0.24,-0.79l-1.82,-2.18l-0.32,-1.59l0.51,-1.14l2.36,-3.16l1.16,-4.17l1.21,-0.64l1.08,-1.84l1.03,-0.48l0.89,-1.14l0.61,-0.26l1.07,2.14l2.07,0.07l0.93,1.63l0.73,0.22l1.24,-1.17l2.22,-1.2l0.11,-0.81l-0.84,-1.42l2.23,-0.73l0.65,-1.58l-0.64,-1.49l-1.37,-1.28l-4.18,-1.73l-0.94,-2.81l-2.92,-1.34l-1.24,-2.7l-0.75,-0.22l-0.84,0.27l-0.46,0.55l-0.09,0.78l-1.61,-0.42l1.75,-0.9l0.59,-1.0l-0.24,-0.9l-1.6,-0.51l0.5,-0.9l1.91,0.56l0.81,-0.33l0.83,-4.19l-1.06,-3.19l-3.34,-0.41l0.3,-2.29l0.6,-0.47l2.53,-0.4l2.93,-1.99l0.18,-0.75l-0.42,-1.42l0.05,-2.41l0.61,-1.47l-0.41,-1.1l-0.13,-2.2l-1.6,-0.59l-2.16,0.82l0.34,-0.93l1.82,-1.1l0.25,-1.05l-0.49,-2.64l-0.19,-4.61l-0.89,-0.79l-1.73,0.09l-0.93,-1.74l0.73,-4.2l0.63,-0.84l4.35,-2.42l1.73,-2.04l0.06,-1.69l1.3,-3.97l-0.11,-3.65l0.64,-4.84l1.91,-0.95l0.61,-1.04l0.55,-1.62l-0.09,-3.28l2.01,-4.15l0.85,-0.2l1.2,1.46l0.55,-0.07l0.46,-0.5l0.09,-0.85l-0.42,-0.87l0.8,-0.52l0.42,-2.56l1.99,-1.5l0.72,-1.23l0.16,-3.55l1.21,-1.92l0.5,-0.43l0.46,0.94l1.05,0.27l3.57,-1.69l1.2,1.52l0.79,0.43l1.06,-0.45l2.76,-2.24l3.2,-1.03l0.92,-1.95l2.97,-1.77l-0.02,-1.86l0.73,-1.05l-0.19,-2.83l0.19,-0.37l2.32,-0.91l2.35,-2.12l0.23,-0.95l-0.31,-1.56l0.29,-0.66l3.67,-1.75l1.99,-0.03l0.88,-1.76l1.03,-4.6l-0.16,-1.02l-2.37,-2.04l-2.34,0.08l-0.36,-0.7l-0.98,-0.37l-2.06,-3.14l-0.79,-0.36l-1.44,-0.08l-3.16,-1.17l-0.65,0.1l-2.65,1.78l-0.44,0.01l-0.97,-2.0l0.65,-0.89l0.15,-1.17l1.07,-0.61l1.02,-1.6l-0.17,-1.22l-1.75,-3.33l0.06,-1.2l1.2,-0.2l1.84,1.89l1.03,0.75l1.08,0.3l1.09,-0.04l3.01,-1.44l1.96,0.13l2.28,1.14l3.87,0.03l1.87,0.48l8.34,0.33l1.27,-0.98l2.41,-1.15l0.77,-1.85l3.07,-1.14l0.59,-0.82l0.3,-1.29l0.83,0.21l1.66,1.52l1.43,0.77l5.35,0.26l3.78,-1.46l1.03,-1.62l0.25,-1.54l1.45,-1.09l0.74,-1.65l3.19,0.58l1.86,1.28l0.24,2.82l0.99,1.75l4.75,4.36l0.66,1.82l-0.44,2.11l1.35,2.8l1.06,0.48l1.68,-0.12l2.34,0.83l0.55,-0.55l-0.05,-1.51l1.36,-0.48l0.76,2.35l-1.89,2.51l-0.29,3.17l0.54,1.11l0.6,0.01l0.99,-0.91l0.48,0.7l0.3,1.5l-0.56,4.03l0.33,1.47l1.84,1.98l0.9,2.89l1.12,0.31l0.52,-0.4l0.04,-0.52l1.65,0.8l2.21,-0.09l0.9,0.49l0.71,2.65l-0.72,0.97l-2.99,2.18l-1.13,2.64l-2.36,1.79l-1.78,0.21l-2.14,1.78l-0.72,2.26l0.72,1.48l0.15,1.18l-1.13,1.76l-3.47,0.93l-3.65,3.0l-3.05,1.37l-2.17,2.82l-0.35,1.32l0.73,1.02l-1.48,0.97l-0.33,1.95l0.41,0.86l1.39,0.93l-0.35,1.31l0.13,0.75l-0.12,0.3l-0.98,0.13l-0.29,0.89l-1.06,-0.2l-0.46,0.37l-0.32,1.8l-3.28,5.47l-0.78,2.64l0.11,1.7l1.58,1.75l0.07,1.4l-2.14,-0.68l-0.99,0.11l-0.68,0.98l-0.1,1.33l-0.9,1.29l-0.91,2.51l-1.44,1.46l-2.01,0.14l-3.31,-2.01l-4.53,0.66l-0.98,0.41l-1.12,-0.49l-3.11,0.28l-0.56,0.45l-0.04,1.31l-2.46,4.73l-1.43,0.95l-1.59,2.2l-1.09,0.56l0.01,-0.76l-0.55,-0.52l-1.36,-0.25l-0.68,0.54l-0.09,4.18l0.72,2.52l-0.83,4.18l0.61,1.45l0.67,0.17l0.4,1.27l0.79,0.22l-0.29,3.71l0.48,1.12l0.27,3.76l-0.69,2.58l0.08,0.98l2.58,1.62l2.3,0.07l1.42,1.1l1.33,-0.5l1.05,0.06l-0.41,3.09l0.82,1.35l-3.43,2.25l0.01,-2.29l-1.81,-0.32l-1.56,-0.7l-3.66,-0.37l-0.86,0.54l-0.78,1.34l-2.46,-4.66l-0.59,-0.31l-1.08,0.07l-0.43,-0.79l-2.26,-1.77l-0.81,0.21l-0.92,1.26l-0.28,-0.91l-2.18,-2.08l-0.5,0.09l-1.32,1.38l-0.97,0.56l-1.53,2.64l-0.2,1.29l0.69,1.16l3.02,1.8l0.98,1.71l2.17,0.75l-0.29,2.12l0.41,1.88l-0.25,4.24l0.5,0.47l0.99,0.22l0.95,1.7l1.38,0.51l0.36,0.45l-0.98,1.25l0.11,0.61l0.97,0.86l-0.71,1.75l-0.07,1.21l0.69,1.82l-0.2,1.59l1.06,0.93l0.17,1.09l0.72,1.28l0.08,2.46l-1.85,1.77l-0.79,3.73l-0.61,-0.56l-0.52,-0.03l-0.99,1.69l-2.34,0.54l-1.59,1.62l-1.01,0.36l-0.27,0.97l1.23,1.04l0.02,0.59l-1.55,1.0l-3.02,2.84l-1.83,2.83l-1.7,0.58l-0.96,1.18l-3.23,1.04l-0.99,2.18l0.33,1.34l-0.54,2.23l-0.74,1.15l-0.25,2.85l-0.67,1.16l-0.18,1.23l-0.74,-0.38l-0.78,0.41l-0.23,2.18l-4.04,0.11l-2.81,-1.08l-3.48,1.96l-0.54,-0.18l-0.8,-1.55l-0.22,-3.95l-1.15,-2.66l-0.11,-1.07l0.7,-1.59l-0.22,-0.76l-1.09,-0.27l-1.63,0.55l-0.57,-2.01l-0.9,-0.47l-0.7,0.29l-0.43,1.22l-1.37,0.06l-0.16,-0.75l1.24,-0.83l0.07,-0.8l-2.14,-4.79l-2.4,-3.04l-2.13,-2.27l-1.92,-1.33l-1.32,-0.24l-1.74,0.54l-1.0,-0.81l-0.58,0.42Z", "name": "Chhattisgarh"}, "IN-CH": {"path": "M266.15,165.51l-2.24,-2.23l-0.12,-0.55l1.16,-0.55l1.66,0.15l0.44,1.34l-0.16,1.56l-0.74,0.28Z", "name": "Chandigarh"}, "IN-GA": {"path": "M171.13,653.34l0.82,-0.49l2.2,-0.25l0.84,-1.12l0.38,0.84l1.86,0.75l0.72,2.4l1.25,1.01l1.01,0.17l2.17,-0.81l2.03,0.13l1.31,-0.56l1.58,0.8l0.64,3.06l-0.59,1.24l0.03,0.83l0.59,0.86l0.06,1.41l1.19,1.5l0.15,1.34l-0.25,0.39l-1.24,0.3l-0.42,0.49l0.16,0.93l1.4,1.13l-1.01,2.75l0.15,2.34l-1.02,2.28l-0.76,0.39l-1.33,0.04l-1.82,1.18l-1.4,-0.88l0.06,-1.67l-0.32,-0.72l-0.99,-0.43l-1.0,-1.7l-1.34,-0.43l0.32,-0.82l0.93,-0.77l0.11,-0.61l-0.54,-0.55l-1.62,-5.41l-0.52,-0.65l-1.65,-0.3l-0.6,-0.51l2.08,0.23l0.62,-0.25l0.78,0.3l0.93,0.96l0.63,-0.35l-0.02,-0.58l-1.35,-1.45l-3.77,-1.12l0.45,-0.68l1.85,-0.72l-0.19,-0.91l-0.59,-0.35l-2.36,1.34l-0.55,-0.34l0.05,-0.87l-0.54,-1.54l0.59,-0.89l2.24,-0.65l0.3,-0.6l-0.39,-0.4l-1.74,0.07l-1.67,1.11l-0.87,-2.2Z", "name": "Goa"}, "IN-GJ": {"path": "M0.5,399.96l0.7,-0.07l0.65,-0.85l1.21,0.35l1.42,-0.85l0.14,-0.66l-0.59,-0.43l-0.93,0.34l-0.77,-0.57l-0.51,-2.68l-0.67,0.36l0.47,-2.07l0.64,-0.96l1.64,-0.62l-0.08,-1.16l0.42,0.58l0.75,0.19l1.26,-1.22l0.45,0.24l0.9,-0.64l10.29,-0.14l0.4,-0.4l0.04,-10.49l0.51,-1.05l1.13,0.05l0.45,2.22l0.74,0.73l0.91,-0.37l1.29,-2.29l1.82,2.06l0.74,0.04l2.52,-1.05l3.13,1.14l3.52,-0.99l8.54,0.22l0.76,0.33l2.36,2.42l1.6,0.78l7.98,0.11l1.43,-0.3l1.28,-1.0l1.64,-3.28l4.06,-0.84l1.74,-1.07l2.27,-0.31l1.43,-0.97l4.1,-0.7l0.18,0.38l-0.74,0.64l-0.12,0.58l0.81,3.24l1.9,1.14l4.26,0.3l3.16,-1.22l0.2,-0.72l-0.41,-0.77l2.11,-1.57l2.5,0.12l0.86,-0.95l1.84,-0.89l-0.41,-1.47l-2.81,-0.83l0.18,-2.07l-0.72,-0.83l-0.07,-0.71l0.57,-1.53l2.65,-1.55l1.66,0.93l2.93,0.8l0.95,0.0l2.15,-0.83l2.27,0.43l1.81,-1.1l2.8,-0.18l1.22,0.17l1.61,0.83l3.68,-0.64l0.6,1.02l1.38,0.34l0.62,-0.37l0.1,-0.96l0.5,-0.3l0.41,0.01l0.74,0.75l1.17,0.13l1.71,-1.24l1.73,-0.39l1.37,1.61l2.36,0.79l1.19,0.15l3.43,-0.47l-2.31,0.59l-0.18,0.93l1.37,1.15l1.47,0.26l0.66,0.97l1.68,0.05l0.11,1.14l1.25,1.86l1.07,-0.16l0.95,-2.34l0.8,-0.05l1.64,0.97l1.95,0.54l0.81,1.65l0.86,0.74l5.67,1.0l1.08,-0.16l1.04,-0.81l0.65,-2.67l0.5,-0.68l2.52,-0.5l-0.24,2.59l0.32,0.65l2.29,0.98l1.23,-0.39l0.06,0.28l-0.47,0.73l-1.64,-0.01l-1.21,1.67l-0.94,2.61l0.78,2.06l0.54,0.75l2.28,1.54l0.5,1.22l1.44,1.4l0.56,-0.04l1.5,-1.02l1.08,-1.87l1.13,1.79l0.1,1.35l0.71,1.7l-1.66,1.34l-0.33,3.86l0.52,0.44l1.25,0.07l1.17,1.92l1.59,0.55l0.03,3.2l1.07,0.14l1.29,-1.03l1.02,0.87l0.0,2.34l0.46,1.2l-0.33,1.36l0.26,0.43l1.46,0.1l1.41,0.86l2.79,-0.78l2.48,3.21l1.08,0.17l1.17,-0.81l2.08,1.91l1.71,0.9l0.52,0.58l0.09,1.77l0.56,0.94l1.07,0.46l1.24,-0.62l0.32,0.13l0.75,0.47l1.19,2.04l1.06,0.7l1.04,2.54l0.7,3.74l0.67,0.28l0.99,-0.26l1.0,1.07l0.15,0.89l-2.47,4.86l-0.69,0.73l-2.4,0.5l-3.97,3.3l-2.47,-0.52l-1.06,0.61l-0.17,1.4l2.3,2.09l0.7,0.27l2.5,-0.14l1.17,0.57l-0.52,0.85l-1.21,0.63l-1.38,0.14l-0.87,-0.73l-0.66,-0.14l-0.64,0.34l-0.43,0.83l0.19,3.95l0.98,1.17l0.6,2.21l0.72,1.01l-0.37,1.38l-0.01,2.02l-1.86,0.34l-2.66,1.26l-0.98,0.85l-1.36,0.17l-2.94,1.25l-0.44,1.12l0.24,2.28l1.08,1.72l-0.69,1.24l-1.5,0.35l-0.49,0.63l0.39,1.13l1.62,2.41l0.55,0.29l5.43,-1.52l3.48,0.09l1.05,-0.57l1.48,0.8l2.63,-0.9l0.24,0.98l-1.57,1.06l-3.99,1.1l-1.51,-0.44l-0.73,0.2l-2.61,2.26l-1.23,3.23l-2.07,0.72l-0.67,-0.54l-0.58,-0.03l-0.41,0.34l-0.93,2.34l-2.01,1.14l-0.89,-0.22l-0.84,0.23l-2.12,-1.04l-0.82,0.35l0.24,1.02l1.22,1.18l1.38,0.77l2.01,-0.03l1.03,1.36l1.56,0.58l2.32,2.59l0.99,2.76l0.19,3.31l-0.49,0.92l-2.42,2.07l-0.13,1.4l-0.42,0.84l-2.66,1.32l-1.84,0.02l-1.33,-1.63l-3.25,-1.89l-1.11,-1.53l-0.78,0.14l-0.93,1.49l-1.29,0.62l-0.04,0.76l1.28,0.48l0.25,1.12l0.99,0.4l0.28,1.19l-2.99,5.31l0.78,1.33l0.23,1.97l-0.49,1.57l0.17,0.94l-3.44,-0.35l-0.69,0.66l-0.27,1.36l-1.1,0.52l-0.38,-0.06l-0.01,-1.51l-0.72,-0.56l-1.37,-0.12l-0.43,0.32l-0.21,0.95l-0.95,0.04l-0.36,-1.68l2.24,-1.3l0.45,-0.95l-0.35,-0.68l-1.23,-0.09l0.08,-1.11l-0.81,-0.47l-2.07,1.39l-1.14,-0.0l-0.65,1.29l-1.14,-0.15l-0.55,0.41l-0.11,0.95l1.46,1.36l0.23,1.61l-1.88,0.66l-1.35,-0.06l-0.65,0.32l-1.02,-0.24l-1.45,0.83l0.73,-2.93l0.57,-1.06l-0.41,-0.59l0.18,-1.49l0.99,-2.09l0.98,-0.77l1.51,-0.17l0.65,-0.65l-0.08,-1.64l-0.77,-1.03l0.99,-1.77l-0.03,-2.84l0.62,-1.11l-0.07,-2.45l1.33,-1.05l-0.21,-0.59l-0.63,-0.42l-0.03,-1.1l-0.67,-0.08l-0.38,0.46l-0.11,-0.45l0.53,-1.02l-0.21,-0.61l-1.26,0.33l0.35,-1.15l-0.63,-0.76l1.16,-0.71l0.28,-0.98l-0.44,-0.43l-1.52,0.3l-0.45,-0.77l-1.18,-0.59l1.25,0.19l0.67,-0.14l0.43,-0.53l-1.08,-2.77l-0.57,-0.44l-1.51,0.57l-0.74,-0.19l0.11,-0.83l-0.45,-0.52l-0.52,-0.03l1.22,-0.68l-0.09,-0.44l-1.49,-0.75l-1.09,-0.93l-0.03,-0.45l-0.63,-0.3l-0.58,0.41l-0.15,-0.32l-0.44,-1.87l1.42,-0.28l0.28,-0.74l-0.56,-0.42l-1.68,0.12l1.8,-0.54l2.67,-1.74l0.35,0.25l0.59,-0.15l0.08,-1.13l-0.83,-0.39l-2.31,0.85l-1.68,1.13l0.77,-1.49l2.09,-1.65l2.56,-1.29l1.44,-1.98l1.44,0.24l2.03,-0.72l0.96,-0.67l4.65,-1.88l0.51,-0.51l0.13,-0.73l-0.86,-0.4l-3.05,1.6l-2.75,0.95l-2.09,-0.31l-1.84,0.69l-1.99,-0.44l-1.81,0.3l-1.83,-0.23l-2.19,0.51l-0.03,-0.91l0.75,-1.97l0.26,-2.24l0.6,-0.39l1.0,-2.09l0.74,-0.36l1.38,-0.01l0.52,-0.51l0.26,-0.88l0.74,-0.47l-0.31,-0.63l-1.03,0.01l-0.6,0.71l-2.18,0.28l-2.07,1.63l-0.98,-1.7l1.19,-5.61l0.93,-1.11l0.97,-0.45l1.83,0.91l0.97,-0.07l1.05,0.62l0.56,-0.08l1.83,-2.13l0.87,-0.16l1.4,0.83l0.95,-0.34l0.39,-1.48l-0.64,-1.05l-0.97,0.51l-1.22,-0.43l-0.84,0.08l-1.89,0.94l-2.79,-0.93l-1.08,0.05l-1.68,-0.54l-0.77,0.2l-1.65,1.38l-0.67,0.2l0.15,-0.47l-0.39,-0.52l-1.99,0.41l-0.25,-1.46l0.75,-0.74l0.1,-0.66l-0.41,-0.73l-0.48,-0.12l-1.3,0.92l-0.97,2.53l-1.14,-0.05l-0.41,-1.1l-0.83,-0.23l-1.09,0.05l-0.53,0.76l-1.33,-0.02l-0.2,0.66l0.68,0.67l1.07,0.28l0.85,-0.5l0.31,0.91l0.9,0.39l1.02,-0.03l0.24,1.05l-0.28,3.28l-1.38,1.94l-1.79,0.18l-0.67,0.89l-0.99,-0.87l-1.35,-0.09l-0.31,0.32l0.18,0.41l0.66,0.43l-0.97,-0.27l-0.45,0.17l0.18,0.63l-1.59,0.61l0.15,0.67l1.89,0.64l1.44,-0.1l0.69,0.88l-0.18,0.92l-1.97,-1.61l-0.75,-0.2l-0.45,0.23l-0.2,1.02l1.11,0.46l0.3,0.48l-2.34,-0.84l-0.76,0.39l0.16,2.39l0.61,0.07l0.52,0.59l1.44,-0.43l1.41,0.38l1.26,-0.46l0.97,1.2l0.7,1.57l0.66,0.39l0.82,0.02l0.65,0.95l0.03,0.91l-0.66,0.75l-1.0,3.65l-2.24,2.74l-0.51,1.07l-1.35,1.36l-0.58,2.43l0.41,1.27l-3.25,1.99l-2.05,0.24l-4.99,3.12l-1.45,0.04l-2.41,1.15l-1.67,1.19l0.07,-0.5l-1.13,0.05l-1.81,1.46l-0.9,1.36l-4.4,1.16l-5.39,2.64l-1.52,0.13l-0.92,0.73l-2.44,0.05l-0.65,0.93l-3.65,0.22l-0.99,-0.18l-0.85,-0.59l-1.16,0.23l-1.21,-0.86l-4.8,-1.96l-2.71,-1.5l-1.64,-1.54l-1.94,-0.78l-8.52,-7.09l-3.03,-3.95l-3.49,-3.74l-0.87,-1.33l-0.17,-0.96l-1.73,-1.02l-3.88,-4.04l-1.94,-1.14l-2.67,-3.2l-1.63,-1.0l-0.84,-1.01l-0.18,-1.89l-0.66,-0.19l-0.63,0.59l-0.54,-0.17l-4.18,-3.73l-1.45,-1.96l-1.46,-1.14l-1.7,-2.63l-1.65,-1.48l-1.47,-2.81l0.88,-3.29l0.5,-0.76l1.32,-0.83l-0.26,0.75l1.01,1.24l0.67,0.08l1.02,-0.44l0.83,0.17l0.94,-0.69l0.25,0.21l-1.03,2.68l0.24,0.84l1.52,1.23l2.4,-0.38l1.52,-0.7l0.65,-0.71l2.26,-0.04l1.51,-0.42l1.45,-1.37l0.19,-0.7l-0.34,-1.28l0.36,-0.06l0.3,2.26l1.88,0.7l0.59,-0.29l0.11,-0.39l0.69,-0.13l0.66,-0.9l0.59,0.21l0.46,-0.2l0.83,-2.0l1.53,1.64l0.7,-0.0l0.95,-1.43l1.58,-0.33l2.54,-2.09l2.6,-0.59l2.59,0.34l1.25,-0.49l4.5,-7.15l0.16,-1.52l1.55,-2.48l2.22,-1.93l1.09,0.04l0.73,-0.69l0.69,-1.43l0.07,-0.9l-0.87,-2.13l-1.25,-0.94l-2.24,1.56l-0.43,0.78l0.33,1.53l-0.31,2.26l-1.2,0.23l-0.53,-0.37l-0.68,0.08l-0.97,-0.5l-1.1,-1.31l-0.65,0.29l-0.22,1.03l-1.45,0.21l-0.85,-0.55l-0.06,-0.82l-0.53,0.16l-0.65,1.13l0.61,0.91l-1.78,0.22l-2.05,0.8l-5.13,1.18l-2.35,1.7l-1.17,1.86l-1.81,-0.42l-2.04,-0.02l-0.85,-0.55l-1.78,-0.11l-5.03,-1.67l-4.08,-0.59l-4.99,-3.19l-5.31,-2.24l-6.42,-4.41l-0.28,-0.83l-0.74,-0.31l-0.42,-0.6l0.49,-0.71l0.1,-0.83l-0.57,-0.36l-1.75,0.26l-0.15,-0.25l0.45,-0.89l1.3,-0.27l0.19,-0.55l-1.43,-1.28l-1.29,-0.24l-0.08,-0.55l0.78,-0.72l-0.27,-0.47l-1.15,-0.11l-0.95,0.55l-0.06,-1.22l-1.08,0.26l1.83,-2.32l-0.14,-0.36l-0.86,-0.1l-0.56,-0.78l-0.49,-0.1l-0.21,0.45l0.29,1.18l-0.41,0.11l-0.0,-3.49l2.18,0.23l0.39,-0.38l0.04,-0.61l-0.48,-0.5l1.61,-0.59l1.53,-1.82l1.55,-0.78l1.08,-1.78l1.61,-0.09l3.07,-2.0l-0.09,-0.69l-0.8,-0.19l-1.32,0.28l-1.37,1.12l-2.52,0.25l-0.62,0.52l-0.65,1.24l-5.16,2.14l-2.79,3.05l0.2,0.67l-0.49,0.4l-4.27,-0.24l-0.75,-0.44ZM141.04,481.24l-0.02,0.35l-0.14,0.07l0.03,-0.2l0.13,-0.22ZM139.1,480.22l0.01,0.97l-0.7,0.34l-0.26,-0.5l0.95,-0.81ZM28.19,437.73l0.34,-0.24l-0.1,0.14l-0.23,0.1Z", "name": "Gujarat"}, "IN-RJ": {"path": "M113.16,366.39l-0.79,-0.19l-0.82,-1.14l-3.88,0.61l-1.37,-0.78l-1.49,-0.21l-3.05,0.21l-1.75,1.08l-2.15,-0.45l-2.94,0.83l-2.75,-0.76l-1.27,-0.83l-0.91,-0.2l-1.55,-3.64l-2.68,-4.47l-2.06,-7.11l-3.54,-3.49l-0.79,-2.29l-1.64,-1.88l-0.21,-1.01l0.33,-6.6l-0.19,-1.6l-0.91,-1.04l-1.23,-0.24l-3.67,1.06l-3.52,0.09l-2.79,-0.74l-0.75,-0.92l-0.69,-1.91l-3.03,-3.12l-0.94,-1.52l-0.54,-1.56l0.29,-3.26l1.77,-3.12l0.63,-2.52l-0.28,-1.98l0.55,-1.87l-0.16,-5.57l-1.0,-1.17l-2.36,-0.91l-7.44,0.28l-1.19,-0.44l-3.46,-2.72l-4.77,-1.9l-0.82,-0.89l-0.21,-1.18l1.29,-7.93l0.8,-2.43l1.22,-2.0l8.35,-7.32l1.89,-2.92l2.65,-2.47l0.77,-1.08l2.56,-6.91l7.24,-6.53l3.37,-0.9l2.19,0.73l2.89,2.68l0.22,2.51l0.96,2.12l1.23,1.73l1.86,1.21l2.15,0.28l2.76,-0.58l7.27,-3.47l2.28,-0.75l5.18,-0.75l5.05,-0.01l9.45,-2.8l0.73,-1.01l0.37,-4.13l0.46,-1.13l2.41,-3.02l5.04,-4.28l1.5,-3.1l1.81,-6.71l0.69,-1.31l2.22,-2.6l16.76,-8.5l1.03,-0.96l1.04,-2.37l2.71,-3.73l5.61,-10.36l4.24,-13.14l5.55,-2.7l5.67,-1.24l1.25,-0.68l5.27,-4.38l0.01,1.53l-2.58,4.47l0.0,0.93l0.33,0.34l15.39,0.72l3.64,0.48l0.02,0.94l0.94,0.93l0.04,0.52l-2.13,1.4l-0.59,2.13l0.48,0.91l1.08,0.31l2.26,-0.71l0.48,-0.41l0.19,0.23l-0.67,2.55l-0.26,2.85l0.37,1.18l0.79,0.98l-0.07,1.22l-0.19,0.37l-1.73,0.3l-0.34,0.95l2.48,3.97l1.17,-0.0l0.51,-1.04l3.42,-0.01l1.87,-1.25l2.62,1.15l1.36,2.74l1.0,0.28l1.28,-0.27l0.65,1.25l0.71,0.48l2.28,-0.55l0.86,-0.67l1.03,0.64l1.26,-0.12l1.93,-1.4l-0.21,1.19l0.37,0.73l0.69,0.23l1.08,-0.74l0.54,1.48l-0.83,0.46l-0.2,0.49l0.54,1.33l0.0,1.06l1.94,2.91l1.92,0.98l-0.02,0.67l-0.77,0.56l-0.22,0.85l3.34,9.56l3.35,4.22l2.17,1.57l-0.14,0.74l0.33,0.67l1.41,0.08l2.09,0.88l2.08,1.93l2.08,2.67l1.58,2.67l-0.7,-0.71l-0.52,-0.07l-1.05,1.15l-1.53,0.73l-0.43,0.67l0.27,0.88l0.98,0.7l0.61,-0.02l0.86,-0.7l-1.13,1.37l-0.82,1.64l0.59,0.99l-0.48,0.39l-0.91,-0.04l-0.45,0.81l0.15,0.87l1.22,0.93l0.58,1.57l0.74,0.31l3.48,-0.31l1.76,1.41l1.39,-0.66l0.29,-1.0l-0.42,-1.48l-0.6,-0.68l-0.03,-1.56l-0.65,-2.07l0.15,-1.09l0.22,-0.27l1.06,0.2l1.09,-0.39l1.6,1.04l1.18,-0.25l0.39,-0.55l0.02,-0.94l-1.13,-0.83l0.85,-0.33l0.02,-0.98l0.68,0.29l2.29,-0.31l0.49,0.72l-0.59,-0.08l-0.38,0.31l0.06,0.73l0.66,0.56l-0.57,0.47l0.03,0.51l1.42,0.83l0.92,0.06l0.52,1.73l0.97,0.65l1.15,-1.04l2.04,-0.52l0.28,-0.58l-0.44,-1.85l3.39,-2.44l1.36,-1.92l1.01,-0.38l2.42,2.36l0.15,0.52l-0.65,2.79l0.52,2.35l0.19,3.84l-0.86,1.6l-0.46,2.44l0.4,1.04l-0.58,0.37l-0.03,0.84l0.72,0.56l2.1,-0.25l1.27,-1.76l2.05,-0.4l0.26,-0.81l-1.3,-0.89l0.24,-0.53l1.97,0.6l0.71,-0.1l0.6,-0.56l0.81,0.49l0.58,-0.41l0.82,0.59l0.81,-0.67l0.38,0.07l0.36,2.7l0.84,0.78l0.33,0.85l0.04,0.6l-0.52,1.02l0.73,0.91l0.01,1.61l2.3,3.01l0.95,2.22l1.87,0.74l1.89,1.31l1.14,0.19l0.15,1.49l0.75,1.73l0.61,0.61l-0.36,0.58l-1.2,0.7l-0.31,0.83l-2.57,0.82l-0.37,0.89l0.3,0.66l0.88,0.32l0.64,1.0l2.23,0.36l0.7,-0.5l0.87,1.25l-1.42,0.37l-6.42,3.0l-0.85,1.15l-0.02,2.84l0.73,0.32l0.77,-0.2l1.26,-1.79l1.15,0.07l4.09,-1.67l2.33,-1.65l2.98,0.47l0.85,0.51l1.05,-0.35l2.89,0.35l1.09,1.2l0.67,-0.29l0.09,-1.11l1.09,-0.08l1.28,-1.16l1.69,-0.04l2.02,0.57l-0.98,0.92l-1.12,0.42l-0.05,0.72l0.66,0.88l-0.85,0.24l-0.1,0.82l-1.0,-0.26l-0.95,0.2l-0.54,3.52l-0.93,0.02l-0.98,-0.46l-1.99,0.86l-1.51,0.22l-0.57,0.55l-0.21,0.79l-1.71,0.58l-0.26,0.53l0.27,0.69l-2.38,1.08l-0.92,1.0l-2.98,0.75l-3.21,2.22l-2.11,0.06l-0.56,0.59l-0.11,0.9l-2.76,0.32l-1.52,2.06l-2.32,1.81l-2.65,0.18l-0.91,0.72l-0.32,0.96l-1.97,0.47l-0.92,1.2l-1.56,1.0l-1.05,0.28l-0.68,1.19l-2.24,1.52l-0.52,1.68l-0.79,0.35l-0.93,1.01l-2.88,0.01l-0.79,1.22l-0.84,0.14l-1.36,1.03l-1.09,1.85l-0.12,1.68l-1.03,0.59l1.24,6.15l1.02,3.16l1.64,0.79l1.23,1.75l2.04,0.43l1.85,1.25l0.57,0.11l1.26,-0.41l1.39,0.2l1.84,1.04l0.77,-0.39l1.71,0.0l2.77,-1.21l2.19,0.5l1.34,-0.62l0.88,-1.95l0.69,-0.54l1.52,-0.36l0.69,0.22l0.38,0.55l-0.47,1.46l0.69,1.45l-0.15,1.82l1.16,1.77l-0.39,1.97l-1.43,1.01l-1.76,-0.7l-1.13,0.24l-1.06,-0.21l-3.5,1.17l-2.7,0.19l-4.12,1.59l-0.88,1.16l-0.03,0.67l0.99,2.1l0.11,1.21l-0.8,0.67l-1.8,0.4l-0.46,0.59l0.01,0.63l2.21,2.47l1.07,0.57l2.33,0.03l1.64,1.33l0.87,1.46l0.43,2.21l-0.59,0.95l-3.32,1.33l-0.31,-0.01l-0.09,-0.98l-0.76,-1.19l-1.72,-0.45l-0.99,0.55l0.19,7.02l0.56,1.52l1.87,2.64l-0.75,1.42l-2.66,0.44l-2.87,-1.98l-0.29,-0.38l0.59,-1.58l-0.65,-0.89l-1.49,0.26l-1.32,0.66l-0.62,0.81l-0.38,1.25l-0.93,0.27l-0.8,-1.35l-0.81,-0.46l-2.36,0.15l-2.37,-0.75l-2.62,0.03l-0.56,-0.65l-0.06,-1.39l-0.91,-0.21l-1.44,0.8l-0.41,0.77l-0.22,5.75l-0.91,1.03l-3.07,2.04l-0.18,0.86l0.58,0.69l-0.36,0.8l-2.54,1.42l-3.18,1.16l-1.39,-1.09l-0.78,0.05l-0.42,0.67l0.21,1.39l-0.75,1.99l-1.04,-0.67l-1.53,-0.23l-0.54,-1.73l-2.26,-1.43l-0.39,-0.57l-0.11,-1.38l0.73,-1.34l0.34,-0.08l2.56,1.5l0.99,-0.14l1.03,-0.78l1.53,0.76l2.78,-3.75l-0.19,-0.69l-1.38,-0.85l-0.38,-0.73l0.33,-1.04l1.14,-1.39l0.31,-1.44l-0.35,-1.02l-1.31,-0.83l-0.49,-2.5l0.29,-1.27l0.46,-0.6l2.12,0.79l0.87,-0.42l0.54,-0.87l-0.12,-3.35l-1.72,-2.18l-0.08,-1.9l-1.45,-1.82l-0.93,-0.39l-1.02,0.2l-2.12,1.19l-6.1,1.13l-1.71,-0.05l-2.46,-0.66l-2.71,0.12l-0.69,-0.28l-0.43,-0.95l1.0,-1.04l0.14,-0.7l-0.82,-1.9l1.39,1.33l1.73,0.45l2.43,-0.55l1.29,-1.43l-0.03,-0.57l-0.61,-0.38l-3.06,0.55l-1.27,-0.53l0.04,-0.32l1.57,0.36l0.71,-0.62l-0.09,-0.83l-0.78,-1.15l0.96,-1.84l-0.38,-0.68l-2.77,0.61l-2.39,-0.18l-0.87,0.22l-1.43,2.29l0.29,1.74l-0.19,0.81l-1.27,-0.2l-1.56,1.09l-2.66,-1.04l-1.24,-1.01l-1.28,-0.2l-0.46,0.24l-0.21,0.62l0.68,2.0l-0.19,1.6l0.21,0.59l3.12,0.55l1.1,-0.15l0.1,0.39l-0.55,2.44l-0.6,0.36l-1.68,0.1l-1.61,-1.83l-0.62,-1.83l-0.6,-0.15l-0.56,0.47l-0.19,2.47l0.42,1.11l-2.09,4.22l-0.12,0.98l0.53,0.75l3.35,1.05l0.25,0.61l-2.43,2.42l-0.39,1.79l-0.73,1.25l0.16,0.52l0.56,0.3l2.45,-0.12l1.2,0.69l0.89,3.8l2.05,2.4l-0.64,1.04l-1.18,3.43l-0.18,1.43l0.11,2.2l0.8,1.33l0.19,1.94l-2.53,4.99l-0.87,0.81l-5.89,2.59l-2.01,1.8l-1.52,2.59l0.02,1.08l0.6,0.72l2.45,0.79l1.39,0.05l1.5,1.36l-2.98,1.57l-1.93,0.47l-2.21,1.15l-2.7,-0.33l-1.68,0.98l-0.59,-0.97l-0.83,-0.47l-1.34,-2.19l-1.43,-0.75l-1.43,0.61l-0.48,-0.26l-0.72,-2.86l-2.18,-1.34l-2.15,-1.97l-0.91,-0.2l-0.73,0.85l-0.66,-0.04l-2.15,-2.97l-0.57,-0.34l-2.93,0.76l-1.14,-0.82l-1.17,0.04l0.32,-1.25l-0.46,-1.22l0.13,-1.76l-0.24,-0.9l-1.4,-1.24l-0.65,0.06l-1.41,1.07l0.32,-2.39l-0.31,-0.73l-1.75,-0.71l-1.19,-1.94l-1.47,-0.23l0.28,-3.15l1.47,-1.08l0.28,-0.53l-0.77,-1.97l-0.12,-1.42l-1.32,-2.1l-0.38,-0.24l-0.65,0.19l-1.13,1.93l-1.34,0.87l-0.98,-1.08l-0.62,-1.36l-2.63,-2.03l-0.7,-1.62l0.87,-2.35l0.88,-1.21l1.13,0.05l0.78,-0.31l0.62,-1.27l-0.18,-0.76l-0.43,-0.3l-1.27,0.38l-1.91,-0.74l0.23,-2.35l-0.43,-1.01l-1.21,-0.11l-2.26,0.63l-0.78,1.08l-0.46,2.35l-0.86,0.68l-0.6,0.06l-1.89,-0.53l-3.52,-0.4l-1.51,-2.29l-2.14,-0.65l-1.84,-1.02l-1.46,0.26l-0.78,2.15l-0.36,0.2l-0.92,-1.62l-0.24,-1.27l-1.85,-0.15l-0.62,-0.94l-1.53,-0.29l-0.97,-0.75l2.33,-0.44l0.22,-0.89l-0.68,-0.67l-4.54,0.35l-2.17,-0.71l-1.13,-1.44l-0.59,-0.29l-2.11,0.47l-1.51,1.18l-0.76,-0.09l-0.9,-0.81l-0.82,0.05l-0.91,0.64l-0.15,0.93ZM294.16,288.97l0.26,-0.35l0.11,-0.1l-0.05,0.3l-0.31,0.15ZM252.61,250.52l-0.88,-0.6l-0.15,-0.41l0.59,0.24l0.44,0.77Z", "name": "Rajasthan"}, "IN-MP": {"path": "M191.91,423.84l-0.52,-3.36l-0.53,-1.39l0.74,-0.61l0.77,-0.34l2.88,0.29l2.23,-1.16l1.99,-0.5l3.36,-1.88l-0.0,-0.75l-1.53,-1.53l-4.03,-0.93l-0.42,-0.88l1.39,-2.39l1.85,-1.66l5.83,-2.55l1.04,-0.94l1.49,-3.12l1.15,-1.64l0.11,-1.95l-0.24,-1.12l-0.77,-1.25l-0.08,-1.88l0.16,-1.29l1.86,-4.79l-2.14,-2.67l-0.45,-2.8l-0.59,-1.21l-1.63,-0.91l-2.47,0.1l0.66,-1.0l0.32,-1.64l1.74,-1.48l0.81,-1.32l-0.17,-0.87l-0.45,-0.45l-3.45,-1.11l-0.08,-0.37l2.2,-4.61l-0.4,-1.42l0.1,-1.99l0.36,1.48l0.95,0.81l0.7,1.18l0.53,0.26l1.56,-0.03l1.01,-0.34l0.72,-0.72l0.5,-2.94l-0.75,-0.84l-1.19,0.14l-2.6,-0.34l0.17,-1.7l-0.66,-1.97l0.84,0.14l1.09,0.93l2.15,1.06l1.16,0.09l1.62,-1.1l1.02,0.31l0.63,-0.38l0.36,-1.3l-0.29,-1.62l1.1,-1.75l2.84,0.09l2.19,-0.57l-0.84,1.67l0.9,1.76l-1.84,-0.24l-0.48,0.64l0.06,0.81l0.84,0.71l1.12,0.24l2.91,-0.55l-1.3,1.1l-1.61,0.23l-1.34,-0.35l-1.47,-1.38l-0.77,0.01l-0.33,0.88l0.81,1.84l-0.85,0.94l-0.32,0.92l0.8,1.39l1.08,0.43l2.69,-0.13l2.41,0.65l1.95,0.06l6.25,-1.16l2.89,-1.35l0.81,0.55l0.9,1.26l0.02,1.76l1.69,2.09l0.14,2.99l-0.72,0.67l-1.35,-0.77l-1.15,0.13l-0.74,0.98l-0.34,1.56l0.56,2.82l1.31,0.91l0.28,0.62l-0.23,1.1l-1.45,2.03l-0.07,0.88l0.25,0.76l1.62,1.36l-2.15,2.93l-1.36,-0.75l-1.75,0.95l-3.0,-1.53l-0.78,0.44l-0.86,1.74l0.13,1.58l0.39,0.76l2.43,1.6l0.49,1.72l0.33,0.26l1.63,0.23l0.86,0.6l0.71,0.05l0.53,-0.62l0.69,-1.91l-0.18,-1.56l1.04,0.97l0.88,0.15l3.38,-1.22l2.74,-1.55l0.62,-1.43l-0.58,-1.02l2.89,-1.87l1.22,-1.46l0.23,-5.8l1.25,-0.97l0.03,1.13l0.96,1.07l0.65,0.22l2.18,-0.18l2.45,0.76l2.27,-0.16l0.37,0.22l0.5,1.22l0.8,0.37l1.54,-0.47l0.94,-2.01l2.1,-0.79l-0.46,2.16l2.85,2.18l0.96,0.53l3.22,-0.59l1.09,-2.16l-2.28,-3.57l-0.43,-4.0l0.27,-1.37l-0.24,-1.82l1.59,0.28l0.46,1.83l1.11,0.44l3.72,-1.46l0.82,-0.85l0.14,-0.79l-0.48,-2.47l-1.05,-1.74l-1.9,-1.51l-2.48,-0.08l-0.78,-0.44l-1.9,-2.1l0.23,-0.33l1.92,-0.41l0.89,-0.95l-0.08,-1.74l-0.97,-2.28l0.51,-0.72l3.91,-1.51l2.67,-0.19l3.37,-1.16l1.06,0.21l0.95,-0.26l1.95,0.71l1.88,-1.18l0.37,-0.58l0.33,-2.13l-1.25,-2.17l0.23,-1.44l-0.69,-1.42l0.48,-1.43l-0.97,-1.29l-1.87,-0.11l-1.6,0.8l-0.94,1.95l-0.61,0.55l-2.56,-0.43l-2.91,1.24l-1.6,-0.03l-0.73,0.39l-1.59,-1.02l-1.63,-0.22l-1.33,0.41l-1.98,-1.3l-1.68,-0.23l-1.39,-1.83l-1.51,-0.67l-0.88,-2.84l-1.3,-5.49l1.02,-0.67l0.31,-2.18l0.62,-1.04l1.1,-0.9l1.23,-0.38l0.55,-1.06l2.42,0.18l0.59,-0.28l0.95,-1.02l0.89,-0.44l0.58,-1.75l2.19,-1.47l0.56,-1.08l0.9,-0.2l1.61,-1.02l0.91,-1.21l2.0,-0.48l0.62,-1.26l0.58,-0.41l2.55,-0.13l2.61,-2.01l1.39,-1.95l2.46,-0.14l0.69,-0.61l0.16,-0.98l2.14,-0.08l3.22,-2.23l3.09,-0.81l0.88,-0.97l2.69,-1.32l-0.1,-1.03l1.58,-0.6l0.61,-1.23l1.4,-0.18l1.79,-0.82l1.11,0.48l1.32,-0.23l0.74,-2.26l-0.13,-1.3l1.54,0.32l0.58,-0.57l0.06,-0.52l1.15,-0.19l1.1,0.21l1.15,-1.25l2.21,0.06l0.6,0.87l1.21,0.11l1.07,1.0l1.77,0.32l1.5,0.84l1.12,-0.0l0.65,-0.6l1.15,0.01l1.42,-0.73l0.31,0.53l0.62,0.09l0.33,-0.27l0.47,0.74l0.85,0.09l2.08,1.98l1.97,-0.15l0.92,3.46l2.47,4.19l0.31,1.69l-0.36,1.13l0.63,0.93l-1.09,1.53l-1.67,0.49l-0.96,0.95l-0.03,1.06l0.54,0.96l-0.96,0.59l-0.16,1.24l1.03,1.32l-1.17,1.84l-1.04,2.8l-1.41,1.74l-0.79,2.01l-2.15,1.79l-0.42,1.83l0.82,2.19l-0.08,0.67l-0.87,0.47l-3.09,0.63l-2.0,1.1l-2.01,-0.16l-3.47,0.83l-0.72,0.75l-0.3,1.66l-0.43,0.6l-2.48,2.28l0.14,1.03l1.3,1.67l2.05,4.43l-1.1,3.43l0.3,1.25l-0.41,1.16l-1.97,1.91l-2.39,1.59l-0.5,1.2l1.73,2.46l0.18,1.91l0.95,1.42l-0.09,1.58l0.4,0.6l-0.05,0.55l-1.41,2.68l0.63,1.3l0.81,0.48l0.33,0.83l2.13,1.35l-0.66,2.0l1.03,1.4l1.2,0.28l1.31,-0.64l0.68,-0.76l0.44,-1.78l0.54,-0.38l1.29,0.66l3.7,3.07l1.13,0.44l1.71,0.11l0.29,1.21l0.51,0.5l1.39,0.24l2.0,-1.84l1.09,-2.43l1.6,-1.48l0.61,-1.1l0.21,-1.63l-0.77,-0.66l-1.18,-0.2l0.18,-1.5l-0.89,-1.24l-0.76,-1.86l-1.56,-0.8l-2.6,0.54l-0.4,-0.6l-0.1,-0.69l0.64,-1.42l-0.4,-4.14l-2.32,-3.07l-0.93,-5.45l-1.38,-3.44l-1.82,-1.91l0.46,-1.11l1.51,-1.78l-0.04,-0.98l0.34,-0.29l1.63,0.2l1.78,1.89l1.0,-0.11l0.24,-0.64l-0.22,-1.03l0.54,-1.16l-0.8,-1.21l0.38,-1.0l1.02,-0.28l0.21,2.56l0.28,0.42l0.67,0.24l1.06,-0.34l0.39,-0.55l0.01,-2.04l0.8,-1.02l0.43,0.73l-0.35,2.05l0.5,0.45l1.11,-0.0l-0.13,1.21l-0.65,1.35l0.06,1.31l-1.51,1.2l-0.74,1.59l0.05,1.24l0.86,0.77l1.08,-0.45l0.92,-1.08l1.46,-0.63l0.23,-1.37l0.95,0.5l-1.07,1.61l0.14,0.88l0.53,0.5l2.51,-0.66l0.27,1.38l0.64,0.34l0.66,-0.28l0.8,-0.96l3.2,0.58l0.73,-0.83l-0.57,-2.42l0.54,0.56l0.59,0.1l1.28,-1.19l1.03,0.15l0.67,-0.35l-1.84,2.96l-0.99,1.04l-0.22,2.1l0.69,0.76l1.57,0.06l0.34,-0.27l0.21,-2.05l0.73,0.13l0.64,1.13l0.95,-0.04l2.13,-2.35l2.82,0.98l3.59,-0.24l0.55,0.59l0.71,0.2l2.3,-1.07l-0.01,-0.76l-0.98,-1.46l0.31,-0.53l1.98,-0.41l3.08,-2.33l2.01,-0.92l1.31,0.28l1.46,-1.05l0.73,-1.06l0.9,0.24l1.34,-0.26l0.81,1.27l0.36,2.78l1.13,0.71l0.62,0.83l0.69,-0.02l0.56,1.65l-1.97,1.05l-1.44,1.71l-0.96,-0.01l-0.34,0.31l0.1,1.75l0.99,1.21l1.85,-0.32l1.64,0.37l0.55,-0.44l0.02,-0.69l0.89,0.96l1.03,-0.11l1.14,-0.73l0.14,-0.7l-1.44,-0.98l-0.23,-0.67l1.41,0.35l0.98,-0.14l0.49,-0.56l-0.02,-0.89l0.91,1.49l1.19,1.06l2.66,-0.26l0.57,-0.45l-0.02,-0.8l-1.53,-1.17l2.9,-0.26l0.82,-1.55l0.76,-0.22l0.37,0.5l-0.88,2.05l-0.17,1.21l-0.87,0.88l-0.27,1.12l-0.71,0.9l-0.01,0.88l0.65,0.49l1.01,0.13l2.85,-0.5l1.42,1.01l1.82,-0.42l2.77,1.85l0.48,-0.11l0.95,-1.14l1.13,-0.17l0.55,-0.44l-0.19,-1.79l1.86,-2.5l0.21,-1.01l-0.21,-1.35l1.88,-0.09l1.44,0.45l0.14,1.38l1.85,0.38l1.28,-0.26l0.5,-0.44l-0.0,-0.94l-0.92,-0.68l2.58,-0.76l1.08,2.35l-0.2,0.73l0.3,0.56l2.82,0.72l1.28,-0.01l0.48,1.09l0.94,0.37l1.83,-0.48l0.75,0.19l0.86,1.37l-0.24,1.06l0.26,0.65l2.72,2.08l2.45,0.41l2.82,1.69l0.96,-0.18l1.48,-1.0l-0.13,2.39l0.86,0.49l0.92,-0.62l0.09,1.92l0.52,0.37l0.8,-0.12l0.35,0.24l-0.59,1.47l0.13,0.65l3.0,0.17l0.76,-0.21l0.66,-0.93l-0.07,-1.74l4.89,1.07l3.33,-1.1l0.09,1.22l0.4,0.33l1.39,0.15l0.54,1.49l0.68,0.8l-0.36,0.47l-1.52,-0.19l-0.64,0.68l0.2,2.3l-0.31,2.05l0.32,0.63l0.66,0.4l0.01,2.03l-0.73,1.7l-0.24,1.96l-0.48,0.42l-0.99,0.18l-0.36,0.6l0.51,1.13l1.45,1.26l-0.08,1.5l1.94,2.08l-0.51,1.73l-3.3,1.36l-0.49,0.55l-0.31,1.33l-2.3,1.07l-1.01,0.87l-0.88,0.08l-7.25,-0.43l-1.86,-0.49l-3.75,-0.02l-2.21,-1.13l-2.21,-0.16l-3.22,1.48l-0.71,0.02l-1.74,-0.88l-1.97,-1.98l-1.49,-0.09l-0.93,0.68l0.04,1.82l1.74,3.3l0.13,0.87l-0.82,1.16l-1.16,0.74l-0.2,1.29l-0.68,0.92l1.15,2.78l0.98,0.35l3.34,-1.97l2.94,1.13l2.03,0.35l1.91,3.02l1.05,0.45l0.42,0.74l2.45,-0.02l2.02,1.71l-0.93,5.0l-0.6,1.3l-1.71,-0.05l-4.13,2.09l-0.4,0.98l0.22,2.14l-2.16,1.95l-2.51,1.09l-0.4,1.44l0.25,2.13l-0.72,1.02l0.15,1.54l-2.9,1.71l-0.81,1.84l-3.11,0.97l-3.42,2.57l-1.2,-1.63l-0.76,-0.29l-2.59,0.93l-1.23,0.78l-0.33,-0.11l-0.37,-0.87l-0.55,-0.26l-1.18,0.75l-1.36,2.21l-0.12,3.42l-0.63,1.08l-2.01,1.52l-0.47,2.63l-0.86,0.45l-0.09,0.55l0.46,1.25l-1.05,-1.17l-0.71,-0.26l-0.67,0.17l-1.14,1.39l-1.27,2.61l-0.33,1.02l0.08,3.35l-0.46,1.29l-0.84,1.13l-1.17,0.26l-0.81,1.51l-0.42,4.31l0.2,2.79l-0.79,3.1l-0.5,1.32l-1.2,0.7l-4.35,-2.38l-2.47,0.26l0.66,-1.14l-0.53,-1.51l-2.06,-1.52l-0.86,-1.78l-1.97,-0.57l-1.82,-1.32l-2.9,1.1l-0.95,1.06l-2.08,0.67l-1.29,-0.44l-1.59,0.81l-1.72,0.26l-1.05,-1.58l-1.84,-0.51l-3.21,0.31l-2.72,1.46l-0.66,-2.26l-1.15,-0.86l-0.48,-0.84l-1.97,-0.81l-2.96,-0.11l-2.32,-0.77l-0.87,0.22l-0.62,1.76l-4.01,1.3l-2.67,0.31l-2.03,0.7l-0.54,0.74l0.27,1.26l-0.51,0.33l-6.33,1.11l-4.0,-0.66l-1.57,-1.01l-0.97,-0.01l-1.3,0.64l-0.55,-3.04l-0.83,-0.67l-1.23,-0.09l-0.76,0.24l-0.93,1.06l-3.57,1.12l-1.56,1.75l-1.72,1.11l-5.31,1.96l-1.03,0.07l-2.53,-0.84l-2.73,1.48l-0.66,-0.51l-1.65,-0.17l-1.51,0.48l-1.41,-1.01l-0.7,0.0l-0.39,0.34l-1.68,-3.06l0.14,-0.72l3.36,0.16l0.93,-0.48l-0.89,-5.48l-1.4,-0.87l-0.32,-0.69l-0.8,-0.52l-4.42,-0.24l-0.78,0.24l-0.86,0.87l-1.11,0.34l-0.85,0.92l-1.1,-0.81l-2.12,0.08l-2.74,1.01l-3.44,2.43l-2.09,0.11l-1.09,0.46l-0.85,1.04l-0.3,2.63l-1.62,2.5l-2.88,2.12l-0.14,0.51l0.61,1.53l0.02,1.19l-0.72,1.14l-3.85,0.87l-1.98,2.37l-1.61,0.61l-2.78,0.38l-2.94,-0.34l-1.16,-0.59l-1.08,-1.5l0.86,-0.25l0.29,-0.6l-0.36,-2.94l-1.17,-2.7l-0.64,-0.52l-1.32,0.08l-2.71,-0.81l-2.23,-0.27l-2.14,0.52l-3.25,0.17l-2.54,-0.23l-3.15,0.44l-6.44,-0.32l-3.07,-0.67l-2.27,-1.01l-1.93,-3.14l-1.84,-1.33l-1.81,-0.18l-1.57,-0.99l-1.27,-0.25l-4.77,0.17l-1.46,-1.1l-2.02,-0.68l-2.12,-1.56l-0.9,-2.61l0.18,-3.47l-0.27,-1.11l-2.52,-2.68l-1.03,0.05l-1.18,1.1l-1.83,0.63l-0.3,0.75l-0.91,0.4l-1.79,0.03l-1.41,-0.68l0.36,-3.59l-0.75,-1.1l-0.65,-2.31l-0.92,-1.03l-0.2,-3.47l0.42,-0.63l1.49,0.91l2.06,-0.4l1.35,-0.99l0.42,-1.19l-0.17,-0.49l-0.87,-0.58l-3.69,-0.2l-2.05,-1.99l0.61,-0.64l1.89,0.55l1.15,-0.22l3.77,-3.23l1.72,-0.16l1.38,-0.98l2.78,-5.33l0.07,-0.76l-1.19,-1.96l-0.93,-0.37l-0.9,0.29ZM342.94,345.9l-0.07,-0.47l0.06,-0.58l0.99,-1.54l-0.98,2.59Z", "name": "Madhya Pradesh"}, "IN-MH": {"path": "M140.02,524.29l0.06,-1.24l-0.89,-1.35l0.45,-1.03l-0.02,-2.02l0.58,-0.43l0.77,-1.67l0.01,-1.67l1.8,-0.88l1.02,0.27l0.61,-0.35l2.1,-0.11l1.26,-0.53l1.63,2.69l1.38,-0.59l0.87,0.56l1.01,-0.49l0.85,0.82l0.58,0.11l0.82,-0.93l0.21,-1.81l0.82,-0.04l1.23,-0.66l0.57,-1.77l3.01,0.37l0.95,-0.4l-0.07,-1.27l0.49,-1.74l-0.34,-2.56l-0.66,-0.58l2.42,-3.82l0.56,-1.66l-0.48,-1.67l-0.94,-0.32l-0.37,-1.27l-0.99,-0.24l0.99,-0.38l0.9,-1.46l0.9,1.35l3.28,1.92l1.77,1.83l2.49,-0.21l2.88,-1.69l0.39,-0.98l-0.0,-1.07l2.33,-1.97l0.71,-1.34l-0.19,-3.58l-0.9,-2.69l-2.67,-3.15l-1.52,-0.55l-1.15,-1.45l-0.83,-0.24l-1.49,0.14l-2.13,-1.69l1.87,0.97l2.29,-0.02l2.26,-1.34l1.02,-2.45l1.02,0.6l2.51,-0.87l1.4,-3.41l2.42,-2.08l1.87,0.38l4.14,-1.13l1.72,-0.97l0.43,-1.02l-0.34,-1.17l-0.46,-0.42l-2.95,0.88l-1.44,-0.8l-1.14,0.58l-3.52,-0.08l-5.22,1.49l-1.82,-2.89l1.68,-0.47l0.65,-0.69l0.32,-1.01l-0.15,-0.9l-0.83,-0.77l-0.29,-2.57l0.27,-0.56l2.56,-0.97l1.38,-0.19l1.13,-0.92l2.52,-1.2l1.96,-0.35l2.37,0.85l2.05,-0.37l0.72,-0.45l0.19,-0.59l1.73,-0.61l1.41,-1.13l2.18,2.28l0.21,0.76l-0.17,3.62l0.77,2.62l3.13,2.41l1.63,0.45l1.6,1.13l4.83,-0.16l1.07,0.2l1.64,1.01l1.69,0.14l1.58,1.14l2.36,3.5l2.18,0.87l3.21,0.71l6.95,0.32l2.77,-0.44l2.5,0.23l3.35,-0.17l1.94,-0.51l2.2,0.26l2.69,0.81l1.26,-0.08l1.24,2.54l0.36,2.7l-1.11,0.57l0.15,0.97l1.09,1.49l0.87,0.53l3.81,0.66l4.02,-0.74l0.95,-0.46l1.82,-2.26l4.01,-0.99l0.96,-1.64l-0.02,-1.37l-0.56,-1.56l2.52,-1.7l1.81,-2.57l0.52,-3.12l0.5,-0.59l0.75,-0.35l2.31,-0.17l3.51,-2.47l2.54,-0.93l1.74,-0.08l0.77,0.73l0.74,0.08l1.15,-1.07l0.99,-0.26l1.28,-1.01l4.16,0.21l0.84,1.07l1.22,0.67l0.36,3.83l0.44,0.85l-3.7,-0.1l-0.72,0.76l0.04,1.29l1.97,3.68l0.53,0.02l0.58,-0.76l1.39,0.99l0.88,0.02l1.05,-0.43l1.38,0.13l0.82,0.55l2.93,-1.48l2.94,0.87l4.44,-1.33l3.05,-1.56l2.07,-2.14l3.51,-1.08l1.4,-1.22l1.25,0.34l0.42,2.93l0.32,0.47l0.78,0.04l1.24,-0.64l0.62,0.01l1.47,0.98l2.09,0.55l2.14,0.15l6.99,-1.28l0.7,-0.93l-0.15,-1.32l1.82,-0.62l2.66,-0.31l4.17,-1.36l0.59,-0.54l0.29,-1.34l1.77,0.62l3.23,0.14l1.66,0.54l0.8,1.02l0.92,0.57l0.58,2.17l0.81,0.57l1.25,-0.33l1.75,-1.17l2.95,-0.27l1.39,0.37l0.77,1.38l0.58,0.33l1.6,-0.12l2.05,-0.95l0.35,0.4l0.86,0.06l2.42,-0.77l0.92,-1.07l2.29,-0.91l1.67,1.15l1.92,0.55l0.2,1.01l0.5,0.63l2.02,1.48l0.35,0.91l-0.73,1.25l0.43,0.65l0.81,0.15l1.85,-0.32l4.3,2.41l1.39,-0.57l-0.01,0.89l-1.13,1.42l-2.68,1.41l-2.67,1.98l-0.97,4.16l0.16,1.64l0.77,1.33l1.09,0.52l1.28,-0.23l0.35,0.63l0.06,4.02l0.45,3.05l-1.84,1.2l-0.47,0.89l-0.02,0.79l0.38,0.48l0.66,0.16l1.78,-0.88l1.02,0.27l0.01,1.81l0.39,0.89l-0.58,1.41l-0.1,2.11l0.45,2.13l-1.09,0.47l-1.52,1.28l-2.81,0.5l-0.75,0.81l-0.36,2.4l0.18,0.72l3.49,0.54l0.73,2.48l-0.7,3.76l-2.02,-0.7l-1.12,1.16l-0.04,1.18l1.69,0.75l-0.51,0.69l-1.68,0.86l-0.09,0.89l0.85,0.59l1.62,0.25l0.63,-0.44l0.13,-0.95l0.77,-0.12l1.15,2.63l2.81,1.23l0.47,2.03l0.58,0.9l4.26,1.79l1.18,1.1l0.48,0.98l-0.64,1.2l-1.62,0.32l-0.53,0.42l-0.01,0.81l0.78,1.35l-1.97,0.98l-0.97,0.87l-1.04,-1.54l-2.0,-0.01l-0.88,-1.94l-0.71,-0.42l-0.85,0.24l-1.13,1.33l-1.18,0.61l-1.0,1.75l-1.36,0.8l-1.22,4.29l-2.27,3.01l-0.64,1.37l-0.01,1.37l2.24,3.09l-0.09,0.72l-2.24,1.45l-0.28,0.71l0.24,1.15l-0.3,0.22l-2.34,0.29l-2.31,-0.22l-0.58,-0.96l-2.01,-1.76l-2.23,-1.06l0.99,-0.99l0.21,-0.84l0.02,-1.59l-0.72,-3.35l-0.74,-0.8l-1.66,0.26l-0.06,-0.71l0.87,-1.58l1.42,-0.93l0.21,-0.5l-0.44,-2.8l0.57,-0.64l0.28,-0.94l0.23,-3.74l-1.23,-2.15l-1.96,-0.77l-2.06,-2.64l-2.29,-0.45l-3.08,1.08l-0.91,0.51l-0.3,1.12l-0.39,0.32l-1.26,-0.82l-4.24,-0.18l-1.47,-1.27l-3.01,-0.45l-0.87,-1.21l-1.35,-0.51l-2.56,0.37l-1.33,0.62l-0.81,1.12l-1.3,0.27l-1.56,-0.84l-0.34,-0.77l-1.28,-0.55l-0.99,-2.79l-2.09,-1.54l-2.16,0.04l-2.92,-1.29l-1.56,0.02l-1.1,-0.35l-1.07,0.25l-0.61,0.57l-1.9,-0.74l-1.36,-1.66l-1.24,-0.52l-0.54,0.27l-0.23,0.9l0.26,1.04l1.09,2.59l1.15,1.04l-0.25,0.64l-1.24,0.79l-0.61,0.83l-0.91,2.35l-0.06,2.8l-2.01,0.66l-0.77,0.68l-1.2,2.21l0.22,2.5l-0.2,0.74l-3.33,-0.06l-0.9,-0.6l-0.87,-1.24l-2.11,-0.28l-1.27,0.34l-0.99,0.93l0.11,0.69l0.53,0.26l-1.01,1.36l-0.7,2.23l0.12,1.03l-2.39,2.03l-0.22,0.63l0.57,2.11l1.03,0.18l0.28,0.94l0.86,0.22l0.16,1.21l2.03,1.81l-2.16,0.84l-1.71,3.25l-1.27,-0.02l-0.95,0.63l-0.33,0.77l0.19,1.51l-0.52,1.27l-2.57,0.53l-1.5,1.72l-0.5,2.61l-1.3,1.55l1.51,1.29l0.1,0.66l-1.31,-0.1l-1.69,1.02l-0.3,-1.06l-2.38,-1.06l-0.11,-2.21l-0.63,-0.91l-1.3,-0.5l-1.15,0.41l-1.16,1.82l-0.03,2.41l-1.43,0.66l-1.86,1.41l-0.68,0.82l-0.31,1.03l-1.26,0.02l-1.02,0.42l-1.68,-0.05l-1.83,0.93l-0.27,0.64l0.14,1.57l-0.48,2.32l0.04,2.02l-0.55,1.47l-0.5,0.44l-3.0,-0.44l-0.32,0.42l0.47,2.13l-1.5,1.02l-0.86,2.44l-2.06,-1.89l-2.52,-0.23l-0.88,1.08l-0.94,0.5l-0.2,1.02l-1.14,0.56l-0.95,1.3l-2.46,0.92l-0.17,0.5l0.77,1.23l0.09,1.48l-0.71,1.34l1.01,2.17l0.92,0.74l-0.6,0.51l-2.45,-0.08l-1.78,-0.99l-1.68,0.57l-1.38,-0.34l-2.26,1.05l-0.94,-0.14l-2.15,0.79l-0.87,-0.67l-0.28,-1.22l-0.68,-0.84l-0.88,0.28l-0.74,-0.28l-1.46,1.22l-0.85,-1.16l-1.9,-0.32l-0.65,-1.35l-0.88,-0.45l-0.63,0.12l-2.43,3.16l0.98,3.28l0.92,0.73l0.24,0.71l-0.5,2.6l1.28,2.16l-0.74,1.05l0.55,1.29l-0.2,0.88l-2.2,-1.25l-1.22,1.13l-1.28,0.53l-1.19,-0.68l-1.83,-0.01l-1.52,0.68l-2.02,0.12l-0.77,0.53l-0.02,1.43l-2.01,0.92l-1.23,-0.4l-1.49,-1.22l-0.67,-1.03l-1.68,0.2l-1.2,-0.27l-1.49,2.14l-2.45,1.04l0.56,3.05l-1.89,-0.24l-1.82,0.86l-0.57,0.65l-1.08,0.31l-0.5,1.26l-0.78,0.59l-0.04,0.6l0.64,0.85l-1.22,0.28l-1.77,1.34l-0.89,-2.23l-2.91,-0.76l-0.53,0.3l-0.53,1.56l-1.66,1.42l-0.93,-0.68l-0.61,0.31l-0.37,0.87l-0.8,-0.53l-0.65,0.1l-0.76,2.26l0.62,0.38l0.81,-0.38l0.26,0.87l1.12,0.26l0.23,0.93l0.78,0.55l-0.95,0.16l-0.48,0.69l0.62,2.98l0.63,0.32l0.91,-0.41l2.9,1.47l0.22,0.97l-0.19,2.82l-1.77,0.32l-0.86,0.93l0.13,0.7l1.32,0.54l0.03,0.51l-0.3,1.18l-2.16,3.44l0.6,1.18l-1.19,2.09l-1.32,0.88l-1.54,0.11l-0.16,-1.09l-1.05,-0.25l-2.28,1.88l-0.4,0.99l-0.63,0.47l0.15,0.72l-0.91,0.04l-2.08,0.78l-1.43,-0.79l-1.0,-2.75l-1.76,-0.62l-0.53,-1.11l-0.79,0.21l-0.89,1.14l-1.83,0.13l-0.71,0.34l-1.25,-0.26l0.03,-1.62l-1.31,-2.88l-3.48,-3.53l0.79,-0.83l-0.41,-0.4l-0.8,-0.07l-0.82,-0.82l0.33,-0.64l0.06,-2.16l0.71,-0.87l-0.01,-0.47l-0.44,-0.14l-0.95,0.42l-0.17,-1.06l-0.71,-0.29l-1.12,-4.25l-0.51,-0.32l0.58,-0.47l-0.03,-0.73l-1.12,-0.76l-0.68,-2.42l-0.45,-0.54l1.06,0.74l0.82,0.06l0.41,-0.32l-0.74,-0.71l0.5,-0.8l-1.26,-0.43l-0.4,-0.57l0.51,-0.22l0.18,0.36l0.66,0.09l0.32,-0.64l-0.15,-0.76l-0.57,-0.46l-0.98,0.18l0.18,-1.71l-0.97,-1.49l0.42,-2.29l-0.5,-0.3l-0.41,-0.93l-0.12,-0.62l0.28,-0.53l-0.31,-1.31l0.56,-1.5l-0.17,-0.55l-0.76,-0.39l0.59,-1.37l-0.03,-0.91l-0.58,-1.34l0.09,-1.05l-1.37,-3.59l0.76,-0.16l0.19,-0.63l-1.62,-2.66l-0.76,-0.65l-0.09,-0.38l0.56,-0.85l-0.28,-0.75l0.12,-0.77l-1.59,-2.24l2.03,-0.65l-0.02,-0.73l-1.83,-0.43l-0.38,-0.57l0.05,-1.09l-0.52,-0.83l0.53,-1.46l-0.55,-1.76l-0.81,-1.2l-0.45,-1.72l-1.42,-2.31l0.42,-0.88l-0.28,-0.67l-0.53,-0.26l0.98,-0.85l0.18,-0.85l-0.51,-0.41l-0.94,0.54l-0.34,-0.37l-0.61,-4.09l-0.38,-0.69l-0.67,-0.29l0.19,-0.69l0.62,0.73l1.75,0.17l0.54,0.38l-0.31,0.81l0.58,0.48l0.45,-0.14l0.51,-0.78l-0.02,-2.09l-0.62,-0.75l-1.94,-0.11l-0.55,-0.53l0.14,-0.36l-0.36,-0.54l-1.6,-0.94l-0.01,-1.02l-0.62,-1.29l0.45,-2.33l0.71,-0.18l1.81,2.51l0.68,-0.15l0.19,-0.62l-0.86,-1.02l-0.88,-2.03l-0.71,-0.34l-0.82,0.14l-1.64,-3.67l-0.09,-2.7l0.29,-0.7l1.18,0.09l0.55,-0.62l0.88,0.95l0.04,1.25l0.91,0.59l0.53,-0.48l-0.1,-1.31l0.64,-0.91l-0.12,-0.67l-0.88,-0.45l-0.18,-1.43l-0.6,-0.05l-0.65,0.44l-1.04,-0.76l0.14,-0.26l0.68,-0.01l0.31,-1.08l1.2,-0.1l0.34,-0.51l-0.2,-0.37l2.02,-0.66l0.31,-0.64l-0.31,-0.57l-0.52,-0.07l-1.35,0.42l0.13,-1.87l-0.65,-0.58l0.22,-2.19l-0.4,-0.44l-0.59,0.23l-1.02,1.69l-0.22,1.38l0.37,0.69l-0.13,0.31l-0.7,0.72l-0.08,-0.33l-0.66,-0.2l-0.49,0.46l-1.25,2.43l-0.6,-0.82l0.51,-1.73l0.36,-0.09l0.25,-0.76l-0.32,-0.73l0.29,-1.17l-0.39,-1.12l0.4,-0.71l-0.24,-0.49l-0.7,-0.1l1.07,-1.85l-0.27,-0.66l-0.46,-0.04l-0.91,0.92l0.19,-2.07l2.08,-0.09l0.63,0.65l1.46,0.32l1.18,-0.24l1.53,2.69l0.5,0.1l0.71,-0.39l-0.01,-0.7l-0.42,-0.22l-0.17,-1.08l-1.36,-1.37l-2.73,-0.21l-1.89,-1.29l-1.07,0.49l-1.01,-1.35l-0.33,-2.78l3.69,-1.53l0.25,-0.37l-0.25,-0.37l-0.94,-0.31l-1.71,0.45l-0.95,-1.4l-1.01,-0.32l-0.28,0.39l0.16,-0.89l-0.58,-2.49l0.85,-0.61l-0.33,-1.12l0.55,-0.55l-0.18,-1.26l-0.69,-0.14l-0.89,1.09Z", "name": "Maharashtra"}, "IN-TN": {"path": "M249.84,785.28l-0.33,-0.95l0.1,-1.86l1.6,0.49l1.48,-0.2l1.11,-1.27l1.32,-0.6l0.3,-1.05l1.07,-0.88l1.68,0.16l0.34,0.48l0.05,1.28l0.84,0.64l5.71,-0.26l2.06,0.51l0.81,-0.69l0.4,-2.03l2.08,-2.99l2.57,-0.44l2.02,1.94l0.79,0.31l0.61,-0.27l0.51,-1.19l2.74,-0.17l1.14,-0.44l2.26,1.02l2.41,-0.26l1.0,-0.81l1.68,-3.48l0.65,-0.34l3.83,-0.43l1.03,-0.61l3.07,-4.27l0.07,-0.85l-1.01,-1.75l-1.33,-0.89l-1.06,-0.22l-5.49,-0.07l-0.44,-1.25l2.84,-2.25l1.44,-2.2l0.47,-2.63l-0.45,-0.65l-0.84,0.03l0.12,-0.69l-0.38,-1.02l1.14,-3.22l2.33,-0.11l2.46,-1.36l-0.16,-1.26l1.0,-1.73l0.33,-1.31l1.11,-0.38l1.66,-0.0l1.7,1.66l1.0,0.45l0.79,-0.3l0.66,-1.11l0.44,0.08l2.35,1.72l2.91,0.96l1.35,1.89l2.47,1.79l2.53,0.3l0.89,-0.42l1.33,-1.4l0.29,-1.48l0.98,0.03l1.45,-1.18l1.06,-2.6l1.03,-4.37l0.4,-0.53l1.29,-0.38l0.6,-0.96l3.87,-0.67l0.65,1.17l0.79,0.15l0.91,-0.67l0.3,-1.05l0.55,-0.02l0.97,0.23l0.51,0.92l2.1,0.65l2.72,-0.3l0.76,-0.54l2.09,-2.71l1.31,0.59l0.57,-0.08l2.15,-2.17l1.18,-0.62l0.42,-0.71l-0.07,-0.91l0.47,-1.75l0.53,-0.28l1.75,0.15l1.06,1.37l0.63,0.35l2.87,-0.38l0.18,1.3l1.04,0.76l2.31,-0.02l0.42,-0.96l-1.05,-0.98l-0.01,-0.36l1.61,0.07l4.38,-2.25l0.44,-0.72l0.05,-1.3l2.65,-1.83l-0.01,-0.75l-0.67,-0.64l1.64,0.69l-0.38,1.1l0.47,0.56l3.19,0.35l1.48,-0.39l1.4,1.36l0.73,-0.21l0.37,2.77l-0.32,2.03l-0.47,0.24l-0.18,1.0l0.58,0.53l-0.78,1.59l0.16,1.33l-0.83,1.23l-1.04,9.49l-2.92,8.93l-1.83,3.47l-1.09,0.85l-1.06,1.81l-2.53,1.85l0.16,0.59l0.84,0.04l-3.55,5.53l-0.05,1.49l-0.3,0.47l-1.72,1.18l-0.44,-0.37l0.52,-1.02l-0.5,-0.57l-1.34,0.11l-1.1,-0.87l-0.45,0.2l-0.56,0.93l0.7,1.08l0.11,0.84l0.4,0.31l-0.32,1.19l0.17,0.58l1.13,0.75l2.01,0.21l-0.67,1.5l-1.05,6.13l1.05,4.71l0.4,0.35l0.61,-0.29l0.1,0.95l-2.0,0.22l-2.44,2.58l0.36,0.58l0.4,-0.05l2.7,-2.02l1.33,0.48l0.06,2.28l0.62,3.2l-0.18,5.1l-0.92,-0.09l-0.81,0.43l-1.49,-0.42l-0.49,0.56l0.19,0.5l-0.54,-0.02l-0.42,0.61l0.15,1.36l1.28,0.83l1.44,0.41l0.03,0.97l1.52,1.03l0.49,13.03l-0.26,2.66l-1.42,0.34l-0.31,-0.79l-0.71,-0.39l-3.95,-0.65l-0.57,0.16l-0.15,-0.37l-0.92,-0.24l-1.62,0.14l-0.37,0.6l-1.79,0.33l-2.01,-0.48l-3.57,2.3l-0.57,0.81l-0.07,0.98l-0.83,0.53l-0.21,0.7l0.26,2.63l0.76,1.39l-2.05,1.82l-1.8,2.46l-1.51,2.81l-1.66,1.67l-1.79,2.49l-0.15,0.98l-1.21,1.73l-0.77,3.4l0.09,0.95l0.61,1.22l3.32,3.21l1.25,0.55l2.2,0.29l-1.72,0.32l-1.86,-0.59l-2.21,-0.03l-1.0,0.68l-2.02,0.14l-2.57,0.91l-1.52,0.99l-1.66,0.14l-1.25,1.21l-5.65,0.86l-2.39,1.3l-4.3,3.53l-1.8,2.81l-0.65,3.87l0.32,0.48l-1.12,2.25l-0.31,0.0l-0.34,0.62l0.79,1.81l-0.42,3.13l-1.41,1.59l-0.66,2.01l-1.71,0.61l-5.96,3.6l-1.22,1.49l-5.3,1.31l-1.05,0.76l-0.09,0.97l-1.21,0.15l-1.8,-0.34l-4.2,-1.29l-0.71,-0.71l-1.86,-0.93l-2.94,-2.68l1.1,-0.45l0.27,-1.46l1.29,-1.9l-0.16,-1.64l1.05,-0.34l1.18,-1.84l-0.4,-1.16l-2.42,-2.44l-0.23,-1.72l1.65,-2.45l0.62,-2.26l-0.4,-0.73l-1.24,-0.88l-1.07,-2.96l1.19,-0.85l0.75,-1.07l2.53,-7.34l0.84,-1.38l0.92,-2.56l1.1,-1.19l-0.19,-1.38l-1.73,-2.54l-1.26,-0.19l-1.8,0.71l-1.71,-0.93l1.56,-5.5l-0.33,-2.9l1.03,-2.56l-1.11,-3.46l1.54,-3.34l0.06,-1.34l-0.72,-0.72l-0.37,-1.59l-0.96,-1.63l-0.72,-0.66l-1.08,0.13l-2.94,1.32l-3.15,2.41l-1.14,-0.38l-2.36,-2.12l-0.06,-1.8l-0.9,-1.93l0.55,-3.53l-0.17,-2.56l1.09,-0.6l0.57,-0.74l0.43,-3.33l-0.23,-0.65l-0.94,-0.6l-0.87,-1.77l-3.86,-1.64l-0.66,-0.88l-0.13,-0.87l0.37,-1.13l1.9,0.19l0.65,-0.91l-0.74,-0.92l-0.83,-2.15l-0.87,-0.98l0.45,-1.93l-0.71,-0.36l-1.63,0.94l-2.99,0.25l-1.41,-0.46l-1.27,0.3l0.6,-1.1l2.2,-1.72l0.28,-0.77l-0.18,-0.49l-0.71,-0.39l-1.01,-1.28l-1.19,-0.47l-1.21,-0.95l-4.71,-1.32l-0.24,-0.32ZM341.41,854.52l0.89,-0.01l1.99,-1.02l0.32,0.12l-0.32,0.93l0.54,1.1l-1.22,-0.66l-2.2,-0.45ZM352.97,822.23l0.25,0.38l-0.78,-0.16l0.52,-0.21ZM353.99,822.77l0.71,0.09l0.49,0.17l-1.19,-0.25Z", "name": "Tamil Nadu"}, "IN-PY": {"path": "M432.94,621.28l0.12,-0.11l0.06,0.17l-0.03,-0.0l-0.16,-0.05ZM434.43,621.71l0.34,-0.0l0.03,0.12l-0.21,-0.03l-0.16,-0.08ZM355.48,770.41l0.24,-0.33l0.83,0.78l1.19,-0.08l-0.49,1.07l1.07,0.9l0.61,-0.12l1.09,-0.94l-0.97,2.81l-1.98,-0.18l-0.66,-0.53l0.23,-1.51l-1.16,-1.87ZM356.86,803.07l0.79,-0.26l-0.03,-0.93l0.92,0.32l0.8,-0.45l0.68,0.07l0.07,4.51l-0.78,-0.6l0.25,-0.69l-0.28,-0.5l-2.69,-0.99l0.29,-0.48ZM218.44,768.85l0.02,-2.05l1.16,0.12l1.63,-1.29l0.73,0.2l-0.37,0.3l-0.72,-0.09l-0.44,0.41l-0.27,1.66l-1.25,1.09l-0.5,-0.37Z", "name": "Puducherry"}, "IN-AP": {"path": "M264.69,675.87l0.59,-0.76l0.07,-1.39l0.36,-0.6l2.8,1.59l2.62,0.61l1.43,-0.37l0.97,0.82l0.73,-0.01l1.54,-1.37l1.31,-2.8l0.15,-1.56l-0.84,-4.18l-0.77,-0.9l-1.69,-0.61l-0.35,-2.03l-1.24,-2.4l0.68,0.17l0.39,-0.54l-0.25,-3.31l0.26,-0.71l0.58,-0.39l1.35,0.21l0.43,-0.69l-1.06,-2.44l-0.71,-0.66l0.22,-3.36l1.07,-1.31l2.59,-1.37l1.85,-0.28l2.42,0.6l4.32,0.13l1.56,-1.78l-0.11,-5.3l0.29,-2.68l1.74,-1.65l0.23,-0.94l-0.19,-0.53l-0.65,-0.77l-1.33,-0.57l-3.05,-0.09l-2.95,-0.77l-0.81,-0.99l3.28,-2.1l0.59,-1.33l1.2,-0.69l0.63,-1.85l-0.17,-0.57l-0.53,-0.26l0.62,-0.61l0.01,-0.5l-1.05,-1.21l0.15,-1.25l0.6,-1.07l0.04,-4.5l0.99,-2.39l-1.06,-2.3l-0.29,-1.52l-1.7,-0.89l0.14,-1.28l3.71,-4.76l0.84,-1.7l1.36,-0.46l0.8,-1.28l1.71,-0.45l1.19,-2.36l-0.1,-0.48l-0.75,-0.34l-2.14,0.93l-0.19,-0.69l-0.45,-0.3l-2.59,0.04l-2.16,-1.31l1.48,-2.39l1.78,-0.93l0.36,-0.49l-0.05,-1.04l-0.88,-1.04l0.17,-0.39l3.37,-2.8l0.33,-0.72l-0.5,-2.65l-1.6,-2.0l1.29,-0.9l-0.29,-2.04l-0.67,-1.77l0.45,-1.86l-0.92,-0.71l0.14,-0.69l-0.41,-0.76l-1.22,-0.85l1.13,-1.1l0.45,-2.51l1.0,-1.27l2.52,-0.58l0.7,-0.58l0.49,-1.38l0.0,-1.97l0.53,-0.34l1.61,-0.16l1.72,-3.28l2.15,-0.78l0.23,-0.36l-0.34,-1.09l-1.84,-1.47l-0.22,-1.32l-0.91,-0.24l-0.46,-1.07l-0.79,-0.01l-0.36,-1.59l2.55,-2.32l-0.08,-1.17l0.67,-2.12l1.1,-1.47l-0.09,-0.62l-0.52,-0.3l1.17,-0.67l1.93,0.21l0.99,1.37l0.94,0.51l3.82,0.06l0.7,-0.84l-0.2,-2.94l1.1,-2.01l0.66,-0.49l1.6,-0.35l0.53,-0.52l0.29,-3.48l0.9,-2.06l1.51,-1.08l0.48,-1.2l-0.25,-0.8l-1.04,-0.7l-1.01,-2.43l-0.11,-1.01l1.12,0.56l0.9,1.36l2.14,0.86l1.88,-0.79l1.03,0.35l1.4,-0.06l2.99,1.32l2.05,-0.07l1.73,1.25l1.07,2.89l1.36,0.62l0.25,0.68l1.79,1.04l1.99,-0.29l0.95,-1.2l1.14,-0.51l2.17,-0.33l0.97,0.36l0.92,1.25l3.18,0.53l1.67,1.34l4.21,0.15l0.63,0.59l0.8,0.23l0.8,-0.43l0.38,-1.24l0.6,-0.33l2.94,-1.04l1.61,0.26l2.07,2.63l1.96,0.76l0.99,1.71l-0.24,3.47l-0.86,1.68l0.37,2.75l-1.36,0.99l-1.06,2.07l0.34,1.38l2.14,0.09l0.69,3.21l-0.02,1.49l-0.09,0.45l-1.23,1.17l-0.02,0.58l2.7,1.38l1.76,1.5l0.97,1.3l2.69,0.3l2.3,-0.25l1.3,-0.53l0.65,2.12l1.01,1.62l0.57,0.07l0.54,-0.54l0.85,0.72l2.42,-0.54l2.78,1.95l3.43,4.07l2.24,4.82l0.1,0.39l-1.3,0.98l0.21,1.46l0.85,0.41l1.52,-0.16l0.8,-1.46l0.32,0.3l0.19,1.39l0.64,0.71l2.5,-0.43l-0.56,1.11l-0.13,1.27l1.26,3.31l0.2,3.88l0.99,1.96l0.73,0.43l0.68,-0.01l3.28,-1.92l2.72,1.08l4.53,-0.1l2.71,0.61l0.54,-0.36l0.41,-0.86l2.25,0.87l2.32,-1.68l1.53,-0.34l1.16,-1.21l2.62,-1.27l2.95,-1.92l2.16,-0.31l1.52,-1.07l1.35,-0.19l1.09,0.31l1.49,1.22l2.48,0.09l0.83,-1.36l1.55,-0.1l0.49,-0.61l-0.17,-1.85l0.74,-0.51l0.17,-0.52l-1.52,-1.91l1.52,-2.75l-0.28,-1.1l0.48,-1.33l0.06,-1.57l1.95,-3.0l1.51,0.29l0.18,2.62l2.61,2.97l-0.52,1.6l0.12,0.91l0.46,0.47l1.33,0.37l0.44,0.03l0.56,-0.48l0.51,-1.52l3.2,-1.82l0.51,-1.01l0.02,-1.54l0.74,0.0l1.56,0.66l0.07,1.24l0.76,0.46l1.63,-0.08l1.47,-0.67l0.98,-0.1l0.56,-0.58l0.14,-0.85l-0.35,-1.36l1.58,-2.2l-0.21,-0.73l-1.06,-0.17l-0.66,-1.2l0.16,-1.29l2.94,-3.66l0.7,-0.12l0.81,0.62l0.73,0.08l1.77,-0.8l2.21,-1.8l1.98,-1.03l0.06,-1.12l-0.63,-0.87l-0.79,-0.25l-1.37,-2.23l0.86,-0.26l3.12,1.32l0.82,-0.81l-0.07,-0.7l0.43,-0.9l-0.25,-0.94l0.63,1.68l0.95,0.15l0.99,-1.63l1.13,-0.74l0.49,-1.38l2.55,3.51l0.75,2.17l0.48,0.59l0.48,0.05l0.47,-0.47l-0.04,-1.94l0.98,0.08l1.57,4.35l1.49,1.81l3.28,0.09l2.2,-0.35l2.93,1.04l5.54,-1.07l1.09,-1.13l0.62,-1.56l0.98,-0.06l1.31,-1.51l0.42,-1.9l-0.15,-0.67l1.43,-0.02l1.38,-1.1l2.15,-1.02l0.56,0.31l0.53,-0.11l0.65,-0.92l-0.09,-1.22l0.85,-0.03l-0.54,1.48l0.68,1.11l0.49,0.03l-0.47,1.04l-2.23,3.0l-1.15,0.57l-2.77,4.48l-2.82,2.96l-0.73,1.38l-1.6,1.1l-1.15,1.5l-1.5,0.86l-1.27,0.17l-0.2,0.99l0.68,0.39l-3.6,3.35l-1.01,2.48l-0.96,0.74l-9.31,4.2l-5.02,3.04l-1.05,0.92l-0.79,1.44l-2.3,1.96l-0.27,-0.36l-0.72,0.17l0.02,1.59l-0.64,0.52l-0.41,1.5l-2.25,2.68l-1.09,0.75l-0.71,-0.8l-1.21,0.21l0.09,1.05l1.36,0.64l-1.18,0.69l-0.95,-0.02l-0.33,0.64l0.63,0.87l-4.38,1.88l-5.68,3.7l-0.6,-0.27l-1.36,0.9l-3.72,1.43l-7.5,4.53l-1.63,2.1l-1.66,1.0l-2.23,2.57l-1.51,3.41l0.08,1.5l0.46,0.72l1.58,0.79l1.39,-0.02l-0.85,4.85l-0.72,1.56l-0.34,-0.21l-0.64,0.36l0.4,1.35l-1.04,0.36l-1.68,1.64l-3.44,1.81l-1.69,0.26l-1.26,1.15l-1.04,0.04l-0.51,0.6l-2.47,0.43l-3.09,1.68l-1.37,0.3l-1.56,-0.75l-2.35,-0.2l-0.15,-0.58l-0.72,-0.39l-0.52,-0.02l-0.33,0.68l-1.09,-0.27l-1.67,0.39l-0.14,-0.58l-0.74,-0.5l-1.17,0.41l-1.79,0.07l-1.92,1.15l-0.53,0.79l0.21,1.29l-0.76,0.97l-2.28,6.46l-0.11,1.95l-3.74,2.84l-0.92,1.13l-0.06,0.8l0.57,1.13l-2.57,-2.06l0.0,-4.01l-0.39,-1.55l-0.36,-0.29l-0.5,0.52l-0.41,-0.01l-0.14,0.47l0.47,1.18l-0.03,2.41l-1.75,4.39l-0.16,-2.66l-0.88,-1.48l-0.76,-0.46l-2.81,-0.47l-0.67,0.59l-1.07,0.05l-1.2,0.52l-0.67,-0.32l-3.79,2.32l-1.37,0.39l-3.56,3.09l-2.52,5.95l0.09,0.92l-2.32,3.04l-1.15,2.69l-0.28,3.27l-0.91,3.59l0.05,2.53l1.66,9.47l0.36,0.68l1.24,1.01l0.53,1.67l-0.88,0.68l-0.09,0.67l0.52,0.29l0.92,-0.16l-0.53,2.8l-0.02,3.74l-1.28,2.53l-1.34,0.32l-1.03,0.97l-0.28,0.8l0.6,0.58l0.7,-0.18l1.35,-1.13l-0.31,1.02l0.08,1.41l0.74,3.85l3.06,7.11l-0.1,1.25l-0.75,1.85l0.88,2.52l-2.65,-3.71l-0.68,0.29l-0.0,1.53l-1.2,-0.83l-0.32,1.26l-1.21,1.55l0.16,0.9l1.44,1.97l-1.28,-0.67l-0.81,0.14l-0.23,0.82l0.76,0.9l-1.54,0.67l-0.98,0.96l-0.37,0.8l-0.0,1.1l-4.14,2.13l-1.51,-0.11l-0.43,0.24l-0.2,1.13l0.99,1.03l-1.6,-0.04l-0.56,-0.31l-0.13,-1.26l-0.58,-0.5l-2.98,0.35l-1.45,-1.63l-2.26,-0.23l-1.14,0.77l-0.55,3.0l-1.21,0.66l-1.92,2.04l-0.89,-0.53l-1.16,0.1l-2.64,3.15l-2.32,0.28l-1.86,-0.57l-0.43,-0.86l-1.41,-0.39l-1.2,0.29l-0.34,1.11l-0.43,0.35l-0.49,-0.96l-0.74,-0.38l-4.19,0.72l-0.84,1.11l-1.18,0.3l-0.67,0.81l-1.1,4.55l-0.94,2.36l-1.21,0.96l-0.58,-0.31l-0.63,0.22l-0.3,1.75l-1.22,1.28l-1.26,0.29l-1.25,-0.27l-2.28,-1.65l-1.18,-1.67l0.49,-1.04l-0.22,-1.64l1.12,0.41l1.29,-0.57l0.58,-0.55l0.25,-1.16l2.34,1.53l1.22,-0.06l0.18,-0.61l-0.23,-0.64l-0.55,-0.73l-0.93,-0.53l1.23,-1.78l0.45,-1.4l1.33,-1.04l0.36,-1.9l1.04,-1.54l0.39,-2.6l-0.23,-1.04l-0.44,-0.45l-1.33,0.66l-1.64,-1.13l-1.52,-0.39l-0.68,0.28l-0.85,-1.4l0.29,-1.11l0.25,-5.76l-2.41,-0.54l-1.07,0.43l-1.06,-0.1l-1.4,-0.36l-1.79,-1.79l-1.64,0.09l-0.25,-0.55l1.04,0.02l0.45,-0.71l-0.69,-1.44l0.46,-1.37l-0.59,-2.04l-2.02,-1.06l-0.89,0.52l-1.23,-0.07l-0.99,0.93l-0.07,-0.92l0.96,-1.22l-0.02,-1.23l-0.48,-0.53l-1.02,0.4l-0.82,1.05l-0.97,-0.53l-1.68,-0.25l-0.5,0.21l-0.53,0.99l0.57,1.25l-1.57,1.32l-1.31,0.57l-0.59,1.23l-0.75,-0.55l-1.23,0.19l-0.52,0.4l-0.14,0.76l-1.03,0.09l-1.67,1.05l-1.15,0.02l-0.52,-2.73l-1.41,-1.75l-2.98,-0.12l-1.04,-0.57l-1.02,-0.01l-0.97,-0.78l-0.94,0.37l-0.52,-0.92l-0.7,0.21l-0.38,1.14l-0.84,0.61l0.15,0.54l0.66,0.48l0.16,1.57l-1.79,-0.15l-0.65,0.76l-1.27,-1.08l-0.39,0.07l-0.3,0.59l-0.17,-1.78l1.47,-2.02l0.17,-0.7l-2.33,-3.22l0.13,-1.79l-2.1,-2.47l1.13,-0.73l1.21,0.58l0.81,3.14l2.72,1.07l0.99,0.93l2.32,-0.02l1.96,-0.48l1.11,0.29l1.12,2.0l0.1,1.09l2.11,0.75l0.59,-0.3l0.14,-0.59l-0.49,-1.0l0.03,-1.08l-0.98,-0.86l-0.78,-1.6l0.98,-1.6l-0.1,-0.47l-0.56,-0.36l0.9,-0.86l2.24,-0.25l0.65,-0.42l0.16,-0.69l-0.4,-1.48l0.3,-1.18l-0.34,-0.55l-1.16,-0.23l-0.64,-0.92l-1.06,-0.27l-0.62,0.36l-0.25,0.64l0.8,2.01l-1.15,-1.29l-1.73,-0.59l-0.11,-0.7l-0.49,-0.42l-2.21,0.23l-1.61,-0.55l-0.95,0.55l-0.84,1.16l-0.27,1.81l-4.51,-0.75l0.44,-1.18l-1.73,-1.24l-0.23,-1.08l0.27,-0.48l1.22,-0.27l0.76,-1.39l-0.09,-0.76l-0.92,-0.84l-1.56,-0.07l-0.81,0.33l-1.0,-1.83l-1.09,-0.58l-0.47,-1.96l0.82,-2.71l-0.07,-1.53l0.79,-0.32l0.34,-0.53l0.68,-4.44l-0.77,-0.97l-2.24,-0.88ZM433.84,620.88l0.17,-0.38l-0.47,-0.55l-1.43,0.9l-0.23,0.47l0.64,0.66l2.25,0.65l0.99,-0.27l0.73,-1.0l-0.06,-0.69l-0.49,-0.46l-0.91,0.66l-1.19,0.01ZM368.9,723.15l3.01,0.37l0.36,0.27l-3.63,-0.13l0.26,-0.51ZM392.61,649.39l1.24,0.72l1.36,1.23l-0.92,0.46l-0.54,-0.32l-1.33,-1.56l0.2,-0.53Z", "name": "Andhra Pradesh"}, "IN-TR": {"path": "M717.67,412.64l-0.65,-0.93l-0.85,-0.54l-0.68,0.03l-0.65,0.63l-0.23,2.44l0.57,2.74l-0.06,0.54l-0.45,-0.12l-0.61,-0.81l-0.37,-1.24l-1.03,-5.9l0.59,-1.13l-0.93,-0.66l-0.88,-2.95l-1.06,-0.99l-1.73,-4.15l0.05,-0.4l0.82,-0.19l0.29,-0.86l-0.43,-0.72l-0.77,-0.33l-0.07,-0.39l0.16,-0.36l1.69,-0.62l0.97,-2.38l-0.28,-2.65l1.62,-2.42l1.36,0.06l0.65,-0.3l0.79,-3.37l4.46,0.5l2.13,-0.37l1.01,-1.0l0.52,-2.43l0.74,1.43l1.5,0.46l1.08,-0.84l-0.14,-2.07l1.8,0.37l0.24,1.14l1.12,1.01l0.62,0.15l0.7,-0.29l1.07,-3.6l-0.23,-2.31l1.73,0.78l0.54,-0.4l-0.61,-1.47l3.03,0.1l1.08,-0.51l0.67,-0.99l0.07,-3.38l0.92,-0.64l2.0,1.31l0.19,1.75l0.72,1.63l-0.16,1.4l-1.03,2.69l0.62,0.74l1.84,0.3l0.73,1.3l0.1,2.73l-0.33,2.19l0.42,1.35l-0.55,1.87l0.21,2.41l-0.73,0.03l-0.79,1.0l-0.32,1.9l0.2,1.67l-0.69,-0.15l-0.51,0.3l-0.6,1.69l-0.45,-1.43l-0.61,-0.91l-0.46,-0.16l-1.47,0.55l-1.5,1.91l-0.91,0.48l-2.28,-2.56l-1.1,0.12l-0.24,2.55l0.81,3.79l-0.04,1.12l-0.97,1.4l-2.69,1.48l-1.81,2.75l-0.6,1.79l1.57,5.86l-1.05,0.63l-0.6,1.26l-0.91,0.89l-1.59,0.51l-1.08,-0.01l-0.53,0.84l-0.37,-0.53l-1.18,-0.4l-0.36,-0.51l-0.1,-1.09l-0.43,-0.32l-1.19,-4.38l-0.54,-0.55l-0.07,-0.63l-0.43,-0.22Z", "name": "Tripura"}, "IN-AR": {"path": "M727.36,274.74l-0.62,-1.27l-2.25,-0.75l-1.77,-2.04l-0.63,-2.3l0.17,-1.09l1.38,-1.87l0.22,-1.28l3.95,-0.13l2.71,1.1l3.56,0.14l1.39,-0.61l1.72,-1.71l1.01,-0.5l3.83,-0.02l0.37,-0.53l-0.09,-1.07l1.06,2.04l0.62,0.37l0.5,-0.13l0.54,-0.87l0.59,0.49l0.55,-0.04l0.85,-1.64l0.39,0.72l0.65,0.34l3.1,-1.35l1.28,-1.18l1.97,-0.69l1.9,-1.8l0.51,-2.58l-0.5,-0.64l-1.47,-0.43l1.15,-1.82l2.62,-1.84l1.03,0.45l1.55,-0.52l1.69,-1.95l1.76,-0.71l1.24,-1.28l2.81,-1.91l1.46,-2.07l0.6,-2.32l1.84,-1.44l6.87,-4.3l3.12,-0.23l2.29,0.22l1.58,-0.99l0.71,0.3l0.81,-0.14l2.24,-1.87l3.52,-1.53l0.33,-1.17l1.78,-0.1l1.59,-0.97l3.25,-1.09l1.23,-1.08l2.5,-0.23l2.96,-3.02l0.01,-0.58l-2.19,-2.29l0.36,-1.16l1.48,-0.19l1.11,-1.53l0.6,-0.3l2.38,-0.12l1.39,-0.42l2.54,-3.14l0.72,-0.07l2.06,1.06l1.8,2.16l-0.17,1.17l0.66,0.67l2.54,-0.06l4.07,1.52l0.43,-0.15l-0.23,-0.8l1.58,0.39l2.15,1.1l2.51,0.45l0.72,1.13l1.93,0.3l0.45,-0.44l-0.2,-1.79l0.72,-0.57l1.81,-0.09l1.12,0.28l0.48,-0.28l0.36,-1.24l0.67,1.6l2.25,-0.39l0.22,-1.1l-0.31,-1.27l1.15,-0.39l0.21,-0.82l0.66,-0.09l1.65,0.69l2.17,0.34l0.42,-0.22l0.93,-1.86l-0.03,-2.09l1.15,-0.32l2.24,0.9l2.73,-1.16l5.47,-0.31l0.94,2.55l1.97,1.67l1.4,-0.02l2.08,-1.11l0.36,0.57l-1.13,2.01l-3.49,1.07l-0.63,0.41l-0.65,1.26l0.64,2.74l0.61,0.25l2.59,-1.66l1.71,-0.53l0.58,1.89l2.46,1.23l0.08,0.91l1.18,0.7l0.56,2.05l2.02,2.58l0.6,2.92l-2.74,2.04l-2.04,1.1l-0.15,0.56l0.83,1.34l-1.06,1.29l0.04,0.55l1.03,0.95l0.99,2.16l0.53,0.2l0.76,-0.58l0.45,-3.4l0.84,-1.52l1.46,-0.72l2.38,0.61l2.09,2.27l2.2,1.38l1.28,1.55l0.59,2.63l2.37,0.85l3.42,-1.46l0.92,0.23l2.0,1.66l0.8,0.21l0.66,1.15l2.77,1.85l0.1,0.6l-0.87,1.91l-0.18,1.48l0.49,0.95l1.42,1.47l0.17,0.72l-0.79,1.9l0.03,1.18l-0.7,0.34l-0.46,-0.84l-0.74,-0.19l-1.48,0.51l-2.77,2.73l-2.06,1.44l-0.27,0.83l-2.08,0.81l-1.02,1.26l-2.24,1.7l-0.77,1.39l-0.0,0.98l0.8,2.32l-0.35,1.45l0.18,0.76l6.72,8.57l0.2,1.05l0.81,0.73l-0.34,0.96l-1.06,-0.38l-1.09,0.3l-0.98,-0.87l-4.19,-1.87l-0.52,-0.42l0.5,-1.38l-0.22,-0.64l-1.04,-0.87l-1.45,-1.95l-2.32,-1.06l-1.15,0.12l-0.8,0.69l-2.05,-0.49l-1.22,1.56l-0.94,0.38l-3.16,-0.19l-8.17,1.35l-2.27,0.98l-1.97,1.39l-2.32,3.7l-1.42,1.63l-3.49,1.13l-2.36,3.2l-2.21,0.47l-1.16,1.96l-1.65,0.03l-1.5,0.46l-2.38,3.54l-4.38,1.68l-0.65,-2.41l0.28,-2.02l-1.15,-1.62l0.08,-0.57l0.86,-1.12l0.18,-1.79l-0.4,-1.17l-1.3,-0.89l0.03,-0.74l2.24,-0.17l3.03,-2.24l2.08,-0.89l1.32,-1.31l0.89,-2.35l1.07,-0.6l3.2,1.39l4.93,-1.84l2.11,-0.03l1.11,0.35l0.89,-1.03l1.04,-0.45l0.4,-0.9l1.19,-0.94l0.02,-1.73l-1.11,-1.43l-1.54,0.04l-1.04,1.08l-0.29,-1.15l0.49,-1.32l-0.31,-2.08l-0.56,-0.76l-2.03,-1.4l-0.74,-3.0l4.9,-6.49l1.13,-2.28l-0.47,-0.76l-7.92,0.07l-1.46,0.45l-3.93,2.51l-4.03,1.0l-1.16,-0.06l-2.12,-0.75l-1.82,1.0l-9.17,3.2l-4.61,2.27l-4.21,1.1l-4.11,2.12l-1.45,0.25l-0.95,-0.65l-2.82,0.73l-1.84,-0.68l-0.97,-1.0l-0.65,-0.12l-0.98,0.82l-0.31,0.87l1.19,1.68l-0.16,0.82l-7.98,6.54l-4.22,4.3l-0.72,1.32l0.11,2.07l-3.97,2.93l-1.86,0.72l-3.28,0.5l-1.4,0.62l-0.37,0.04l-1.8,-1.22l-0.99,-0.14l-10.87,1.18l-1.55,-0.38l-0.87,-1.17l-3.78,-1.66l-3.69,-0.53l-0.9,0.25l-2.12,1.63l-8.52,2.44l-1.58,0.13l-1.99,0.63l-3.48,-0.28l-1.08,-3.29l-1.55,-1.52l-0.32,-0.92l0.42,-2.0l0.73,-0.89l0.31,-1.23l1.41,-1.35l0.22,-0.83l-2.85,-5.27l-1.16,-0.97l-1.6,0.88l-1.97,0.08l-3.01,0.86Z", "name": "Arunachal Pradesh"}, "IN-KA": {"path": "M183.76,654.66l1.17,-1.76l1.58,-1.17l0.11,0.99l0.66,0.4l1.93,-0.14l1.67,-1.1l1.39,-2.47l-0.57,-1.14l2.3,-3.92l0.01,-1.78l-1.37,-0.64l0.65,-0.48l1.42,-0.09l0.56,-0.68l0.21,-3.0l-0.24,-1.26l-0.69,-0.68l-2.69,-1.26l-1.19,0.3l-0.47,-2.4l1.24,-0.28l0.35,-0.84l-1.1,-0.79l-0.36,-1.12l-1.04,-0.15l-0.39,-1.08l-0.95,0.09l0.31,-0.89l0.87,0.52l0.75,-0.34l0.34,-0.8l0.72,0.63l0.63,-0.14l1.85,-1.63l0.52,-1.51l2.28,0.61l0.64,1.97l0.55,0.41l0.87,-0.23l1.48,-1.21l1.3,-0.31l0.44,-0.89l-0.63,-0.9l0.68,-0.64l0.32,-1.0l0.9,-0.17l0.61,-0.68l1.67,-0.79l2.05,0.17l0.41,-0.88l-0.66,-2.45l2.16,-0.78l0.95,-0.97l0.35,-1.04l0.96,0.29l1.32,-0.24l0.43,0.85l1.57,1.28l1.74,0.56l2.56,-1.13l0.32,-1.76l2.11,-0.15l1.37,-0.65l1.59,-0.01l0.78,0.64l0.73,0.05l1.58,-0.66l0.84,-0.95l1.47,1.12l1.13,-0.06l0.56,-1.31l-0.58,-1.4l0.66,-0.66l0.08,-0.53l-1.28,-2.2l0.49,-2.65l-0.42,-1.11l-0.82,-0.58l-0.88,-2.78l0.83,-0.73l1.1,-1.81l0.67,0.2l0.76,1.43l1.88,0.29l1.02,1.25l0.74,0.0l1.18,-1.12l0.68,0.28l0.52,-0.31l0.52,1.7l1.37,1.03l2.4,-0.79l1.12,0.08l2.15,-1.02l1.3,0.35l1.64,-0.57l1.62,0.97l2.17,0.25l0.88,-0.29l0.98,-1.09l-0.17,-0.54l-0.94,-0.76l-0.84,-1.71l0.71,-1.31l-0.11,-1.65l-0.73,-1.08l2.27,-0.76l0.96,-1.31l1.3,-0.71l0.19,-1.02l0.84,-0.4l0.57,-0.91l0.9,0.33l1.1,-0.13l2.11,1.92l0.94,-0.21l0.83,-2.54l1.63,-1.28l-0.43,-2.03l2.59,0.52l1.11,-0.85l0.65,-1.76l0.44,-6.2l1.3,-0.6l1.67,0.06l2.75,-0.68l0.94,-1.82l3.43,-2.24l0.12,-2.6l0.97,-1.48l0.81,-0.16l0.82,0.6l0.26,2.57l2.49,1.24l0.14,0.8l0.46,0.46l1.07,-0.06l1.25,-0.96l1.87,0.57l-0.46,1.64l0.98,3.56l-0.97,0.35l-0.34,0.81l0.3,0.72l1.16,1.08l0.66,2.67l-1.93,2.03l-1.65,1.2l-0.31,0.97l0.86,1.02l0.13,0.63l-2.0,1.18l-1.66,3.11l0.54,0.74l2.14,1.1l2.63,0.05l0.62,0.92l2.4,-0.87l-0.85,1.7l-1.86,0.54l-0.68,1.22l-1.41,0.5l-0.93,1.81l-3.8,4.92l-0.3,1.05l0.18,0.89l1.75,0.99l0.21,1.34l1.01,2.06l-0.98,2.22l-0.04,4.51l-0.57,0.94l-0.19,1.47l0.2,0.87l0.84,0.59l-0.7,0.62l-0.29,0.74l0.33,0.43l0.72,-0.12l-0.46,1.4l-1.11,0.6l-0.57,1.31l-3.6,2.5l0.04,0.43l1.33,1.5l3.15,0.82l2.99,0.08l1.46,0.98l-0.05,0.65l-1.49,1.1l-0.35,0.85l-0.3,2.77l0.14,5.08l-0.92,1.2l-4.11,-0.1l-2.41,-0.6l-2.16,0.31l-2.83,1.49l-1.33,1.59l-0.27,3.92l0.26,0.61l0.54,0.3l0.92,1.92l-1.1,-0.21l-1.05,0.68l-0.44,1.23l0.31,2.89l-0.61,-0.36l-0.47,0.14l-0.26,0.54l1.49,3.11l0.45,2.23l2.35,1.26l0.79,5.01l-1.29,2.89l-1.27,1.08l-0.98,-0.83l-1.9,0.28l-2.26,-0.55l-2.7,-1.55l-0.83,0.05l-0.64,1.13l-0.05,1.31l-0.76,1.17l0.34,0.49l2.58,1.0l0.24,0.53l-0.67,3.87l-0.92,0.48l-0.24,0.51l0.09,1.46l-0.65,1.58l-0.11,1.87l0.53,1.82l1.15,0.65l1.13,1.95l2.75,-0.11l0.28,0.38l-0.58,1.33l-0.75,-0.03l-0.6,0.43l-0.33,1.18l0.67,1.5l1.34,0.7l-0.5,1.06l0.38,0.63l5.22,0.79l0.57,-0.66l0.04,-1.35l1.22,-1.48l1.49,0.54l2.05,-0.25l0.35,0.98l1.75,0.6l0.81,1.07l0.71,0.37l0.61,-0.09l0.42,-0.71l-0.87,-2.14l0.63,0.06l0.57,0.9l1.2,0.25l-0.29,1.29l0.4,1.46l-2.57,0.43l-1.69,1.64l0.17,0.52l0.77,0.22l-0.9,1.3l-0.01,0.61l0.89,1.82l0.88,0.68l-0.09,0.84l0.46,1.04l-1.36,-0.46l-0.12,-1.15l-1.33,-2.11l-1.58,-0.4l-2.02,0.49l-1.93,0.06l-0.86,-0.87l-2.53,-0.91l-0.68,-2.95l-0.45,-0.49l-1.65,-0.55l-1.55,0.95l-0.26,0.99l2.22,2.42l-0.16,1.73l2.27,3.02l-1.7,2.74l0.13,1.43l0.5,1.1l0.7,0.06l0.45,-0.65l1.18,0.94l0.5,-0.15l0.37,-0.63l1.31,0.24l0.78,-0.26l0.35,-1.0l-0.25,-1.5l-0.54,-0.55l0.64,-0.79l0.65,0.55l0.97,-0.55l0.77,0.74l1.09,0.02l1.04,0.57l2.88,0.1l1.0,1.31l0.76,3.18l1.76,0.02l1.87,-1.1l1.4,-0.17l0.29,-1.09l0.84,-0.13l0.54,0.58l0.75,-0.06l0.7,-1.41l1.23,-0.5l1.78,-1.55l0.13,-0.72l-0.57,-0.89l0.16,-0.39l1.51,0.14l1.31,0.55l0.69,-0.36l0.76,-1.03l-0.06,0.91l-0.96,1.22l0.45,1.84l0.61,0.04l1.08,-1.14l1.08,0.1l0.98,-0.51l1.13,0.68l0.47,1.62l-0.46,1.45l0.68,1.33l-0.98,-0.09l-0.43,0.33l-0.05,0.66l0.46,0.93l0.44,0.26l1.43,-0.19l1.73,1.76l1.63,0.44l1.35,0.11l0.84,-0.42l0.8,0.37l1.06,-0.13l-0.34,1.19l-0.06,3.99l-0.34,1.2l1.1,1.98l0.69,0.23l0.59,-0.29l1.3,0.36l1.75,1.15l1.21,-0.5l-0.05,2.1l-0.32,1.1l-0.91,1.18l-0.34,1.83l-1.24,0.9l-0.54,1.55l-1.32,2.03l0.1,0.59l1.12,0.65l0.48,0.78l-2.19,-1.45l-1.12,-0.16l-0.49,0.39l-0.35,1.35l-1.07,0.42l-1.03,-0.36l-0.62,0.37l0.11,2.05l-0.34,0.59l-2.6,-0.85l-2.48,-1.78l-0.99,-0.1l-1.2,1.37l-2.15,-1.97l-2.37,-0.1l-1.63,0.75l-0.34,1.39l-1.03,1.8l0.24,1.06l-2.02,1.05l-1.7,-0.11l-1.04,0.49l-1.29,3.66l0.38,1.14l-0.1,1.1l1.28,0.34l-0.45,2.16l-2.18,2.84l-1.81,1.11l-0.33,1.06l0.88,1.69l6.59,0.29l1.01,0.65l0.87,1.65l-3.17,4.34l-4.19,0.64l-1.02,0.5l-1.01,1.52l-0.85,2.18l-0.54,0.46l-2.0,0.25l-2.48,-1.04l-1.24,0.45l-2.9,0.22l-0.46,0.31l-0.39,1.08l-1.99,-1.91l-1.21,-0.41l-2.06,0.44l-0.92,0.51l-1.97,3.01l-0.52,2.22l-2.05,-0.47l-5.1,0.34l-0.7,-0.25l-0.01,-1.16l-0.76,-0.99l-1.01,-0.34l-1.28,0.14l-1.47,1.17l-0.23,-1.51l-0.53,-0.66l-2.29,-0.05l-1.56,-1.76l-1.37,-0.01l-1.51,-1.78l-0.98,-0.16l-1.05,0.26l-0.38,-0.58l0.08,-2.01l-0.53,-0.63l-0.84,-0.04l-2.77,1.07l-2.93,-0.54l-1.33,-0.58l-1.09,-1.2l-0.6,-1.99l-1.88,-0.3l-1.33,-0.81l-0.81,0.09l-0.76,-1.06l-2.07,-1.0l-3.42,-3.85l-1.12,-0.12l-0.54,-1.89l-0.87,-1.28l0.04,-0.64l0.75,-0.81l0.05,-0.7l-0.69,-0.48l-1.29,0.25l-1.68,-1.95l0.67,-1.64l-0.28,-0.5l-1.53,-0.38l-1.26,0.46l-0.83,-1.04l-1.18,0.1l-0.21,-1.49l-1.02,-0.68l-0.95,-0.16l-0.98,0.44l-0.22,-0.85l-1.23,-0.36l-0.55,-1.43l-0.97,-0.23l-1.59,0.31l-0.32,-0.91l0.99,-0.81l1.53,-0.55l0.39,-0.51l-0.4,-0.61l-3.41,0.56l-1.36,-5.58l0.26,-1.33l-0.35,-0.37l-0.6,-2.16l-1.04,-5.01l-0.74,-1.48l0.06,-0.6l0.43,-0.2l-0.18,-1.85l-0.72,-1.98l-0.17,-2.91l1.43,-0.43l0.51,-0.72l-0.79,-0.24l-0.74,-1.69l-0.59,-0.04l-0.59,0.82l-1.04,-4.59l-0.98,-2.21l-2.65,-3.83l0.0,-1.22l-0.63,-1.13l-0.24,-2.4l-1.15,-1.8l2.13,0.13l0.18,-0.69l-2.5,-1.07l-0.26,-0.37l-0.08,-1.26l-1.06,-3.28l0.48,0.02l0.27,-0.5l0.73,-0.16l-0.05,-0.45l-1.48,-1.63l-0.14,-0.62l-0.98,-0.84l-0.71,0.54l-0.06,1.03l-0.4,0.04l-0.22,-1.61l1.0,-0.33l0.35,-0.61l-0.72,-0.56l-1.25,0.35l-0.23,-0.18l0.24,-0.61l-0.84,-2.65l-1.14,-0.68l-0.83,0.38l-0.42,-0.63l-0.7,-0.13l-1.41,-0.99l0.54,-0.99l1.17,0.17l0.75,-0.99l1.08,0.02l0.47,-0.37l-0.08,-0.75l-1.37,-0.74l-2.36,1.62l-0.46,-0.72l1.61,-1.08l1.69,-0.19l1.18,-0.91l0.82,-2.53l-0.14,-2.48l0.94,-2.43l-0.25,-0.71l-1.34,-1.11l1.61,-0.57l0.34,-0.87l-0.21,-1.62l-1.2,-1.53l-0.04,-1.34l-0.58,-0.86l0.59,-1.77l-0.66,-3.34l-0.5,-0.59l-1.53,-0.72l-1.74,0.51l-0.43,-0.07l-0.12,-0.46Z", "name": "Karnataka"}, "IN-PB": {"path": "M176.07,176.63l0.49,-0.66l0.91,-0.18l0.37,-0.76l0.93,-0.37l1.98,-2.76l1.11,-0.3l0.6,-0.54l0.35,-2.73l1.22,-1.08l1.65,-0.66l0.97,-1.89l2.26,-2.34l-0.1,-1.02l1.19,-0.74l0.5,-1.77l2.56,-0.03l1.17,-1.73l2.45,-0.6l1.36,-1.41l0.49,-1.31l2.35,-1.33l0.12,-0.61l-1.4,-1.16l-2.43,0.02l-0.78,-1.72l0.77,-4.21l2.63,-5.48l-0.15,-0.82l-0.89,-1.3l-0.91,-3.26l-1.88,-3.18l1.28,-1.9l0.42,-1.8l3.6,-2.55l0.85,-1.45l1.71,0.33l1.05,-0.31l1.2,-2.56l1.09,0.37l0.83,-0.6l2.02,-0.13l1.02,-1.1l1.11,-0.02l0.36,-0.49l-0.14,-0.56l1.94,0.66l1.17,-0.5l1.03,0.2l0.93,-1.49l3.2,-0.92l0.63,-2.0l1.01,-1.12l0.35,-0.94l-0.27,-0.94l-1.12,-1.22l1.94,0.13l1.25,-0.69l0.47,1.04l1.62,0.83l0.46,-0.14l2.1,-2.45l1.07,-0.64l2.7,-0.39l1.07,-0.89l0.4,-1.14l1.66,-0.59l1.42,-1.04l1.5,2.65l-3.97,2.7l-1.59,1.66l-3.57,1.31l-0.33,1.08l0.28,1.2l0.7,0.45l0.63,-0.16l-0.52,1.03l-1.81,1.94l-0.05,0.85l0.87,0.49l3.03,0.5l5.38,2.71l2.54,4.11l-1.07,0.21l-0.18,1.25l4.53,8.24l2.34,7.11l1.09,1.36l0.75,0.46l1.42,-0.32l1.34,0.16l0.65,-1.28l0.84,-0.38l-0.02,-1.78l0.92,-0.36l2.27,4.24l0.98,-0.15l0.78,0.72l0.73,-0.2l0.39,0.92l0.53,0.22l0.69,-0.62l0.06,1.28l0.34,0.31l0.96,-0.04l-0.73,1.33l-0.03,1.58l0.68,0.74l-0.51,1.25l0.31,1.59l1.02,1.2l3.79,3.11l1.0,1.7l0.95,0.53l-0.41,1.04l-2.24,-0.16l-1.46,0.74l-0.24,0.82l0.32,0.8l2.49,2.48l2.18,-0.11l0.28,1.06l0.84,0.47l0.29,0.86l-0.26,1.77l0.52,0.95l-0.43,1.01l0.34,3.05l-0.33,0.84l-1.25,-2.16l-2.78,-0.23l-1.08,0.49l-0.44,1.63l0.52,0.73l-2.37,1.72l-3.57,1.91l-0.22,0.62l0.44,0.79l0.82,-0.04l0.76,-0.82l0.42,0.84l0.87,0.45l-0.38,1.5l-2.73,1.89l-1.97,-0.49l-1.02,-2.47l-0.61,-0.47l-0.6,0.06l-0.49,0.47l0.18,1.05l-0.33,0.74l-0.93,-0.81l-0.57,0.13l-0.15,0.98l-0.26,0.08l-1.13,-0.23l-1.27,-0.87l-0.79,0.13l-0.49,1.0l0.9,0.83l-0.46,0.56l0.17,0.85l-0.56,0.83l-0.83,2.76l0.55,1.64l0.95,0.71l-2.16,1.34l-1.95,0.72l-1.28,1.49l-1.16,0.03l-1.39,0.58l-1.91,-0.35l-1.01,-1.8l-1.91,-0.93l-2.34,0.7l-0.72,1.35l-1.13,-0.2l-1.76,0.35l-4.86,-1.45l-3.42,4.21l-0.13,0.69l-0.95,0.4l-0.7,1.35l0.37,1.21l-1.34,0.48l-0.53,-1.63l-0.78,-0.89l0.03,-0.68l-0.47,-0.53l0.89,-0.62l-0.01,-1.11l0.84,-0.15l0.16,-0.58l-1.61,-2.94l-1.18,0.18l-0.57,0.76l-0.91,-0.57l-0.12,-1.21l0.35,-1.46l-0.53,-0.88l-0.81,0.2l-0.42,1.1l-1.94,0.49l-1.47,-1.09l-0.81,-1.4l-2.41,-0.6l-0.88,-0.73l-3.48,0.62l-1.31,0.92l-0.55,0.88l-3.88,-1.1l-4.07,-0.54l-15.05,-0.66l0.36,-1.18l2.21,-3.51l0.25,-1.48l-0.23,-0.77l-0.66,-0.4l-1.19,-3.33l-0.77,-1.0l-1.17,-0.6Z", "name": "Punjab"}, "IN-ML": {"path": "M692.14,323.41l0.36,0.99l0.49,0.26l3.48,-1.0l0.19,0.86l0.64,0.35l1.2,-0.63l1.49,-0.23l3.08,0.24l0.52,0.77l0.96,0.42l-0.17,1.66l0.43,0.66l1.1,-0.39l0.55,0.36l0.64,-0.07l2.66,-0.96l0.05,3.31l0.27,0.81l0.85,0.45l1.66,-0.78l2.72,-2.95l3.5,-0.63l1.66,-0.86l0.37,-0.68l-0.38,-0.52l-1.21,0.62l3.21,-4.23l0.7,0.03l0.35,0.35l-0.47,2.0l0.21,0.69l1.52,0.36l1.37,-0.91l0.76,-1.27l0.44,-1.6l1.65,-1.4l0.96,0.24l1.41,1.21l1.05,0.19l3.13,-0.68l1.07,0.06l3.34,-1.03l2.77,0.13l-2.86,2.99l0.12,1.26l1.06,0.72l-1.5,3.63l0.24,1.32l-0.13,2.9l0.69,0.35l1.64,-0.98l2.82,-0.49l1.83,-1.14l2.64,2.02l3.7,3.79l0.62,0.07l1.88,-0.9l-1.34,1.9l-1.55,1.24l-0.1,0.59l1.68,1.57l2.05,0.77l2.62,2.44l0.18,0.48l-0.36,1.54l0.66,1.41l-3.66,1.24l-1.0,1.03l-2.75,0.23l-0.26,0.76l-1.33,0.48l-3.41,3.12l-1.72,-0.99l-0.78,-0.86l-2.26,-0.4l-1.74,-1.46l-1.79,-0.29l-0.79,-0.85l-1.94,-0.58l-2.44,0.38l-1.73,-0.24l-5.25,0.33l-0.64,0.7l-0.94,-0.21l-0.65,0.86l-0.55,0.08l-1.11,-0.13l-1.08,-1.05l-0.72,-0.01l-2.03,0.82l-1.34,-0.09l-4.49,-1.33l-1.65,-0.78l-12.73,1.95l-2.04,-0.82l-0.72,-0.02l-0.73,0.49l-2.6,-0.6l-1.28,0.3l-2.57,-0.21l-4.05,0.61l-2.4,-0.98l-4.8,-1.03l-6.8,-2.79l-2.64,0.4l-0.59,-2.56l0.35,-1.85l2.3,-0.94l0.38,-0.8l0.21,-2.01l1.81,-0.2l1.28,-1.0l0.04,-0.93l-1.52,-1.7l-0.34,-1.72l0.88,-1.75l0.26,-1.36l2.26,-2.72l2.31,-1.91l5.74,-0.81l1.82,-1.05l3.24,0.21l1.4,0.87l-0.56,1.9l0.39,0.49l1.72,-0.91l0.85,-1.0Z", "name": "Meghalaya"}, "IN-MN": {"path": "M765.49,384.0l0.47,-0.68l0.61,-3.47l-0.09,-1.17l0.96,-1.67l-0.13,-0.68l-0.62,-0.57l-0.09,-1.32l0.56,-0.31l0.28,-0.98l0.55,-3.63l1.0,-0.49l0.14,-0.43l-0.57,-1.42l0.73,-1.43l-0.56,-1.21l0.91,-2.88l0.63,-0.62l0.88,0.47l0.98,-0.44l0.27,-1.08l1.36,-2.09l-0.23,-1.11l1.0,-0.91l-0.44,-2.02l1.51,-0.98l3.35,-6.82l0.5,-0.52l1.87,1.18l1.29,0.39l1.16,1.32l0.79,-0.03l1.42,-1.94l0.99,-2.22l3.94,-3.86l-0.04,-1.41l-1.34,-0.76l0.16,-0.53l4.57,-0.6l2.93,0.03l1.7,1.1l2.18,-0.03l1.33,0.81l4.11,-0.51l2.05,-1.03l1.5,-1.74l1.68,-0.96l1.91,-1.65l-0.05,1.34l-1.04,3.76l0.67,0.94l2.42,1.37l-0.87,1.31l-1.78,4.9l0.08,1.52l0.99,1.35l3.31,1.08l0.64,2.0l-0.15,1.25l-1.08,1.72l-0.56,2.75l-1.73,2.55l-0.49,2.59l-0.58,0.52l-1.44,0.34l-1.22,3.42l-1.79,1.31l-0.65,2.06l-1.03,1.02l-0.12,1.37l-1.01,1.13l0.08,0.9l-1.09,1.03l-0.39,2.16l-1.51,3.48l-1.33,5.32l-1.69,2.49l-0.11,2.01l-0.25,0.27l-1.49,-1.41l-1.93,-1.02l-3.52,-0.92l-2.47,0.28l-1.62,-1.76l-1.26,-0.49l-3.11,-0.12l-0.94,0.51l-0.51,0.86l-0.79,-0.43l-1.46,0.7l-0.87,-0.01l-0.47,-1.06l-2.13,-2.65l-0.75,-0.47l-1.33,0.4l-0.63,1.3l-0.8,0.38l-0.15,-0.87l-0.68,-0.58l-1.63,0.9l-1.15,-0.71l-1.16,0.57l-1.01,-0.83l-2.54,-0.88Z", "name": "Manipur"}, "IN-OR": {"path": "M408.6,584.62l0.87,0.38l0.7,-0.57l0.17,-1.23l0.78,-1.54l0.14,-2.48l0.72,-1.11l0.53,-2.11l-0.29,-1.58l0.84,-1.84l0.76,0.02l2.17,-0.82l1.07,-1.24l1.83,-0.69l1.82,-2.82l4.8,-4.17l-0.13,-1.22l-1.17,-0.95l0.98,-0.36l1.48,-1.56l2.18,-0.42l1.07,-1.66l0.73,0.55l0.81,-0.24l0.83,-3.98l0.54,-0.67l1.08,-0.58l0.29,-0.71l-0.1,-2.84l-0.74,-1.34l-0.25,-1.24l-0.98,-0.82l0.26,-1.36l-0.7,-1.85l0.8,-2.84l-0.22,-0.61l-0.86,-0.66l0.89,-0.73l0.05,-0.95l-0.72,-0.89l-1.26,-0.42l-0.99,-1.74l-1.27,-0.51l0.35,-3.73l-0.41,-1.94l0.27,-2.32l-0.75,-0.79l-1.7,-0.38l-0.94,-1.68l-2.97,-1.76l-0.47,-0.78l0.14,-0.74l1.38,-2.44l0.97,-0.56l1.15,-1.25l1.66,1.78l0.44,1.11l1.07,-0.03l0.97,-1.34l1.85,1.55l0.52,0.87l1.61,0.18l2.16,4.28l0.64,0.59l0.76,-0.22l1.26,-1.7l3.32,0.37l1.51,0.69l1.33,0.07l-0.14,2.05l0.48,0.54l0.74,-0.1l3.64,-2.46l0.2,-0.83l-0.84,-1.09l0.5,-2.36l-0.44,-1.37l-1.49,-0.16l-1.2,0.53l-1.26,-1.05l-2.25,-0.06l-2.22,-1.3l0.69,-3.13l-0.27,-3.86l-0.48,-1.12l0.27,-3.95l-0.1,-0.42l-0.55,-0.27l-0.35,0.21l-0.3,-1.32l-0.82,-0.26l-0.35,-0.87l0.85,-4.04l-0.72,-2.56l-0.04,-3.65l0.23,-0.22l0.93,0.25l0.06,0.91l0.5,0.38l1.85,-0.78l1.59,-2.19l1.54,-1.08l2.51,-4.8l0.2,-1.41l2.78,-0.21l1.21,0.48l1.08,-0.43l4.28,-0.65l3.13,1.97l2.46,-0.12l1.12,-0.71l0.83,-1.15l0.91,-2.52l0.94,-1.38l-0.0,-1.07l0.48,-0.85l2.25,0.71l0.98,-0.23l0.33,-0.74l-0.12,-1.25l-1.59,-1.85l-0.16,-1.47l0.71,-2.42l3.3,-5.53l0.24,-1.66l1.26,0.23l0.4,-1.1l0.9,-0.08l0.47,-0.83l0.2,-2.45l-1.77,-1.6l0.22,-1.51l1.57,-1.15l-0.05,-0.68l-0.65,-1.0l2.18,-3.06l2.99,-1.33l3.65,-3.0l2.69,-0.52l0.96,-0.56l1.06,-1.28l0.29,-0.96l-0.2,-1.52l-0.66,-1.22l2.36,1.1l2.44,3.59l1.03,0.81l1.71,0.29l2.63,1.1l3.55,-0.27l2.45,-1.4l0.45,-1.5l6.57,-0.18l2.05,-0.74l3.38,0.91l1.21,-0.78l1.34,-0.23l2.05,-1.36l0.86,2.95l0.13,1.93l-0.32,1.19l-1.6,2.32l-1.72,3.41l0.2,0.71l0.42,0.13l1.79,-0.54l1.28,0.22l4.01,2.74l3.34,-3.21l2.5,-1.08l0.99,-0.02l3.14,1.77l3.92,1.01l2.38,-0.82l1.13,-0.8l-0.69,1.35l0.07,1.78l0.31,0.54l1.81,0.87l1.44,-0.37l1.24,-0.87l1.91,-2.83l0.46,-2.86l-0.71,-2.31l0.76,-1.24l0.11,-1.23l-0.34,-2.49l-1.3,-1.91l-0.08,-0.67l1.7,-0.51l0.76,-0.96l0.5,-0.16l1.56,1.77l5.7,2.91l2.44,2.6l1.27,0.35l2.8,-0.49l5.68,3.71l0.66,0.99l1.88,0.67l2.06,1.47l1.92,0.22l2.3,1.14l0.67,0.67l0.2,0.8l-0.24,2.33l1.32,1.8l1.16,0.01l1.78,-2.16l0.87,0.07l1.39,0.85l0.72,2.92l0.74,1.0l5.27,1.5l0.12,2.57l1.25,2.13l-3.71,1.5l-4.33,0.33l-2.84,1.48l-1.58,1.12l-4.5,4.76l-1.65,2.44l-0.94,2.78l0.21,2.98l3.72,8.83l-0.15,0.33l-2.19,0.13l-0.26,0.6l0.52,0.68l0.66,0.26l2.2,0.07l0.33,0.76l-0.94,-0.18l-0.86,0.63l0.29,0.63l1.57,0.73l-2.3,1.0l-5.38,4.36l-0.87,1.94l-0.14,2.13l0.59,0.38l1.32,-0.93l0.32,0.19l-0.66,0.93l-2.07,1.29l-0.17,0.9l-1.96,1.18l-3.56,1.2l-0.62,0.5l-0.99,3.01l-2.18,2.22l0.07,0.88l-3.15,-2.37l-2.09,-0.05l-0.98,-0.98l-0.43,-1.27l-0.55,-0.22l-0.38,0.27l-0.24,0.91l0.53,1.5l1.8,1.31l2.24,0.53l0.58,1.03l1.33,0.59l-2.46,1.35l-5.48,2.09l-1.05,-0.38l-0.74,0.47l-5.64,1.45l-1.8,0.97l-1.66,0.07l-2.84,1.15l-0.84,-0.01l-2.11,1.23l-2.56,0.82l-0.12,-0.91l1.47,-0.48l0.08,0.59l0.46,0.02l1.85,-1.08l0.04,-4.51l-0.63,-0.57l-2.59,-0.65l-1.42,0.22l-3.64,3.22l-1.69,0.52l-2.08,2.43l0.02,0.78l-1.97,2.76l0.13,1.11l-0.98,0.61l-0.34,0.66l0.22,0.87l0.6,0.2l-0.13,0.36l0.47,0.55l0.96,-0.7l0.74,-0.13l-3.75,3.53l-6.09,4.87l-2.33,2.95l-0.87,-1.1l-2.14,-0.04l-0.56,0.34l0.14,1.16l-0.34,0.71l-0.9,-0.27l-2.35,1.12l-1.26,1.04l-1.69,0.08l-0.26,0.34l0.17,0.89l-0.33,0.72l0.05,0.87l-1.0,1.23l-1.18,0.2l-0.74,1.7l-1.32,1.09l-4.68,0.75l-2.81,-1.03l-5.13,0.38l-1.2,-1.49l-1.61,-4.45l-1.01,-0.54l-1.01,0.18l-0.5,0.86l0.2,1.32l-0.8,-2.26l-2.99,-3.94l-0.88,0.3l-0.51,1.45l-1.24,0.87l-0.57,1.24l-0.56,-1.57l-1.12,-0.44l-0.41,0.64l0.3,1.21l-0.52,0.7l0.12,0.82l-3.07,-1.25l-1.04,0.21l-0.61,0.54l-0.01,0.6l0.92,1.68l0.72,0.88l0.72,0.22l0.53,0.86l-1.83,0.9l-2.19,1.79l-1.56,0.69l-1.43,-0.77l-1.03,0.31l-3.19,3.91l-0.17,2.09l0.81,1.42l1.02,0.22l-1.53,2.04l0.32,1.52l-0.23,0.78l-0.89,0.07l-1.43,0.66l-1.31,0.07l-0.23,-0.16l0.01,-1.09l-0.37,-0.38l-2.06,-0.8l-0.93,0.12l-0.62,0.52l0.12,1.64l-0.33,0.6l-3.15,1.78l-0.71,1.76l-1.31,-0.43l0.47,-2.32l-0.48,-0.89l-2.17,-2.19l-0.29,-2.87l-2.46,-0.5l-2.38,3.46l-0.09,1.68l-0.5,1.42l0.29,1.04l-1.51,2.72l0.14,0.92l1.34,1.18l-0.86,0.75l0.1,2.0l-1.65,0.16l-0.93,1.4l-1.59,-0.19l-1.48,-1.2l-1.32,-0.39l-1.7,0.2l-1.56,1.08l-2.27,0.35l-3.0,1.96l-2.65,1.29l-1.11,1.17l-1.46,0.31l-2.23,1.63l-1.94,-0.89l-0.68,0.23l-0.52,1.0l-2.17,-0.55l0.13,-1.87ZM525.81,532.38l-0.05,-0.65l0.8,-0.25l0.04,-0.71l-0.49,-0.28l1.13,-1.12l-0.4,-0.64l0.3,-0.48l1.49,0.43l1.55,-1.12l1.08,-0.07l0.05,0.45l-1.37,1.35l-0.86,-0.66l-0.66,0.66l-0.63,0.11l0.75,1.39l-2.7,1.6Z", "name": "Orissa"}, "IN-KL": {"path": "M207.32,745.98l1.92,-0.19l0.39,1.27l1.23,0.49l0.41,0.89l0.63,0.19l0.89,-0.52l0.47,0.08l0.64,0.37l-0.1,0.79l0.5,0.89l0.57,0.23l0.78,-0.21l0.85,1.04l0.65,0.11l0.96,-0.48l0.95,0.25l-0.62,1.55l0.94,1.35l1.25,1.27l1.53,-0.21l-0.72,0.78l-0.15,1.13l0.93,1.53l0.64,2.08l1.3,0.28l3.32,3.77l2.15,1.07l0.78,1.07l1.13,0.04l1.41,0.84l1.39,0.08l0.46,1.8l1.32,1.45l1.59,0.7l3.14,0.56l3.3,-1.08l0.01,2.3l0.65,0.82l2.2,-0.0l1.26,1.62l1.5,0.11l1.64,1.8l1.14,0.25l1.17,-0.18l0.27,1.6l0.54,0.81l-1.2,0.5l-1.02,1.21l-0.98,0.1l-1.84,-0.51l-0.38,0.17l-0.33,0.69l-0.03,2.0l0.9,1.74l4.83,1.38l1.12,0.9l1.17,0.45l1.49,1.54l-2.87,2.82l-0.17,0.89l0.34,0.48l0.86,0.17l0.99,-0.3l1.57,0.46l3.34,-0.37l0.94,-0.61l-0.36,1.61l0.94,1.09l0.8,2.1l0.59,0.57l-1.64,-0.24l-0.64,0.35l-0.59,1.61l0.2,1.28l0.98,1.23l3.74,1.55l0.74,1.63l1.03,0.92l-0.41,2.95l-1.35,0.7l-0.35,0.83l0.17,2.6l-0.55,3.61l0.93,2.08l0.11,1.93l2.58,2.4l1.39,0.59l1.1,-0.31l2.7,-2.22l3.3,-1.4l1.27,1.82l0.4,1.65l0.73,0.77l-1.69,4.21l1.1,3.48l-1.02,2.47l0.32,2.94l-1.56,5.71l0.29,0.53l1.83,1.05l2.88,-0.69l1.58,2.31l0.11,0.81l-1.01,1.01l-0.96,2.65l-0.84,1.39l-2.5,7.28l-1.99,1.95l1.13,3.67l1.53,1.25l-0.52,1.84l-1.71,2.58l0.21,2.15l0.35,0.76l1.72,1.46l0.73,1.15l-0.92,1.3l-0.26,0.16l-0.49,-0.36l-0.56,0.34l0.28,1.93l-1.34,2.06l-0.32,1.41l-1.22,0.16l-3.21,-2.34l-3.51,-4.66l-1.64,-1.53l-0.43,-1.0l-3.63,-4.29l-1.58,-2.45l-2.39,-2.02l1.57,-0.71l0.15,-0.44l-0.37,-0.28l-1.08,0.1l0.47,-0.7l1.68,0.13l0.44,-0.23l-0.2,-0.71l0.54,-0.49l-0.28,-0.62l-0.95,-0.03l-0.85,0.6l-1.25,-0.25l-1.31,0.82l-1.58,-3.84l0.32,-0.33l0.19,-1.64l-0.19,-0.41l-0.65,0.2l-0.86,-2.3l-0.74,-0.28l-0.21,0.22l-1.05,-2.39l-1.56,-5.16l-1.24,-10.4l0.63,-0.17l0.66,4.3l0.62,0.34l0.41,-0.52l0.65,0.91l-0.63,1.46l-0.6,2.77l0.13,0.65l0.86,0.47l2.79,0.53l0.73,-0.32l0.81,-0.97l-0.14,-0.62l-1.15,-0.68l-1.47,-0.14l0.28,-0.66l-0.17,-2.85l-0.66,-1.06l-0.37,-2.02l0.45,-1.0l-0.04,-0.85l-1.08,-2.32l-1.52,-1.72l-0.77,0.08l-0.45,-1.39l0.12,-0.52l-0.61,-0.7l-0.27,-1.52l-1.31,-1.45l-0.38,0.26l-0.25,0.92l0.66,1.82l-0.66,-1.68l-0.14,-1.7l1.71,-1.2l0.21,-1.28l-0.71,-0.22l-0.54,-0.77l-0.8,-0.12l0.31,1.86l-0.42,0.47l-0.54,-0.68l-1.44,-5.09l-1.12,-1.55l-0.55,-2.53l-1.35,-1.65l-0.27,-1.2l-2.36,-4.94l0.51,-0.56l-0.14,-0.64l-0.79,-0.34l-0.43,-1.07l-1.9,-7.73l-3.14,-7.29l0.34,-0.6l-0.24,-0.72l-0.61,-0.15l-1.63,-2.78l-1.62,-0.56l-2.42,-6.52l-0.81,-1.13l-3.92,-4.33l-0.84,-0.02l-1.08,-1.51l2.17,0.47l0.48,-0.39l-0.52,-0.81l0.19,-1.18l-0.45,-0.08l-1.02,0.74l-0.61,0.02l-1.17,-1.08l1.13,-0.11l0.25,-0.56l-0.73,-0.93l0.1,-1.21l0.73,-0.02l1.61,-0.9l0.41,-0.84l-0.76,-0.53l-0.97,0.34l-0.9,-0.22l-1.68,1.27l-0.82,-0.2l-0.83,0.31l-0.37,2.56l-1.86,-5.57l0.26,-1.27l-0.48,-0.39l-0.64,0.24l-0.68,-1.84l-3.92,-7.22l-2.86,-6.72ZM250.45,836.37l-0.0,-0.01l0.01,-0.0l-0.0,0.02ZM249.88,834.43l-0.08,-0.57l-0.05,-0.2l0.67,0.8l-0.54,-0.03Z", "name": "Kerala"}}, "height": 932.9661457393942, "projection": {"type": "mill", "centralMeridian": 0.0}, "width": 900.0});
jQuery.fn.vectorMap('addMap', 'us_aea_en',{"insets": [{"width": 220, "top": 440, "height": 146.91301153152673, "bbox": [{"y": -8441276.54251503, "x": -5263964.484711316}, {"y": -6227982.667213126, "x": -1949590.5739843722}], "left": 0}, {"width": 80, "top": 460, "height": 130.45734820283394, "bbox": [{"y": -4207088.188987161, "x": -5958848.012819753}, {"y": -3657293.3059425415, "x": -5621698.812337889}], "left": 245}, {"width": 900, "top": 0, "height": 549.6951074701432, "bbox": [{"y": -5490816.561605522, "x": -2029882.6485830692}, {"y": -2690009.0242363815, "x": 2555799.0309089404}], "left": 0}], "paths": {"US-VA": {"path": "M681.9,289.76l1.61,-0.93l1.65,-0.48l1.11,-0.95l3.56,-1.69l0.74,-2.33l0.82,-0.19l2.31,-1.53l0.05,-1.81l2.04,-1.86l-0.13,-1.58l0.26,-0.41l5.0,-4.08l4.76,-6.0l0.09,0.63l0.96,0.54l0.33,1.37l1.32,0.74l0.71,0.81l1.46,0.09l2.08,1.12l1.41,-0.09l0.79,-0.41l0.76,-1.22l1.17,-0.57l0.53,-1.38l2.72,1.48l1.42,-1.09l2.25,-0.99l0.76,0.06l1.08,-0.96l0.33,-0.82l-0.48,-0.96l0.23,-0.42l1.89,0.58l3.26,-2.62l0.3,-0.1l0.51,0.73l0.66,-0.07l2.38,-2.33l0.17,-0.85l-0.49,-0.51l0.98,-1.12l0.1,-0.6l-0.28,-0.51l-1.0,-0.46l0.71,-3.03l2.6,-4.79l0.55,-2.15l-0.01,-1.91l1.61,-2.54l-0.22,-0.94l0.24,-0.84l0.5,-0.48l0.39,-1.7l-0.0,-3.17l1.22,0.19l1.18,1.73l3.8,0.43l0.59,-0.28l1.04,-2.52l0.2,-2.36l0.71,-1.05l-0.04,-1.61l0.76,-2.3l1.78,0.75l0.65,-0.17l1.3,-3.29l0.57,0.05l0.59,-0.39l0.52,-1.2l0.81,-0.68l0.44,-1.8l1.37,-2.43l-0.35,-2.57l0.54,-1.76l-0.3,-2.0l9.17,4.57l0.59,-0.29l0.63,-3.99l2.59,-0.07l0.63,0.57l1.05,0.23l-0.5,1.74l0.6,0.88l1.61,0.85l2.52,-0.04l1.03,1.18l1.49,0.13l2.24,1.73l-0.0,1.31l0.44,1.27l-1.66,0.96l-0.12,0.65l-0.64,0.14l-0.27,0.45l-0.47,5.03l-0.36,0.13l-0.04,0.48l1.16,0.97l-0.29,0.11l-0.04,0.76l2.03,-0.01l2.4,-1.45l0.49,-0.72l0.34,0.74l-0.52,0.63l1.21,0.88l0.69,0.13l0.42,1.11l1.62,0.52l1.94,-0.2l0.84,0.43l0.82,-0.65l0.89,0.02l0.23,0.6l1.33,0.48l0.46,1.1l1.12,-0.05l0.02,0.3l1.18,0.42l2.84,0.65l0.4,1.01l-0.85,-0.41l-0.57,0.45l0.89,1.74l-0.35,0.57l0.62,0.79l-0.43,0.89l0.23,0.59l-1.35,-0.36l-0.59,-0.72l-0.67,0.18l-0.1,0.43l-2.44,-2.29l-0.56,0.05l-0.37,-0.56l-0.52,0.32l-1.47,-1.32l-1.19,-0.38l-0.43,-0.64l-0.9,-0.39l-0.7,-1.29l-0.77,-0.64l-1.34,-0.12l-1.11,-0.81l-1.17,0.05l-0.39,0.52l0.47,0.71l1.1,-0.01l0.63,0.68l1.33,0.07l0.59,0.42l0.38,1.52l2.73,1.56l1.85,1.88l1.95,0.61l1.58,2.1l0.98,0.24l1.35,-0.45l1.28,0.47l-0.61,0.69l0.3,0.49l2.03,0.34l0.26,0.72l0.46,0.12l0.31,1.96l-0.57,-0.83l-0.52,-0.22l-0.39,0.21l-1.13,-1.0l-0.58,0.3l0.1,0.82l-0.31,0.68l0.7,0.7l-0.18,0.59l0.51,0.28l0.43,-0.14l0.28,0.35l-1.39,0.72l-6.14,-4.74l-0.58,0.11l-0.19,0.81l0.24,0.54l2.28,1.52l2.09,2.14l2.77,1.18l1.25,-0.68l0.45,1.05l1.27,0.26l-0.44,0.67l0.29,0.56l0.93,-0.19l-0.0,1.24l-0.92,0.41l-0.57,0.73l-0.64,-0.88l-3.14,-1.26l-0.42,-1.53l-0.59,-0.58l-0.87,-0.12l-1.2,0.67l-1.71,-0.44l-0.36,-1.15l-0.71,-0.05l-0.05,1.31l-0.33,0.41l-1.42,-1.31l-0.51,0.09l-0.48,0.57l-0.64,-0.4l-0.99,0.45l-2.22,-0.1l-0.37,0.94l0.34,0.46l1.9,0.22l1.39,-0.31l0.85,0.24l0.56,-0.69l0.62,0.88l1.34,0.43l1.95,-0.31l0.82,0.72l0.84,0.12l0.51,-0.55l0.77,2.44l1.34,0.13l0.23,0.43l1.68,0.71l0.45,0.68l-0.57,1.03l0.56,0.44l1.72,-1.31l0.88,-0.02l0.83,0.65l0.8,-0.26l-0.61,-0.9l0.0,-0.82l-0.46,-0.34l3.98,0.08l0.93,-0.73l2.07,3.52l-0.4,0.7l0.65,3.09l-1.19,-0.58l-0.02,0.88l-30.92,7.82l-37.15,8.4l-19.5,3.35l-11.77,1.24l-0.82,0.62l-28.18,5.01ZM780.58,223.31l0.11,0.08l-0.08,0.06l0.0,-0.03l-0.03,-0.11ZM807.4,244.36l0.53,-1.15l-0.62,-0.62l0.58,-0.97l-0.39,-0.71l-0.03,-0.49l0.44,-0.35l-0.17,-0.73l0.62,-0.3l0.23,-0.6l0.14,-2.33l1.01,-0.39l-0.12,-0.9l0.48,-0.14l-0.26,-1.53l-0.78,-0.4l0.87,-0.57l0.1,-0.96l2.63,-1.01l0.31,2.47l-3.87,10.47l0.17,1.12l-0.48,0.31l-0.33,1.09l0.25,4.27l-1.1,-1.81l0.23,-0.94l-0.33,-1.57l0.28,-0.97l-0.38,-0.29ZM809.95,249.4l0.28,0.05l-0.1,0.2l-0.16,-0.22l-0.02,-0.03Z", "name": "Virginia"}, "US-PA": {"path": "M715.9,159.83l0.63,-0.19l4.29,-3.73l1.12,5.19l0.48,0.31l34.81,-7.92l34.25,-8.63l1.42,0.58l0.71,1.38l0.63,0.13l0.77,-0.33l1.23,0.59l0.14,0.85l0.81,0.41l-0.16,0.58l0.89,2.69l1.9,2.07l2.11,0.75l2.2,-0.2l0.72,0.79l-0.89,0.87l-0.73,1.48l-0.17,2.25l-1.41,3.35l-1.37,1.58l0.04,0.79l1.79,1.71l-0.31,1.65l-0.84,0.43l-0.22,0.66l0.14,1.48l1.04,2.87l0.52,0.25l1.2,-0.18l1.18,2.38l0.95,0.58l0.66,-0.26l0.6,0.9l4.23,2.74l0.12,0.41l-1.28,0.93l-3.71,4.22l-0.23,0.75l0.17,0.9l-1.36,1.13l-0.84,0.15l-1.33,1.08l-0.31,0.65l-1.72,-0.12l-2.03,0.84l-1.15,1.37l-0.41,1.39l-37.2,9.2l-39.07,8.65l-10.03,-48.16l1.92,-1.22l3.07,-3.04Z", "name": "Pennsylvania"}, "US-TN": {"path": "M571.31,340.76l0.86,-0.83l0.29,-1.37l1.0,0.04l0.65,-0.79l-0.99,-4.88l1.41,-1.93l0.06,-1.32l1.18,-0.46l0.36,-0.48l-0.63,-1.31l0.57,-1.21l-0.89,-1.33l2.55,-1.57l1.09,-1.12l-0.14,-0.84l-0.85,-0.53l0.14,-0.19l0.34,-0.16l0.84,0.37l0.46,-0.33l-0.27,-1.31l-0.85,-0.9l0.06,-0.71l0.51,-1.43l1.0,-1.11l-1.35,-2.06l1.37,-0.21l0.61,-0.55l-0.13,-0.64l-1.17,-0.82l0.82,-0.15l0.58,-0.54l0.13,-0.69l-0.58,-1.38l0.02,-0.36l0.37,0.53l0.47,0.08l1.18,-1.15l23.64,-2.81l0.35,-0.41l-0.1,-1.34l-0.83,-2.39l2.98,-0.08l0.82,0.58l22.77,-3.54l7.63,-0.46l7.49,-0.86l8.81,-1.42l23.99,-3.09l1.11,-0.6l29.27,-5.2l0.73,-0.6l3.55,-0.54l-0.4,1.43l0.43,0.85l-0.4,2.0l0.36,0.81l-1.15,-0.03l-1.71,1.79l-1.2,3.88l-0.55,0.7l-0.56,0.08l-0.63,-0.74l-1.44,-0.02l-2.66,1.73l-1.42,2.72l-0.96,0.89l-0.34,-0.34l-0.13,-1.05l-0.73,-0.54l-0.53,0.15l-2.3,1.81l-0.29,1.32l-0.93,-0.24l-0.89,0.48l-0.16,0.76l0.32,0.73l-0.84,2.17l-1.28,0.06l-1.75,1.13l-1.89,2.3l-0.78,0.27l-2.28,2.46l-4.03,0.78l-2.58,1.7l-0.49,1.09l-0.88,0.55l-0.55,0.81l-0.18,2.88l-0.35,0.6l-1.65,0.52l-0.89,-0.16l-1.06,1.14l0.21,5.24l-20.19,3.31l-21.6,3.04l-25.54,2.95l-0.34,0.31l-7.39,0.9l-28.7,3.17Z", "name": "Tennessee"}, "US-ID": {"path": "M132.38,121.27l-0.34,-0.44l0.08,-1.99l0.53,-1.74l1.42,-1.22l2.11,-3.59l1.68,-0.92l1.39,-1.52l1.08,-2.15l0.05,-1.22l2.21,-2.41l1.43,-2.69l0.37,-1.37l2.04,-2.25l1.89,-2.81l0.03,-1.01l-0.79,-2.95l-2.13,-1.94l-0.87,-0.36l-0.85,-1.61l-0.41,-3.02l-0.59,-1.19l0.94,-1.19l-0.12,-2.35l-1.04,-2.68l10.12,-55.38l13.37,2.35l-3.54,20.69l1.29,2.89l0.99,1.27l0.27,1.55l1.17,1.76l-0.12,0.83l0.39,1.14l-0.99,0.95l0.83,1.76l-0.83,0.11l-0.28,0.71l1.93,1.68l1.03,2.03l2.24,1.22l0.54,1.58l1.09,1.33l1.49,2.79l0.08,0.68l1.64,1.81l0.01,1.88l1.79,1.71l-0.07,1.35l0.74,0.19l0.9,-0.58l0.36,0.46l-0.36,0.55l0.07,0.54l1.11,0.96l1.61,0.15l1.81,-0.36l-0.63,2.61l-0.99,0.54l0.25,1.14l-1.83,3.73l0.06,1.71l-0.81,0.07l-0.37,0.54l0.6,1.33l-0.62,0.9l-0.03,1.16l0.96,0.93l-0.37,0.81l0.28,1.01l-1.57,0.43l-1.21,1.41l0.1,1.11l0.46,0.77l-0.13,0.73l-0.82,0.77l-0.2,1.52l1.48,0.63l1.38,1.79l0.78,0.27l1.08,-0.35l0.56,-0.8l1.85,-0.41l1.21,-1.28l0.81,-0.29l0.15,-0.76l0.78,0.81l0.23,0.71l1.05,0.64l-0.42,1.23l0.73,0.95l-0.34,1.38l0.57,1.34l-0.21,1.61l1.54,2.64l0.31,1.72l0.82,0.36l0.67,2.08l-0.18,0.98l-0.76,0.64l0.51,1.89l1.24,1.16l0.3,0.79l0.81,0.08l0.86,-0.37l1.04,0.93l1.06,2.79l-0.5,0.81l0.89,1.83l-0.28,0.6l0.11,0.98l2.29,2.41l0.97,-0.14l-0.01,-1.14l1.07,-0.89l0.93,-0.22l4.53,1.62l0.69,-0.32l0.67,-1.35l1.19,-0.39l2.25,0.93l3.3,-0.1l0.96,0.88l2.29,-0.58l3.22,0.78l0.45,-0.49l-0.67,-0.76l0.26,-1.06l0.74,-0.48l-0.07,-0.96l1.23,-0.51l0.48,0.37l1.07,2.11l0.12,1.11l1.36,1.95l0.73,0.45l-6.27,53.81l-47.43,-6.31l-46.93,-7.72l6.88,-39.13l1.12,-1.18l1.07,-2.67l-0.21,-1.74l0.74,-0.15l0.77,-1.62l-0.9,-1.26l-0.18,-1.2l-1.24,-0.08l-0.64,-0.81l-0.88,0.29Z", "name": "Idaho"}, "US-NV": {"path": "M139.35,328.89l-12.68,-16.92l-36.56,-51.05l-25.32,-34.49l13.69,-64.13l46.84,9.23l46.95,7.73l-18.7,125.71l-0.9,1.16l-0.99,2.19l-0.44,0.17l-1.34,-0.22l-0.98,-2.24l-0.7,-0.63l-1.41,0.22l-1.95,-1.02l-1.6,0.23l-1.78,0.96l-0.76,2.48l0.88,2.59l-0.6,0.97l-0.24,1.3l0.38,3.12l-0.76,2.54l0.77,3.71l-0.13,3.07l-0.3,1.07l-1.04,0.31l0.2,1.31l-0.52,0.62Z", "name": "Nevada"}, "US-TX": {"path": "M276.03,412.2l33.04,1.98l32.76,1.35l0.41,-0.39l3.6,-98.61l25.84,0.61l26.27,0.22l0.05,42.05l0.44,0.4l1.02,-0.13l0.78,0.28l3.74,3.82l1.66,0.21l0.88,-0.58l2.49,0.64l0.6,-0.68l0.11,-1.05l0.6,0.75l0.92,0.22l0.38,0.93l0.77,0.78l-0.01,1.64l0.52,0.83l2.85,0.42l1.25,-0.2l1.38,0.89l2.78,0.69l1.82,-0.56l0.62,0.1l1.89,1.8l1.4,-0.11l1.25,-1.43l2.43,0.26l1.67,-0.46l0.1,2.27l0.91,0.67l1.61,0.4l-0.04,2.08l1.56,0.78l1.82,-0.66l1.57,-1.67l1.02,-0.65l0.41,0.19l0.45,1.64l2.01,0.2l0.24,1.05l0.72,0.48l1.47,-0.21l0.88,-0.93l0.38,0.33l0.59,-0.08l0.61,-0.99l0.26,0.41l-0.45,1.23l0.14,0.76l0.67,1.14l0.78,0.42l0.57,-0.04l0.6,-0.5l0.68,-2.36l0.91,-0.65l0.35,-1.54l0.57,-0.14l0.4,0.14l0.29,0.99l0.57,0.64l1.2,0.02l0.83,0.5l1.25,-0.2l0.68,-1.34l0.48,0.15l-0.13,0.7l0.49,0.69l1.21,0.45l0.49,0.72l1.52,-0.05l1.48,1.73l0.52,0.02l0.63,-0.62l0.08,-0.71l1.49,-0.1l0.93,-1.43l1.88,-0.41l1.66,-1.13l1.52,0.83l1.51,-0.22l0.29,-0.83l2.28,-0.73l0.52,-0.55l0.5,0.32l0.38,0.87l1.82,0.42l1.69,-0.06l1.86,-1.14l0.41,-1.05l1.06,0.31l2.24,1.56l1.16,0.17l1.78,2.07l2.14,0.41l1.04,0.92l0.76,-0.11l2.48,0.85l1.04,0.04l0.37,0.79l1.38,0.97l1.44,-0.12l0.39,-0.72l0.8,0.36l0.88,-0.4l0.92,0.35l0.76,-0.15l0.64,0.36l2.22,34.0l1.51,1.67l1.3,0.82l1.24,1.87l0.57,1.63l-0.1,2.64l1.0,1.21l0.85,0.4l-0.12,0.85l0.75,0.54l0.28,0.87l0.65,0.7l-0.19,1.17l1.0,1.02l0.59,1.63l0.5,0.34l0.55,-0.1l-0.16,1.71l0.81,1.22l-0.64,0.25l-0.35,0.68l0.77,1.27l-0.55,0.89l0.19,1.39l-0.75,2.69l-0.74,0.85l-0.36,1.54l-0.79,1.13l0.64,2.0l-0.83,2.27l0.17,1.07l0.75,0.91l-0.11,1.3l0.49,1.6l-0.24,1.41l-1.18,1.78l-1.18,0.4l-1.16,2.72l-0.03,2.1l1.39,1.67l-3.42,0.08l-7.36,3.78l-0.02,-0.43l-0.69,-0.24l-0.23,0.23l-0.78,-0.43l-3.38,1.13l0.65,-1.31l0.35,-1.91l-0.34,-1.48l-0.52,-0.67l-2.07,0.05l-1.18,2.58l-0.42,0.15l-0.36,-0.65l-2.37,-1.23l-0.4,0.31l-0.18,0.82l0.23,0.45l1.07,0.38l-0.3,0.82l0.54,0.81l-0.47,0.64l0.04,0.99l1.48,0.76l-0.44,0.47l0.5,1.12l0.91,0.23l0.28,0.37l-0.4,1.25l-0.45,-0.12l-0.97,0.81l-1.72,2.25l-1.18,-0.4l-0.49,0.12l0.32,1.0l0.08,2.54l-1.85,1.49l-1.9,2.11l-0.96,0.37l-4.1,2.9l-3.3,0.44l-2.54,1.07l-0.2,1.12l-0.75,-0.34l-2.04,0.88l-0.33,-0.34l-1.11,0.18l0.43,-0.87l-0.52,-0.6l-1.43,0.22l-1.22,1.08l-0.6,-0.62l-0.11,-1.2l-1.38,-0.81l-0.5,0.44l0.65,1.44l0.01,1.12l-0.71,0.09l-0.54,-0.44l-0.75,-0.0l-0.55,-1.34l-1.46,-0.37l-0.58,0.39l0.04,0.54l0.94,1.7l0.03,1.23l0.58,0.37l0.37,-0.16l1.13,0.78l-0.75,0.37l-0.12,0.9l0.7,0.23l1.08,-0.55l0.95,0.6l-4.27,2.42l-0.57,-0.13l-0.37,-1.44l-0.5,-0.19l-1.13,-1.46l-0.48,-0.03l-1.05,1.99l1.18,1.61l-0.31,1.04l0.33,0.85l-1.66,1.79l-0.37,0.2l0.37,-0.63l-0.18,-0.72l0.25,-0.73l-0.46,-0.67l-0.52,0.17l-0.71,1.1l0.26,0.72l-0.39,0.94l-0.07,-1.13l-0.52,-0.55l-1.94,1.28l-0.78,-0.33l-0.69,0.51l0.07,0.75l-0.81,0.99l0.02,0.49l1.25,0.63l0.03,0.56l0.78,0.29l0.7,-1.41l0.86,-0.41l0.01,0.62l-2.82,4.35l-1.23,-1.0l-1.36,0.39l-0.32,-0.34l-2.39,0.39l-0.46,-0.31l-0.65,0.16l-0.18,0.58l0.41,0.61l0.55,0.38l1.53,0.03l0.54,1.55l2.07,1.03l-2.7,7.63l-0.2,0.1l-0.39,-0.54l-0.33,0.1l0.18,-0.75l-0.57,-0.43l-2.35,1.95l-1.72,-2.36l-1.18,-0.91l-0.61,0.4l0.09,0.52l1.44,2.0l-0.24,0.46l0.36,0.47l-1.16,-0.21l-0.33,0.63l0.5,0.56l0.89,0.23l1.12,-0.16l0.66,0.62l1.36,0.18l1.0,-0.03l0.99,-0.61l-0.34,1.58l0.24,0.77l-0.98,0.7l0.37,1.59l-1.12,0.14l-0.43,0.41l0.4,2.1l-0.33,1.59l0.45,0.64l0.84,0.24l0.87,2.86l0.71,2.8l-0.91,0.82l0.62,0.49l-0.08,1.28l0.71,0.3l0.18,0.61l0.58,0.29l0.4,1.79l0.68,0.31l0.45,3.21l1.46,0.62l-0.52,1.1l0.31,1.08l-0.62,0.77l-0.84,-0.05l-0.54,0.44l0.09,1.3l-0.49,-0.33l-0.49,0.25l-0.39,-0.67l-1.49,-0.45l-2.91,-2.53l-2.2,-0.18l-0.81,-0.51l-4.2,0.09l-0.9,0.42l-0.79,-0.62l-1.64,0.24l-2.12,-0.89l-0.73,-0.97l-0.6,-0.14l-0.21,-0.72l-1.17,-0.49l-0.99,-0.02l-1.98,-0.87l-1.45,0.39l-0.83,-1.09l-0.6,-0.21l-1.43,-1.38l-1.96,0.01l-1.47,-0.64l-0.86,0.11l-1.61,-0.41l0.35,-0.9l-0.3,-0.97l-1.11,-0.7l0.3,-0.29l-0.26,-1.44l0.56,-1.21l-0.35,-0.67l0.88,-0.38l0.12,-0.54l-1.03,-0.54l-0.91,0.67l-0.32,-0.31l0.03,-1.09l-0.59,-0.83l0.31,-0.09l0.53,-1.43l-0.22,-0.71l-0.71,0.09l-1.02,0.96l-0.57,-0.89l-0.85,-0.28l-0.26,-1.34l-1.51,-0.77l0.29,-0.65l-0.24,-0.76l0.34,-2.18l-0.44,-0.96l-1.04,-1.01l0.65,-1.99l0.05,-1.19l-0.18,-0.7l-0.54,-0.32l-0.15,-1.81l-1.85,-1.44l-0.85,0.21l-0.3,-0.41l-0.81,-0.11l-0.74,-1.31l-2.22,-1.71l0.01,-0.69l-0.51,-0.58l0.12,-0.87l-0.97,-0.92l-0.08,-0.75l-1.12,-0.61l-1.3,-2.88l-2.66,-1.47l-0.38,-0.91l-1.13,-0.59l-0.06,-1.16l-0.82,-1.18l-0.59,-1.95l0.41,-0.22l-0.04,-0.72l-1.03,-0.49l-0.26,-1.29l-0.82,-0.58l-0.94,-1.73l-0.61,-2.38l-1.85,-2.36l-0.87,-4.24l-1.81,-1.34l0.05,-0.7l-0.75,-1.21l-4.07,-2.82l-0.29,-1.39l1.68,-0.02l0.79,-0.84l-0.29,-0.39l-0.65,-0.06l-0.09,-0.72l0.08,-0.88l0.64,-0.7l-0.11,-0.74l-0.48,0.05l-0.77,0.72l-0.45,0.69l0.01,0.66l-0.88,0.15l-0.39,1.07l-0.54,-0.04l-1.8,-1.75l0.06,-0.67l-0.41,-0.68l-0.77,-0.2l-0.64,0.29l-0.33,-0.53l-0.73,-0.13l-0.89,-2.16l-1.49,-0.8l-0.85,0.27l-0.44,-0.87l-0.61,0.1l-0.25,0.61l-1.05,0.16l-2.88,-0.47l-0.39,-0.38l-1.48,-0.03l-0.78,0.29l-0.77,-0.44l-2.66,0.27l-2.42,-1.08l-1.14,-0.89l-0.68,-0.07l-1.03,0.82l-0.64,1.61l-1.99,-0.17l-0.51,0.44l-0.49,-0.16l-2.52,0.78l-3.07,6.25l-0.18,1.77l-0.76,0.67l-0.38,1.8l0.34,0.59l-1.96,0.98l-0.75,1.32l-1.06,0.61l-0.62,0.83l-0.29,1.09l-2.91,-0.34l-1.04,-0.87l-0.54,0.3l-1.69,-1.2l-1.31,-1.63l-2.89,-0.85l-1.15,-0.95l-0.02,-0.67l-0.42,-0.4l-2.75,-0.51l-2.27,-1.03l-1.89,-1.75l-0.91,-1.53l-0.96,-0.91l-1.53,-0.29l-1.76,-1.25l-0.22,-0.56l-1.14,-0.96l-0.83,-2.9l-0.86,-1.01l-0.24,-1.1l-0.76,-1.27l-0.26,-2.34l0.52,-3.04l-3.0,-5.06l-0.06,-1.93l-1.26,-2.51l-0.99,-0.44l-0.43,-1.23l-1.43,-0.81l-2.15,-2.17l-1.02,-0.1l-2.01,-1.25l-3.18,-3.35l-0.59,-1.55l-3.12,-2.55l-1.58,-2.45l-1.19,-0.95l-0.61,-1.05l-4.41,-2.6l-2.4,-5.42l-1.37,-1.08l-1.12,-0.08l-1.76,-1.68l-0.78,-3.04ZM501.74,467.74l-0.32,0.17l0.18,-0.16l0.14,-0.02ZM498.34,470.41l-0.09,0.11l-0.04,0.02l0.12,-0.13ZM497.45,471.84l0.56,0.11l-2.39,1.98l1.6,-1.46l0.24,-0.63ZM467.22,488.72l0.02,0.02l-0.02,0.01l-0.0,-0.03ZM453.63,546.67l0.75,-0.5l0.25,-0.67l0.11,1.07l-1.11,0.1ZM460.58,499.32l-0.15,-0.59l1.22,-0.36l-0.28,0.33l-0.79,0.63ZM463.2,497.36l0.1,-0.23l1.26,-0.88l-0.91,0.84l-0.45,0.26ZM465.48,495.65l0.28,-0.24l0.47,-0.04l-0.24,0.13l-0.5,0.15ZM457.65,502.44l0.71,-1.63l0.64,-0.71l-0.02,0.75l-1.33,1.59ZM450.0,517.92l0.11,-0.75l0.21,-0.49l-0.02,0.05l-0.3,1.18ZM450.93,514.97l0.2,-0.61l0.22,-0.56l-0.42,1.17ZM451.46,513.55l0.69,-1.73l0.23,-0.76l0.12,0.06l-1.04,2.43Z", "name": "Texas"}, "US-NH": {"path": "M829.28,105.31l0.2,-1.33l-1.43,-5.38l0.53,-1.45l-0.28,-2.22l1.0,-1.86l-0.13,-2.3l0.64,-2.28l-0.44,-0.62l0.29,-2.3l-0.93,-3.8l0.08,-0.7l0.3,-0.45l1.83,-0.8l0.7,-1.39l1.43,-1.62l0.74,-1.8l-0.25,-1.12l0.52,-0.62l-2.34,-3.49l0.87,-3.26l-0.11,-0.78l-0.81,-1.29l0.28,-0.59l-0.23,-0.7l0.48,-3.2l-0.36,-0.82l0.91,-1.49l2.43,0.33l0.65,-0.86l12.98,34.83l0.84,3.65l2.59,2.21l0.88,0.34l0.36,1.6l1.71,1.31l0.0,0.35l0.77,0.23l-0.06,0.58l-0.46,3.09l-1.57,0.24l-1.32,1.19l-0.51,0.94l-0.96,0.37l-0.5,1.68l-1.1,1.43l-17.6,4.74l-1.69,-1.43l-0.41,-0.88l-0.1,-2.0l0.54,-0.59l0.03,-0.52l-1.02,-5.18Z", "name": "New Hampshire"}, "US-NY": {"path": "M821.32,168.46l-0.84,-0.72l0.83,-3.22l1.03,-0.3l0.37,-0.48l0.74,0.21l0.64,-0.32l-0.06,-0.58l0.43,-0.05l0.28,-0.66l0.72,-0.32l-0.21,-1.42l0.73,-0.46l0.35,0.56l1.04,-0.16l0.49,-0.33l0.01,-0.54l1.46,-0.18l0.24,-0.74l1.66,0.02l0.91,-0.54l0.45,-1.21l0.61,0.24l0.43,-0.5l4.32,-1.28l2.35,-1.12l2.36,-2.84l0.18,0.16l-2.53,3.41l-0.01,0.46l0.56,0.38l1.59,-0.33l0.28,0.61l-1.3,1.19l-2.05,0.53l-0.37,0.58l-1.16,0.41l0.23,0.43l-0.24,0.3l-0.68,-0.16l-0.74,0.7l-1.04,0.17l-0.37,0.55l-1.41,0.45l-0.26,0.67l-1.34,0.19l-0.44,0.7l-1.35,0.96l-2.76,1.33l-1.02,0.88l-1.04,0.09l-0.32,0.93l-0.28,0.03l-0.26,-0.68l-1.45,-0.25l-0.88,0.74l0.07,0.96l-0.94,0.56ZM843.65,154.91l0.88,-2.14l1.18,-0.48l0.6,-0.92l0.81,0.34l0.13,-0.83l0.75,0.63l-3.84,3.68l-0.5,-0.28ZM844.52,149.04l0.06,-0.06l0.18,-0.06l-0.11,0.19l-0.13,-0.07ZM844.28,150.64l0.16,0.07l0.26,0.04l-0.61,0.15l0.19,-0.26ZM721.53,155.41l3.76,-3.84l1.27,-2.19l1.75,-1.86l1.16,-0.78l1.28,-3.35l2.09,-2.13l-0.21,-1.83l-1.61,-2.41l0.42,-1.13l-0.17,-0.78l-0.83,-0.53l-2.09,-0.0l0.04,-0.99l-0.58,-2.23l4.97,-2.93l4.48,-1.79l2.38,-0.2l1.84,-0.74l5.63,-0.24l3.12,1.25l3.16,-1.68l5.48,-1.06l0.59,0.45l0.68,-0.2l0.12,-0.98l3.23,-1.85l0.69,-2.05l1.87,-1.76l0.78,-1.26l1.11,0.03l1.13,-0.52l1.06,-1.63l-0.46,-0.69l0.36,-1.2l-0.25,-0.51l-0.64,0.02l-0.17,-1.17l-0.94,-1.58l-1.01,-0.62l0.12,-0.18l0.59,0.39l0.53,-0.27l0.74,-1.43l-0.01,-0.91l0.81,-0.64l-0.01,-0.98l-0.93,-0.19l-0.6,0.7l-0.28,0.12l0.56,-1.3l-0.81,-0.63l-1.26,0.05l-0.87,0.77l-0.98,-0.7l2.05,-2.5l1.78,-1.47l1.67,-2.63l0.7,-0.56l0.89,-1.54l0.07,-0.56l-0.49,-0.94l0.78,-1.9l4.82,-7.61l4.76,-4.5l2.83,-0.51l19.64,-5.65l0.4,0.87l-0.08,2.0l1.01,1.22l0.43,3.79l2.29,3.24l-0.09,1.89l0.85,2.41l-0.59,1.07l-0.0,3.41l0.71,0.89l1.32,2.76l0.19,1.08l0.61,0.84l0.12,3.92l0.55,0.85l0.54,0.07l0.53,-0.61l0.06,-0.87l0.33,-0.07l1.05,1.12l3.86,14.47l0.11,1.59l0.62,1.09l0.33,14.91l0.6,0.62l3.57,16.22l1.26,1.34l-2.82,3.18l0.03,0.54l1.74,1.62l-1.86,3.36l0.21,1.06l-1.03,0.45l-0.24,-4.26l-0.56,-2.23l-0.74,-1.62l-1.46,-1.1l-0.17,-1.13l-0.7,-0.09l-0.42,1.33l0.8,1.45l0.94,0.69l0.95,2.79l-13.73,-4.05l-1.28,-1.47l-2.38,0.24l-0.63,-0.43l-1.06,-0.15l-1.74,-1.91l-0.75,-2.33l0.12,-0.72l-0.36,-0.63l-0.56,-0.21l0.09,-0.46l-0.35,-0.42l-1.64,-0.67l-1.08,0.32l-0.53,-1.22l-1.92,-0.93l-34.57,8.72l-34.4,7.84l-1.11,-5.14ZM817.91,170.84l0.35,-0.91l-0.16,-1.32l1.12,-0.32l0.34,0.32l-0.38,0.97l-1.26,1.26ZM729.5,136.49l0.03,-0.69l0.78,-0.07l-0.37,1.09l-0.43,-0.33Z", "name": "New York"}, "US-HI": {"path": "M298.48,589.39l-0.18,-1.01l-1.54,-3.01l-1.01,-1.15l0.02,-1.22l0.53,-1.37l3.84,-4.27l0.75,-4.3l0.79,-2.44l-0.28,-2.12l0.34,-1.47l0.97,-0.64l1.3,-0.07l1.05,-0.42l1.31,0.25l2.26,-0.99l1.3,-0.07l0.99,-0.98l-0.03,-2.68l0.29,-1.04l0.82,-1.33l0.97,-0.43l2.21,2.03l-0.08,1.42l1.58,3.24l1.4,0.91l1.72,2.22l3.34,6.53l0.49,2.76l-1.76,2.78l0.14,0.54l1.62,0.56l0.23,0.53l-0.68,1.38l-0.07,1.58l1.47,3.99l-0.29,0.34l-1.95,0.56l-1.23,-0.27l-2.08,0.34l-3.11,-0.42l-2.64,-0.85l-0.76,-0.79l-1.19,-0.58l-2.44,0.12l-4.01,-0.54l-1.64,0.28l-0.92,1.02l-3.83,1.11ZM306.47,542.25l1.23,-2.02l0.53,-1.67l-0.74,-1.06l-0.93,0.01l-1.23,-1.84l-0.25,-2.17l0.26,-0.83l0.75,-0.73l1.59,-0.51l0.71,0.35l0.6,1.14l0.08,3.24l2.5,1.07l1.4,0.1l1.57,1.41l0.55,2.77l0.46,0.29l0.1,0.91l1.82,2.24l-0.11,0.94l-1.17,0.93l-1.38,0.09l-1.99,-0.52l-1.63,-1.1l-2.59,-0.42l-1.99,-1.51l-0.12,-1.11ZM297.87,518.73l3.75,3.65l0.77,0.58l0.82,-0.14l-0.08,0.78l0.9,1.01l2.78,1.54l0.71,0.98l-1.26,0.3l-2.78,-0.67l-3.58,-3.88l-4.47,-2.84l0.39,-0.59l1.42,-0.11l0.63,-0.62ZM302.23,542.72l-2.54,-1.48l-0.04,-0.2l2.91,0.18l0.31,0.71l-0.63,0.79ZM297.9,532.9l-0.83,-0.51l-0.02,-0.56l1.02,-1.89l-0.82,-1.66l0.18,-0.37l1.26,0.5l1.73,1.57l0.51,2.43l-0.07,0.53l-1.01,0.49l-1.94,-0.51ZM281.6,504.1l0.34,-1.82l-0.24,-1.37l0.32,-0.93l-0.26,-1.35l0.7,-1.2l-0.18,-0.95l2.51,1.67l2.21,-0.12l0.92,-0.54l1.66,0.13l0.3,0.96l-0.43,1.34l0.01,2.02l0.34,1.03l-0.65,0.36l-0.51,1.07l0.54,2.14l0.9,0.29l0.12,1.28l-0.41,1.19l0.44,1.05l-0.8,0.09l-0.3,-0.63l-2.22,-0.69l-0.85,-2.97l-0.9,0.19l-0.3,-0.61l0.93,-0.1l0.41,-0.6l-0.36,-0.81l-0.88,-0.72l-0.38,0.16l-0.44,-0.42l-0.38,0.32l0.12,1.58l-2.3,-1.0ZM258.46,463.92l1.68,-0.35l0.93,-0.56l1.11,0.43l3.05,0.32l0.62,1.16l0.88,-0.05l2.28,1.88l0.22,1.27l-0.2,0.96l-0.4,0.48l-1.74,0.75l-1.12,1.64l-3.25,0.41l-3.02,-3.19l-0.21,-1.61l-1.4,-1.87l0.04,-1.02l0.53,-0.64ZM245.6,462.78l0.04,-0.98l0.76,-0.58l3.31,-0.05l1.1,-0.71l0.49,0.42l-1.16,0.6l-0.33,0.67l-2.69,-0.26l-1.51,0.88Z", "name": "Hawaii"}, "US-VT": {"path": "M804.93,72.62l26.0,-7.96l0.89,1.84l-0.74,2.37l-0.03,1.54l2.22,2.74l-0.51,0.58l0.26,1.13l-0.66,1.6l-1.35,1.49l-0.64,1.32l-1.72,0.7l-0.62,0.92l-0.1,0.98l0.93,3.73l-0.29,2.44l0.4,0.54l-0.6,2.11l0.15,2.19l-1.0,1.87l0.27,2.36l-0.53,1.54l1.43,5.44l-0.22,1.22l1.04,5.3l-0.58,0.85l0.11,2.3l0.6,1.26l1.5,1.1l-11.71,3.08l-4.3,-16.78l-1.71,-1.59l-0.9,0.25l-0.3,1.19l-0.12,-0.25l-0.11,-3.9l-0.68,-1.0l-0.14,-0.98l-1.36,-2.85l-0.63,-0.68l0.01,-3.14l0.6,-1.14l-0.86,-2.56l0.08,-1.93l-0.39,-0.91l-1.55,-1.63l-0.38,-0.81l-0.41,-3.71l-1.03,-1.26l0.11,-1.87l-0.42,-1.0Z", "name": "Vermont"}, "US-NM": {"path": "M230.76,422.48l11.81,-123.55l25.64,2.24l26.07,1.86l26.1,1.45l25.72,1.02l-0.31,10.23l-0.74,0.39l-3.59,98.59l-32.35,-1.33l-33.5,-2.01l-0.44,0.76l0.54,2.31l0.44,1.26l1.0,0.77l-30.51,-2.46l-0.43,0.36l-0.81,9.45l-14.63,-1.33Z", "name": "New Mexico"}, "US-NC": {"path": "M826.21,289.21l0.06,-0.04l-0.02,0.03l-0.04,0.02ZM818.93,272.14l0.2,0.23l-0.05,0.01l-0.16,-0.24ZM821.18,276.42l0.19,0.15l-0.02,0.18l-0.05,-0.08l-0.12,-0.25ZM676.2,321.46l0.92,0.17l1.52,-0.39l0.42,-0.39l0.52,-0.97l0.12,-2.7l1.34,-1.19l0.47,-1.05l2.24,-1.46l2.12,-0.52l0.75,0.18l1.32,-0.52l2.36,-2.52l0.78,-0.25l1.84,-2.29l1.48,-1.0l1.55,-0.19l1.15,-2.65l-0.28,-1.22l1.65,0.06l0.51,-1.65l0.93,-0.77l1.08,-0.77l0.51,1.51l1.06,0.33l1.34,-1.17l1.35,-2.64l2.48,-1.59l0.79,0.08l0.82,0.8l1.06,-0.21l0.84,-1.07l1.47,-4.18l1.08,-1.09l1.47,0.09l0.44,-0.31l-0.69,-1.26l0.4,-2.0l-0.42,-0.9l0.38,-1.25l7.41,-0.86l19.53,-3.36l37.18,-8.41l31.09,-7.87l0.4,1.21l3.53,3.24l1.0,1.52l-1.2,-1.0l-0.16,-0.63l-0.92,-0.4l-0.52,0.05l-0.24,0.65l0.66,0.54l0.59,1.56l-0.53,0.01l-0.91,-0.75l-2.31,-0.8l-0.4,-0.48l-0.55,0.13l-0.31,0.69l0.14,0.64l1.37,0.44l1.69,1.38l-1.1,0.66l-2.48,-1.2l-0.35,0.5l0.14,0.42l1.6,1.18l-1.84,-0.33l-2.23,-0.87l-0.46,0.14l0.01,0.48l0.6,0.7l1.7,0.83l-0.97,0.57l0.0,0.6l-0.43,0.53l-1.47,0.75l-0.89,-0.77l-0.61,0.22l-0.1,0.35l-0.2,-0.13l-1.31,-2.32l0.21,-2.63l-0.42,-0.48l-0.89,-0.22l-0.37,0.64l0.62,0.71l-0.43,0.99l-0.02,1.03l0.49,1.73l1.6,2.2l-0.31,1.27l0.48,0.29l2.96,-0.59l2.09,-1.49l0.27,0.01l0.37,0.79l0.76,-0.34l1.56,0.05l0.16,-0.72l-0.57,-0.32l1.29,-0.76l2.04,-0.46l-0.1,1.19l0.64,0.29l-0.6,0.88l0.88,1.19l-0.84,0.1l-0.19,0.66l1.38,0.46l0.26,0.94l-1.21,0.05l-0.19,0.66l0.66,0.59l1.24,-0.16l0.52,0.26l0.41,-0.38l0.18,-1.94l-0.74,-3.33l0.41,-0.48l0.56,0.43l0.94,0.06l0.28,-0.58l-0.29,-0.44l0.48,-0.57l1.71,1.84l-0.01,1.4l0.62,0.9l-0.78,0.65l0.9,1.14l-0.08,0.37l-0.42,0.55l-0.78,0.09l-0.9,-0.86l-0.32,0.34l0.13,1.26l-1.08,1.62l0.2,0.56l-0.32,0.22l-0.15,0.98l-0.74,0.55l0.1,0.91l-0.9,0.96l-1.05,0.21l-0.6,-0.37l-0.52,0.52l-0.93,-0.81l-0.86,0.1l-0.4,-0.82l-0.58,-0.21l-0.52,0.38l0.08,0.94l-0.52,0.22l-1.42,-1.24l1.31,-0.4l0.23,-0.88l-0.57,-0.42l-2.02,0.31l-1.14,1.01l0.29,0.67l0.44,0.16l0.09,0.82l0.35,0.25l-0.03,0.12l-0.57,-0.34l-1.69,0.83l-1.12,-0.43l-1.45,0.06l-3.32,-0.7l0.42,1.08l0.97,0.45l0.36,0.64l1.5,-0.21l4.02,1.02l3.5,0.11l0.47,0.42l-0.06,0.52l-0.99,0.05l-0.25,0.72l-1.61,1.44l0.32,0.58l1.85,0.01l-2.55,3.49l-1.66,0.04l-1.6,-0.98l-0.9,-0.19l-1.21,-1.02l-1.12,0.07l0.07,0.47l1.04,1.14l2.32,2.09l2.67,0.26l1.31,0.49l1.7,-2.16l0.51,0.47l1.17,0.33l0.4,-0.57l-0.55,-0.9l0.87,0.16l0.19,0.57l0.66,0.23l1.63,-1.19l-0.18,0.61l0.29,0.57l-0.29,0.38l-0.43,-0.21l-0.41,0.37l0.03,0.9l-0.97,1.72l0.01,0.78l-0.71,-0.07l-0.06,-0.74l-1.12,-0.61l-0.42,0.47l0.27,1.45l-0.52,-1.1l-0.65,-0.15l-1.22,1.08l-0.21,0.53l0.25,0.27l-2.03,0.32l-2.75,1.83l-0.67,-1.03l-0.75,-0.3l-0.37,0.49l0.43,1.25l-0.57,-0.01l-0.1,0.82l-0.94,1.72l-0.91,0.84l-0.59,-0.26l0.48,-0.69l-0.02,-0.77l-1.06,-0.93l-0.08,-0.52l-1.69,-0.41l-0.16,0.47l0.43,1.16l0.2,0.33l0.58,0.07l0.3,0.61l-0.88,0.37l-0.08,0.71l0.65,0.64l0.76,0.18l-0.01,0.37l-2.12,1.67l-1.91,2.65l-2.0,4.3l-0.3,2.66l-1.08,-1.82l-0.55,-0.17l-0.3,0.48l1.17,3.95l-0.63,2.27l-3.9,0.19l-1.43,0.65l-0.35,-0.52l-0.58,-0.18l-0.54,1.07l-1.89,1.14l-0.61,-0.02l-23.23,-15.34l-1.04,-0.02l-18.66,3.49l-0.65,-2.76l-3.25,-2.84l-0.47,0.08l-1.23,1.31l-0.01,-1.28l-0.81,-0.54l-22.8,3.35l-0.64,-0.27l-0.62,0.46l-0.25,0.65l-3.98,1.92l-0.89,1.23l-1.01,0.08l-4.78,2.65l-20.93,3.92l-0.34,-4.55l0.7,-0.95ZM816.35,271.22l0.18,0.35l0.24,0.38l-0.45,-0.41l0.02,-0.32ZM806.89,290.01l0.2,0.32l-0.16,-0.09l-0.04,-0.24ZM791.78,323.84l0.08,0.8l-0.07,-0.21l-0.01,-0.59ZM814.67,298.87l0.16,-0.36l0.15,0.07l-0.13,0.29l-0.18,0.01ZM812.11,298.83l-0.06,-0.28l-0.03,-0.11l0.3,0.26l-0.21,0.13ZM812.33,263.77l0.36,-0.24l0.15,0.42l-0.42,0.07l-0.1,-0.25ZM791.29,329.09l0.04,-0.08l0.22,0.03l-0.0,0.09l-0.25,-0.05Z", "name": "North Carolina"}, "US-ND": {"path": "M438.24,42.74l2.06,6.89l-0.73,2.53l0.57,2.36l-0.27,1.17l0.47,1.99l0.01,3.26l1.42,3.95l0.45,0.54l-0.08,0.97l0.39,1.52l0.62,0.74l1.48,3.74l-0.06,3.89l0.42,0.7l0.5,8.34l0.51,1.53l0.51,0.25l-0.47,2.64l0.36,1.63l-0.14,1.75l0.69,1.1l0.2,2.16l0.49,1.13l1.8,2.56l0.15,2.2l0.51,1.08l0.17,1.39l-0.24,1.36l0.28,1.74l-27.87,0.73l-28.36,0.19l-28.35,-0.36l-28.46,-0.92l2.75,-65.39l23.07,0.78l25.54,0.42l25.54,-0.06l24.08,-0.49Z", "name": "North Dakota"}, "US-NE": {"path": "M422.3,173.85l3.92,2.71l3.93,1.9l1.33,-0.22l0.51,-0.47l0.36,-1.08l0.48,-0.2l2.49,0.34l1.31,-0.47l1.58,0.25l3.44,-0.65l2.37,1.98l1.4,0.14l1.55,0.77l1.45,0.08l0.88,1.1l1.48,0.17l-0.06,0.98l1.68,2.08l3.31,0.6l-0.02,2.55l1.13,1.94l0.01,2.29l1.15,1.07l0.33,1.71l1.73,1.46l0.07,1.88l1.5,2.1l-0.49,2.33l0.44,3.09l0.52,0.54l0.93,-0.2l-0.04,1.24l1.21,0.5l-0.4,2.36l0.21,0.44l1.12,0.4l-0.6,0.77l-0.09,1.01l0.13,0.59l0.82,0.5l0.16,1.45l-0.26,0.92l0.26,1.27l0.55,0.61l0.3,1.92l-0.22,1.33l0.23,0.72l-0.57,0.92l0.02,0.79l0.44,0.88l1.23,0.63l0.25,2.5l1.1,0.51l0.03,0.79l1.18,2.75l-0.23,0.96l1.16,0.21l0.8,0.99l1.1,0.24l-0.15,0.96l1.31,1.68l-0.21,1.12l0.51,0.91l-26.12,1.04l-27.81,0.63l-27.82,0.14l-27.86,-0.35l0.46,-21.63l-0.39,-0.41l-32.33,-1.04l1.85,-43.2l43.32,1.22l44.63,-0.04Z", "name": "Nebraska"}, "US-LA": {"path": "M508.61,412.57l-1.33,-21.74l51.4,-4.07l0.34,0.83l1.48,0.65l-0.92,1.35l-0.25,2.13l0.49,0.72l1.17,0.31l-1.21,0.47l-0.45,0.78l0.45,1.36l1.04,0.84l0.08,2.14l0.46,0.54l1.51,0.74l0.45,1.05l1.42,0.44l-0.87,1.22l-0.85,2.34l-0.75,0.04l-0.52,0.51l-0.02,0.73l0.63,0.72l-0.22,1.16l-1.34,0.95l-1.08,1.89l-1.37,0.67l-0.68,0.82l-0.79,2.41l-0.25,3.52l-1.54,1.74l0.13,1.2l0.62,0.96l-0.35,2.37l-1.6,0.29l-0.59,0.57l0.28,0.97l0.64,0.59l-0.25,1.41l0.98,1.51l-1.18,1.18l-0.08,0.45l0.4,0.23l6.17,-0.55l29.21,-2.92l-0.68,3.47l-0.52,1.02l-0.2,2.24l0.69,0.98l-0.09,0.66l0.6,1.0l1.31,0.7l1.22,1.42l0.14,0.88l0.89,1.38l0.14,1.05l1.11,1.84l-1.85,0.39l-0.38,-0.08l-0.01,-0.56l-0.53,-0.57l-1.28,0.27l-1.18,-0.59l-1.51,0.17l-0.61,-0.98l-1.24,-0.86l-2.84,-0.47l-1.24,0.63l-1.39,2.29l-1.3,1.42l-0.42,0.91l0.07,1.2l0.55,0.89l0.82,0.57l4.24,0.82l3.34,-1.0l1.32,-1.19l0.68,-1.2l0.34,0.59l1.08,0.43l0.59,-0.4l0.81,0.03l0.5,-0.46l-0.76,1.21l-1.11,-0.12l-0.57,0.32l-0.38,0.62l0.0,0.83l0.76,1.22l1.48,-0.02l0.65,0.89l1.1,0.48l1.44,-0.66l0.46,-1.11l-0.02,-1.37l0.93,-0.57l0.42,-0.99l0.23,0.05l0.1,1.16l-0.24,0.25l0.19,0.57l0.42,0.15l-0.07,0.75l1.34,1.08l0.35,-0.16l-0.48,0.59l0.18,0.63l-0.24,0.17l-0.84,-0.71l-0.71,-0.08l-1.0,1.89l-0.84,0.14l-0.46,0.53l0.16,1.19l-1.59,-0.6l-0.43,0.19l0.04,0.46l1.14,1.06l-1.17,-0.14l-0.92,0.6l0.68,0.43l1.26,2.04l2.73,0.97l-0.08,1.2l0.33,0.4l2.07,-0.31l0.77,0.17l0.17,0.53l0.73,0.32l1.35,-0.34l0.53,0.78l1.08,-0.46l1.13,0.73l0.14,0.3l-0.4,0.62l1.53,0.86l-0.39,0.65l0.39,0.58l-0.18,0.62l-0.95,1.49l-1.3,-1.55l-0.68,0.34l0.1,0.66l-0.38,0.12l0.41,-1.88l-1.32,-0.76l-0.51,0.5l0.2,1.17l-0.54,0.45l-0.27,-1.02l-0.57,-0.25l-0.89,-1.27l0.03,-0.77l-0.96,-0.14l-0.47,0.5l-1.41,-0.17l-0.74,-0.77l-2.31,-0.09l0.38,-0.86l-0.13,-0.66l-0.64,-0.69l-0.91,0.04l0.1,-0.96l-0.37,-0.36l-0.91,-0.03l-0.22,0.59l-0.85,-0.38l-0.48,0.27l-2.61,-1.26l-1.24,-0.02l-0.67,-0.64l-0.61,0.18l-0.3,0.56l-0.05,1.25l1.72,0.94l1.67,0.35l-0.16,0.92l0.28,0.4l-0.34,0.34l0.23,0.68l-0.76,0.94l-0.03,0.66l0.81,0.97l-0.95,1.43l-1.33,0.94l-0.76,-1.15l0.22,-1.5l-0.35,-0.92l-0.49,-0.18l-0.4,0.36l-1.15,-1.08l-0.6,0.42l-0.76,-1.05l-0.62,-0.2l-0.64,1.33l-0.85,0.26l-0.89,-0.53l-0.85,0.53l-0.1,0.62l0.48,0.41l-0.67,0.56l-0.13,1.44l-0.45,0.13l-0.4,0.84l-0.92,0.08l-0.11,-0.68l-1.6,-0.4l-0.76,0.97l-1.92,-0.93l-0.3,-0.54l-0.99,0.01l-0.35,0.6l-1.15,-0.51l0.42,-0.4l0.0,-1.46l-0.38,-0.57l-1.89,-1.19l-0.08,-0.54l-0.83,-0.71l-0.09,-0.91l0.73,-1.15l-0.34,-1.14l-0.88,-0.19l-0.34,0.57l0.16,0.43l-0.58,0.81l0.04,0.91l-1.79,-0.4l0.07,-0.38l-0.47,-0.54l-1.96,0.76l-0.7,-2.21l-1.32,0.23l-0.18,-2.12l-1.3,-0.35l-1.89,0.3l-1.08,0.65l-0.21,-0.71l0.84,-0.26l-0.05,-0.8l-0.6,-0.58l-1.03,-0.1l-0.85,0.42l-0.94,-0.15l-0.4,0.8l-1.99,1.11l-0.63,-0.31l-1.29,0.71l0.53,1.37l0.81,0.31l1.04,1.55l-1.27,0.36l-1.81,1.06l-7.62,-0.92l-6.69,-2.31l-3.45,-0.65l-6.85,0.69l-3.4,0.8l-1.57,0.73l-0.91,-1.41l1.2,-0.45l0.79,-0.98l0.27,-2.3l-0.59,-0.84l1.15,-1.62l0.23,-1.59l-0.5,-1.83l0.07,-1.46l-0.66,-0.7l-0.21,-1.04l0.83,-2.21l-0.63,-1.95l0.76,-0.84l0.3,-1.49l0.78,-0.94l0.79,-2.83l-0.18,-1.42l0.58,-0.97l-0.75,-1.33l0.84,-0.39l0.19,-0.44l-0.89,-1.35l0.03,-2.13l-1.07,-0.23l-0.57,-1.57l-0.92,-0.84l0.28,-1.27l-0.81,-0.75l-0.33,-0.95l-0.64,-0.34l0.22,-0.98l-1.16,-0.58l-0.81,-0.93l0.16,-2.45l-0.68,-1.93l-1.33,-1.98l-2.63,-2.2ZM607.03,467.01l-0.03,-0.03l-0.07,-0.04l0.13,-0.01l-0.03,0.08ZM607.05,465.4l-0.02,-0.01l0.03,-0.01l-0.01,0.02ZM566.62,468.53l-1.99,-0.42l-0.66,-0.5l0.73,-0.43l0.35,-0.75l0.39,0.49l0.83,0.21l-0.14,0.6l0.5,0.81ZM549.99,462.56l1.73,-1.05l3.34,1.07l-0.69,0.56l-0.17,0.81l-0.68,0.17l-3.52,-1.57Z", "name": "Louisiana"}, "US-SD": {"path": "M336.18,128.72l0.3,-0.53l0.75,-19.91l28.47,0.92l28.37,0.36l28.37,-0.19l27.75,-0.73l-0.18,1.7l-0.73,1.71l-2.9,2.46l-0.42,1.27l1.59,2.13l1.06,2.06l0.54,0.36l1.74,0.24l1.01,0.84l0.57,1.02l1.45,38.8l-1.84,0.09l-0.42,0.56l0.24,1.43l0.88,1.14l0.01,1.45l-0.65,0.36l0.17,1.47l0.48,0.43l1.09,0.04l0.33,1.68l-0.16,0.91l-0.62,0.83l0.02,1.73l-0.68,2.45l-0.49,0.44l-0.67,1.88l0.5,1.1l1.33,1.08l-0.16,0.62l0.64,0.66l0.35,1.15l-1.65,-0.28l-0.34,-0.94l-0.85,-0.73l0.19,-0.61l-0.28,-0.59l-1.58,-0.23l-1.03,-1.18l-1.57,-0.11l-1.5,-0.75l-1.34,-0.12l-2.38,-1.99l-3.78,0.59l-1.65,-0.25l-1.19,0.46l-2.62,-0.33l-0.98,0.48l-0.76,1.44l-0.72,0.05l-3.66,-1.82l-4.12,-2.8l-44.78,0.05l-43.29,-1.22l1.79,-43.16Z", "name": "South Dakota"}, "US-DC": {"path": "M782.5,218.31l-0.45,-0.64l-1.55,-0.67l0.58,-1.01l2.03,1.25l-0.61,1.06Z", "name": "District of Columbia"}, "US-DE": {"path": "M797.82,194.97l0.48,-1.56l0.92,-1.11l1.72,-0.71l1.12,0.06l-0.33,0.56l-0.08,1.38l-0.46,1.09l-0.6,0.54l-0.09,0.77l0.13,0.61l1.03,0.85l0.11,2.3l3.97,3.32l1.13,3.99l1.96,1.68l0.47,1.25l3.17,2.26l1.35,-0.08l0.48,1.21l-0.58,0.27l-0.31,0.67l0.03,0.76l0.36,0.19l-0.82,0.57l-0.08,1.21l0.66,0.21l0.85,-0.73l0.72,0.34l0.29,-0.21l0.59,1.55l-9.83,2.64l-8.37,-25.87Z", "name": "Delaware"}, "US-FL": {"path": "M629.81,423.29l47.15,-6.85l1.52,1.9l0.86,2.72l1.47,1.0l48.74,-5.1l1.03,1.38l0.03,1.09l0.55,1.05l1.04,0.48l1.64,-0.28l0.85,-0.75l-0.14,-4.57l-0.98,-1.49l-0.22,-1.76l0.28,-0.73l0.62,-0.3l0.12,-0.7l5.59,0.96l4.03,-0.16l0.14,1.24l-0.75,-0.12l-0.32,0.43l0.25,1.54l2.11,1.81l0.22,1.01l0.42,0.38l0.3,1.92l5.3,11.49l1.8,3.07l7.13,10.21l0.62,0.36l6.81,7.53l-0.48,-0.02l-0.27,0.61l-1.35,-0.02l-0.34,-0.65l0.38,-1.38l-0.16,-0.56l-2.3,-0.92l-0.46,0.53l1.0,2.79l0.77,0.97l2.14,4.77l9.91,13.7l1.37,3.11l3.66,5.33l-1.38,-0.35l-0.43,0.74l0.8,0.65l0.85,0.24l0.56,-0.22l1.46,0.94l2.04,3.05l-0.5,0.34l-0.12,0.53l1.16,0.53l0.89,1.83l-0.08,1.06l0.59,0.95l0.6,2.64l-0.27,0.75l0.93,8.98l-0.31,1.07l0.46,0.67l0.5,3.09l-0.78,1.26l0.03,2.43l-0.84,0.74l-0.22,1.8l-0.48,0.85l0.21,1.47l-0.3,1.74l0.54,1.74l0.45,0.23l-1.15,1.8l-0.39,1.28l-0.94,0.24l-0.53,-0.22l-1.37,0.45l-0.35,1.06l-0.89,0.3l-0.18,0.58l-0.85,0.67l-1.44,0.14l-0.27,-0.32l-1.23,-0.1l-0.9,1.05l-3.17,1.13l-1.06,-0.59l-0.7,-1.04l0.06,-1.79l1.0,0.84l1.64,0.47l0.26,0.63l0.52,0.07l1.35,-0.72l0.2,-0.69l-0.26,-0.64l-1.58,-1.11l-2.4,-0.26l-0.91,-0.46l-0.85,-1.67l-0.89,-0.72l0.22,-0.98l-0.48,-0.28l-0.53,0.15l-1.38,-2.51l-0.44,-0.3l-0.64,0.07l-0.44,-0.61l0.22,-0.89l-0.7,-0.65l-1.2,-0.6l-1.06,-0.08l-0.75,-0.54l-0.57,0.18l-2.8,-0.59l-0.5,0.64l0.25,-0.91l-0.46,-0.42l-0.87,0.12l-0.26,-0.72l-0.88,-0.65l-0.61,-1.41l-0.55,-0.11l-0.73,-2.95l-0.76,-0.98l-0.16,-1.52l-0.44,-0.83l-0.71,-0.89l-0.49,-0.15l-0.12,0.93l-1.29,-0.26l1.06,-1.3l0.18,-1.37l0.86,-1.46l0.65,-0.34l0.28,-0.83l-0.61,-0.38l-1.42,0.93l-1.03,1.66l-0.28,1.79l-1.37,0.35l-0.2,-1.33l-0.79,-1.33l-0.27,-4.03l-0.86,-0.6l1.63,-1.32l0.22,-0.97l-0.58,-0.42l-3.05,1.92l-0.75,-0.66l-0.4,0.26l-1.27,-0.88l-0.37,0.74l1.13,1.09l0.52,0.1l1.26,2.0l-1.04,0.24l-1.42,-0.38l-0.84,-1.59l-1.13,-0.6l-1.94,-2.54l-1.04,-2.28l-1.28,-0.87l0.1,-0.87l-0.97,-1.8l-1.77,-0.98l0.09,-0.67l0.98,-0.41l-0.35,-0.49l0.44,-0.73l-0.39,-0.35l0.4,-1.2l2.47,-4.47l-1.05,-2.41l-0.68,-0.46l-0.91,0.42l-0.28,0.93l0.29,1.19l-0.24,0.03l-0.73,-2.43l-0.99,-0.28l-1.18,-0.87l-1.52,-0.31l0.29,1.94l-0.48,0.61l0.27,0.59l2.21,0.56l0.24,0.97l-0.37,2.46l-0.31,-0.58l-0.79,-0.21l-2.13,-1.53l-0.41,0.2l-0.29,-0.62l0.59,-2.1l0.07,-2.97l-0.66,-1.97l0.42,-0.51l0.48,-1.91l-0.24,-0.54l0.66,-3.03l-0.37,-5.4l-0.69,-1.56l0.35,-0.47l-0.47,-2.18l-2.1,-1.33l-0.05,-0.52l-0.55,-0.43l-0.1,-1.01l-0.92,-0.73l-0.55,-1.51l-0.64,-0.25l-1.44,0.32l-1.02,-0.2l-1.57,0.54l-1.15,-1.74l-1.5,-0.47l-0.19,-0.6l-1.35,-1.51l-3.81,-1.88l-0.5,-2.75l-3.06,-1.13l-0.65,-0.59l-0.52,-1.23l-2.15,-1.92l-2.19,-1.09l-1.45,-0.12l-3.43,-1.68l-2.84,0.98l-1.01,-0.4l-1.04,0.42l-0.36,0.68l-1.33,0.68l-0.5,0.71l0.03,0.64l-0.73,-0.22l-0.59,0.6l0.67,0.94l1.5,0.08l0.41,0.21l-3.03,0.23l-1.58,1.51l-0.91,0.45l-1.29,1.56l-1.55,1.03l-0.32,0.13l0.2,-0.48l-0.26,-0.54l-0.67,-0.04l-2.07,2.24l-2.2,0.23l-2.11,1.06l-0.78,0.03l-0.27,-2.02l-1.71,-2.23l-2.21,-1.0l-0.18,-0.41l-2.51,-1.5l2.79,1.33l1.21,-0.74l-0.0,-0.74l-1.32,-0.34l-0.35,0.55l-0.21,-1.01l-0.34,-0.1l0.12,-0.52l-0.49,-0.33l-1.39,0.61l-2.3,-0.76l0.65,-1.08l0.83,-0.1l1.03,-1.45l-0.91,-0.95l-0.46,0.13l-0.49,1.01l-0.44,-0.04l-0.81,0.56l-0.72,-0.9l-0.7,0.09l-0.17,0.38l-1.34,0.72l-0.14,0.68l0.28,0.46l-3.95,-1.35l-5.04,-0.71l0.11,-0.24l1.27,0.29l0.61,-0.53l2.1,0.39l0.23,-0.78l-0.94,-1.02l0.09,-0.69l-0.62,-0.29l-0.5,0.32l-0.28,-0.47l-1.9,0.19l-2.25,1.1l0.3,-0.63l-0.41,-0.58l-0.96,0.35l-0.58,-0.25l-0.23,0.44l0.2,0.71l-1.45,0.79l-0.4,0.64l-5.17,0.97l0.31,-0.52l-0.4,-0.52l-1.35,-0.28l-0.72,-0.53l0.69,-0.53l0.01,-0.78l-0.68,-0.13l-0.81,-0.66l-0.46,0.11l0.14,0.76l-0.42,1.77l-1.04,-1.39l-0.69,-0.45l-0.55,0.07l-0.3,0.71l0.82,1.77l-0.25,0.79l-1.38,0.99l-0.05,1.04l-0.6,0.22l-0.17,0.57l-1.48,0.55l0.28,-0.65l-0.22,-0.45l1.14,-1.03l0.07,-0.74l-0.4,-0.58l-1.18,-0.24l-0.42,-0.84l0.3,-1.7l-0.18,-1.61l-2.17,-1.11l-2.39,-2.46l0.32,-1.44l-0.15,-1.03ZM643.87,433.71l-0.93,0.26l0.4,-0.44l0.53,0.18ZM664.63,435.28l0.98,-0.28l0.35,0.31l0.08,0.72l-1.41,-0.75ZM769.95,454.57l0.42,0.56l-0.43,0.75l0.0,-1.3ZM788.25,524.73l0.01,-0.07l0.01,0.03l-0.03,0.04ZM788.85,522.37l-0.22,-0.23l0.49,-0.32l-0.27,0.55ZM768.22,453.18l0.21,0.76l-0.31,2.33l0.28,1.79l-1.37,-3.23l1.19,-1.65ZM679.29,445.18l0.22,-0.2l0.36,0.02l-0.11,0.42l-0.47,-0.25Z", "name": "Florida"}, "US-WA": {"path": "M38.48,55.02l0.37,-1.08l0.93,0.64l0.55,-0.14l0.54,-0.65l0.49,0.67l0.71,-0.01l0.17,-0.77l-0.98,-1.47l0.84,-0.83l-0.09,-1.36l0.49,-0.39l-0.1,-1.03l0.81,-0.27l0.05,0.5l0.48,0.41l0.95,-0.31l-0.09,-0.68l-1.44,-1.82l-1.83,-0.1l-0.15,0.32l-0.78,-0.82l0.26,-1.62l0.66,0.53l0.52,-0.07l0.29,-0.56l-0.17,-0.68l3.33,-0.52l0.25,-0.68l-2.59,-1.29l-0.05,-0.79l-0.67,-0.57l-1.3,-0.31l0.37,-4.73l-0.5,-1.29l0.25,-0.72l-0.52,-0.48l0.55,-3.93l0.04,-4.37l-0.56,-1.02l-0.05,-0.98l-1.56,-2.34l0.33,-4.23l-0.21,-1.29l0.78,-0.79l0.04,-0.71l0.97,-1.44l-0.6,-1.43l1.04,0.8l0.44,0.0l3.35,3.31l0.99,0.35l2.18,2.41l3.72,1.49l1.21,0.07l0.79,0.71l0.67,0.3l0.6,-0.15l1.57,1.07l1.49,0.47l1.28,0.28l1.22,-0.61l0.53,0.31l0.46,0.71l-0.05,1.24l0.55,0.74l0.8,-0.24l0.07,-0.75l0.44,0.03l0.63,1.39l-0.4,0.58l0.34,0.49l0.56,-0.04l0.73,-0.84l-0.38,-1.7l1.02,-0.24l-0.43,0.23l-0.22,0.69l1.27,4.41l-0.46,0.1l-1.67,1.72l0.22,-1.29l-0.22,-0.41l-1.31,0.31l-0.38,0.81l0.09,0.94l-1.37,1.7l-1.98,1.38l-1.06,1.41l-0.96,0.69l-1.1,1.66l-0.06,0.71l0.62,0.6l0.95,0.12l2.77,-0.48l1.22,-0.58l-0.03,-0.7l-0.64,-0.23l-2.94,0.79l-0.35,-0.3l3.23,-3.42l3.05,-0.88l0.89,-1.51l1.73,-1.53l0.53,0.57l0.54,-0.19l0.22,-1.8l-0.06,2.25l0.26,0.91l-0.98,-0.21l-0.64,0.77l-0.41,-0.73l-0.53,-0.19l-0.39,0.64l0.32,2.33l-0.21,-1.06l-0.67,-0.21l-0.46,0.69l-0.07,0.75l0.46,0.66l-0.63,0.58l-0.0,0.45l0.42,0.17l1.67,-0.57l0.25,1.09l-1.08,1.79l-0.08,1.05l-0.83,0.7l0.13,1.0l-0.85,-0.67l1.12,-1.44l-0.23,-0.96l-1.96,1.08l-0.38,0.64l-0.05,-2.11l-0.52,0.02l-1.03,1.59l-1.26,0.53l-1.14,1.87l-1.51,0.3l-0.46,0.44l-0.2,1.18l1.11,-0.03l-0.25,0.36l0.27,0.37l0.92,0.02l0.06,0.68l0.53,0.47l0.52,-0.27l0.35,-1.76l0.15,0.42l0.83,-0.15l1.11,1.48l1.31,-0.61l1.64,-1.47l0.98,-1.56l0.63,0.78l0.73,0.14l0.44,-0.23l-0.06,-0.86l1.55,-0.54l0.35,-0.94l-0.33,-1.26l0.22,-1.19l-0.18,-1.35l0.83,0.2l0.3,-0.92l-0.19,-0.75l-0.72,-0.63l0.89,-1.13l0.07,-1.74l1.24,-1.24l0.61,-1.36l1.61,-0.49l0.78,-1.15l-0.45,-0.66l-0.51,-0.02l-0.86,-1.3l0.16,-2.09l-0.26,-0.87l0.49,-0.78l0.06,-0.83l-1.15,-1.73l-0.62,-0.4l-0.17,-0.64l0.18,-0.5l0.59,0.24l0.53,-0.33l0.24,-1.79l0.79,-0.24l0.3,-1.0l-0.61,-2.31l0.44,-0.53l-0.03,-0.86l-0.96,-0.88l-0.95,0.3l-1.09,-2.65l0.93,-1.82l41.28,9.39l38.92,7.64l-10.12,55.35l1.04,3.0l0.13,2.0l-1.0,1.3l0.73,1.88l-31.15,-5.91l-1.66,0.79l-7.23,-1.02l-1.68,0.91l-4.19,-0.12l-3.17,0.45l-1.64,0.75l-0.88,-0.26l-1.2,0.3l-1.5,-0.23l-2.43,-0.94l-0.91,0.46l-3.45,0.5l-2.1,-0.71l-1.65,0.3l-0.31,-1.36l-1.08,-0.88l-4.34,-1.46l-2.32,-0.11l-1.15,-0.51l-1.27,0.21l-1.89,0.86l-4.49,0.58l-2.26,-1.01l-1.61,-1.15l-1.84,-0.51l-0.63,-0.81l0.64,-6.82l-0.46,-0.95l-0.22,-1.9l-0.98,-1.35l-1.96,-1.67l-1.59,-0.23l-1.31,0.28l-1.95,-3.24l-2.07,-0.23l-0.56,-0.3l-0.1,-0.52l-0.55,-0.47l-1.22,0.28l-0.81,-0.15l-1.0,0.52l-1.03,-1.77l-0.93,-0.23ZM61.92,39.74l0.16,0.73l-0.42,0.48l0.0,-0.9l0.26,-0.31ZM71.33,20.35l-0.61,0.87l-0.15,0.51l0.18,-1.38l0.57,-0.01ZM71.2,15.6l-0.09,-0.05l0.05,-0.04l0.04,0.09ZM70.43,15.46l-0.77,0.39l0.37,-0.68l-0.07,-0.6l0.22,-0.07l0.25,0.97ZM57.65,42.39l0.02,-0.01l-0.0,0.0l-0.02,0.01ZM67.81,19.2l1.73,-2.09l0.47,-0.02l0.53,1.71l-0.35,-0.55l-0.5,-0.12l-0.55,0.44l-0.35,-0.1l-0.35,0.73l-0.63,-0.01ZM67.94,20.38l0.43,0.0l0.61,0.5l0.08,0.34l-0.79,-0.2l-0.33,-0.65ZM68.9,23.13l-0.1,0.51l-0.0,0.0l-0.02,-0.24l0.12,-0.28ZM69.21,25.39l0.08,0.04l0.12,-0.04l-0.15,0.11l-0.05,-0.1ZM69.58,25.3l0.48,-0.93l1.02,1.21l0.11,1.12l-0.34,0.36l-0.33,-0.09l-0.1,-1.3l-0.84,-0.37ZM66.4,9.95l0.48,-0.34l0.18,1.51l-0.22,-0.05l-0.44,-1.12ZM68.1,9.65l0.82,0.8l-0.65,0.3l-0.18,-1.1ZM66.75,37.99l0.34,-1.07l0.21,-0.25l-0.03,1.06l-0.52,0.26ZM67.06,33.28l0.1,-1.04l0.35,-0.34l-0.23,1.56l-0.22,-0.18ZM66.57,14.25l-0.41,-0.4l0.6,-0.75l-0.18,0.61l-0.01,0.54ZM66.74,14.61l0.4,0.19l-0.08,0.12l-0.29,-0.12l-0.03,-0.2ZM66.8,12.94l-0.01,-0.1l0.05,-0.12l-0.04,0.22ZM64.42,13.11l-1.05,-0.82l0.19,-1.81l1.33,1.92l-0.47,0.72ZM62.25,42.5l0.23,-0.25l0.02,0.01l-0.13,0.31l-0.12,-0.07ZM60.11,40.25l-0.09,-0.19l0.04,-0.07l0.0,0.13l0.05,0.13Z", "name": "Washington"}, "US-KS": {"path": "M477.57,239.44l0.44,0.63l0.76,0.18l1.04,0.8l2.19,-1.08l-0.0,0.75l1.08,0.79l0.23,1.44l-0.95,-0.15l-0.6,0.31l-0.17,0.97l-1.14,1.37l-0.06,1.14l-0.79,0.5l0.04,0.63l1.56,2.1l2.0,1.49l0.2,1.13l0.41,0.86l0.74,0.56l0.32,1.1l1.89,0.91l1.54,0.26l2.67,46.77l-31.52,1.48l-31.94,0.88l-31.95,0.26l-32.02,-0.37l1.21,-65.41l27.87,0.35l27.83,-0.14l27.82,-0.63l27.65,-1.12l1.65,1.23Z", "name": "Kansas"}, "US-WI": {"path": "M598.26,107.33l0.82,-0.15l-0.13,0.81l-0.55,0.01l-0.14,-0.67ZM593.78,115.94l0.47,-0.41l0.26,-2.36l0.95,-0.24l0.64,-0.7l0.22,-1.41l0.41,-0.63l0.63,-0.03l0.07,0.38l-0.76,0.06l-0.18,0.51l0.17,1.27l-0.39,0.18l-0.11,0.57l0.56,0.57l-0.74,0.97l-0.69,1.91l0.07,1.23l-1.05,2.28l-0.41,0.15l-0.86,-0.97l-0.19,-0.72l0.31,-1.57l0.62,-1.05ZM509.7,123.96l0.4,-0.27l0.28,-0.9l-0.45,-1.48l0.04,-1.91l0.7,-1.15l0.53,-2.24l-1.61,-2.91l-0.83,-0.36l-1.28,-0.01l-0.21,-2.31l1.67,-2.26l-0.05,-0.77l0.77,-1.54l1.95,-1.08l0.48,-0.75l0.97,-0.25l0.45,-0.75l1.16,-0.14l1.04,-1.56l-0.97,-12.1l1.03,-0.35l0.22,-1.1l0.73,-0.97l0.78,0.69l1.68,0.64l2.61,-0.56l3.27,-1.57l2.65,-0.82l2.21,-2.12l0.31,0.29l1.39,-0.11l1.25,-1.48l0.79,-0.58l1.04,-0.1l0.4,-0.52l1.07,0.99l-0.48,1.68l-0.67,1.01l0.23,1.61l-1.21,2.21l0.64,0.66l2.5,-1.09l0.72,-0.86l2.15,1.22l2.33,0.47l0.44,0.53l0.86,-0.13l1.6,0.7l2.23,3.54l15.46,2.52l4.64,1.96l1.67,-0.16l1.63,0.42l1.33,-0.59l3.17,0.71l2.18,0.09l0.85,0.41l0.56,0.89l-0.42,1.09l0.41,0.77l3.4,0.63l1.4,1.13l-0.16,0.71l0.59,1.11l-0.36,0.81l0.43,1.25l-0.78,1.25l-0.03,1.75l0.91,0.63l1.38,-0.26l1.02,-0.72l0.2,0.26l-0.79,2.44l0.04,1.31l1.31,1.46l0.84,0.35l-0.24,2.01l-2.42,1.2l-0.51,0.78l0.04,1.26l-1.61,3.49l-0.4,3.5l1.11,0.83l0.91,-0.04l0.5,-0.37l0.49,-1.37l1.82,-1.47l0.66,-2.54l1.06,-1.7l0.59,0.18l0.58,-0.71l0.87,-0.4l1.12,1.12l0.59,0.19l-0.28,2.17l-1.19,2.85l-0.56,5.57l0.23,1.11l0.8,0.93l0.07,0.52l-0.51,0.98l-1.3,1.34l-0.86,3.88l0.15,2.57l0.72,1.2l0.06,1.24l-1.07,3.22l0.12,2.11l-0.73,2.11l-0.28,2.46l0.59,2.02l-0.04,1.32l0.49,0.53l-0.21,1.7l0.92,0.78l0.54,2.43l1.2,1.53l0.08,1.69l-0.33,1.44l0.47,2.95l-44.16,4.6l-0.19,-0.79l-1.56,-2.19l-4.93,-0.84l-1.06,-1.35l-0.36,-1.68l-0.9,-1.21l-0.86,-4.89l1.04,-2.61l-0.09,-0.99l-0.71,-0.79l-1.44,-0.48l-0.71,-1.76l-0.47,-6.02l-0.7,-1.4l-0.52,-2.56l-1.15,-0.6l-1.1,-1.56l-0.93,-0.11l-1.17,-0.75l-1.71,0.09l-2.67,-1.79l-2.3,-3.49l-2.63,-2.1l-2.93,-0.53l-0.73,-1.23l-1.12,-1.0l-3.12,-0.45l-3.53,-2.74l0.45,-1.24l-0.12,-1.61l0.25,-0.81l-0.88,-3.11ZM541.19,78.17l0.05,-0.28l0.03,0.16l-0.08,0.11ZM537.53,83.64l0.28,-0.21l0.05,0.08l-0.33,0.12Z", "name": "Wisconsin"}, "US-OR": {"path": "M10.8,139.99l0.63,-3.94l1.32,-2.52l0.23,-1.22l-0.01,-1.26l-0.46,-0.66l-0.14,-1.12l-0.42,-0.32l-0.11,-1.84l2.73,-3.63l2.2,-4.72l0.1,-1.09l0.42,-0.27l0.01,0.79l0.73,0.1l0.42,-1.1l0.88,-0.84l0.23,0.94l1.39,0.27l-0.51,-2.63l-0.91,0.08l2.09,-3.8l1.11,-0.76l0.8,0.39l0.55,-0.33l-0.66,-1.35l-0.6,-0.3l1.71,-4.39l0.41,-0.38l0.04,-0.96l1.74,-5.48l0.97,-1.98l0.4,0.33l0.67,-0.29l-0.12,-0.97l-0.56,-0.32l0.96,-2.74l0.81,0.17l0.23,-0.45l-0.16,-0.52l-0.52,-0.28l0.54,-2.86l1.57,-2.7l0.83,-3.01l1.14,-1.76l0.97,-3.1l-0.08,-1.03l1.21,-1.1l0.04,-0.6l-0.46,-0.65l0.14,-0.52l0.51,0.64l0.45,0.05l0.39,-0.63l0.17,-1.39l-0.74,-0.72l0.5,-1.2l1.28,-0.78l0.05,-0.46l-0.86,-0.5l-0.26,-1.11l0.85,-2.17l-0.06,-1.43l0.92,-0.59l0.4,-0.85l0.07,-3.74l0.49,0.86l0.9,0.41l-0.04,0.9l0.55,0.53l0.43,-0.82l0.39,-0.14l-0.27,-0.98l1.12,0.84l1.53,0.0l1.45,-0.68l1.44,2.36l1.99,0.78l1.39,-0.67l0.91,0.06l1.72,1.51l0.77,1.04l0.21,1.9l0.43,0.78l-0.03,2.04l-0.39,1.24l0.19,0.93l-0.43,1.74l0.26,1.44l0.79,0.85l1.94,0.56l1.44,1.05l2.4,1.1l4.98,-0.53l2.9,-1.06l1.14,0.5l2.23,0.09l4.24,1.43l0.69,0.54l0.19,1.15l0.57,0.58l1.86,-0.27l2.11,0.71l3.78,-0.55l0.69,-0.42l2.19,0.93l1.64,0.24l1.19,-0.3l0.87,0.26l1.88,-0.78l3.06,-0.43l4.16,0.13l1.61,-0.91l7.16,1.02l0.96,-0.19l0.79,-0.58l31.24,5.93l0.23,1.81l0.93,1.82l1.16,0.63l1.96,1.86l0.57,2.45l-0.16,1.0l-3.68,4.54l-0.4,1.41l-1.39,2.62l-2.21,2.41l-0.65,2.68l-1.49,1.84l-2.23,1.5l-1.92,3.34l-1.49,1.27l-0.62,2.02l-0.12,1.87l0.28,0.92l0.56,0.61l0.54,0.04l0.39,-0.35l0.63,0.76l0.89,-0.05l0.07,0.87l0.8,0.95l-0.46,1.0l-0.65,0.06l-0.33,0.4l0.21,1.8l-1.02,2.56l-1.21,1.41l-6.86,39.12l-26.19,-4.98l-28.87,-6.04l-28.78,-6.6l-28.85,-7.21l-1.54,-2.51l0.26,-2.47l-0.29,-0.87Z", "name": "Oregon"}, "US-KY": {"path": "M582.59,306.3l0.35,-2.18l1.13,0.96l0.72,0.2l0.75,-0.36l0.46,-0.88l0.87,-3.54l-0.54,-1.75l0.38,-0.86l-0.1,-1.87l-1.26,-2.04l1.78,-3.2l1.24,-0.51l0.73,0.06l7.02,2.56l0.81,-0.2l0.65,-0.72l0.24,-1.93l-1.48,-2.13l-0.24,-1.43l0.2,-0.87l0.4,-0.52l1.1,-0.18l1.24,-0.83l3.0,-0.95l0.64,-0.51l0.15,-1.13l-1.53,-2.05l-0.08,-0.68l1.33,-1.97l0.14,-1.16l1.25,0.42l1.12,-1.33l-0.68,-2.0l1.91,0.9l1.72,-0.84l0.03,1.18l1.0,0.46l0.99,-0.94l0.02,-1.36l0.51,0.16l1.89,-0.96l4.4,1.52l0.64,0.94l0.86,0.18l0.59,-0.59l0.73,-2.52l1.38,-0.54l1.39,-1.34l0.86,1.28l0.77,0.42l1.16,-0.13l0.11,0.75l0.95,0.19l0.67,-0.62l0.03,-1.0l0.84,-0.38l0.26,-0.48l-0.25,-2.09l0.84,-0.4l0.34,-0.56l-0.06,-0.69l1.25,-0.56l0.34,-0.72l0.38,1.47l0.61,0.6l1.46,0.64l1.25,-0.0l1.11,0.81l0.53,-0.11l0.26,-0.55l1.1,-0.45l0.53,-0.69l0.04,-3.47l0.85,-2.18l1.02,0.18l1.55,-1.19l0.75,-3.46l1.04,-0.37l1.65,-2.23l0.0,-0.81l-1.18,-2.88l2.78,-0.59l1.54,0.81l3.85,-2.82l2.23,-0.46l-0.18,-1.07l0.36,-1.47l-0.32,-0.36l-1.22,-0.04l0.58,-1.39l-1.08,-1.54l1.65,-1.83l1.81,1.18l0.92,-0.11l1.93,-1.01l0.78,0.88l1.75,0.54l0.57,1.28l0.94,0.92l0.79,1.84l2.6,0.67l1.87,-0.57l1.63,0.27l2.18,1.85l0.96,0.42l1.28,-0.18l0.61,-1.31l0.99,-0.54l1.34,0.5l1.34,0.04l1.33,1.09l1.26,-0.69l1.41,-0.15l1.81,-2.55l1.72,-1.03l0.92,2.35l0.7,0.83l2.45,0.81l1.35,0.97l0.75,1.04l0.93,3.34l-0.37,0.45l0.09,0.72l-0.44,0.61l0.02,0.53l2.23,2.62l1.35,0.92l-0.08,0.89l1.33,0.96l0.58,1.35l1.55,1.2l0.98,1.62l2.14,0.84l1.09,1.12l2.14,0.25l-4.86,6.13l-5.06,4.15l-0.42,0.86l0.22,1.25l-2.07,1.93l0.04,1.64l-3.06,1.63l-0.8,2.38l-1.71,0.6l-2.69,1.83l-1.66,0.48l-3.39,2.42l-23.93,3.08l-8.8,1.41l-7.46,0.86l-7.67,0.46l-22.69,3.52l-0.64,-0.56l-3.63,0.09l-0.41,0.6l1.03,3.57l-22.97,2.73ZM580.47,306.49l-0.59,0.08l-0.06,-0.55l0.47,-0.01l0.18,0.48Z", "name": "Kentucky"}, "US-CO": {"path": "M363.96,239.34l-1.22,65.81l-29.26,-0.9l-29.36,-1.42l-29.33,-1.95l-32.14,-2.74l8.32,-87.07l27.76,2.39l28.2,1.92l29.56,1.46l27.93,0.86l-0.46,21.63Z", "name": "Colorado"}, "US-OH": {"path": "M664.57,178.75l1.66,0.36l0.97,-0.31l1.74,1.07l2.07,0.26l1.47,1.17l1.69,0.24l-2.16,1.18l-0.12,0.47l0.42,0.24l2.45,0.18l1.39,-1.1l1.76,-0.25l3.39,0.96l0.92,-0.08l1.48,-1.3l1.73,-0.59l1.15,-0.96l1.91,-0.97l2.61,-0.03l1.09,-0.62l1.24,-0.06l1.07,-0.8l4.24,-5.45l4.53,-3.47l6.91,-4.36l5.82,28.02l-0.51,0.54l-1.28,0.43l-0.41,0.95l1.65,2.23l0.02,2.1l0.41,0.26l0.31,0.94l-0.04,0.76l-0.54,0.83l-0.5,4.07l0.18,3.21l-0.58,0.41l0.34,1.11l-0.35,1.74l-0.39,0.54l0.76,1.23l-0.25,1.87l-2.41,2.65l-0.82,1.86l-1.37,1.5l-1.24,0.67l-0.6,0.7l-0.87,-0.92l-1.18,0.14l-1.32,1.74l-0.09,1.32l-1.77,0.85l-0.78,2.24l0.28,1.58l-0.94,0.85l0.3,0.67l0.63,0.41l0.27,1.3l-0.8,0.17l-0.5,1.6l0.06,-0.93l-0.91,-1.26l-1.53,-0.55l-1.07,0.71l-0.82,1.97l-0.34,2.69l-0.53,0.82l1.22,3.58l-1.27,0.39l-0.28,0.42l-0.25,3.12l-2.66,1.2l-1.0,0.05l-0.76,-1.06l-1.51,-1.1l-2.34,-0.73l-1.16,-1.92l-0.31,-1.14l-0.42,-0.33l-0.73,0.13l-1.84,1.17l-1.1,1.28l-0.4,1.05l-1.43,0.15l-0.87,0.61l-1.11,-1.0l-3.14,-0.59l-1.37,0.72l-0.53,1.25l-0.71,0.05l-3.04,-2.26l-1.93,-0.29l-1.77,0.56l-2.14,-0.52l-0.55,-1.54l-0.96,-0.97l-0.63,-1.37l-2.03,-0.76l-1.14,-1.01l-0.97,0.26l-1.31,0.88l-0.46,0.03l-1.79,-1.22l-0.61,0.2l-0.6,0.7l-8.66,-55.53l20.63,-4.25ZM675.1,181.16l0.53,-0.79l0.67,0.41l-0.47,0.35l-0.72,0.03Z", "name": "Ohio"}, "US-OK": {"path": "M398.8,358.96l-0.05,-41.99l-0.39,-0.4l-51.77,-0.82l0.31,-10.22l36.66,0.74l35.97,-0.07l35.96,-0.86l35.53,-1.62l0.6,10.67l4.55,24.32l1.41,37.84l-1.2,-0.22l-0.29,-0.36l-2.13,-0.21l-0.82,-0.79l-2.11,-0.39l-1.77,-2.05l-1.23,-0.22l-2.25,-1.56l-1.5,-0.4l-0.8,0.46l-0.23,0.88l-0.82,0.24l-0.46,0.62l-2.47,-0.14l-1.79,-1.48l-2.3,1.29l-1.16,0.2l-0.19,0.56l-0.63,0.28l-2.12,-0.77l-1.7,1.18l-2.06,0.51l-0.83,1.37l-1.48,0.06l-0.57,1.24l-1.26,-1.55l-1.7,-0.1l-0.32,-0.58l-1.21,-0.46l-0.02,-0.96l-0.44,-0.5l-1.24,-0.18l-0.73,1.38l-0.66,0.11l-0.84,-0.5l-0.97,0.07l-0.71,-1.51l-1.09,-0.35l-1.17,0.57l-0.45,1.7l-0.7,-0.08l-0.49,0.43l0.29,0.73l-0.51,1.68l-0.43,0.19l-0.86,-1.45l0.39,-1.65l-0.75,-0.86l-0.8,0.18l-0.49,0.76l-0.84,-0.18l-0.92,0.97l-1.07,0.13l-0.53,-1.36l-1.98,-0.19l-0.3,-1.48l-1.19,-0.53l-0.82,0.33l-2.12,2.15l-1.21,0.51l-0.97,-0.38l0.19,-1.25l-0.28,-1.13l-2.32,-0.67l-0.07,-2.18l-0.43,-0.55l-2.11,0.39l-2.52,-0.25l-0.64,0.26l-0.81,1.21l-0.95,0.06l-1.76,-1.77l-0.97,-0.12l-1.49,0.56l-2.68,-0.63l-1.85,-1.0l-1.05,0.25l-2.46,-0.3l-0.17,-2.12l-0.85,-0.87l-0.43,-1.02l-1.16,-0.41l-0.7,-0.83l-0.83,0.08l-0.44,1.64l-2.21,-0.68l-1.07,0.6l-0.96,-0.09l-3.79,-3.78l-1.12,-0.43l-0.8,0.08Z", "name": "Oklahoma"}, "US-WV": {"path": "M692.5,248.18l3.94,-1.54l0.35,-0.71l0.12,-2.77l1.15,-0.22l0.4,-0.61l-0.57,-2.49l-0.61,-1.24l0.49,-0.64l0.36,-2.77l0.68,-1.66l0.45,-0.38l1.24,0.55l0.41,0.71l-0.14,1.13l0.71,0.46l0.78,-0.43l0.48,-1.41l0.49,0.21l0.57,-0.2l0.2,-0.44l-0.63,-2.09l-0.75,-0.55l0.81,-0.79l-0.26,-1.71l0.74,-2.0l1.65,-0.51l0.17,-1.6l1.02,-1.42l0.43,-0.08l0.65,0.79l0.67,0.19l2.28,-1.59l1.5,-1.64l0.79,-1.83l2.45,-2.66l0.37,-2.41l-0.73,-1.0l0.71,-2.33l-0.25,-0.76l0.59,-0.58l-0.27,-3.43l0.47,-3.92l0.53,-0.8l0.08,-1.11l-0.38,-1.2l-0.39,-0.33l-0.04,-2.0l-1.57,-1.9l0.44,-0.54l0.85,-0.1l0.29,-0.33l4.03,19.32l0.47,0.31l16.58,-3.55l2.17,10.67l0.5,0.37l2.06,-2.5l0.97,-0.56l0.34,-1.03l1.63,-1.99l0.25,-1.05l0.52,-0.4l1.19,0.45l0.74,-0.32l1.32,-2.6l0.6,-0.46l-0.04,-0.85l0.42,0.59l1.81,0.52l3.2,-0.57l0.78,-0.86l0.08,-1.46l2.0,-0.74l1.02,-1.69l0.67,-0.1l3.15,1.5l1.8,-0.71l-0.45,1.02l0.56,0.92l1.27,0.42l0.09,0.96l1.12,0.43l0.09,1.2l0.33,0.42l-0.58,3.64l-8.99,-4.47l-0.64,0.24l-0.31,1.14l0.38,1.61l-0.52,1.62l0.41,2.28l-1.36,2.4l-0.42,1.76l-0.72,0.53l-0.42,1.1l-0.27,0.21l-0.61,-0.23l-0.37,0.33l-1.25,3.28l-1.84,-0.78l-0.64,0.25l-0.94,2.77l0.08,1.46l-0.73,1.14l-0.19,2.33l-0.89,2.2l-3.25,-0.36l-1.43,-1.76l-1.71,-0.24l-0.5,0.41l-0.26,2.17l0.19,1.3l-0.32,1.45l-0.49,0.45l-0.31,1.04l0.23,0.92l-1.58,2.44l-0.04,2.1l-0.52,2.0l-2.58,4.72l-0.75,3.16l0.14,0.76l1.13,0.55l-1.08,1.38l0.06,0.6l0.45,0.4l-2.15,2.12l-0.55,-0.7l-0.84,0.15l-3.12,2.53l-1.03,-0.56l-1.31,0.26l-0.44,0.9l0.45,1.17l-0.91,0.91l-0.73,-0.05l-2.27,1.0l-1.21,0.96l-2.18,-1.36l-0.73,-0.01l-0.82,1.58l-1.1,0.49l-1.22,1.46l-1.08,0.08l-1.97,-1.09l-1.3,-0.01l-0.61,-0.74l-1.19,-0.6l-0.31,-1.33l-0.89,-0.55l0.36,-0.67l-0.3,-0.81l-0.85,-0.37l-0.84,0.24l-1.33,-0.17l-1.26,-1.19l-2.06,-0.79l-0.76,-1.43l-1.58,-1.24l-0.7,-1.49l-1.0,-0.6l-0.12,-1.09l-1.38,-0.95l-2.0,-2.26l0.71,-2.02l-0.25,-1.62l-0.66,-1.46Z", "name": "West Virginia"}, "US-WY": {"path": "M218.45,206.82l10.09,-86.52l25.43,2.74l26.77,2.4l26.81,1.91l27.82,1.46l-3.67,87.03l-27.29,-1.41l-28.18,-1.96l-29.67,-2.62l-28.11,-3.02Z", "name": "Wyoming"}, "US-UT": {"path": "M220.12,185.64l-2.5,21.48l0.35,0.45l32.21,3.42l-8.32,87.06l-42.5,-4.66l-42.37,-5.77l16.07,-108.24l47.06,6.25Z", "name": "Utah"}, "US-IN": {"path": "M600.42,189.45l1.42,0.87l2.1,0.15l1.52,-0.38l2.63,-1.39l2.73,-2.1l32.11,-4.8l8.95,57.36l-0.66,1.15l0.3,0.92l0.81,0.79l-0.66,1.13l0.49,0.8l1.12,0.04l-0.36,1.13l0.18,0.51l-1.81,0.29l-3.18,2.55l-0.43,0.17l-1.4,-0.81l-3.45,0.91l-0.09,0.78l1.19,3.1l-1.4,1.88l-1.17,0.49l-0.45,0.89l-0.31,2.6l-1.11,0.88l-1.06,-0.24l-0.47,0.47l-0.85,1.95l0.05,3.13l-0.39,0.99l-1.38,0.85l-0.93,-0.68l-1.24,0.01l-1.47,-0.69l-0.62,-1.84l-1.89,-0.73l-0.44,0.3l-0.04,0.5l0.83,0.68l-0.62,0.31l-0.89,-0.35l-0.36,0.29l0.5,1.41l-1.08,0.68l0.14,2.37l-1.06,0.65l-0.0,0.83l-0.16,0.37l-0.25,-1.01l-1.6,0.18l-1.4,-1.69l-0.5,-0.08l-1.67,1.49l-1.57,0.69l-1.07,2.89l-0.81,-1.07l-2.79,-0.77l-1.11,-0.61l-1.08,-0.18l-1.75,0.92l-0.64,-1.02l-0.58,-0.18l-0.53,0.56l0.64,1.86l-0.34,0.83l-0.28,0.09l-0.02,-1.18l-0.42,-0.4l-2.04,0.81l-1.41,-0.84l-0.85,0.0l-0.48,0.95l0.71,1.55l-0.49,0.74l-1.15,-0.39l-0.07,-0.54l-0.53,-0.44l0.55,-0.63l-0.35,-3.09l0.96,-0.78l-0.07,-0.58l-0.44,-0.23l0.69,-0.46l0.25,-0.61l-1.17,-1.47l0.46,-1.16l0.32,0.19l1.39,-0.55l0.33,-1.8l0.55,-0.4l0.44,-0.92l-0.06,-0.83l1.52,-1.07l0.06,-0.69l-0.41,-0.92l0.57,-0.86l0.14,-1.29l0.87,-0.51l0.4,-1.91l-1.08,-2.54l0.06,-1.91l-0.93,-0.91l-0.61,-1.5l-1.05,-0.78l-0.04,-0.58l0.92,-1.39l-0.62,-2.25l1.27,-1.31l-6.49,-50.63Z", "name": "Indiana"}, "US-IL": {"path": "M539.69,225.33l0.86,-0.35l0.37,-0.67l-0.23,-2.33l-0.73,-0.93l0.15,-0.41l0.71,-0.69l2.41,-0.98l0.71,-0.65l0.63,-1.68l0.17,-2.1l1.65,-2.47l0.27,-0.94l-0.03,-1.22l-0.59,-1.95l-2.23,-1.87l-0.11,-1.77l0.67,-2.38l0.45,-0.37l4.6,-0.84l0.81,-0.41l0.82,-1.12l2.55,-1.0l1.43,-1.56l0.39,-3.28l1.42,-1.46l0.29,-0.74l0.33,-4.37l-0.76,-2.14l-4.02,-2.47l-0.28,-1.49l-0.48,-0.82l-3.64,-2.47l44.54,-4.63l-0.01,2.65l0.57,2.59l1.38,2.49l1.3,0.94l0.76,2.59l1.26,2.71l1.42,1.85l6.6,51.44l-1.22,1.13l-0.1,0.69l0.67,1.75l-0.83,1.09l-0.03,1.11l1.19,1.09l0.56,1.41l0.89,0.82l-0.1,1.8l1.06,2.31l-0.28,1.49l-0.87,0.56l-0.21,1.47l-0.59,0.93l0.34,1.2l-1.48,1.12l-0.23,0.41l0.28,0.7l-0.93,1.17l-0.31,1.19l-1.64,0.67l-0.63,1.67l0.15,0.8l0.97,0.83l-1.27,1.15l0.42,0.76l-0.49,0.23l-0.13,0.54l0.43,2.94l-1.15,0.19l0.08,0.45l0.91,0.78l-0.48,0.17l-0.03,0.64l0.83,0.29l0.04,0.42l-1.31,1.97l-0.25,1.19l0.59,1.22l0.7,0.64l0.37,1.08l-3.3,1.22l-1.19,0.82l-1.24,0.24l-0.77,1.01l-0.18,2.04l1.7,2.8l0.07,0.54l-0.53,1.19l-0.96,0.03l-6.3,-2.43l-1.08,-0.08l-1.57,0.64l-0.67,0.72l-1.43,2.94l0.06,0.66l-1.18,-1.2l-0.79,0.14l-0.35,0.47l0.59,1.13l-1.24,-0.79l-0.01,-0.67l-1.6,-2.21l-0.4,-1.12l-0.75,-0.37l-0.05,-0.49l0.94,-1.35l0.2,-1.03l-0.32,-1.01l-1.44,-2.02l-0.47,-3.17l-2.26,-0.99l-1.55,-2.14l-1.95,-0.82l-1.72,-1.34l-1.56,-0.14l-1.82,-0.96l-2.32,-1.78l-2.34,-2.44l-0.36,-1.95l2.36,-6.85l-0.25,-2.31l0.98,-2.06l-0.38,-0.84l-2.66,-1.45l-2.59,-0.67l-1.29,0.45l-0.86,1.45l-0.9,0.15l-1.3,-1.9l-0.43,-1.52l0.15,-0.87l-0.54,-0.91l-0.29,-1.64l-0.83,-1.36l-0.94,-0.9l-4.1,-2.52l-1.0,-1.64l-4.53,-3.52l-0.73,-1.9l-1.04,-1.21l-0.04,-1.6l-0.96,-1.48l-0.75,-3.54l0.1,-2.94l0.6,-1.28ZM585.09,295.24l0.05,0.05l0.04,0.04l-0.05,-0.0l-0.04,-0.09Z", "name": "Illinois"}, "US-AK": {"path": "M89.36,517.03l0.84,0.08l0.09,0.36l-0.94,0.62l0.02,-1.06ZM91.79,517.2l0.6,-0.13l0.26,-0.56l1.74,-0.37l2.26,0.07l1.57,0.63l0.83,0.69l0.02,1.85l0.57,0.79l-3.13,-0.34l-0.31,-0.44l0.27,-0.21l0.74,0.72l0.46,-0.02l0.2,-0.48l-0.61,-1.42l-0.96,-0.52l-1.05,0.27l-0.57,0.69l-1.04,0.3l-0.44,-0.3l-1.17,0.1l-0.48,0.31l0.22,-1.63ZM99.82,520.19l0.59,-0.34l-0.03,-0.55l1.07,1.57l-0.93,-0.51l-0.44,0.41l-0.26,-0.58ZM100.06,520.81l0.0,0.04l-0.03,0.0l0.02,-0.04ZM102.01,520.78l0.38,-0.65l-0.49,-1.44l1.53,-0.88l3.26,-0.1l2.28,0.69l0.5,-0.27l0.85,0.25l0.75,0.92l0.7,-0.06l0.74,-1.39l2.25,-0.65l0.87,0.27l1.79,-0.33l-0.11,0.41l0.43,0.51l1.05,0.32l0.55,-0.85l-0.65,-0.32l-0.01,-0.82l1.87,-1.98l0.85,0.08l0.51,0.67l0.66,-0.29l-0.1,-0.57l-0.89,-0.81l0.15,-0.44l0.77,-0.47l2.87,-0.21l-0.12,-0.52l0.66,-0.6l0.66,-0.05l0.99,-1.11l-0.8,-0.27l-0.69,0.53l-1.0,0.19l-4.59,-1.01l0.09,-0.95l-0.28,-0.56l0.45,-0.35l0.43,-0.13l0.36,0.38l-0.04,1.08l0.88,-0.03l0.13,-0.66l-0.05,-0.75l-0.84,-1.05l0.01,-0.7l-0.67,-0.19l-0.25,0.71l-0.41,0.22l-0.68,-0.62l-0.68,0.82l-0.86,0.24l-0.78,2.05l-0.3,-0.28l0.05,-4.14l-0.59,-0.59l-1.0,0.32l0.03,-0.52l-0.55,-0.74l0.1,-1.27l-2.48,-0.21l-1.62,-0.43l-0.39,-0.48l-1.04,0.57l-0.77,-0.2l-0.09,-0.39l0.87,-0.08l-0.01,-0.82l0.36,-0.56l1.26,-0.12l-0.02,-0.77l-1.11,-0.64l0.09,-0.27l0.72,-0.61l1.12,-0.0l0.41,-0.42l0.49,-3.93l1.08,-1.23l-0.65,-0.57l1.59,-0.86l1.31,0.18l0.44,-0.55l-0.68,-0.42l-0.32,-0.64l-2.16,0.95l-1.86,0.22l-0.12,0.5l0.4,0.64l-0.54,0.63l-0.36,-0.37l-2.72,-0.69l-1.83,-1.2l-0.52,-0.69l0.62,-0.3l0.03,-0.64l-0.51,-1.06l-0.08,-1.3l0.33,-0.54l-0.63,-0.34l-0.45,-0.88l0.89,-0.5l-0.41,-0.7l1.82,-0.33l0.08,0.51l0.89,1.0l-0.82,0.2l-0.53,0.51l0.31,0.45l2.29,-0.04l-0.48,1.05l0.68,0.67l1.42,0.07l0.63,-0.6l-0.2,-0.74l0.35,-0.35l-0.13,-1.14l-0.52,-0.26l-1.11,0.09l-1.51,-1.2l-0.01,-0.53l-0.76,-0.89l0.55,0.15l0.53,-0.4l-0.87,-0.92l0.4,-0.45l-0.14,-0.5l1.01,-0.18l1.2,0.23l0.67,-0.44l-0.08,-0.48l-2.62,-0.27l-1.68,0.55l-0.3,0.54l-0.13,-0.19l0.63,-0.77l-0.55,-1.14l0.77,-0.09l0.24,-0.58l-0.22,-0.6l0.55,0.23l0.42,-0.51l-0.44,-0.59l1.32,0.69l0.41,-1.33l0.48,-0.28l3.25,-0.5l0.49,0.95l-0.27,0.16l0.14,0.47l1.09,0.16l0.29,-0.39l-0.06,-0.79l1.21,-0.11l0.29,-0.63l-1.24,-0.28l0.44,-0.11l0.15,-0.63l0.72,-0.27l1.18,0.99l0.46,-0.54l-0.22,-0.67l0.34,0.01l1.04,0.64l0.54,0.81l-0.06,0.29l-0.91,0.12l-0.13,0.47l1.49,0.3l0.36,0.81l0.91,0.5l1.02,0.09l3.03,-0.32l0.1,0.49l3.54,1.97l2.37,-0.41l0.47,-0.49l0.96,-2.62l-0.11,-1.41l1.64,0.15l0.77,-0.64l-0.12,-1.36l0.33,-0.47l-0.23,-0.32l-0.73,-0.39l-1.24,0.28l-0.8,-1.01l-3.4,-0.42l-0.81,0.19l-0.46,-2.1l-1.33,-0.22l-2.58,-2.31l-0.95,-0.23l-0.8,-0.77l-0.67,0.12l-2.77,-3.36l-0.26,-0.87l0.61,-0.26l0.35,-0.76l-0.34,-1.12l1.26,-0.06l1.05,0.96l0.37,-0.74l-3.28,-3.93l-0.78,-1.83l1.35,0.65l1.01,-0.37l0.37,0.6l1.09,0.35l1.08,-0.18l1.53,0.45l1.15,1.53l1.03,0.47l0.56,-0.36l-0.43,-0.99l1.48,0.48l0.47,0.65l2.29,0.47l1.49,0.99l0.18,0.46l-1.0,0.75l-1.12,-0.35l-0.12,0.69l0.62,0.53l0.18,0.89l2.9,2.19l-0.12,0.57l1.84,0.97l0.55,1.15l0.41,0.19l1.83,-0.75l0.48,0.77l-0.25,0.06l0.01,0.5l0.81,0.31l0.86,-0.65l-0.05,-0.98l-0.45,-0.65l0.19,0.01l0.88,1.79l1.82,1.01l0.6,-0.34l0.62,-1.41l-0.16,-0.23l-1.16,-0.42l-0.49,-0.92l-0.89,-0.53l-1.03,0.09l-0.32,-0.28l-0.4,-1.32l0.93,-0.41l0.68,0.34l0.37,-0.56l-0.75,-1.21l-1.13,-0.68l-0.03,-1.06l-0.43,-0.23l-0.85,0.36l-2.69,-2.75l0.6,-1.16l0.03,-2.07l-2.01,-4.96l-1.06,-1.45l-0.46,-1.62l1.08,-0.49l1.04,-1.04l2.82,2.37l3.54,1.93l3.58,0.21l2.08,-1.41l1.66,0.14l0.96,-0.29l4.06,1.99l2.69,0.39l-0.27,1.2l0.44,0.21l0.33,1.19l0.53,-0.27l0.27,-0.97l1.84,0.72l0.29,-0.35l-0.22,-0.39l-1.24,-0.82l0.04,-0.25l0.76,-0.07l0.53,1.02l1.3,0.32l3.28,1.92l2.49,0.37l2.26,-0.17l0.27,0.71l0.68,0.48l0.08,0.62l1.13,0.62l-1.38,-0.44l-0.86,0.24l0.32,1.65l1.61,0.4l0.86,-0.33l0.9,0.55l0.73,-0.06l0.16,0.38l-0.54,-0.04l-0.29,0.34l1.51,1.88l1.43,0.17l1.86,0.96l1.25,1.47l0.85,0.18l-1.25,0.43l-0.18,0.63l1.75,1.04l-0.08,0.69l1.48,0.96l0.49,0.67l2.05,0.41l0.54,0.89l1.82,0.48l1.69,1.0l1.77,1.66l0.1,0.53l1.03,0.33l0.87,0.77l-0.11,0.33l0.39,0.41l5.47,3.27l1.27,1.64l1.04,0.65l1.19,0.58l0.8,0.03l0.63,0.31l0.03,0.31l1.38,0.05l1.48,1.02l0.22,-0.19l1.42,1.17l0.77,1.33l1.73,1.4l0.56,0.96l1.03,0.39l-23.74,51.65l0.14,0.58l1.44,1.22l0.74,-0.12l1.21,1.25l1.77,-0.25l1.74,0.67l-0.92,1.14l0.49,1.3l-0.5,-0.27l-0.32,-1.02l-0.61,-0.69l-1.94,0.87l-1.71,-0.01l-1.2,-0.55l-1.91,-1.84l0.61,-1.21l-0.43,-0.93l-0.52,-0.09l-0.45,0.71l-0.6,-0.04l-3.66,-2.85l-4.43,-1.33l-0.25,-1.53l-1.55,-0.89l-0.52,-1.01l0.7,-0.5l0.21,-0.62l0.99,-0.19l0.14,-0.66l-0.9,-0.29l-2.19,0.85l-0.81,0.01l-0.85,-1.18l1.04,-0.79l-0.31,-0.45l-0.53,-0.01l-0.68,-2.15l-0.95,-0.05l-0.43,-0.37l0.22,-0.56l0.34,-0.05l1.02,0.43l0.42,-0.5l-0.14,-0.42l-1.31,-0.78l-1.54,0.27l-0.5,-0.5l-1.19,-0.38l0.3,-1.04l-0.53,-0.31l0.21,-0.77l-0.33,-0.28l-1.66,0.58l-0.32,-0.46l-1.19,-0.19l-0.69,0.52l0.29,0.74l-1.46,-0.3l-0.74,0.87l0.12,0.53l0.71,0.24l-1.28,0.3l-0.21,0.61l0.37,0.28l0.83,-0.12l0.38,0.6l-1.46,0.8l-0.26,0.85l-0.78,0.1l-0.76,-0.39l-0.32,-0.39l0.11,-0.5l-1.02,-0.25l0.09,-0.74l-0.49,-0.33l-0.87,0.89l-0.94,-0.57l-0.93,0.66l-0.71,-0.34l-0.27,0.46l-0.54,-0.43l-1.09,0.46l-0.14,-0.36l-0.8,-0.04l-0.38,0.2l-0.09,0.49l-1.46,0.21l-0.87,-0.77l-0.51,0.24l-1.41,-0.31l-0.34,-0.65l0.45,0.02l0.16,-0.37l0.53,0.01l0.73,0.75l0.49,-0.04l0.2,-0.43l0.67,0.06l1.45,-0.63l0.32,-0.52l-0.21,-0.37l-2.33,-0.15l-0.64,-0.99l1.28,-0.98l1.62,-0.44l1.16,-0.81l0.66,-0.89l0.14,-1.04l1.1,0.28l2.94,-0.14l0.14,0.8l0.66,0.6l1.06,0.16l2.4,2.31l0.56,-0.35l-0.27,-1.05l-0.71,-0.37l-1.44,-2.06l1.57,-0.56l1.83,0.31l0.25,-0.66l-1.72,-0.88l-1.31,0.15l-0.59,0.51l-1.45,-0.89l-0.13,-0.9l-1.07,0.27l-1.34,-0.19l-0.84,0.41l-1.25,-0.44l-1.18,0.04l-0.71,0.35l-0.19,0.5l-1.0,-0.11l-1.66,0.42l-1.03,0.91l-0.59,-0.02l-0.75,-1.05l-0.92,-0.34l-0.42,0.31l1.06,2.28l-0.73,0.34l-1.87,-0.82l-0.57,0.21l0.02,0.44l-0.39,-0.71l-0.65,0.59l-0.2,-0.38l-0.81,0.14l-0.11,0.46l-0.7,-0.35l-0.36,0.28l0.13,0.39l-1.49,-0.27l-0.68,0.98l-0.74,0.3l-0.16,0.84l0.35,0.58l0.59,-0.05l0.95,0.69l0.63,1.33l-0.65,0.54l-0.94,0.13l-1.25,-0.43l-0.48,0.4l-0.65,-0.13l-0.34,0.59l-0.97,-0.11l-0.58,0.49l-0.42,-0.28l-0.88,0.42l-0.68,-0.03l-0.98,-0.59l-0.9,0.53l-0.9,-0.16l-0.45,0.28l-0.56,-0.66l-1.51,0.75l-0.87,-0.51l-0.7,0.31l-2.16,-0.11l-0.53,0.41l0.24,0.95l-0.46,0.15l-1.09,-0.52l-0.52,0.31l-0.2,-0.24l-1.73,0.29l-0.58,-0.87l-1.4,0.41l-0.14,0.34l-0.32,-0.56l-0.54,-0.14l-1.29,-0.05l-0.62,0.31l-0.94,-0.38l-1.57,0.37l-0.27,0.68l-0.26,-0.07l-0.7,0.67l-2.46,-0.65l-0.5,-0.56l-0.81,-0.0l-0.71,-0.67l-1.2,-0.22l-0.4,0.21ZM111.33,502.76l-0.43,0.23l-0.11,-0.04l0.22,-0.23l0.31,0.03ZM128.45,468.26l-0.1,0.14l-0.06,0.02l0.02,-0.15l0.14,-0.02ZM194.04,541.32l0.49,0.51l0.05,1.1l2.39,4.74l-0.4,2.31l0.52,0.32l1.64,-0.32l-0.96,0.74l0.29,0.54l0.73,-0.18l0.8,0.55l0.26,1.19l-0.26,0.54l1.17,0.54l-0.21,0.46l0.42,0.41l-0.05,0.37l-1.08,-1.19l-1.25,0.46l-0.26,-0.63l-0.96,-0.51l-0.89,-1.43l0.35,-0.75l-0.85,-0.27l-0.47,-0.93l-0.02,-1.09l-1.16,-1.84l0.1,-0.61l-1.01,-0.43l-2.84,-3.43l1.15,-0.58l-0.33,0.74l0.73,0.46l0.37,-0.28l0.39,-1.25l1.15,0.71l0.35,-0.35l-0.33,-0.63ZM191.84,541.2l-0.01,-0.72l0.25,-0.06l0.08,0.39l-0.31,0.39ZM199.71,549.77l1.7,0.14l0.76,-0.63l0.33,-0.76l0.88,-0.16l0.36,-0.66l2.94,0.08l1.01,1.73l-0.48,0.47l0.08,1.5l0.89,0.74l0.22,0.83l0.4,0.31l0.08,1.48l1.47,1.92l0.18,0.72l-1.01,-0.15l-1.44,1.36l-0.52,-0.98l-0.84,-0.65l-0.17,-1.5l0.4,-1.2l-0.67,-0.47l0.34,-1.99l-0.15,-1.05l0.53,-1.32l-0.66,-0.25l-0.5,0.69l-0.69,-0.02l-0.31,0.89l0.3,1.04l-0.34,0.85l-0.19,4.27l-0.28,0.29l-0.54,-2.09l-1.5,0.06l0.42,-0.3l0.2,-0.91l-0.26,-1.17l0.88,0.13l0.45,-0.45l-0.11,-0.33l-0.96,-0.35l0.0,-0.84l-0.33,-0.34l-0.31,-0.02l-0.69,1.16l-0.5,-0.23l0.24,-0.5l-0.28,-0.54l-0.3,-0.02l-0.18,-0.5l-0.47,-0.15l-0.19,0.31l-0.21,-0.45ZM201.64,551.89l0.22,0.2l-0.19,0.19l-0.03,-0.38ZM210.75,558.13l0.49,0.94l-0.19,0.67l0.77,3.12l-1.94,-1.23l0.48,-1.32l-0.74,-0.3l-0.75,0.68l-0.11,-0.36l0.05,-0.59l0.78,-1.08l0.43,-0.42l0.73,-0.11ZM211.88,563.04l1.24,5.48l-0.54,0.45l0.03,0.64l0.81,0.55l-0.47,0.67l0.05,0.52l0.58,0.54l-0.16,1.32l0.35,0.43l0.9,0.26l1.46,1.84l1.18,0.8l0.89,1.18l0.09,0.77l1.3,0.84l-0.15,0.68l-1.0,0.87l-0.37,3.3l-2.62,2.05l-0.48,-0.13l-0.04,-0.92l-0.72,0.24l-0.1,-0.51l0.85,0.25l2.03,-1.46l-0.23,-0.63l-0.47,0.07l-0.37,-0.49l-0.54,0.12l0.77,-3.33l-0.69,-1.08l0.49,-0.15l0.54,-0.82l-0.43,-0.27l-1.49,0.44l-0.55,-0.29l-2.02,0.23l0.58,-1.29l1.44,0.45l0.7,-0.34l-0.07,-0.49l-1.61,-0.59l0.03,-0.84l-0.69,-0.55l-0.4,-1.04l0.27,-0.3l-0.16,-0.68l-0.35,-0.03l0.75,-1.07l-0.38,-0.25l-0.67,0.18l-0.27,-0.29l-0.26,-0.66l0.33,-0.21l0.18,-1.04l-0.39,-0.3l-0.64,0.08l-0.3,-0.92l-0.45,-0.27l1.09,-0.08l0.35,-0.42l-0.28,-0.52l-0.93,-0.06l0.15,-0.64l-0.47,-0.39l0.64,0.01l0.69,0.95l0.59,-0.13l0.04,-0.52l-1.49,-2.18l0.12,-0.39l1.23,0.83l0.52,-0.46ZM214.19,585.45l-0.17,0.68l-0.05,-0.01l0.09,-0.42l0.13,-0.25ZM215.43,583.76l-0.46,0.24l-0.88,-0.08l0.57,-0.42l0.76,0.26ZM211.63,577.77l0.18,0.7l-0.46,0.4l-0.51,-0.23l-0.2,0.77l-0.07,-0.87l0.74,-0.19l0.32,-0.57ZM209.08,567.16l-0.25,-0.24l0.08,-0.14l0.49,0.2l-0.32,0.18ZM165.84,518.29l-0.59,0.72l-0.72,-0.01l0.48,-0.52l0.84,-0.19ZM162.11,521.34l0.08,0.0l-0.06,0.02l-0.02,-0.02ZM162.26,521.34l0.08,-0.02l0.01,0.04l-0.04,0.04l-0.05,-0.05ZM141.64,514.72l0.19,0.06l0.26,0.22l-0.46,0.03l0.0,-0.31ZM132.07,521.13l-0.0,0.0l0.0,-0.0l0.0,0.0ZM132.06,520.84l-0.02,-0.07l0.06,-0.01l-0.03,0.08ZM109.91,522.38l0.07,-0.02l0.05,0.12l-0.03,0.01l-0.09,-0.11ZM107.83,523.67l0.01,0.02l-0.02,0.0l0.0,-0.01l0.01,-0.01ZM138.39,458.34l-0.47,-0.44l0.06,-0.45l0.41,0.27l0.0,0.62ZM108.6,500.59l-0.13,0.01l0.01,-0.02l0.12,0.01ZM211.75,580.86l0.58,-0.23l-0.18,0.96l-0.22,-0.23l-0.18,-0.5ZM212.61,580.42l0.07,-0.67l0.83,-0.31l0.46,-0.91l0.57,-0.03l0.4,2.14l-0.55,1.09l-0.28,0.21l-0.2,-0.36l0.13,-1.47l-0.39,-0.42l-0.59,0.65l-0.46,0.07ZM211.52,574.36l0.6,0.43l0.01,0.48l-0.65,-0.45l0.05,-0.46ZM209.53,574.99l0.45,-0.25l0.04,0.47l1.03,0.42l-0.3,0.25l0.03,0.55l-0.28,0.08l0.14,-0.47l-0.4,-0.66l-0.69,-0.39ZM210.35,574.41l0.09,-0.07l0.07,0.06l-0.0,0.01l-0.16,-0.0ZM209.53,571.91l0.03,-0.1l0.32,-0.15l0.15,-0.76l0.34,1.01l-0.83,0.01ZM206.96,580.16l0.1,-0.52l-0.64,-1.09l0.79,-0.24l0.21,-0.67l-1.77,-0.43l1.32,-0.73l0.08,-1.5l1.31,1.02l0.55,1.56l-0.14,0.62l-0.61,0.35l0.02,0.34l-0.75,0.25l-0.08,0.43l0.07,0.45l0.56,-0.01l1.27,1.12l-0.39,-0.07l-0.37,0.75l0.22,0.37l0.42,0.05l0.21,0.1l-1.09,0.58l0.11,0.7l0.38,0.27l-0.21,1.02l-0.44,-1.52l0.16,-0.81l-0.44,-0.45l-0.21,-1.59l-0.58,0.07l-0.05,-0.39ZM207.26,574.01l-0.23,-0.53l0.29,-0.13l0.18,0.45l-0.24,0.21ZM206.89,573.4l-0.43,-0.14l-0.38,-0.35l0.5,0.03l0.31,0.46ZM208.71,573.08l0.26,-0.17l0.69,0.23l-0.38,0.56l-0.56,-0.62ZM206.48,567.38l1.81,1.29l0.06,0.4l-0.46,0.04l-0.19,0.76l0.32,1.74l-0.85,-0.57l-0.68,0.22l0.79,-2.43l-0.8,-1.45ZM208.6,569.23l0.34,0.07l0.2,-0.33l0.4,0.52l-0.43,1.24l-0.5,-1.49ZM206.63,568.47l0.02,0.01l-0.01,0.01l-0.01,-0.02ZM204.28,565.52l0.44,-0.15l0.26,-0.56l0.29,0.26l0.51,-0.3l-0.24,0.69l-1.46,0.49l0.19,-0.44ZM206.36,564.27l-0.49,0.31l-0.02,-0.59l-0.46,-0.14l0.52,-0.15l0.24,-0.65l-0.97,-0.55l0.51,-2.93l0.34,-0.33l0.95,0.48l-0.57,1.9l0.35,0.2l0.07,1.28l0.43,0.45l-0.08,0.23l-0.57,-0.12l-0.25,0.63ZM206.14,574.27l-0.13,-0.03l0.0,-0.02l0.15,-0.04l-0.02,0.09ZM205.18,574.32l-0.02,0.0l0.01,-0.01l0.01,0.0ZM204.96,570.24l-0.05,-0.24l0.09,0.22l-0.04,0.01ZM205.24,569.02l-0.25,0.19l-0.9,-0.64l1.19,-0.15l-0.04,0.59ZM198.99,558.2l0.09,-0.07l0.23,0.49l-0.21,-0.07l-0.11,-0.35ZM199.36,558.71l0.39,0.44l0.56,-0.45l-0.44,-1.09l0.59,0.02l0.03,-0.77l0.75,0.33l0.49,-0.34l0.61,0.72l-0.97,-0.03l-0.88,0.41l0.35,0.96l1.2,1.34l-0.02,0.58l-1.22,-1.52l-0.61,0.35l-0.15,0.48l0.41,0.77l-0.14,0.51l0.26,0.3l-0.28,0.06l-0.92,-3.07ZM202.26,558.92l0.82,-0.38l1.25,0.94l-0.11,0.18l-0.99,-0.55l-0.0,1.0l-0.97,-1.19ZM202.11,560.96l0.72,0.4l0.85,-0.01l-0.23,1.25l-1.34,-1.64ZM201.28,562.69l0.51,-0.02l0.7,0.74l0.26,2.34l-0.36,2.31l-1.1,2.63l-0.28,-1.78l0.93,-0.51l-0.06,-0.73l-0.8,-1.37l-0.47,-0.03l0.25,-0.44l0.65,-0.05l0.21,-0.31l-0.13,-0.51l-0.53,-0.25l0.57,-0.27l-0.34,-1.16l-0.33,-0.12l0.32,-0.49ZM199.27,560.14l0.0,0.0l-0.01,0.0l0.0,-0.0ZM199.1,564.3l0.25,-0.07l0.1,-0.06l-0.12,0.15l-0.23,-0.02ZM199.63,563.32l0.06,-0.2l-0.05,-0.12l0.09,0.12l-0.1,0.2ZM162.15,525.49l0.25,-0.21l0.11,-0.0l-0.2,0.31l-0.16,-0.1ZM136.7,524.68l0.22,0.25l0.59,-0.1l0.04,-0.44l0.61,0.38l0.58,-0.95l0.41,0.07l-0.14,0.5l0.39,0.73l-0.5,0.38l-0.2,-0.72l-0.36,-0.02l-0.69,0.57l-0.12,-0.24l-0.6,0.21l-0.23,-0.63ZM139.88,525.12l-0.03,-0.01l0.02,-0.02l0.01,0.03ZM127.78,528.12l0.49,-0.13l0.09,0.05l-0.34,0.29l-0.24,-0.2ZM128.01,526.81l0.09,-0.93l-0.34,-0.42l0.92,-0.62l0.44,0.22l1.29,-0.18l0.25,0.25l-0.44,0.12l0.02,0.5l0.44,0.31l-0.25,0.64l0.13,1.11l0.79,0.74l-0.67,0.41l-0.19,-0.77l-0.69,-0.05l-0.9,-0.98l-0.9,-0.35ZM131.4,528.57l0.28,-0.39l-0.12,-1.16l0.76,-0.42l1.27,-0.11l0.68,0.47l0.83,-0.59l0.41,1.21l0.47,-0.02l0.28,-0.39l1.11,0.14l-0.99,0.85l0.16,0.91l0.58,0.28l-0.5,0.18l-1.93,-1.69l-0.88,0.36l-0.07,0.55l-0.38,-0.39l-0.44,0.12l-0.19,0.46l-1.33,-0.4ZM134.19,529.01l0.07,-0.02l0.09,0.03l-0.15,-0.01l-0.01,0.0ZM134.4,529.04l0.27,0.1l0.23,0.58l-0.25,-0.11l-0.25,-0.57ZM135.82,526.14l0.09,-0.06l0.02,0.01l-0.11,0.04ZM132.89,525.47l-0.57,-0.58l0.11,-0.17l0.61,-0.02l-0.14,0.76ZM98.14,450.76l0.91,-0.6l0.03,0.8l1.35,1.54l-1.87,-0.62l-0.42,-1.11ZM100.8,452.78l1.01,0.2l0.93,0.65l0.23,0.8l-0.52,0.59l1.78,3.15l-1.75,-0.21l-0.84,-3.48l-0.85,-1.69ZM104.84,458.76l0.28,0.01l0.41,0.53l-0.25,0.05l-0.43,-0.59ZM96.98,478.79l0.06,-0.22l1.37,1.26l0.71,-0.21l1.8,0.82l0.25,0.75l0.83,0.68l-0.55,0.55l-0.42,1.13l-1.5,-0.61l-1.48,-1.3l-1.06,-2.86ZM97.68,522.17l0.05,-0.07l0.04,-0.11l0.07,0.18l-0.15,-0.0ZM98.03,522.39l0.04,0.02l-0.0,0.03l-0.03,-0.05ZM80.23,514.88l1.15,0.07l1.73,-0.69l0.6,0.76l2.34,0.41l0.44,0.41l0.03,0.72l-0.39,0.84l-0.8,0.28l-2.14,-1.6l-1.22,-0.08l-0.63,0.33l-0.91,-0.42l-0.33,-0.34l0.13,-0.67ZM74.26,514.0l0.03,-0.25l0.32,0.05l0.02,0.35l-0.37,-0.15ZM64.81,513.23l0.09,-0.01l0.13,0.09l-0.17,0.0l-0.05,-0.08ZM70.29,514.34l-0.28,0.34l-0.61,-0.19l0.56,-0.1l0.41,-0.61l-0.92,-1.22l0.18,-0.35l1.26,0.65l-0.61,1.49ZM68.8,514.2l-0.28,0.32l-0.09,-0.1l0.14,-0.56l0.23,0.34ZM59.97,511.7l0.38,-0.51l0.48,-0.06l0.85,0.53l-0.94,0.27l-0.77,-0.22ZM62.67,511.55l0.36,-0.67l0.75,-0.01l0.67,0.35l0.17,0.49l-0.28,0.29l-1.66,-0.44ZM37.79,498.37l-0.03,-0.46l0.32,0.03l0.09,0.49l-0.39,-0.06ZM36.41,498.87l-0.02,0.01l0.01,-0.02l0.01,0.01ZM36.85,498.71l-0.01,-0.07l-0.0,-0.01l0.02,0.01l-0.01,0.07ZM30.2,493.17l-0.02,-0.03l0.04,-0.04l0.0,0.08l-0.02,-0.0ZM26.76,492.74l0.41,-0.33l0.12,0.35l-0.27,0.1l-0.26,-0.12ZM25.01,490.83l0.02,0.0l-0.01,0.01l-0.02,-0.01ZM23.18,488.38l-0.09,0.01l0.05,-0.17l0.04,0.08l0.01,0.08ZM23.19,487.9l-0.06,0.1l-0.14,-0.54l0.19,0.18l0.0,0.26ZM15.95,478.85l0.25,0.07l-0.02,0.19l-0.14,-0.01l-0.09,-0.25ZM1.23,449.67l0.23,0.17l0.21,0.66l0.47,0.45l-0.25,0.16l0.12,0.4l-0.78,-0.56l0.28,-0.8l-0.28,-0.48Z", "name": "Alaska"}, "US-NJ": {"path": "M801.04,165.08l1.31,-1.55l0.48,-1.57l0.5,-0.62l0.54,-1.45l0.11,-2.05l0.67,-1.35l0.92,-0.71l14.1,4.16l-0.4,6.02l-0.34,0.55l-0.23,-0.43l-0.7,0.11l-0.26,1.18l-0.76,0.97l0.12,1.42l-0.46,0.6l0.08,1.71l0.58,0.62l1.2,0.29l1.38,-0.43l2.3,0.24l0.9,6.91l-0.56,0.39l0.18,0.66l-0.61,0.95l0.46,0.58l-0.21,0.6l0.53,1.94l-0.47,2.0l0.11,0.61l0.62,0.64l-0.39,1.13l-0.49,0.45l-0.01,0.59l-0.93,1.13l0.02,0.52l-1.06,0.1l0.09,1.21l0.64,0.83l-0.82,0.56l-0.18,1.15l1.04,0.77l-0.31,0.29l-0.17,-0.44l-0.53,-0.18l-0.5,0.22l-0.44,1.51l-1.28,0.61l-0.2,0.45l0.46,0.55l0.8,0.06l-0.65,1.26l-0.26,1.5l-0.68,0.65l0.19,0.48l0.4,0.04l-0.89,1.57l0.07,0.95l-1.64,1.72l-0.12,-1.33l0.36,-2.43l-0.11,-0.87l-0.58,-0.82l-0.89,-0.28l-1.11,0.34l-0.81,-0.34l-1.5,0.88l-0.31,-0.7l-1.62,-0.96l-1.0,0.04l-0.65,-0.71l-0.7,0.07l-3.23,-2.03l-0.06,-1.72l-1.02,-0.94l0.48,-0.68l0.0,-0.87l0.43,-0.83l-0.12,-0.73l0.51,-1.18l1.2,-1.16l2.6,-1.49l0.54,-0.86l-0.38,-0.85l0.5,-0.37l0.47,-1.44l1.24,-1.7l2.52,-2.22l0.18,-0.67l-0.47,-0.82l-4.26,-2.77l-0.75,-1.05l-0.9,0.24l-0.48,-0.33l-1.24,-2.46l-1.62,-0.02l-1.0,-3.44l1.02,-1.03l0.36,-2.23l-1.87,-1.91Z", "name": "New Jersey"}, "US-ME": {"path": "M899.43,43.99l-0.01,-0.31l0.01,-0.16l0.04,0.37l-0.04,0.1ZM836.38,56.23l0.87,-1.15l1.42,1.7l0.84,0.04l0.39,-2.12l-0.46,-2.19l1.7,0.36l0.73,-0.42l0.21,-0.52l-0.32,-0.7l-1.18,-0.47l-0.44,-0.62l0.19,-1.42l0.86,-2.02l2.08,-2.25l0.01,-0.98l-0.52,-0.93l1.02,-1.64l0.39,-1.51l-0.22,-0.92l-1.02,-0.35l-0.07,-1.42l-0.4,-0.43l0.55,-0.96l-0.04,-0.63l-1.0,-1.26l0.13,-1.73l0.37,-0.63l-0.15,-0.97l1.22,-1.93l-0.96,-6.16l5.57,-18.86l2.25,-0.23l1.14,3.18l0.55,0.43l2.54,0.56l1.83,-1.73l1.68,-0.82l1.24,-1.71l1.25,-0.12l0.64,-0.47l0.25,-1.43l0.42,-0.29l1.36,0.04l3.68,1.41l1.14,0.96l2.36,1.05l8.37,22.68l0.64,0.65l-0.19,1.26l0.64,0.86l-0.1,1.52l-0.32,0.05l-0.24,0.66l1.71,1.13l1.79,0.22l0.82,0.41l1.88,-0.19l1.25,-0.63l0.34,0.86l-0.59,1.42l1.69,1.86l0.28,2.68l2.72,1.68l0.98,-0.1l0.47,-0.74l-0.06,-0.5l0.36,0.08l0.25,0.49l0.64,0.07l1.41,1.11l0.27,0.75l1.27,0.94l0.04,0.47l-0.52,-0.14l-0.39,0.41l0.18,0.77l-0.76,-0.15l-0.35,0.4l0.16,0.63l0.81,0.53l0.55,0.92l0.48,0.17l0.16,-0.88l0.38,-0.17l0.8,0.32l0.25,-0.83l0.34,0.41l-0.31,0.85l-0.53,0.19l-1.21,3.24l-0.63,-0.04l-0.31,0.44l-0.55,-1.05l-0.72,0.03l-0.3,0.5l-0.56,0.06l-0.02,0.49l0.58,0.85l-0.9,-0.45l-0.33,0.63l0.26,0.52l-1.2,-0.28l-0.36,0.3l-0.37,0.78l0.07,0.45l0.44,0.08l0.07,1.21l-0.37,-0.57l-0.55,-0.06l-0.39,0.45l-0.2,1.09l-0.48,-1.53l-1.14,0.01l-0.67,0.75l-0.36,1.48l0.59,0.63l-0.83,0.63l-0.69,-0.46l-0.73,1.04l0.1,0.64l0.99,0.63l-0.35,0.21l-0.1,0.82l-0.45,-0.21l-0.85,-1.82l-1.03,-0.46l-0.39,0.22l-0.45,-0.41l-0.57,0.63l-1.24,-0.19l-0.26,0.85l0.78,0.4l0.01,0.37l-0.51,-0.05l-0.56,0.4l-0.09,0.69l-0.49,-1.02l-1.17,-0.02l-0.16,0.64l0.52,0.87l-1.44,0.95l0.84,1.11l0.08,1.06l0.53,0.65l-0.96,-0.41l-0.96,0.22l-1.2,-0.42l-0.17,-0.91l0.74,-0.28l-0.08,-0.55l-0.42,-0.49l-0.67,-0.12l-0.3,0.33l-0.23,-2.37l-0.37,-0.22l-1.1,0.27l0.04,1.96l-1.85,1.92l0.02,0.49l1.25,1.47l-0.64,0.96l-0.19,3.86l0.77,1.41l-1.08,1.72l-0.8,-0.19l-0.45,0.93l-0.62,-0.06l-0.41,-1.15l-0.73,-0.21l-0.52,1.03l0.11,0.69l-0.45,0.59l0.12,2.41l-0.95,-1.0l0.14,-1.28l-0.24,-0.59l-0.81,0.29l-0.08,2.0l-0.44,-0.25l0.15,-1.54l-0.47,-0.4l-0.68,0.49l-0.76,3.04l-0.77,-1.97l0.17,-1.21l-0.4,-0.27l-0.46,0.21l-1.05,2.59l0.35,0.53l0.85,-0.15l0.95,2.08l-0.28,-0.59l-0.51,-0.23l-0.66,0.3l-0.07,0.64l-1.38,-0.1l-2.16,3.17l-0.53,1.86l0.29,0.6l-0.68,0.65l0.51,0.43l0.91,-0.21l0.36,0.92l-0.77,0.3l-0.2,0.39l-0.4,-0.04l-0.51,0.57l-0.14,1.03l0.66,1.37l-0.08,0.68l-0.79,1.29l-0.93,0.61l-0.54,1.28l0.44,1.56l-0.4,2.81l-0.8,-0.33l-0.41,0.59l-1.02,-0.76l-0.57,-1.85l-0.93,-0.37l-2.36,-1.99l-0.76,-3.45l-13.23,-35.5ZM863.26,81.18l0.08,0.26l-0.08,0.23l0.03,-0.28l-0.04,-0.2ZM864.67,81.4l0.46,0.7l-0.04,0.47l-0.32,-0.25l-0.1,-0.93ZM867.01,78.26l0.42,0.82l-0.16,0.14l-0.42,-0.19l0.16,-0.77ZM876.37,64.84l-0.14,0.2l-0.03,-0.23l0.17,0.04ZM872.41,75.18l0.01,0.02l-0.03,0.03l0.01,-0.05ZM898.03,42.84l-0.08,-0.14l0.13,-0.32l-0.05,0.4l-0.0,0.06ZM882.05,63.75l0.04,-1.17l0.41,-0.65l-0.18,-0.44l0.4,-0.5l0.62,-0.11l1.54,1.35l-0.49,0.65l-1.08,0.05l-0.27,0.43l0.57,1.3l-0.99,-0.18l-0.14,-0.56l-0.44,-0.17ZM882.89,67.0l0.09,-0.08l0.06,0.18l-0.03,-0.03l-0.12,-0.08ZM880.68,70.54l-0.02,-0.23l-0.04,-0.26l0.1,0.22l-0.03,0.27ZM878.64,66.32l0.61,0.4l-0.35,0.29l0.15,0.96l-0.39,-0.63l-0.02,-1.03ZM877.4,70.84l0.09,-0.01l0.48,-0.08l-0.25,0.45l-0.32,-0.37ZM876.27,69.51l0.32,-0.46l0.2,-0.05l-0.31,0.54l-0.2,-0.04Z", "name": "Maine"}, "US-MD": {"path": "M740.11,219.45l-2.04,-10.05l19.83,-4.49l-0.66,1.29l-0.94,0.08l-1.54,0.81l0.16,0.7l-0.42,0.49l0.23,0.78l-1.76,0.5l-1.47,0.03l-1.13,-0.39l0.21,-0.36l-0.3,-0.49l-1.11,-0.31l-0.47,1.8l-1.63,2.84l-1.37,-0.39l-1.03,0.62l-0.41,1.25l-1.59,1.93l-0.36,1.04l-0.88,0.45l-1.3,1.86ZM760.17,204.38l36.9,-9.12l8.48,26.17l0.45,0.26l1.06,-0.21l8.17,-2.07l-0.9,0.53l0.31,0.64l0.52,0.01l0.37,0.76l0.52,-0.05l-0.38,1.95l-0.12,-0.26l-0.47,0.07l-0.73,0.86l-0.17,2.69l-0.6,0.19l-0.36,0.71l-0.02,1.66l-3.61,1.37l-0.45,0.7l-2.2,0.43l-0.56,0.65l-0.3,-1.09l0.5,-0.31l0.86,-1.84l-0.4,-0.51l-0.45,0.12l0.08,-0.49l-0.44,-0.42l-2.29,0.63l0.3,-0.6l1.15,-0.83l-0.17,-0.69l-1.36,-0.18l0.38,-2.23l-0.18,-1.01l-0.91,0.16l-0.53,1.76l-0.34,-0.68l-0.62,-0.07l-0.44,0.47l-0.5,1.39l0.53,1.02l-2.86,-2.14l-0.43,-0.19l-0.61,0.36l-0.73,-0.76l0.33,-1.67l0.76,-0.6l-0.08,-1.35l2.55,0.23l0.78,-1.5l-0.32,-1.42l-0.72,0.27l-0.28,1.29l-0.97,-0.25l-0.38,-1.07l-0.52,-0.28l-0.55,0.23l-0.22,-0.68l-0.63,0.08l1.0,-0.82l0.22,-1.04l-0.54,-0.55l-0.75,0.83l-0.21,-0.61l1.06,-0.91l-0.25,-0.65l-0.54,-0.08l-0.51,-0.75l-0.42,0.22l-0.53,-0.37l0.83,-1.03l-0.24,-1.02l0.84,-1.95l-0.07,-0.86l-0.46,0.02l-0.66,0.66l-0.56,-0.16l-0.48,0.45l-0.19,0.97l-0.94,-1.2l0.75,-3.46l0.59,-0.51l0.07,-0.74l3.88,-0.78l0.49,-0.41l-0.23,-0.67l-0.45,-0.07l-2.38,0.56l0.88,-1.55l1.42,-0.05l0.35,-0.5l-0.99,-0.67l0.44,-1.9l-0.63,-0.32l-0.48,0.39l-0.87,1.95l0.2,-2.02l-0.59,-0.34l-0.88,1.43l-1.41,0.34l-0.31,1.64l0.39,0.53l0.65,0.12l-1.44,1.92l-0.2,-1.64l-0.64,-0.42l-0.61,0.73l0.07,1.45l-0.84,-0.29l-1.16,0.64l0.02,0.71l1.01,0.27l-0.37,0.53l-0.83,0.22l-0.05,0.34l-0.44,-0.04l-0.35,0.64l1.2,1.22l-0.29,0.17l-1.52,-0.76l-1.33,0.48l0.16,0.69l0.82,0.1l1.26,1.21l1.49,0.58l0.1,0.28l-0.44,0.33l-1.37,0.5l-0.12,1.19l1.83,1.04l0.46,0.62l-0.65,-0.43l-1.05,0.29l0.2,0.64l0.92,0.48l-0.34,0.47l0.4,1.15l0.6,0.09l-0.62,1.26l0.13,0.43l0.63,0.65l1.28,4.18l2.83,2.58l-0.01,0.35l-0.38,0.54l-0.67,-1.23l-1.21,-0.22l-1.69,-0.87l-1.51,-3.64l-0.73,-0.68l-0.28,0.69l1.17,3.93l0.65,0.92l1.45,0.81l1.3,0.31l1.49,1.39l0.89,-0.32l0.37,1.32l1.47,1.47l0.1,1.07l-1.08,-0.68l-0.33,-1.23l-0.63,-0.45l-0.45,0.04l-0.13,0.44l0.27,0.78l-0.74,0.13l-0.62,-0.73l-1.16,-0.38l-1.53,0.0l-0.92,0.43l-0.54,-0.2l-1.0,-2.19l-1.26,-0.71l-0.46,0.14l0.01,0.48l1.19,2.0l-0.67,-0.12l-0.28,-0.5l-0.89,-0.4l-1.61,-2.6l-0.48,-0.14l-0.43,1.47l-0.25,-0.74l-0.62,-0.04l-0.4,0.46l0.33,0.72l-0.18,0.69l-0.64,0.59l-0.56,-0.26l-0.63,-1.86l0.25,-1.14l0.71,-0.37l0.19,-0.51l-0.36,-0.52l0.83,-0.52l0.21,-1.61l1.06,-0.35l0.07,-0.66l-0.33,-0.42l0.23,-0.42l-0.38,-0.38l-0.04,-0.7l1.27,-2.19l-0.14,-0.54l-2.71,-1.67l-0.56,0.14l-0.69,1.19l-1.81,-0.37l-1.09,-1.19l-2.96,-0.09l-1.25,-0.91l0.61,-1.35l-0.4,-0.97l-1.19,-0.3l-0.89,-0.66l-2.69,0.07l-0.36,-0.23l-0.11,-1.26l-1.04,-0.6l0.09,-1.2l-0.51,-0.29l-0.48,0.19l-0.23,-0.64l-0.51,-0.13l0.26,-0.83l-0.45,-0.58l-0.69,-0.12l-1.81,0.67l-2.24,-1.27ZM789.47,212.09l0.29,-0.0l0.93,0.21l-0.44,0.4l-0.78,-0.61ZM796.19,217.99l0.0,0.16l-0.13,-0.11l0.12,-0.06ZM802.41,225.45l-0.02,0.33l-0.21,-0.15l0.23,-0.19ZM806.38,228.91l-0.16,0.3l-0.12,0.07l0.02,-0.24l0.26,-0.12ZM796.93,220.4l-0.06,0.01l-0.08,0.03l0.11,-0.06l0.03,0.02ZM796.6,220.53l-0.26,0.56l-0.18,0.12l0.15,-0.61l0.29,-0.07ZM795.49,216.88l-0.6,0.31l-0.58,-0.42l0.02,-0.53l0.16,-0.22l0.68,0.3l0.32,0.56ZM793.86,212.93l-0.25,0.5l-0.8,0.39l0.15,-1.17l0.9,0.27ZM801.56,228.92l0.02,-0.04l0.06,0.04l-0.0,0.01l-0.08,-0.01Z", "name": "Maryland"}, "US-AR": {"path": "M498.38,376.62l-1.42,-37.98l-4.48,-23.96l37.65,-2.57l38.99,-3.58l0.8,1.6l1.01,0.7l0.11,1.77l-0.77,0.57l-0.22,0.93l-1.42,0.93l-0.29,1.04l-0.83,0.54l-1.19,2.59l0.02,0.7l0.53,0.26l10.93,-1.46l0.86,0.93l-1.18,0.37l-0.52,0.96l0.25,0.49l0.84,0.41l-3.6,2.7l0.02,0.83l0.83,1.04l-0.59,1.14l0.61,0.97l-1.42,0.74l-0.11,1.44l-1.45,2.09l0.12,1.64l0.91,3.1l-0.15,0.27l-1.08,-0.01l-0.33,0.26l-0.51,1.73l-1.52,0.95l-0.04,0.51l0.79,0.91l0.05,0.65l-1.1,1.21l-2.02,1.13l-0.21,0.62l0.43,1.0l-0.19,0.27l-1.23,0.03l-0.42,0.67l-0.32,1.88l0.47,1.56l0.02,3.07l-1.27,1.09l-1.54,0.13l0.23,1.48l-0.21,0.48l-0.93,0.25l-0.59,1.77l-1.48,1.19l-0.02,0.93l1.39,0.76l-0.03,0.7l-1.23,0.3l-2.23,1.23l0.03,0.67l0.99,0.82l-0.45,1.14l0.53,1.38l-1.09,0.62l-1.9,2.57l0.52,0.7l1.0,0.49l0.01,0.57l-0.98,0.29l-0.42,0.64l0.51,0.84l1.63,1.01l0.06,1.76l-0.59,0.98l-0.09,0.84l1.34,0.79l0.5,2.17l-1.09,1.01l0.06,2.11l-51.41,4.07l-0.83,-11.52l-1.18,-0.85l-0.9,0.16l-0.82,-0.35l-0.93,0.39l-1.22,-0.33l-0.57,0.72l-0.47,0.01l-0.49,-0.48l-0.82,-0.15l-0.62,-1.0Z", "name": "Arkansas"}, "US-MA": {"path": "M876.8,135.88l1.21,-0.36l0.85,-1.12l0.63,0.63l-0.21,0.44l-2.48,0.41ZM819.78,119.93l30.02,-7.99l1.53,-1.8l0.34,-1.48l0.95,-0.35l0.61,-1.04l1.17,-1.05l1.35,-0.1l-0.44,1.05l1.03,0.32l0.21,1.55l1.17,0.55l-0.06,0.32l0.39,0.28l1.31,0.19l-0.17,0.56l-2.29,1.79l-0.05,1.07l0.45,0.16l-1.11,1.4l0.23,1.08l-1.01,0.96l0.58,1.41l1.4,0.45l0.5,0.63l1.36,-0.57l0.33,-0.59l1.2,0.09l0.79,0.47l0.23,0.68l1.78,1.37l-0.07,1.25l-0.55,0.55l0.12,0.6l1.23,0.66l1.73,-0.23l0.68,1.2l0.21,1.14l0.89,0.68l1.33,0.41l1.48,-0.12l0.43,0.38l1.05,-0.23l2.92,-2.34l0.81,-1.11l0.54,0.02l0.56,1.86l-3.32,1.51l-0.94,0.82l-2.75,0.98l-0.49,1.64l-1.93,1.37l-0.82,-2.64l0.11,-1.34l-0.55,-0.31l-0.5,0.39l-0.93,-0.1l-0.3,0.51l0.25,0.92l-0.26,0.79l-0.4,0.06l-0.63,1.09l-0.6,-0.2l-0.5,0.48l0.22,1.85l-0.89,0.87l-0.63,-0.79l-0.47,0.01l-0.11,0.55l-0.26,0.03l-0.71,-2.02l-1.02,-0.35l0.44,-2.5l-0.21,-0.4l-0.78,0.4l-0.29,1.47l-0.69,0.2l-1.4,-0.64l-0.78,-2.11l-0.8,-0.22l-0.77,-2.15l-0.49,-0.24l-6.13,2.0l-0.3,-0.15l-14.83,4.19l-0.28,0.5l-0.46,-0.28l-0.86,0.17l-9.53,2.36l-0.25,-0.18l-0.32,-14.65ZM859.98,110.04l-0.02,-0.37l-0.14,-0.48l0.51,0.23l-0.35,0.62ZM875.58,122.76l-0.12,-0.42l0.24,0.35l-0.13,0.06ZM874.57,121.06l-0.77,0.0l-0.54,-1.2l0.56,0.44l0.76,0.76ZM870.77,119.48l-0.08,0.14l-0.09,-0.07l0.0,-0.0l0.17,-0.07ZM871.17,135.05l0.01,-0.02l0.01,0.03l-0.02,-0.01ZM866.42,137.8l0.28,-0.09l0.16,-0.13l-0.14,0.38l-0.3,-0.16ZM867.13,137.17l0.41,-1.4l0.84,-1.18l0.17,0.26l0.46,-0.11l0.34,0.52l0.71,-0.01l0.18,0.38l-2.1,0.73l-1.01,0.81Z", "name": "Massachusetts"}, "US-AL": {"path": "M608.21,337.14l25.15,-2.9l19.38,-2.74l14.02,43.26l1.01,2.45l1.17,1.59l0.59,1.87l2.24,2.49l0.92,1.79l-0.11,2.13l1.79,1.13l-0.17,0.73l-0.63,0.1l-0.16,0.7l-0.98,0.84l-0.22,2.29l0.25,1.48l-0.76,2.29l-0.14,1.84l1.1,2.93l1.21,1.52l0.53,1.6l-0.08,5.02l-0.25,0.81l0.48,2.03l1.35,1.16l1.14,2.06l-47.6,6.92l-0.42,0.61l-0.08,2.99l2.64,2.75l2.0,0.96l-0.34,2.7l0.56,1.6l0.43,0.39l-0.94,1.69l-1.24,1.0l-1.13,-0.75l-0.34,0.49l0.66,1.46l-2.81,1.05l0.29,-0.63l-0.45,-0.86l-0.99,-0.76l-0.1,-1.11l-0.57,-0.22l-0.52,0.61l-0.32,-0.1l-0.89,-1.53l0.41,-1.67l-0.97,-2.21l-1.32,-0.65l-0.3,-0.89l-0.56,-0.17l-0.37,0.61l0.14,0.35l-0.77,3.1l-0.01,5.08l-0.59,0.0l-0.25,-0.71l-2.22,-0.44l-1.64,0.31l-5.45,-31.96l-0.98,-66.43l-0.02,-0.37l-1.07,-0.63l-0.69,-1.02Z", "name": "Alabama"}, "US-MO": {"path": "M468.37,225.32l24.69,-0.73l18.93,-1.42l22.08,-2.58l0.42,0.35l0.39,0.91l2.43,1.65l0.29,0.74l1.21,0.87l-0.51,1.36l-0.1,3.21l0.78,3.65l0.95,1.43l0.03,1.58l1.1,1.37l0.46,1.55l4.96,4.1l1.06,1.69l4.93,3.31l0.7,1.15l0.27,1.62l0.5,0.82l-0.18,0.69l0.47,1.8l0.97,1.63l0.77,0.73l1.03,0.16l0.83,-0.56l0.84,-1.4l0.57,-0.19l2.41,0.61l1.68,0.76l0.84,0.77l-0.97,1.95l0.26,2.28l-2.37,6.86l0.01,1.02l0.7,1.92l4.67,4.05l1.99,1.04l1.45,0.09l1.66,1.3l1.92,0.8l1.5,2.11l2.04,0.83l0.42,2.96l1.72,2.9l-1.1,1.94l0.18,1.38l0.75,0.33l2.31,4.24l1.94,0.92l0.55,-0.32l0.0,-0.65l0.87,1.1l1.07,-0.08l0.14,1.85l-0.37,1.07l0.53,1.59l-1.07,3.86l-0.51,0.07l-1.37,-1.13l-0.65,0.13l-0.78,3.34l-0.52,0.74l0.13,-1.06l-0.56,-1.09l-0.96,-0.2l-0.74,0.63l0.02,1.05l0.53,0.66l-0.04,0.7l0.58,1.34l-0.2,0.39l-1.2,0.39l-0.17,0.41l0.15,0.55l0.85,0.83l-1.7,0.37l-0.14,0.62l1.53,1.97l-0.89,0.75l-0.63,2.13l-10.6,1.42l1.06,-2.27l0.87,-0.61l0.18,-0.87l1.43,-0.95l0.25,-0.96l0.63,-0.37l0.29,-0.59l-0.22,-2.28l-1.05,-0.75l-0.2,-0.77l-1.09,-1.18l-39.21,3.6l-37.68,2.58l-3.21,-58.14l-1.03,-0.63l-1.2,-0.02l-1.52,-0.73l-0.19,-0.93l-1.11,-1.3l-0.36,-1.55l-0.55,-0.09l-0.3,-0.56l-1.13,-0.66l-1.4,-1.84l0.73,-0.51l0.09,-1.24l1.12,-1.27l0.09,-0.79l1.01,0.16l0.56,-0.43l-0.2,-2.23l-1.02,-0.74l-0.32,-1.1l-1.17,-0.01l-1.31,0.96l-0.81,-0.7l-0.73,-0.17l-2.67,-2.35l-1.05,-0.28l0.13,-1.6l-1.32,-1.72l0.1,-1.01l-0.37,-0.36l-1.01,-0.18l-0.59,-0.85l-0.84,-0.26l0.07,-0.52l-1.23,-2.88l-0.0,-0.74l-0.39,-0.49l-0.85,-0.29l-0.05,-0.53ZM583.34,294.3l-0.1,-0.1l-0.08,-0.15l0.11,-0.01l0.07,0.26Z", "name": "Missouri"}, "US-MN": {"path": "M443.33,67.63l-0.4,-1.36l0.05,-1.19l-0.48,-0.53l-1.36,-3.76l0.0,-3.21l-0.47,-1.96l0.27,-1.12l-0.56,-2.31l0.73,-2.56l-2.06,-6.89l29.52,-1.22l0.47,-0.81l-0.38,-7.11l2.84,0.15l1.24,0.82l0.38,2.69l1.73,5.3l0.13,2.3l0.52,0.86l1.46,1.05l1.3,0.49l3.22,-0.36l0.39,0.85l0.54,0.38l5.24,0.04l0.37,0.24l0.54,1.58l0.72,0.61l4.26,-0.77l0.77,-0.65l0.07,-0.69l0.69,-0.35l1.74,-0.44l3.97,-0.02l1.42,0.7l3.38,0.66l-1.0,0.78l0.0,0.82l0.51,0.45l2.9,-0.06l0.52,2.08l1.58,2.29l0.71,0.05l1.03,-0.78l-0.04,-1.73l2.67,-0.46l1.43,2.16l2.0,0.79l1.53,0.18l0.54,0.57l-0.03,0.83l0.58,0.35l1.32,0.06l0.19,0.75l0.41,0.1l1.2,-0.22l1.12,0.22l2.21,-0.85l2.77,-2.55l2.49,-1.54l1.24,2.52l0.96,0.51l2.22,-0.66l0.87,0.36l5.97,-1.3l0.56,0.18l1.32,1.64l1.24,0.59l0.62,-0.01l1.61,-0.82l1.29,0.1l-0.88,1.0l-4.68,3.07l-6.34,2.82l-3.68,2.47l-2.15,2.49l-0.96,0.57l-6.62,8.66l-0.95,0.6l-1.07,1.56l-1.96,1.97l-4.17,3.55l-0.86,1.78l-0.55,0.44l-0.14,0.96l-0.78,-0.01l-0.46,0.51l0.98,12.21l-0.79,1.2l-1.04,0.08l-0.52,0.82l-0.83,0.15l-0.61,0.83l-2.06,1.19l-0.93,1.86l0.06,0.72l-1.69,2.39l-0.01,2.06l0.38,0.91l2.15,0.39l1.42,2.49l-0.52,1.92l-0.71,1.25l-0.05,2.12l0.45,1.32l-0.71,1.23l0.91,3.14l-0.51,4.08l3.95,3.03l3.02,0.4l1.89,2.25l2.87,0.49l2.45,1.93l2.39,3.59l2.63,1.8l2.09,0.09l1.07,0.71l0.88,0.1l0.82,1.36l1.26,0.84l0.27,2.03l0.68,1.3l0.39,4.81l-40.59,3.19l-40.59,2.08l-1.45,-38.95l-1.52,-2.05l-2.57,-0.79l-0.94,-1.91l-1.46,-1.79l0.21,-0.67l2.82,-2.34l0.93,-2.03l0.43,-2.53l-0.35,-1.58l0.23,-1.86l-0.18,-1.51l-0.5,-1.03l-0.18,-2.33l-1.81,-2.59l-0.47,-1.13l-0.21,-2.16l-0.66,-0.98l0.15,-1.66l-0.35,-1.52l0.53,-2.69l-1.08,-1.85l-0.49,-8.32l-0.42,-0.79l0.06,-3.91l-1.58,-3.95l-0.53,-0.65Z", "name": "Minnesota"}, "US-CA": {"path": "M3.07,175.23l0.87,-1.1l0.96,0.24l1.21,-2.15l0.92,0.12l0.64,-0.23l0.41,-0.57l-0.27,-0.82l-0.71,-0.36l1.52,-2.68l0.12,-0.78l-0.43,-0.48l0.1,-1.34l0.85,-0.87l1.17,-2.25l1.26,-3.01l0.39,-2.09l-0.28,-1.0l0.05,-3.88l-1.25,-1.24l0.91,-1.24l0.94,-2.8l32.7,8.12l32.54,7.33l-13.66,64.62l25.42,34.63l36.56,51.05l13.29,17.71l-0.19,2.73l0.73,0.94l0.21,1.71l0.85,0.63l0.81,2.56l-0.07,0.91l0.63,1.46l-0.16,1.36l3.8,3.82l0.01,0.5l-1.95,1.52l-3.11,1.26l-1.2,1.99l-1.72,1.14l-0.33,0.81l0.38,1.03l-0.51,0.51l-0.1,0.9l0.08,2.29l-0.6,0.72l-0.64,2.43l-2.02,2.47l-1.6,0.14l-0.42,0.51l0.33,0.89l-0.59,1.34l0.54,1.11l-0.01,1.19l-0.78,2.68l0.57,1.02l2.74,1.13l0.34,0.83l-0.18,2.4l-1.18,0.78l-0.42,1.37l-2.27,-0.62l-1.26,0.61l-43.33,-3.35l0.04,-0.76l0.39,-0.07l0.3,-0.56l-0.12,-1.38l-1.1,-1.65l-1.08,0.02l0.16,-1.13l-0.24,-1.11l0.35,-0.13l0.36,-0.93l0.05,-2.47l-0.39,-2.64l-2.46,-5.66l-3.46,-4.07l-1.29,-1.97l-2.42,-2.12l-2.07,-2.85l-2.01,-1.04l-1.23,0.18l-0.29,0.88l-1.56,-0.94l-0.11,-0.38l0.63,-0.52l0.22,-0.95l-0.46,-2.65l-1.0,-1.95l-0.7,-0.58l-2.17,-0.43l-1.45,-0.13l-1.11,0.3l-0.49,-0.59l-1.65,-0.64l-3.05,-1.94l-1.24,-1.35l-0.54,-2.64l-0.88,-0.66l-1.77,-2.24l-1.66,-1.3l-1.91,-0.51l-1.09,0.24l-1.1,-0.72l-1.51,-0.14l-2.0,-1.52l-2.34,-0.83l-5.72,-0.67l-0.4,-1.69l-1.01,-0.93l-0.92,-0.35l1.28,-2.62l-0.33,-1.38l0.84,-2.21l-0.65,-1.27l1.18,-2.39l0.32,-2.41l-0.99,-1.24l-1.32,-0.26l-1.34,-1.39l-0.08,-0.75l1.44,-1.4l-0.5,-2.3l-0.34,-0.54l-1.67,-0.76l-1.88,-4.27l-1.79,-1.16l-0.32,-2.63l-1.62,-2.61l-0.22,-2.75l-1.01,-0.76l-1.13,-3.38l-2.15,-2.3l-0.75,-1.6l0.04,-3.93l0.55,-1.46l-0.54,-0.6l0.52,-0.53l0.56,0.71l0.58,-0.1l0.8,-0.59l0.9,-1.63l0.83,0.01l0.08,-0.52l-0.51,-0.5l0.4,-0.88l-0.05,-0.93l-0.49,-2.22l-0.61,-1.2l-0.6,-0.44l-0.92,0.24l-2.02,-0.43l-1.45,-1.81l-0.86,-2.15l-0.53,-0.38l-0.32,-1.18l-0.46,-0.5l0.04,-1.12l0.85,-2.26l-0.21,-2.94l-0.89,-1.29l1.1,-2.73l0.21,-2.33l1.33,-0.2l0.23,1.52l-0.62,0.31l-0.1,2.71l1.73,1.17l0.7,1.41l1.0,0.72l0.4,1.01l0.89,0.4l0.85,-0.4l-0.19,-1.18l-0.68,-0.51l-0.37,-1.53l0.13,-1.99l-0.54,-1.26l-0.37,-0.02l-0.11,-0.14l0.62,-0.35l-0.0,-0.34l-1.62,-1.2l0.69,-0.67l-0.17,-1.88l-0.94,-0.36l-0.3,-0.61l1.06,-0.65l0.99,-0.01l0.95,-0.71l1.25,1.03l2.62,-0.1l5.0,2.23l0.53,-0.22l0.04,-0.59l0.61,-0.67l-0.3,0.75l0.39,0.76l0.81,-0.06l0.35,-0.49l1.35,1.59l0.7,-0.16l0.02,-0.38l-0.53,-1.14l-0.97,-0.74l-0.27,-0.8l-0.66,-0.38l-1.08,-0.07l0.27,-0.58l-0.25,-0.54l-2.47,1.29l-0.7,-0.34l-0.75,0.18l-0.18,-0.55l-1.09,-0.25l0.28,-0.66l-0.36,-0.69l-1.08,-0.17l-1.85,1.57l-0.34,-0.46l-1.36,-0.54l-0.36,-0.88l-1.36,-1.35l-2.59,0.52l0.1,0.92l-0.69,1.21l0.53,0.72l-0.88,0.92l-0.07,2.28l-0.37,-0.09l-1.52,-2.07l-1.18,-0.34l-1.16,-2.44l-1.41,-1.2l0.09,-0.69l-0.68,-0.18l0.72,-1.17l0.93,2.05l0.44,0.25l0.33,-0.38l-1.77,-5.64l-0.41,-0.59l-0.57,-0.2l0.2,-0.84l-0.53,-2.28l-2.72,-3.32l-1.0,-2.98l-3.44,-6.17l-0.03,-0.38l1.13,-1.43l0.12,-0.84l-0.51,-6.74l0.61,-1.86l1.33,-2.02l0.4,-3.04l-0.36,-1.21l0.19,-2.39l-0.7,-1.04l-1.24,-3.68l-0.57,-0.53l0.1,-0.93l-0.32,-0.88l-1.03,-0.88l-2.01,-3.31l0.52,-1.23l-0.26,-2.71l2.37,-3.43ZM33.34,240.42l0.01,-0.01l0.01,0.01l-0.02,-0.01ZM45.64,325.97l-0.02,0.03l0.02,-0.03l0.01,0.01ZM31.6,240.2l-0.09,0.14l-0.63,0.23l-0.2,-0.07l0.92,-0.3ZM64.39,351.36l0.25,0.02l0.12,0.18l-0.3,-0.09l-0.08,-0.11ZM65.88,352.49l1.24,0.77l0.76,1.84l-0.71,-0.55l-1.36,-0.3l-0.19,-0.45l0.25,-1.3ZM62.75,362.69l0.35,0.67l1.43,1.87l-0.36,0.2l-0.93,-0.98l-0.49,-1.75ZM43.78,333.68l1.01,0.67l1.25,0.32l1.01,0.93l-0.99,0.28l-2.06,-0.63l-0.22,-1.56ZM48.37,335.72l0.36,-0.44l0.53,0.07l-0.3,0.37l-0.6,-0.0ZM45.95,352.06l0.3,-0.1l1.05,0.9l-0.69,-0.26l-0.66,-0.54ZM37.78,333.89l1.16,-0.17l1.18,0.26l0.31,0.81l0.69,0.46l-2.29,0.46l-0.6,-0.54l-0.46,-1.28Z", "name": "California"}, "US-IA": {"path": "M452.59,162.09l42.79,-2.19l40.52,-3.19l0.96,2.52l1.99,1.0l0.08,0.59l-0.9,1.8l-0.16,1.04l0.9,5.08l0.92,1.26l0.39,1.75l1.46,1.72l4.94,0.85l1.26,2.03l-0.3,1.03l0.29,0.66l3.61,2.37l0.85,2.41l3.84,2.31l0.62,1.68l-0.31,4.21l-1.64,1.98l-0.5,1.94l0.13,1.28l-1.25,1.36l-2.51,0.96l-0.89,1.18l-0.55,0.25l-4.56,0.83l-0.89,0.73l-0.61,1.71l-0.15,2.55l0.4,1.08l2.01,1.47l0.54,2.65l-1.87,3.25l-0.22,2.24l-0.52,1.42l-2.88,1.39l-1.02,1.02l-0.2,0.99l0.72,0.87l0.2,2.15l-0.58,0.23l-1.34,-0.82l-0.31,-0.76l-1.29,-0.82l-0.29,-0.51l-0.88,-0.36l-0.3,-0.82l-0.94,-0.68l-22.28,2.61l-15.11,1.16l-7.58,0.51l-20.76,0.47l-0.22,-1.06l-1.29,-0.73l-0.33,-0.67l0.57,-1.16l-0.21,-0.95l0.22,-1.39l-0.36,-2.18l-0.6,-0.73l0.07,-3.64l-1.05,-0.5l0.05,-0.9l0.71,-1.02l-0.05,-0.44l-1.31,-0.56l0.33,-2.54l-0.41,-0.45l-0.89,-0.16l0.23,-0.8l-0.3,-0.58l-0.51,-0.25l-0.74,0.23l-0.42,-2.81l0.5,-2.36l-0.2,-0.67l-1.36,-1.71l-0.08,-1.92l-1.78,-1.54l-0.36,-1.74l-1.08,-0.94l0.03,-2.18l-1.1,-1.87l0.21,-1.7l-0.27,-1.08l-1.38,-0.67l-0.87,-2.17l0.05,-0.63l-1.8,-1.82l0.56,-1.6l0.54,-0.47l0.72,-2.68l0.0,-1.68l0.54,-0.68l0.21,-1.19l-0.51,-2.24l-1.33,-0.29l-0.05,-0.73l0.45,-0.56l-0.0,-1.71l-0.95,-1.42l-0.05,-0.87Z", "name": "Iowa"}, "US-MI": {"path": "M611.79,185.66l1.83,-2.17l0.7,-1.59l1.18,-4.4l1.43,-3.04l1.01,-5.05l0.09,-5.36l-0.86,-5.54l-2.4,-5.17l0.6,-0.5l0.3,-0.79l-0.57,-0.42l-1.08,0.55l-3.82,-7.03l-0.21,-1.1l1.13,-2.68l-0.01,-0.97l-0.74,-3.12l-1.28,-1.65l-0.05,-0.62l1.72,-2.73l1.22,-4.13l-0.21,-5.34l-0.77,-1.59l1.09,-1.15l0.81,-0.02l0.56,-0.47l-0.27,-3.48l1.08,-0.11l0.67,-1.43l1.18,0.47l0.66,-0.33l0.76,-2.59l0.82,-1.2l0.56,-1.68l0.55,-0.18l-0.58,0.87l0.6,1.65l-0.71,1.8l0.71,0.42l-0.48,2.61l0.88,1.42l0.73,-0.05l0.52,0.56l0.64,-0.24l0.89,-2.26l0.66,-3.51l-0.08,-2.07l-0.76,-3.42l0.58,-1.02l2.13,-1.64l2.74,-0.54l0.98,-0.63l0.28,-0.64l-0.25,-0.54l-1.76,-0.11l-0.96,-0.86l-0.52,-1.98l1.85,-2.97l-0.1,-0.73l1.72,-0.23l0.74,-0.94l4.16,2.0l0.83,0.12l1.98,-0.4l1.37,0.4l1.19,1.04l0.53,1.15l0.77,0.49l2.41,-0.29l1.7,1.01l1.92,0.09l0.8,0.64l3.26,0.45l1.1,0.77l-0.01,1.12l1.04,1.31l0.64,0.21l0.37,0.91l-0.14,0.55l-0.66,-0.25l-0.94,0.57l-0.23,1.83l0.81,1.29l1.6,0.98l0.69,1.37l0.65,2.26l-0.12,1.73l0.77,5.56l-0.14,0.59l-0.58,0.21l-0.48,0.96l-0.74,0.07l-0.8,0.81l-0.17,4.47l-1.12,0.49l-0.18,0.82l-1.86,0.43l-0.72,0.6l-0.58,2.61l0.26,0.45l-0.21,0.52l0.25,2.57l1.38,1.31l2.89,0.84l0.91,-0.08l1.08,-1.23l0.6,-1.44l0.62,0.19l0.39,-0.24l1.01,-3.59l0.6,-1.06l-0.08,-0.51l0.97,-1.45l1.39,-0.39l1.06,-0.69l0.83,-1.1l0.87,-0.44l2.06,0.59l1.13,0.7l1.0,1.08l1.21,2.15l2.0,5.9l0.82,1.6l1.03,3.71l1.49,3.62l1.28,1.74l-0.34,3.92l0.45,2.48l-0.48,2.79l-0.35,0.45l-0.57,-1.2l0.03,-0.85l-1.46,-0.52l-0.47,0.08l-1.48,1.36l-0.06,0.83l0.54,0.67l-0.82,0.57l-0.29,0.79l0.28,2.94l-0.48,0.75l-1.62,0.92l-1.06,1.85l-0.43,3.73l0.27,1.55l-0.33,0.93l-0.42,0.19l0.02,0.91l-0.64,0.3l-0.89,1.6l-0.5,1.29l-0.02,1.05l-0.52,0.91l-20.49,4.22l-0.15,-0.92l-0.45,-0.33l-31.42,4.7ZM621.0,115.76l0.0,-0.07l0.11,-0.12l-0.01,0.03l-0.11,0.16ZM621.26,114.84l-0.07,-0.16l0.07,-0.14l-0.0,0.3ZM543.09,87.95l4.87,-2.38l3.55,-3.62l5.77,-1.36l1.38,-0.84l2.36,-2.7l0.98,0.04l1.52,-0.73l1.0,-2.24l2.82,-2.84l0.23,1.72l1.85,0.59l0.05,1.44l0.67,0.14l0.51,0.59l-0.17,3.14l0.44,0.95l-0.34,0.47l0.2,0.47l0.74,-0.02l1.08,-2.21l1.08,-0.89l-0.42,1.15l0.58,0.45l0.83,-0.67l0.52,-1.22l1.0,-0.43l3.09,-0.25l1.5,0.21l1.18,0.93l1.54,0.44l0.47,1.05l2.3,2.58l1.17,0.55l0.53,1.55l0.73,0.34l1.87,0.07l0.73,-0.4l1.06,-0.06l1.4,-1.09l1.0,1.11l1.1,0.64l1.01,-0.25l0.68,-0.82l1.87,1.06l0.64,-0.34l1.65,-2.58l2.81,-1.89l1.7,-1.64l0.92,0.11l3.26,-1.2l5.17,-0.25l3.25,-2.08l2.28,-0.88l1.52,-0.11l-0.01,3.24l0.29,0.71l-0.36,1.1l0.46,0.7l0.68,0.28l0.91,-0.41l2.19,0.7l1.14,-0.43l1.03,-0.87l0.66,0.48l0.21,0.7l0.85,0.22l1.22,-0.76l0.79,-1.57l0.69,-0.28l1.06,0.23l1.35,-1.14l0.53,-0.01l0.22,0.08l-0.3,2.02l0.75,1.32l-1.1,-0.04l-0.36,0.5l0.84,1.82l-0.87,1.04l0.12,0.45l0.83,0.79l1.37,-0.42l0.59,0.47l0.62,0.04l0.18,1.19l0.98,0.87l1.53,0.51l-1.17,0.68l-4.96,-0.15l-0.53,0.3l-1.35,-0.17l-0.88,0.41l-0.66,-0.75l-1.63,-0.07l-0.59,0.47l-0.07,1.22l-0.49,0.75l0.38,2.04l-0.92,-0.22l-0.89,-0.92l-0.77,-0.13l-1.95,-1.65l-2.41,-0.6l-1.6,0.04l-1.04,-0.5l-2.88,0.47l-0.61,0.45l-1.18,2.52l-3.47,0.73l-0.57,0.77l-2.06,-0.33l-2.82,0.93l-0.68,0.83l-0.56,2.51l-0.78,0.28l-0.81,0.87l-0.65,0.28l0.16,-1.95l-0.74,-0.91l-1.02,0.34l-0.77,0.92l-0.97,-0.39l-0.68,0.17l-0.37,0.4l0.1,0.82l-0.73,2.01l-1.2,0.59l-0.1,-1.37l-0.46,-1.06l0.34,-1.69l-0.17,-0.37l-0.66,-0.17l-0.45,0.57l-0.6,2.13l-0.22,2.56l-1.11,0.91l-1.26,3.02l-0.62,2.65l-2.55,5.33l-0.69,0.73l0.12,0.91l-1.4,-1.27l0.18,-1.74l0.63,-1.69l-0.41,-0.81l-0.62,-0.31l-1.35,0.85l-1.16,0.1l0.04,-1.29l0.81,-1.44l-0.41,-1.34l0.3,-1.09l-0.58,-0.98l0.15,-0.83l-1.9,-1.55l-1.1,-0.06l-0.59,-0.44l-1.48,0.0l0.3,-1.36l-0.94,-1.45l-1.13,-0.51l-2.23,-0.1l-3.19,-0.71l-1.55,0.59l-1.43,-0.42l-1.62,0.17l-4.56,-1.94l-15.36,-2.5l-1.99,-3.39l-1.88,-0.96l-0.76,0.26l-0.1,-0.29ZM602.93,98.55l-0.0,0.51l-0.46,0.32l-0.7,1.39l0.08,0.57l-0.65,-0.58l0.91,-2.15l0.83,-0.06ZM643.38,87.38l1.98,-1.52l0.17,-0.57l-0.27,-0.64l1.04,0.16l0.8,1.24l0.81,0.19l-0.28,1.09l-0.36,0.18l-1.51,-0.33l-0.77,0.45l-1.63,-0.24ZM636.91,81.17l0.4,0.45l0.22,0.61l-0.63,-0.71l0.01,-0.34ZM633.25,93.04l1.77,0.07l0.4,0.21l-0.18,0.52l-0.57,0.13l-1.42,-0.92ZM618.39,96.67l0.62,2.25l-0.43,0.61l-0.63,0.14l0.43,-3.0ZM612.8,110.72l0.47,0.3l-0.09,0.56l-0.44,-0.69l0.06,-0.17ZM611.78,113.45l0.0,-0.02l0.02,-0.03l-0.02,0.06ZM598.97,82.56l-0.23,-0.37l0.02,-0.4l0.37,0.33l-0.17,0.44ZM570.09,72.68l-0.5,-0.27l-1.16,0.06l-0.04,-1.56l1.0,-1.02l1.17,-2.09l1.83,-1.49l0.63,-0.0l0.52,-0.58l2.08,-0.89l3.34,-0.42l1.1,0.66l-0.54,0.38l-1.31,-0.12l-2.26,0.78l0.15,0.87l0.71,0.13l-1.19,0.98l-1.4,1.89l-0.69,0.28l-0.36,1.45l-1.15,1.36l-0.66,2.04l-0.67,-0.87l0.75,-0.97l0.14,-1.95l-0.84,-0.23l-0.6,0.92l-0.05,0.67ZM557.88,58.15l0.75,-0.98l-0.39,-0.33l0.56,-0.53l7.2,-4.88l-0.45,0.66l0.1,0.79l-0.43,0.49l-4.24,2.56l-0.86,0.98l0.24,0.36l-1.87,1.17l-0.61,-0.28Z", "name": "Michigan"}, "US-GA": {"path": "M653.55,331.39l22.0,-3.56l20.63,-3.86l-0.07,0.58l-2.59,3.34l-0.41,1.73l0.11,1.23l0.82,0.78l1.84,0.8l1.03,0.12l2.7,2.02l0.84,0.23l1.9,-0.37l0.6,0.25l0.8,1.64l1.51,1.6l1.04,2.5l1.33,0.82l0.84,1.16l0.56,0.26l1.0,1.77l1.07,0.3l1.17,0.99l3.81,1.84l2.41,3.16l2.25,0.58l2.53,1.67l0.5,2.33l1.24,1.01l0.47,-0.16l0.31,0.49l-0.1,0.62l0.79,0.72l0.79,0.09l0.56,1.2l4.98,1.88l0.4,1.78l1.54,1.73l1.02,2.0l-0.07,0.8l0.48,0.69l0.11,1.24l1.04,0.79l2.41,0.79l0.28,0.53l0.57,0.23l1.12,2.55l0.76,0.57l0.08,2.68l0.77,1.48l1.38,0.9l1.52,-0.27l1.44,0.76l1.45,0.12l-0.58,0.78l-0.55,-0.35l-0.47,0.27l-0.4,0.99l0.62,0.91l-0.38,0.48l-1.38,-0.16l-0.77,-0.55l-0.65,0.44l0.26,0.71l-0.49,0.52l0.36,0.6l1.44,0.25l-0.58,1.35l-1.43,0.27l-1.08,-0.44l-0.6,0.21l0.03,0.82l1.45,0.6l-1.76,3.73l0.36,1.73l-0.48,0.97l0.85,1.47l-2.29,-0.19l-0.46,0.29l0.06,0.63l0.55,0.34l2.76,0.24l1.07,0.66l-0.02,0.34l-0.56,0.22l-0.88,1.95l-0.5,-1.41l-0.45,-0.13l-0.6,0.33l-0.15,0.84l0.34,0.96l-0.6,0.12l-0.03,0.84l-0.3,0.16l0.07,0.46l1.33,1.15l-1.09,1.03l0.32,0.47l0.77,0.08l-0.39,0.91l0.06,0.88l-0.46,0.51l1.1,1.66l0.03,0.76l-0.79,0.33l-2.63,-0.16l-4.06,-0.96l-1.31,0.35l-0.18,0.74l-0.68,0.26l-0.35,1.25l0.28,2.08l0.95,1.36l0.13,4.24l-1.97,0.4l-0.54,-0.92l-0.12,-1.3l-1.33,-1.82l-49.17,5.13l-0.72,-0.56l-0.86,-2.7l-0.94,-1.51l-0.56,-0.38l0.16,-0.68l-0.73,-1.51l-1.82,-1.81l-0.43,-1.75l0.25,-0.8l0.06,-5.18l-0.6,-1.81l-1.18,-1.47l-1.03,-2.65l0.12,-1.65l0.77,-2.36l-0.25,-1.53l0.19,-2.11l1.62,-1.33l0.46,-1.47l-0.55,-0.61l-1.42,-0.69l0.09,-2.15l-0.97,-1.87l-2.18,-2.41l-1.03,-2.8l-0.75,-0.68l-0.16,-0.96l-0.77,-1.37l-13.98,-43.08ZM745.36,389.39l0.09,0.25l-0.07,0.25l-0.06,-0.25l0.04,-0.24ZM744.17,394.91l0.39,-2.07l0.44,-0.49l-0.31,1.19l-0.53,1.36ZM743.16,406.34l0.05,0.87l-0.01,0.45l-0.33,-0.56l0.3,-0.76Z", "name": "Georgia"}, "US-AZ": {"path": "M128.41,383.85l0.44,-1.81l1.28,-1.28l0.53,-1.12l0.48,-0.25l1.66,0.62l0.96,-0.03l0.51,-0.46l0.28,-1.17l1.31,-0.99l0.24,-2.73l-0.46,-1.24l-0.84,-0.66l-2.06,-0.66l-0.3,-0.61l0.8,-2.4l0.0,-1.38l-0.52,-1.19l0.57,-0.86l-0.2,-0.87l1.57,-0.27l2.29,-2.8l0.65,-2.43l0.65,-0.81l0.02,-3.17l0.55,-0.62l-0.29,-1.43l1.71,-1.14l1.03,-1.85l3.16,-1.29l2.03,-1.58l0.26,-0.53l-0.13,-1.04l-3.24,-3.48l-0.51,-0.22l0.22,-1.26l-0.66,-1.45l0.07,-0.91l-0.88,-2.76l-0.84,-0.56l-0.19,-1.65l-0.69,-0.8l0.19,-3.53l0.58,-0.87l-0.3,-0.86l1.03,-0.4l0.4,-1.42l0.14,-3.2l-0.76,-3.65l0.75,-2.55l-0.39,-3.0l0.85,-2.55l-0.8,-1.87l-0.03,-0.92l0.78,-1.88l2.53,-0.63l1.75,0.99l1.43,-0.19l0.96,2.24l0.78,0.71l1.54,0.14l1.01,-0.5l1.02,-2.27l0.94,-1.19l2.57,-16.93l42.39,5.77l42.52,4.67l-11.81,123.55l-36.84,-4.05l-36.3,-18.96l-28.41,-15.55Z", "name": "Arizona"}, "US-MT": {"path": "M166.27,57.26l0.69,-0.1l0.33,-0.38l-0.9,-1.99l0.83,-0.96l-0.39,-1.3l0.09,-0.96l-1.24,-1.93l-0.24,-1.49l-1.03,-1.33l-1.19,-2.44l3.53,-20.62l43.63,6.71l43.01,5.22l42.72,3.84l43.09,2.52l-3.53,85.97l-28.08,-1.47l-26.79,-1.91l-26.76,-2.4l-25.82,-2.78l-0.44,0.35l-1.22,10.4l-1.51,-2.01l-0.03,-0.91l-1.18,-2.35l-1.24,-0.74l-1.8,0.92l0.03,1.05l-0.72,0.42l-0.34,1.56l-2.42,-0.41l-1.91,0.57l-0.92,-0.85l-3.35,0.09l-2.38,-0.96l-1.68,0.58l-0.84,1.48l-4.66,-1.6l-1.29,0.37l-1.12,0.9l-0.31,0.67l-1.65,-1.4l0.22,-1.43l-0.9,-1.71l0.4,-0.36l0.07,-0.62l-1.17,-3.07l-1.45,-1.25l-1.44,0.35l-0.21,-0.64l-1.08,-0.9l-0.41,-1.37l0.68,-0.61l0.2,-1.41l-0.77,-2.38l-0.77,-0.35l-0.31,-1.58l-1.51,-2.54l0.23,-1.51l-0.56,-1.26l0.34,-1.4l-0.72,-0.86l0.48,-0.97l-0.21,-0.74l-1.14,-0.75l-0.13,-0.59l-0.85,-0.91l-0.8,-0.4l-0.51,0.37l-0.07,0.74l-0.7,0.27l-1.13,1.22l-1.75,0.37l-1.21,1.07l-1.08,-0.85l-0.64,-1.01l-1.05,-0.44l0.02,-0.86l0.74,-0.63l0.24,-1.06l-0.61,-1.6l0.9,-1.09l1.07,-0.08l0.83,-0.8l-0.26,-1.14l0.38,-1.07l-0.95,-0.8l-0.04,-0.8l0.66,-1.28l-0.59,-1.07l0.74,-0.07l0.38,-0.42l-0.04,-1.77l1.82,-3.73l-0.14,-1.05l0.89,-0.62l0.6,-3.16l-0.78,-0.5l-1.8,0.37l-1.33,-0.11l-0.64,-0.55l0.37,-0.83l-0.62,-0.97l-0.66,-0.23l-0.72,0.35l-0.07,-0.95l-1.74,-1.62l0.04,-1.84l-1.68,-1.82l-0.08,-0.68l-1.54,-2.88l-1.07,-1.29l-0.57,-1.63l-2.35,-1.34l-0.95,-1.95l-1.43,-1.19Z", "name": "Montana"}, "US-MS": {"path": "M555.09,430.69l0.67,-0.97l-1.05,-1.76l0.18,-1.63l-0.81,-0.87l1.68,-0.25l0.47,-0.54l0.4,-2.74l-0.77,-1.82l1.56,-1.79l0.25,-3.58l0.74,-2.26l1.88,-1.25l1.15,-1.97l1.4,-1.03l0.34,-0.78l-0.04,-0.99l-0.63,-0.96l1.14,-0.28l0.96,-2.58l0.91,-1.3l-0.16,-0.86l-1.53,-0.43l-0.35,-0.96l-1.82,-1.04l-0.07,-2.14l-0.93,-0.74l-0.45,-0.84l-0.02,-0.37l1.14,-0.29l0.46,-0.69l-0.26,-0.89l-1.4,-0.49l0.23,-1.77l0.98,-1.54l-0.77,-1.06l-1.08,-0.31l-0.15,-2.82l0.9,-0.54l0.23,-0.8l-0.62,-2.52l-1.25,-0.66l0.7,-1.32l-0.07,-2.21l-2.02,-1.52l1.13,-0.47l0.12,-1.41l-1.34,-0.89l1.58,-2.03l0.93,-0.31l0.36,-0.69l-0.52,-1.56l0.42,-1.35l-0.9,-0.89l2.84,-1.1l0.59,-0.76l-0.09,-1.07l-1.41,-0.95l1.39,-1.07l0.62,-1.77l0.94,-0.17l0.34,-0.97l-0.2,-0.77l1.47,-0.43l1.22,-1.21l0.07,-3.52l-0.46,-1.53l0.36,-1.78l0.73,0.09l0.68,-0.33l0.42,-0.87l-0.41,-1.06l2.72,-1.71l0.58,-1.06l-0.29,-1.28l36.41,-4.1l0.86,1.25l0.85,0.45l0.98,66.44l5.51,32.92l-0.73,0.69l-1.53,-0.3l-0.9,-0.94l-1.32,1.06l-1.23,0.17l-2.17,-1.26l-1.85,-0.19l-0.83,0.36l-0.34,0.44l0.32,0.41l-0.56,0.36l-3.96,1.66l-0.05,-0.49l-0.96,-0.52l-1.0,0.05l-0.58,1.0l0.76,0.61l-1.59,1.21l-0.32,1.28l-0.69,0.3l-1.33,-0.06l-1.16,-1.86l-0.08,-0.89l-0.91,-1.47l-0.21,-1.0l-1.4,-1.63l-1.16,-0.54l-0.47,-0.77l0.1,-0.62l-0.69,-0.92l0.21,-1.98l0.5,-0.93l0.66,-2.98l-0.06,-1.22l-0.43,-0.29l-34.63,3.41Z", "name": "Mississippi"}, "US-SC": {"path": "M697.02,323.8l4.86,-2.69l1.02,-0.05l1.11,-1.38l3.93,-1.89l0.45,-0.88l0.63,0.22l22.69,-3.36l0.07,1.22l0.42,0.57l0.71,0.01l1.21,-1.3l2.82,2.54l0.46,2.47l0.55,0.52l19.72,-3.48l22.72,15.06l0.02,0.55l-2.48,2.18l-2.44,3.66l-2.41,5.72l-0.09,2.73l-1.08,-0.21l0.85,-2.72l-0.63,-0.23l-0.76,0.87l-0.56,1.38l-0.11,1.55l0.83,0.95l1.05,0.23l0.44,0.91l-0.75,0.08l-0.41,0.56l-0.87,0.02l-0.24,0.68l0.94,0.45l-1.1,1.13l-0.07,1.02l-1.34,0.63l-0.49,-0.61l-0.5,-0.08l-1.06,0.87l-0.56,1.77l0.43,0.87l-1.19,1.23l-0.61,1.44l-1.2,1.01l-0.9,-0.4l0.27,-0.59l-0.53,-0.73l-1.37,0.31l0.25,1.2l-0.51,0.03l0.05,0.76l2.02,1.01l-0.12,0.39l-0.88,0.94l-1.22,0.23l-0.24,0.51l0.33,0.45l-2.29,1.34l-1.42,-0.84l-0.56,0.11l-0.1,0.67l1.19,0.78l-1.54,1.57l-0.72,-0.75l-0.5,0.52l-0.0,0.74l-1.54,-0.37l-1.34,-0.84l-0.44,0.5l0.16,0.53l-1.72,0.17l-0.44,0.37l-0.06,0.78l2.07,0.05l-0.25,0.55l0.42,0.25l1.91,-0.15l0.11,0.22l-0.97,0.86l-0.32,0.78l0.57,0.49l0.94,-0.53l0.03,0.21l-1.12,1.09l-0.99,0.43l-0.21,-2.04l-0.69,-0.27l-0.22,-1.54l-0.88,-0.15l-0.3,0.58l0.86,2.69l-1.12,-0.66l-0.63,-1.0l-0.39,-1.76l-0.65,-0.21l-0.52,-0.63l-0.69,0.0l-0.27,0.6l0.84,1.02l0.01,0.68l1.11,1.83l-0.02,0.86l1.22,1.17l-0.62,0.35l0.03,0.98l-1.2,3.56l-1.51,-0.78l-1.52,0.26l-0.97,-0.68l-0.54,-1.03l-0.16,-2.93l-0.86,-0.75l-1.06,-2.47l-1.04,-0.94l-3.23,-1.33l-0.49,-2.65l-1.12,-2.17l-1.43,-1.58l-0.06,-1.07l-0.76,-1.21l-4.81,-1.69l-0.58,-1.27l-1.21,-0.37l0.02,-0.7l-0.53,-0.87l-0.87,0.0l-0.73,-0.61l0.03,-1.21l-0.66,-1.26l-2.69,-1.78l-2.16,-0.52l-2.36,-3.12l-3.93,-1.92l-1.22,-1.03l-0.83,-0.12l-1.04,-1.81l-0.51,-0.22l-0.91,-1.21l-1.18,-0.68l-0.99,-2.42l-1.54,-1.65l-1.02,-1.87l-1.06,-0.37l-1.93,0.37l-0.46,-0.16l-2.75,-2.19l-1.06,0.02l-2.22,-1.27l0.36,-2.22l2.6,-3.31l0.15,-1.07ZM749.79,374.91l0.72,-0.08l0.51,0.45l-1.22,1.9l0.28,-1.22l-0.3,-1.06Z", "name": "South Carolina"}, "US-RI": {"path": "M858.46,132.97l0.33,0.01l1.02,2.65l-0.31,0.56l-1.03,-3.22ZM857.72,136.64l-0.28,-0.34l0.24,-1.5l0.41,1.53l-0.37,0.31ZM850.45,141.35l0.22,-0.46l-0.53,-2.22l-3.14,-9.99l5.6,-1.84l0.76,2.06l0.8,0.25l0.19,0.73l0.08,0.42l-0.77,0.25l0.03,0.29l0.51,1.45l0.58,0.55l-0.59,0.11l-0.46,0.73l0.86,0.97l-0.14,1.22l0.89,1.89l0.03,1.67l-0.27,0.71l-0.9,0.16l-3.59,2.35l-0.18,-1.31ZM855.24,131.44l0.26,0.1l0.01,0.09l-0.17,-0.08l-0.1,-0.12ZM856.63,132.11l0.25,0.54l-0.05,0.32l-0.15,0.01l-0.05,-0.87ZM855.33,144.99l0.14,0.11l-0.2,0.1l-0.0,-0.11l0.06,-0.1Z", "name": "Rhode Island"}, "US-CT": {"path": "M822.78,156.39l2.83,-3.23l-0.07,-0.54l-1.31,-1.25l-3.49,-15.88l9.8,-2.41l0.6,0.46l0.65,-0.26l0.23,-0.58l14.15,-3.99l3.2,10.17l0.47,1.95l-0.04,1.69l-1.65,0.32l-0.91,0.81l-0.69,-0.36l-0.5,0.1l-0.18,0.91l-1.14,0.07l-1.27,1.27l-0.62,-0.14l-0.56,-1.02l-0.89,-0.09l-0.21,0.67l0.75,0.64l0.08,0.54l-0.89,-0.02l-1.02,0.87l-1.65,0.07l-1.15,0.94l-1.44,0.13l-1.21,0.93l-0.65,-1.0l-0.61,0.11l-1.01,2.45l-1.06,0.61l-0.25,1.02l-0.77,-0.26l-0.96,0.56l-0.09,0.85l-1.72,0.98l-1.94,2.27l-1.18,0.46l-0.24,0.38l-1.4,-1.23Z", "name": "Connecticut"}}, "height": 590.4573482028339, "projection": {"type": "aea", "centralMeridian": -100.0}, "width": 900.0});
jQuery.fn.vectorMap('addMap', 'world_mill_en',{"insets": [{"width": 900, "top": 0, "height": 440.70631074413296, "bbox": [{"y": -12671671.123330014, "x": -20004297.151525836}, {"y": 6930392.02513512, "x": 20026572.39474939}], "left": 0}], "paths": {"BD": {"path": "M651.84,230.21l-0.6,-2.0l-1.36,-1.71l-2.31,-0.11l-0.41,0.48l0.2,0.94l-0.53,0.99l-0.72,-0.36l-0.68,0.35l-1.2,-0.36l-0.37,-2.0l-0.81,-1.86l0.39,-1.46l-0.22,-0.47l-1.14,-0.53l0.29,-0.5l1.48,-0.94l0.03,-0.65l-1.55,-1.22l0.55,-1.14l1.61,0.94l1.04,0.15l0.18,1.54l0.34,0.35l5.64,0.63l-0.84,1.64l-1.22,0.34l-0.77,1.51l0.07,0.47l1.37,1.37l0.67,-0.19l0.42,-1.39l1.21,3.84l-0.03,1.21l-0.33,-0.15l-0.4,0.28Z", "name": "Bangladesh"}, "BE": {"path": "M429.29,144.05l1.91,0.24l2.1,-0.63l2.63,1.99l-0.21,1.66l-0.69,0.4l-0.18,1.2l-1.66,-1.13l-1.39,0.15l-2.73,-2.7l-1.17,-0.18l-0.16,-0.52l1.54,-0.5Z", "name": "Belgium"}, "BF": {"path": "M421.42,247.64l-0.11,0.95l0.34,1.16l1.4,1.71l0.07,1.1l0.32,0.37l2.55,0.51l-0.04,1.28l-0.38,0.53l-1.07,0.21l-0.72,1.18l-0.63,0.21l-3.22,-0.25l-0.94,0.39l-5.4,-0.05l-0.39,0.38l0.16,2.73l-1.23,-0.43l-1.17,0.1l-0.89,0.57l-2.27,-1.72l-0.13,-1.11l0.61,-0.96l0.02,-0.93l1.87,-1.98l0.44,-1.81l0.43,-0.39l1.28,0.26l1.05,-0.52l0.47,-0.73l1.84,-1.09l0.55,-0.83l2.2,-1.0l1.15,-0.3l0.72,0.45l1.13,-0.01Z", "name": "Burkina Faso"}, "BG": {"path": "M491.65,168.18l-0.86,0.88l-0.91,2.17l0.48,1.34l-1.6,-0.24l-2.55,0.95l-0.28,1.51l-1.8,0.22l-2.0,-1.0l-1.92,0.79l-1.42,-0.07l-0.15,-1.63l-1.05,-0.97l0.0,-0.8l1.2,-1.57l0.01,-0.56l-1.14,-1.23l-0.05,-0.94l0.88,0.97l0.88,-0.2l1.91,0.47l3.68,0.16l1.42,-0.81l2.72,-0.66l2.55,1.24Z", "name": "Bulgaria"}, "BA": {"path": "M463.49,163.65l2.1,0.5l1.72,-0.03l1.52,0.68l-0.36,0.78l0.08,0.45l1.04,1.02l-0.25,0.98l-1.81,1.15l-0.38,1.38l-1.67,-0.87l-0.89,-1.2l-2.11,-1.83l-1.63,-2.22l0.23,-0.57l0.48,0.38l0.55,-0.06l0.43,-0.51l0.94,-0.06Z", "name": "Bosnia and Herz."}, "BN": {"path": "M707.48,273.58l0.68,-0.65l1.41,-0.91l-0.15,1.63l-0.81,-0.05l-0.61,0.58l-0.53,-0.6Z", "name": "Brunei"}, "BO": {"path": "M263.83,340.69l-3.09,-0.23l-0.38,0.23l-0.7,1.52l-1.31,-1.53l-3.28,-0.64l-2.37,2.4l-1.31,0.26l-0.88,-3.26l-1.3,-2.86l0.74,-2.37l-0.13,-0.43l-1.2,-1.01l-0.37,-1.89l-1.08,-1.55l1.45,-2.56l-0.96,-2.33l0.47,-1.06l-0.34,-0.73l0.91,-1.32l0.16,-3.84l0.5,-1.18l-1.81,-3.41l2.46,0.07l0.8,-0.85l3.4,-1.91l2.66,-0.35l-0.19,1.38l0.3,1.07l-0.05,1.97l2.72,2.27l2.88,0.49l0.89,0.86l1.79,0.58l0.98,0.7l1.71,0.05l1.17,0.61l0.6,2.7l-0.7,0.54l0.96,2.99l0.37,0.28l4.3,0.1l-0.25,1.2l0.27,1.02l1.43,0.9l0.5,1.35l-0.41,1.86l-0.65,1.08l0.12,1.35l-2.69,-1.65l-2.4,-0.03l-4.36,0.76l-1.49,2.5l-0.11,1.52l-0.75,2.37Z", "name": "Bolivia"}, "JP": {"path": "M781.12,166.87l1.81,0.68l1.62,-0.97l0.39,2.42l-3.35,0.75l-2.23,2.88l-3.63,-1.9l-0.56,0.2l-1.26,3.05l-2.16,0.03l-0.29,-2.51l1.08,-2.03l2.45,-0.16l0.37,-0.33l1.25,-5.94l2.47,2.71l2.03,1.12ZM773.56,187.34l-0.91,2.22l0.37,1.52l-1.14,1.75l-3.02,1.26l-4.58,0.27l-3.34,3.01l-1.25,-0.8l-0.09,-1.9l-0.46,-0.38l-4.35,0.62l-3.0,1.32l-2.85,0.05l-0.37,0.27l0.13,0.44l2.32,1.89l-1.54,4.34l-1.26,0.9l-0.79,-0.7l0.56,-2.27l-0.21,-0.45l-1.47,-0.75l-0.74,-1.4l2.12,-0.84l1.26,-1.7l2.45,-1.42l1.83,-1.91l4.78,-0.81l2.6,0.57l0.44,-0.21l2.39,-4.66l1.29,1.06l0.5,0.01l5.1,-4.02l1.69,-3.73l-0.38,-3.4l0.9,-1.61l2.14,-0.44l1.23,3.72l-0.07,2.18l-2.23,2.84l-0.04,3.16ZM757.78,196.26l0.19,0.56l-1.01,1.21l-1.16,-0.68l-1.28,0.65l-0.69,1.45l-1.02,-0.5l0.01,-0.93l1.14,-1.38l1.57,0.14l0.85,-0.98l1.4,0.46Z", "name": "Japan"}, "BI": {"path": "M495.45,295.49l-1.08,-2.99l1.14,-0.11l0.64,-1.19l0.76,0.09l0.65,1.83l-2.1,2.36Z", "name": "Burundi"}, "BJ": {"path": "M429.57,255.75l-0.05,0.8l0.5,1.34l-0.42,0.86l0.17,0.79l-1.81,2.12l-0.57,1.76l-0.08,5.42l-1.41,0.2l-0.48,-1.36l0.11,-5.71l-0.52,-0.7l-0.2,-1.35l-1.48,-1.48l0.21,-0.9l0.89,-0.43l0.42,-0.92l1.27,-0.36l1.22,-1.34l0.61,-0.0l1.62,1.24Z", "name": "Benin"}, "BT": {"path": "M650.32,213.86l0.84,0.71l-0.12,1.1l-3.76,-0.11l-1.57,0.4l-1.93,-0.87l1.48,-1.96l1.13,-0.57l1.63,0.57l1.33,0.08l0.99,0.65Z", "name": "Bhutan"}, "JM": {"path": "M228.38,239.28l-0.8,0.4l-2.26,-1.06l0.84,-0.23l2.14,0.3l1.17,0.56l-1.08,0.03Z", "name": "Jamaica"}, "BW": {"path": "M483.92,330.07l2.27,4.01l2.83,2.86l0.96,0.31l0.78,2.43l2.13,0.61l1.02,0.76l-3.0,1.64l-2.32,2.02l-1.54,2.69l-1.52,0.45l-0.64,1.94l-1.34,0.52l-1.85,-0.12l-1.21,-0.74l-1.35,-0.3l-1.22,0.62l-0.75,1.37l-2.31,1.9l-1.4,0.21l-0.35,-0.59l0.16,-1.75l-1.48,-2.54l-0.62,-0.43l-0.0,-7.1l2.08,-0.08l0.39,-0.4l0.07,-8.9l5.19,-0.93l0.8,0.89l0.51,0.07l1.5,-0.95l2.21,-0.49Z", "name": "Botswana"}, "BR": {"path": "M259.98,275.05l3.24,0.7l0.65,-0.53l4.55,-1.32l1.08,-1.06l-0.02,-0.63l0.55,-0.05l0.28,0.28l-0.26,0.87l0.22,0.48l0.73,0.32l0.4,0.81l-0.62,0.86l-0.4,2.13l0.82,2.56l1.69,1.43l1.43,0.2l3.17,-1.68l3.18,0.3l0.65,-0.75l-0.27,-0.92l1.9,-0.09l2.39,0.99l1.06,-0.61l0.84,0.78l1.2,-0.18l1.18,-1.06l0.84,-1.94l1.36,-2.11l0.37,-0.05l1.89,5.45l1.33,0.59l0.05,1.28l-1.77,1.94l0.02,0.56l1.02,0.87l4.07,0.36l0.08,2.16l0.66,0.29l1.74,-1.5l6.97,2.32l1.02,1.22l-0.35,1.18l0.49,0.5l2.81,-0.74l4.77,1.3l3.75,-0.08l3.57,2.0l3.29,2.86l1.93,0.72l2.12,0.12l0.71,0.62l1.21,4.51l-0.95,3.98l-4.72,5.06l-1.64,2.92l-1.72,2.05l-0.8,0.3l-0.72,2.03l0.18,4.75l-0.94,5.53l-0.81,1.13l-0.43,3.36l-2.55,3.5l-0.4,2.51l-1.86,1.04l-0.67,1.53l-2.54,0.01l-3.94,1.01l-1.83,1.2l-2.87,0.82l-3.03,2.19l-2.2,2.83l-0.36,2.0l0.4,1.58l-0.44,2.6l-0.51,1.2l-1.77,1.54l-2.75,4.78l-3.83,3.42l-1.24,2.74l-1.18,1.15l-0.36,-0.83l0.95,-1.14l0.01,-0.5l-1.52,-1.97l-4.56,-3.32l-1.03,-0.0l-2.38,-2.02l-0.81,-0.0l5.34,-5.45l3.77,-2.58l0.22,-2.46l-1.35,-1.81l-0.91,0.07l0.58,-2.33l0.01,-1.54l-1.11,-0.83l-1.75,0.3l-0.44,-3.11l-0.52,-0.95l-1.88,-0.88l-1.24,0.47l-2.17,-0.41l0.15,-3.21l-0.62,-1.34l0.66,-0.73l-0.22,-1.34l0.66,-1.13l0.44,-2.04l-0.61,-1.83l-1.4,-0.86l-0.2,-0.75l0.34,-1.39l-0.38,-0.5l-4.52,-0.1l-0.72,-2.22l0.59,-0.42l-0.03,-1.1l-0.5,-0.87l-0.32,-1.7l-1.45,-0.76l-1.63,-0.02l-1.05,-0.72l-1.6,-0.48l-1.13,-0.99l-2.69,-0.4l-2.47,-2.06l0.13,-4.35l-0.45,-0.45l-3.46,0.5l-3.44,1.94l-0.6,0.74l-2.9,-0.17l-1.47,0.42l-0.72,-0.18l0.15,-3.52l-0.63,-0.34l-1.94,1.41l-1.87,-0.06l-0.83,-1.18l-1.37,-0.26l0.21,-1.01l-1.35,-1.49l-0.88,-1.91l0.56,-0.6l-0.0,-0.81l1.29,-0.62l0.22,-0.43l-0.22,-1.19l0.61,-0.91l0.15,-0.99l2.65,-1.58l1.99,-0.47l0.42,-0.36l2.06,0.11l0.42,-0.33l1.19,-8.0l-0.41,-1.56l-1.1,-1.0l0.01,-1.33l1.91,-0.42l0.08,-0.96l-0.33,-0.43l-1.14,-0.2l-0.02,-0.83l4.47,0.05l0.82,-0.67l0.82,1.81l0.8,0.07l1.15,1.1l2.26,-0.05l0.71,-0.83l2.78,-0.96l0.48,-1.13l1.6,-0.64l0.24,-0.47l-0.48,-0.82l-1.83,-0.19l-0.36,-3.22Z", "name": "Brazil"}, "BS": {"path": "M226.4,223.87l-0.48,-1.15l-0.84,-0.75l0.36,-1.11l0.95,1.95l0.01,1.06ZM225.56,216.43l-1.87,0.29l-0.04,-0.22l0.74,-0.14l1.17,0.06Z", "name": "Bahamas"}, "BY": {"path": "M493.84,128.32l0.29,0.7l0.49,0.23l1.19,-0.38l2.09,0.72l0.19,1.26l-0.45,1.24l1.57,2.26l0.89,0.59l0.17,0.81l1.58,0.56l0.4,0.5l-0.53,0.41l-1.87,-0.11l-0.73,0.38l-0.13,0.52l1.04,2.74l-1.91,0.26l-0.89,0.99l-0.11,1.18l-2.73,-0.04l-0.53,-0.62l-0.52,-0.08l-0.75,0.46l-0.91,-0.42l-1.92,-0.07l-2.75,-0.79l-2.6,-0.28l-2.0,0.07l-1.5,0.92l-0.67,0.07l-0.08,-1.22l-0.59,-1.19l1.36,-0.88l0.01,-1.35l-0.7,-1.41l-0.07,-1.0l2.16,-0.02l2.72,-1.3l0.75,-2.04l1.91,-1.04l0.2,-0.41l-0.19,-1.25l3.8,-1.78l2.3,0.77Z", "name": "Belarus"}, "BZ": {"path": "M198.03,244.38l0.1,-4.49l0.69,-0.06l0.74,-1.3l0.34,0.28l-0.4,1.3l0.17,0.58l-0.34,2.25l-1.3,1.42Z", "name": "Belize"}, "RU": {"path": "M491.55,115.25l2.55,-1.85l-0.01,-0.65l-2.2,-1.5l7.32,-6.76l1.03,-2.11l-0.13,-0.49l-3.46,-2.52l0.86,-2.7l-2.11,-2.81l1.56,-3.67l-2.77,-4.52l2.15,-2.99l-0.08,-0.55l-3.65,-2.73l0.3,-2.54l1.81,-0.37l4.26,-1.77l2.42,-1.45l4.06,2.61l6.79,1.04l9.34,4.85l1.78,1.88l0.14,2.46l-2.55,2.02l-3.9,1.06l-11.07,-3.14l-2.06,0.53l-0.13,0.7l3.94,2.94l0.31,5.86l0.26,0.36l5.14,2.24l0.58,-0.29l0.32,-1.94l-1.35,-1.78l1.13,-1.09l6.13,2.42l2.11,-0.98l0.18,-0.56l-1.51,-2.67l5.41,-3.76l2.07,0.22l2.26,1.41l0.57,-0.16l1.46,-2.87l-0.05,-0.44l-1.92,-2.32l1.12,-2.32l-1.32,-2.27l5.87,1.16l1.04,1.75l-2.59,0.43l-0.33,0.4l0.02,2.36l2.46,1.83l3.87,-0.91l0.86,-2.8l13.69,-5.65l0.99,0.11l-1.92,2.06l0.23,0.67l3.11,0.45l2.0,-1.48l4.56,-0.12l3.64,-1.73l2.65,2.44l0.56,-0.01l2.85,-2.88l-0.01,-0.57l-2.35,-2.29l0.9,-1.01l7.14,1.3l3.41,1.36l9.05,4.97l0.51,-0.11l1.67,-2.27l-0.05,-0.53l-2.43,-2.21l-0.06,-0.78l-0.34,-0.36l-2.52,-0.36l0.64,-1.93l-1.32,-3.46l-0.06,-1.21l4.48,-4.06l1.69,-4.29l1.6,-0.81l6.23,1.18l0.44,2.21l-2.29,3.64l0.06,0.5l1.47,1.39l0.76,3.0l-0.56,6.03l2.69,2.82l-0.96,2.57l-4.86,5.95l0.23,0.64l2.86,0.61l0.42,-0.17l0.93,-1.4l2.64,-1.03l0.87,-2.24l2.09,-1.96l0.07,-0.5l-1.36,-2.28l1.09,-2.69l-0.32,-0.55l-2.47,-0.33l-0.5,-2.06l1.94,-4.38l-0.06,-0.42l-2.96,-3.4l4.12,-2.88l0.16,-0.4l-0.51,-2.93l0.54,-0.05l1.13,2.25l-0.96,4.35l0.27,0.47l2.68,0.84l0.5,-0.51l-1.02,-2.99l3.79,-1.66l5.01,-0.24l4.53,2.61l0.48,-0.06l0.07,-0.48l-2.18,-3.82l-0.23,-4.67l3.98,-0.9l5.97,0.21l5.49,-0.64l0.27,-0.65l-1.83,-2.31l2.56,-2.9l2.87,-0.17l4.8,-2.47l6.54,-0.67l1.03,-1.42l6.25,-0.45l2.32,1.11l5.53,-2.7l4.5,0.08l0.39,-0.28l0.66,-2.15l2.26,-2.12l5.69,-2.11l3.21,1.29l-2.46,0.94l-0.25,0.42l0.34,0.35l5.41,0.77l0.61,2.33l0.58,0.25l2.2,-1.22l7.13,0.07l5.51,2.47l1.79,1.72l-0.53,2.24l-9.16,4.15l-1.97,1.52l0.16,0.71l6.77,1.91l2.16,-0.78l1.13,2.74l0.67,0.11l1.01,-1.15l3.81,-0.73l7.7,0.77l0.54,1.99l0.36,0.29l10.47,0.71l0.43,-0.38l0.13,-3.23l4.87,0.78l3.95,-0.02l3.83,2.4l1.03,2.71l-1.35,1.79l0.02,0.5l3.15,3.64l4.07,1.96l0.53,-0.18l2.23,-4.47l3.95,1.93l4.16,-1.21l4.73,1.39l2.05,-1.26l3.94,0.62l0.43,-0.55l-1.68,-4.02l2.89,-1.8l22.31,3.03l2.16,2.75l6.55,3.51l10.29,-0.81l4.82,0.73l1.85,1.66l-0.29,3.08l0.25,0.41l3.08,1.26l3.56,-0.88l4.35,-0.11l4.8,0.87l4.57,-0.47l4.23,3.79l0.43,0.07l3.1,-1.4l0.16,-0.6l-1.88,-2.62l0.85,-1.52l7.71,1.21l5.22,-0.26l7.09,2.09l9.59,5.22l6.35,4.11l-0.2,2.38l1.88,1.41l0.6,-0.42l-0.48,-2.53l6.15,0.57l4.4,3.51l-1.97,1.43l-4.0,0.41l-0.36,0.39l-0.06,3.79l-0.74,0.62l-2.07,-0.11l-1.91,-1.39l-3.14,-1.11l-0.78,-1.85l-2.72,-0.68l-2.63,0.49l-1.04,-1.1l0.46,-1.31l-0.5,-0.51l-3.0,0.98l-0.22,0.58l0.99,1.7l-1.21,1.48l-3.04,1.68l-3.12,-0.28l-0.4,0.23l0.09,0.46l2.2,2.09l1.46,3.2l1.15,1.1l0.24,1.33l-0.42,0.67l-4.63,-0.77l-6.96,2.9l-2.19,0.44l-7.6,5.06l-0.84,1.45l-3.61,-2.37l-6.24,2.82l-0.94,-1.15l-0.53,-0.08l-2.28,1.52l-3.2,-0.49l-0.44,0.27l-0.78,2.37l-3.05,3.78l0.09,1.47l0.29,0.36l2.54,0.72l-0.29,4.53l-1.97,0.11l-0.35,0.26l-1.07,2.94l0.8,1.45l-3.91,1.58l-1.05,3.95l-3.48,0.77l-0.3,0.3l-0.72,3.29l-3.09,2.65l-0.7,-1.74l-2.44,-12.44l1.16,-4.71l2.04,-2.06l0.22,-1.64l3.8,-0.86l4.46,-4.61l4.28,-3.81l4.48,-3.01l2.17,-5.63l-0.42,-0.54l-3.04,0.33l-1.77,3.31l-5.86,3.86l-1.86,-4.25l-0.45,-0.23l-6.46,1.3l-6.47,6.44l-0.01,0.55l1.58,1.74l-8.24,1.17l0.15,-2.2l-0.34,-0.42l-3.89,-0.56l-3.25,1.81l-7.62,-0.62l-8.45,1.19l-17.71,15.41l0.22,0.7l3.74,0.41l1.36,2.17l2.43,0.76l1.88,-1.68l2.4,0.2l3.4,3.54l0.08,2.6l-1.95,3.42l-0.21,3.9l-1.1,5.06l-3.71,4.54l-0.87,2.21l-8.29,8.89l-3.19,1.7l-1.32,0.03l-1.45,-1.36l-0.49,-0.04l-2.27,1.5l0.41,-3.65l-0.59,-2.47l1.75,-0.89l2.91,0.53l0.42,-0.2l1.68,-3.03l0.87,-3.46l0.97,-1.18l1.32,-2.88l-0.45,-0.56l-4.14,0.95l-2.19,1.25l-3.41,-0.0l-1.06,-2.93l-2.97,-2.3l-4.28,-1.06l-1.75,-5.07l-2.66,-5.01l-2.29,-1.29l-3.75,-1.01l-3.44,0.08l-3.18,0.62l-2.24,1.77l0.05,0.66l1.18,0.69l0.02,1.43l-1.33,1.05l-2.26,3.51l-0.04,1.43l-3.16,1.84l-2.82,-1.16l-3.01,0.23l-1.35,-1.07l-1.5,-0.35l-3.9,2.31l-3.22,0.52l-2.27,0.79l-3.05,-0.51l-2.21,0.03l-1.48,-1.6l-2.6,-1.63l-2.63,-0.43l-5.46,1.01l-3.23,-1.25l-0.72,-2.57l-5.2,-1.24l-2.75,-1.36l-0.5,0.12l-2.59,3.45l0.84,2.1l-2.06,1.93l-3.41,-0.77l-2.42,-0.12l-1.83,-1.54l-2.53,-0.05l-2.42,-0.98l-3.86,1.57l-4.72,2.78l-3.3,0.75l-1.55,-1.92l-3.0,0.41l-1.11,-1.33l-1.62,-0.59l-1.31,-1.94l-1.38,-0.6l-3.7,0.79l-3.31,-1.83l-0.51,0.11l-0.99,1.29l-5.29,-8.05l-2.96,-2.48l0.65,-0.77l0.01,-0.51l-0.5,-0.11l-6.2,3.21l-1.84,0.15l0.15,-1.39l-0.26,-0.42l-3.22,-1.17l-2.46,0.7l-0.69,-3.16l-0.32,-0.31l-4.5,-0.75l-2.47,1.47l-6.19,1.27l-1.29,0.86l-9.51,1.3l-1.15,1.17l-0.03,0.53l1.47,1.9l-1.89,0.69l-0.22,0.56l0.31,0.6l-2.11,1.44l0.03,0.68l3.75,2.12l-0.39,0.98l-3.23,-0.13l-0.86,0.86l-3.09,-1.59l-3.97,0.07l-2.66,1.35l-8.32,-3.56l-4.07,0.06l-5.39,3.68l-0.39,2.0l-2.03,-1.5l-0.59,0.13l-2.0,3.59l0.57,0.93l-1.28,2.16l0.06,0.48l2.13,2.17l1.95,0.04l1.37,1.82l-0.23,1.46l0.25,0.43l0.83,0.33l-0.8,1.31l-2.49,0.62l-2.49,3.2l0.0,0.49l2.17,2.78l-0.15,2.18l2.5,3.24l-1.58,1.59l-0.7,-0.13l-1.63,-1.72l-2.29,-0.84l-0.94,-1.31l-2.34,-0.63l-1.48,0.4l-0.43,-0.47l-3.51,-1.48l-5.76,-1.01l-0.45,0.19l-2.89,-2.34l-2.9,-1.2l-1.53,-1.29l1.29,-0.43l2.08,-2.61l-0.05,-0.55l-0.89,-0.79l3.05,-1.06l0.27,-0.42l-0.07,-0.69l-0.49,-0.35l-1.73,0.39l0.04,-0.68l1.04,-0.72l2.66,-0.48l0.4,-1.32l-0.5,-1.6l0.92,-1.54l0.03,-1.17l-0.29,-0.37l-3.69,-1.06l-1.41,0.02l-1.42,-1.41l-2.19,0.38l-2.77,-1.01l-0.03,-0.59l-0.89,-1.43l-2.0,-0.32l-0.11,-0.54l0.49,-0.53l0.01,-0.53l-1.6,-1.9l-3.58,0.02l-0.88,0.73l-0.46,-0.07l-1.0,-2.79l2.22,-0.02l0.97,-0.74l0.07,-0.57l-0.9,-1.04l-1.35,-0.48l-0.11,-0.7l-0.95,-0.58l-1.38,-1.99l0.46,-0.98l-0.51,-1.96l-2.45,-0.84l-1.21,0.3l-0.46,-0.76l-2.46,-0.83l-0.72,-1.87l-0.21,-1.69l-0.99,-0.85l0.85,-1.17l-0.7,-3.21l1.66,-1.97l-0.16,-0.79ZM749.2,170.72l-0.6,0.4l-0.13,0.16l-0.01,-0.51l0.74,-0.05ZM874.85,67.94l-5.63,0.48l-0.26,-0.84l3.15,-1.89l1.94,0.01l3.19,1.16l-2.39,1.09ZM797.39,48.49l-2.0,1.36l-3.8,-0.42l-4.25,-1.8l0.35,-0.97l9.69,1.83ZM783.67,46.12l-1.63,3.09l-8.98,-0.13l-4.09,1.14l-4.54,-2.97l1.16,-3.01l3.05,-0.89l6.5,0.22l8.54,2.56ZM778.2,134.98l-0.56,-0.9l0.27,-0.12l0.29,1.01ZM778.34,135.48l0.94,3.53l-0.05,3.38l1.05,3.39l2.18,5.0l-2.89,-0.83l-0.49,0.26l-1.54,4.65l2.42,3.5l-0.04,1.13l-1.24,-1.24l-0.61,0.06l-1.09,1.61l-0.28,-1.61l0.27,-3.1l-0.28,-3.4l0.58,-2.47l0.11,-4.39l-1.46,-3.36l0.21,-4.32l2.15,-1.46l0.07,-0.34ZM771.95,56.61l1.76,-1.42l2.89,-0.42l3.28,1.71l0.14,0.6l-3.27,0.03l-4.81,-0.5ZM683.76,31.09l-13.01,1.93l4.03,-6.35l1.82,-0.56l1.73,0.34l5.99,2.98l-0.56,1.66ZM670.85,27.93l-5.08,0.64l-6.86,-1.57l-3.99,-2.05l-2.1,-4.16l-2.6,-0.87l5.72,-3.5l5.2,-1.28l4.69,2.85l5.59,5.4l-0.56,4.53ZM564.15,68.94l-0.64,0.17l-7.85,-0.57l-0.86,-2.04l-4.28,-1.17l-0.28,-1.94l2.27,-0.89l0.25,-0.39l-0.08,-2.38l4.81,-3.97l-0.15,-0.7l-1.47,-0.38l5.3,-3.81l0.15,-0.44l-0.58,-1.94l5.28,-2.51l8.21,-3.27l8.28,-0.96l4.35,-1.94l4.6,-0.64l1.36,1.61l-1.34,1.28l-16.43,4.94l-7.97,4.88l-7.74,9.63l0.66,4.14l4.16,3.27ZM548.81,18.48l-5.5,1.18l-0.58,1.02l-2.59,0.84l-2.13,-1.07l1.12,-1.42l-0.3,-0.65l-2.33,-0.07l1.68,-0.36l3.47,-0.06l0.42,1.29l0.66,0.16l1.38,-1.34l2.15,-0.88l2.94,1.01l-0.39,0.36ZM477.37,133.15l-4.08,0.05l-2.56,-0.32l0.33,-0.87l3.17,-1.03l3.24,0.96l-0.09,1.23Z", "name": "Russia"}, "RW": {"path": "M497.0,288.25l0.71,1.01l-0.11,1.09l-1.63,0.03l-1.04,1.39l-0.83,-0.11l0.51,-1.2l0.08,-1.34l0.42,-0.41l0.7,0.14l1.19,-0.61Z", "name": "Rwanda"}, "RS": {"path": "M469.4,163.99l0.42,-0.5l-0.01,-0.52l-1.15,-1.63l1.43,-0.62l1.33,0.12l1.17,1.06l0.46,1.13l1.34,0.64l0.35,1.35l1.46,0.9l0.76,-0.29l0.2,0.69l-0.48,0.78l0.22,1.12l1.05,1.22l-0.77,0.8l-0.37,1.52l-1.21,0.08l0.24,-0.64l-0.39,-0.54l-2.08,-1.64l-0.9,0.05l-0.48,0.94l-2.12,-1.37l0.53,-1.6l-1.11,-1.37l0.51,-1.1l-0.41,-0.57Z", "name": "Serbia"}, "LT": {"path": "M486.93,129.3l0.17,1.12l-1.81,0.98l-0.72,2.02l-2.47,1.18l-2.1,-0.02l-0.73,-1.05l-1.06,-0.3l-0.09,-1.87l-3.56,-1.13l-0.43,-2.36l2.48,-0.94l4.12,0.22l2.25,-0.31l0.52,0.69l1.24,0.21l2.19,1.56Z", "name": "Lithuania"}, "LU": {"path": "M436.08,149.45l-0.48,-0.07l0.3,-1.28l0.27,0.4l-0.09,0.96Z", "name": "Luxembourg"}, "LR": {"path": "M399.36,265.97l0.18,1.54l-0.48,0.99l0.08,0.47l2.47,1.8l-0.33,2.8l-2.65,-1.13l-5.78,-4.61l0.58,-1.32l2.1,-2.33l0.86,-0.22l0.77,1.14l-0.14,0.85l0.59,0.87l1.0,0.14l0.76,-0.99Z", "name": "Liberia"}, "RO": {"path": "M487.53,154.23l0.6,0.24l2.87,3.98l-0.17,2.69l0.45,1.42l1.32,0.81l1.35,-0.42l0.76,0.36l0.02,0.31l-0.83,0.45l-0.59,-0.22l-0.54,0.3l-0.62,3.3l-1.0,-0.22l-2.07,-1.13l-2.95,0.71l-1.25,0.76l-3.51,-0.15l-1.89,-0.47l-0.87,0.16l-0.82,-1.3l0.29,-0.26l-0.06,-0.64l-1.09,-0.34l-0.56,0.5l-1.05,-0.64l-0.39,-1.39l-1.36,-0.65l-0.35,-1.0l-0.83,-0.75l1.54,-0.54l2.66,-4.21l2.4,-1.24l2.96,0.34l1.48,0.73l0.79,-0.45l1.78,-0.3l0.75,-0.74l0.79,0.0Z", "name": "Romania"}, "GW": {"path": "M386.23,253.6l-0.29,0.84l0.15,0.6l-2.21,0.59l-0.86,0.96l-1.04,-0.83l-1.09,-0.23l-0.54,-1.06l-0.66,-0.49l2.41,-0.48l4.13,0.1Z", "name": "Guinea-Bissau"}, "GT": {"path": "M195.08,249.77l-2.48,-0.37l-1.03,-0.45l-1.14,-0.89l0.3,-0.99l-0.24,-0.68l0.96,-1.66l2.98,-0.01l0.4,-0.37l-0.19,-1.28l-1.67,-1.4l0.51,-0.4l0.0,-1.05l3.85,0.02l-0.21,4.53l0.4,0.43l1.46,0.38l-1.48,0.98l-0.35,0.7l0.12,0.57l-2.2,1.96Z", "name": "Guatemala"}, "GR": {"path": "M487.07,174.59l-0.59,1.43l-0.37,0.21l-2.84,-0.35l-3.03,0.77l-0.18,0.68l1.28,1.23l-0.61,0.23l-1.14,0.0l-1.2,-1.39l-0.63,0.03l-0.53,1.01l0.56,1.76l1.03,1.19l-0.56,0.38l-0.05,0.62l2.52,2.12l0.02,0.87l-1.78,-0.59l-0.48,0.56l0.5,1.0l-1.07,0.2l-0.3,0.53l0.75,2.01l-0.98,0.02l-1.84,-1.12l-1.37,-4.2l-2.21,-2.95l-0.11,-0.56l1.04,-1.28l0.2,-0.95l0.85,-0.66l0.03,-0.46l1.32,-0.21l1.01,-0.64l1.22,0.05l0.65,-0.56l2.26,-0.0l1.82,-0.75l1.85,1.0l2.28,-0.28l0.35,-0.39l0.01,-0.77l0.34,0.22ZM480.49,192.16l0.58,0.4l-0.68,-0.12l0.11,-0.28ZM482.52,192.82l2.51,0.06l0.24,0.32l-1.99,0.13l-0.77,-0.51Z", "name": "Greece"}, "GQ": {"path": "M448.79,279.62l0.02,2.22l-4.09,0.0l0.69,-2.27l3.38,0.05Z", "name": "Eq. Guinea"}, "GY": {"path": "M277.42,270.07l-0.32,1.83l-1.32,0.57l-0.23,0.46l-0.28,2.0l1.11,1.82l0.83,0.19l0.32,1.25l1.13,1.62l-1.21,-0.19l-1.08,0.71l-1.77,0.5l-0.44,0.46l-0.86,-0.09l-1.32,-1.01l-0.77,-2.27l0.36,-1.9l0.68,-1.23l-0.57,-1.17l-0.74,-0.43l0.12,-1.16l-0.9,-0.69l-1.1,0.09l-1.31,-1.48l0.53,-0.72l-0.04,-0.84l1.99,-0.86l0.05,-0.59l-0.71,-0.78l0.14,-0.57l1.66,-1.24l1.36,0.77l1.41,1.49l0.06,1.15l0.37,0.38l0.8,0.05l2.06,1.86Z", "name": "Guyana"}, "GE": {"path": "M521.71,168.93l5.29,0.89l4.07,2.01l1.41,-0.44l2.07,0.56l0.68,1.1l1.07,0.55l-0.12,0.59l0.98,1.29l-1.01,-0.13l-1.81,-0.83l-0.94,0.47l-3.23,0.43l-2.29,-1.39l-2.33,0.05l0.21,-0.97l-0.76,-2.26l-1.45,-1.12l-1.43,-0.39l-0.41,-0.42Z", "name": "Georgia"}, "GB": {"path": "M412.61,118.72l-2.19,3.22l-0.0,0.45l5.13,-0.3l-0.53,2.37l-2.2,3.12l0.29,0.63l2.37,0.21l2.33,4.3l1.76,0.69l2.2,5.12l2.94,0.77l-0.23,1.62l-1.15,0.88l-0.1,0.52l0.82,1.42l-1.86,1.43l-3.3,-0.02l-4.12,0.87l-1.04,-0.58l-0.47,0.06l-1.51,1.41l-2.12,-0.34l-1.86,1.18l-0.6,-0.29l3.19,-3.0l2.16,-0.69l0.28,-0.41l-0.34,-0.36l-3.73,-0.53l-0.4,-0.76l2.2,-0.87l0.17,-0.61l-1.26,-1.67l0.36,-1.7l3.38,0.28l0.43,-0.33l0.37,-1.99l-1.79,-2.49l-3.11,-0.72l-0.38,-0.59l0.79,-1.35l-0.04,-0.46l-0.82,-0.97l-0.61,0.01l-0.68,0.84l-0.1,-2.34l-1.23,-1.88l0.85,-3.47l1.77,-2.68l1.85,0.26l2.17,-0.22ZM406.26,132.86l-1.01,1.77l-1.57,-0.59l-1.16,0.01l0.37,-1.54l-0.39,-1.39l1.45,-0.1l2.3,1.84Z", "name": "United Kingdom"}, "GA": {"path": "M453.24,279.52l-0.08,0.98l0.7,1.29l2.36,0.24l-0.98,2.63l1.18,1.79l0.25,1.78l-0.29,1.52l-0.6,0.93l-1.84,-0.09l-1.23,-1.11l-0.66,0.23l-0.15,0.84l-1.42,0.26l-1.02,0.7l-0.11,0.52l0.77,1.35l-1.34,0.97l-3.94,-4.3l-1.44,-2.45l0.06,-0.6l0.54,-0.81l1.05,-3.46l4.17,-0.07l0.4,-0.4l-0.02,-2.66l2.39,0.21l1.25,-0.27Z", "name": "Gabon"}, "GN": {"path": "M391.8,254.11l0.47,0.8l1.11,-0.32l0.98,0.7l1.07,0.2l2.26,-1.22l0.64,0.44l1.13,1.56l-0.48,1.4l0.8,0.3l-0.08,0.48l0.46,0.68l-0.35,1.36l1.05,2.61l-1.0,0.69l0.03,1.41l-0.72,-0.06l-1.08,1.0l-0.24,-0.27l0.07,-1.11l-1.05,-1.54l-1.79,0.21l-0.35,-2.01l-1.6,-2.18l-2.0,-0.0l-1.31,0.54l-1.95,2.18l-1.86,-2.19l-1.2,-0.78l-0.3,-1.11l-0.8,-0.85l0.65,-0.72l0.81,-0.03l1.64,-0.8l0.23,-1.87l2.67,0.64l0.89,-0.3l1.21,0.15Z", "name": "Guinea"}, "GM": {"path": "M379.31,251.39l0.1,-0.35l2.43,-0.07l0.74,-0.61l0.51,-0.03l0.77,0.49l-1.03,-0.3l-1.87,0.9l-1.65,-0.04ZM384.03,250.91l0.91,0.05l0.75,-0.24l-0.59,0.31l-1.08,-0.13Z", "name": "Gambia"}, "GL": {"path": "M353.02,1.2l14.69,4.67l-3.68,1.89l-22.97,0.86l-0.36,0.27l0.12,0.43l1.55,1.18l8.79,-0.66l7.48,2.07l4.86,-1.77l1.66,1.73l-2.53,3.19l-0.01,0.48l0.46,0.15l6.35,-2.2l12.06,-2.31l7.24,1.13l1.09,1.99l-9.79,4.01l-1.44,1.32l-7.87,0.98l-0.35,0.41l0.38,0.38l5.07,0.24l-2.53,3.58l-2.07,3.81l0.08,6.05l2.57,3.11l-3.22,0.2l-4.12,1.66l-0.05,0.72l4.45,2.65l0.51,3.75l-2.3,0.4l-0.25,0.64l2.79,3.69l-4.82,0.31l-0.36,0.29l0.16,0.44l2.62,1.8l-0.59,1.22l-3.3,0.7l-3.45,0.01l-0.29,0.68l3.03,3.12l0.02,1.34l-4.4,-1.73l-1.72,1.35l0.15,0.66l3.31,1.15l3.13,2.71l0.81,3.16l-3.85,0.75l-4.89,-4.26l-0.47,-0.03l-0.17,0.44l0.79,2.86l-2.71,2.21l-0.13,0.44l0.37,0.27l8.73,0.34l-12.32,6.64l-7.24,1.48l-2.94,0.08l-2.69,1.75l-3.43,4.41l-5.24,2.84l-1.73,0.18l-7.12,2.1l-2.15,2.52l-0.13,2.99l-1.19,2.45l-4.01,3.09l-0.14,0.44l0.97,2.9l-2.28,6.48l-3.1,0.2l-3.83,-3.07l-4.86,-0.02l-2.25,-1.93l-1.7,-3.79l-4.3,-4.84l-1.21,-2.49l-0.44,-3.8l-3.32,-3.63l0.84,-2.86l-1.56,-1.7l2.28,-4.6l3.83,-1.74l1.03,-1.96l0.52,-3.47l-0.59,-0.41l-4.17,2.21l-2.07,0.58l-2.72,-1.28l-0.15,-2.71l0.85,-2.09l2.01,-0.06l5.06,1.2l0.46,-0.23l-0.14,-0.49l-6.54,-4.47l-2.67,0.55l-1.58,-0.86l2.56,-4.01l-0.03,-0.48l-1.5,-1.74l-4.98,-8.5l-3.13,-1.96l0.03,-1.88l-0.24,-0.37l-6.85,-3.02l-5.36,-0.38l-12.7,0.58l-2.78,-1.57l-3.66,-2.77l5.73,-1.45l5.0,-0.28l0.38,-0.38l-0.35,-0.41l-10.67,-1.38l-5.3,-2.06l0.25,-1.54l18.41,-5.26l1.22,-2.27l-0.25,-0.55l-6.14,-1.86l1.68,-1.77l8.55,-4.03l3.59,-0.63l0.3,-0.54l-0.88,-2.27l5.47,-1.47l7.65,-0.95l7.55,-0.05l3.04,1.85l6.48,-3.27l5.81,2.22l3.56,0.5l5.16,1.94l0.5,-0.21l-0.17,-0.52l-5.71,-3.13l0.28,-2.13l8.12,-3.6l8.7,0.28l3.35,-2.34l8.71,-0.6l19.93,0.8Z", "name": "Greenland"}, "KW": {"path": "M540.81,207.91l0.37,0.86l-0.17,0.76l0.6,1.53l-0.95,0.04l-0.82,-1.28l-1.57,-0.18l1.31,-1.88l1.22,0.17Z", "name": "Kuwait"}, "GH": {"path": "M420.53,257.51l-0.01,0.72l0.96,1.2l0.24,3.73l0.59,0.95l-0.51,2.1l0.19,1.41l1.02,2.21l-6.97,2.84l-1.8,-0.57l0.04,-0.89l-1.02,-2.04l0.61,-2.65l1.07,-2.32l-0.96,-6.47l5.01,0.07l0.94,-0.39l0.61,0.11Z", "name": "Ghana"}, "OM": {"path": "M568.09,230.93l-0.91,1.67l-1.22,0.04l-0.6,0.76l-0.41,1.51l0.27,1.58l-1.16,0.05l-1.56,0.97l-0.76,1.74l-1.62,0.05l-0.98,0.65l-0.17,1.15l-0.89,0.52l-1.49,-0.18l-2.4,0.94l-2.47,-5.4l7.35,-2.71l1.67,-5.23l-1.12,-2.09l0.05,-0.83l0.67,-1.0l0.07,-1.05l0.9,-0.42l-0.05,-2.07l0.7,-0.01l1.0,1.62l1.51,1.08l3.3,0.84l1.73,2.29l0.81,0.37l-1.23,2.35l-0.99,0.79Z", "name": "Oman"}, "_1": {"path": "M531.15,258.94l1.51,0.12l5.13,-0.95l5.3,-1.48l-0.01,4.4l-2.67,3.39l-1.85,0.01l-8.04,-2.94l-2.55,-3.17l1.12,-1.71l2.04,2.34Z", "name": "Somaliland"}, "_0": {"path": "M472.77,172.64l-1.08,-1.29l0.96,-0.77l0.29,-0.83l1.98,1.64l-0.36,0.67l-1.79,0.58Z", "name": "Kosovo"}, "JO": {"path": "M518.64,201.38l-5.14,1.56l-0.19,0.65l2.16,2.39l-0.89,1.14l-1.71,0.34l-1.71,1.8l-2.34,-0.37l1.21,-4.32l0.56,-4.07l2.8,0.94l4.46,-2.71l0.79,2.66Z", "name": "Jordan"}, "HR": {"path": "M455.59,162.84l1.09,0.07l-0.82,0.94l-0.27,-1.01ZM456.96,162.92l0.62,-0.41l1.73,0.45l0.42,-0.4l-0.01,-0.59l0.86,-0.52l0.2,-1.05l1.63,-0.68l2.57,1.68l2.07,0.6l0.87,-0.31l1.05,1.57l-0.52,0.63l-1.05,-0.56l-1.68,0.04l-2.1,-0.5l-1.29,0.06l-0.57,0.49l-0.59,-0.47l-0.62,0.16l-0.46,1.7l1.79,2.42l2.79,2.75l-1.18,-0.87l-2.21,-0.87l-1.67,-1.78l0.13,-0.63l-1.05,-1.19l-0.32,-1.27l-1.42,-0.43Z", "name": "Croatia"}, "HT": {"path": "M237.05,238.38l-1.16,0.43l-0.91,-0.55l0.05,-0.2l2.02,0.31ZM237.53,238.43l1.06,0.12l-0.05,0.01l-1.01,-0.12ZM239.25,238.45l0.79,-0.51l0.06,-0.62l-1.02,-1.0l0.02,-0.82l-0.3,-0.4l-0.93,-0.32l3.16,0.45l0.02,1.84l-0.48,0.34l-0.08,0.58l0.54,0.72l-1.78,-0.26Z", "name": "Haiti"}, "HU": {"path": "M462.08,157.89l0.65,-1.59l-0.09,-0.44l0.64,-0.0l0.39,-0.34l0.1,-0.69l1.75,0.87l2.32,-0.37l0.43,-0.66l3.49,-0.78l0.69,-0.78l0.57,-0.14l2.57,0.93l0.67,-0.23l1.03,0.65l0.08,0.37l-1.42,0.71l-2.59,4.14l-1.8,0.53l-1.68,-0.1l-2.74,1.23l-1.85,-0.54l-2.54,-1.66l-0.66,-1.1Z", "name": "Hungary"}, "HN": {"path": "M199.6,249.52l-1.7,-1.21l0.06,-0.94l3.04,-2.14l2.37,0.28l1.27,-0.09l1.1,-0.52l1.3,0.28l1.14,-0.25l1.38,0.37l2.23,1.37l-2.36,0.93l-1.23,-0.39l-0.88,1.3l-1.28,0.99l-0.98,-0.22l-0.42,0.52l-0.96,0.05l-0.36,0.41l0.04,0.88l-0.52,0.6l-0.3,0.04l-0.3,-0.55l-0.66,-0.31l0.11,-0.67l-0.48,-0.65l-0.87,-0.26l-0.73,0.2Z", "name": "Honduras"}, "PR": {"path": "M256.17,238.73l-0.26,0.27l-2.83,0.05l-0.07,-0.55l1.95,-0.1l1.22,0.33Z", "name": "Puerto Rico"}, "PS": {"path": "M509.21,203.07l0.1,-0.06l-0.02,0.03l-0.09,0.03ZM509.36,202.91l-0.02,-0.63l-0.33,-0.16l0.31,-1.09l0.24,0.1l-0.2,1.78Z", "name": "Palestine"}, "PT": {"path": "M401.84,187.38l-0.64,0.47l-1.13,-0.35l-0.91,0.17l0.28,-1.78l-0.24,-1.78l-1.25,-0.56l-0.45,-0.84l0.17,-1.66l1.01,-1.18l0.69,-2.92l-0.04,-1.39l-0.59,-1.9l1.3,-0.85l0.84,1.35l3.1,-0.3l0.46,0.99l-1.05,0.94l-0.03,2.16l-0.41,0.57l-0.08,1.1l-0.79,0.18l-0.26,0.59l0.91,1.6l-0.63,1.75l0.76,1.09l-1.1,1.52l0.07,1.05Z", "name": "Portugal"}, "PY": {"path": "M274.9,336.12l0.74,1.52l-0.16,3.45l0.32,0.41l2.64,0.5l1.11,-0.47l1.4,0.59l0.36,0.6l0.53,3.42l1.27,0.4l0.98,-0.38l0.51,0.27l-0.0,1.18l-1.21,5.32l-2.09,1.9l-1.8,0.4l-4.71,-0.98l2.2,-3.63l-0.32,-1.5l-2.78,-1.28l-3.03,-1.94l-2.07,-0.44l-4.34,-4.06l0.91,-2.9l0.08,-1.42l1.07,-2.04l4.13,-0.72l2.18,0.03l2.05,1.17l0.03,0.59Z", "name": "Paraguay"}, "PA": {"path": "M213.8,263.68l0.26,-1.52l-0.36,-0.26l-0.01,-0.49l0.44,-0.1l0.93,1.4l1.26,0.03l0.77,0.49l1.38,-0.23l2.51,-1.11l0.86,-0.72l3.45,0.85l1.4,1.18l0.41,1.74l-0.21,0.34l-0.53,-0.12l-0.47,0.29l-0.16,0.6l-0.68,-1.28l0.45,-0.49l-0.19,-0.66l-0.47,-0.13l-0.54,-0.84l-1.5,-0.75l-1.1,0.16l-0.75,0.99l-1.62,0.84l-0.18,0.96l0.85,0.97l-0.58,0.45l-0.69,0.08l-0.34,-1.18l-1.27,0.03l-0.71,-1.05l-2.59,-0.46Z", "name": "Panama"}, "PG": {"path": "M808.58,298.86l2.54,2.56l-0.13,0.26l-0.33,0.12l-0.87,-0.78l-1.22,-2.16ZM801.41,293.04l0.5,0.29l0.26,0.27l-0.49,-0.35l-0.27,-0.21ZM803.17,294.58l0.59,0.5l0.08,1.06l-0.29,-0.91l-0.38,-0.65ZM796.68,298.41l0.52,0.75l1.43,-0.19l2.27,-1.81l-0.01,-1.43l1.12,0.16l-0.04,1.1l-0.7,1.28l-1.12,0.18l-0.62,0.79l-2.46,1.11l-1.17,-0.0l-3.08,-1.25l3.41,0.0l0.45,-0.68ZM789.15,303.55l2.31,1.8l1.59,2.61l1.34,0.13l-0.06,0.66l0.31,0.43l1.06,0.24l0.06,0.65l2.25,1.05l-1.22,0.13l-0.72,-0.63l-4.56,-0.65l-3.22,-2.87l-1.49,-2.34l-3.27,-1.1l-2.38,0.72l-1.59,0.86l-0.2,0.42l0.27,1.55l-1.55,0.68l-1.36,-0.4l-2.21,-0.09l-0.08,-15.41l8.39,2.93l2.95,2.4l0.6,1.64l4.02,1.49l0.31,0.68l-1.76,0.21l-0.33,0.52l0.55,1.68Z", "name": "Papua New Guinea"}, "PE": {"path": "M244.96,295.21l-1.26,-0.07l-0.57,0.42l-1.93,0.45l-2.98,1.75l-0.36,1.36l-0.58,0.8l0.12,1.37l-1.24,0.59l-0.22,1.22l-0.62,0.84l1.04,2.27l1.28,1.44l-0.41,0.84l0.32,0.57l1.48,0.13l1.16,1.37l2.21,0.07l1.63,-1.08l-0.13,3.02l0.3,0.4l1.14,0.29l1.31,-0.34l1.9,3.59l-0.48,0.85l-0.17,3.85l-0.94,1.59l0.35,0.75l-0.47,1.07l0.98,1.97l-2.1,3.82l-0.98,0.5l-2.17,-1.28l-0.39,-1.16l-4.95,-2.58l-4.46,-2.79l-1.84,-1.51l-0.91,-1.84l0.3,-0.96l-2.11,-3.33l-4.82,-9.68l-1.04,-1.2l-0.87,-1.94l-3.4,-2.48l0.58,-1.18l-1.13,-2.23l0.66,-1.49l1.45,-1.15l-0.6,0.98l0.07,0.92l0.47,0.36l1.74,0.03l0.97,1.17l0.54,0.07l1.42,-1.03l0.6,-1.84l1.42,-2.02l3.04,-1.04l2.73,-2.62l0.86,-1.74l-0.1,-1.87l1.44,1.02l0.9,1.25l1.06,0.59l1.7,2.73l1.86,0.31l1.45,-0.61l0.96,0.39l1.36,-0.19l1.45,0.89l-1.4,2.21l0.31,0.61l0.59,0.05l0.47,0.5Z", "name": "Peru"}, "PK": {"path": "M615.09,192.34l-1.83,1.81l-2.6,0.39l-3.73,-0.68l-1.58,1.33l-0.09,0.42l1.77,4.39l1.7,1.23l-1.69,1.27l-0.12,2.14l-2.33,2.64l-1.6,2.8l-2.46,2.67l-3.03,-0.07l-2.76,2.83l0.05,0.6l1.5,1.11l0.26,1.9l1.44,1.5l0.37,1.68l-5.01,-0.01l-1.78,1.7l-1.42,-0.52l-0.76,-1.87l-2.27,-2.15l-11.61,0.86l0.71,-2.34l3.43,-1.32l0.25,-0.44l-0.21,-1.24l-1.2,-0.65l-0.28,-2.46l-2.29,-1.14l-1.28,-1.94l2.82,0.94l2.62,-0.38l1.42,0.33l0.76,-0.56l1.71,0.19l3.25,-1.14l0.27,-0.36l0.08,-2.19l1.18,-1.32l1.68,0.0l0.58,-0.82l1.6,-0.3l1.19,0.16l0.98,-0.78l0.02,-1.88l0.93,-1.47l1.48,-0.66l0.19,-0.55l-0.66,-1.25l2.04,-0.11l0.69,-1.01l-0.02,-1.16l1.11,-1.06l-0.17,-1.78l-0.49,-1.03l1.15,-0.98l5.42,-0.91l2.6,-0.82l1.6,1.16l0.97,2.34l3.45,0.97Z", "name": "Pakistan"}, "PH": {"path": "M737.01,263.84l0.39,2.97l-0.44,1.18l-0.55,-1.53l-0.67,-0.14l-1.17,1.28l0.65,2.09l-0.42,0.69l-2.48,-1.23l-0.57,-1.49l0.65,-1.03l-0.1,-0.54l-1.59,-1.19l-0.56,0.08l-0.65,0.87l-1.23,0.0l-1.58,0.97l0.83,-1.8l2.56,-1.42l0.65,0.84l0.45,0.13l1.9,-0.69l0.56,-1.11l1.5,-0.06l0.38,-0.43l-0.09,-1.19l1.21,0.71l0.36,2.02ZM733.59,256.58l0.05,0.75l0.08,0.26l-0.8,-0.42l-0.18,-0.71l0.85,0.12ZM734.08,256.1l-0.12,-1.12l-1.0,-1.27l1.36,0.03l0.53,0.73l0.51,2.04l-1.27,-0.4ZM733.76,257.68l0.38,0.98l-0.32,0.15l-0.07,-1.13ZM724.65,238.43l1.46,0.7l0.72,-0.31l-0.32,1.17l0.79,1.71l-0.57,1.84l-1.53,1.04l-0.39,2.25l0.56,2.04l1.63,0.57l1.16,-0.27l2.71,1.23l-0.19,1.08l0.76,0.84l-0.08,0.36l-1.4,-0.9l-0.88,-1.27l-0.66,0.0l-0.38,0.55l-1.6,-1.31l-2.15,0.36l-0.87,-0.39l0.07,-0.61l0.66,-0.55l-0.01,-0.62l-0.75,-0.59l-0.72,0.44l-0.74,-0.87l-0.39,-2.49l0.32,0.27l0.66,-0.28l0.26,-3.97l0.7,-2.02l1.14,0.0ZM731.03,258.87l-0.88,0.85l-1.19,1.94l-1.05,-1.19l0.93,-1.1l0.32,-1.47l0.52,-0.06l-0.27,1.15l0.22,0.45l0.49,-0.12l1.0,-1.32l-0.08,0.85ZM726.83,255.78l0.83,0.38l1.17,-0.0l-0.02,0.48l-2.0,1.4l0.03,-2.26ZM724.81,252.09l-0.38,1.27l-1.42,-1.95l1.2,0.05l0.6,0.63ZM716.55,261.82l1.1,-0.95l0.03,-0.03l-0.28,0.36l-0.85,0.61ZM719.22,259.06l0.04,-0.06l0.8,-1.53l0.16,0.75l-1.0,0.84Z", "name": "Philippines"}, "PL": {"path": "M468.44,149.42l-1.11,-1.54l-1.86,-0.33l-0.48,-1.05l-1.72,-0.37l-0.65,0.69l-0.72,-0.36l0.11,-0.61l-0.33,-0.46l-1.75,-0.27l-1.04,-0.93l-0.94,-1.94l0.16,-1.22l-0.62,-1.8l-0.78,-1.07l0.57,-1.04l-0.48,-1.43l1.41,-0.83l6.91,-2.71l2.14,0.5l0.52,0.91l5.51,0.44l4.55,-0.05l1.07,0.31l0.48,0.84l0.15,1.58l0.65,1.2l-0.01,0.99l-1.27,0.58l-0.19,0.54l0.73,1.48l0.08,1.55l1.2,2.76l-0.17,0.58l-1.23,0.44l-2.27,2.72l0.18,0.95l-1.97,-1.03l-1.98,0.4l-1.36,-0.28l-1.24,0.58l-1.07,-0.97l-1.16,0.24Z", "name": "Poland"}, "-99": {"path": "M504.91,192.87l0.34,0.01l0.27,-0.07l-0.29,0.26l-0.31,-0.2Z", "name": "N. Cyprus"}, "ZM": {"path": "M481.47,313.3l0.39,0.31l2.52,0.14l0.99,1.17l2.01,0.35l1.4,-0.64l0.69,1.17l1.78,0.33l1.84,2.35l2.23,0.18l0.4,-0.43l-0.21,-2.74l-0.62,-0.3l-0.48,0.32l-1.98,-1.17l0.72,-5.29l-0.51,-1.18l0.57,-1.3l3.68,-0.62l0.26,0.63l1.21,0.63l0.9,-0.22l2.16,0.67l1.33,0.71l1.07,1.02l0.56,1.87l-0.88,2.7l0.43,2.09l-0.73,0.87l-0.76,2.37l0.59,0.68l-6.6,1.83l-0.29,0.44l0.19,1.45l-1.68,0.35l-1.43,1.02l-0.38,0.87l-0.87,0.26l-3.48,3.69l-4.16,-0.53l-1.52,-1.0l-1.77,-0.13l-1.83,0.52l-3.04,-3.4l0.11,-7.59l4.82,0.03l0.39,-0.49l-0.18,-0.76l0.33,-0.83l-0.4,-1.36l0.24,-1.05Z", "name": "Zambia"}, "EH": {"path": "M384.42,230.28l0.25,-0.79l1.06,-1.29l0.8,-3.51l3.38,-2.78l0.7,-1.81l0.06,4.84l-1.98,0.2l-0.94,1.59l0.39,3.56l-3.7,-0.01ZM392.01,218.1l0.7,-1.8l1.77,-0.24l2.09,0.34l0.95,-0.62l1.28,-0.07l-0.0,2.51l-6.79,-0.12Z", "name": "W. Sahara"}, "EE": {"path": "M485.71,115.04l2.64,0.6l2.56,0.11l-1.6,1.91l0.61,3.54l-0.81,0.87l-1.78,-0.01l-3.22,-1.76l-1.8,0.45l0.21,-1.53l-0.58,-0.41l-0.69,0.34l-1.26,-1.03l-0.17,-1.63l2.83,-0.92l3.05,-0.52Z", "name": "Estonia"}, "EG": {"path": "M492.06,205.03l1.46,0.42l2.95,-1.64l2.04,-0.21l1.53,0.3l0.59,1.19l0.69,0.04l0.41,-0.64l1.81,0.58l1.95,0.16l1.04,-0.51l1.42,4.08l-2.03,4.54l-1.66,-1.77l-1.76,-3.85l-0.64,-0.12l-0.36,0.67l1.04,2.88l3.44,6.95l1.78,3.04l2.03,2.65l-0.36,0.53l0.23,2.01l2.7,2.19l-28.41,0.0l0.0,-18.96l-0.73,-2.2l0.59,-1.56l-0.32,-1.26l0.68,-0.99l3.06,-0.04l4.82,1.52Z", "name": "Egypt"}, "ZA": {"path": "M467.14,373.21l-0.13,-1.96l-0.68,-1.56l0.7,-0.68l-0.13,-2.33l-4.56,-8.19l0.77,-0.86l0.6,0.45l0.69,1.31l2.83,0.72l1.5,-0.26l2.24,-1.39l0.19,-9.55l1.35,2.3l-0.21,1.5l0.61,1.2l0.4,0.19l1.79,-0.27l2.6,-2.07l0.69,-1.32l0.96,-0.48l2.19,1.04l2.04,0.13l1.77,-0.65l0.85,-2.12l1.38,-0.33l1.59,-2.76l2.15,-1.89l3.41,-1.87l2.0,0.45l1.02,-0.28l0.99,0.2l1.75,5.29l-0.38,3.25l-0.81,-0.23l-1.0,0.46l-0.87,1.68l-0.05,1.16l1.97,1.84l1.47,-0.29l0.69,-1.18l1.09,0.01l-0.76,3.69l-0.58,1.09l-2.2,1.79l-3.17,4.76l-2.8,2.83l-3.57,2.88l-2.53,1.05l-1.22,0.14l-0.51,0.7l-1.18,-0.32l-1.39,0.5l-2.59,-0.52l-1.61,0.33l-1.18,-0.11l-2.55,1.1l-2.1,0.44l-1.6,1.07l-0.85,0.05l-0.93,-0.89l-0.93,-0.15l-0.97,-1.13l-0.25,0.05ZM491.45,364.19l0.62,-0.93l1.48,-0.59l1.18,-2.19l-0.07,-0.49l-1.99,-1.69l-1.66,0.56l-1.43,1.14l-1.34,1.73l0.02,0.51l1.88,2.11l1.31,-0.16Z", "name": "South Africa"}, "EC": {"path": "M231.86,285.53l0.29,1.59l-0.69,1.45l-2.61,2.51l-3.13,1.11l-1.53,2.18l-0.49,1.68l-1.0,0.73l-1.02,-1.11l-1.78,-0.16l0.67,-1.15l-0.24,-0.86l1.25,-2.13l-0.54,-1.09l-0.67,-0.08l-0.72,0.87l-0.87,-0.64l0.35,-0.69l-0.36,-1.96l0.81,-0.51l0.45,-1.51l0.92,-1.57l-0.07,-0.97l2.65,-1.33l2.75,1.35l0.77,1.05l2.12,0.35l0.76,-0.32l1.96,1.21Z", "name": "Ecuador"}, "AL": {"path": "M470.32,171.8l0.74,0.03l0.92,0.89l-0.17,1.95l0.36,1.28l1.01,0.82l-1.82,2.83l-0.19,-0.61l-1.25,-0.89l-0.18,-1.2l0.53,-2.82l-0.54,-1.47l0.6,-0.83Z", "name": "Albania"}, "AO": {"path": "M461.55,300.03l1.26,3.15l1.94,2.36l2.47,-0.53l1.25,0.32l0.44,-0.18l0.93,-1.92l1.31,-0.08l0.41,-0.44l0.47,-0.0l-0.1,0.41l0.39,0.49l2.65,-0.02l0.03,1.19l0.48,1.01l-0.34,1.52l0.18,1.55l0.83,1.04l-0.13,2.85l0.54,0.39l3.96,-0.41l-0.1,1.79l0.39,1.05l-0.24,1.43l-4.7,-0.03l-0.4,0.39l-0.12,8.13l2.92,3.49l-3.83,0.88l-5.89,-0.36l-1.88,-1.24l-10.47,0.22l-1.3,-1.01l-1.85,-0.16l-2.4,0.77l-0.15,-1.06l0.33,-2.16l1.0,-3.45l1.35,-3.2l2.24,-2.8l0.33,-2.06l-0.13,-1.53l-0.8,-1.08l-1.21,-2.87l0.87,-1.62l-1.27,-4.12l-1.17,-1.53l2.47,-0.63l7.03,0.03ZM451.71,298.87l-0.47,-1.25l1.25,-1.11l0.32,0.3l-0.99,1.03l-0.12,1.03Z", "name": "Angola"}, "KZ": {"path": "M552.8,172.89l0.46,-1.27l-0.48,-1.05l-2.96,-1.19l-1.06,-2.58l-1.37,-0.87l-0.03,-0.3l1.95,0.23l0.45,-0.38l0.08,-1.96l1.75,-0.41l2.1,0.45l0.48,-0.33l0.45,-3.04l-0.45,-2.09l-0.41,-0.31l-2.42,0.15l-2.36,-0.73l-2.87,1.37l-2.17,0.61l-0.85,-0.34l0.13,-1.61l-1.6,-2.12l-2.02,-0.08l-1.78,-1.82l1.29,-2.18l-0.57,-0.95l1.62,-2.91l2.21,1.63l0.63,-0.27l0.29,-2.22l4.92,-3.43l3.71,-0.08l8.4,3.6l2.92,-1.36l3.77,-0.06l3.11,1.66l0.51,-0.11l0.6,-0.81l3.31,0.13l0.39,-0.25l0.63,-1.57l-0.17,-0.5l-3.5,-1.98l1.87,-1.27l-0.13,-1.03l1.98,-0.72l0.18,-0.62l-1.59,-2.06l0.81,-0.82l9.23,-1.18l1.33,-0.88l6.18,-1.26l2.26,-1.42l4.08,0.68l0.73,3.33l0.51,0.3l2.48,-0.8l2.79,1.02l-0.17,1.56l0.43,0.44l2.55,-0.24l4.89,-2.53l0.03,0.32l3.15,2.61l5.56,8.47l0.65,0.02l1.12,-1.46l3.15,1.74l3.76,-0.78l1.15,0.49l1.14,1.8l1.84,0.76l0.99,1.29l3.35,-0.25l1.02,1.52l-1.6,1.81l-1.93,0.28l-0.34,0.38l-0.11,3.05l-1.13,1.16l-4.75,-1.0l-0.46,0.27l-1.76,5.47l-1.1,0.59l-4.91,1.23l-0.27,0.54l2.1,4.97l-1.37,0.63l-0.23,0.41l0.13,1.13l-0.88,-0.25l-1.42,-1.13l-7.89,-0.4l-0.92,0.31l-3.73,-1.22l-1.42,0.63l-0.53,1.66l-3.72,-0.94l-1.85,0.43l-0.76,1.4l-4.65,2.62l-1.13,2.08l-0.44,0.01l-0.92,-1.4l-2.87,-0.09l-0.45,-2.14l-0.38,-0.32l-0.8,-0.01l0.0,-2.96l-3.0,-2.22l-7.31,0.58l-2.35,-2.68l-6.71,-3.69l-6.45,1.83l-0.29,0.39l0.1,10.85l-0.7,0.08l-1.62,-2.17l-1.83,-0.96l-3.11,0.59l-0.64,0.51Z", "name": "Kazakhstan"}, "ET": {"path": "M516.04,247.79l1.1,0.84l1.63,-0.45l0.68,0.47l1.63,0.03l2.01,0.94l1.73,1.66l1.64,2.07l-1.52,2.04l0.16,1.72l0.39,0.38l2.05,0.0l-0.36,1.03l2.86,3.58l8.32,3.08l1.31,0.02l-6.32,6.75l-3.1,0.11l-2.36,1.77l-1.47,0.04l-0.86,0.79l-1.38,-0.0l-1.32,-0.81l-2.29,1.05l-0.76,0.98l-3.29,-0.41l-3.07,-2.07l-1.8,-0.07l-0.62,-0.6l0.0,-1.24l-0.28,-0.38l-1.15,-0.37l-1.4,-2.59l-1.19,-0.68l-0.47,-1.0l-1.27,-1.23l-1.16,-0.22l0.43,-0.72l1.45,-0.28l0.41,-0.95l-0.03,-2.21l0.68,-2.44l1.05,-0.63l1.43,-3.06l1.57,-1.37l1.02,-2.51l0.35,-1.88l2.52,0.46l0.44,-0.24l0.58,-1.43Z", "name": "Ethiopia"}, "ZW": {"path": "M498.91,341.09l-1.11,-0.22l-0.92,0.28l-2.09,-0.44l-1.5,-1.11l-1.89,-0.43l-0.62,-1.4l-0.01,-0.84l-0.3,-0.38l-0.97,-0.25l-2.71,-2.74l-1.92,-3.32l3.83,0.45l3.73,-3.82l1.08,-0.44l0.26,-0.77l1.25,-0.9l1.41,-0.26l0.5,0.89l1.99,-0.05l1.72,1.17l1.11,0.17l1.05,0.66l0.01,2.99l-0.59,3.76l0.38,0.86l-0.23,1.23l-0.39,0.35l-0.63,1.81l-2.43,2.75Z", "name": "Zimbabwe"}, "ES": {"path": "M416.0,169.21l1.07,1.17l4.61,1.38l1.06,-0.57l2.6,1.26l2.71,-0.3l0.09,1.12l-2.14,1.8l-3.11,0.61l-0.31,0.31l-0.2,0.89l-1.54,1.69l-0.97,2.4l0.84,1.74l-1.32,1.27l-0.48,1.68l-1.88,0.65l-1.66,2.07l-5.36,-0.01l-1.79,1.08l-0.89,0.98l-0.88,-0.17l-0.79,-0.82l-0.68,-1.59l-2.37,-0.63l-0.11,-0.5l1.21,-1.82l-0.77,-1.13l0.61,-1.68l-0.76,-1.62l0.87,-0.49l0.09,-1.25l0.42,-0.6l0.03,-2.11l0.99,-0.69l0.13,-0.5l-1.03,-1.73l-1.46,-0.11l-0.61,0.38l-1.06,0.0l-0.52,-1.23l-0.53,-0.21l-1.32,0.67l-0.01,-1.49l-0.75,-0.96l3.03,-1.88l2.99,0.53l3.32,-0.02l2.63,0.51l6.01,-0.06Z", "name": "Spain"}, "ER": {"path": "M520.38,246.23l3.42,2.43l3.5,3.77l0.84,0.54l-0.95,-0.01l-3.51,-3.89l-2.33,-1.15l-1.73,-0.07l-0.91,-0.51l-1.26,0.51l-1.34,-1.02l-0.61,0.17l-0.66,1.61l-2.35,-0.43l-0.17,-0.67l1.29,-5.29l0.61,-0.61l1.95,-0.53l0.87,-1.01l1.17,2.41l0.68,2.33l1.49,1.43Z", "name": "Eritrea"}, "ME": {"path": "M468.91,172.53l-1.22,-1.02l0.47,-1.81l0.89,-0.72l2.26,1.51l-0.5,0.57l-0.75,-0.27l-1.14,1.73Z", "name": "Montenegro"}, "MD": {"path": "M488.41,153.73l1.4,-0.27l1.72,0.93l1.07,0.15l0.85,0.65l-0.14,0.84l0.96,0.85l1.12,2.47l-1.15,-0.07l-0.66,-0.41l-0.52,0.25l-0.09,0.86l-1.08,1.89l-0.27,-0.86l0.25,-1.34l-0.16,-1.6l-3.29,-4.34Z", "name": "Moldova"}, "MG": {"path": "M545.91,319.14l0.4,3.03l0.62,1.21l-0.21,1.02l-0.57,-0.8l-0.69,-0.01l-0.47,0.76l0.41,2.12l-0.18,0.87l-0.73,0.78l-0.15,2.14l-4.71,15.2l-1.06,2.88l-3.92,1.64l-3.12,-1.49l-0.6,-1.21l-0.19,-2.4l-0.86,-2.05l-0.21,-1.77l0.38,-1.62l1.21,-0.75l0.01,-0.76l1.19,-2.04l0.23,-1.66l-1.06,-2.99l-0.19,-2.21l0.81,-1.33l0.32,-1.46l4.63,-1.22l3.44,-3.0l0.85,-1.4l-0.08,-0.7l0.78,-0.04l1.38,-1.77l0.13,-1.64l0.45,-0.61l1.16,1.69l0.59,1.6Z", "name": "Madagascar"}, "MA": {"path": "M378.78,230.02l0.06,-0.59l0.92,-0.73l0.82,-1.37l-0.09,-1.04l0.79,-1.7l1.31,-1.58l0.96,-0.59l0.66,-1.55l0.09,-1.47l0.81,-1.48l1.72,-1.07l1.55,-2.69l1.16,-0.96l2.44,-0.39l1.94,-1.82l1.31,-0.78l2.09,-2.28l-0.51,-3.65l1.24,-3.7l1.5,-1.75l4.46,-2.57l2.37,-4.47l1.44,0.01l1.68,1.21l2.32,-0.19l3.47,0.65l0.8,1.54l0.16,1.71l0.86,2.96l0.56,0.59l-0.26,0.61l-3.05,0.44l-1.26,1.05l-1.33,0.22l-0.33,0.37l-0.09,1.78l-2.68,1.0l-1.07,1.42l-4.47,1.13l-4.04,2.01l-0.54,4.64l-1.15,0.06l-0.92,0.61l-1.96,-0.35l-2.42,0.54l-0.74,1.9l-0.86,0.4l-1.14,3.26l-3.53,3.01l-0.8,3.55l-0.96,1.1l-0.29,0.82l-4.95,0.18Z", "name": "Morocco"}, "UZ": {"path": "M598.64,172.75l-1.63,1.52l0.06,0.64l1.85,1.12l1.97,-0.64l2.21,1.17l-2.52,1.68l-2.59,-0.22l-0.18,-0.41l0.46,-1.23l-0.45,-0.53l-3.35,0.69l-2.1,3.51l-1.87,-0.12l-1.03,1.51l0.22,0.55l1.64,0.62l0.46,1.83l-1.19,2.49l-2.66,-0.53l0.05,-1.36l-0.26,-0.39l-3.3,-1.23l-2.56,-1.4l-4.4,-3.34l-1.34,-3.14l-1.08,-0.6l-2.58,0.13l-0.69,-0.44l-0.47,-2.52l-3.37,-1.6l-0.43,0.05l-2.07,1.72l-2.1,1.01l-0.21,0.47l0.28,1.01l-1.91,0.03l-0.09,-10.5l5.99,-1.7l6.19,3.54l2.71,2.84l7.05,-0.67l2.71,2.01l-0.17,2.81l0.39,0.42l0.9,0.02l0.44,2.14l0.38,0.32l2.94,0.09l0.95,1.42l1.28,-0.24l1.05,-2.04l4.43,-2.5Z", "name": "Uzbekistan"}, "MM": {"path": "M673.9,230.21l-1.97,1.57l-0.57,0.96l-1.4,0.6l-1.36,1.05l-1.99,0.36l-1.08,2.66l-0.91,0.4l-0.19,0.55l1.21,2.27l2.52,3.43l-0.79,1.91l-0.74,0.41l-0.17,0.52l0.65,1.37l1.61,1.95l0.25,2.58l0.9,2.13l-1.92,3.57l0.68,-2.25l-0.81,-1.74l0.19,-2.65l-1.05,-1.53l-1.24,-6.17l-1.12,-2.26l-0.6,-0.13l-4.34,3.02l-2.39,-0.65l0.77,-2.84l-0.52,-2.61l-1.91,-2.96l0.25,-0.75l-0.29,-0.51l-1.33,-0.3l-1.61,-1.93l-0.1,-1.3l0.82,-0.24l0.04,-1.64l1.02,-0.52l0.21,-0.45l-0.23,-0.95l0.54,-0.96l0.08,-2.22l1.46,0.45l0.47,-0.2l1.12,-2.19l0.16,-1.35l1.33,-2.16l-0.0,-1.52l2.89,-1.66l1.63,0.44l0.5,-0.44l-0.17,-1.4l0.64,-0.36l0.08,-1.04l0.77,-0.11l0.71,1.35l1.06,0.69l-0.03,3.86l-2.38,2.37l-0.3,3.15l0.46,0.43l2.28,-0.38l0.51,2.08l1.47,0.67l-0.6,1.8l0.19,0.48l2.97,1.48l1.64,-0.55l0.02,0.32Z", "name": "Myanmar"}, "ML": {"path": "M392.61,254.08l-0.19,-2.37l-0.99,-0.87l-0.44,-1.3l-0.09,-1.28l0.81,-0.58l0.35,-1.24l2.37,0.65l1.31,-0.47l0.86,0.15l0.66,-0.56l9.83,-0.04l0.38,-0.28l0.56,-1.8l-0.44,-0.65l-2.35,-21.95l3.27,-0.04l16.7,11.38l0.74,1.31l2.5,1.09l0.02,1.38l0.44,0.39l2.34,-0.21l0.01,5.38l-1.28,1.61l-0.26,1.49l-5.31,0.57l-1.07,0.92l-2.9,0.1l-0.86,-0.48l-1.38,0.36l-2.4,1.08l-0.6,0.87l-1.85,1.09l-0.43,0.7l-0.79,0.39l-1.44,-0.21l-0.81,0.84l-0.34,1.64l-1.91,2.02l-0.06,1.03l-0.67,1.22l0.13,1.16l-0.97,0.39l-0.23,-0.64l-0.52,-0.24l-1.35,0.4l-0.34,0.55l-2.69,-0.28l-0.37,-0.35l-0.02,-0.9l-0.65,-0.35l0.45,-0.64l-0.03,-0.53l-2.12,-2.44l-0.76,-0.01l-2.0,1.16l-0.78,-0.15l-0.8,-0.67l-1.21,0.23Z", "name": "Mali"}, "MN": {"path": "M676.61,146.48l3.81,1.68l5.67,-1.0l2.37,0.41l2.34,1.5l1.79,1.75l2.29,-0.03l3.12,0.52l2.47,-0.81l3.41,-0.59l3.53,-2.21l1.25,0.29l1.53,1.13l2.27,-0.21l-2.66,5.01l0.64,1.68l0.47,0.21l1.32,-0.38l2.38,0.48l2.02,-1.11l1.76,0.89l2.06,2.02l-0.13,0.53l-1.72,-0.29l-3.77,0.46l-1.88,0.99l-1.76,1.99l-3.71,1.17l-2.45,1.6l-3.83,-0.87l-0.41,0.17l-1.31,1.99l1.04,2.24l-1.52,0.9l-1.74,1.57l-2.79,1.02l-3.78,0.13l-4.05,1.05l-2.77,1.52l-1.16,-0.85l-2.94,0.0l-3.62,-1.79l-2.58,-0.49l-3.4,0.41l-5.12,-0.67l-2.63,0.06l-1.31,-1.6l-1.4,-3.0l-1.48,-0.33l-3.13,-1.94l-6.16,-0.93l-0.71,-1.06l0.86,-3.82l-1.93,-2.71l-3.5,-1.18l-1.95,-1.58l-0.5,-1.72l2.34,-0.52l4.75,-2.8l3.62,-1.47l2.18,0.97l2.46,0.05l1.81,1.53l2.46,0.12l3.95,0.71l2.43,-2.28l0.08,-0.48l-0.9,-1.72l2.24,-2.98l2.62,1.27l4.94,1.17l0.43,2.24Z", "name": "Mongolia"}, "MK": {"path": "M472.8,173.98l0.49,-0.71l3.57,-0.71l1.0,0.77l0.13,1.45l-0.65,0.53l-1.15,-0.05l-1.12,0.67l-1.39,0.22l-0.79,-0.55l-0.29,-1.03l0.19,-0.6Z", "name": "Macedonia"}, "MW": {"path": "M505.5,309.31l0.85,1.95l0.15,2.86l-0.69,1.65l0.71,1.8l0.06,1.28l0.49,0.64l0.07,1.06l0.4,0.55l0.8,-0.23l0.55,0.61l0.69,-0.21l0.34,0.6l0.19,2.94l-1.04,0.62l-0.54,1.25l-1.11,-1.08l-0.16,-1.56l0.51,-1.31l-0.32,-1.3l-0.99,-0.65l-0.82,0.12l-2.36,-1.64l0.63,-1.96l0.82,-1.18l-0.46,-2.01l0.9,-2.86l-0.94,-2.51l0.96,0.18l0.29,0.4Z", "name": "Malawi"}, "MR": {"path": "M407.36,220.66l-2.58,0.03l-0.39,0.44l2.42,22.56l0.36,0.43l-0.39,1.24l-9.75,0.04l-0.56,0.53l-0.91,-0.11l-1.27,0.45l-1.61,-0.66l-0.97,0.03l-0.36,0.29l-0.38,1.35l-0.42,0.23l-2.93,-3.4l-2.96,-1.52l-1.62,-0.03l-1.27,0.54l-1.12,-0.2l-0.65,0.4l-0.08,-0.49l0.68,-1.29l0.31,-2.43l-0.57,-3.91l0.23,-1.21l-0.69,-1.5l-1.15,-1.02l0.25,-0.39l9.58,0.02l0.4,-0.45l-0.46,-3.68l0.47,-1.04l2.12,-0.21l0.36,-0.4l-0.08,-6.4l7.81,0.13l0.41,-0.4l0.01,-3.31l7.76,5.35Z", "name": "Mauritania"}, "UG": {"path": "M498.55,276.32l0.7,-0.46l1.65,0.5l1.96,-0.57l1.7,0.01l1.45,-0.98l0.91,1.33l1.33,3.95l-2.57,4.03l-1.46,-0.4l-2.54,0.91l-1.37,1.61l-0.01,0.81l-2.42,-0.01l-2.26,1.01l-0.17,-1.59l0.58,-1.04l0.14,-1.94l1.37,-2.28l1.78,-1.58l-0.17,-0.65l-0.72,-0.24l0.13,-2.43Z", "name": "Uganda"}, "MY": {"path": "M717.47,273.46l-1.39,0.65l-2.12,-0.41l-2.88,-0.0l-0.38,0.28l-0.84,2.75l-0.99,0.96l-1.21,3.29l-1.73,0.45l-2.45,-0.68l-1.39,0.31l-1.33,1.15l-1.59,-0.14l-1.41,0.44l-1.44,-1.19l-0.18,-0.73l1.34,0.53l1.93,-0.47l0.75,-2.22l4.02,-1.03l2.75,-3.21l0.82,0.94l0.64,-0.05l0.4,-0.65l0.96,0.06l0.42,-0.36l0.24,-2.68l1.81,-1.64l1.21,-1.86l0.63,-0.01l1.07,1.05l0.34,1.28l3.44,1.35l-0.06,0.35l-1.37,0.1l-0.35,0.54l0.32,0.88ZM673.68,269.59l0.17,1.09l0.47,0.33l1.65,-0.3l0.87,-0.94l1.61,1.52l0.98,1.56l-0.12,2.81l0.41,2.29l0.95,0.9l0.88,2.44l-1.27,0.12l-5.1,-3.67l-0.34,-1.29l-1.37,-1.59l-0.33,-1.97l-0.88,-1.4l0.25,-1.68l-0.46,-1.05l1.63,0.84Z", "name": "Malaysia"}, "MX": {"path": "M133.12,200.41l0.2,0.47l9.63,3.33l6.96,-0.02l0.4,-0.4l0.0,-0.74l3.77,0.0l3.55,2.93l1.39,2.83l1.52,1.04l2.08,0.82l0.47,-0.14l1.46,-2.0l1.73,-0.04l1.59,0.98l2.05,3.35l1.47,1.56l1.26,3.14l2.18,1.02l2.26,0.58l-1.18,3.72l-0.42,5.04l1.79,4.89l1.62,1.89l0.61,1.52l1.2,1.42l2.55,0.66l1.37,1.1l7.54,-1.89l1.86,-1.3l1.14,-4.3l4.1,-1.21l3.57,-0.11l0.32,0.3l-0.06,0.94l-1.26,1.45l-0.67,1.71l0.38,0.7l-0.72,2.27l-0.49,-0.3l-1.0,0.08l-1.0,1.39l-0.47,-0.11l-0.53,0.47l-4.26,-0.02l-0.4,0.4l-0.0,1.06l-1.1,0.26l0.1,0.44l1.82,1.44l0.56,0.91l-3.19,0.21l-1.21,2.09l0.24,0.72l-0.2,0.44l-2.24,-2.18l-1.45,-0.93l-2.22,-0.69l-1.52,0.22l-3.07,1.16l-10.55,-3.85l-2.86,-1.96l-3.78,-0.92l-1.08,-1.19l-2.62,-1.43l-1.18,-1.54l-0.38,-0.81l0.66,-0.63l-0.18,-0.53l0.52,-0.76l0.01,-0.91l-2.0,-3.82l-2.21,-2.63l-2.53,-2.09l-1.19,-1.62l-2.2,-1.17l-0.3,-0.43l0.34,-1.48l-0.21,-0.45l-1.23,-0.6l-1.36,-1.2l-0.59,-1.78l-1.54,-0.47l-2.44,-2.55l-0.16,-0.9l-1.33,-2.03l-0.84,-1.99l-0.16,-1.33l-1.81,-1.1l-0.97,0.05l-1.31,-0.7l-0.57,0.22l-0.4,1.12l0.72,3.77l3.51,3.89l0.28,0.78l0.53,0.26l0.41,1.43l1.33,1.73l1.58,1.41l0.8,2.39l1.43,2.41l0.13,1.32l0.37,0.36l1.04,0.08l1.67,2.28l-0.85,0.76l-0.66,-1.51l-1.68,-1.54l-2.91,-1.87l0.06,-1.82l-0.54,-1.68l-2.91,-2.03l-0.55,0.09l-1.95,-1.1l-0.88,-0.94l0.68,-0.08l0.93,-1.01l0.08,-1.78l-1.93,-1.94l-1.46,-0.77l-3.75,-7.56l4.88,-0.42Z", "name": "Mexico"}, "VU": {"path": "M839.04,322.8l0.22,1.14l-0.44,0.03l-0.2,-1.45l0.42,0.27Z", "name": "Vanuatu"}, "FR": {"path": "M444.48,172.62l-0.64,1.78l-0.58,-0.31l-0.49,-1.72l0.4,-0.89l1.0,-0.72l0.3,1.85ZM429.64,147.1l1.78,1.58l1.46,-0.13l2.1,1.42l1.35,0.27l1.23,0.83l3.04,0.5l-1.03,1.85l-0.3,2.12l-0.41,0.32l-0.95,-0.24l-0.5,0.43l0.06,0.61l-1.81,1.92l-0.04,1.42l0.55,0.38l0.88,-0.36l0.61,0.97l-0.03,1.0l0.57,0.91l-0.75,1.09l0.65,2.39l1.27,0.57l-0.18,0.82l-2.01,1.53l-4.77,-0.8l-3.82,1.0l-0.53,1.85l-2.49,0.34l-2.71,-1.31l-1.16,0.57l-4.31,-1.29l-0.72,-0.86l1.19,-1.78l0.39,-6.45l-2.58,-3.3l-1.9,-1.66l-3.72,-1.23l-0.19,-1.72l2.81,-0.61l4.12,0.81l0.47,-0.48l-0.6,-2.77l1.94,0.95l5.83,-2.54l0.92,-2.74l1.6,-0.49l0.24,0.78l1.36,0.33l1.05,1.19ZM289.01,278.39l-0.81,0.8l-0.78,0.12l-0.5,-0.66l-0.56,-0.1l-0.91,0.6l-0.46,-0.22l1.09,-2.96l-0.96,-1.77l-0.17,-1.49l1.07,-1.77l2.32,0.75l2.51,2.01l0.3,0.74l-2.14,3.96Z", "name": "France"}, "FI": {"path": "M492.17,76.39l-0.23,3.5l3.52,2.63l-2.08,2.88l-0.02,0.44l2.8,4.56l-1.59,3.31l2.16,3.24l-0.94,2.39l0.14,0.47l3.44,2.51l-0.77,1.62l-7.52,6.95l-4.5,0.31l-4.38,1.37l-3.8,0.74l-1.44,-1.96l-2.17,-1.11l0.5,-3.66l-1.16,-3.33l1.09,-2.08l2.21,-2.42l5.67,-4.32l1.64,-0.83l0.21,-0.42l-0.46,-2.02l-3.38,-1.89l-0.75,-1.43l-0.22,-6.74l-6.79,-4.8l0.8,-0.62l2.54,2.12l3.46,-0.12l3.0,0.96l2.51,-2.11l1.17,-3.08l3.55,-1.38l2.76,1.53l-0.95,2.79Z", "name": "Finland"}, "FJ": {"path": "M871.53,326.34l-2.8,1.05l-0.08,-0.23l2.97,-1.21l-0.1,0.39ZM867.58,329.25l0.43,0.37l-0.27,0.88l-1.24,0.28l-1.04,-0.24l-0.14,-0.66l0.63,-0.58l0.92,0.26l0.7,-0.31Z", "name": "Fiji"}, "FK": {"path": "M274.36,425.85l1.44,1.08l-0.47,0.73l-3.0,0.89l-0.96,-1.0l-0.52,-0.05l-1.83,1.29l-0.73,-0.88l2.46,-1.64l1.93,0.76l1.67,-1.19Z", "name": "Falkland Is."}, "NI": {"path": "M202.33,252.67l0.81,-0.18l1.03,-1.02l-0.04,-0.88l0.68,-0.0l0.63,-0.54l0.97,0.22l1.53,-1.26l0.58,-0.99l1.17,0.34l2.41,-0.94l0.13,1.32l-0.81,1.94l0.1,2.74l-0.36,0.37l-0.11,1.75l-0.47,0.81l0.18,1.14l-1.73,-0.85l-0.71,0.27l-1.47,-0.6l-0.52,0.16l-4.01,-3.81Z", "name": "Nicaragua"}, "NL": {"path": "M430.31,143.39l0.6,-0.5l2.13,-4.8l3.2,-1.33l1.74,0.08l0.33,0.8l-0.59,2.92l-0.5,0.99l-1.26,0.0l-0.4,0.45l0.33,2.7l-2.2,-1.78l-2.62,0.58l-0.75,-0.11Z", "name": "Netherlands"}, "NO": {"path": "M491.44,67.41l6.8,2.89l-2.29,0.86l-0.15,0.65l2.33,2.38l-4.98,1.79l0.84,-2.45l-0.18,-0.48l-3.55,-1.8l-3.89,1.52l-1.42,3.38l-2.12,1.72l-2.64,-1.0l-3.11,0.21l-2.66,-2.22l-0.5,-0.01l-1.41,1.1l-1.44,0.17l-0.35,0.35l-0.32,2.47l-4.32,-0.64l-0.44,0.29l-0.58,2.11l-2.45,0.2l-4.15,7.68l-3.88,5.76l0.78,1.62l-0.64,1.16l-2.24,-0.06l-0.38,0.24l-1.66,3.89l0.15,5.17l1.57,2.04l-0.78,4.16l-2.02,2.48l-0.85,1.63l-1.3,-1.75l-0.58,-0.07l-4.87,4.19l-3.1,0.79l-3.16,-1.7l-0.85,-3.77l-0.77,-8.55l2.14,-2.31l6.55,-3.27l5.02,-4.17l10.63,-13.84l10.98,-8.7l5.35,-1.91l4.34,0.12l3.69,-3.64l4.49,0.19l4.37,-0.89ZM484.55,20.04l4.26,1.75l-3.1,2.55l-7.1,0.65l-7.08,-0.9l-0.37,-1.31l-0.37,-0.29l-3.44,-0.1l-2.08,-2.0l6.87,-1.44l3.9,1.31l2.39,-1.64l6.13,1.4ZM481.69,33.93l-4.45,1.74l-3.54,-0.99l1.12,-0.9l0.05,-0.58l-1.06,-1.22l4.22,-0.89l1.09,1.97l2.57,0.87ZM466.44,24.04l7.43,3.77l-5.41,1.86l-1.58,4.08l-2.26,1.2l-1.12,4.11l-2.61,0.18l-4.79,-2.86l1.84,-1.54l-0.1,-0.68l-3.69,-1.53l-4.77,-4.51l-1.73,-3.89l6.11,-1.82l1.54,1.92l3.57,-0.08l1.2,-1.96l3.32,-0.18l3.05,1.92Z", "name": "Norway"}, "NA": {"path": "M474.26,330.66l-0.97,0.04l-0.38,0.4l-0.07,8.9l-2.09,0.08l-0.39,0.4l-0.0,17.42l-1.98,1.23l-1.17,0.17l-2.44,-0.66l-0.48,-1.13l-0.99,-0.74l-0.54,0.05l-0.9,1.01l-1.53,-1.68l-0.93,-1.88l-1.99,-8.56l-0.06,-3.12l-0.33,-1.52l-2.3,-3.34l-1.91,-4.83l-1.96,-2.43l-0.12,-1.57l2.33,-0.79l1.43,0.07l1.81,1.13l10.23,-0.25l1.84,1.23l5.87,0.35ZM474.66,330.64l6.51,-1.6l1.9,0.39l-1.69,0.4l-1.31,0.83l-1.12,-0.94l-4.29,0.92Z", "name": "Namibia"}, "NC": {"path": "M838.78,341.24l-0.33,0.22l-2.9,-1.75l-3.26,-3.37l1.65,0.83l4.85,4.07Z", "name": "New Caledonia"}, "NE": {"path": "M454.75,226.53l1.33,1.37l0.48,0.07l1.27,-0.7l0.53,3.52l0.94,0.83l0.17,0.92l0.81,0.69l-0.44,0.95l-0.96,5.26l-0.13,3.22l-3.04,2.31l-1.22,3.57l1.02,1.24l-0.0,1.46l0.39,0.4l1.13,0.04l-0.9,1.25l-1.47,-2.42l-0.86,-0.29l-2.09,1.37l-1.74,-0.67l-1.45,-0.17l-0.85,0.35l-1.36,-0.07l-1.64,1.09l-1.06,0.05l-2.94,-1.28l-1.44,0.59l-1.01,-0.03l-0.97,-0.94l-2.7,-0.98l-2.69,0.3l-0.87,0.64l-0.47,1.6l-0.75,1.16l-0.12,1.53l-1.57,-1.1l-1.31,0.24l0.03,-0.81l-0.32,-0.41l-2.59,-0.52l-0.15,-1.16l-1.35,-1.6l-0.29,-1.0l0.13,-0.84l1.29,-0.08l1.08,-0.92l3.31,-0.22l2.22,-0.41l0.32,-0.34l0.2,-1.47l1.39,-1.88l-0.01,-5.66l3.36,-1.12l7.24,-5.12l8.42,-4.92l3.69,1.06Z", "name": "Niger"}, "NG": {"path": "M456.32,253.89l0.64,0.65l-0.28,1.04l-2.11,2.01l-2.03,5.18l-1.37,1.16l-1.15,3.18l-1.33,0.66l-1.46,-0.97l-1.21,0.16l-1.38,1.36l-0.91,0.24l-1.79,4.06l-2.33,0.81l-1.11,-0.07l-0.86,0.5l-1.71,-0.05l-1.19,-1.39l-0.89,-1.89l-1.77,-1.66l-3.95,-0.08l0.07,-5.21l0.42,-1.43l1.95,-2.3l-0.14,-0.91l0.43,-1.18l-0.53,-1.41l0.25,-2.92l0.72,-1.07l0.32,-1.34l0.46,-0.39l2.47,-0.28l2.34,0.89l1.15,1.02l1.28,0.04l1.22,-0.58l3.03,1.27l1.49,-0.14l1.36,-1.0l1.33,0.07l0.82,-0.35l3.45,0.8l1.82,-1.32l1.84,2.67l0.66,0.16Z", "name": "Nigeria"}, "NZ": {"path": "M857.8,379.65l1.86,3.12l0.44,0.18l0.3,-0.38l0.03,-1.23l0.38,0.27l0.57,2.31l2.02,0.94l1.81,0.27l1.57,-1.06l0.7,0.18l-1.15,3.59l-1.98,0.11l-0.74,1.2l0.2,1.11l-2.42,3.98l-1.49,0.92l-1.04,-0.85l1.21,-2.05l-0.81,-2.01l-2.63,-1.25l0.04,-0.57l1.82,-1.19l0.43,-2.34l-0.16,-2.03l-0.95,-1.82l-0.06,-0.72l-3.11,-3.64l-0.79,-1.52l1.56,1.45l1.76,0.66l0.65,2.34ZM853.83,393.59l0.57,1.24l0.59,0.16l1.42,-0.97l0.46,0.79l0.0,1.03l-2.47,3.48l-1.26,1.2l-0.06,0.5l0.55,0.87l-1.41,0.07l-2.33,1.38l-2.03,5.02l-3.02,2.16l-2.06,-0.06l-1.71,-1.04l-2.47,-0.2l-0.27,-0.73l1.22,-2.1l3.05,-2.94l1.62,-0.59l4.02,-2.82l1.57,-1.67l1.07,-2.16l0.88,-0.7l0.48,-1.75l1.24,-0.97l0.35,0.79Z", "name": "New Zealand"}, "NP": {"path": "M641.14,213.62l0.01,3.19l-1.74,0.04l-4.8,-0.86l-1.58,-1.39l-3.37,-0.34l-7.65,-3.7l0.8,-2.09l2.33,-1.7l1.77,0.75l2.49,1.76l1.38,0.41l0.99,1.35l1.9,0.52l1.99,1.17l5.49,0.9Z", "name": "Nepal"}, "CI": {"path": "M407.4,259.27l0.86,0.42l0.56,0.9l1.13,0.53l1.19,-0.61l0.97,-0.08l1.42,0.54l0.6,3.24l-1.03,2.08l-0.65,2.84l1.06,2.33l-0.06,0.53l-2.54,-0.47l-1.66,0.03l-3.06,0.46l-4.11,1.6l0.32,-3.06l-1.18,-1.31l-1.32,-0.66l0.42,-0.85l-0.2,-1.4l0.5,-0.67l0.01,-1.59l0.84,-0.32l0.26,-0.5l-1.15,-3.01l0.12,-0.5l0.51,-0.25l0.66,0.31l1.93,0.02l0.67,-0.71l0.71,-0.14l0.25,0.69l0.57,0.22l1.4,-0.61Z", "name": "C\u00f4te d'Ivoire"}, "CH": {"path": "M444.62,156.35l-0.29,0.87l0.18,0.53l1.13,0.58l1.0,0.1l-0.1,0.65l-0.79,0.38l-1.72,-0.37l-0.45,0.23l-0.45,1.04l-0.75,0.06l-0.84,-0.4l-1.32,1.0l-0.96,0.12l-0.88,-0.55l-0.81,-1.3l-0.49,-0.16l-0.63,0.26l0.02,-0.65l1.71,-1.66l0.1,-0.56l0.93,0.08l0.58,-0.46l1.99,0.02l0.66,-0.61l2.19,0.79Z", "name": "Switzerland"}, "CO": {"path": "M242.07,254.93l-1.7,0.59l-0.59,1.18l-1.7,1.69l-0.38,1.93l-0.67,1.43l0.31,0.57l1.03,0.13l0.25,0.9l0.57,0.64l-0.04,2.34l1.64,1.42l3.16,-0.24l1.26,0.28l1.67,2.06l0.41,0.13l4.09,-0.39l0.45,0.22l-0.92,1.95l-0.2,1.8l0.52,1.83l0.75,1.05l-1.12,1.1l0.07,0.63l0.84,0.51l0.74,1.29l-0.39,-0.45l-0.59,-0.01l-0.71,0.74l-4.71,-0.05l-0.4,0.41l0.03,1.57l0.33,0.39l1.11,0.2l-1.68,0.4l-0.29,0.38l-0.01,1.82l1.16,1.14l0.34,1.25l-1.05,7.05l-1.04,-0.87l1.26,-1.99l-0.13,-0.56l-2.18,-1.23l-1.38,0.2l-1.14,-0.38l-1.27,0.61l-1.55,-0.26l-1.38,-2.46l-1.23,-0.75l-0.85,-1.2l-1.67,-1.19l-0.86,0.13l-2.11,-1.32l-1.01,0.31l-1.8,-0.29l-0.52,-0.91l-3.09,-1.68l0.77,-0.52l-0.1,-1.12l0.41,-0.64l1.34,-0.32l2.0,-2.88l-0.11,-0.57l-0.66,-0.43l0.39,-1.38l-0.52,-2.1l0.49,-0.83l-0.4,-2.13l-0.97,-1.35l0.17,-0.66l0.86,-0.08l0.47,-0.75l-0.46,-1.63l1.41,-0.07l1.8,-1.69l0.93,-0.24l0.3,-0.38l0.45,-2.76l1.22,-1.0l1.44,-0.04l0.45,-0.5l1.91,0.12l2.93,-1.84l1.15,-1.14l0.91,0.46l-0.25,0.45Z", "name": "Colombia"}, "CN": {"path": "M740.23,148.97l4.57,1.3l2.8,2.17l0.98,2.9l0.38,0.27l3.8,0.0l2.32,-1.28l3.29,-0.75l-0.96,2.09l-1.02,1.28l-0.85,3.4l-1.52,2.73l-2.76,-0.5l-2.4,1.13l-0.21,0.45l0.64,2.57l-0.32,3.2l-0.94,0.06l-0.37,0.89l-0.91,-1.01l-0.64,0.07l-0.92,1.57l-3.73,1.25l-0.26,0.48l0.26,1.06l-1.5,-0.08l-1.09,-0.86l-0.56,0.06l-1.67,2.06l-2.7,1.56l-2.03,1.88l-3.4,0.83l-1.93,1.4l-1.15,0.34l0.33,-0.7l-0.41,-0.89l1.79,-1.79l0.02,-0.54l-1.32,-1.56l-0.48,-0.1l-2.24,1.09l-2.83,2.06l-1.51,1.83l-2.28,0.13l-1.55,1.49l-0.04,0.5l1.32,1.97l2.0,0.58l0.31,1.35l1.98,0.84l3.0,-1.96l2.0,1.02l1.49,0.11l0.22,0.83l-3.37,0.86l-1.12,1.48l-2.5,1.52l-1.29,1.99l0.14,0.56l2.57,1.48l0.97,2.7l3.17,4.63l-0.03,1.66l-1.35,0.65l-0.2,0.51l0.6,1.47l1.4,0.91l-0.89,3.82l-1.43,0.38l-3.85,6.44l-2.27,3.11l-6.78,4.57l-2.73,0.29l-1.45,1.04l-0.62,-0.61l-0.55,-0.01l-1.36,1.25l-3.39,1.27l-2.61,0.4l-1.1,2.79l-0.81,0.09l-0.49,-1.42l0.5,-0.85l-0.25,-0.59l-3.36,-0.84l-1.3,0.4l-2.31,-0.62l-0.94,-0.84l0.33,-1.28l-0.3,-0.49l-2.19,-0.46l-1.13,-0.93l-0.47,-0.02l-2.06,1.36l-4.29,0.28l-2.76,1.05l-0.28,0.43l0.32,2.53l-0.59,-0.03l-0.19,-1.34l-0.55,-0.34l-1.68,0.7l-2.46,-1.23l0.62,-1.87l-0.26,-0.51l-1.37,-0.44l-0.54,-2.22l-0.45,-0.3l-2.13,0.35l0.24,-2.48l2.39,-2.4l0.03,-4.31l-1.19,-0.92l-0.78,-1.49l-0.41,-0.21l-1.41,0.19l-1.98,-0.3l0.46,-1.07l-1.17,-1.7l-0.55,-0.11l-1.63,1.05l-2.25,-0.57l-2.89,1.73l-2.25,1.98l-1.75,0.29l-1.17,-0.71l-3.31,-0.65l-1.48,0.79l-1.04,1.27l-0.12,-1.17l-0.54,-0.34l-1.44,0.54l-5.55,-0.86l-1.98,-1.16l-1.89,-0.54l-0.99,-1.35l-1.34,-0.37l-2.55,-1.79l-2.01,-0.84l-1.21,0.56l-5.57,-3.45l-0.53,-2.31l1.19,0.25l0.48,-0.37l0.08,-1.42l-0.98,-1.56l0.15,-2.44l-2.69,-3.32l-4.12,-1.23l-0.67,-2.0l-1.92,-1.48l-0.38,-0.7l-0.51,-3.01l-1.52,-0.66l-0.7,0.13l-0.48,-2.05l0.55,-0.51l-0.09,-0.82l2.03,-1.19l1.6,-0.54l2.56,0.38l0.42,-0.22l0.85,-1.7l3.0,-0.33l1.1,-1.26l4.05,-1.77l0.39,-0.91l-0.17,-1.44l1.45,-0.67l0.2,-0.52l-2.07,-4.9l4.51,-1.12l1.37,-0.73l1.89,-5.51l4.98,0.86l1.51,-1.7l0.11,-2.87l1.99,-0.38l1.83,-2.06l0.49,-0.13l0.68,2.08l2.23,1.77l3.44,1.16l1.55,2.29l-0.92,3.49l0.96,1.67l6.54,1.13l2.95,1.87l1.47,0.35l1.06,2.62l1.53,1.91l3.05,0.08l5.14,0.67l3.37,-0.41l2.36,0.43l3.65,1.8l3.06,0.04l1.45,0.88l2.87,-1.59l3.95,-1.02l3.83,-0.14l3.06,-1.14l1.77,-1.6l1.72,-1.01l0.17,-0.49l-1.1,-2.05l1.02,-1.54l4.02,0.8l2.45,-1.61l3.76,-1.19l1.96,-2.13l1.63,-0.83l3.51,-0.4l1.92,0.34l0.46,-0.3l0.17,-1.5l-2.27,-2.22l-2.11,-1.09l-2.18,1.11l-2.32,-0.47l-1.29,0.32l-0.4,-0.82l2.73,-5.16l3.02,1.06l3.53,-2.06l0.18,-1.68l2.16,-3.35l1.49,-1.35l-0.03,-1.85l-1.07,-0.85l1.54,-1.26l2.98,-0.59l3.23,-0.09l3.64,0.99l2.04,1.16l3.29,6.71l0.92,3.19ZM696.92,237.31l-1.87,1.08l-1.63,-0.64l-0.06,-1.79l1.03,-0.98l2.58,-0.69l1.16,0.05l0.3,0.54l-0.98,1.06l-0.53,1.37Z", "name": "China"}, "CM": {"path": "M457.92,257.49l1.05,1.91l-1.4,0.16l-1.05,-0.23l-0.45,0.22l-0.54,1.19l0.08,0.45l1.48,1.47l1.05,0.45l1.01,2.46l-1.52,2.99l-0.68,0.68l-0.13,3.69l2.38,3.84l1.09,0.8l0.24,2.48l-3.67,-1.14l-11.27,-0.13l0.23,-1.79l-0.98,-1.66l-1.19,-0.54l-0.44,-0.97l-0.6,-0.42l1.71,-4.27l0.75,-0.13l1.38,-1.36l0.65,-0.03l1.71,0.99l1.93,-1.12l1.14,-3.18l1.38,-1.17l2.0,-5.14l2.17,-2.13l0.3,-1.64l-0.86,-0.88l0.03,-0.33l0.94,1.28l0.07,3.22Z", "name": "Cameroon"}, "CL": {"path": "M246.5,429.18l-3.14,1.83l-0.57,3.16l-0.64,0.05l-2.68,-1.06l-2.82,-2.33l-3.04,-1.89l-0.69,-1.85l0.63,-2.14l-1.21,-2.11l-0.31,-5.37l1.01,-2.91l2.57,-2.38l-0.18,-0.68l-3.16,-0.77l2.05,-2.47l0.77,-4.65l2.32,0.9l0.54,-0.29l1.31,-6.31l-0.22,-0.44l-1.68,-0.8l-0.56,0.28l-0.7,3.36l-0.81,-0.22l1.56,-9.41l1.15,-2.24l-0.71,-2.82l-0.18,-2.84l1.01,-0.33l3.26,-9.14l1.07,-4.22l-0.56,-4.21l0.74,-2.34l-0.29,-3.27l1.46,-3.34l2.04,-16.59l-0.66,-7.76l1.03,-0.53l0.54,-0.9l0.79,1.14l0.32,1.78l1.25,1.16l-0.69,2.55l1.33,2.9l0.97,3.59l0.46,0.29l1.5,-0.3l0.11,0.23l-0.76,2.44l-2.57,1.23l-0.23,0.37l0.08,4.33l-0.46,0.77l0.56,1.21l-1.58,1.51l-1.68,2.62l-0.89,2.47l0.2,2.7l-1.48,2.73l1.12,5.09l0.64,0.61l-0.01,2.29l-1.38,2.68l0.01,2.4l-1.89,2.04l0.02,2.75l0.69,2.57l-1.43,1.13l-1.26,5.68l0.39,3.51l-0.97,0.89l0.58,3.5l1.02,1.14l-0.65,1.02l0.15,0.57l1.0,0.53l0.16,0.69l-1.03,0.85l0.26,1.75l-0.89,4.03l-1.31,2.66l0.24,1.75l-0.71,1.83l-1.99,1.7l0.3,3.67l0.88,1.19l1.58,0.01l0.01,2.21l1.04,1.95l5.98,0.63ZM248.69,430.79l0.0,7.33l0.4,0.4l3.52,0.05l-0.44,0.75l-1.94,0.98l-2.49,-0.37l-1.88,-1.06l-2.55,-0.49l-5.59,-3.71l-2.38,-2.63l4.1,2.48l3.32,1.23l0.45,-0.12l1.29,-1.57l0.83,-2.32l2.05,-1.24l1.31,0.29Z", "name": "Chile"}, "CA": {"path": "M280.06,145.6l-1.67,2.88l0.07,0.49l0.5,0.04l1.46,-0.98l1.0,0.42l-0.56,0.72l0.17,0.62l2.22,0.89l1.35,-0.71l1.95,0.78l-0.66,2.01l0.5,0.51l1.32,-0.42l0.98,3.17l-0.91,2.41l-0.8,0.08l-1.23,-0.45l0.47,-2.25l-0.89,-0.83l-0.48,0.06l-2.78,2.63l-0.34,-0.02l1.02,-0.85l-0.14,-0.69l-2.4,-0.77l-7.4,0.08l-0.17,-0.41l1.3,-0.94l0.02,-0.64l-0.73,-0.58l1.85,-1.74l2.57,-5.16l1.47,-1.79l1.99,-1.05l0.46,0.06l-1.53,2.45ZM68.32,74.16l4.13,0.95l4.02,2.14l2.61,0.4l2.47,-1.89l2.88,-1.31l3.85,0.48l3.71,-1.94l3.82,-1.04l1.56,1.68l0.49,0.08l1.87,-1.04l0.65,-1.98l1.24,0.35l4.16,3.94l0.54,0.01l2.75,-2.49l0.26,2.59l0.49,0.35l3.08,-0.73l1.04,-1.27l2.73,0.23l3.83,1.86l5.86,1.61l3.47,0.75l2.44,-0.26l2.73,1.78l-2.98,1.81l-0.19,0.41l0.31,0.32l4.53,0.92l6.87,-0.5l2.0,-0.69l2.49,2.39l0.53,0.02l2.72,-2.16l-0.02,-0.64l-2.16,-1.54l1.15,-1.06l4.83,-0.61l1.84,0.95l2.48,2.31l3.01,-0.23l4.55,1.92l3.85,-0.67l3.61,0.1l0.41,-0.44l-0.25,-2.36l1.79,-0.61l3.49,1.32l-0.01,3.77l0.31,0.39l0.45,-0.22l1.48,-3.16l1.74,0.1l0.41,-0.3l1.13,-4.37l-2.78,-3.11l-2.8,-1.74l0.19,-4.64l2.71,-3.07l2.98,0.67l2.41,1.95l3.19,4.8l-1.99,1.97l0.21,0.68l4.33,0.84l-0.01,4.15l0.25,0.37l0.44,-0.09l3.07,-3.15l2.54,2.39l-0.61,3.33l2.42,2.88l0.61,0.0l2.61,-3.08l1.88,-3.82l0.17,-4.58l6.72,0.94l3.13,2.04l0.13,1.82l-1.76,2.19l-0.01,0.49l1.66,2.16l-0.26,1.71l-4.68,2.8l-3.28,0.61l-2.47,-1.2l-0.55,0.23l-0.73,2.04l-2.38,3.43l-0.74,1.77l-2.74,2.57l-3.44,0.25l-2.21,1.78l-0.28,2.53l-2.82,0.55l-3.12,3.22l-2.72,4.31l-1.03,3.17l-0.14,4.31l0.33,0.41l3.44,0.57l2.24,5.95l0.45,0.23l3.4,-0.69l4.52,1.51l2.43,1.31l1.91,1.73l3.1,0.96l2.62,1.46l6.6,0.54l-0.35,2.74l0.81,3.53l1.81,3.78l3.83,3.3l0.45,0.04l2.1,-1.28l1.37,-3.69l-1.31,-5.38l-1.45,-1.58l3.57,-1.47l2.84,-2.46l1.52,-2.8l-0.25,-2.55l-1.7,-3.07l-2.85,-2.61l2.8,-3.95l-1.08,-3.37l-0.79,-5.67l1.36,-0.7l6.76,1.41l2.12,-0.96l5.12,3.36l1.05,1.61l4.08,0.26l-0.06,2.87l0.83,4.7l0.3,0.32l2.16,0.54l1.73,2.06l0.5,0.09l3.63,-2.03l2.52,-4.19l1.26,-1.32l7.6,11.72l-0.92,2.04l0.16,0.51l3.3,1.97l2.22,1.98l4.1,0.98l1.43,0.99l0.95,2.79l2.1,0.68l0.84,1.08l0.17,3.45l-3.37,2.26l-4.22,1.24l-3.06,2.63l-4.06,0.51l-5.35,-0.69l-6.39,0.2l-2.3,2.41l-3.26,1.51l-6.47,7.15l-0.06,0.48l0.44,0.19l2.13,-0.52l4.17,-4.24l5.12,-2.62l3.52,-0.3l1.69,1.21l-2.12,2.21l0.81,3.47l1.02,2.61l3.47,1.6l4.14,-0.45l2.15,-2.8l0.26,1.48l1.14,0.8l-2.56,1.69l-5.5,1.82l-2.54,1.27l-2.74,2.15l-1.4,-0.16l-0.07,-2.01l4.14,-2.44l0.18,-0.45l-0.39,-0.29l-6.63,0.45l-1.39,-1.49l-0.14,-4.43l-1.11,-0.91l-1.82,0.39l-0.66,-0.66l-0.6,0.03l-1.91,2.39l-0.82,2.52l-0.8,1.27l-1.67,0.56l-0.46,0.76l-8.31,0.07l-1.21,0.62l-2.35,1.97l-0.71,-0.14l-1.37,0.96l-1.12,-0.48l-4.74,1.26l-0.9,1.17l0.21,0.62l1.73,0.3l-1.81,0.31l-1.85,0.81l-2.11,-0.13l-2.95,1.78l-0.69,-0.09l1.39,-2.1l1.73,-1.21l0.1,-2.29l1.16,-1.99l0.49,0.53l2.03,0.42l1.2,-1.16l0.02,-0.47l-2.66,-3.51l-2.28,-0.61l-5.64,-0.71l-0.4,-0.57l-0.79,0.13l0.2,-0.41l-0.22,-0.55l-0.68,-0.26l0.19,-1.26l-0.78,-0.73l0.31,-0.64l-0.29,-0.57l-2.6,-0.44l-0.75,-1.63l-0.94,-0.66l-4.31,-0.65l-1.13,1.19l-1.48,0.59l-0.85,1.06l-2.83,-0.76l-2.09,0.39l-2.39,-0.97l-4.24,-0.7l-0.57,-0.4l-0.41,-1.63l-0.4,-0.3l-0.85,0.02l-0.39,0.4l-0.01,0.85l-69.13,-0.01l-6.51,-4.52l-4.5,-1.38l-1.26,-2.66l0.33,-1.93l-0.23,-0.43l-3.01,-1.35l-0.55,-2.77l-2.89,-2.38l-0.04,-1.45l1.39,-1.83l-0.28,-2.55l-4.16,-2.2l-4.07,-6.6l-4.02,-3.22l-1.3,-1.88l-0.5,-0.13l-2.51,1.21l-2.23,1.87l-3.85,-3.88l-2.44,-1.04l-2.22,-0.13l0.03,-37.49ZM260.37,148.65l3.04,0.76l2.26,1.2l-3.78,-0.95l-1.53,-1.01ZM249.4,3.81l6.68,0.49l5.32,0.79l4.26,1.57l-0.07,1.1l-5.85,2.53l-6.02,1.21l-2.39,1.39l-0.18,0.45l0.39,0.29l4.01,-0.02l-4.65,2.82l-4.2,1.74l-4.19,4.59l-5.03,0.92l-1.67,1.15l-7.47,0.59l-0.37,0.37l0.32,0.42l2.41,0.49l-0.81,0.47l-0.12,0.59l1.83,2.41l-2.02,1.59l-3.81,1.51l-1.32,2.16l-3.38,1.53l-0.22,0.48l0.35,1.19l0.4,0.29l3.88,-0.18l0.03,0.61l-6.33,2.95l-6.41,-1.4l-7.43,0.79l-3.72,-0.62l-4.4,-0.25l-0.23,-1.83l4.29,-1.11l0.28,-0.51l-1.1,-3.45l1.0,-0.25l6.58,2.28l0.47,-0.16l-0.05,-0.49l-3.41,-3.45l-3.58,-0.98l1.48,-1.55l4.34,-1.29l0.97,-2.19l-0.16,-0.48l-3.42,-2.13l-0.81,-2.26l6.2,0.22l2.24,0.58l3.91,-2.1l0.2,-0.43l-0.35,-0.32l-5.64,-0.67l-8.73,0.36l-4.26,-1.9l-2.12,-2.4l-2.78,-1.66l-0.41,-1.52l3.31,-1.03l2.93,-0.2l4.91,-0.99l3.7,-2.27l2.87,0.3l2.62,1.67l0.56,-0.14l1.82,-3.2l3.13,-0.94l4.44,-0.69l7.53,-0.26l1.48,0.67l7.19,-1.06l10.8,0.79ZM203.85,57.54l0.01,0.42l1.97,2.97l0.68,-0.02l2.24,-3.72l5.95,-1.86l4.01,4.64l-0.35,2.91l0.5,0.43l4.95,-1.36l2.32,-1.8l5.31,2.28l3.27,2.11l0.3,1.84l0.48,0.33l4.42,-0.99l2.64,2.87l5.97,1.77l2.06,1.72l2.11,3.71l-4.19,1.86l-0.01,0.73l5.9,2.83l3.94,0.94l3.78,3.95l3.46,0.25l-0.63,2.37l-4.11,4.47l-2.76,-1.56l-3.9,-3.94l-3.59,0.41l-0.33,0.34l-0.19,2.72l2.63,2.38l3.42,1.89l0.94,0.97l1.55,3.75l-0.7,2.29l-2.74,-0.92l-6.25,-3.15l-0.51,0.13l0.05,0.52l6.07,5.69l0.18,0.59l-6.09,-1.39l-5.31,-2.24l-2.63,-1.66l0.6,-0.77l-0.12,-0.6l-7.39,-4.01l-0.59,0.37l0.03,0.79l-6.73,0.6l-1.69,-1.1l1.36,-2.46l4.51,-0.07l5.15,-0.52l0.31,-0.6l-0.74,-1.3l0.78,-1.84l3.21,-4.05l-0.67,-2.35l-1.11,-1.6l-3.84,-2.1l-4.35,-1.28l0.91,-0.63l0.06,-0.61l-2.65,-2.75l-2.34,-0.36l-1.89,-1.46l-0.53,0.03l-1.24,1.23l-4.36,0.55l-9.04,-0.99l-9.26,-1.98l-1.6,-1.22l2.22,-1.77l0.13,-0.44l-0.38,-0.27l-3.22,-0.02l-0.72,-4.25l1.83,-4.04l2.42,-1.85l5.5,-1.1l-1.39,2.35ZM261.19,159.33l2.07,0.61l1.44,-0.04l-1.15,0.63l-2.94,-1.23l-0.4,-0.68l0.36,-0.37l0.61,1.07ZM230.83,84.39l-2.37,0.18l-0.49,-1.63l0.93,-2.09l1.94,-0.51l1.62,0.99l0.02,1.52l-1.66,1.54ZM229.43,58.25l0.11,0.65l-4.87,-0.21l-2.72,0.62l-3.1,-2.57l0.08,-1.26l0.86,-0.23l5.57,0.51l4.08,2.5ZM222.0,105.02l-0.72,1.49l-0.63,-0.19l-0.48,-0.84l0.81,-0.99l0.65,0.05l0.37,0.46ZM183.74,38.32l2.9,1.7l4.79,-0.01l1.84,1.46l-0.49,1.68l0.23,0.48l2.82,1.14l1.76,1.26l7.01,0.65l4.1,-1.1l5.03,-0.43l3.93,0.35l2.48,1.77l0.46,1.7l-1.3,1.1l-3.56,1.01l-3.23,-0.59l-7.17,0.76l-5.09,0.09l-3.99,-0.6l-6.42,-1.54l-0.79,-2.51l-0.3,-2.49l-2.64,-2.5l-5.32,-0.72l-2.52,-1.4l0.68,-1.57l4.78,0.31ZM207.38,91.35l0.4,1.56l0.56,0.26l1.06,-0.52l1.32,0.96l5.42,2.57l0.2,1.68l0.46,0.35l1.68,-0.28l1.15,0.85l-1.55,0.87l-3.61,-0.88l-1.32,-1.69l-0.57,-0.06l-2.45,2.1l-3.12,1.79l-0.7,-1.87l-0.42,-0.26l-2.16,0.24l1.39,-1.39l0.32,-3.14l0.76,-3.35l1.18,0.22ZM215.49,102.6l-2.67,1.95l-1.4,-0.07l-0.3,-0.58l1.53,-1.48l2.84,0.18ZM202.7,24.12l2.53,1.59l-2.87,1.4l-4.53,4.05l-4.25,0.38l-5.03,-0.68l-2.45,-2.04l0.03,-1.62l1.82,-1.37l0.14,-0.45l-0.38,-0.27l-4.45,0.04l-2.59,-1.76l-1.41,-2.29l1.57,-2.32l1.62,-1.66l2.44,-0.39l0.25,-0.65l-0.6,-0.74l4.86,-0.25l3.24,3.11l8.16,2.3l1.9,3.61ZM187.47,59.2l-2.76,3.49l-2.38,-0.15l-1.44,-3.84l0.04,-2.2l1.19,-1.88l2.3,-1.23l5.07,0.17l4.11,1.02l-3.24,3.72l-2.88,0.89ZM186.07,48.79l-1.08,1.53l-3.34,-0.34l-2.56,-1.1l1.03,-1.75l3.25,-1.23l1.95,1.58l0.75,1.3ZM185.71,35.32l-5.3,-0.2l-0.32,-0.71l4.31,0.07l1.3,0.84ZM180.68,32.48l-3.34,1.0l-1.79,-1.1l-0.98,-1.87l-0.15,-1.73l4.1,0.53l2.67,1.7l-0.51,1.47ZM180.9,76.31l-1.1,1.08l-3.13,-1.23l-2.12,0.43l-2.71,-1.57l1.72,-1.09l1.55,-1.72l3.81,1.9l1.98,2.2ZM169.74,54.87l2.96,0.97l4.17,-0.57l0.41,0.88l-2.14,2.11l0.09,0.64l3.55,1.92l-0.4,3.72l-3.79,1.65l-2.17,-0.35l-1.72,-1.74l-6.02,-3.5l0.03,-0.85l4.68,0.54l0.4,-0.21l-0.05,-0.45l-2.48,-2.81l2.46,-1.95ZM174.45,40.74l1.37,1.73l0.07,2.44l-1.05,3.45l-3.79,0.47l-2.32,-0.69l0.05,-2.64l-0.44,-0.41l-3.68,0.35l-0.12,-3.1l2.45,0.1l3.67,-1.73l3.41,0.29l0.37,-0.26ZM170.05,31.55l0.67,1.56l-3.33,-0.49l-4.22,-1.77l-4.35,-0.16l1.4,-0.94l-0.06,-0.7l-2.81,-1.23l-0.12,-1.39l4.39,0.68l6.62,1.98l1.81,2.47ZM134.5,58.13l-1.02,1.82l0.45,0.58l5.4,-1.39l3.33,2.29l0.49,-0.03l2.6,-2.23l1.94,1.32l2.0,4.5l0.7,0.06l1.3,-2.29l-1.63,-4.46l1.69,-0.54l2.31,0.71l2.65,1.81l2.49,7.92l8.48,4.27l-0.19,1.35l-3.79,0.33l-0.26,0.67l1.4,1.49l-0.58,1.1l-4.23,-0.64l-4.43,-1.19l-3.0,0.28l-4.66,1.47l-10.52,1.04l-1.43,-2.02l-3.42,-1.2l-2.21,0.43l-2.51,-2.86l4.84,-1.05l3.6,0.19l3.27,-0.78l0.31,-0.39l-0.31,-0.39l-4.84,-1.06l-8.79,0.27l-0.85,-1.07l5.26,-1.66l0.27,-0.45l-0.4,-0.34l-3.8,0.06l-3.81,-1.06l1.81,-3.01l1.66,-1.79l6.48,-2.81l1.97,0.71ZM158.7,56.61l-1.7,2.44l-3.2,-2.75l0.37,-0.3l3.11,-0.18l1.42,0.79ZM149.61,42.73l1.01,1.89l0.5,0.18l2.14,-0.82l2.23,0.19l0.36,2.04l-1.33,2.09l-8.28,0.76l-6.35,2.15l-3.41,0.1l-0.19,-0.96l4.9,-2.08l0.23,-0.46l-0.41,-0.31l-11.25,0.59l-2.89,-0.74l3.04,-4.44l2.14,-1.32l6.81,1.69l4.58,3.06l4.37,0.39l0.36,-0.63l-3.36,-4.6l1.85,-1.53l2.18,0.51l0.77,2.26ZM144.76,34.41l-4.36,1.44l-3.0,-1.4l1.46,-1.24l3.47,-0.52l2.96,0.71l-0.52,1.01ZM145.13,29.83l-1.9,0.66l-3.67,-0.0l2.27,-1.61l3.3,0.95ZM118.92,65.79l-6.03,2.02l-1.33,-1.9l-5.38,-2.28l2.59,-5.05l2.16,-3.14l-0.02,-0.48l-1.97,-2.41l7.64,-0.7l3.6,1.02l6.3,0.27l4.42,2.95l-2.53,0.98l-6.24,3.43l-3.1,3.28l-0.11,2.01ZM129.54,35.53l-0.28,3.37l-1.72,1.62l-2.33,0.28l-4.61,2.19l-3.86,0.76l-2.64,-0.87l3.72,-3.4l5.01,-3.34l3.72,0.07l3.0,-0.67ZM111.09,152.69l-0.67,0.24l-3.85,-1.37l-0.83,-1.17l-2.12,-1.07l-0.66,-1.02l-2.4,-0.55l-0.74,-1.71l6.02,1.45l2.0,2.55l2.52,1.39l0.73,1.27ZM87.8,134.64l0.89,0.29l1.86,-0.21l-0.65,3.34l1.69,2.33l-1.31,-1.33l-0.99,-1.62l-1.17,-0.98l-0.33,-1.82Z", "name": "Canada"}, "CG": {"path": "M466.72,276.48l-0.1,1.03l-1.25,2.97l-0.19,3.62l-0.46,1.78l-0.23,0.63l-1.61,1.19l-1.21,1.39l-1.09,2.43l0.04,2.09l-3.25,3.24l-0.5,-0.24l-0.5,-0.83l-1.36,-0.02l-0.98,0.89l-1.68,-0.99l-1.54,1.24l-1.52,-1.96l1.57,-1.14l0.11,-0.52l-0.77,-1.35l2.1,-0.66l0.39,-0.73l1.05,0.82l2.21,0.11l1.12,-1.37l0.37,-1.81l-0.27,-2.09l-1.13,-1.5l1.0,-2.69l-0.13,-0.45l-0.92,-0.58l-1.6,0.17l-0.51,-0.94l0.1,-0.61l2.75,0.09l3.97,1.24l0.51,-0.33l0.17,-1.28l1.24,-2.21l1.28,-1.14l2.76,0.49Z", "name": "Congo"}, "CF": {"path": "M461.16,278.2l-0.26,-1.19l-1.09,-0.77l-0.84,-1.17l-0.29,-1.0l-1.04,-1.15l0.08,-3.43l0.58,-0.49l1.16,-2.35l1.85,-0.17l0.61,-0.62l0.97,0.58l3.15,-0.96l2.48,-1.92l0.02,-0.96l2.81,0.02l2.36,-1.17l1.93,-2.85l1.16,-0.93l1.11,-0.3l0.27,0.86l1.34,1.47l-0.39,2.01l0.3,1.01l4.01,2.75l0.17,0.93l2.63,2.31l0.6,1.44l2.08,1.4l-3.84,-0.21l-1.94,0.88l-1.23,-0.49l-2.67,1.2l-1.29,-0.18l-0.51,0.36l-0.6,1.22l-3.35,-0.65l-1.57,-0.91l-2.42,-0.83l-1.45,0.91l-0.97,1.27l-0.26,1.56l-3.22,-0.43l-1.49,1.33l-0.94,1.62Z", "name": "Central African Rep."}, "CD": {"path": "M487.01,272.38l2.34,-0.14l1.35,1.84l1.34,0.45l0.86,-0.39l1.21,0.12l1.07,-0.41l0.54,0.89l2.04,1.54l-0.14,2.72l0.7,0.54l-1.38,1.13l-1.53,2.54l-0.17,2.05l-0.59,1.08l-0.02,1.72l-0.72,0.84l-0.66,3.01l0.63,1.32l-0.44,4.26l0.64,1.47l-0.37,1.22l0.86,1.8l1.53,1.41l0.3,1.26l0.44,0.5l-4.08,0.75l-0.92,1.81l0.51,1.34l-0.74,5.43l0.17,0.38l2.45,1.46l0.54,-0.1l0.12,1.62l-1.28,-0.01l-1.85,-2.35l-1.94,-0.45l-0.48,-1.13l-0.55,-0.2l-1.41,0.74l-1.71,-0.3l-1.01,-1.18l-2.49,-0.19l-0.44,-0.77l-1.98,-0.21l-2.88,0.36l0.11,-2.41l-0.85,-1.13l-0.16,-1.36l0.32,-1.73l-0.46,-0.89l-0.04,-1.49l-0.4,-0.39l-2.53,0.02l0.1,-0.41l-0.39,-0.49l-1.28,0.01l-0.43,0.45l-1.62,0.32l-0.83,1.79l-1.09,-0.28l-2.4,0.52l-1.37,-1.91l-1.3,-3.3l-0.38,-0.27l-7.39,-0.03l-2.46,0.42l0.5,-0.45l0.37,-1.47l0.66,-0.38l0.92,0.08l0.73,-0.82l0.87,0.02l0.31,0.68l1.4,0.36l3.59,-3.63l0.01,-2.23l1.02,-2.29l2.69,-2.39l0.43,-0.99l0.49,-1.96l0.17,-3.51l1.25,-2.95l0.36,-3.14l0.86,-1.13l1.1,-0.66l3.57,1.73l3.65,0.73l0.46,-0.21l0.8,-1.46l1.24,0.19l2.61,-1.17l0.81,0.44l1.04,-0.03l0.59,-0.66l0.7,-0.16l1.81,0.25Z", "name": "Dem. Rep. Congo"}, "CZ": {"path": "M458.46,144.88l1.22,1.01l1.47,0.23l0.13,0.93l1.36,0.68l0.54,-0.2l0.24,-0.55l1.15,0.25l0.53,1.09l1.68,0.18l0.6,0.84l-1.04,0.73l-0.96,1.28l-1.6,0.17l-0.55,0.56l-1.04,-0.46l-1.05,0.15l-2.12,-0.96l-1.05,0.34l-1.2,1.12l-1.56,-0.87l-2.57,-2.1l-0.53,-1.88l4.7,-2.52l0.71,0.26l0.9,-0.28Z", "name": "Czech Rep."}, "CY": {"path": "M504.36,193.47l0.43,0.28l-1.28,0.57l-0.92,-0.28l-0.24,-0.46l2.01,-0.13Z", "name": "Cyprus"}, "CR": {"path": "M211.34,258.05l0.48,0.99l1.6,1.6l-0.54,0.45l0.29,1.42l-0.25,1.19l-1.09,-0.59l-0.05,-1.25l-2.46,-1.42l-0.28,-0.77l-0.66,-0.45l-0.45,-0.0l-0.11,1.04l-1.32,-0.95l0.31,-1.3l-0.36,-0.6l0.31,-0.27l1.42,0.58l1.29,-0.14l0.56,0.56l0.74,0.17l0.55,-0.27Z", "name": "Costa Rica"}, "CU": {"path": "M221.21,227.25l1.27,1.02l2.19,-0.28l4.43,3.33l2.08,0.43l-0.1,0.38l0.36,0.5l1.75,0.1l1.48,0.84l-3.11,0.51l-4.15,-0.03l0.77,-0.67l-0.04,-0.64l-1.2,-0.74l-1.49,-0.16l-0.7,-0.61l-0.56,-1.4l-0.4,-0.25l-1.34,0.1l-2.2,-0.66l-0.88,-0.58l-3.18,-0.4l-0.27,-0.16l0.58,-0.74l-0.36,-0.29l-2.72,-0.05l-1.7,1.29l-0.91,0.03l-0.61,0.69l-1.01,0.22l1.11,-1.29l1.01,-0.52l3.69,-1.01l3.98,0.21l2.21,0.84Z", "name": "Cuba"}, "SZ": {"path": "M500.35,351.36l0.5,2.04l-0.38,0.89l-1.05,0.21l-1.23,-1.2l-0.02,-0.64l0.83,-1.57l1.34,0.27Z", "name": "Swaziland"}, "SY": {"path": "M511.0,199.79l0.05,-1.33l0.54,-1.36l1.28,-0.99l0.13,-0.45l-0.41,-1.11l-1.14,-0.36l-0.19,-1.74l0.52,-1.0l1.29,-1.21l0.2,-1.18l0.59,0.23l2.62,-0.76l1.36,0.52l2.06,-0.01l2.95,-1.08l3.25,-0.26l-0.67,0.94l-1.28,0.66l-0.21,0.4l0.23,2.01l-0.88,3.19l-10.15,5.73l-2.15,-0.85Z", "name": "Syria"}, "KG": {"path": "M621.35,172.32l-3.87,1.69l-0.96,1.18l-3.04,0.34l-1.13,1.86l-2.36,-0.35l-1.99,0.63l-2.39,1.4l0.06,0.95l-0.4,0.37l-4.52,0.43l-3.02,-0.93l-2.37,0.17l0.11,-0.79l2.32,0.42l1.13,-0.88l1.99,0.2l3.21,-2.14l-0.03,-0.69l-2.97,-1.57l-1.94,0.65l-1.22,-0.74l1.71,-1.58l-0.12,-0.67l-0.36,-0.15l0.32,-0.77l1.36,-0.35l4.02,1.02l0.49,-0.3l0.35,-1.59l1.09,-0.48l3.42,1.22l1.11,-0.31l7.64,0.39l1.16,1.0l1.23,0.39Z", "name": "Kyrgyzstan"}, "KE": {"path": "M506.26,284.69l1.87,-2.56l0.93,-2.15l-1.38,-4.08l-1.06,-1.6l2.82,-2.75l0.79,0.26l0.12,1.41l0.86,0.83l1.9,0.11l3.28,2.13l3.57,0.44l1.05,-1.12l1.96,-0.9l0.82,0.68l1.16,0.09l-1.78,2.45l0.03,9.12l1.3,1.94l-1.37,0.78l-0.67,1.03l-1.08,0.46l-0.34,1.67l-0.81,1.07l-0.45,1.55l-0.68,0.56l-3.2,-2.23l-0.35,-1.58l-8.86,-4.98l0.14,-1.6l-0.57,-1.04Z", "name": "Kenya"}, "SS": {"path": "M481.71,263.34l1.07,-0.72l1.2,-3.18l1.36,-0.26l1.61,1.99l0.87,0.34l1.1,-0.41l1.5,0.07l0.57,0.53l2.49,0.0l0.44,-0.63l1.07,-0.4l0.45,-0.84l0.59,-0.33l1.9,1.33l1.6,-0.2l2.83,-3.33l-0.32,-2.21l1.59,-0.52l-0.24,1.6l0.3,1.83l1.35,1.18l0.2,1.87l0.35,0.41l0.02,1.53l-0.23,0.47l-1.42,0.25l-0.85,1.44l0.3,0.6l1.4,0.16l1.11,1.08l0.59,1.13l1.03,0.53l1.28,2.36l-4.41,3.98l-1.74,0.01l-1.89,0.55l-1.47,-0.52l-1.15,0.57l-2.96,-2.62l-1.3,0.49l-1.06,-0.15l-0.79,0.39l-0.82,-0.22l-1.8,-2.7l-1.91,-1.1l-0.66,-1.5l-2.62,-2.32l-0.18,-0.94l-2.37,-1.6Z", "name": "S. Sudan"}, "SR": {"path": "M283.12,270.19l2.1,0.53l-1.08,1.95l0.2,1.72l0.93,1.49l-0.59,2.03l-0.43,0.71l-1.12,-0.42l-1.32,0.22l-0.93,-0.2l-0.46,0.26l-0.25,0.73l0.33,0.7l-0.89,-0.13l-1.39,-1.97l-0.31,-1.34l-0.97,-0.31l-0.89,-1.47l0.35,-1.61l1.45,-0.82l0.33,-1.87l2.61,0.44l0.57,-0.47l1.75,-0.16Z", "name": "Suriname"}, "KH": {"path": "M689.52,249.39l0.49,1.45l-0.28,2.74l-4.0,1.86l-0.16,0.6l0.68,0.95l-2.06,0.17l-2.05,0.97l-1.82,-0.32l-2.12,-3.7l-0.55,-2.85l1.4,-1.85l3.02,-0.45l2.23,0.35l2.01,0.98l0.51,-0.14l0.95,-1.48l1.74,0.74Z", "name": "Cambodia"}, "SV": {"path": "M195.8,250.13l1.4,-1.19l2.24,1.45l0.98,-0.27l0.44,0.2l-0.27,1.05l-1.14,-0.03l-3.64,-1.21Z", "name": "El Salvador"}, "SK": {"path": "M476.82,151.17l-1.14,1.9l-2.73,-0.92l-0.82,0.2l-0.74,0.8l-3.46,0.73l-0.47,0.69l-1.76,0.33l-1.88,-1.0l-0.18,-0.81l0.38,-0.75l1.87,-0.32l1.74,-1.89l0.83,0.16l0.79,-0.34l1.51,1.04l1.34,-0.63l1.25,0.3l1.65,-0.42l1.81,0.95Z", "name": "Slovakia"}, "KR": {"path": "M737.51,185.84l0.98,-0.1l0.87,-1.17l2.69,-0.32l0.33,-0.29l1.76,2.79l0.58,1.76l0.02,3.12l-0.8,1.32l-2.21,0.55l-1.93,1.13l-1.8,0.19l-0.2,-1.1l0.43,-2.28l-0.95,-2.56l1.43,-0.37l0.23,-0.62l-1.43,-2.06Z", "name": "Korea"}, "SI": {"path": "M456.18,162.07l-0.51,-1.32l0.18,-1.05l1.69,0.2l1.42,-0.71l2.09,-0.07l0.62,-0.51l0.21,0.47l-1.61,0.67l-0.44,1.34l-0.66,0.24l-0.26,0.82l-1.22,-0.49l-0.84,0.46l-0.69,-0.04Z", "name": "Slovenia"}, "KP": {"path": "M736.77,185.16l-0.92,-0.42l-0.88,0.62l-1.21,-0.88l0.96,-1.15l0.59,-2.59l-0.46,-0.74l-2.09,-0.77l1.64,-1.52l2.72,-1.58l1.58,-1.91l1.11,0.78l2.17,0.11l0.41,-0.5l-0.3,-1.22l3.52,-1.18l0.94,-1.4l0.98,1.08l-2.19,2.18l0.01,2.14l-1.06,0.54l-1.41,1.4l-1.7,0.52l-1.25,1.09l-0.14,1.98l0.94,0.45l1.15,1.04l-0.13,0.26l-2.6,0.29l-1.13,1.29l-1.22,0.08Z", "name": "Dem. Rep. Korea"}, "SO": {"path": "M525.13,288.48l-1.13,-1.57l-0.03,-8.86l2.66,-3.38l1.67,-0.13l2.13,-1.69l3.41,-0.23l7.08,-7.55l2.91,-3.69l0.08,-4.82l2.98,-0.67l1.24,-0.86l0.45,-0.0l-0.2,3.0l-1.21,3.62l-2.73,5.97l-2.13,3.65l-5.03,6.16l-8.56,6.4l-2.78,3.08l-0.8,1.56Z", "name": "Somalia"}, "SN": {"path": "M390.09,248.21l0.12,1.55l0.49,1.46l0.96,0.82l0.05,1.28l-1.26,-0.19l-0.75,0.33l-1.84,-0.61l-5.84,-0.13l-2.54,0.51l-0.22,-1.03l1.77,0.04l2.01,-0.91l1.03,0.48l1.09,0.04l1.29,-0.62l0.14,-0.58l-0.51,-0.74l-1.81,0.25l-1.13,-0.63l-0.79,0.04l-0.72,0.61l-2.31,0.06l-0.92,-1.77l-0.81,-0.64l0.64,-0.35l2.46,-3.74l1.04,0.19l1.38,-0.56l1.19,-0.02l2.72,1.37l3.03,3.48Z", "name": "Senegal"}, "SL": {"path": "M394.46,264.11l-1.73,1.98l-0.58,1.33l-2.07,-1.06l-1.22,-1.26l-0.65,-2.39l1.16,-0.96l0.67,-1.17l1.21,-0.52l1.66,0.0l1.03,1.64l0.52,2.41Z", "name": "Sierra Leone"}, "SB": {"path": "M826.69,311.6l-0.61,0.09l-0.2,-0.33l0.37,0.15l0.44,0.09ZM824.18,307.38l-0.26,-0.3l-0.31,-0.91l0.03,0.0l0.54,1.21ZM823.04,309.33l-1.66,-0.22l-0.2,-0.52l1.16,0.28l0.69,0.46ZM819.28,304.68l1.14,0.65l0.02,0.03l-0.81,-0.44l-0.35,-0.23Z", "name": "Solomon Is."}, "SA": {"path": "M537.53,210.34l2.0,0.24l0.9,1.32l1.49,-0.06l0.87,2.08l1.29,0.76l0.51,0.99l1.56,1.03l-0.1,1.9l0.32,0.9l1.58,2.47l0.76,0.53l0.7,-0.04l1.68,4.23l7.53,1.33l0.51,-0.29l0.77,1.25l-1.55,4.87l-7.29,2.52l-7.3,1.03l-2.34,1.17l-1.88,2.74l-0.76,0.28l-0.82,-0.78l-0.91,0.12l-2.88,-0.51l-3.51,0.25l-0.86,-0.56l-0.57,0.15l-0.66,1.27l0.16,1.11l-0.43,0.32l-0.93,-1.4l-0.33,-1.16l-1.23,-0.88l-1.27,-2.06l-0.78,-2.22l-1.73,-1.79l-1.14,-0.48l-1.54,-2.31l-0.21,-3.41l-1.44,-2.93l-1.27,-1.16l-1.33,-0.57l-1.31,-3.37l-0.77,-0.67l-0.97,-1.97l-2.8,-4.03l-1.06,-0.17l0.37,-1.96l0.2,-0.72l2.74,0.3l1.08,-0.84l0.6,-0.94l1.74,-0.35l0.65,-1.03l0.71,-0.4l0.1,-0.62l-2.06,-2.28l4.39,-1.22l0.48,-0.37l2.77,0.69l3.66,1.9l7.03,5.5l4.87,0.3Z", "name": "Saudi Arabia"}, "SE": {"path": "M480.22,89.3l-4.03,1.17l-2.43,2.86l0.26,2.57l-8.77,6.64l-1.78,5.79l1.78,2.68l2.22,1.96l-2.07,3.77l-2.72,1.13l-0.95,6.04l-1.29,3.01l-2.74,-0.31l-0.4,0.22l-1.31,2.59l-2.34,0.13l-0.75,-3.09l-2.08,-4.03l-1.83,-4.96l1.0,-1.93l2.14,-2.7l0.83,-4.45l-1.6,-2.17l-0.15,-4.94l1.48,-3.39l2.58,-0.15l0.87,-1.59l-0.78,-1.57l3.76,-5.59l4.04,-7.48l2.17,0.01l0.39,-0.29l0.57,-2.07l4.37,0.64l0.46,-0.34l0.33,-2.56l1.1,-0.13l6.94,4.87l0.06,6.32l0.66,1.36Z", "name": "Sweden"}, "SD": {"path": "M505.98,259.4l-0.34,-0.77l-1.17,-0.9l-0.26,-1.61l0.29,-1.81l-0.34,-0.46l-1.16,-0.17l-0.54,0.59l-1.23,0.11l-0.28,0.65l0.53,0.65l0.17,1.22l-2.44,3.0l-0.96,0.19l-2.39,-1.4l-0.95,0.52l-0.38,0.78l-1.11,0.41l-0.29,0.5l-1.94,0.0l-0.54,-0.52l-1.81,-0.09l-0.95,0.4l-2.45,-2.35l-2.07,0.54l-0.73,1.26l-0.6,2.1l-1.25,0.58l-0.75,-0.62l0.27,-2.65l-1.48,-1.78l-0.22,-1.48l-0.92,-0.96l-0.02,-1.29l-0.57,-1.16l-0.68,-0.16l0.69,-1.29l-0.18,-1.14l0.65,-0.62l0.03,-0.55l-0.36,-0.41l1.55,-2.97l1.91,0.16l0.43,-0.4l-0.1,-10.94l2.49,-0.01l0.4,-0.4l-0.0,-4.82l29.02,0.0l0.64,2.04l-0.49,0.66l0.36,2.69l0.93,3.16l2.12,1.55l-0.89,1.04l-1.72,0.39l-0.98,0.9l-1.43,5.65l0.24,1.15l-0.38,2.06l-0.96,2.38l-1.53,1.31l-1.32,2.91l-1.22,0.86l-0.37,1.34Z", "name": "Sudan"}, "DO": {"path": "M241.8,239.2l0.05,-0.65l-0.46,-0.73l0.42,-0.44l0.19,-1.0l-0.09,-1.53l1.66,0.01l1.99,0.63l0.33,0.67l1.28,0.19l0.33,0.76l1.0,0.08l0.8,0.62l-0.45,0.51l-1.13,-0.47l-1.88,-0.01l-1.27,0.59l-0.75,-0.55l-1.01,0.54l-0.79,1.4l-0.23,-0.61Z", "name": "Dominican Rep."}, "DJ": {"path": "M528.43,256.18l-0.45,0.66l-0.58,-0.25l-1.51,0.13l-0.18,-1.01l1.45,-1.95l0.83,0.17l0.77,-0.44l0.2,1.0l-1.2,0.51l-0.06,0.7l0.73,0.47Z", "name": "Djibouti"}, "DK": {"path": "M452.28,129.07l-1.19,2.24l-2.13,-1.6l-0.23,-0.95l2.98,-0.95l0.57,1.26ZM447.74,126.31l-0.26,0.57l-0.88,-0.07l-1.8,2.53l0.48,1.69l-1.09,0.36l-1.61,-0.39l-0.89,-1.69l-0.07,-3.43l0.96,-1.73l2.02,-0.2l1.09,-1.07l1.33,-0.67l-0.05,1.06l-0.73,1.41l0.3,1.0l1.2,0.64Z", "name": "Denmark"}, "DE": {"path": "M453.14,155.55l-0.55,-0.36l-1.2,-0.1l-1.87,0.57l-2.13,-0.13l-0.56,0.63l-0.86,-0.6l-0.96,0.09l-2.57,-0.93l-0.85,0.67l-1.47,-0.02l0.24,-1.75l1.23,-2.14l-0.28,-0.59l-3.52,-0.58l-0.92,-0.66l0.12,-1.2l-0.48,-0.88l0.27,-2.17l-0.37,-3.03l1.41,-0.22l0.63,-1.26l0.66,-3.19l-0.41,-1.18l0.26,-0.39l1.66,-0.15l0.33,0.54l0.62,0.07l1.7,-1.69l-0.54,-3.02l1.37,0.33l1.31,-0.37l0.31,1.18l2.25,0.71l-0.02,0.92l0.5,0.4l2.55,-0.65l1.34,-0.87l2.57,1.24l1.06,0.98l0.48,1.44l-0.57,0.74l-0.0,0.48l0.87,1.15l0.57,1.64l-0.14,1.29l0.82,1.7l-1.5,-0.07l-0.56,0.57l-4.47,2.15l-0.22,0.54l0.68,2.26l2.58,2.16l-0.66,1.11l-0.79,0.36l-0.23,0.43l0.32,1.87Z", "name": "Germany"}, "YE": {"path": "M528.27,246.72l0.26,-0.42l-0.22,-1.01l0.19,-1.5l0.92,-0.69l-0.07,-1.35l0.39,-0.75l1.01,0.47l3.34,-0.27l3.76,0.41l0.95,0.81l1.36,-0.58l1.74,-2.62l2.18,-1.09l6.86,-0.94l2.48,5.41l-1.64,0.76l-0.56,1.9l-6.23,2.16l-2.29,1.8l-1.93,0.05l-1.41,1.02l-4.24,0.74l-1.72,1.49l-3.28,0.19l-0.52,-1.18l0.02,-1.51l-1.34,-3.29Z", "name": "Yemen"}, "AT": {"path": "M462.89,152.8l0.04,2.25l-1.07,0.0l-0.33,0.63l0.36,0.51l-1.04,2.13l-2.02,0.07l-1.33,0.7l-5.29,-0.99l-0.47,-0.93l-0.44,-0.21l-2.47,0.55l-0.42,0.51l-3.18,-0.81l0.43,-0.91l1.12,0.78l0.6,-0.17l0.25,-0.58l1.93,0.12l1.86,-0.56l1.0,0.08l0.68,0.57l0.62,-0.15l0.26,-0.77l-0.3,-1.78l0.8,-0.44l0.68,-1.15l1.52,0.85l0.47,-0.06l1.34,-1.25l0.64,-0.17l1.81,0.92l1.28,-0.11l0.7,0.37Z", "name": "Austria"}, "DZ": {"path": "M441.46,188.44l-0.32,1.07l0.39,2.64l-0.54,2.16l-1.58,1.82l0.37,2.39l1.91,1.55l0.18,0.8l1.42,1.03l1.84,7.23l0.12,1.16l-0.57,5.0l0.2,1.51l-0.87,0.99l-0.02,0.51l1.41,1.86l0.14,1.2l0.89,1.48l0.5,0.16l0.98,-0.41l1.73,1.08l0.82,1.23l-8.22,4.81l-7.23,5.11l-3.43,1.13l-2.3,0.21l-0.28,-1.59l-2.56,-1.09l-0.67,-1.25l-26.12,-17.86l0.01,-3.47l3.77,-1.88l2.44,-0.41l2.12,-0.75l1.08,-1.42l2.81,-1.05l0.35,-2.08l1.33,-0.29l1.04,-0.94l3.47,-0.69l0.46,-1.08l-0.1,-0.45l-0.58,-0.52l-0.82,-2.81l-0.19,-1.83l-0.78,-1.49l2.03,-1.31l2.63,-0.48l1.7,-1.22l2.31,-0.84l8.24,-0.73l1.49,0.38l2.28,-1.1l2.46,-0.02l0.92,0.6l1.35,-0.05Z", "name": "Algeria"}, "US": {"path": "M892.72,99.2l1.31,0.53l1.41,-0.37l1.89,0.98l1.89,0.42l-1.32,0.58l-2.9,-1.53l-2.08,0.22l-0.26,-0.15l0.07,-0.67ZM183.22,150.47l0.37,1.47l1.12,0.85l4.23,0.7l2.39,0.98l2.17,-0.38l1.85,0.5l-1.55,0.65l-3.49,2.61l-0.16,0.77l0.5,0.39l2.33,-0.61l1.77,1.02l5.15,-2.4l-0.31,0.65l0.25,0.56l1.36,0.38l1.71,1.16l4.7,-0.88l0.67,0.85l1.31,0.21l0.58,0.58l-1.34,0.17l-2.18,-0.32l-3.6,0.89l-2.71,3.25l0.35,0.9l0.59,-0.0l0.55,-0.6l-1.36,4.65l0.29,3.09l0.67,1.58l0.61,0.45l1.77,-0.44l1.6,-1.96l0.14,-2.21l-0.82,-1.96l0.11,-1.13l1.19,-2.37l0.44,-0.33l0.48,0.75l0.4,-0.29l0.4,-1.37l0.6,-0.47l0.24,-0.8l1.69,0.49l1.65,1.08l-0.03,2.37l-1.27,1.13l-0.0,1.13l0.87,0.36l1.66,-1.29l0.5,0.17l0.5,2.6l-2.49,3.75l0.17,0.61l1.54,0.62l1.48,0.17l1.92,-0.44l4.72,-2.15l2.16,-1.8l-0.05,-1.24l0.75,-0.22l3.92,0.36l2.12,-1.05l0.21,-0.4l-0.28,-1.48l3.27,-2.4l8.32,-0.02l0.56,-0.82l1.9,-0.77l0.93,-1.51l0.74,-2.37l1.58,-1.98l0.92,0.62l1.47,-0.47l0.8,0.66l-0.0,4.09l1.96,2.6l-2.34,1.31l-5.37,2.09l-1.83,2.72l0.02,1.79l0.83,1.59l0.54,0.23l-6.19,0.94l-2.2,0.89l-0.23,0.48l0.45,0.29l2.99,-0.46l-2.19,0.56l-1.13,0.0l-0.15,-0.32l-0.48,0.08l-0.76,0.82l0.22,0.67l0.32,0.06l-0.41,1.62l-1.27,1.58l-1.48,-1.07l-0.49,-0.04l-0.16,0.46l0.52,1.58l0.61,0.59l0.03,0.79l-0.95,1.38l-1.21,-1.22l-0.27,-2.27l-0.35,-0.35l-0.42,0.25l-0.48,1.27l0.33,1.41l-0.97,-0.27l-0.48,0.24l0.18,0.5l1.52,0.83l0.1,2.52l0.79,0.51l0.52,3.42l-1.42,1.88l-2.47,0.8l-1.71,1.66l-1.31,0.25l-1.27,1.03l-0.43,0.99l-2.69,1.78l-2.64,3.03l-0.45,2.12l0.45,2.08l0.85,2.38l1.09,1.9l0.04,1.2l1.16,3.06l-0.18,2.69l-0.55,1.43l-0.47,0.21l-0.89,-0.23l-0.49,-1.18l-0.87,-0.56l-2.75,-5.16l0.48,-1.68l-0.72,-1.78l-2.01,-2.38l-1.12,-0.53l-2.72,1.18l-1.47,-1.35l-1.57,-0.68l-2.99,0.31l-2.17,-0.3l-2.0,0.19l-1.15,0.46l-0.19,0.58l0.39,0.63l0.14,1.34l-0.84,-0.2l-0.84,0.46l-1.58,-0.07l-2.08,-1.44l-2.09,0.33l-1.91,-0.62l-3.73,0.84l-2.39,2.07l-2.54,1.22l-1.45,1.41l-0.61,1.38l0.34,3.71l-0.29,0.02l-3.5,-1.33l-1.25,-3.11l-1.44,-1.5l-2.24,-3.56l-1.76,-1.09l-2.27,-0.01l-1.71,2.07l-1.76,-0.69l-1.16,-0.74l-1.52,-2.98l-3.93,-3.16l-4.34,-0.0l-0.4,0.4l-0.0,0.74l-6.5,0.02l-9.02,-3.14l-0.34,-0.71l-5.7,0.49l-0.43,-1.29l-1.62,-1.61l-1.14,-0.38l-0.55,-0.88l-1.28,-0.13l-1.01,-0.77l-2.22,-0.27l-0.43,-0.3l-0.36,-1.58l-2.4,-2.83l-2.01,-3.85l-0.06,-0.9l-2.92,-3.26l-0.33,-2.29l-1.3,-1.66l0.52,-2.37l-0.09,-2.57l-0.78,-2.3l0.95,-2.82l0.61,-5.68l-0.47,-4.27l-1.46,-4.08l3.19,0.79l1.26,2.83l0.69,0.08l0.69,-1.14l-1.1,-4.79l68.76,-0.0l0.4,-0.4l0.14,-0.86ZM32.44,67.52l1.73,1.97l0.55,0.05l0.99,-0.79l3.65,0.24l-0.09,0.62l0.32,0.45l3.83,0.77l2.61,-0.43l5.19,1.4l4.84,0.43l1.89,0.57l3.42,-0.7l6.14,1.87l-0.03,38.06l0.38,0.4l2.39,0.11l2.31,0.98l3.9,3.99l0.55,0.04l2.4,-2.03l2.16,-1.04l1.2,1.71l3.95,3.14l4.09,6.63l4.2,2.29l0.06,1.83l-1.02,1.23l-1.16,-1.08l-2.04,-1.03l-0.67,-2.89l-3.28,-3.03l-1.65,-3.57l-6.35,-0.32l-2.82,-1.01l-5.26,-3.85l-6.77,-2.04l-3.53,0.3l-4.81,-1.69l-3.25,-1.63l-2.78,0.8l-0.28,0.46l0.44,2.21l-3.91,0.96l-2.26,1.27l-2.3,0.65l-0.27,-1.65l1.05,-3.42l2.49,-1.09l0.16,-0.6l-0.69,-0.96l-0.55,-0.1l-3.19,2.12l-1.78,2.56l-3.55,2.61l-0.04,0.61l1.56,1.52l-2.07,2.29l-5.11,2.57l-0.77,1.66l-3.76,1.77l-0.92,1.73l-2.69,1.38l-1.81,-0.22l-6.95,3.32l-3.97,0.91l4.85,-2.5l2.59,-1.86l3.26,-0.52l1.19,-1.4l3.42,-2.1l2.59,-2.27l0.42,-2.68l1.23,-2.1l-0.04,-0.46l-0.45,-0.11l-2.68,1.03l-0.63,-0.49l-0.53,0.03l-1.05,1.04l-1.36,-1.54l-0.66,0.08l-0.32,0.62l-0.58,-1.14l-0.56,-0.16l-2.41,1.42l-1.07,-0.0l-0.17,-1.75l0.3,-1.71l-1.61,-1.33l-3.41,0.59l-1.96,-1.63l-1.57,-0.84l-0.15,-2.21l-1.7,-1.43l0.82,-1.88l1.99,-2.12l0.88,-1.92l1.71,-0.24l2.04,0.51l1.87,-1.77l1.91,0.25l1.91,-1.23l0.17,-0.43l-0.47,-1.82l-1.07,-0.7l1.39,-1.17l0.12,-0.45l-0.39,-0.26l-1.65,0.07l-2.66,0.88l-0.75,0.78l-1.92,-0.8l-3.46,0.44l-3.44,-0.91l-1.06,-1.61l-2.65,-1.99l2.91,-1.43l5.5,-2.0l1.52,0.0l-0.26,1.62l0.41,0.46l5.29,-0.16l0.3,-0.65l-2.03,-2.59l-3.14,-1.68l-1.79,-2.12l-2.4,-1.83l-3.09,-1.24l1.04,-1.69l4.23,-0.14l3.36,-2.07l0.73,-2.27l2.39,-1.99l2.42,-0.52l4.65,-1.97l2.46,0.23l3.71,-2.35l3.5,0.89ZM37.6,123.41l-2.25,1.23l-0.95,-0.69l-0.29,-1.24l3.21,-1.63l1.42,0.21l0.67,0.7l-1.8,1.42ZM31.06,234.03l0.98,0.47l0.74,0.87l-1.77,1.07l-0.44,-1.53l0.49,-0.89ZM29.34,232.07l0.18,0.05l0.08,0.05l-0.16,0.03l-0.11,-0.14ZM25.16,230.17l0.05,-0.03l0.18,0.22l-0.13,-0.01l-0.1,-0.18ZM5.89,113.26l-1.08,0.41l-2.21,-1.12l1.53,-0.4l1.62,0.28l0.14,0.83Z", "name": "United States"}, "LV": {"path": "M489.16,122.85l0.96,0.66l0.22,1.65l0.68,1.76l-3.65,1.7l-2.23,-1.58l-1.29,-0.26l-0.68,-0.77l-2.42,0.34l-4.16,-0.23l-2.47,0.9l0.06,-1.98l1.13,-2.06l1.95,-1.02l2.12,2.58l2.01,-0.07l0.38,-0.33l0.44,-2.52l1.76,-0.53l3.06,1.7l2.15,0.07Z", "name": "Latvia"}, "UY": {"path": "M286.85,372.74l-0.92,1.5l-2.59,1.44l-1.69,-0.52l-1.42,0.26l-2.39,-1.19l-1.52,0.08l-1.27,-1.3l0.16,-1.5l0.56,-0.79l-0.02,-2.73l1.21,-4.74l1.19,-0.21l2.37,2.0l1.08,0.03l4.36,3.17l1.22,1.6l-0.96,1.5l0.61,1.4Z", "name": "Uruguay"}, "LB": {"path": "M510.37,198.01l-0.88,0.51l1.82,-3.54l0.62,0.08l0.22,0.61l-1.13,0.88l-0.65,1.47Z", "name": "Lebanon"}, "LA": {"path": "M689.54,248.53l-1.76,-0.74l-0.49,0.15l-0.94,1.46l-1.32,-0.64l0.62,-0.98l0.11,-2.17l-2.04,-2.42l-0.25,-2.65l-1.9,-2.1l-2.15,-0.31l-0.78,0.91l-1.12,0.06l-1.05,-0.4l-2.06,1.2l-0.04,-1.59l0.61,-2.68l-0.36,-0.49l-1.35,-0.1l-0.11,-1.23l-0.96,-0.88l1.96,-1.89l0.39,0.36l1.33,0.07l0.42,-0.45l-0.34,-2.66l0.7,-0.21l1.28,1.81l1.11,2.35l0.36,0.23l2.82,0.02l0.71,1.67l-1.39,0.65l-0.72,0.93l0.13,0.6l2.91,1.51l3.6,5.25l1.88,1.78l0.56,1.62l-0.35,1.96Z", "name": "Lao PDR"}, "TW": {"path": "M724.01,226.68l-0.74,1.48l-0.9,-1.52l-0.25,-1.74l1.38,-2.44l1.73,-1.74l0.64,0.44l-1.85,5.52Z", "name": "Taiwan"}, "TT": {"path": "M266.64,259.32l0.28,-1.16l1.13,-0.22l-0.06,1.2l-1.35,0.18Z", "name": "Trinidad and Tobago"}, "TR": {"path": "M513.21,175.47l3.64,1.17l3.05,-0.44l2.1,0.26l3.11,-1.56l2.46,-0.13l2.19,1.33l0.33,0.82l-0.22,1.33l0.25,0.44l2.28,1.13l-1.17,0.57l-0.21,0.45l0.75,3.2l-0.41,1.16l1.13,1.92l-0.55,0.22l-0.9,-0.67l-2.91,-0.37l-1.24,0.46l-4.23,0.41l-2.81,1.05l-1.91,0.01l-1.52,-0.53l-2.58,0.75l-0.66,-0.45l-0.62,0.3l-0.12,1.45l-0.89,0.84l-0.47,-0.67l0.79,-1.3l-0.41,-0.2l-1.43,0.23l-2.0,-0.63l-2.02,1.65l-3.51,0.3l-2.13,-1.53l-2.7,-0.1l-0.86,1.24l-1.38,0.27l-2.29,-1.44l-2.71,-0.01l-1.37,-2.65l-1.68,-1.52l1.07,-1.99l-0.09,-0.49l-1.27,-1.12l2.37,-2.41l3.7,-0.11l1.28,-2.24l4.49,0.37l3.21,-1.97l2.81,-0.82l3.99,-0.06l4.29,2.07ZM488.79,176.72l-1.72,1.31l-0.5,-0.88l1.37,-2.57l-0.7,-0.85l1.7,-0.63l1.8,0.34l0.46,1.17l1.76,0.78l-2.87,0.32l-1.3,1.01Z", "name": "Turkey"}, "LK": {"path": "M624.16,268.99l-1.82,0.48l-0.99,-1.67l-0.42,-3.46l0.95,-3.43l1.21,0.98l2.26,4.19l-0.34,2.33l-0.85,0.58Z", "name": "Sri Lanka"}, "TN": {"path": "M448.1,188.24l-1.0,1.27l-0.02,1.32l0.84,0.88l-0.28,2.09l-1.53,1.32l-0.12,0.42l0.48,1.54l1.42,0.32l0.53,1.11l0.9,0.52l-0.11,1.67l-3.54,2.64l-0.1,2.38l-0.58,0.3l-0.96,-4.45l-1.54,-1.25l-0.16,-0.78l-1.92,-1.56l-0.18,-1.76l1.51,-1.62l0.59,-2.34l-0.38,-2.78l0.42,-1.21l2.45,-1.05l1.29,0.26l-0.06,1.11l0.58,0.38l1.47,-0.73Z", "name": "Tunisia"}, "TL": {"path": "M734.55,307.93l-0.1,-0.97l4.5,-0.86l-2.82,1.28l-1.59,0.55Z", "name": "Timor-Leste"}, "TM": {"path": "M553.03,173.76l-0.04,0.34l-0.09,-0.22l0.13,-0.12ZM555.87,172.66l0.45,-0.1l1.48,0.74l2.06,2.43l4.07,-0.18l0.38,-0.51l-0.32,-1.19l1.92,-0.94l1.91,-1.59l2.94,1.39l0.43,2.47l1.19,0.67l2.58,-0.13l0.62,0.4l1.32,3.12l4.54,3.44l2.67,1.45l3.06,1.14l-0.04,1.05l-1.33,-0.75l-0.59,0.19l-0.32,0.84l-2.2,0.81l-0.46,2.13l-1.21,0.74l-1.91,0.42l-0.73,1.33l-1.56,0.31l-2.22,-0.94l-0.2,-2.17l-0.38,-0.36l-1.73,-0.09l-2.76,-2.46l-2.14,-0.4l-2.84,-1.48l-1.78,-0.27l-1.24,0.53l-1.57,-0.08l-2.0,1.69l-1.7,0.43l-0.36,-1.58l0.36,-2.98l-0.22,-0.4l-1.65,-0.84l0.54,-1.69l-0.34,-0.52l-1.22,-0.13l0.36,-1.64l2.22,0.59l2.2,-0.95l0.12,-0.65l-1.77,-1.74l-0.66,-1.57Z", "name": "Turkmenistan"}, "TJ": {"path": "M597.75,178.82l-2.54,-0.44l-0.47,0.34l-0.24,1.7l0.43,0.45l2.64,-0.22l3.18,0.95l4.39,-0.41l0.56,2.37l0.52,0.29l0.67,-0.24l1.11,0.49l0.21,2.13l-3.76,-0.21l-1.8,1.32l-1.76,0.74l-0.61,-0.58l0.21,-2.23l-0.64,-0.49l-0.07,-0.93l-1.36,-0.66l-0.45,0.07l-1.08,1.01l-0.55,1.48l-1.31,-0.05l-0.95,1.16l-0.9,-0.35l-1.86,0.74l1.26,-2.83l-0.54,-2.17l-1.67,-0.82l0.33,-0.66l2.18,-0.04l1.19,-1.63l0.76,-1.79l2.43,-0.5l-0.26,1.0l0.73,1.05Z", "name": "Tajikistan"}, "LS": {"path": "M491.06,363.48l-0.49,0.15l-1.49,-1.67l1.1,-1.43l2.19,-1.44l1.51,1.27l-0.98,1.82l-1.23,0.38l-0.62,0.93Z", "name": "Lesotho"}, "TH": {"path": "M670.27,255.86l-1.41,3.87l0.15,2.0l0.38,0.36l1.38,0.07l0.9,2.04l0.55,2.34l1.4,1.44l1.61,0.38l0.96,0.97l-0.5,0.64l-1.1,0.2l-0.34,-1.18l-2.04,-1.1l-0.63,0.23l-0.63,-0.62l-0.48,-1.3l-2.56,-2.63l-0.73,0.41l0.95,-3.89l2.16,-4.22ZM670.67,254.77l-0.92,-2.18l-0.26,-2.61l-2.14,-3.06l0.71,-0.49l0.89,-2.59l-3.61,-5.45l0.87,-0.51l1.05,-2.58l1.74,-0.18l2.6,-1.59l0.76,0.56l0.13,1.39l0.37,0.36l1.23,0.09l-0.51,2.28l0.05,2.42l0.6,0.34l2.43,-1.42l0.77,0.39l1.47,-0.07l0.71,-0.88l1.48,0.14l1.71,1.88l0.25,2.65l1.92,2.11l-0.1,1.89l-0.61,0.86l-2.22,-0.33l-3.5,0.64l-1.6,2.12l0.36,2.58l-1.51,-0.79l-1.84,-0.01l0.28,-1.52l-0.4,-0.47l-2.21,0.01l-0.4,0.37l-0.19,2.74l-0.34,0.93Z", "name": "Thailand"}, "TF": {"path": "M596.68,420.38l-3.2,0.18l-0.05,-1.26l0.39,-1.41l1.3,0.78l2.08,0.35l-0.52,1.36Z", "name": "Fr. S. Antarctic Lands"}, "TG": {"path": "M422.7,257.63l-0.09,1.23l1.53,1.52l0.08,1.09l0.5,0.65l-0.11,5.62l0.49,1.47l-1.31,0.35l-1.02,-2.13l-0.18,-1.12l0.53,-2.19l-0.63,-1.16l-0.22,-3.68l-1.01,-1.4l0.07,-0.28l1.37,0.03Z", "name": "Togo"}, "TD": {"path": "M480.25,235.49l0.12,9.57l-2.1,0.05l-1.14,1.89l-0.69,1.63l0.34,0.73l-0.66,0.91l0.24,0.89l-0.86,1.95l0.45,0.5l0.6,-0.1l0.34,0.64l0.03,1.38l0.9,1.04l-1.45,0.43l-1.27,1.03l-1.83,2.76l-2.16,1.07l-2.31,-0.15l-0.86,0.25l-0.26,0.49l0.17,0.61l-2.11,1.68l-2.85,0.87l-1.09,-0.57l-0.73,0.66l-1.12,0.1l-1.1,-3.12l-1.25,-0.64l-1.22,-1.22l0.29,-0.64l3.01,0.04l0.35,-0.6l-1.3,-2.2l-0.08,-3.31l-0.97,-1.66l0.22,-1.04l-0.38,-0.48l-1.22,-0.04l0.0,-1.25l-0.98,-1.07l0.96,-3.01l3.25,-2.65l0.13,-3.33l0.95,-5.18l0.52,-1.07l-0.1,-0.48l-0.91,-0.78l-0.2,-0.96l-0.8,-0.58l-0.55,-3.65l2.1,-1.2l19.57,9.83Z", "name": "Chad"}, "LY": {"path": "M483.48,203.15l-0.75,1.1l0.29,1.39l-0.6,1.83l0.73,2.14l0.0,24.12l-2.48,0.01l-0.41,0.85l-19.41,-9.76l-4.41,2.28l-1.37,-1.33l-3.82,-1.1l-1.14,-1.65l-1.98,-1.23l-1.22,0.32l-0.66,-1.11l-0.17,-1.26l-1.28,-1.69l0.87,-1.19l-0.07,-4.34l0.43,-2.27l-0.86,-3.45l1.13,-0.76l0.22,-1.16l-0.2,-1.03l3.48,-2.61l0.29,-1.94l2.45,0.8l1.18,-0.21l1.98,0.44l3.15,1.18l1.37,2.54l5.72,1.67l2.64,1.35l1.61,-0.72l1.29,-1.34l-0.44,-2.34l0.66,-1.13l1.67,-1.21l1.57,-0.35l3.14,0.53l1.08,1.28l3.99,0.78l0.36,0.54Z", "name": "Libya"}, "AE": {"path": "M550.76,223.97l1.88,-0.4l3.84,0.02l4.78,-4.75l0.19,0.36l0.26,1.58l-0.81,0.01l-0.39,0.35l-0.08,2.04l-0.81,0.63l-0.01,0.96l-0.66,0.99l-0.39,1.41l-7.08,-1.25l-0.7,-1.96Z", "name": "United Arab Emirates"}, "VE": {"path": "M240.68,256.69l0.53,0.75l-0.02,1.06l-1.07,1.78l0.95,2.0l0.42,0.22l1.4,-0.44l0.56,-1.83l-0.77,-1.17l-0.1,-1.47l2.82,-0.93l0.26,-0.49l-0.28,-0.96l0.3,-0.28l0.66,1.31l1.96,0.26l1.4,1.22l0.08,0.68l0.39,0.35l4.81,-0.22l1.49,1.11l1.92,0.31l1.67,-0.84l0.22,-0.6l3.44,-0.14l-0.17,0.55l0.86,1.19l2.19,0.35l1.67,1.1l0.37,1.86l0.41,0.32l1.55,0.17l-1.66,1.35l-0.22,0.92l0.65,0.97l-1.67,0.54l-0.3,0.4l0.04,0.99l-0.56,0.57l-0.01,0.55l1.85,2.27l-0.66,0.69l-4.47,1.29l-0.72,0.54l-3.69,-0.9l-0.71,0.27l-0.02,0.7l0.91,0.53l-0.08,1.54l0.35,1.58l0.35,0.31l1.66,0.17l-1.3,0.52l-0.48,1.13l-2.68,0.91l-0.6,0.77l-1.57,0.13l-1.17,-1.13l-0.8,-2.52l-1.25,-1.26l1.02,-1.23l-1.29,-2.95l0.18,-1.62l1.0,-2.21l-0.2,-0.49l-1.14,-0.46l-4.02,0.36l-1.82,-2.1l-1.57,-0.33l-2.99,0.22l-1.06,-0.97l0.25,-1.23l-0.2,-1.01l-0.59,-0.69l-0.29,-1.06l-1.08,-0.39l0.78,-2.79l1.9,-2.11Z", "name": "Venezuela"}, "AF": {"path": "M600.7,188.88l-1.57,1.3l-0.1,0.48l0.8,2.31l-1.09,1.04l-0.03,1.27l-0.48,0.71l-2.16,-0.08l-0.37,0.59l0.78,1.48l-1.38,0.69l-1.06,1.69l0.06,1.7l-0.65,0.52l-0.91,-0.21l-1.91,0.36l-0.48,0.77l-1.88,0.13l-1.4,1.56l-0.18,2.32l-2.91,1.02l-1.65,-0.23l-0.71,0.55l-1.41,-0.3l-2.41,0.39l-3.52,-1.17l1.96,-2.35l-0.21,-1.78l-0.3,-0.34l-1.63,-0.4l-0.19,-1.58l-0.75,-2.03l0.95,-1.36l-0.19,-0.6l-0.73,-0.28l1.47,-4.8l2.14,0.9l2.12,-0.36l0.74,-1.34l1.77,-0.39l1.54,-0.92l0.63,-2.31l1.87,-0.5l0.49,-0.81l0.94,0.56l2.13,0.11l2.55,0.92l1.95,-0.83l0.65,0.43l0.56,-0.13l0.69,-1.12l1.57,-0.08l0.72,-1.66l0.79,-0.74l0.8,0.39l-0.17,0.56l0.71,0.58l-0.08,2.39l1.11,0.95ZM601.37,188.71l1.73,-0.71l1.43,-1.18l4.03,0.35l-2.23,0.74l-4.95,0.8Z", "name": "Afghanistan"}, "IQ": {"path": "M530.82,187.47l0.79,0.66l1.26,-0.28l1.46,3.08l1.63,0.94l0.14,1.23l-1.22,1.05l-0.53,2.52l1.73,2.67l3.12,1.62l1.15,1.88l-0.38,1.85l0.39,0.48l0.41,-0.0l0.02,1.07l0.76,0.94l-2.47,-0.1l-1.71,2.44l-4.31,-0.2l-7.02,-5.48l-3.73,-1.94l-2.88,-0.73l-0.85,-2.87l5.45,-3.02l0.95,-3.43l-0.19,-1.96l1.27,-0.7l1.22,-1.7l0.87,-0.36l2.69,0.34Z", "name": "Iraq"}, "IS": {"path": "M384.14,88.06l-0.37,2.61l2.54,2.51l-2.9,2.75l-9.19,3.4l-9.25,-1.66l1.7,-1.22l-0.1,-0.7l-4.05,-1.47l2.96,-0.53l0.33,-0.43l-0.11,-1.2l-0.33,-0.36l-4.67,-0.85l1.28,-2.04l3.45,-0.56l3.77,2.72l0.44,0.02l3.64,-2.16l3.3,1.08l3.98,-2.16l3.58,0.26Z", "name": "Iceland"}, "IR": {"path": "M533.43,187.16l-1.27,-2.15l0.42,-0.98l-0.71,-3.04l1.03,-0.5l0.33,0.83l1.26,1.35l2.05,0.51l1.11,-0.16l2.89,-2.11l0.62,-0.14l0.39,0.46l-0.72,1.2l0.06,0.49l1.56,1.53l0.65,0.04l0.67,1.81l2.56,0.83l1.87,1.48l3.69,0.49l3.91,-0.76l0.47,-0.73l2.17,-0.6l1.66,-1.54l1.51,0.08l1.18,-0.53l1.59,0.24l2.83,1.48l1.88,0.3l2.77,2.47l1.77,0.18l0.18,1.99l-1.68,5.49l0.24,0.5l0.61,0.23l-0.82,1.48l0.8,2.18l0.19,1.71l0.3,0.34l1.63,0.4l0.15,1.32l-2.15,2.35l-0.01,0.53l2.21,3.03l2.34,1.24l0.06,2.14l1.24,0.72l0.11,0.69l-3.31,1.27l-1.08,3.03l-9.68,-1.68l-0.99,-3.05l-1.43,-0.73l-2.17,0.46l-2.47,1.26l-2.83,-0.82l-2.46,-2.02l-2.41,-0.8l-3.42,-6.06l-0.48,-0.2l-1.18,0.39l-1.44,-0.82l-0.5,0.08l-0.65,0.74l-0.97,-1.01l-0.02,-1.31l-0.71,-0.39l0.26,-1.81l-1.29,-2.11l-3.13,-1.63l-1.58,-2.43l0.5,-1.9l1.31,-1.26l-0.19,-1.66l-1.74,-1.1l-1.57,-3.3Z", "name": "Iran"}, "AM": {"path": "M536.99,182.33l-0.28,0.03l-1.23,-2.13l-0.93,0.01l-0.62,-0.66l-0.69,-0.07l-0.96,-0.81l-1.56,-0.62l0.19,-1.12l-0.26,-0.79l2.72,-0.36l1.09,1.01l-0.17,0.92l1.02,0.78l-0.47,0.62l0.08,0.56l2.04,1.23l0.04,1.4Z", "name": "Armenia"}, "IT": {"path": "M451.59,158.63l3.48,0.94l-0.21,1.17l0.3,0.83l-1.49,-0.24l-2.04,1.1l-0.21,0.39l0.13,1.45l-0.25,1.12l0.82,1.57l2.39,1.63l1.31,2.54l2.79,2.43l2.05,0.08l0.21,0.23l-0.39,0.33l0.09,0.67l4.05,1.97l2.17,1.76l-0.16,0.36l-1.17,-1.08l-2.18,-0.49l-0.44,0.2l-1.05,1.91l0.14,0.54l1.57,0.95l-0.19,0.98l-1.06,0.33l-1.25,2.34l-0.37,0.08l0.0,-0.33l1.0,-2.45l-1.73,-3.17l-1.12,-0.51l-0.88,-1.33l-1.51,-0.51l-1.27,-1.25l-1.75,-0.18l-4.12,-3.21l-1.62,-1.65l-1.03,-3.19l-3.53,-1.36l-1.3,0.51l-1.69,1.41l0.16,-0.72l-0.28,-0.47l-1.14,-0.33l-0.53,-1.96l0.72,-0.78l0.04,-0.48l-0.65,-1.17l0.8,0.39l1.4,-0.23l1.11,-0.84l0.52,0.35l1.19,-0.1l0.75,-1.2l1.53,0.33l1.36,-0.56l0.35,-1.14l1.08,0.32l0.68,-0.64l1.98,-0.44l0.42,0.82ZM459.19,184.75l-0.65,1.65l0.32,1.05l-0.31,0.89l-1.5,-0.85l-4.5,-1.67l0.19,-0.82l2.67,0.23l3.78,-0.48ZM443.93,176.05l1.18,1.66l-0.3,3.32l-1.06,-0.01l-0.77,0.73l-0.53,-0.44l-0.1,-3.37l-0.39,-1.22l1.04,0.01l0.92,-0.68Z", "name": "Italy"}, "VN": {"path": "M690.56,230.25l-2.7,1.82l-2.09,2.46l-0.63,1.95l4.31,6.45l2.32,1.65l1.43,1.94l1.11,4.59l-0.32,4.24l-1.93,1.54l-2.84,1.61l-2.11,2.15l-2.73,2.06l-0.59,-1.05l0.63,-1.53l-0.13,-0.47l-1.34,-1.04l1.51,-0.71l2.55,-0.18l0.3,-0.63l-0.82,-1.14l4.0,-2.07l0.31,-3.05l-0.57,-1.77l0.42,-2.66l-0.73,-1.97l-1.86,-1.76l-3.63,-5.29l-2.72,-1.46l0.36,-0.47l1.5,-0.64l0.21,-0.52l-0.97,-2.27l-0.37,-0.24l-2.83,-0.02l-2.24,-3.9l0.83,-0.4l4.39,-0.29l2.06,-1.31l1.15,0.89l1.88,0.4l-0.17,1.51l1.35,1.16l1.67,0.45Z", "name": "Vietnam"}, "AR": {"path": "M249.29,428.93l-2.33,-0.52l-5.83,-0.43l-0.89,-1.66l0.05,-2.37l-0.45,-0.4l-1.43,0.18l-0.67,-0.91l-0.2,-3.13l1.88,-1.47l0.79,-2.04l-0.25,-1.7l1.3,-2.68l0.91,-4.15l-0.22,-1.69l0.85,-0.45l0.2,-0.44l-0.27,-1.16l-0.98,-0.68l0.59,-0.92l-0.05,-0.5l-1.04,-1.07l-0.52,-3.1l0.97,-0.86l-0.42,-3.58l1.2,-5.43l1.38,-0.98l0.16,-0.43l-0.75,-2.79l-0.01,-2.43l1.78,-1.75l0.06,-2.57l1.43,-2.85l0.01,-2.58l-0.69,-0.74l-1.09,-4.52l1.47,-2.7l-0.18,-2.79l0.85,-2.35l1.59,-2.46l1.73,-1.64l0.05,-0.52l-0.6,-0.84l0.44,-0.85l-0.07,-4.19l2.7,-1.44l0.86,-2.75l-0.21,-0.71l1.76,-2.01l2.9,0.57l1.38,1.78l0.68,-0.08l0.87,-1.87l2.39,0.09l4.95,4.77l2.17,0.49l3.0,1.92l2.47,1.0l0.25,0.82l-2.37,3.93l0.23,0.59l5.39,1.16l2.12,-0.44l2.45,-2.16l0.5,-2.38l0.76,-0.31l0.98,1.2l-0.04,1.8l-3.67,2.51l-2.85,2.66l-3.43,3.88l-1.3,5.07l0.01,2.72l-0.54,0.73l-0.36,3.28l3.14,2.64l-0.16,2.11l1.4,1.11l-0.1,1.09l-2.29,3.52l-3.55,1.49l-4.92,0.6l-2.71,-0.29l-0.43,0.51l0.5,1.65l-0.49,2.1l0.38,1.42l-1.19,0.83l-2.36,0.38l-2.3,-1.04l-1.38,0.83l0.41,3.64l1.69,0.91l1.4,-0.71l0.36,0.76l-2.04,0.86l-2.01,1.89l-0.97,4.63l-2.34,0.1l-2.09,1.78l-0.61,2.75l2.46,2.31l2.17,0.63l-0.7,2.32l-2.83,1.73l-1.73,3.86l-2.17,1.22l-1.16,1.67l0.75,3.76l1.04,1.28ZM256.71,438.88l-2.0,0.15l-1.4,-1.22l-3.82,-0.1l-0.0,-5.83l1.6,3.05l3.26,2.07l3.08,0.78l-0.71,1.1Z", "name": "Argentina"}, "AU": {"path": "M705.8,353.26l0.26,0.04l0.17,-0.47l-0.48,-1.42l0.92,1.11l0.45,0.15l0.27,-0.39l-0.1,-1.56l-1.98,-3.63l1.09,-3.31l-0.24,-1.57l0.34,-0.62l0.38,1.06l0.43,-0.19l0.99,-1.7l1.91,-0.83l1.29,-1.15l1.81,-0.91l0.96,-0.17l0.92,0.26l1.92,-0.95l1.47,-0.28l1.03,-0.8l1.43,0.04l2.78,-0.84l1.36,-1.15l0.71,-1.45l1.41,-1.26l0.3,-2.58l1.27,-1.59l0.78,1.65l0.54,0.19l1.07,-0.51l0.15,-0.6l-0.73,-1.0l0.45,-0.71l0.78,0.39l0.58,-0.3l0.28,-1.82l1.87,-2.14l1.12,-0.39l0.28,-0.58l0.62,0.17l0.53,-0.73l1.87,-0.57l1.65,1.05l1.35,1.48l3.39,0.38l0.43,-0.54l-0.46,-1.23l1.05,-1.79l1.04,-0.61l0.14,-0.55l-0.25,-0.41l0.88,-1.17l1.31,-0.77l1.3,0.27l2.1,-0.48l0.31,-0.4l-0.05,-1.3l-0.92,-0.77l1.48,0.56l1.41,1.07l2.11,0.65l0.81,-0.2l1.4,0.7l1.69,-0.66l0.8,0.19l0.64,-0.33l0.71,0.77l-1.33,1.94l-0.71,0.07l-0.35,0.51l0.24,0.86l-1.52,2.35l0.12,1.05l2.15,1.65l1.97,0.85l3.04,2.36l1.97,0.65l0.55,0.88l2.72,0.85l1.84,-1.1l2.07,-5.97l-0.42,-3.59l0.3,-1.73l0.47,-0.87l-0.31,-0.68l1.09,-3.28l0.46,-0.47l0.4,0.71l0.16,1.51l0.65,0.52l0.16,1.04l0.85,1.21l0.12,2.38l0.9,2.0l0.57,0.18l1.3,-0.78l1.69,1.7l-0.2,1.08l0.53,2.2l0.39,1.3l0.68,0.48l0.6,1.95l-0.19,1.48l0.81,1.76l6.01,3.69l-0.11,0.76l1.38,1.58l0.95,2.77l0.58,0.22l0.72,-0.41l0.8,0.9l0.61,0.01l0.46,2.41l4.81,4.71l0.66,2.02l-0.07,3.31l1.14,2.2l-0.13,2.24l-1.1,3.68l0.03,1.64l-0.47,1.89l-1.05,2.4l-1.9,1.47l-1.72,3.51l-2.38,6.09l-0.24,2.82l-1.14,0.8l-2.85,0.15l-2.31,1.19l-2.51,2.25l-3.09,-1.57l0.3,-1.15l-0.54,-0.47l-1.5,0.63l-2.01,1.94l-7.12,-2.18l-1.48,-1.63l-1.14,-3.74l-1.45,-1.26l-1.81,-0.26l0.56,-1.18l-0.61,-2.1l-0.72,-0.1l-1.14,1.82l-0.9,0.21l0.63,-0.82l0.36,-1.55l0.92,-1.31l-0.13,-2.34l-0.7,-0.22l-2.0,2.34l-1.51,0.93l-0.94,2.01l-1.35,-0.81l-0.02,-1.52l-1.57,-2.04l-1.09,-0.88l0.24,-0.33l-0.14,-0.59l-3.21,-1.69l-1.83,-0.12l-2.54,-1.35l-4.58,0.28l-6.02,1.9l-2.53,-0.13l-2.62,1.41l-2.13,0.63l-1.49,2.6l-3.49,0.31l-2.29,-0.5l-3.48,0.43l-1.6,1.47l-0.81,-0.04l-2.37,1.63l-3.26,-0.1l-3.72,-2.21l0.04,-1.05l1.19,-0.46l0.49,-0.89l0.21,-2.97l-0.28,-1.64l-1.34,-2.86l-0.38,-1.47l0.05,-1.72l-0.95,-1.7l-0.18,-0.97l-1.01,-0.99l-0.29,-1.98l-1.13,-1.75ZM784.92,393.44l2.65,1.02l3.23,-0.96l1.09,0.14l0.15,3.06l-0.85,1.13l-0.17,1.63l-0.87,-0.24l-1.57,1.91l-1.68,-0.18l-1.4,-2.36l-0.37,-2.04l-1.39,-2.51l0.04,-0.8l1.15,0.18Z", "name": "Australia"}, "IL": {"path": "M507.76,203.05l0.4,-0.78l0.18,0.4l-0.33,1.03l0.52,0.44l0.68,-0.22l-0.86,3.6l-1.16,-3.32l0.59,-0.74l-0.03,-0.41ZM508.73,200.34l0.37,-1.02l0.64,0.0l0.52,-0.51l-0.49,1.53l-0.56,-0.24l-0.48,0.23Z", "name": "Israel"}, "IN": {"path": "M623.34,207.03l-1.24,1.04l-0.97,2.55l0.22,0.51l8.04,3.87l3.42,0.37l1.57,1.38l4.92,0.88l2.18,-0.04l0.38,-0.3l0.29,-1.24l-0.32,-1.64l0.14,-0.87l0.82,-0.31l0.45,2.48l2.28,1.02l1.77,-0.38l4.14,0.1l0.38,-0.36l0.18,-1.66l-0.5,-0.65l1.37,-0.29l2.25,-1.99l2.7,-1.62l1.93,0.62l1.8,-0.98l0.79,1.14l-0.68,0.91l0.26,0.63l2.42,0.36l0.09,0.47l-0.83,0.75l0.13,1.07l-1.52,-0.29l-3.24,1.86l-0.13,1.78l-1.32,2.14l-0.18,1.39l-0.93,1.82l-1.64,-0.5l-0.52,0.37l-0.09,2.63l-0.56,1.11l0.19,0.81l-0.53,0.27l-1.18,-3.73l-1.08,-0.27l-0.38,0.31l-0.24,1.0l-0.66,-0.66l0.54,-1.06l1.22,-0.34l1.15,-2.25l-0.24,-0.56l-1.57,-0.47l-4.34,-0.28l-0.18,-1.56l-0.35,-0.35l-1.11,-0.12l-1.91,-1.12l-0.56,0.17l-0.88,1.82l0.11,0.49l1.36,1.07l-1.09,0.69l-0.69,1.11l0.18,0.56l1.24,0.57l-0.32,1.54l0.85,1.94l0.36,2.01l-0.22,0.59l-4.58,0.52l-0.33,0.42l0.13,1.8l-1.17,1.36l-3.65,1.81l-2.79,3.03l-4.32,3.28l-0.18,1.27l-4.65,1.79l-0.77,2.16l0.64,5.3l-1.06,2.49l-0.01,3.94l-1.24,0.28l-1.14,1.93l0.39,0.84l-1.68,0.53l-1.04,1.83l-0.65,0.47l-2.06,-2.05l-2.1,-6.02l-2.2,-3.64l-1.05,-4.75l-2.29,-3.57l-1.76,-8.2l0.01,-3.11l-0.49,-2.53l-0.55,-0.29l-3.53,1.52l-1.53,-0.27l-2.86,-2.77l0.85,-0.67l0.08,-0.55l-0.74,-1.03l-2.67,-2.06l1.24,-1.32l5.34,0.01l0.39,-0.49l-0.5,-2.29l-1.42,-1.46l-0.27,-1.93l-1.43,-1.2l2.31,-2.37l3.05,0.06l2.62,-2.85l1.6,-2.81l2.4,-2.73l0.07,-2.04l1.97,-1.48l-0.02,-0.65l-1.93,-1.31l-0.82,-1.78l-0.8,-2.21l0.9,-0.89l3.59,0.65l2.92,-0.42l2.33,-2.19l2.31,2.85l-0.24,2.13l0.99,1.59l-0.05,0.82l-1.34,-0.28l-0.47,0.48l0.7,3.06l2.62,1.99l2.99,1.65Z", "name": "India"}, "TZ": {"path": "M495.56,296.42l2.8,-3.12l-0.02,-0.81l-0.64,-1.3l0.68,-0.52l0.14,-1.47l-0.76,-1.25l0.31,-0.11l2.26,0.03l-0.51,2.76l0.76,1.3l0.5,0.12l1.05,-0.53l1.19,-0.12l0.61,0.24l1.43,-0.62l0.1,-0.67l-0.71,-0.62l1.57,-1.7l8.65,4.86l0.32,1.53l3.34,2.33l-1.05,2.8l0.13,1.61l1.63,1.12l-0.6,1.76l-0.01,2.33l1.89,4.03l0.57,0.43l-1.46,1.08l-2.61,0.94l-1.43,-0.04l-1.06,0.77l-2.29,0.36l-2.87,-0.68l-0.83,0.07l-0.63,-0.75l-0.31,-2.78l-1.32,-1.35l-3.25,-0.77l-3.96,-1.58l-1.18,-2.41l-0.32,-1.75l-1.76,-1.49l0.42,-1.05l-0.44,-0.89l0.08,-0.96l-0.46,-0.58l0.06,-0.56Z", "name": "Tanzania"}, "AZ": {"path": "M539.29,175.73l1.33,0.32l1.94,-1.8l2.3,3.34l1.43,0.43l-1.26,0.15l-0.35,0.32l-0.8,3.14l-0.99,0.96l0.05,1.11l-1.26,-1.13l0.7,-1.18l-0.04,-0.47l-0.74,-0.86l-1.48,0.15l-2.34,1.71l-0.03,-1.27l-2.03,-1.35l0.47,-0.62l-0.08,-0.56l-1.03,-0.79l0.29,-0.43l-0.14,-0.58l-1.13,-0.86l1.89,0.68l1.69,0.06l0.37,-0.87l-0.81,-1.37l0.42,0.06l1.63,1.72ZM533.78,180.57l0.61,0.46l0.69,-0.0l0.59,1.15l-0.68,-0.15l-1.21,-1.45Z", "name": "Azerbaijan"}, "IE": {"path": "M405.08,135.42l0.35,2.06l-1.75,2.78l-4.22,1.88l-2.84,-0.4l1.73,-3.0l-1.18,-3.53l4.6,-3.74l0.32,1.15l-0.49,1.74l0.4,0.51l1.47,-0.04l1.6,0.6Z", "name": "Ireland"}, "ID": {"path": "M756.47,287.89l0.69,4.01l2.79,1.78l0.51,-0.1l2.04,-2.59l2.71,-1.43l2.05,-0.0l3.9,1.73l2.46,0.45l0.08,15.12l-1.75,-1.54l-2.54,-0.51l-0.88,0.71l-2.32,0.06l0.69,-1.33l1.45,-0.64l0.23,-0.46l-0.65,-2.74l-1.24,-2.21l-5.04,-2.29l-2.09,-0.23l-3.68,-2.27l-0.55,0.13l-0.65,1.07l-0.52,0.12l-0.55,-1.89l-1.21,-0.78l1.84,-0.62l1.72,0.05l0.39,-0.52l-0.21,-0.66l-0.38,-0.28l-3.45,-0.0l-1.13,-1.48l-2.1,-0.43l-0.52,-0.6l2.69,-0.48l1.28,-0.78l3.66,0.94l0.3,0.71ZM757.91,300.34l-0.62,0.82l-0.1,-0.8l0.59,-1.12l0.13,1.1ZM747.38,292.98l0.34,0.72l-1.22,-0.57l-4.68,-0.1l0.27,-0.62l2.78,-0.09l2.52,0.67ZM741.05,285.25l-0.67,-2.88l0.64,-2.01l0.41,0.86l1.21,0.18l0.16,0.7l-0.1,1.68l-0.84,-0.16l-0.46,0.3l-0.34,1.34ZM739.05,293.5l-0.5,0.44l-1.34,-0.36l-0.17,-0.37l1.73,-0.08l0.27,0.36ZM721.45,284.51l-0.19,1.97l2.24,2.23l0.54,0.02l1.27,-1.07l2.75,-0.5l-0.9,1.21l-2.11,0.93l-0.16,0.6l2.22,3.01l-0.3,1.07l1.36,1.74l-2.26,0.85l-0.28,-0.31l0.12,-1.19l-1.64,-1.34l0.17,-2.23l-0.56,-0.39l-1.67,0.76l-0.23,0.39l0.3,6.17l-1.1,0.25l-0.69,-0.47l0.64,-2.21l-0.39,-2.42l-0.39,-0.34l-0.8,-0.01l-0.58,-1.29l0.98,-1.6l0.35,-1.96l1.32,-3.87ZM728.59,296.27l0.38,0.49l-0.02,1.28l-0.88,0.49l-0.53,-0.47l1.04,-1.79ZM729.04,286.98l0.27,-0.05l-0.02,0.13l-0.24,-0.08ZM721.68,284.05l0.16,-0.32l1.89,-1.65l1.83,0.68l3.16,0.35l2.94,-0.1l2.39,-1.66l-1.73,2.13l-1.66,0.43l-2.41,-0.48l-4.17,0.13l-2.39,0.51ZM730.55,310.47l1.11,-1.93l2.03,-0.82l0.08,0.62l-1.45,1.67l-1.77,0.46ZM728.12,305.88l-0.1,0.38l-3.46,0.66l-2.91,-0.27l-0.0,-0.25l1.54,-0.41l1.66,0.73l1.67,-0.19l1.61,-0.65ZM722.9,310.24l-0.64,0.03l-2.26,-1.2l1.11,-0.24l1.78,1.41ZM716.26,305.77l0.88,0.51l1.28,-0.17l0.2,0.35l-4.65,0.73l0.39,-0.67l1.15,-0.02l0.75,-0.73ZM711.66,293.84l-0.38,-0.16l-2.54,1.01l-1.12,-1.44l-1.69,-0.13l-1.16,-0.75l-3.04,0.77l-1.1,-1.15l-3.31,-0.11l-0.35,-3.05l-1.35,-0.95l-1.11,-1.98l-0.33,-2.06l0.27,-2.14l0.9,-1.01l0.37,1.15l2.09,1.49l1.53,-0.48l1.82,0.08l1.38,-1.19l1.0,-0.18l2.28,0.67l2.26,-0.53l1.52,-3.64l1.01,-0.99l0.78,-2.57l4.1,0.3l-1.11,1.77l0.02,0.46l1.7,2.2l-0.23,1.39l2.07,1.71l-2.33,0.42l-0.88,1.9l0.1,2.05l-2.4,1.9l-0.06,2.45l-0.7,2.79ZM692.58,302.03l0.35,0.26l4.8,0.25l0.78,-0.97l4.17,1.09l1.13,1.68l3.69,0.45l2.13,1.04l-1.8,0.6l-2.77,-0.99l-4.8,-0.12l-5.24,-1.41l-1.84,-0.25l-1.11,0.3l-4.26,-0.97l-0.7,-1.14l-1.59,-0.13l1.18,-1.65l2.74,0.13l2.87,1.13l0.26,0.68ZM685.53,299.17l-2.22,0.04l-2.06,-2.03l-3.15,-2.01l-2.93,-3.51l-3.11,-5.33l-2.2,-2.12l-1.64,-4.06l-2.32,-1.69l-1.27,-2.07l-1.96,-1.5l-2.51,-2.65l-0.11,-0.66l4.81,0.53l2.15,2.38l3.31,2.74l2.35,2.66l2.7,0.17l1.95,1.59l1.54,2.17l1.59,0.95l-0.84,1.71l0.15,0.52l1.44,0.87l0.79,0.1l0.4,1.58l0.87,1.4l1.96,0.39l1.0,1.31l-0.6,3.01l-0.09,3.5Z", "name": "Indonesia"}, "UA": {"path": "M492.5,162.44l1.28,-2.49l1.82,0.19l0.66,-0.23l0.09,-0.71l-0.25,-0.75l-0.79,-0.72l-0.33,-1.21l-0.86,-0.62l-0.02,-1.19l-1.13,-0.86l-1.15,-0.19l-2.04,-1.0l-1.66,0.32l-0.66,0.47l-0.92,-0.0l-0.84,0.78l-2.48,0.7l-1.18,-0.71l-3.07,-0.36l-0.89,0.43l-0.24,-0.55l-1.11,-0.7l0.35,-0.93l1.26,-1.02l-0.54,-1.23l2.04,-2.43l1.4,-0.62l0.25,-1.19l-1.04,-2.39l0.83,-0.13l1.28,-0.84l1.8,-0.07l2.47,0.26l2.86,0.81l1.88,0.06l0.86,0.44l1.04,-0.41l0.77,0.66l2.18,-0.15l0.92,0.3l0.52,-0.34l0.15,-1.53l0.56,-0.54l2.85,-0.05l0.84,-0.72l3.04,-0.18l1.23,1.46l-0.48,0.77l0.21,1.03l0.36,0.32l1.8,0.14l0.93,2.08l3.18,1.15l1.94,-0.45l1.67,1.49l1.4,-0.03l3.35,0.96l0.02,0.54l-0.96,1.59l0.47,1.97l-0.26,0.7l-2.36,0.28l-1.29,0.89l-0.23,1.38l-1.83,0.27l-1.58,0.97l-2.41,0.21l-2.16,1.17l-0.21,0.38l0.34,2.26l1.23,0.75l2.13,-0.08l-0.14,0.31l-2.65,0.53l-3.23,1.69l-0.87,-0.39l0.42,-1.1l-0.25,-0.52l-2.21,-0.73l2.35,-1.06l0.12,-0.65l-0.93,-0.82l-3.62,-0.74l-0.13,-0.89l-0.46,-0.34l-2.61,0.59l-0.91,1.69l-1.71,2.04l-0.86,-0.4l-1.62,0.27Z", "name": "Ukraine"}, "QA": {"path": "M549.33,221.64l-0.76,-0.23l-0.14,-1.64l0.84,-1.29l0.47,0.52l0.04,1.34l-0.45,1.3Z", "name": "Qatar"}, "MZ": {"path": "M508.58,318.75l-0.34,-2.57l0.51,-2.05l3.55,0.63l2.5,-0.38l1.02,-0.76l1.49,0.01l2.74,-0.98l1.66,-1.2l0.5,9.24l0.41,1.23l-0.68,1.67l-0.93,1.71l-1.5,1.5l-5.16,2.28l-2.78,2.73l-1.02,0.53l-1.71,1.8l-0.98,0.57l-0.35,2.41l1.16,1.94l0.49,2.17l0.43,0.31l-0.06,2.06l-0.39,1.17l0.5,0.72l-0.25,0.73l-0.92,0.83l-5.12,2.39l-1.22,1.36l0.21,1.13l0.58,0.39l-0.11,0.72l-1.22,-0.01l-0.73,-2.97l0.42,-3.09l-1.78,-5.37l2.49,-2.81l0.69,-1.89l0.44,-0.43l0.28,-1.53l-0.39,-0.93l0.59,-3.65l-0.01,-3.26l-1.49,-1.16l-1.2,-0.22l-1.74,-1.17l-1.92,0.01l-0.29,-2.08l7.06,-1.96l1.28,1.09l0.89,-0.1l0.67,0.44l0.1,0.73l-0.51,1.29l0.19,1.81l1.75,1.83l0.65,-0.13l0.71,-1.65l1.17,-0.86l-0.26,-3.47l-1.05,-1.85l-1.04,-0.94Z", "name": "Mozambique"}}, "height": 440.70631074413296, "projection": {"type": "mill", "centralMeridian": 11.5}, "width": 900.0});
jQuery.fn.vectorMap('addMap', 'za_mill_en',{"insets": [{"width": 900, "top": 0, "height": 755.9203590698716, "bbox": [{"y": 2504518.9969296367, "x": 1834359.851696376}, {"y": 4040832.9910565205, "x": 3663497.773600647}], "left": 0}], "paths": {"ZA-WC": {"path": "M71.99,532.27l1.92,0.54l0.51,-0.36l0.42,-6.32l2.7,-3.5l0.74,-4.21l3.27,-2.99l1.27,-4.12l2.51,-2.31l1.61,0.08l5.36,2.71l2.68,-0.94l2.61,-1.42l2.73,-3.77l2.31,-4.12l1.44,-4.66l2.46,-4.29l2.58,1.39l0.56,-0.19l0.75,-1.69l1.4,-1.14l2.67,-0.27l3.72,2.77l3.34,1.79l2.34,1.71l1.95,2.34l1.48,2.39l2.45,2.38l5.14,1.74l-0.04,6.82l-1.7,2.58l1.15,3.47l-1.25,4.12l1.79,11.42l1.23,3.08l2.0,2.5l-0.39,2.75l1.03,5.65l0.02,2.58l0.58,1.61l1.32,1.1l1.27,3.59l-0.67,5.21l0.96,5.16l-0.3,2.6l-1.15,2.09l-0.9,4.01l0.37,0.49l3.52,0.36l2.45,1.47l1.48,-0.53l1.23,0.45l0.66,-0.15l3.15,-2.06l-0.78,2.76l-0.01,1.02l0.43,0.74l2.07,1.04l1.81,3.09l1.75,0.43l0.9,0.73l2.02,-0.44l1.92,2.17l1.59,0.21l-0.14,4.33l0.98,4.54l-2.51,2.7l-1.18,2.15l0.79,4.77l2.62,4.76l-0.68,7.37l3.32,3.3l0.45,0.08l3.16,-1.44l0.45,-1.16l-1.23,-2.37l0.28,-1.74l1.69,-4.4l0.81,-0.67l1.26,0.55l2.91,-0.96l1.56,-1.9l2.47,-1.09l1.28,-0.93l3.62,-0.12l3.25,-0.9l5.04,-3.83l1.78,-2.22l1.59,-0.83l3.3,-3.28l1.3,-0.18l0.75,0.56l1.39,2.6l0.01,2.21l-3.96,4.99l-3.19,2.93l-0.19,2.96l0.91,3.91l1.56,4.6l2.63,5.4l0.84,3.26l1.36,1.72l3.81,2.54l3.01,3.36l1.09,1.85l1.35,0.66l2.66,2.22l3.68,-0.66l3.14,-1.44l1.16,0.15l2.19,0.99l5.57,-0.26l4.46,-3.64l1.11,-3.14l0.41,-3.4l0.61,-2.27l2.15,-2.26l3.88,-1.32l5.65,-1.02l4.25,-1.89l3.19,-5.92l1.05,-3.17l2.32,-0.9l1.03,-0.77l2.76,-3.31l6.46,-1.74l5.51,-3.59l1.68,-2.94l2.54,-1.21l1.61,-0.29l2.41,0.44l2.06,-0.61l3.88,1.17l3.7,0.67l3.48,-0.81l3.16,-2.12l1.57,-2.33l3.08,-3.47l1.44,-0.45l1.16,-2.32l-1.31,-3.59l0.48,-2.59l0.18,-3.87l0.77,-1.75l2.25,-0.57l6.47,-15.08l1.35,-1.8l9.86,4.86l2.03,1.47l2.5,2.52l2.58,3.54l4.95,1.58l3.42,1.91l3.73,0.17l2.5,0.98l3.93,0.22l4.31,1.71l0.63,2.73l1.75,2.68l0.6,0.08l7.22,-6.53l1.26,-2.24l3.73,-4.92l3.43,-1.79l2.4,-2.34l6.71,0.06l3.75,-1.19l1.85,-0.19l3.74,0.47l4.58,2.47l1.24,1.04l0.47,0.96l0.01,1.56l2.59,1.93l0.42,0.03l3.91,-2.27l1.63,-2.18l1.55,-0.57l1.27,0.17l2.55,3.22l4.15,1.01l0.41,1.16l-1.45,2.56l-0.21,1.87l0.21,0.4l1.37,0.72l1.09,1.43l0.34,1.26l-1.26,1.72l-1.72,1.12l-0.66,1.0l-0.19,1.92l-0.72,0.96l0.12,2.3l-0.47,1.31l-2.02,1.06l-1.29,1.92l-7.64,3.16l-2.09,-0.34l-5.05,-1.57l-2.03,0.81l-2.63,1.87l-2.14,4.15l-1.71,0.98l-8.39,0.93l-2.69,1.25l-3.89,-0.37l-4.83,4.35l-0.43,2.56l-0.02,2.67l1.4,2.41l0.75,2.63l0.32,2.0l-0.22,2.84l1.91,2.31l1.0,2.12l1.96,1.77l-1.96,1.98l-3.44,-0.26l-3.66,0.29l-4.21,1.54l-2.21,-3.02l-0.28,-0.17l-0.57,0.3l0.28,3.96l-0.68,1.1l-3.26,1.41l-2.6,3.33l-0.38,1.97l-1.66,2.35l0.73,2.77l-0.79,2.28l-9.32,14.19l-0.53,2.29l0.72,2.56l0.37,0.29l8.54,0.21l6.83,-0.91l12.65,0.54l9.56,2.06l3.99,1.68l2.68,2.05l1.03,4.04l2.63,3.37l-0.6,1.13l-9.78,4.12l-4.01,4.31l0.25,0.68l4.96,0.45l1.45,-0.47l1.21,0.2l1.89,0.71l1.15,1.6l6.33,2.9l-2.31,3.48l-0.08,2.58l-2.49,0.1l-8.82,1.92l-1.31,0.55l-1.99,1.55l-0.63,1.49l0.36,1.49l0.79,0.77l-16.91,-1.51l-0.59,-2.31l-1.94,-0.38l-1.42,-0.67l-0.2,0.43l0.32,1.14l1.46,0.96l0.45,0.84l-2.54,-0.48l-2.62,0.46l-4.29,-1.26l-2.92,-1.52l-0.46,-1.41l1.2,-0.32l-0.99,-1.14l-3.84,-0.69l-0.39,0.59l1.28,1.89l0.87,0.75l-7.19,-2.22l-2.67,-0.13l-2.12,0.62l-2.89,2.22l-2.14,1.06l-2.35,0.5l-5.06,-0.53l-2.35,0.05l-4.79,1.09l-2.19,1.25l-1.61,1.66l-0.75,1.39l0.21,1.28l1.44,1.24l-0.23,0.18l-8.08,1.32l-2.13,0.87l-1.62,1.72l-0.17,1.12l0.26,1.86l-1.48,2.32l-3.42,1.92l-4.46,1.19l-2.31,0.13l-5.66,-1.08l-1.99,-1.15l-1.48,-0.33l-5.41,1.45l-1.41,1.44l-3.55,1.46l-2.27,0.32l-2.29,-0.18l-8.94,-3.12l-2.24,-0.47l-5.37,-0.46l-2.7,0.27l-2.37,1.17l-3.69,1.19l-0.23,0.42l0.33,0.34l1.39,0.22l1.15,0.82l0.54,1.06l-0.34,0.95l-0.75,0.28l-9.7,-1.63l-7.67,0.98l-2.4,1.03l-2.05,1.53l-3.93,4.63l-1.91,0.63l-1.18,1.48l-3.15,1.49l-1.86,1.96l-0.28,0.81l-1.76,0.26l-2.28,0.93l-4.13,2.81l-1.63,2.03l0.65,1.99l-2.82,1.18l-2.29,-0.76l-4.27,-3.19l-1.15,-0.52l-8.79,0.25l-1.06,0.29l-0.84,0.79l-0.94,0.09l-0.88,-1.12l-2.72,-1.57l-4.15,-3.91l-2.87,-1.54l-2.7,-2.35l-1.65,-0.22l-1.32,0.35l-0.95,0.69l-1.1,-0.3l3.31,-4.62l-0.24,-1.9l-0.89,-2.08l-1.18,-1.94l-2.05,-1.96l-0.86,-0.16l-3.78,0.73l-3.27,-0.22l-1.24,-0.75l-0.97,-1.69l-0.65,-0.47l1.17,-0.32l0.65,-0.9l0.98,-2.78l-0.1,-0.45l-1.41,0.46l-1.81,2.42l-4.8,-0.2l-1.65,0.56l-5.3,0.84l-1.85,1.34l-0.84,-0.32l-0.38,-0.56l0.49,-1.32l-0.39,-2.41l1.13,-1.63l0.48,-1.38l-0.93,-4.1l1.16,-0.98l0.71,-1.52l-2.3,-3.28l-1.12,-0.63l-3.31,-0.76l-5.12,-0.46l-5.11,0.23l-4.41,2.11l-2.18,2.6l0.06,1.59l1.02,1.12l0.79,3.02l-0.45,4.68l0.22,1.26l0.43,0.45l-1.27,-0.56l-2.02,-2.03l-1.28,-2.37l0.18,-2.48l-0.77,-0.67l-0.54,-1.61l-0.66,-0.83l-1.47,-0.47l-0.46,-1.04l0.4,-1.02l1.09,-0.75l0.32,-2.39l0.57,-1.18l-0.4,-0.6l-1.36,0.32l-0.57,-1.42l1.95,-2.75l1.11,-3.49l1.58,-1.19l3.81,-0.22l1.06,-2.54l-0.29,-1.52l-1.02,-1.55l-1.8,-7.39l-1.45,-2.73l-0.29,-1.15l-3.12,-3.3l-1.3,-0.89l-0.3,-4.26l-1.77,-3.23l-1.68,-1.7l-5.62,-3.7l0.4,-1.0l-0.36,-1.31l-4.12,-7.19l-2.58,-2.36l-2.08,-0.94l-1.65,-2.47l0.92,-0.43l0.99,-0.02l1.51,2.18l-0.07,0.75l1.93,1.67l1.73,2.04l0.85,0.34l1.17,-0.5l0.19,-0.47l-0.22,-0.69l-1.24,-1.26l-0.51,-1.86l-1.27,-0.53l-1.52,-1.58l0.01,-3.14l-0.23,-1.05l-0.78,-1.19l-1.6,-0.78l-3.32,0.12l-0.3,0.58l0.44,0.85l-1.56,0.94l-0.32,-0.34l-1.18,-3.13l0.31,-1.16l-1.22,-3.48l0.99,-2.51l-0.36,-0.81l-1.68,-1.88l0.94,-0.13l1.98,-1.44l0.34,-1.09l0.13,-2.93l3.04,-1.19l0.76,1.33l2.91,2.5l2.36,0.89l2.47,-0.56l1.86,-1.37l6.63,-6.33l1.38,-2.53l2.08,-7.19l0.22,-2.49l-0.26,-4.3l-0.94,-2.34l0.24,-0.77l1.34,-1.77l0.25,-2.46l-2.12,-8.07l-0.61,-6.46l-1.29,-3.96l0.05,-3.92l-2.26,-3.99l-0.05,-1.69l-1.16,-4.24l-0.98,-2.13l-3.86,-5.16l-0.54,-1.33l-2.5,-3.46l-2.61,-2.6l-0.8,-2.08l-2.64,-2.45l-2.11,-3.12l-1.56,-1.18l-1.24,-4.37l-2.93,-2.48l-2.2,-3.65Z", "name": "Western Cape"}, "ZA-FS": {"path": "M468.59,347.02l0.37,-0.56l1.42,0.16l1.05,-0.8l1.95,-3.01l-0.15,-1.27l1.57,-2.67l2.42,-0.39l0.91,-1.1l1.06,-0.63l2.1,-2.91l-0.24,-1.33l1.93,-1.98l1.81,-0.13l1.16,-0.48l4.77,-3.96l3.44,-0.89l0.87,-0.78l0.99,0.41l0.79,-0.13l1.69,-0.89l0.91,-0.99l3.01,1.07l0.7,-0.07l2.6,-2.27l5.63,-3.12l1.36,0.11l1.42,1.63l1.1,0.62l2.37,-0.01l4.18,0.9l1.28,4.44l0.97,0.5l1.83,-0.39l0.61,-1.09l-0.89,-2.45l1.35,-2.49l1.19,-1.55l4.82,-4.39l1.44,-0.42l0.6,-0.6l0.38,-2.95l0.84,-1.09l1.2,-0.72l1.29,-0.24l1.17,0.73l0.45,-0.04l0.84,-1.45l1.0,-0.5l2.54,0.36l5.43,0.05l0.5,-0.25l0.15,-0.47l-0.29,-0.62l-1.07,-0.57l-1.79,-0.38l-0.25,-0.56l0.9,-1.88l0.7,-0.15l0.29,-0.42l0.04,-3.37l-3.99,-4.53l0.83,-1.02l3.21,-0.93l2.26,-2.29l1.65,0.43l1.19,-0.74l0.09,-2.74l2.41,-2.58l1.28,-0.06l2.11,0.89l0.38,-0.27l0.68,-2.08l1.53,-1.34l2.8,-1.47l1.17,0.79l0.51,-0.13l1.89,-1.57l3.07,2.38l0.62,-0.36l-0.2,-3.79l0.16,-0.73l0.42,-0.28l1.7,2.36l1.95,0.97l2.49,0.34l6.94,-0.37l-0.25,1.62l0.96,0.59l1.27,-0.55l2.14,-1.56l3.55,-3.66l1.34,-0.2l2.26,1.83l1.01,0.34l4.89,-1.32l1.85,-2.68l0.45,-2.94l0.57,-0.5l2.18,-0.29l0.37,-0.51l-0.26,-0.89l0.33,-0.16l1.08,-0.06l0.66,-0.37l1.48,1.99l4.62,-0.42l0.91,1.02l1.09,0.15l0.7,-0.58l0.15,-1.08l1.97,-0.78l3.78,-0.65l2.5,-2.62l1.54,-0.74l1.54,1.33l-0.65,1.11l0.52,1.39l3.14,5.03l2.54,1.22l2.49,2.2l0.49,-0.02l1.22,-0.86l0.45,1.34l1.24,1.14l3.3,-0.54l3.68,2.16l3.83,0.31l0.75,1.76l1.02,1.01l0.88,0.08l1.26,-1.08l1.11,-0.02l1.79,2.21l1.35,0.56l-0.72,2.2l0.52,0.49l3.88,-2.76l2.82,-0.32l0.28,-0.49l-0.15,-0.53l-1.56,-1.34l1.02,-0.54l2.27,0.84l4.2,2.69l1.49,0.48l1.18,0.82l1.86,-0.45l0.86,0.7l1.04,0.03l1.57,-1.59l2.96,-1.29l0.95,0.1l2.37,1.56l1.03,0.24l0.24,2.47l0.97,1.08l1.22,2.75l0.85,1.02l0.89,0.19l1.67,-0.91l2.89,0.23l2.18,1.76l1.62,0.6l1.08,0.89l1.68,0.46l-0.2,1.04l0.71,0.89l0.97,0.09l1.7,-0.56l0.66,0.07l2.11,1.18l0.73,0.98l0.55,2.01l0.88,0.95l0.15,1.3l3.04,2.75l-0.29,0.91l0.28,0.83l4.74,5.47l1.03,0.07l1.36,-0.87l1.56,-0.17l0.45,-0.5l0.01,-1.2l0.33,-0.5l1.04,-0.41l1.22,-0.02l-1.79,0.97l-0.43,2.75l0.36,0.68l2.28,0.83l0.57,2.38l-0.16,0.88l-3.45,1.86l-1.38,1.78l0.14,1.29l1.15,2.09l-0.23,3.65l1.03,1.91l-1.96,4.38l-0.97,1.44l-0.13,3.44l-1.29,1.8l-1.0,2.96l0.57,1.46l1.77,1.54l0.45,1.39l-0.53,2.31l-2.23,1.85l-1.7,3.12l-3.8,0.3l-1.41,0.51l-4.83,5.57l-3.46,1.55l-2.16,2.46l-3.86,0.91l-1.48,1.47l-0.87,1.41l0.32,1.72l-0.45,1.07l-2.56,0.83l-2.33,-0.44l-2.99,0.57l-4.06,1.49l-2.13,2.36l-0.31,2.58l-1.82,1.86l-1.81,4.66l-3.45,-1.16l-1.55,-2.8l-0.91,-0.77l-2.47,-0.14l-0.41,-0.59l-0.39,-2.4l-0.92,-2.3l-1.84,-1.64l-1.09,0.03l-3.23,2.05l-8.58,0.71l-1.24,0.48l-1.26,1.18l-1.45,2.39l-0.95,0.83l-0.99,0.36l-2.34,0.03l-1.24,-0.47l-4.44,0.33l-2.97,4.08l-4.49,5.11l-0.31,1.21l-1.54,0.05l-1.61,-1.4l-1.25,-0.22l-1.19,0.64l-1.23,2.51l-1.25,0.54l-6.15,-0.4l-0.4,0.55l0.29,0.73l-1.71,1.07l-0.48,2.5l-0.71,0.2l-1.64,2.05l-1.42,0.47l-0.26,0.55l1.09,1.43l-1.11,-0.05l-0.37,0.41l0.14,1.64l-1.15,2.06l-3.06,3.59l-1.45,0.7l-0.5,0.65l0.31,2.71l-3.02,1.11l-1.08,0.76l-0.4,2.36l-0.43,0.56l-1.49,0.81l-0.27,0.61l0.68,1.35l-0.06,0.58l-2.8,2.91l-0.87,2.01l-1.75,0.31l-0.82,1.91l-2.02,1.27l-7.37,2.23l-2.22,2.07l-0.36,-0.61l-0.9,-0.19l-0.55,0.35l-0.51,1.07l-0.54,-0.46l-0.9,0.16l-1.15,3.08l0.2,0.53l2.55,1.72l1.55,2.23l6.48,14.54l3.74,3.4l0.71,1.1l0.75,2.84l1.08,1.91l0.7,0.34l1.99,-0.13l0.99,0.41l-0.82,1.05l-1.23,3.01l0.13,1.84l1.19,3.15l-0.07,0.76l-0.69,0.3l-0.19,0.55l1.14,2.43l0.59,0.19l0.76,-0.34l0.41,0.39l-0.56,0.75l-2.13,-0.09l-1.31,0.44l-0.37,1.36l1.53,1.36l-0.55,0.32l-1.68,-0.73l-0.79,0.1l-0.45,0.6l0.13,0.9l1.37,0.75l-0.82,1.18l-1.91,0.13l-0.57,-0.62l-0.74,-0.22l-0.52,0.45l-1.07,0.07l-1.11,0.92l-3.0,0.01l-0.32,0.38l0.25,1.24l-0.79,0.58l-3.03,-0.77l-2.87,0.48l-0.64,0.33l-0.17,0.55l1.56,1.76l0.22,0.74l-2.08,-0.13l-1.41,0.45l-0.99,0.77l-0.61,1.17l0.28,1.22l-0.34,0.31l-2.99,0.37l-1.29,1.07l-0.72,-0.29l-1.74,-1.62l-1.66,-0.07l-1.58,1.05l-1.67,0.14l-1.28,0.81l-1.34,-0.49l-1.46,0.38l-0.25,-0.67l-1.12,-0.45l-4.45,-0.29l-2.82,-1.64l-0.43,-2.06l-1.81,-1.79l-7.34,1.27l-1.49,-0.12l-1.13,-2.15l-2.97,-1.04l-1.77,-2.13l-1.59,-0.36l-0.78,0.67l-0.18,1.78l-3.96,-0.71l-4.1,1.29l-2.42,1.78l-1.61,-1.21l-1.14,-0.15l-1.29,1.03l0.09,1.78l-0.52,0.68l-4.66,3.54l-2.63,1.28l-1.41,-0.18l-1.69,-0.87l-1.89,-0.46l-0.61,-2.4l-0.55,-0.55l-1.84,-0.23l-6.0,0.62l-3.76,-2.91l-1.92,-1.1l-3.89,-0.16l-0.87,-1.88l-0.86,-0.82l-4.01,-2.49l-2.95,-3.38l-4.76,-4.13l-0.76,-2.8l-2.63,-1.25l-0.8,-0.74l-1.17,-2.11l-2.13,-0.85l-6.69,-12.74l-4.46,-1.02l-1.36,-0.71l-0.39,-0.53l-0.84,-3.41l-0.8,-0.53l-2.2,-0.35l-1.48,-0.88l-2.59,-3.02l-0.59,-0.28l-1.71,0.02l-0.56,-1.45l-2.66,-0.51l-3.35,-3.82l-1.19,-3.63l17.12,-34.46l12.02,-24.99l0.11,-1.07l-1.52,-1.6l-0.37,-1.53l0.21,-3.65l0.99,-3.08l1.56,-2.79l1.22,-4.31l0.12,-1.94l-1.13,-1.82l0.17,-0.52l2.77,-2.23l1.71,-2.87l1.61,-4.46l0.2,-2.64Z", "name": "Orange Free State"}, "ZA-EC": {"path": "M362.1,631.25l1.02,1.79l1.06,0.91l4.45,-1.56l3.57,-0.29l3.53,0.27l2.7,-2.53l-0.02,-0.58l-2.21,-2.0l-0.97,-2.07l-1.73,-1.93l0.21,-2.71l-0.35,-2.21l-0.77,-2.7l-1.35,-2.24l0.28,-4.6l2.36,-1.89l1.96,-2.16l3.8,0.36l2.81,-1.27l8.56,-0.98l2.05,-1.25l2.02,-4.03l2.51,-1.79l1.76,-0.7l4.67,1.55l2.51,0.35l7.86,-3.25l1.33,-1.96l2.06,-1.09l0.75,-1.76l-0.1,-2.33l0.69,-0.85l0.18,-1.89l0.35,-0.61l1.9,-1.3l1.46,-2.25l-0.48,-1.65l-1.19,-1.57l-1.34,-0.75l0.17,-1.47l1.53,-2.76l-0.55,-1.54l0.33,-1.61l1.22,-0.45l3.35,-0.0l5.05,-1.8l8.99,-0.87l0.36,-0.37l0.71,-9.18l0.62,-3.25l1.09,-1.55l0.81,-4.02l7.14,-0.22l3.97,-0.58l2.36,-1.18l2.08,-0.53l1.45,-1.55l2.21,-0.94l3.02,-2.16l5.2,-1.17l8.2,-3.74l7.27,1.55l1.9,-1.08l0.6,-3.18l3.15,-3.91l0.33,-1.52l1.45,-2.49l-0.22,-2.12l1.41,-2.1l0.44,-1.59l-0.99,-4.04l0.15,-0.98l1.24,-1.48l0.43,-1.5l-2.14,-3.04l-0.8,-8.09l5.7,-0.58l1.53,0.2l0.45,2.14l0.58,0.73l2.0,0.51l1.76,0.9l1.84,0.19l2.86,-1.39l4.78,-3.64l0.77,-1.18l-0.19,-1.46l0.85,-0.64l2.63,1.42l2.64,-1.89l3.89,-1.22l2.61,0.7l1.48,0.04l0.68,-1.16l0.1,-1.27l1.04,0.19l1.84,2.17l2.83,0.96l0.37,1.2l1.04,1.1l1.82,0.14l6.99,-1.3l1.37,1.43l0.41,2.02l0.78,0.7l3.39,1.57l3.68,0.07l0.7,0.29l-0.36,0.5l0.38,0.63l2.21,-0.67l0.7,0.38l1.22,0.0l0.95,-0.72l1.78,-0.18l1.54,-1.02l1.2,0.1l1.53,1.54l1.21,0.4l0.86,-0.33l0.65,-0.79l3.15,-0.47l0.71,-0.97l-0.33,-1.01l0.39,-0.8l0.86,-0.67l0.99,-0.32l2.03,0.19l0.71,-0.32l0.19,-0.46l-0.35,-1.16l-1.22,-1.16l0.05,-0.4l2.47,-0.42l3.21,0.78l1.34,-0.87l0.18,-0.8l-0.27,-0.63l2.64,0.09l1.31,-0.99l0.98,-0.04l0.51,-0.38l0.78,0.78l2.64,-0.22l1.24,-1.78l-0.35,-0.73l-1.15,-0.5l0.11,-0.44l1.92,0.78l1.49,-0.72l0.06,-0.65l-1.66,-1.28l0.06,-0.55l0.8,-0.3l2.37,0.07l1.12,-1.28l-0.47,-1.14l-0.68,-0.31l-0.85,0.21l-0.79,-1.67l1.03,-0.23l1.68,0.35l2.2,-0.51l1.31,2.69l2.78,1.54l0.44,1.26l2.67,3.01l0.67,2.16l3.4,2.5l3.02,3.25l1.74,1.04l1.91,0.57l2.48,0.3l1.98,-0.64l1.91,1.31l2.3,0.9l6.5,0.55l1.26,0.52l0.55,-0.37l-0.16,-3.08l0.28,-1.1l2.14,-2.0l1.14,-3.22l-0.1,-1.33l-0.71,-1.35l0.3,-0.51l4.59,-3.44l0.87,-1.02l0.4,-1.46l-0.15,-1.37l-1.58,-1.17l-0.44,-0.6l0.09,-0.83l1.78,-1.38l3.25,-0.9l2.43,-2.49l1.43,-2.54l0.94,-0.79l1.15,-0.17l2.77,0.34l4.52,-2.0l3.42,1.05l2.13,0.01l4.89,-1.77l3.66,-0.76l3.53,-1.38l8.24,-5.09l3.01,3.7l2.29,1.97l0.22,1.61l-1.46,1.44l-0.91,1.48l-1.91,-0.05l-2.88,1.66l-0.14,0.71l0.55,1.2l-1.26,0.72l-1.66,2.09l-0.95,-0.18l-0.58,0.27l-2.5,3.1l-3.77,-1.55l-0.86,0.24l-1.53,3.31l-0.32,1.37l1.08,2.02l-0.68,3.71l1.08,2.14l2.43,0.57l1.27,2.0l1.2,1.15l5.48,1.06l1.11,-0.69l0.41,-3.32l0.78,-0.44l3.72,1.84l0.3,0.71l0.06,1.95l0.68,0.64l9.16,2.44l3.34,1.62l1.31,-0.05l1.29,-1.07l3.24,-0.11l2.1,-1.06l4.3,2.69l1.81,0.64l1.83,1.11l1.03,0.09l1.81,-0.44l5.23,2.04l1.1,-0.66l0.85,0.02l1.44,1.46l4.32,2.8l1.24,0.22l0.96,-0.34l0.28,1.31l0.66,0.45l0.93,1.48l0.79,0.26l0.79,-0.18l1.31,0.91l1.71,0.28l0.66,2.01l2.04,1.11l0.52,0.66l0.89,5.5l1.65,1.22l0.36,1.82l1.1,0.9l-3.76,4.77l-1.64,1.16l-1.75,3.58l-2.84,3.18l-7.94,7.17l-4.3,1.37l-2.41,1.42l-0.56,1.16l-3.26,3.81l-1.68,0.83l-0.81,1.68l-1.91,0.74l-2.75,2.6l-2.92,1.19l-1.45,0.97l-2.84,0.44l-0.42,0.75l0.3,0.7l-0.97,2.04l-1.61,0.9l-1.09,2.62l-1.8,1.26l-1.82,1.9l-0.9,1.24l-1.4,3.07l-0.83,0.6l-0.3,1.04l-3.64,1.65l-1.33,2.9l-1.47,2.17l-6.72,6.85l-5.63,7.3l-2.85,1.67l-7.9,7.08l-1.29,1.76l-1.85,1.16l-3.02,3.32l-0.77,1.84l-5.98,4.41l-4.03,2.56l-0.36,1.1l-1.12,0.83l-6.85,3.95l-3.15,0.92l-1.46,1.33l-1.06,1.69l-0.93,3.11l-1.12,1.2l-5.53,4.36l-1.74,0.64l-2.05,2.03l-0.26,1.01l-2.52,1.09l-1.14,1.18l-4.28,1.34l-1.01,0.59l-4.96,4.93l-1.76,1.37l-3.93,1.44l-0.94,0.68l-1.52,1.86l-1.13,-0.21l-0.57,0.26l-0.37,1.46l-1.21,1.24l-4.16,2.9l-0.92,-0.26l-0.46,0.86l-6.27,4.33l-4.14,1.9l-1.32,1.1l-0.95,1.68l-1.61,0.34l-4.71,2.4l-3.57,0.68l-3.14,2.55l-3.76,0.6l-1.81,1.02l-5.95,2.22l-0.6,0.48l-0.49,1.16l-1.2,0.19l-5.21,2.47l-2.06,0.53l-2.18,0.11l-6.14,-0.59l-1.96,0.6l-3.32,-1.64l-7.29,-1.38l-7.58,-0.39l-4.95,0.69l-4.5,1.34l-4.13,1.9l-1.9,1.4l-1.47,1.76l-1.08,2.08l-1.06,4.98l0.48,1.07l0.93,0.42l0.58,0.94l1.52,1.05l1.36,1.94l-0.08,0.3l-1.72,-0.44l-3.63,1.33l-6.1,-1.28l-4.05,0.33l-1.51,-0.82l-1.86,-0.31l-1.8,-1.25l-2.08,-0.8l-4.78,-1.19l-5.08,-0.1l-4.96,0.65l-3.29,0.9l-1.31,0.66l-0.98,1.04l0.64,2.76l-1.38,2.03l-3.29,2.79l-0.38,0.93l0.21,1.01l1.21,1.06l-1.24,1.24l-0.76,-0.89l-1.26,-0.39l-3.7,-0.09l-4.29,-0.93l-4.49,0.54l-4.66,-1.16l-2.29,-1.12l-2.01,-1.67l-1.15,-0.4l-6.6,-0.74l-5.35,-2.44l-9.78,-0.84l-3.56,-1.09l-5.82,-0.56l-9.15,-2.02l0.0,-2.35l2.51,-3.78l-0.17,-0.58l-6.66,-3.05l-1.18,-1.62l-2.04,-0.77l-1.43,-0.24l-1.49,0.47l-4.03,-0.36l3.23,-3.57l9.84,-4.14l0.98,-1.67l-0.04,-0.44l-2.67,-3.36l-1.04,-4.1l-2.98,-2.39l-4.23,-1.79l-9.7,-2.08l-12.72,-0.55l-6.84,0.92l-8.21,-0.2l-0.6,-1.99l0.43,-1.98l9.35,-14.26l0.85,-2.45l-0.76,-2.6l1.6,-2.26l0.37,-1.95l2.49,-3.19l3.06,-1.25l1.04,-1.5l-0.16,-3.26ZM724.98,467.09l4.15,0.53l2.54,-0.6l0.67,0.52l1.3,3.34l2.35,1.57l0.81,1.38l1.36,1.38l-0.71,0.03l-0.66,0.49l-0.19,0.47l0.23,0.66l1.83,1.66l1.31,0.27l0.58,0.46l0.43,1.51l1.06,0.88l0.63,0.08l0.79,-0.71l0.75,0.05l-0.54,0.91l0.19,1.38l3.06,2.62l0.21,0.67l-1.22,-0.35l-0.98,1.19l-1.05,-0.15l-0.55,0.28l-0.01,2.42l-0.93,0.43l-0.66,3.3l-0.89,1.44l-0.81,0.55l-0.98,-0.05l-1.82,-1.09l-2.7,-0.74l-3.21,-2.03l-2.03,-0.38l-4.07,1.03l-3.65,-0.63l-2.43,-6.32l-2.32,-2.63l-1.36,-4.31l-0.1,-1.41l-0.78,-1.69l-3.22,-3.02l0.06,-3.57l2.1,-2.64l0.17,-1.08l-0.76,-1.69l1.08,-1.22l1.91,1.48l2.28,0.55l4.11,2.05l2.66,0.72Z", "name": "Eastern Cape"}, "ZA-NC": {"path": "M0.49,379.73l0.79,-1.26l0.1,-1.45l3.65,-2.0l2.22,-0.73l4.09,-3.89l0.51,0.0l0.59,1.87l0.33,0.25l1.21,0.0l1.15,-0.96l1.61,-2.32l0.51,-3.5l1.29,-0.94l0.12,-0.44l-1.93,-3.69l-0.02,-1.88l0.63,-0.3l1.44,0.72l0.88,-0.43l0.24,-1.24l-0.83,-1.56l0.22,-0.38l1.96,-0.19l0.31,-0.41l-0.11,-0.66l-0.97,-1.36l1.82,0.39l0.78,-0.77l0.46,-4.73l1.17,-1.21l0.82,0.71l0.76,0.08l1.94,-1.18l1.69,0.27l1.8,-1.29l1.54,-0.51l0.89,0.19l2.19,3.21l2.32,0.84l0.38,0.79l-0.16,2.63l0.27,2.78l1.25,1.6l2.15,0.45l3.44,-0.78l1.65,0.1l1.38,4.48l1.53,2.38l-0.02,2.73l-0.4,1.23l-2.62,1.34l-0.8,0.86l-0.29,1.28l0.5,1.17l1.43,1.78l0.74,2.33l2.08,0.88l0.48,1.05l-1.02,4.77l0.1,1.79l0.34,0.37l2.2,0.31l4.7,-0.82l2.91,-0.89l0.56,0.38l0.46,3.77l1.42,0.79l2.65,0.47l2.29,-1.22l1.64,-0.14l9.06,1.93l3.73,1.88l3.38,2.69l2.15,1.07l4.72,1.57l7.81,-1.3l4.79,1.12l4.24,-1.46l1.35,0.81l3.17,-1.4l10.38,-1.46l11.27,1.57l2.92,3.55l2.83,0.53l1.42,1.46l2.21,-0.13l2.33,-0.75l3.12,-1.58l1.34,-1.57l1.7,-0.13l0.82,-0.44l0.17,-1.27l-2.02,-3.33l-0.32,-1.16l0.17,-1.09l0.9,-1.63l1.14,-1.2l0.51,-0.04l1.19,0.93l0.76,0.18l6.67,-2.0l1.61,-1.7l1.61,-4.82l1.21,-0.95l1.82,-2.9l0.86,-0.41l5.45,-0.4l3.32,-1.72l2.59,-0.17l1.68,-0.46l2.58,-2.19l1.34,-0.72l2.3,0.16l2.33,-0.48l0.31,-0.37l0.09,-1.78l-0.08,-212.38l0.88,0.65l1.08,1.62l2.81,2.16l1.51,1.65l0.73,0.46l2.16,0.35l4.12,2.43l7.55,6.3l3.73,6.99l-0.49,1.98l0.65,0.92l1.89,0.94l0.31,1.91l1.61,1.11l-0.36,1.48l1.04,1.75l0.74,2.52l2.58,1.4l0.37,1.43l0.77,0.29l-0.28,0.78l0.28,0.94l0.85,0.25l0.95,-0.47l0.41,0.14l-1.32,0.9l-0.48,2.68l2.51,2.37l0.36,1.27l-1.73,1.53l0.11,0.97l1.63,0.74l-0.45,1.72l0.09,0.84l0.59,0.72l1.82,1.03l0.48,0.93l1.1,3.69l-0.59,1.68l0.53,0.4l1.28,-0.49l1.9,4.1l0.47,4.99l-0.12,4.27l0.24,1.24l1.98,3.39l-0.14,0.67l-2.32,3.16l-2.28,4.37l-3.15,3.84l-1.64,2.96l-2.43,2.2l-1.13,5.65l0.2,1.71l1.44,2.67l-0.08,1.24l-1.2,4.06l0.33,4.04l1.34,3.82l2.02,1.97l0.84,2.44l0.65,0.1l8.66,-4.91l2.89,-0.36l4.5,2.25l7.33,1.59l1.79,-0.06l4.73,-1.31l3.04,0.15l4.64,-1.21l2.42,-0.08l3.97,1.4l4.63,0.11l3.31,0.85l1.31,-0.01l1.24,-0.46l3.24,-2.13l1.69,-2.08l0.22,-2.44l-0.49,-2.64l0.05,-0.71l0.48,-0.45l3.01,-0.75l5.29,-0.04l3.55,-0.81l3.33,-1.97l2.84,-2.74l2.14,-3.16l2.81,-6.75l2.16,-2.15l0.61,-1.18l3.67,-0.95l1.47,-0.76l2.86,-2.67l1.87,-2.68l1.08,-0.86l1.56,-0.28l2.41,0.51l1.17,-0.39l1.21,-1.69l0.91,-2.04l2.05,-1.86l3.47,0.18l0.43,16.99l-0.71,0.91l-0.38,2.78l0.8,4.7l0.57,1.01l0.77,0.47l4.33,-0.06l1.67,0.26l1.51,1.1l3.43,0.81l1.14,1.36l1.48,-0.04l3.45,2.33l0.17,0.58l-0.49,2.14l0.21,3.23l-0.17,1.1l-0.84,1.24l-0.41,2.12l1.89,6.0l1.83,2.64l-3.1,1.38l-0.89,1.08l-0.61,3.64l0.26,2.82l0.7,1.83l0.74,0.98l1.1,0.76l2.54,0.34l2.14,1.78l4.97,5.39l1.21,0.75l5.24,0.81l4.22,3.03l2.35,0.33l1.03,0.83l0.98,2.06l4.78,0.57l1.54,0.48l4.52,2.38l2.59,0.81l1.58,-0.3l1.8,-2.11l0.75,-0.42l4.1,0.11l0.94,-0.48l0.51,-1.01l-0.17,-0.66l-0.92,-0.78l-0.1,-0.45l0.79,-1.15l0.79,-0.23l1.69,0.33l2.29,-0.13l0.29,-0.77l-0.45,-2.2l0.08,-1.27l0.66,-1.31l2.05,2.84l-0.36,7.93l0.61,4.57l1.47,2.76l0.05,3.69l1.51,3.25l0.45,0.22l16.6,-3.63l0.71,1.82l0.36,3.95l-0.24,1.27l-0.42,0.84l-1.75,1.73l-1.22,2.73l0.35,1.2l0.71,0.83l2.19,0.89l1.38,1.76l0.1,0.98l-0.62,1.59l0.18,1.16l4.45,3.68l0.54,-0.03l1.44,-1.46l1.0,-2.13l2.67,-2.47l0.53,-1.97l0.02,-3.66l1.42,-2.23l1.74,-1.04l0.67,-1.35l0.64,-4.3l-0.14,-1.55l-0.41,-0.74l-0.91,-0.6l-0.34,-1.61l0.7,-1.94l-0.29,-2.34l0.33,-1.02l1.1,-0.18l1.61,0.26l0.59,0.67l1.29,4.01l0.72,0.94l1.52,0.4l9.59,-0.01l1.47,0.83l-9.79,11.36l-0.82,0.15l-0.28,0.58l5.91,11.12l1.3,0.3l2.13,-1.55l0.96,-0.12l-0.18,2.17l-2.14,5.42l-1.05,1.6l-2.67,2.1l-0.42,1.0l0.25,1.02l0.89,1.15l-0.13,1.57l-1.19,4.21l-1.55,2.74l-1.02,3.18l-0.24,3.86l0.47,1.9l0.66,1.0l0.81,0.56l-0.1,0.43l-29.2,59.96l1.3,3.83l2.53,3.19l1.89,1.29l1.74,0.07l0.69,1.53l2.28,0.23l2.47,2.92l1.7,1.04l2.76,0.72l0.66,3.12l1.32,1.35l5.06,1.19l6.6,12.61l0.96,0.75l1.27,0.26l1.09,1.98l1.13,1.03l2.34,1.03l0.78,2.82l4.79,4.15l2.92,3.35l4.07,2.55l0.74,0.71l0.37,1.13l0.84,1.01l3.88,0.14l5.51,3.91l0.83,8.4l2.1,2.82l-0.28,1.08l-1.26,1.5l-0.28,1.39l1.0,3.94l-0.34,1.32l-1.46,2.17l0.19,2.21l-1.38,2.33l-0.33,1.54l-3.22,4.06l-0.41,2.84l-1.31,0.84l-7.49,-1.52l-8.28,3.78l-5.23,1.18l-3.12,2.22l-2.18,0.92l-1.37,1.51l-2.09,0.54l-2.34,1.17l-3.71,0.52l-7.5,0.23l-0.39,0.39l-0.78,4.15l-1.1,1.58l-0.65,3.4l-0.69,8.87l-8.71,0.85l-5.12,1.81l-3.36,0.01l-1.5,0.55l-0.57,1.82l-3.82,-0.93l-2.34,-3.1l-1.81,-0.36l-1.94,0.66l-1.74,2.26l-3.56,2.08l-2.2,-1.64l0.1,-1.3l-0.66,-1.27l-1.4,-1.17l-4.82,-2.57l-3.95,-0.48l-1.95,0.2l-3.72,1.19l-6.76,-0.07l-2.66,2.46l-3.59,1.92l-3.8,5.01l-1.23,2.2l-6.77,6.13l-1.45,-2.22l-0.84,-3.02l-4.62,-1.84l-4.03,-0.24l-2.51,-0.98l-3.7,-0.17l-3.27,-1.86l-4.86,-1.55l-2.36,-3.36l-2.55,-2.57l-2.13,-1.55l-10.24,-5.05l-0.5,0.12l-1.62,2.18l-6.4,14.92l-1.96,0.33l-1.15,2.2l-0.23,4.06l-0.49,2.72l1.31,3.36l-1.0,1.99l-1.32,0.35l-3.19,3.6l-1.46,2.22l-3.03,2.04l-3.19,0.72l-7.4,-1.85l-2.27,0.61l-2.2,-0.45l-1.89,0.32l-2.8,1.32l-1.71,2.97l-5.42,3.53l-6.42,1.71l-2.91,3.42l-0.87,0.67l-2.44,0.94l-1.3,3.51l-2.92,5.59l-4.03,1.8l-5.64,1.02l-4.18,1.47l-2.38,2.57l-0.66,2.45l-0.39,3.3l-1.06,2.99l-4.14,3.31l-5.1,0.17l-1.98,-0.94l-1.46,-0.2l-3.31,1.47l-3.44,0.62l-2.22,-2.03l-1.22,-0.54l-1.05,-1.79l-3.07,-3.44l-3.88,-2.6l-1.21,-1.55l-0.79,-3.15l-2.63,-5.42l-1.53,-4.51l-0.88,-3.79l0.18,-2.59l2.98,-2.62l4.18,-5.4l-0.07,-2.68l-1.45,-2.7l-1.08,-0.87l-2.11,0.25l-3.35,3.33l-1.64,0.87l-1.73,2.18l-4.94,3.75l-2.9,0.78l-3.69,0.12l-4.02,2.13l-1.55,1.9l-2.5,0.84l-1.56,-0.53l-1.23,1.09l-1.75,4.58l-0.28,2.12l1.1,2.66l-2.78,1.27l-2.99,-2.97l0.78,-7.05l-2.68,-4.95l-0.73,-4.44l1.03,-1.73l2.3,-2.26l0.33,-0.69l-0.46,-3.39l-0.5,-1.45l0.18,-4.28l-0.58,-0.74l-1.38,-0.09l-1.21,-1.63l-0.9,-0.64l-0.82,-0.09l-1.3,0.5l-0.7,-0.65l-1.55,-0.27l-1.81,-3.09l-2.3,-1.45l0.89,-3.66l-0.4,-0.7l-1.17,0.27l-1.99,1.5l-1.09,0.44l-1.28,-0.43l-1.41,0.53l-2.25,-1.42l-3.26,-0.37l0.79,-3.49l1.17,-2.16l0.31,-2.74l-0.96,-5.26l0.67,-5.23l-1.32,-3.8l-1.47,-1.34l-0.4,-1.25l-0.01,-2.51l-1.02,-5.61l0.39,-2.79l-2.09,-2.75l-1.19,-2.97l-1.75,-11.19l1.25,-3.97l-1.13,-3.64l1.67,-2.39l0.04,-7.24l-0.27,-0.38l-5.18,-1.71l-2.35,-2.28l-1.44,-2.34l-2.07,-2.46l-9.83,-6.47l-3.16,0.38l-1.56,1.27l-0.72,1.53l-2.56,-1.38l-0.55,0.17l-2.67,4.73l-1.41,4.59l-2.26,4.03l-2.53,3.56l-4.67,2.22l-5.25,-2.66l-2.06,-0.12l-2.96,2.6l-1.36,4.27l-3.17,2.83l-0.87,4.48l-2.63,3.34l-0.48,6.17l-2.31,-0.66l-1.12,-1.54l-3.19,-6.57l-3.82,-5.15l-3.01,-5.73l-1.4,-5.14l-3.27,-4.3l-1.4,-2.48l0.09,-2.46l-1.32,-1.44l-3.03,-5.32l-0.55,-1.49l-0.99,-1.15l-3.48,-5.76l-1.25,-6.2l-2.86,-4.76l-0.71,-1.91l-0.21,-2.35l-1.28,-4.81l-3.44,-7.69l-0.37,-2.08l-0.62,-1.02l-1.51,-5.84l0.24,-0.34l-0.34,-3.25l-1.3,-3.92l-0.78,-0.82l-0.58,-3.46l-4.04,-10.84l-2.71,-3.58l-1.13,-3.52l-1.1,-1.59l0.03,-1.42l-1.15,-2.81l0.01,-2.49l-0.92,-1.45l-3.45,-2.92l-1.71,-3.78l-2.5,-3.35l-3.69,-3.06l-1.08,-3.23l-0.18,-3.46l-0.8,-1.9l-0.45,-0.48l-1.12,-0.19l-1.1,-2.36l-2.26,-2.11Z", "name": "Northern Cape"}, "ZA-LP": {"path": "M544.79,145.2l3.53,-3.55l2.01,-4.81l1.31,-1.67l5.06,-3.45l3.32,-3.37l0.49,-0.85l5.89,-2.09l2.18,-1.55l0.62,-1.13l1.05,-5.1l0.11,-2.61l3.84,-15.37l0.22,-1.61l-0.34,-1.19l1.47,-2.61l-0.19,-1.22l0.24,-0.93l2.25,-4.34l1.22,1.51l1.19,-0.03l0.84,-0.6l0.13,-1.17l-0.38,-1.46l0.68,-0.17l0.37,-0.7l0.97,-0.68l0.01,-0.55l0.51,-0.52l0.91,0.3l0.58,-0.21l0.18,-1.07l-0.72,-0.74l-0.08,-0.58l0.68,0.12l0.37,0.45l0.65,-0.05l0.52,-0.72l0.76,0.37l1.19,-0.28l0.17,-0.6l-0.6,-0.85l0.32,-0.36l4.15,-1.67l1.9,-1.57l1.61,-2.26l0.43,1.26l0.58,0.22l1.34,-1.38l0.98,-0.4l0.04,0.82l1.17,0.38l1.52,-1.58l2.87,-0.31l2.39,-1.11l0.98,-1.28l0.31,-1.3l-0.28,-1.17l0.47,-0.51l0.39,-1.48l1.05,-1.2l0.39,-1.32l1.99,0.59l2.63,-1.8l1.24,1.36l0.86,0.43l1.14,-0.4l1.27,-2.83l0.87,-0.99l-0.9,-1.61l1.45,0.12l1.03,-0.33l0.24,-0.5l-0.22,-0.65l4.01,-1.37l2.09,-1.48l0.92,-1.88l-0.46,-3.52l3.66,-1.5l1.7,-1.43l0.73,-1.24l0.28,-1.41l-0.4,-1.66l2.89,-1.07l0.87,-1.63l2.05,-1.02l0.55,-1.04l-0.17,-2.24l1.88,-2.5l2.9,-0.88l2.07,-2.36l2.7,-1.71l2.01,-0.53l4.42,-0.3l3.61,0.86l1.02,-0.34l1.09,-0.92l3.46,-0.01l2.0,-0.66l3.93,-2.17l4.77,-1.26l0.93,-0.82l0.67,-1.58l3.64,0.14l1.09,-0.87l2.08,-3.54l-0.38,-4.06l2.16,-2.5l0.79,-0.45l1.19,-1.81l7.02,-0.52l1.1,-0.43l1.82,-1.39l1.27,-0.15l2.98,0.62l1.57,0.15l1.0,-0.31l1.57,0.31l3.34,-1.73l0.99,-0.22l4.07,0.77l0.91,-0.68l0.46,-0.89l0.8,-0.18l1.99,0.14l2.89,-1.02l1.24,0.64l4.16,-0.4l0.99,0.28l3.27,2.1l1.82,0.38l1.45,0.71l2.65,0.37l1.51,0.91l1.73,0.48l1.89,1.83l2.29,0.48l2.9,1.77l4.85,-0.12l1.68,0.73l2.5,1.86l2.01,0.51l4.42,-0.45l4.14,-1.53l6.07,0.36l1.88,0.8l3.33,-1.59l6.06,-0.47l1.78,-0.68l4.8,0.75l5.91,1.36l2.87,1.0l3.55,-1.15l1.54,1.58l1.73,0.99l0.64,0.2l1.67,-0.4l1.5,1.9l-0.45,1.13l14.09,42.77l0.32,1.67l-1.14,13.15l0.38,2.6l1.09,2.16l5.22,5.49l1.04,2.01l2.12,7.26l3.02,6.35l4.64,3.57l0.81,1.44l0.02,0.64l-0.8,0.25l-1.4,0.02l-0.93,-0.4l-0.91,0.19l-2.53,2.18l-0.55,2.24l-0.48,0.41l-1.83,-0.19l-0.81,-1.48l-0.81,-0.48l-1.44,0.38l-1.68,1.76l-1.18,-0.96l-1.82,0.74l-0.54,-0.06l-4.14,-1.36l-0.53,0.16l-1.96,1.89l-2.06,-0.08l-2.11,1.43l-1.99,-0.37l-1.01,0.19l-1.67,1.46l0.25,0.69l7.87,0.41l3.09,0.5l1.21,1.74l-1.22,2.51l-0.25,3.43l-3.57,8.74l0.86,1.95l-1.38,2.36l0.34,0.6l3.75,0.09l0.22,2.13l0.62,1.22l6.05,3.94l1.22,1.91l-0.56,0.76l-1.67,0.11l-0.89,0.48l-1.27,2.44l-6.15,1.52l-2.26,1.6l-0.62,3.32l0.26,1.62l0.83,0.58l4.65,1.1l0.42,0.6l0.17,2.41l-1.85,2.57l-2.11,-0.46l-4.15,0.12l-1.06,0.55l-1.75,0.14l-0.69,0.66l-0.24,0.76l-1.38,0.35l-5.63,0.46l0.08,-2.56l0.54,-1.2l1.7,-0.83l2.84,-0.59l0.76,-1.4l-0.1,-0.45l-1.1,-1.01l-0.99,-2.17l-0.86,-3.03l-1.79,-1.8l-1.99,-0.68l-0.25,-0.83l0.58,-0.56l2.99,-0.97l1.44,-2.37l-0.31,-0.94l-0.84,-0.44l-2.65,-0.03l-1.76,-1.52l-1.8,-3.55l-3.54,-0.62l-1.13,-1.71l-5.35,-1.21l-1.69,-0.81l-4.18,-4.05l-0.63,0.1l-1.09,2.12l-0.66,3.16l-3.31,0.84l-1.09,-0.28l-1.23,0.63l-1.1,2.85l-0.85,0.83l-1.99,0.68l-2.62,-1.14l-6.46,-1.5l-2.38,0.66l-4.53,0.44l-1.62,1.68l-2.94,-1.36l-3.17,1.25l-0.24,0.35l-0.15,4.83l1.29,2.49l-0.14,1.71l-0.82,1.63l-2.61,1.5l-7.24,5.34l-5.88,4.85l-1.02,1.74l-1.55,0.7l-0.47,1.67l2.33,2.74l-0.29,1.07l-1.09,0.63l-0.6,1.36l-4.3,1.26l-3.5,-0.4l-2.45,-0.63l-3.23,-3.37l-2.28,-1.54l-1.42,-2.51l-2.83,-2.9l-1.28,-0.05l-1.29,0.84l-0.1,-0.59l1.35,-1.12l0.28,-1.04l-0.09,-1.62l-1.14,-2.65l0.15,-0.64l1.03,-1.22l0.55,0.44l0.74,0.05l1.48,-1.23l-0.33,-4.82l-0.54,-0.35l-4.0,1.52l-2.38,1.51l-4.29,1.22l-2.32,2.27l-0.3,1.43l-1.44,2.9l-4.29,1.97l-1.88,-3.57l-1.34,-1.63l-2.11,-0.46l-2.48,0.28l-0.35,0.4l0.01,2.88l-1.03,-0.38l-4.25,0.29l-4.29,-0.19l-1.42,0.37l-7.35,3.51l-0.46,1.21l-0.31,2.63l-0.83,0.78l-3.59,1.02l-2.42,1.05l-0.71,1.08l-4.79,2.45l-0.42,1.09l0.84,1.8l1.65,0.54l4.19,-0.77l2.77,-1.58l4.45,-1.39l0.49,1.32l1.41,1.85l0.99,0.63l0.1,0.87l-0.81,0.6l-1.66,0.47l-1.75,-0.29l-2.98,0.21l-1.37,0.56l-1.01,1.21l-2.7,1.26l-2.94,0.01l-0.82,-0.67l-3.59,0.35l-3.44,-5.25l-2.05,-1.05l-2.0,0.24l-0.97,-0.15l-0.51,-0.43l-0.52,-1.36l-1.84,-1.62l-0.15,-0.85l0.25,-0.55l1.62,-0.28l2.12,1.19l2.09,0.21l1.06,-0.81l0.59,-2.81l-1.0,-1.51l-6.02,-2.88l-7.46,-1.45l-1.37,0.18l-1.2,0.82l-0.63,0.06l-8.26,-0.95l-1.03,0.2l-1.54,0.87l-1.99,-1.9l-2.77,0.19l-2.07,1.03l-0.54,2.97l-1.88,2.95l-1.04,0.5l-0.45,-0.31l-0.43,-1.7l-0.7,-0.68l-2.76,0.28l-4.01,-0.17l-4.13,-2.98l-5.93,-0.97l-0.56,-0.45l-1.25,-2.53l-1.79,-1.81l-1.92,-1.16l-1.23,-2.04l-0.7,-5.86l-0.41,-1.08l-0.87,-0.6l-1.32,0.29l-0.66,0.65l-0.54,1.34l-2.19,1.54l-6.28,2.65l-3.33,1.79l-2.01,0.0l-5.51,-2.28l-9.71,-1.0l-0.33,-1.23l-1.52,-2.53l-0.32,-1.46l-0.0,-4.53Z", "name": "Limpopo"}, "ZA-MP": {"path": "M651.75,268.68l1.12,-2.47l3.99,-2.72l1.35,-1.64l1.65,-0.67l0.91,-1.73l1.04,-0.95l1.67,-0.61l2.1,-0.09l1.0,-0.84l5.29,-1.15l7.47,-6.15l0.11,-0.49l-2.38,-4.77l-0.41,-0.22l-6.41,0.91l-5.65,-1.32l-0.33,-2.24l-3.23,-2.37l-2.19,-5.21l-0.77,-0.51l-1.02,-2.32l1.65,-0.99l3.41,-0.43l1.36,-2.53l1.53,-1.92l5.66,0.03l1.96,0.46l1.14,0.84l3.97,0.11l0.4,-0.32l0.43,-2.19l1.91,-5.15l1.9,-1.28l1.21,-1.76l0.26,-2.7l0.89,-2.06l0.51,-2.34l-0.25,-1.44l0.66,-1.44l3.11,-2.91l1.09,-3.78l1.47,-1.62l0.88,-2.81l1.42,-0.59l0.99,-2.01l0.93,-0.99l2.92,0.16l0.38,-0.22l1.69,-3.86l-0.29,-1.31l-0.98,-0.47l-1.94,0.21l-2.9,-0.78l-4.29,1.07l-1.28,0.71l-2.5,-0.73l-3.61,0.53l-1.39,1.03l-2.18,0.66l-2.82,-1.08l-0.09,-0.71l2.12,-1.72l0.89,-1.33l0.11,-1.48l-0.61,-2.86l0.42,-0.07l0.94,1.31l0.62,0.02l0.48,-0.39l0.31,-0.82l-0.05,-2.27l1.12,-1.43l0.16,-0.67l-0.3,-0.65l-0.76,-0.27l-2.52,0.99l-1.92,-2.42l-4.25,0.26l-2.33,1.52l-4.75,0.63l-5.86,1.89l-2.74,1.57l-1.8,0.48l-2.17,0.25l-1.03,-0.28l-0.64,-1.33l0.19,-0.44l4.69,-2.37l0.71,-1.08l0.91,-0.49l5.11,-1.59l1.11,-1.14l0.52,-3.47l7.15,-3.42l2.43,-0.41l3.0,0.29l4.2,-0.28l1.32,0.54l0.55,-0.37l-0.01,-3.12l2.06,-0.24l1.5,0.24l1.25,1.52l2.01,3.81l0.52,0.18l4.84,-2.25l0.58,-0.68l1.07,-2.54l0.23,-1.27l2.09,-2.04l4.11,-1.13l2.43,-1.53l3.44,-1.31l0.33,3.99l-1.03,0.71l-0.68,-0.5l-0.72,0.08l-1.5,2.08l-0.01,0.71l1.14,2.61l0.07,1.39l-0.18,0.67l-1.5,1.42l0.33,1.18l0.85,0.29l1.87,-0.91l2.67,2.74l0.5,1.29l0.97,1.29l2.3,1.57l3.48,3.53l2.63,0.67l3.61,0.41l4.71,-1.35l0.87,-1.62l1.14,-0.7l0.39,-1.44l-2.38,-3.03l0.2,-0.74l1.64,-0.8l1.08,-1.79l5.71,-4.71l7.22,-5.32l2.82,-1.69l0.91,-1.81l0.19,-2.05l-1.29,-2.52l0.14,-4.47l2.71,-1.08l2.06,1.23l0.84,0.13l0.89,-0.47l0.9,-1.22l4.45,-0.45l2.16,-0.65l6.32,1.47l2.95,1.18l2.23,-0.76l1.13,-1.05l1.0,-2.73l0.92,-0.47l0.96,0.29l3.69,-0.94l0.3,-0.33l0.33,-2.4l1.12,-2.41l3.94,3.79l1.87,0.88l5.23,1.18l1.15,1.72l3.52,0.61l1.53,3.31l1.99,1.72l3.22,0.24l-0.13,1.0l-0.91,1.25l-2.74,0.81l-1.09,1.29l0.63,1.53l1.99,0.66l1.55,1.55l0.79,2.86l1.06,2.33l1.05,1.0l-0.29,0.7l-2.78,0.59l-2.07,1.11l-0.66,1.55l-0.1,3.09l0.43,0.41l6.11,-0.5l1.65,-0.41l0.93,-1.43l1.58,-0.08l1.33,-0.61l3.67,-0.05l2.13,0.52l0.47,-0.14l2.12,-2.95l-0.12,-2.89l-0.89,-1.2l-5.17,-1.46l-0.1,-1.02l0.58,-3.09l1.78,-1.16l4.71,-0.98l1.61,-0.61l1.33,-2.5l2.5,-0.55l0.67,-0.65l0.23,-0.97l-1.52,-2.35l-6.01,-3.91l-0.37,-0.77l0.08,-1.42l-0.66,-1.35l-3.48,-0.08l1.15,-1.96l-0.86,-2.03l3.53,-8.62l0.28,-3.54l1.22,-2.91l-1.71,-2.24l-3.33,-0.54l-6.94,-0.36l0.7,-0.65l0.66,-0.14l2.51,0.29l2.22,-1.48l1.82,0.13l2.24,-1.99l3.94,1.35l0.91,0.04l1.39,-0.72l1.34,0.98l0.87,-0.28l1.27,-1.61l0.89,-0.25l1.31,1.85l2.41,0.29l1.0,-0.74l0.51,-2.21l2.34,-2.0l1.98,0.36l1.64,-0.24l0.69,11.1l5.06,10.69l1.36,4.39l0.29,4.41l-0.45,4.01l0.27,46.79l-0.93,2.86l-0.29,3.45l0.21,1.88l0.9,2.46l0.51,4.81l-0.18,0.62l-1.53,1.25l-0.53,0.85l-2.33,5.87l-0.36,1.82l0.24,1.83l2.05,6.41l-2.79,1.34l-1.42,0.32l-1.42,-0.42l-22.29,-13.94l-1.61,-0.51l-1.71,0.04l-1.97,0.51l-1.63,0.8l-10.47,9.04l-0.75,1.32l-0.83,3.06l-2.93,6.78l-3.69,6.35l-9.04,11.03l-1.26,4.55l0.14,14.49l0.93,5.51l0.41,0.3l1.91,-0.23l2.18,-1.53l1.04,2.91l2.84,3.48l0.23,2.41l-0.56,2.43l0.28,1.61l1.23,2.05l5.67,4.97l3.49,4.63l0.98,0.63l4.25,1.41l-2.73,3.34l-1.86,1.46l-2.47,0.01l-6.79,1.79l-1.27,-0.19l-2.82,-2.33l-2.35,0.43l-1.55,0.87l-5.1,-2.62l-2.61,-0.86l-3.44,0.6l-1.22,0.6l-0.8,0.81l-4.97,-0.41l-3.17,0.39l-0.67,-0.4l-0.18,-1.26l-0.39,-0.5l-1.89,-0.39l-1.9,1.3l-1.66,0.03l-2.51,0.88l-2.7,1.89l-3.43,1.37l-0.86,1.14l-0.86,0.1l-4.17,-1.09l-2.57,1.3l-4.42,-1.07l-3.75,0.87l-1.04,0.71l-2.14,4.04l-3.02,-0.72l-2.05,0.25l-1.13,0.94l-0.18,1.53l-1.5,0.15l-1.7,0.86l-4.49,-5.22l-0.06,-1.85l-3.0,-2.69l-0.1,-1.22l-0.87,-0.92l-0.52,-1.94l-0.99,-1.32l-2.44,-1.33l-0.94,-0.07l-2.21,0.53l-0.32,-1.82l-1.94,-0.61l-0.95,-0.83l-1.62,-0.6l-2.3,-1.82l-3.22,-0.27l-0.88,0.23l-0.87,0.68l-0.33,-0.09l-1.8,-3.51l-0.93,-1.0l-0.28,-2.6l-1.31,-0.46l-2.41,-1.58l-2.17,-0.08l-1.06,0.8l-1.46,0.51l-1.47,1.53l-1.43,-0.79l-1.77,0.48l-1.09,-0.78l-1.43,-0.44l-4.21,-2.69l-2.88,-0.94l-1.55,0.81l-0.39,0.81l0.36,0.53l0.46,-0.06l1.12,0.94l-2.51,0.24l-3.09,2.39l0.54,-1.19l-0.14,-0.82l-1.58,-0.8l-1.82,-2.21l-1.42,-0.18l-1.56,1.16l-0.38,-0.05l-0.8,-0.97l-0.48,-1.43l-0.45,-0.34l-3.98,-0.36l-1.54,-0.81l0.72,-2.27l-0.21,-1.0l0.21,-1.27l3.21,-3.0l0.14,-1.23l-0.48,-0.91Z", "name": "Mpumalanga"}, "ZA-NL": {"path": "M675.18,480.22l3.63,1.52l0.7,0.02l2.67,-3.22l1.46,-0.04l1.77,-2.17l1.31,-0.75l0.26,-0.76l-0.59,-1.22l2.53,-1.42l1.31,0.19l0.8,-0.26l1.01,-1.58l1.44,-1.34l0.31,-1.49l-0.44,-1.21l-2.37,-2.07l-2.91,-3.57l3.93,-2.33l2.74,-0.99l0.51,-0.65l-0.92,-3.9l-1.46,-1.58l0.43,-4.27l2.51,-4.83l1.47,-1.11l4.15,-1.22l0.81,-0.88l0.15,-1.95l0.73,-0.48l0.09,-0.59l-0.72,-0.86l-0.34,-1.29l0.37,-2.52l1.03,-1.0l4.55,-1.71l0.77,-0.55l0.78,-1.32l0.08,-1.8l0.95,-1.3l0.27,-1.02l-1.15,-1.64l-0.07,-1.72l-0.61,-1.38l-1.48,-1.92l-1.01,-3.08l-2.21,-2.16l-0.27,-3.31l-0.25,-0.34l-1.67,-0.67l-2.28,-0.08l-1.66,-0.48l-4.45,-4.49l-3.81,-1.6l-0.26,-1.67l-0.59,-0.85l-1.39,-0.67l-2.04,-0.32l-2.85,-2.79l-2.18,-3.67l-1.29,-1.33l1.85,-4.74l1.84,-1.9l0.28,-2.52l2.02,-2.2l3.66,-1.28l2.8,-0.55l2.43,0.44l2.95,-0.98l0.73,-1.23l-0.32,-1.93l1.89,-2.36l1.03,-0.47l2.82,-0.48l2.34,-2.58l3.51,-1.58l4.71,-5.49l1.17,-0.43l4.13,-0.44l1.84,-3.25l2.28,-1.91l0.67,-2.71l-0.24,-1.13l-0.55,-1.0l-1.75,-1.54l-0.19,-1.24l0.85,-2.14l1.31,-1.85l0.14,-3.48l1.32,-2.14l1.65,-3.97l-0.21,-0.89l-0.84,-1.17l0.18,-3.93l-1.14,-1.93l-0.1,-0.78l1.07,-1.33l3.57,-1.95l0.38,-1.41l-0.73,-2.89l-2.45,-1.0l0.27,-2.34l2.32,-1.1l1.26,0.5l1.03,-0.3l0.95,-1.28l1.32,-2.9l0.64,-0.42l3.47,-0.83l4.49,1.07l2.47,-1.29l4.09,1.07l1.3,-0.12l1.02,-1.25l3.36,-1.33l2.67,-1.88l2.31,-0.82l1.78,-0.05l1.72,-1.26l1.36,0.26l0.44,1.7l1.21,0.59l3.23,-0.39l3.85,0.51l1.3,-0.13l2.08,-1.45l2.97,-0.56l2.44,0.8l5.26,2.69l0.78,-0.12l1.19,-0.77l1.87,-0.42l2.68,2.26l1.62,0.28l6.98,-1.81l2.7,-0.08l2.07,-1.64l2.95,-3.61l11.51,3.82l3.72,0.73l24.28,0.32l0.4,-0.41l-0.03,-0.78l-1.12,-2.87l-0.29,-9.03l2.74,-15.42l-0.08,-1.43l3.93,0.15l1.38,1.3l2.57,0.74l4.42,-0.25l7.13,1.11l29.09,-0.82l-0.55,1.94l-0.84,7.66l-1.39,6.17l-1.97,2.69l-1.25,5.19l-5.73,15.65l-3.8,17.34l-0.18,1.91l-0.67,2.05l0.36,2.55l-2.6,14.68l-0.34,1.02l-4.57,6.88l-1.13,3.54l-0.82,0.79l-1.13,0.33l-0.27,0.52l0.53,0.92l0.7,-0.04l0.31,1.45l-1.94,6.15l-5.31,5.55l-3.23,1.87l-2.25,3.22l-5.74,4.73l-1.56,-1.07l-2.39,0.44l-1.25,1.27l-0.04,0.52l1.21,1.63l0.63,0.02l1.94,-1.46l-0.65,1.19l-2.04,1.63l-6.69,3.43l-1.89,0.37l-4.44,-0.53l-0.47,0.45l0.19,0.92l0.45,0.49l-1.47,0.89l-10.65,11.65l-2.53,2.16l-1.21,0.65l-0.48,1.54l-0.88,0.65l-2.07,2.79l-3.37,2.39l-0.66,1.88l-1.49,1.24l-0.48,1.13l-7.22,9.48l-7.2,13.74l-0.6,2.47l0.46,2.01l-1.95,0.1l-0.66,0.71l-0.27,1.58l0.58,0.42l2.59,-0.93l-1.82,2.29l-5.67,4.94l-1.69,1.99l-2.66,4.44l-3.06,6.84l-7.93,13.33l-1.74,4.18l-2.61,2.71l-9.3,16.44l-1.52,2.08l-2.45,1.9l-1.71,3.51l-4.74,6.01l-0.9,-0.66l-0.42,-1.91l-1.55,-1.03l-0.92,-5.57l-0.74,-0.93l-1.95,-1.05l-0.66,-1.98l-0.67,-0.44l-1.68,-0.19l-0.96,-0.78l-1.44,0.01l-0.81,-1.38l-0.55,-0.32l-0.41,-1.47l-0.54,-0.22l-1.08,0.36l-0.79,-0.14l-4.18,-2.72l-1.58,-1.55l-1.39,-0.06l-0.95,0.59l-5.09,-2.0l-2.66,0.39l-1.79,-1.1l-1.72,-0.59l-3.81,-2.56l-0.82,-0.23l-2.68,1.16l-2.9,0.01l-1.45,1.12l-0.81,-0.01l-3.26,-1.6l-9.06,-2.4l-0.25,-0.17l-0.19,-2.4l-0.34,-0.53l-4.39,-2.15l-0.76,0.14l-0.72,0.84l-0.13,2.41l-0.46,1.07l-5.51,-1.08l-2.11,-2.94l-2.38,-0.52l-0.83,-1.58l0.7,-3.37l-1.06,-2.75l1.63,-3.75ZM725.16,466.31l-2.52,-0.67l-4.17,-2.08l-2.14,-0.49l-2.05,-1.58l-0.47,-0.01l-1.62,1.7l0.2,1.32l0.5,0.75l-0.13,0.81l-2.11,2.67l-0.07,3.98l3.31,3.19l0.72,1.56l0.08,1.33l1.4,4.44l2.34,2.66l2.76,6.69l2.73,0.68l1.38,0.02l4.05,-1.03l1.77,0.35l4.22,2.45l1.56,0.27l1.93,1.13l1.59,-0.01l1.03,-0.72l1.03,-1.66l0.65,-3.19l0.56,-0.1l0.5,-0.76l-0.2,-1.87l1.23,0.09l0.97,-1.18l0.99,0.44l0.47,-0.1l0.31,-0.69l-0.32,-1.12l-0.75,-0.97l-2.33,-1.68l-0.1,-0.8l0.57,-1.06l-0.37,-0.73l-1.4,-0.12l-0.86,0.69l-0.72,-0.56l-0.04,-0.77l-0.57,-0.95l-0.79,-0.6l-1.25,-0.24l-1.61,-1.46l0.26,-0.35l1.17,0.18l0.38,-0.28l0.03,-0.51l-1.85,-2.04l-0.88,-1.46l-2.27,-1.47l-1.39,-3.46l-1.29,-0.76l-1.72,0.62l-4.72,-0.5Z", "name": "KwaZulu-Natal"}, "ZA-NW": {"path": "M337.85,231.05l1.98,-2.93l-0.11,-1.83l2.5,-1.27l0.64,-0.96l0.42,-3.78l-0.91,-1.8l2.97,-3.56l-0.39,-1.56l-0.9,-0.92l-0.03,-0.58l0.98,-2.27l2.83,-3.51l0.27,-1.47l-0.25,-1.44l1.16,-1.08l0.07,-0.41l-1.03,-2.08l1.92,-5.32l1.43,-0.61l0.67,-0.81l1.28,-2.89l2.32,-1.48l0.76,-1.57l2.05,-2.03l1.13,-0.58l1.02,0.14l0.55,0.99l0.8,0.35l5.25,-2.66l2.54,-0.73l2.63,-0.18l2.91,0.53l3.48,1.13l3.42,-0.83l0.6,0.18l2.02,2.43l3.54,1.94l5.72,4.35l1.11,1.27l3.15,0.99l1.31,2.06l2.16,1.02l2.03,2.6l4.46,3.61l3.53,-0.53l0.9,0.63l-0.25,0.88l0.52,0.56l6.86,-1.66l2.72,-0.02l2.27,1.26l3.74,4.31l2.38,1.72l3.09,0.51l3.56,-0.94l6.44,2.31l2.99,1.95l2.07,0.43l3.93,-0.43l3.25,0.76l1.86,-0.19l4.41,-1.3l3.32,-2.44l2.4,-1.12l1.99,-0.29l6.95,1.48l11.57,-1.19l4.01,-1.94l7.2,-5.56l1.18,-3.51l2.99,-6.96l1.76,-7.63l4.77,-10.39l1.21,-3.89l1.64,-2.79l0.15,-2.28l2.18,-5.52l-0.47,-7.85l2.21,-0.74l2.94,0.06l2.6,-1.68l14.44,-4.4l2.49,-0.34l3.88,0.54l0.0,4.42l0.36,1.65l2.15,4.21l10.01,1.1l5.56,2.28l2.36,-0.03l3.43,-1.83l6.3,-2.66l2.39,-1.67l0.69,-1.54l1.02,-0.55l0.42,0.24l0.34,0.9l0.73,5.97l1.33,2.2l2.02,1.26l1.71,1.72l1.31,2.59l0.88,0.64l5.76,0.9l4.36,3.07l4.17,0.18l2.38,-0.35l0.32,0.26l0.49,1.81l0.93,0.67l1.06,-0.12l0.83,-0.67l2.0,-3.17l0.45,-2.78l1.5,-0.69l2.27,-0.26l2.08,1.99l0.52,0.03l1.62,-0.97l0.83,-0.15l8.17,0.95l1.02,-0.14l1.14,-0.8l1.07,-0.12l7.15,1.39l5.83,2.78l0.68,0.93l-0.17,1.4l-0.32,0.98l-0.5,0.38l-1.64,-0.16l-2.24,-1.23l-0.99,-0.08l-1.23,0.44l-0.6,1.02l0.16,1.37l1.35,1.04l1.05,2.01l0.8,0.75l1.46,0.27l1.72,-0.27l1.78,0.91l3.32,5.13l-0.52,4.49l-2.04,1.4l-4.22,0.57l-1.98,0.58l-0.14,-0.66l0.57,-0.77l-0.2,-1.01l-0.74,-0.28l-1.11,0.13l-1.69,0.84l-0.53,1.06l0.97,4.95l-0.27,2.25l-1.38,1.96l-2.56,2.02l-4.07,0.88l-0.28,0.55l2.11,5.32l-1.04,1.15l-0.08,2.92l-0.89,1.21l-1.68,0.56l-0.91,0.73l-7.81,1.44l-1.11,-0.81l-1.88,0.09l-3.8,-2.92l-4.62,1.7l-3.8,2.68l-2.71,12.44l-1.22,1.56l-1.74,0.6l-0.98,1.2l-3.22,0.32l-0.35,0.49l1.85,7.82l-4.6,3.2l-2.82,2.45l-0.09,0.49l1.97,3.74l0.73,2.35l0.9,0.43l1.91,-0.43l4.04,-1.83l1.06,-1.07l6.4,-1.87l1.28,1.39l1.39,0.8l4.43,0.07l-0.2,1.18l-0.98,0.69l-0.38,1.02l-0.27,3.25l-0.84,0.83l-0.72,1.53l-0.36,8.96l-1.19,0.99l-0.45,2.96l-1.58,2.32l-4.4,1.16l-3.06,-2.14l-1.79,0.2l-1.56,1.23l-2.26,2.59l-2.97,1.88l0.16,-1.66l-0.27,-0.38l-0.74,-0.21l-1.41,0.34l-5.3,0.11l-2.33,-0.32l-1.66,-0.84l-1.14,-1.87l-0.72,-0.64l-0.49,-0.03l-0.81,0.54l-0.38,1.19l0.16,3.17l-2.33,-1.9l-0.74,-0.17l-2.13,1.62l-1.35,-0.75l-3.11,1.63l-1.94,1.84l-0.49,1.73l-2.34,-1.03l-1.19,0.33l-2.72,2.93l0.01,2.56l-0.5,0.41l-1.25,-0.42l-0.95,0.17l-2.19,2.26l-3.13,0.88l-1.31,1.49l-0.01,0.49l1.2,1.65l2.82,2.79l-0.03,2.88l-0.82,0.41l-0.72,1.09l-0.35,1.5l0.66,1.09l2.64,0.75l-5.1,-0.05l-2.75,-0.35l-1.44,0.73l-0.59,1.2l-1.31,-0.7l-1.62,0.33l-1.32,0.79l-1.12,1.47l-0.36,1.54l0.08,1.21l-1.87,0.85l-4.9,4.47l-1.3,1.68l-1.47,2.78l0.15,1.11l0.71,1.3l-0.25,0.63l-0.86,0.25l-0.91,-0.27l-0.93,-3.97l-0.53,-0.61l-4.44,-0.99l-2.25,0.04l-0.81,-0.44l-1.5,-1.71l-0.77,-0.34l-1.36,0.16l-5.73,3.18l-2.49,2.21l-3.52,-1.05l-2.71,1.91l-1.73,-0.31l-1.02,0.83l-3.5,0.92l-5.13,4.17l-2.47,0.33l-0.75,0.53l-1.75,1.97l0.25,1.36l-1.86,2.53l-1.04,0.61l-0.75,0.98l-1.84,0.12l-0.8,0.44l-1.74,2.93l0.16,1.25l-1.81,2.79l-0.59,0.52l-1.47,-0.17l-0.74,0.79l-1.47,0.23l-2.02,1.52l-0.51,-0.03l-5.58,-10.5l0.65,-0.21l10.12,-11.74l-0.01,-0.53l-0.84,-0.86l-2.4,-0.58l-8.6,0.1l-1.2,-0.33l-1.63,-4.52l-0.85,-1.02l-2.06,-0.4l-1.68,0.39l-0.58,1.57l0.24,2.62l-0.66,1.74l0.43,1.95l1.24,1.1l0.13,1.37l-0.59,4.08l-0.57,1.15l-1.71,1.0l-1.58,2.53l-0.03,3.79l-0.46,1.7l-2.59,2.35l-0.96,2.08l-1.15,1.17l-4.03,-3.33l0.6,-2.21l-0.2,-1.42l-1.58,-1.98l-0.96,-0.63l-1.24,-0.28l-0.75,-1.48l1.09,-2.22l1.76,-1.75l0.77,-2.43l-0.37,-4.19l-0.83,-2.25l-0.47,-0.28l-16.66,3.64l-1.33,-2.88l-0.06,-3.73l-1.43,-2.62l-0.6,-4.43l0.36,-8.02l-2.75,-3.82l-0.69,0.16l-0.87,2.09l0.27,3.79l-3.33,-0.4l-1.16,0.3l-0.92,0.77l-0.36,1.0l0.16,0.9l0.93,0.79l-0.09,0.69l-1.57,0.4l-3.26,-0.14l-1.04,0.61l-1.71,2.01l-1.12,0.15l-4.48,-1.74l-2.33,-1.4l-1.7,-0.52l-4.51,-0.54l-0.73,-1.77l-1.27,-1.06l-2.42,-0.36l-4.23,-3.03l-5.32,-0.85l-0.99,-0.63l-4.87,-5.3l-2.29,-1.91l-2.75,-0.43l-0.78,-0.59l-1.18,-2.37l-0.2,-1.48l0.08,-2.96l0.38,-1.43l0.6,-0.79l3.11,-1.32l0.48,-0.78l-1.96,-2.92l-1.85,-5.87l0.37,-1.66l0.87,-1.32l0.19,-1.25l-0.21,-3.24l0.49,-2.12l-0.24,-1.02l-3.85,-2.72l-1.31,0.07l-1.27,-1.37l-3.45,-0.82l-1.53,-1.11l-1.94,-0.33l-3.0,0.17l-1.62,-0.39l-0.37,-0.72l-0.74,-4.4l0.33,-2.49l0.76,-1.07l-0.44,-17.51l-0.38,-0.39l-3.27,-0.17Z", "name": "North West"}, "ZA-GT": {"path": "M589.19,254.06l-0.53,-1.98l-1.86,-3.54l2.56,-2.23l4.77,-3.31l0.16,-0.42l-1.81,-7.64l2.95,-0.29l1.1,-1.26l1.92,-0.72l1.35,-1.72l2.77,-12.53l3.46,-2.32l4.22,-1.54l0.86,1.05l2.54,1.73l2.16,0.01l1.18,0.82l8.12,-1.49l0.98,-0.76l1.92,-0.72l1.09,-1.53l0.26,-1.29l-0.16,-1.67l0.85,-0.63l0.22,-0.69l-1.98,-5.23l3.8,-0.85l2.76,-2.17l1.5,-2.12l0.4,-1.76l-0.98,-4.87l-0.02,-0.88l0.36,-0.65l1.21,-0.56l1.11,-0.03l-0.59,1.03l0.02,0.78l0.76,0.83l0.93,-0.03l1.33,-0.56l2.98,-0.21l1.53,-0.46l2.24,-1.54l0.69,-4.78l3.31,-0.33l0.77,0.66l3.21,-0.01l3.03,-1.37l0.99,-1.19l1.21,-0.5l2.74,-0.17l1.88,0.28l1.92,-0.57l1.19,-1.06l-0.09,-1.4l-1.16,-0.88l-1.37,-1.8l-0.37,-1.1l5.34,-0.85l2.29,-1.51l3.92,-0.24l1.49,2.16l0.72,0.29l1.66,-0.81l0.98,-0.1l-1.22,1.82l-0.12,2.85l-1.39,-1.37l-1.1,0.53l0.4,4.59l-0.71,1.02l-2.21,1.78l-0.0,1.53l0.25,0.32l3.43,1.23l2.38,-0.72l1.27,-0.98l3.32,-0.52l2.86,0.71l1.28,-0.73l4.01,-1.03l2.76,0.76l1.87,-0.22l0.66,0.32l-0.33,1.68l-1.12,2.28l-3.15,-0.03l-1.1,1.19l-0.98,1.98l-1.46,0.63l-0.88,2.83l-1.55,1.76l-1.08,3.76l-3.06,2.83l-0.75,1.63l0.23,1.57l-0.49,2.23l-0.88,2.02l-0.24,2.64l-1.05,1.52l-2.02,1.43l-1.97,5.31l-0.39,1.95l-3.49,-0.09l-1.05,-0.81l-2.14,-0.49l-5.89,-0.03l-2.03,2.27l-1.11,2.28l-3.22,0.36l-2.16,1.3l-0.13,0.49l1.21,2.74l0.78,0.52l1.52,4.12l0.82,1.25l3.04,2.13l0.25,2.2l0.33,0.38l6.14,1.4l6.21,-0.88l2.11,4.23l-7.01,5.82l-5.29,1.15l-0.9,0.81l-2.13,0.11l-1.94,0.74l-1.24,1.17l-0.8,1.58l-1.55,0.58l-1.33,1.62l-4.1,2.81l-1.35,2.84l0.48,1.27l-0.11,0.78l-1.27,0.85l-1.95,2.17l-0.25,1.5l0.22,0.91l-0.63,1.99l-1.59,-0.96l-2.98,0.6l-0.91,-0.84l-0.41,-1.39l-0.38,-0.3l-0.91,0.07l-0.92,0.77l-2.24,-2.02l-2.6,-1.27l-3.24,-5.8l0.62,-0.68l0.06,-0.53l-1.49,-1.6l-0.69,-0.35l-0.92,0.11l-1.29,0.75l-2.35,2.54l-3.67,0.62l-2.27,0.92l-0.63,1.54l-1.65,-1.22l-4.37,0.45l-1.5,-2.06l-3.02,0.87l-0.21,0.47l0.21,0.73l-0.96,0.07l0.47,-7.11l-0.15,-1.41l0.64,-1.36l0.93,-1.03l0.47,-3.92l1.13,-0.92l0.31,-1.84l-0.39,-0.47l-4.75,-0.08l-2.84,-2.22l-6.71,1.96l-1.13,1.11l-3.9,1.78l-1.65,0.37l-0.36,-0.26Z", "name": "Gauteng"}}, "height": 755.9203590698716, "projection": {"type": "mill", "centralMeridian": 0.0}, "width": 900.0});
jQuery.fn.vectorMap('addMap', 'ca_mill',{"insets": [{"width": 900, "top": 0, "height": 693.6576731732696, "bbox": [{"y": -12522796.066032534, "x": -15704627.24417655}, {"y": -4935412.353764981, "x": -5860224.731043733}], "left": 0}], "paths": {"CA-NT": {"path": "M46.84,300.82l3.37,0.31l1.77,0.58l1.83,1.33l1.89,0.38l1.14,1.3l1.36,-0.07l1.41,0.46l0.24,-0.83l-1.72,-1.08l-0.39,-0.88l-1.01,-0.44l0.93,0.07l0.42,-0.31l-0.25,-0.46l-2.3,-0.38l-0.57,-0.94l-2.19,0.14l-0.95,-0.37l0.34,-0.38l-0.65,-0.97l1.67,0.93l1.05,0.03l1.85,-0.73l0.18,-0.48l-0.44,-0.27l-1.54,0.22l-0.55,-0.73l-1.69,-0.57l-0.17,-2.11l3.1,2.23l2.25,0.41l-0.28,-0.97l-1.91,-0.6l-2.04,-1.84l0.16,-0.5l0.87,-0.15l1.14,1.78l0.57,-0.12l0.14,-0.5l-0.49,-1.37l1.16,0.15l0.97,0.79l2.01,0.51l0.34,-0.81l-0.72,-0.55l-0.47,-1.92l0.99,-0.58l1.94,0.02l0.9,-0.29l2.21,0.19l1.1,0.56l0.9,0.05l0.67,-0.64l-0.01,-0.93l-0.65,-0.47l0.85,-1.62l-0.04,-0.59l1.32,0.03l0.25,0.38l-0.64,1.04l0.48,0.47l2.83,1.15l0.93,-0.07l0.29,-0.47l0.17,0.32l-2.43,1.91l-0.63,0.69l-0.15,0.71l-0.63,0.1l-1.02,1.13l-0.54,1.65l0.88,0.4l0.55,-0.42l0.72,-1.38l2.64,-0.65l0.5,-0.89l1.64,0.02l0.52,-1.01l1.62,-0.32l2.46,0.3l1.29,-0.73l0.47,0.13l0.31,-0.89l0.72,-0.69l0.29,-1.14l-0.26,-0.72l0.69,-0.65l0.52,0.0l0.21,0.37l0.77,0.05l0.6,-0.34l1.47,0.45l1.99,-0.56l0.24,-0.9l1.68,0.45l0.58,-0.75l2.87,-0.91l0.82,-1.11l1.17,-0.67l1.85,-0.46l0.31,-0.33l-0.02,-0.68l1.18,0.24l0.34,0.53l0.03,1.3l0.3,0.27l0.6,-0.12l0.28,-0.96l0.79,-0.3l0.79,-2.0l0.71,-0.37l-0.14,-0.68l1.32,-0.61l0.43,0.51l0.37,-0.03l0.68,-0.4l0.21,-0.62l1.29,0.56l0.43,-0.54l0.67,-0.18l0.34,1.07l1.2,-0.01l0.11,0.41l0.57,0.16l0.61,-0.64l1.91,0.25l0.46,-0.17l1.11,-1.83l0.03,-0.74l0.57,-0.08l0.19,-0.55l0.5,0.83l-0.36,0.49l0.28,0.39l0.99,0.03l0.18,0.88l0.44,0.4l-0.95,0.23l0.09,0.55l-0.5,0.38l-5.12,2.19l-1.6,0.52l-0.62,-0.1l-0.91,0.84l-1.21,0.34l-0.63,0.76l-0.03,0.61l-2.02,0.56l-0.71,1.34l-0.62,0.45l-0.59,-0.31l-0.14,-0.73l-0.43,-0.2l-1.33,0.19l-0.8,0.53l-0.81,-0.04l-0.36,0.48l-0.49,-0.23l-0.81,0.35l-1.59,-0.1l-0.23,0.35l-0.87,-0.19l-1.38,0.59l-0.82,-0.01l-1.23,1.13l0.07,0.42l-0.65,0.75l0.28,0.92l-3.12,0.98l-0.35,0.44l0.03,0.65l-0.83,-0.9l-2.25,0.67l-1.01,1.01l0.08,0.46l-0.78,1.16l0.11,0.48l-0.61,0.45l-1.08,-0.27l-1.11,0.57l-0.56,1.32l0.0,1.07l-0.58,0.32l-0.61,-0.45l-1.05,0.4l-0.45,1.34l0.6,1.18l2.67,1.41l2.82,0.36l0.5,-0.39l-0.13,-0.43l-0.78,-0.44l-1.49,-0.01l-0.01,-0.73l0.56,0.06l0.26,-0.35l1.13,0.35l0.34,-0.6l-0.21,-0.37l1.67,1.11l0.64,-0.06l0.17,-0.54l1.92,0.45l1.3,-1.39l-0.16,-0.41l-1.66,-1.0l-1.55,1.02l-0.18,-0.44l0.63,-0.14l-0.02,-0.45l-1.76,-1.07l0.15,-1.17l1.61,-0.1l1.03,-0.77l0.92,0.39l0.77,-0.41l0.52,-0.86l1.29,0.53l0.68,-1.48l1.81,-0.39l1.75,-1.19l0.97,-1.47l-0.09,-0.4l0.44,0.04l0.2,-0.83l1.39,0.29l-0.35,0.64l0.08,0.58l-0.57,0.56l0.54,0.41l0.99,-0.39l-0.27,0.6l0.17,0.42l1.12,-0.34l0.83,-0.85l0.75,-0.23l0.3,0.15l-0.05,0.74l1.44,0.22l-0.58,1.47l0.06,1.19l0.45,0.54l0.82,0.01l0.38,-0.59l-0.18,-2.06l1.46,-1.31l-0.05,-0.58l1.42,-0.84l0.25,-0.7l-0.25,-0.34l2.19,-1.73l0.02,-0.74l1.2,-1.28l1.48,-0.16l4.72,-1.39l1.02,-0.65l3.91,-0.46l0.34,0.99l-0.24,1.18l0.19,0.42l1.87,0.52l0.92,-0.18l0.1,-0.67l-0.35,-0.3l1.5,-0.35l2.09,-2.03l2.96,-1.71l0.11,-1.28l-0.4,-0.67l-0.03,-1.04l2.17,-1.02l1.08,0.12l1.18,-0.5l2.97,-0.51l1.09,0.1l-0.03,-0.49l-0.8,-0.62l-4.67,-0.86l-0.14,-0.4l0.76,0.23l0.4,-0.24l0.39,-0.68l-0.08,-0.7l-0.64,-0.15l-2.02,0.44l0.25,-1.6l1.48,-1.46l5.23,3.26l3.06,2.73l2.48,4.3l0.93,0.64l-0.11,1.35l1.12,2.53l4.74,4.47l3.23,2.06l1.48,0.53l1.08,-0.14l2.41,1.31l0.62,-0.02l0.53,-0.49l-0.04,-0.82l2.29,0.06l0.81,-1.61l-0.44,-0.88l-1.49,-0.74l0.38,-0.3l0.05,-0.7l-1.5,-0.32l-0.25,-0.44l0.27,-0.55l1.13,0.08l1.87,-0.98l0.42,0.16l0.34,1.36l0.86,0.1l1.04,-1.22l-0.09,-0.48l-1.18,-0.76l-1.39,-0.13l0.54,-0.6l0.13,-0.8l1.04,-1.18l2.57,-0.56l0.34,-0.77l0.67,-0.1l-0.53,0.58l0.72,0.55l-0.34,0.57l0.71,0.98l-0.6,1.01l-0.02,1.41l2.03,0.8l1.42,-0.6l1.1,0.18l-1.54,1.26l-0.33,1.18l-1.88,1.36l-0.18,0.94l-0.67,0.18l-0.09,0.62l0.25,0.26l1.91,0.81l1.78,0.12l0.94,-0.32l0.54,0.37l0.52,-0.26l0.06,-0.48l3.11,0.49l2.91,-1.0l0.25,-0.39l-0.63,-0.47l-0.03,-0.38l1.27,-0.42l1.02,0.22l0.57,-0.43l0.36,-1.31l-0.33,-0.84l0.63,-1.07l-0.27,-1.55l1.33,-0.96l1.78,0.76l0.6,-0.52l2.52,0.39l4.48,-0.29l3.88,0.52l2.22,0.41l6.18,2.54l1.11,1.04l0.0,27.21l0.23,0.61l83.25,42.71l18.71,0.11l11.67,9.82l3.13,1.52l2.54,0.58l70.72,8.89l-0.05,65.92l-221.51,0.0l-0.67,-0.58l-1.17,0.28l0.31,-0.97l-2.19,-3.54l-0.31,-2.13l-0.84,-0.43l-1.16,0.06l-0.37,-1.17l-1.56,-1.6l1.08,-0.95l0.31,-0.71l-1.3,-2.89l-2.59,-0.16l-0.8,0.79l-0.08,0.92l-2.82,0.09l-1.82,1.03l-1.79,-0.61l-1.63,-0.16l-2.03,-0.96l-0.92,0.53l-0.35,0.86l-0.47,-0.11l-0.14,-0.66l-0.64,-0.19l-1.08,0.19l-0.27,0.39l0.18,0.62l-0.34,0.15l-1.09,0.01l-1.14,-0.55l-1.66,1.04l-0.7,-0.53l-0.96,0.27l-0.39,-1.19l0.2,-1.21l-0.37,-1.83l-0.39,-0.4l-0.72,0.01l0.39,-1.46l-0.22,-1.33l-0.43,-1.81l-0.56,-0.4l-0.39,-1.18l-1.81,-0.93l-2.34,0.16l-1.11,-0.52l-0.46,-0.68l-1.02,-0.31l-1.03,-1.03l-0.64,-0.19l-0.21,-1.13l-0.83,-1.29l-0.56,-0.3l-0.86,0.15l-0.21,-0.9l-1.36,-1.18l-0.07,-0.65l-1.9,-1.55l-1.68,0.07l-0.84,0.92l-0.96,-0.91l-1.35,-0.32l-1.16,0.31l-0.78,-0.44l0.41,-0.74l-1.04,-1.64l0.71,-0.54l0.03,-0.68l-0.6,-0.29l0.92,-0.45l0.26,-0.73l-0.42,-0.6l-2.82,-1.33l-0.33,-1.22l-1.0,-0.6l-0.21,-0.81l-1.22,-1.34l0.38,-0.08l0.22,-1.16l1.06,-1.51l-0.12,-0.72l-0.75,-0.32l-0.93,0.17l-0.62,-0.34l-0.78,-1.67l-0.77,-0.24l-0.63,-0.85l-0.88,-0.15l2.12,-0.98l0.22,-1.21l0.76,-0.47l0.11,-0.48l-1.5,-2.41l-1.16,-0.2l-0.3,-1.12l-0.53,-0.12l-1.13,0.55l-0.31,-0.29l1.87,-0.56l0.27,-0.45l-0.3,-0.82l-2.21,-0.48l-2.05,-1.65l-0.65,0.04l-1.45,-0.66l-0.04,-1.0l-1.01,-0.34l-0.85,-0.97l0.64,-0.7l-0.18,-0.58l-1.32,-1.32l0.11,-0.79l-1.44,-1.61l-2.87,-0.81l-0.44,0.31l-0.14,0.6l-1.58,0.67l-0.72,-0.38l-0.92,0.12l1.26,-1.62l-0.1,-0.52l-0.69,-0.49l-1.04,-0.11l-0.85,-0.63l-1.35,-1.73l-1.03,-0.15l-1.7,-1.04l-1.71,-0.27l-0.62,0.22l-0.28,-0.47l0.98,-0.41l0.31,-0.53l-0.3,-1.16l1.59,-0.92l0.18,-0.54l-0.62,-1.07l-1.54,-0.16l0.19,-0.9l-0.42,-0.55l-0.52,-0.23l-1.0,0.33l-0.0,-0.3l0.56,-0.68l0.88,-0.14l0.42,-1.26l2.06,-1.4l0.6,-1.85l0.74,-0.45l0.32,-0.66l-0.55,-1.24l-1.55,-1.91l-1.94,-1.11l0.4,-0.5l1.85,-0.76l0.06,-0.99l-0.76,-0.54l-1.03,0.28l-0.41,-0.65l-0.66,-0.24l-1.03,0.3l-1.94,1.74l-0.55,0.04l0.62,-1.34l-0.79,-0.71l-2.4,0.23l-1.77,0.57l-0.46,0.6l-1.85,-0.2l0.15,-1.11l-0.29,-0.42l-0.65,-0.12l1.35,-1.17l0.01,-2.03l-0.44,-0.78l-2.03,-0.1l0.48,-1.78l0.57,0.2l0.61,-0.21l0.07,-0.71l-0.52,-0.8l0.86,-0.57l-0.0,-0.66l-0.97,-0.44l-1.26,-2.02l0.57,-0.8l-0.18,-0.85l-1.56,-1.76l-1.43,-0.54l1.75,-0.03l0.76,-0.81l-0.38,-0.28l-23.52,-0.0l-0.41,-0.72l0.18,-1.29l-0.33,-0.53l0.94,-0.66l0.48,-1.51l-0.29,-1.57l-0.71,-0.49l0.35,-1.59l-0.72,-1.82l-0.62,-0.6l-1.37,-0.35l-0.2,-0.99l0.0,-20.29ZM65.7,289.38l-0.02,0.02l-0.0,-0.03l0.02,0.01l0.0,0.0ZM160.28,290.03l-0.02,0.01l-0.0,-0.02l0.03,0.01ZM158.92,289.99l-0.65,0.14l-0.06,-0.22l0.02,-0.02l0.69,0.11ZM160.93,284.39l-0.24,-0.31l0.2,-0.19l-0.04,0.33l0.08,0.17ZM142.08,430.15l-0.02,0.01l-0.0,-0.0l0.02,-0.01ZM168.36,278.72l-0.1,-0.0l-0.16,-0.35l0.3,-0.07l-0.03,0.42ZM167.58,278.24l-0.13,-0.03l0.05,-0.04l0.08,0.07ZM166.5,278.3l-0.05,0.02l-0.02,-0.04l0.07,0.01ZM166.58,279.97l-0.63,-0.07l-0.62,0.87l-0.33,-0.76l1.3,-0.36l0.28,0.32ZM164.92,279.99l-0.05,-0.01l-0.09,-0.0l0.02,-0.04l0.13,0.05ZM162.31,280.42l-0.19,0.26l-0.65,0.27l0.41,-0.62l0.39,-0.15l0.04,0.24ZM121.97,283.05l0.16,-0.15l0.15,-0.21l0.09,0.37l-0.39,-0.01ZM122.53,282.17l0.11,-0.25l0.24,-0.31l-0.07,0.39l-0.28,0.17ZM102.13,293.01l0.04,-0.14l0.26,-0.46l-0.1,0.28l-0.21,0.33ZM100.52,288.17l-0.2,-0.09l0.26,-0.13l-0.04,0.06l-0.02,0.16ZM97.74,292.51l0.8,-1.64l0.13,-0.08l0.38,0.81l-1.32,0.91ZM80.04,302.3l-0.15,-0.07l0.14,0.03l0.01,0.04ZM79.74,302.15l-1.38,-0.29l0.03,-0.15l0.74,-0.22l0.62,0.65ZM84.43,300.32l-0.16,-0.02l-0.07,-0.02l0.23,0.05ZM88.06,285.91l-0.37,0.11l-0.08,-0.17l0.47,0.0l-0.02,0.05ZM86.65,285.74l-0.2,0.19l-0.14,0.06l0.1,-0.28l0.24,0.03ZM67.49,286.67l-0.31,-0.48l0.38,-0.15l0.05,0.01l-0.12,0.62ZM314.19,229.91l1.08,0.2l-0.0,0.54l-1.07,-0.16l-0.01,-0.57ZM312.23,155.24l2.43,-0.52l0.61,-0.42l0.0,4.04l-0.98,-0.66l-1.85,-0.39l0.27,-0.38l-0.48,-1.66ZM223.86,250.24l-0.79,-2.49l0.75,-2.79l1.04,-1.03l2.09,-1.22l0.45,-0.65l-0.0,-0.78l1.12,-0.84l4.54,-0.92l0.47,-0.58l-0.15,-1.45l-0.6,-0.76l-2.79,-0.29l-0.98,-0.43l-0.37,-0.73l0.67,-1.28l2.72,-1.62l0.58,-0.79l3.16,-1.2l0.71,-0.76l2.1,-1.13l2.26,-2.28l1.52,-0.09l3.24,-0.87l3.15,-1.8l0.97,-0.05l7.41,-2.42l2.0,-0.31l1.74,-0.62l0.7,-0.59l1.03,-0.02l1.06,-0.6l2.16,-0.47l2.34,-1.13l0.81,-0.12l3.14,0.93l2.31,2.29l0.52,0.94l-0.76,2.78l0.13,1.47l-0.32,0.88l0.83,1.24l-2.52,0.26l-1.23,0.94l0.13,1.46l-1.23,0.81l-1.26,0.3l-0.3,0.44l0.81,1.07l2.23,0.18l0.58,-0.73l3.74,-1.14l0.7,0.4l0.95,-0.22l0.28,0.74l0.94,-0.12l0.48,-0.53l1.4,-0.54l0.54,-0.66l0.2,-1.11l-0.31,-0.42l-1.46,-0.22l1.97,-2.35l1.9,-1.5l1.62,-0.39l4.77,1.04l2.62,1.14l2.07,0.1l4.27,1.64l1.07,0.13l0.89,1.06l2.13,0.41l0.16,0.67l-0.66,1.77l-2.01,1.03l0.1,0.76l-0.83,0.57l-3.47,1.61l-0.17,0.4l0.32,0.55l0.91,0.44l0.67,-0.13l-0.69,1.45l0.02,0.44l0.53,0.44l0.67,-0.27l0.66,-1.35l1.82,-0.67l0.63,-0.61l0.66,0.18l0.54,-0.46l0.77,0.66l0.66,0.09l0.95,0.93l0.58,-0.39l-0.6,-2.13l1.0,-0.74l-0.0,-0.46l1.63,0.09l0.36,-0.63l-0.36,-0.55l0.99,-0.78l0.95,0.47l-0.39,0.75l0.42,0.53l2.52,1.14l0.63,-0.2l-0.04,-0.7l-1.89,-0.95l0.58,-0.06l0.48,-0.59l3.35,2.28l0.04,44.82l-25.06,0.0l-0.4,0.4l0.0,1.17l-1.45,0.28l0.32,0.76l-0.38,0.42l-1.6,0.0l0.01,-2.53l-0.57,-0.5l-43.01,-0.02l-0.4,0.36l-0.06,2.4l4.47,3.89l-0.82,-0.08l-2.68,-1.13l-1.47,-0.98l-1.77,-3.93l0.33,-0.45l1.84,-0.99l2.26,-0.65l9.48,-1.66l15.48,-1.73l3.19,-0.01l1.54,0.63l4.03,0.34l1.74,-0.38l4.82,0.94l0.56,-0.36l3.68,0.94l0.83,-0.2l0.08,-0.62l1.06,0.26l0.51,-0.11l0.36,-0.56l1.39,-0.0l0.58,-0.37l1.68,0.43l4.34,-0.13l0.98,-0.41l-0.03,-0.69l-0.38,-0.19l0.09,-0.47l-0.51,-0.51l-3.02,-0.01l-1.6,-0.43l-0.77,-0.53l-0.58,-1.24l-0.74,-0.57l-1.03,-0.03l-0.62,-0.36l-0.68,0.17l-0.51,-0.42l-0.87,0.34l-1.95,-0.93l-1.13,-0.08l-0.54,0.38l-1.99,-1.12l-0.91,0.07l-0.38,-0.71l-1.53,0.01l-1.37,-0.66l-0.58,0.22l-0.19,0.46l-1.48,-0.85l-2.74,-0.45l-2.05,0.88l-1.76,-0.32l-1.65,0.77l-5.38,0.73l-4.6,0.09l-0.69,0.37l-1.72,-0.49l-3.08,0.49l-1.14,-0.26l-0.11,-0.61l-0.75,-0.24l-3.56,0.12l-1.06,0.46l-3.03,0.1l-2.49,-0.32l-0.91,0.26l-0.59,-0.42l-1.97,0.43l-1.02,-0.48l-0.05,-1.02l-0.7,-0.7l-5.1,-2.74l-1.31,-1.68l0.17,-0.39l5.82,-2.68l3.29,-0.29l3.8,-1.07l2.06,0.05l0.97,-0.53l0.08,-0.44l5.39,-1.34l0.67,-0.09l-0.04,0.24l0.67,0.2l0.9,-0.33l2.82,-0.07l0.64,-0.48l-0.2,-0.67l-2.87,-0.44l2.18,-0.87l0.55,0.29l1.14,-0.24l0.5,0.45l1.71,0.35l2.23,-0.63l1.71,-1.13l-0.26,-0.37l-0.82,-0.2l-3.12,0.84l0.15,-0.52l-0.32,-0.39l-1.67,-0.32l-2.2,0.14l-3.74,0.91l-3.7,0.39l-2.8,0.88l-2.36,-0.07l-3.12,0.87l0.17,-1.06l-2.12,-1.09l-1.12,1.13l0.31,0.58l1.14,0.18l-0.31,0.53l-1.67,-0.55l-0.79,0.56l-1.05,-0.24l-2.58,0.15l-0.66,-0.21l-0.49,-0.93l1.56,-1.06l1.85,-0.12l1.45,0.3l0.57,-0.25l-0.04,-0.29l1.0,-0.18l0.05,-0.85l-1.86,-0.67l1.37,-0.41l0.11,-0.72l-0.51,-0.24l-3.61,0.24l-1.31,0.8l-0.12,0.47l-0.82,0.12l-0.58,-0.03l-0.94,-1.11l-1.33,-0.32l-0.74,0.31l-2.26,-0.11l-0.68,1.11l-0.82,-0.41ZM301.38,236.45l-0.41,-0.12l-1.18,0.16l1.78,-0.8l-0.19,0.76ZM314.37,228.5l-0.96,-1.24l-2.87,-0.43l-2.04,-2.3l6.77,0.31l0.0,3.62l-0.9,0.03ZM282.5,113.66l0.6,-0.31l0.19,-0.94l5.25,-2.02l5.3,-1.29l3.51,0.16l4.03,-1.29l0.58,-0.46l-0.02,-0.42l1.93,-1.11l0.47,0.08l3.91,-1.38l2.97,-0.25l2.89,1.43l1.17,0.19l0.0,7.39l-2.98,0.87l-4.97,-0.62l-0.46,-0.64l-2.8,-1.04l-1.72,0.31l-0.35,0.75l0.28,0.39l-1.29,0.12l-0.08,0.99l-3.19,0.09l-1.24,-1.38l-2.98,-0.98l-5.91,1.13l-0.52,0.41l-2.58,0.73l-1.58,-0.16l-0.39,-0.75ZM237.95,179.23l0.1,-0.68l0.72,-0.1l0.33,-1.04l3.35,-2.38l11.79,-0.09l4.65,-2.13l3.26,-0.28l0.3,-1.07l1.33,-0.74l1.16,-0.23l0.01,-0.72l-0.8,-0.27l-3.22,1.02l-3.27,0.3l-2.93,0.71l-1.47,0.69l-10.77,0.05l-0.17,-0.25l3.43,-3.38l10.94,-0.93l0.51,-0.47l1.76,0.47l7.16,-0.69l0.63,-0.29l0.42,-0.75l-0.83,-0.66l-8.58,0.49l-0.75,-0.19l-4.53,0.6l-4.85,-0.65l-0.08,-0.38l0.9,-0.45l1.45,0.04l0.41,-0.66l-0.57,-1.2l-1.88,-0.12l0.62,-1.13l1.03,-0.81l3.52,-0.87l4.93,0.49l2.24,-0.16l6.41,0.81l1.76,-0.34l0.02,-0.72l-0.4,-0.22l-2.77,-0.11l-0.73,-0.64l-2.43,-0.6l-5.12,-0.02l-1.08,-0.64l0.53,-0.43l0.1,-0.5l-0.29,-0.39l3.51,-1.86l4.92,-0.48l1.33,-0.82l0.97,-0.04l-0.06,0.36l0.39,0.23l3.11,-0.18l2.76,0.81l0.5,1.07l-0.83,0.95l0.59,1.0l1.28,0.93l-0.6,0.51l0.15,0.66l0.96,0.56l2.89,-0.28l3.57,-1.25l2.02,0.25l1.59,-0.4l0.68,0.15l0.7,0.85l1.06,0.42l1.29,-0.01l1.16,0.42l-0.48,1.11l1.24,1.64l0.7,0.42l2.46,0.43l3.59,1.45l-3.08,0.62l-1.26,0.61l-0.04,0.47l-0.46,0.28l0.09,0.67l0.87,0.17l1.09,-0.48l1.17,0.49l0.78,-0.43l2.32,-0.15l0.22,0.43l1.27,0.48l0.13,0.96l0.7,0.18l-0.44,0.7l0.31,0.66l-0.29,0.57l1.18,1.99l0.64,0.5l7.63,-1.02l1.0,0.68l3.84,-0.13l0.0,13.57l-1.15,0.3l-1.67,-0.45l-1.08,0.51l-0.12,0.67l-2.43,0.05l-0.3,0.92l0.66,0.86l-1.45,0.4l-0.86,0.65l-0.87,0.09l-0.58,0.61l-2.39,0.49l-0.79,0.61l-1.05,-0.13l-2.5,1.37l-5.83,1.05l-2.03,0.69l-5.89,0.35l-1.97,-0.17l-4.68,-0.78l-4.62,-2.33l-2.75,-2.02l1.88,-1.25l2.57,-0.95l6.34,-1.1l1.21,0.32l0.61,-0.49l-0.14,-0.53l0.85,-0.96l3.02,-0.84l7.45,-0.47l2.85,0.46l2.17,-0.46l1.17,-1.1l1.87,-0.56l0.5,-0.79l2.22,-1.07l0.31,-0.89l0.87,-0.3l0.03,-0.61l-2.09,-0.9l-1.58,0.13l-0.92,1.26l-1.65,0.82l-1.01,-0.13l-0.66,0.43l-1.02,-0.82l-1.64,1.09l-1.48,-0.25l-2.8,0.56l-0.62,-0.14l1.44,-0.94l-0.53,-0.98l-1.07,-0.46l-0.74,0.6l-0.02,0.66l-0.87,0.0l0.13,-1.23l-1.03,-0.72l-0.46,0.17l-0.68,1.62l0.41,1.04l-1.34,0.65l-1.72,0.26l-0.73,-0.98l-0.66,0.17l-0.43,0.99l-6.73,0.59l-0.4,-0.18l0.15,-0.87l2.73,-0.87l0.28,-0.35l-0.79,-0.59l-2.12,0.62l1.13,-2.55l4.66,-1.74l0.4,-0.55l-2.19,-0.59l-3.86,1.21l-1.77,-2.02l-0.74,0.49l-0.03,1.26l0.42,0.82l-1.25,2.51l-0.79,-0.24l-0.48,-0.86l-1.9,-0.76l-1.26,0.82l0.07,0.8l1.91,0.3l1.07,1.36l-1.22,1.87l-5.12,1.93l-0.87,0.07l-1.11,-0.52l-0.25,-1.07l0.42,-0.44l0.01,-0.84l-0.99,-1.48l-0.45,0.0l-0.19,0.75l-1.19,0.84l-2.22,-0.98l-0.45,0.06l-0.19,0.75l0.62,0.51l0.59,1.28l-0.29,0.65l-1.02,0.4l-4.58,-1.43l0.97,-0.42l0.56,-0.74l-0.36,-0.62l-2.28,0.56l0.61,-0.81l0.06,-0.94l-0.34,-0.45l-3.23,0.5l-1.4,1.25l-0.69,0.02l-1.71,-0.74l-0.85,0.18l-4.91,-1.03l-1.44,-0.76ZM283.32,127.12l0.34,-0.32l-0.21,-0.43l-1.04,-0.66l-0.13,-0.49l1.0,-1.89l0.52,-0.2l1.6,0.54l0.83,-0.78l6.35,-1.79l3.24,-0.15l1.3,-0.63l0.45,0.45l0.75,0.01l1.92,-0.84l2.47,-0.48l2.44,-0.12l0.54,0.47l1.22,0.1l1.65,-0.77l6.7,0.09l0.0,2.96l-1.96,0.68l-6.21,0.61l-0.79,0.41l-0.18,0.48l0.24,0.7l1.15,0.58l0.88,0.89l3.87,-0.41l2.08,0.1l-0.21,1.3l0.53,1.35l-0.78,0.42l-0.24,0.52l0.72,0.75l-1.24,0.91l-3.31,1.02l-2.3,0.24l-0.86,0.68l-4.02,-0.4l-1.32,0.62l-7.04,1.66l-3.52,-0.93l-1.69,-2.0l-1.61,0.28l-1.52,-0.38l-0.55,-0.95l-1.9,-0.21l-0.24,-1.02l1.2,-0.48l0.08,-0.64l-1.21,-0.86l0.01,-0.99ZM293.64,274.49l0.64,0.09l0.44,0.16l-0.42,0.02l-0.66,-0.27ZM266.55,147.45l0.1,-0.32l2.03,-1.07l1.9,-0.42l5.91,-0.35l3.21,1.25l0.38,0.75l-1.74,1.33l-1.63,-0.45l-5.96,-0.09l-4.2,-0.64ZM264.68,122.3l2.39,-0.54l1.19,-1.11l1.66,-0.28l1.58,-0.68l-0.33,0.26l-0.03,0.64l0.94,0.98l1.57,-0.11l1.56,1.66l2.47,0.58l0.27,0.85l0.68,0.43l-1.0,0.76l-4.34,1.32l-1.26,-0.13l-1.95,-0.84l-0.35,-0.62l-3.28,-1.7l-1.76,-1.45ZM155.3,243.95l0.75,-2.01l-0.46,-0.98l1.56,-0.43l0.42,-0.4l-0.37,-0.54l-0.53,-0.04l-0.14,-0.53l0.76,0.08l1.03,-0.74l0.12,-0.75l-0.33,-0.26l0.86,-0.67l1.23,-2.25l2.31,-1.4l1.07,-0.08l0.11,-0.98l-0.36,-0.53l-0.5,-0.03l1.05,-1.25l-0.39,-0.63l0.05,-0.89l-0.8,-1.5l0.87,0.25l1.66,-0.7l0.78,0.11l1.34,-0.39l1.19,-0.59l-0.18,-1.46l-1.09,-0.36l-0.52,-0.66l-0.97,0.0l-0.13,0.24l-0.94,-0.89l0.58,-0.84l1.11,-0.22l0.47,-0.45l-0.15,-0.56l1.72,-2.83l0.89,-0.64l-0.29,-1.04l1.11,-0.5l0.27,-0.44l1.2,-0.19l0.19,-0.54l0.92,-0.49l0.33,-1.15l-0.33,-1.14l2.12,-0.77l0.32,-0.96l0.5,-0.37l0.1,-0.53l-0.84,-1.35l-3.14,-0.52l-0.5,-0.41l0.0,-1.0l-1.3,-1.1l-0.44,-1.08l-0.68,-0.58l0.17,-1.26l-0.53,-0.66l-0.56,-1.94l-0.94,-0.32l0.22,-0.15l-0.29,-0.81l3.84,-0.52l1.07,0.13l0.64,-0.56l5.97,-0.44l1.82,-0.46l6.93,-0.28l5.15,-0.67l5.37,-1.18l4.48,0.91l1.08,0.7l0.46,1.01l8.39,2.91l1.84,0.19l1.33,0.68l1.63,-0.03l-0.16,0.78l-1.56,1.7l0.1,0.9l0.89,0.65l0.74,-0.25l-0.13,-1.17l1.2,-0.66l1.31,-1.72l2.28,-0.01l0.8,0.31l0.26,0.56l-0.29,0.45l0.25,0.63l0.36,0.08l-0.68,0.53l-0.49,1.32l-0.07,0.32l0.45,0.47l1.28,-0.52l0.67,0.21l0.68,-0.3l1.62,-1.89l0.01,-0.86l-0.74,-0.64l1.29,-0.57l6.58,-1.18l6.49,0.95l5.51,2.85l5.42,4.3l0.92,0.24l2.67,1.83l0.64,0.76l3.02,1.17l2.87,2.92l-1.18,1.08l-0.79,0.12l-2.17,1.3l-7.1,1.86l-7.68,3.79l-1.9,0.26l-3.84,1.66l-2.8,1.62l-2.0,0.56l-2.05,1.0l-0.87,0.93l-2.44,0.34l-1.47,1.01l-2.61,1.12l-0.44,1.04l0.04,0.93l-1.25,1.71l-0.19,1.77l-4.6,2.31l-2.88,-0.16l-0.15,-0.59l-0.77,-0.22l-0.94,0.33l-0.12,0.94l0.72,0.6l0.25,1.18l-1.41,1.94l-1.39,1.17l-0.24,0.67l0.64,1.08l-0.29,2.44l0.4,1.06l-1.26,2.59l-1.09,0.87l-3.55,1.15l-4.3,0.89l-0.87,-0.18l0.03,-0.58l-0.78,-0.74l-1.36,-0.09l-4.36,3.73l-5.09,1.76l-1.66,1.6l-2.92,0.06l-1.39,-0.77l-1.74,-2.09l-1.94,-4.05l-1.06,-1.2l-0.84,-0.36l-1.4,-2.13l-1.38,-0.94l-6.06,-1.96l-4.67,-2.18l1.68,0.3l0.4,-0.6l-0.4,-0.57l-0.66,-0.27l-2.72,-0.03l-4.88,0.51ZM183.89,161.48l0.71,-1.04l0.12,0.01l-0.18,0.42l-0.66,0.62ZM184.96,160.27l0.4,-0.99l0.95,0.13l1.04,-0.94l0.2,-1.56l2.07,-1.19l4.26,-0.64l1.89,0.25l2.9,-0.53l1.21,-1.55l0.01,-0.84l1.75,-1.32l0.37,-1.37l0.67,0.41l1.91,-0.52l1.17,-0.83l2.72,-0.59l0.5,-0.55l1.31,-0.59l0.16,-0.6l-0.4,-0.86l1.79,-0.5l0.6,-0.62l-0.09,-0.43l0.96,-0.66l-0.03,-0.52l1.39,-0.16l1.17,-1.11l0.13,-0.66l1.68,-0.35l0.49,-0.73l2.2,-0.9l1.1,-2.15l1.1,-0.65l2.02,0.1l1.4,-0.81l6.46,-0.04l1.89,-0.53l0.37,0.44l1.55,-0.15l0.64,0.65l2.46,0.15l0.35,0.4l0.83,0.02l1.47,0.62l1.12,-0.32l0.85,0.17l0.59,-0.25l-0.14,-0.87l1.9,0.62l0.63,-0.35l-0.05,-0.48l1.44,-0.91l-0.43,-0.77l-3.19,-0.07l-0.45,-0.66l1.16,-0.2l1.68,-0.88l0.06,-0.64l2.93,-0.33l0.87,0.71l1.08,0.01l1.05,0.56l0.03,0.56l0.4,0.26l3.22,0.71l3.08,1.67l-0.65,1.03l-2.5,0.4l-1.41,0.82l-3.34,0.38l-0.6,1.0l-1.0,0.28l-0.06,0.64l1.02,0.46l0.34,1.15l0.47,0.44l4.77,1.69l-1.4,0.69l-1.03,-0.03l-3.09,-1.0l-0.86,0.76l0.23,0.75l1.85,1.41l1.38,0.34l0.42,1.22l0.74,0.92l-0.8,0.33l-0.76,1.06l-2.33,0.96l-1.93,0.29l-2.42,-0.11l-0.95,0.66l-0.97,-0.27l-0.85,0.15l-0.85,1.09l0.77,0.99l0.08,1.08l0.55,1.22l-1.77,1.08l-2.06,0.62l-2.08,-0.24l-0.58,-0.34l-0.37,-0.74l-1.84,-0.11l-1.71,-1.57l0.43,-1.17l-0.23,-0.31l0.95,-0.54l0.17,-0.5l-0.45,-1.33l0.47,-0.6l-0.15,-1.07l1.86,-1.89l-0.37,-1.05l-0.83,-0.49l-0.7,0.11l-1.35,1.13l-3.22,-0.1l-0.42,0.46l0.33,0.82l-1.49,-0.17l-0.4,0.59l0.33,0.87l1.17,0.72l0.36,1.38l-1.5,0.16l-0.5,0.83l-1.12,-0.12l-0.81,-0.83l-0.92,-0.22l-0.43,0.12l-0.12,0.51l-1.05,0.37l-0.31,0.65l0.21,0.54l1.32,0.29l0.33,0.43l1.32,0.19l0.85,1.83l-0.6,0.79l-1.89,0.07l-0.74,0.39l-0.44,1.1l0.18,0.94l-0.49,0.84l-0.64,0.07l-0.52,0.59l-1.36,-0.49l-0.31,-1.45l-1.43,-1.31l-0.19,-1.79l-0.34,-0.47l-0.83,0.16l-0.28,0.61l-1.42,-0.24l-0.34,0.54l0.62,0.66l-0.49,0.86l1.35,1.55l-1.0,-0.01l-0.29,0.6l0.26,0.44l-0.95,-0.03l-0.31,0.67l2.93,1.37l0.26,0.98l-0.82,-0.54l-0.62,0.14l-0.76,1.16l0.15,0.34l-1.56,1.25l-1.61,0.3l-0.42,-0.79l-0.86,-0.35l-1.55,1.65l-1.11,0.2l-0.29,-0.42l0.28,-1.49l0.69,-0.89l-0.59,-1.22l-0.55,-0.27l-1.22,0.19l-0.14,0.38l-0.58,-0.28l-0.35,-0.68l0.69,-0.73l-0.34,-0.73l0.24,-0.69l-2.24,-1.32l-1.21,0.5l-0.77,1.02l-0.18,1.76l0.49,0.89l-2.14,0.41l-0.7,0.57l-0.21,0.67l-0.73,-0.29l-0.84,-0.99l-3.89,-1.29l-3.0,0.14l-0.4,1.25l-2.05,0.87l-2.22,-0.1l-0.28,-0.19l1.06,-0.95l0.82,-1.63l-0.23,-1.39l-1.98,-0.78l-1.78,0.53ZM212.36,144.01l-0.01,-0.05l0.02,-0.01l-0.0,0.06l-0.0,0.0ZM242.0,270.27l0.19,-0.06l0.36,0.09l-0.34,0.02l-0.21,-0.05ZM220.39,171.88l0.57,-0.67l3.46,-2.09l1.48,-1.49l0.7,-0.21l1.51,-1.57l2.95,-1.0l1.64,-0.07l0.9,-1.3l1.97,-0.66l0.89,-0.91l1.18,-0.25l1.45,0.47l-0.95,1.96l-0.88,1.03l-1.09,0.61l-0.58,0.79l0.04,0.46l-1.1,1.07l-0.08,1.03l-3.2,2.44l0.08,0.46l-3.78,1.79l-1.86,-0.6l-0.23,-0.44l-0.64,-0.18l-2.74,-0.06l-1.7,-0.61ZM201.4,168.82l2.35,-1.0l0.31,-1.46l-0.4,-0.48l0.93,-0.36l-0.28,1.87l-0.79,1.11l-0.82,0.49l-1.3,-0.17ZM130.04,269.3l0.18,-0.34l0.69,0.37l-0.13,0.4l-0.74,-0.42ZM56.98,291.96l0.37,-0.01l0.02,0.16l-0.38,-0.15ZM55.79,288.02l-0.22,-0.03l0.81,-0.64l-0.27,0.45l-0.32,0.21ZM49.37,296.74l0.16,-0.41l0.5,0.37l-0.34,0.14l-0.32,-0.1Z", "name": "Northwest Territories"}, "CA-NU": {"path": "M500.58,36.92l0.09,-0.27l0.73,-0.09l0.84,-1.65l2.88,-1.02l1.89,0.34l1.85,-0.1l0.2,-0.81l-0.89,-0.48l0.31,-0.32l0.63,-0.23l2.79,0.07l1.36,-0.93l3.64,-0.55l3.08,0.35l0.23,-0.39l1.54,-0.47l0.01,0.44l1.07,0.92l1.51,0.49l0.34,0.52l1.73,0.26l0.04,-0.54l1.79,-1.28l0.12,-0.6l-0.25,-0.31l0.77,0.24l0.92,-0.33l0.23,-0.54l-0.53,-1.27l0.19,-0.17l3.21,-1.23l4.47,-0.55l1.67,-0.65l2.66,0.72l2.22,-0.33l2.04,0.33l1.62,1.03l-1.14,0.77l-0.05,0.62l0.29,0.27l5.88,1.85l0.43,-0.13l0.04,-0.44l-0.42,-0.69l-0.73,-0.47l-2.01,-0.43l1.67,-0.18l0.36,-0.4l-0.34,-0.56l-1.14,-0.59l3.26,-0.17l4.64,0.31l1.81,0.69l5.98,3.95l0.62,-0.26l0.11,-0.55l-0.36,-0.55l-2.47,-1.6l-0.54,-0.75l4.0,-0.0l0.54,0.2l1.76,1.83l1.22,0.69l1.28,0.28l0.44,-0.23l-0.12,-0.48l1.63,0.53l0.42,-0.17l-0.01,-0.46l-0.83,-0.77l-0.29,-1.07l-0.66,-0.73l-20.0,-3.59l-1.25,-1.29l2.79,-0.51l2.05,0.25l6.98,-0.35l1.26,-0.77l1.7,-0.09l0.51,-0.33l-0.04,-0.7l-1.02,-0.5l0.45,-0.4l-0.29,-0.67l-0.73,-0.01l0.15,-1.11l-0.75,-0.48l-1.53,0.05l-1.03,-0.31l0.49,-0.23l10.55,-0.38l0.36,0.21l-2.25,0.1l-0.84,0.75l0.33,0.32l4.27,0.68l1.65,1.1l1.79,-0.41l5.18,0.58l2.39,1.08l0.89,1.81l3.12,1.45l0.6,0.9l-0.47,0.54l-0.95,0.17l-0.33,0.39l0.39,0.55l10.41,0.28l1.64,0.6l0.97,-0.29l-0.05,-0.68l-0.58,-0.59l-1.85,-0.8l-5.16,-0.07l-2.1,-2.02l-1.74,-1.08l0.1,-0.98l3.95,1.24l1.76,0.02l2.74,1.4l15.2,4.25l0.69,0.54l1.47,-0.25l4.08,0.95l5.0,3.52l3.19,0.19l0.4,-0.28l-0.17,-0.46l-4.51,-2.85l-0.32,-0.68l-1.67,-0.39l0.41,-0.3l0.01,-0.59l-0.5,-0.37l-10.75,-1.88l-0.17,-0.2l0.88,-0.52l0.1,-0.44l-0.37,-0.26l-4.23,-0.07l-14.25,-5.36l-0.08,-0.27l2.13,-2.2l10.41,0.12l0.04,-0.68l-0.26,-0.18l-4.18,-0.42l-3.89,-1.48l-0.77,-0.64l0.38,-0.5l2.47,-0.36l6.54,1.06l5.34,2.4l3.31,-0.18l0.33,-0.59l-0.36,-0.55l-5.0,-2.83l-0.8,-1.19l-3.97,-1.72l0.71,-0.34l11.57,1.09l0.27,0.74l1.19,0.57l-0.25,0.67l0.47,0.66l3.21,0.97l0.84,-0.33l-0.1,-0.66l-1.48,-0.75l8.1,1.11l0.97,-0.28l0.99,0.25l4.0,-0.14l0.66,-0.37l0.16,-0.42l-0.33,-0.3l-14.03,-1.93l-0.28,-0.67l2.33,-0.06l0.39,-0.57l-0.35,-0.4l-6.77,-0.82l-0.35,-0.28l1.67,-0.37l0.67,-0.48l8.06,-0.89l2.08,1.28l0.66,1.13l1.08,0.03l2.02,-1.66l1.62,0.01l0.73,0.37l-0.47,1.0l0.44,0.97l0.49,0.11l0.97,-0.62l0.28,0.37l2.07,0.66l0.7,0.0l0.4,-0.4l-0.19,-0.36l1.0,-0.24l-0.36,-0.98l1.74,-0.41l7.09,1.46l1.78,1.43l-0.02,0.84l1.83,0.49l2.23,2.0l6.01,1.9l-1.87,1.13l-1.23,1.69l0.5,0.84l0.85,0.04l5.2,-3.45l2.2,-0.25l0.62,-0.46l-0.01,-0.65l-8.31,-2.28l-0.66,-0.69l2.27,-0.17l0.82,-0.51l0.17,-0.45l-0.38,-0.29l-3.96,0.0l-1.54,-0.75l-1.41,-1.49l-6.82,-2.6l1.26,-0.41l0.73,0.46l9.1,-0.62l1.08,-0.47l7.0,0.34l1.53,0.43l1.05,0.0l1.36,-0.48l8.55,1.0l2.87,2.13l0.93,1.32l12.6,4.16l1.44,-0.9l-0.3,-0.58l-6.18,-1.56l-2.31,-1.36l-1.04,-1.39l-1.7,-0.47l1.83,-0.65l1.85,-1.2l3.13,-0.59l0.64,-0.41l0.13,-0.46l1.61,-0.46l0.98,-0.13l1.08,0.6l2.25,-0.77l5.97,0.13l-1.23,0.98l-0.28,0.98l0.47,0.6l1.74,0.88l0.21,0.51l7.6,1.58l0.42,-0.61l-0.47,-0.63l-4.5,-2.15l-1.42,-0.26l1.77,-0.8l1.75,-0.34l0.17,-0.67l1.69,0.48l0.89,-0.32l0.06,-0.42l10.72,-0.13l-0.0,0.53l-0.52,0.53l0.35,0.59l1.91,0.15l-0.78,0.29l-0.19,0.71l0.72,0.41l4.1,-0.6l1.77,-0.8l0.21,1.13l0.61,0.44l2.79,0.0l1.56,-0.67l3.37,0.24l-0.33,0.76l0.16,0.49l0.91,0.43l1.37,-0.53l3.96,-0.42l4.18,0.95l1.11,-0.73l0.69,0.1l0.24,0.59l0.97,0.25l0.73,-0.16l0.55,-0.65l1.15,0.41l2.53,-0.0l-0.0,0.54l-4.21,1.48l-0.42,0.49l-3.01,0.48l-1.04,0.57l-11.97,2.15l-2.69,1.24l0.12,0.65l0.73,0.26l11.97,-0.7l3.59,-1.34l2.31,-0.32l1.9,0.3l0.63,-0.32l0.01,-0.88l7.79,-2.09l3.33,-0.02l-0.39,0.83l0.51,0.6l3.56,0.42l0.4,-0.27l-0.15,-0.46l-1.45,-0.49l1.01,-0.76l1.15,-0.36l-0.57,-0.94l1.71,-0.1l-0.06,0.73l0.71,0.37l1.11,0.02l-0.01,0.58l0.42,0.42l2.86,1.46l0.76,-0.27l0.12,-0.49l0.64,-0.03l1.85,-1.12l7.04,0.39l0.07,0.79l-0.75,0.46l-3.64,0.48l-0.35,0.41l0.38,0.38l1.97,0.09l0.69,0.35l0.34,0.65l0.78,-0.05l1.89,0.59l-0.82,-0.0l-0.4,0.52l0.44,0.62l3.74,0.41l-0.91,0.83l-0.04,0.69l-0.59,0.92l-2.22,0.43l-0.27,0.35l0.36,0.64l3.61,-0.45l1.53,-1.43l0.44,0.59l0.91,0.1l0.4,-0.53l-0.14,-0.35l3.47,-0.1l-0.25,0.6l0.45,0.53l0.97,-0.19l0.47,-0.5l0.71,0.0l0.28,0.34l5.22,0.18l2.38,0.92l1.98,1.61l0.43,1.06l-0.28,1.54l-1.8,1.36l-7.23,1.41l-0.32,0.32l0.18,0.41l1.05,0.38l-3.26,1.76l-2.23,0.03l-0.55,0.37l0.0,0.56l-14.09,4.55l-1.92,-0.1l-2.16,-0.68l-0.33,0.62l0.18,0.28l1.67,1.11l-2.07,0.58l-3.97,-0.14l-1.45,-0.65l-1.38,0.2l-3.29,-0.33l-0.41,0.26l0.16,0.48l-6.68,0.93l-0.33,0.31l0.67,0.72l-1.43,0.6l-15.44,0.84l-5.43,0.72l-11.06,-3.83l-0.48,0.17l0.08,0.5l0.71,0.6l8.13,3.02l-3.95,-0.14l-0.41,0.4l0.31,0.57l2.8,0.65l13.44,-1.33l6.08,0.96l-14.06,3.04l-4.05,1.5l-3.79,0.83l-2.02,0.35l-4.07,-0.36l-0.76,0.44l0.2,0.77l-1.11,0.35l-3.48,0.57l-2.64,-0.06l-0.49,0.33l0.11,0.72l1.6,0.44l2.23,-0.22l-1.66,0.54l-0.43,0.83l0.42,0.19l3.95,-0.79l1.57,-1.12l17.21,-3.18l5.95,-1.41l12.65,-2.14l2.29,-0.71l11.91,-1.37l0.82,1.22l-2.37,1.87l-4.26,1.38l-2.91,1.53l-6.06,1.03l-4.79,2.54l-0.78,1.0l-1.36,0.96l-5.63,2.34l-3.47,-0.06l-0.47,0.3l-0.11,0.57l0.54,0.61l-0.37,0.29l-2.2,0.37l-0.51,0.83l-1.12,0.56l-2.93,0.85l-5.09,2.87l-1.96,0.5l-0.21,0.64l0.33,0.34l-2.29,1.37l-1.08,1.3l-0.59,1.36l-3.18,1.16l-5.81,-0.06l0.57,-1.27l-1.25,-1.44l-4.71,-2.27l-0.73,0.09l-0.25,0.53l0.16,0.46l3.24,1.9l0.9,1.03l-0.62,0.9l0.21,1.0l4.79,1.72l-0.98,0.44l-0.69,0.79l-5.84,-0.37l-3.65,0.51l-4.06,1.5l-2.21,0.07l-2.62,-1.69l-1.74,-0.09l-1.85,-0.83l-1.1,0.47l0.12,0.69l4.55,1.84l-1.28,0.35l-2.84,-0.1l-0.41,0.56l0.88,0.89l8.46,-0.14l5.24,-1.26l3.46,-0.45l1.22,0.86l-0.07,0.64l-1.22,0.23l-0.6,1.0l-6.69,1.12l-0.96,0.72l-0.08,0.99l0.67,0.33l2.46,-0.64l1.95,0.4l-0.62,1.01l-1.12,0.74l-2.4,0.6l-1.06,0.59l-4.59,0.81l-2.91,0.88l-1.49,-0.5l-2.5,0.15l-2.81,-0.67l-0.27,-0.83l-0.7,-0.7l1.09,-0.21l0.05,-0.69l-0.48,-0.24l-2.61,0.01l-2.05,-0.35l-3.49,0.3l0.2,-0.42l-0.52,-0.48l-4.68,-0.71l-1.17,0.5l-5.21,0.55l-0.36,0.37l2.09,1.68l3.32,-0.3l7.77,1.11l1.71,-0.18l0.39,1.11l1.79,1.24l0.0,1.54l0.43,0.31l-1.66,0.98l-4.06,0.26l-2.3,-1.5l-0.82,0.62l0.43,1.51l-0.23,0.32l-2.69,0.36l-1.16,-0.27l-2.98,0.04l-2.14,-0.85l-0.44,-0.59l-0.63,-0.01l-0.91,0.53l-0.09,0.51l1.66,1.56l-0.97,0.59l-4.8,-0.51l-1.63,-0.85l-0.86,0.44l-0.7,-0.89l-1.44,0.57l-2.4,-1.5l-8.59,-0.65l-1.11,-0.6l-0.85,0.92l0.15,0.7l0.45,0.29l-0.74,0.33l-1.32,-0.27l-0.49,0.26l-0.17,0.55l1.78,2.29l-5.25,-0.62l-1.06,-0.38l-1.95,0.33l-0.27,0.53l0.28,0.38l2.3,0.74l2.1,-0.05l1.82,0.6l-0.6,0.34l-0.15,0.47l0.42,0.26l7.21,-0.71l2.78,0.42l3.15,-0.37l2.57,0.9l9.13,0.14l2.58,-0.29l2.19,0.25l-2.28,0.18l-0.42,0.31l-0.04,0.61l0.78,0.55l0.88,-0.09l0.14,0.61l0.89,0.32l1.08,1.0l-3.21,-0.1l-2.93,0.36l-4.19,-0.96l-2.38,-0.2l-0.33,-0.38l-0.73,-0.07l0.18,-0.77l-0.48,-0.59l-2.3,-0.94l-9.1,0.31l-12.22,-0.1l-1.06,0.66l0.09,0.61l0.46,0.27l1.82,-0.38l13.33,0.67l5.83,0.55l0.12,0.23l-5.63,-0.25l-4.66,0.45l-3.71,1.04l-1.53,-0.24l-1.05,-0.77l-3.14,-0.35l-8.16,0.35l-0.36,0.31l0.68,0.67l9.63,0.13l1.49,0.48l-2.02,0.93l-3.46,3.57l-0.2,0.68l0.59,0.68l1.13,-0.24l1.32,-1.75l3.35,-2.42l9.91,-1.5l9.59,1.24l-0.48,0.47l-4.43,0.48l-1.87,0.78l-0.43,0.62l0.33,0.63l0.81,-0.02l1.42,-0.65l4.09,-0.02l1.08,-0.37l4.38,0.27l3.82,0.66l0.46,0.58l-0.58,0.55l0.28,0.35l0.82,0.14l-0.26,0.65l0.33,0.38l-0.76,0.7l0.07,1.28l0.76,0.46l1.03,0.07l-1.01,0.06l-2.17,1.14l-1.63,-0.13l-2.11,0.56l-11.16,-0.71l-1.9,0.5l-0.45,0.58l0.33,0.52l4.2,-0.18l1.23,0.26l0.79,0.92l9.75,1.99l0.39,0.61l-2.9,0.15l-1.03,1.44l-1.54,0.92l-5.69,-1.03l-1.76,0.32l-2.54,-0.51l-2.93,0.71l-0.51,0.52l0.07,0.55l0.56,0.41l2.75,0.61l3.17,0.25l1.16,0.44l5.62,0.0l0.14,0.22l-0.97,1.02l-2.17,1.72l-0.48,-0.48l-2.68,-0.8l-2.36,0.66l-0.84,1.0l-1.98,0.24l-1.39,0.63l-1.63,-0.19l-1.09,-0.76l-7.32,0.13l-3.7,-1.25l-0.75,0.68l0.25,0.39l-1.57,0.72l-0.2,0.81l1.18,0.96l1.67,0.23l0.27,0.46l1.51,0.52l0.18,0.7l-0.86,0.45l0.09,0.72l0.31,0.15l-0.75,0.38l0.14,0.65l1.75,0.12l0.62,0.88l0.7,0.12l-2.05,0.73l-0.28,0.5l0.32,0.83l-0.5,0.58l-2.62,0.89l-0.12,0.6l0.29,0.41l-2.43,0.42l-1.88,0.97l-0.52,0.12l0.63,-0.75l-0.14,-0.59l-0.68,-0.22l-0.89,0.18l-1.61,1.31l-1.25,0.51l-5.09,-0.64l-2.12,0.22l-1.28,0.66l-5.79,-0.62l-2.3,-0.56l-2.24,-1.01l-0.39,-0.48l-2.5,-0.63l-1.06,-1.14l-1.65,-0.55l0.02,-0.47l-0.77,-1.29l-1.95,-0.66l0.02,-0.58l-0.61,-0.7l-0.96,-0.04l-0.3,1.01l0.41,1.02l1.22,0.61l1.15,1.33l-0.69,1.2l0.21,0.95l2.71,1.32l2.76,0.06l0.09,0.31l-6.45,0.7l-3.03,-0.55l-0.76,0.36l0.07,0.71l2.7,0.95l0.19,1.39l0.62,0.51l1.37,0.05l1.28,-0.72l5.17,-1.82l9.06,1.58l-0.67,0.43l-0.35,0.8l-1.32,0.92l0.13,0.63l0.65,0.19l0.66,-0.21l2.96,-2.28l3.01,-1.12l2.74,0.1l2.25,0.63l1.4,0.83l-0.08,0.63l0.41,0.34l-3.74,2.98l-0.15,0.65l0.35,0.57l4.8,-0.14l-0.77,1.49l0.34,0.5l2.48,0.32l0.61,-0.47l-0.07,-0.72l1.29,-0.36l0.34,-1.17l1.45,-0.42l0.06,-0.66l2.36,-0.41l1.92,1.16l0.05,0.89l0.4,0.41l-0.22,0.77l1.39,0.71l-0.4,0.65l0.11,1.13l-0.4,0.69l0.22,0.86l-2.29,0.34l-1.7,1.62l0.26,0.7l-1.74,0.48l-0.52,0.72l-0.79,0.08l-0.73,-0.44l0.01,-0.9l0.39,-0.41l-0.4,-0.54l-2.1,-0.2l-0.51,0.28l-1.74,2.81l-2.2,0.69l-1.04,2.06l-2.55,-0.32l-5.42,1.82l-1.51,-0.31l-2.11,0.97l-1.72,0.01l-0.6,0.7l-2.14,-0.19l-0.74,0.6l-0.73,0.19l1.16,-0.77l-0.26,-0.53l-0.69,-0.17l0.06,-0.5l0.79,-0.34l0.68,-1.25l1.2,-1.1l-0.08,-1.26l-2.06,-1.3l-1.98,-0.47l-0.23,-1.09l-0.58,-0.16l-1.93,1.66l-1.23,0.19l-4.93,-0.82l0.7,-0.9l-0.17,-0.8l2.1,-1.0l0.08,-0.94l-0.61,-0.13l-3.71,1.25l-0.87,-0.09l-1.51,-1.09l-1.44,-1.91l-1.57,-0.92l-0.75,0.11l-0.28,0.37l1.24,1.01l0.16,0.62l0.81,0.45l0.03,0.77l0.5,0.64l1.41,0.99l2.28,0.75l-0.84,0.89l0.9,1.62l-0.2,0.19l-0.99,0.45l-5.06,0.21l-0.53,-0.48l-1.46,-0.46l-0.72,-0.43l0.18,-1.38l-0.5,-1.31l-2.67,-1.78l-0.15,-0.67l0.38,-0.51l-0.07,-0.6l-0.47,-0.25l-1.6,0.89l-0.29,0.72l0.36,0.75l2.47,2.11l0.13,1.17l0.39,0.39l-0.42,1.02l0.35,0.39l-4.54,-0.46l-0.66,-0.84l-0.96,-0.26l-1.66,-1.24l-0.6,-1.8l-1.68,-0.71l-0.84,0.01l-0.37,0.28l-0.02,0.62l1.2,0.63l-0.53,1.4l0.68,1.08l-0.22,0.51l-3.86,0.17l-1.37,-0.68l-0.09,-0.52l-1.17,-1.39l-1.03,-0.53l-0.61,0.11l-0.52,1.56l0.4,1.57l0.73,0.83l5.42,1.8l-7.58,0.49l-0.59,-0.66l-1.77,0.16l-2.91,-0.96l-6.35,-0.72l-0.4,-0.28l-0.03,-0.98l1.56,-0.49l0.54,-0.98l-0.45,-0.63l-3.75,-1.99l-0.87,0.41l0.17,0.41l2.86,1.87l-3.08,0.95l-0.01,0.74l-0.73,1.67l-3.59,-0.64l0.18,-0.64l-0.68,-0.71l-2.26,-0.13l0.15,-0.82l-0.89,-0.71l0.12,-1.17l-1.21,-0.77l-0.62,0.33l-0.23,1.79l0.93,0.79l-0.44,0.67l0.16,0.75l0.94,0.48l-0.55,0.46l-0.59,0.02l-0.28,0.61l-0.76,0.03l-0.54,-0.36l-0.36,-1.06l-0.49,-0.24l-0.64,0.18l-0.35,0.94l-4.5,-0.57l0.49,-0.7l-0.37,-0.47l0.42,-1.01l-0.69,-0.9l-0.22,-0.96l-0.77,-0.57l0.38,-0.77l-0.69,-1.43l0.7,-0.95l-0.09,-0.94l-0.33,-0.37l-0.84,0.19l-1.62,1.89l-0.06,0.94l1.01,1.28l-1.42,0.68l-0.91,1.94l0.33,0.99l-1.04,0.76l-0.63,-0.05l-0.21,-0.59l-0.45,-0.18l-0.84,0.54l-0.51,-0.09l-0.46,-0.56l-1.54,-0.7l0.15,-0.86l-0.7,-0.93l-0.58,0.05l-0.47,0.51l-0.46,-0.27l0.14,-0.75l1.81,-0.97l-0.06,-1.13l0.47,-0.69l-0.75,-0.51l-0.55,-1.79l5.08,-1.8l0.42,-0.66l2.39,-0.6l1.91,-1.28l1.15,-0.11l0.52,-0.71l-0.15,-0.2l0.86,-0.31l1.04,0.09l0.04,0.31l0.62,0.17l2.61,-0.59l1.88,0.0l0.57,0.76l2.43,-0.1l0.88,-0.67l-0.98,-0.5l0.45,-0.36l2.66,-0.25l1.59,1.04l1.08,0.23l0.55,-0.21l-0.03,-0.74l1.77,-0.1l0.37,-0.33l-0.23,-0.44l-0.74,-0.33l-1.68,0.24l-2.72,-0.65l1.81,-0.33l0.21,-0.84l-0.91,-0.35l-2.03,0.07l1.47,-0.73l1.19,0.11l1.04,-0.3l0.14,-0.69l-0.44,-0.25l-2.78,-0.1l-2.35,0.74l-3.17,-0.39l-0.25,-0.95l-0.54,-0.43l0.83,-0.33l0.49,-0.6l-0.64,-1.68l-1.12,-0.27l0.01,-0.47l-0.34,-0.23l-0.74,-0.04l-2.92,-1.28l0.56,-1.02l-0.09,-1.78l0.51,-0.4l9.08,-1.71l3.4,0.32l1.89,0.77l2.12,0.38l2.31,0.9l2.35,1.7l1.77,4.22l0.7,0.71l-0.63,0.77l0.31,0.67l2.29,-0.79l1.67,1.32l4.04,0.37l2.46,1.34l3.0,0.43l0.42,-0.56l-1.02,-0.97l-0.23,-0.73l2.04,0.35l2.94,-0.29l6.01,1.18l0.47,-0.48l-0.48,-1.22l-3.16,-0.97l1.79,-0.02l2.4,-0.91l0.87,-1.04l3.48,-2.73l0.24,-0.6l0.76,-0.43l1.02,-1.47l-0.1,-0.25l1.08,-0.59l0.48,-1.37l0.84,-0.51l0.36,-1.42l-0.55,-0.96l1.73,-0.14l0.88,-1.12l-0.37,-0.58l-1.91,0.05l-1.6,0.42l-1.22,0.81l-0.46,1.12l0.57,1.25l-1.92,0.88l-0.64,1.18l-1.29,0.9l-0.8,1.7l-1.3,0.88l-0.89,1.3l-2.52,1.53l-1.79,0.65l-4.74,-0.65l-4.26,0.26l-0.7,-0.72l1.95,-0.78l1.9,-1.53l0.52,-1.1l-0.45,-0.74l-0.85,-0.19l-0.25,0.41l0.31,0.35l-0.51,0.87l-3.79,1.61l-0.52,-0.4l-2.77,-0.76l0.31,-0.66l-0.32,-0.57l0.91,-0.43l0.2,-0.76l0.96,0.09l1.07,-0.41l2.93,-1.9l3.1,0.41l0.65,-0.24l0.22,-0.4l-0.29,-0.35l-2.52,-0.68l-6.99,0.4l-2.37,0.82l0.23,-0.49l-0.36,-0.36l-1.48,-0.15l5.82,-2.37l1.32,0.45l2.23,0.15l1.8,-0.87l2.17,0.04l0.71,-0.72l-0.39,-0.3l-3.06,0.04l-2.59,0.5l-1.84,-0.73l0.68,-1.05l1.31,0.11l2.14,-0.73l2.21,0.26l2.06,0.69l1.84,-0.43l0.31,-0.39l-0.4,-0.55l-1.93,0.0l-2.1,-0.6l-3.34,-0.11l-1.76,0.39l1.36,-2.01l2.13,-0.36l0.4,-0.41l-0.38,-0.95l-0.63,0.01l-0.94,0.57l-0.82,-0.38l0.75,-2.76l1.47,-1.62l0.01,-0.66l-0.73,-0.24l-0.33,0.19l-1.69,1.65l-0.44,1.27l-1.04,1.07l0.04,1.7l-0.59,0.42l-0.2,0.72l-4.05,3.72l-7.57,1.11l-0.25,-0.17l0.51,-1.34l1.24,-0.27l1.77,-1.51l0.62,-1.29l-0.18,-0.27l0.6,-0.75l-0.01,-1.24l-0.51,-0.3l-0.66,0.26l-0.18,0.78l-1.52,0.9l-0.26,1.09l-1.8,1.13l-2.25,-0.4l-2.74,2.09l-7.14,-0.15l0.58,-0.54l3.42,-0.42l0.35,-0.4l-0.35,-0.53l-1.79,-0.46l-1.61,0.39l-0.62,-0.14l0.26,-0.87l-0.04,-2.53l-0.25,-0.45l0.3,-0.54l3.16,-2.07l2.92,0.01l0.4,-0.42l-0.18,-0.77l-0.46,-0.31l-1.91,0.18l1.18,-1.14l0.44,-1.37l3.21,-2.04l0.97,0.18l4.95,-0.79l2.75,0.11l3.85,-1.2l1.36,-0.72l2.01,-0.08l3.31,1.14l9.7,0.71l2.03,1.04l2.21,0.44l1.74,1.09l3.71,0.69l2.06,1.86l2.59,0.92l1.2,-0.46l0.31,-0.39l-0.1,-0.47l-3.16,-1.92l0.74,-0.39l2.22,0.21l0.41,-0.76l-0.44,-0.55l-1.15,-0.32l-4.34,0.56l-1.09,-0.74l-3.36,-1.03l2.27,-0.16l5.92,0.59l0.97,-0.44l2.99,-0.42l1.75,0.02l0.3,0.41l0.74,0.09l0.44,-0.14l0.76,-1.1l-0.04,-0.48l-0.76,-0.54l0.41,-1.02l2.07,-1.41l-0.1,-0.8l-1.12,-0.25l-3.89,1.38l-0.42,0.83l-1.38,1.12l-4.03,0.68l-4.46,-1.24l-7.07,0.16l-3.04,-0.64l-3.12,0.15l-2.24,-1.3l-2.47,-0.55l-0.09,-0.38l2.89,-1.32l2.89,0.39l0.75,0.39l1.17,1.42l5.45,0.5l1.2,-0.73l-0.11,-0.62l-0.45,-0.24l-1.48,0.38l-1.41,-0.47l-0.42,-0.62l-2.35,-0.71l-0.29,-0.39l0.6,-0.35l0.17,-0.53l-0.61,-0.86l-0.69,0.02l-1.27,0.82l-1.33,-0.15l-0.31,-1.38l-0.84,-0.82l-0.69,-2.76l-4.01,-1.74l-0.08,-0.62l-0.73,-0.44l-0.17,-0.69l-0.52,-0.46l-0.04,-0.82l-3.15,-1.46l-3.12,-0.68l-2.45,0.24l-5.99,-1.35l-0.04,-0.75l1.12,-0.27l-0.77,-0.91l0.05,-1.7l1.06,-0.59l4.36,0.74l3.41,0.13l1.09,0.64l1.03,0.18l0.65,-0.18l0.53,-0.58l-0.28,-0.64l-1.63,-0.17l-1.1,-0.74l-9.28,-0.97l-0.84,-0.48l-1.04,-2.11l1.0,-1.54l0.4,-2.13l5.89,-0.66l5.94,1.63l7.0,-0.24l5.96,0.24l2.45,0.4l4.44,2.41l2.4,1.7l4.42,1.91l5.1,2.82l1.85,2.47l0.03,0.79l0.89,0.63l2.04,0.24l0.17,0.91l-0.78,-0.11l-0.42,0.52l0.25,0.55l1.38,0.39l2.86,-1.1l8.0,1.68l0.43,-0.59l-0.19,-0.29l4.99,-0.99l1.74,0.05l1.88,-1.42l0.13,-0.46l-0.4,-0.26l-6.6,0.4l-0.58,0.35l-4.25,0.46l-4.41,-1.51l-1.73,0.09l-0.12,-0.87l-0.61,-0.24l0.2,-1.1l-0.9,-1.61l2.06,-0.34l0.39,-0.3l-0.03,-0.66l-0.69,-0.39l-5.44,-0.84l-1.72,-0.63l-7.74,-5.18l-0.73,-0.9l-1.39,-0.59l11.58,-1.56l3.84,-0.17l12.83,-1.45l0.77,-0.43l0.02,-0.54l2.26,-0.33l5.49,-0.25l0.87,-0.35l6.31,-0.08l1.1,-0.33l6.62,0.02l0.67,-0.92l-0.38,-0.53l-7.81,-0.45l-10.02,0.12l2.11,-0.47l1.82,-0.81l3.12,-0.31l2.38,-0.81l2.11,-0.2l1.16,-0.64l1.94,-0.06l1.57,-0.55l6.84,-0.65l9.54,-0.3l0.68,-0.26l0.51,-0.7l-0.16,-0.56l-1.26,-0.61l-4.44,0.37l-3.71,-0.42l-6.19,-0.04l-1.29,0.43l-7.35,0.72l-0.41,-0.2l0.64,-1.09l-0.54,-1.5l4.41,-2.4l0.85,-1.12l-0.26,-0.53l2.41,-0.4l3.28,-2.22l2.23,-0.88l2.53,-0.44l1.76,-0.87l1.4,-0.05l1.02,-0.71l2.24,-0.76l0.05,-0.78l-1.41,-0.4l-13.61,3.63l-3.04,1.94l-2.06,0.83l-0.68,0.89l-0.15,0.97l-1.57,0.11l-5.63,-2.2l-0.46,0.13l-0.01,0.48l0.56,0.72l3.18,1.75l-1.23,0.34l-0.95,1.58l0.46,0.69l1.16,0.18l-0.75,0.62l-1.3,0.15l-0.56,1.11l-1.53,1.16l-3.11,0.7l-1.38,0.83l-3.02,0.55l-5.28,1.82l-3.41,0.82l-3.45,0.15l-8.37,1.51l-5.41,0.42l-1.96,-0.18l-0.22,-0.48l0.65,-1.13l1.88,-0.23l0.66,-0.62l6.97,-1.03l2.15,-0.85l1.86,-1.31l0.05,-0.62l-2.51,-0.59l-1.66,0.68l-3.84,0.89l-0.7,0.69l-7.3,1.02l-1.98,-0.09l-0.1,-0.55l1.74,-0.3l2.48,-1.55l-0.21,-0.65l-1.53,-0.37l-0.75,0.24l-0.66,0.66l-2.14,0.7l-0.67,0.6l-1.79,-0.2l-0.44,0.21l0.42,0.73l-0.01,0.95l0.98,1.5l-1.05,1.79l-5.42,0.76l-2.92,-0.5l-2.48,0.03l-2.01,0.6l-5.22,-0.84l-1.63,0.19l2.64,-1.48l0.11,-0.49l-0.45,-0.21l-2.37,0.59l-2.61,1.46l-6.4,-1.44l1.67,-2.08l7.6,-5.43l1.7,-0.77l2.64,-0.37l1.69,-0.65l1.93,-0.14l0.25,-0.38l0.95,0.4l21.7,-2.58l3.12,-0.63l0.97,-0.46l0.04,-0.7l-0.47,-0.19l-18.46,2.15l-9.96,0.65l-1.05,0.41l-1.2,-0.19l-3.98,0.63l-3.37,0.98l-2.69,1.61l-0.94,0.9l-1.14,0.43l-0.67,0.92l-4.32,2.34l-0.53,1.15l-1.55,1.21l-1.78,-0.04l-2.39,-0.27l-1.98,-0.7l-2.05,-0.14l-5.25,-2.06l-3.15,-0.72l-4.55,-1.88l-0.47,-0.47l1.52,-0.55l2.42,-0.1l1.75,-0.57l4.49,-0.42l5.88,0.0l2.21,0.41l4.89,-0.2l1.16,-0.39l3.38,0.0l2.46,-0.54l1.84,-0.99l2.58,-0.33l1.83,0.11l0.28,-0.2l-0.07,-0.7l-0.56,-0.27l0.26,-0.16l6.79,-2.42l3.62,-0.69l1.01,-0.5l0.09,-0.87l-2.38,-0.55l-3.11,0.27l-6.47,1.43l-3.31,1.23l-1.01,0.9l-2.22,0.62l-4.2,0.34l-4.56,0.99l-4.8,-0.24l-19.96,1.59l-3.4,-1.27l-1.53,-2.02l3.35,-1.58l1.78,0.05l2.55,0.92l6.36,-0.97l0.33,-0.31l-0.17,-0.42l-0.88,-0.48l-3.9,0.34l-1.81,-0.78l-3.12,-0.69l2.67,-0.43l1.64,-1.03l2.2,-0.15l2.42,-1.33l1.57,0.29l0.54,-0.58l-0.82,-0.53l8.75,-0.77l0.57,0.5l1.6,-0.23l2.6,0.15l2.41,0.73l0.68,-0.26l0.18,-0.42l-0.99,-0.87l-7.47,-1.27l-1.71,0.21l-0.5,-0.52l-0.92,-0.19l-2.75,0.89l-3.76,0.33l-5.44,1.28l-9.19,2.87l-0.39,-0.03l0.19,-0.33l-0.28,-0.35l-3.15,-0.96l7.09,-2.4l1.25,0.03l0.66,-0.68l2.62,-0.12l0.87,-0.9l-0.32,-0.64l-4.25,0.1l-0.23,-0.54l-0.89,-0.18l-1.0,-0.84l-0.95,-0.29l-0.82,0.45l-0.08,0.62l-3.03,-0.41l-1.16,0.92l-1.83,0.35l-0.58,0.59l0.18,0.97l-0.59,0.33l-0.73,-0.31l-2.28,0.5l-0.3,-0.86l-0.56,-0.46l-3.91,-0.64ZM764.17,36.09l0.89,-0.18l2.05,0.3l-1.91,0.5l-1.03,-0.63ZM650.78,87.92l8.97,0.53l-0.28,0.77l0.56,0.79l1.37,0.6l-8.32,-0.22l-1.96,-1.15l-0.34,-1.32ZM533.56,151.89l0.63,0.41l0.02,0.85l-0.46,0.39l-0.55,-0.81l0.35,-0.83ZM533.09,154.98l0.02,0.04l-0.03,-0.0l0.02,-0.04ZM570.9,124.25l-0.33,-0.19l-0.3,-0.01l0.85,-0.22l-0.21,0.42ZM570.01,124.08l-2.45,0.84l-0.95,-0.16l1.21,-0.83l2.2,0.15ZM572.15,30.17l-1.0,-0.76l-0.89,-0.95l1.32,0.16l0.02,0.83l0.55,0.73ZM527.66,30.05l-1.89,-0.14l1.12,-0.23l0.77,0.37ZM518.67,244.82l0.94,-0.84l0.29,-1.64l1.99,-0.87l0.73,0.24l1.31,-1.06l-0.24,-0.97l-1.12,-0.09l-0.93,0.38l-0.88,-0.41l-0.52,-2.33l1.68,-1.79l-0.33,-0.51l0.35,-0.63l0.26,-2.29l0.51,-0.27l1.08,0.26l0.56,-0.86l0.56,-0.1l0.15,-0.65l-1.04,-0.77l0.24,-0.81l2.18,0.63l0.49,-0.15l0.35,-0.72l-0.23,-0.68l-1.27,-0.31l0.8,-0.77l0.33,-1.01l-0.6,-1.23l0.47,-0.34l0.72,0.17l0.24,-0.49l-0.79,-0.71l0.47,-0.97l0.94,-0.46l0.29,-0.44l-0.39,-0.35l0.59,-0.49l1.96,-0.08l0.12,-0.7l-1.28,-0.36l0.5,-0.41l0.71,-0.24l2.68,0.36l0.1,-0.71l-2.0,-0.71l1.33,-1.33l1.86,-0.81l0.93,-1.2l6.52,-3.71l10.61,-2.56l6.97,-0.14l2.76,0.45l6.43,0.38l2.12,1.39l-0.69,0.76l-5.17,2.73l-1.14,0.3l-4.68,4.17l-2.79,3.9l0.06,0.58l-0.46,0.66l-3.41,3.79l-0.73,2.5l0.64,1.81l3.67,2.83l0.72,1.28l-1.92,2.7l-0.28,1.55l0.55,3.83l0.78,0.45l0.26,0.93l2.07,2.93l1.55,0.9l1.23,1.31l0.88,0.34l0.36,0.71l1.53,0.92l0.85,1.0l2.75,0.89l0.38,0.41l2.29,0.3l0.21,0.36l-0.25,0.91l0.29,0.36l0.47,-0.03l0.22,0.47l-3.25,-0.38l-0.84,0.27l-0.1,0.73l-1.74,0.05l-0.59,1.16l-1.8,-0.55l-2.6,0.56l-2.7,1.5l-0.27,0.53l-5.71,1.31l-0.52,0.54l0.33,0.43l1.64,0.27l3.97,-0.56l4.15,-1.86l1.12,-0.8l2.24,-0.11l0.64,-0.36l3.18,0.59l1.15,-0.47l0.57,0.08l0.31,-0.49l0.76,0.35l-0.19,0.76l-0.79,-0.37l-1.66,0.28l-0.33,0.52l0.37,0.4l1.11,0.08l-0.08,0.47l0.71,0.56l-0.4,0.98l0.15,0.72l2.06,0.12l0.87,-1.31l-0.77,-2.04l0.29,-1.66l1.22,-0.57l-0.01,-0.65l-1.17,-0.98l0.48,-1.4l-0.08,-0.69l1.89,-0.48l0.39,-0.64l-0.32,-1.77l-0.93,-0.96l0.48,-0.92l-0.49,-0.64l-0.9,-0.2l-1.71,0.12l-0.26,0.78l-4.13,-0.91l-1.5,-1.46l0.51,-0.41l0.0,-0.39l-1.37,-1.84l-4.06,-1.64l2.08,0.3l0.44,-0.18l-0.17,-0.62l1.48,-0.1l0.75,-0.42l0.28,-0.41l-0.16,-0.48l1.05,-0.25l0.07,-0.46l-0.99,-1.07l0.34,0.07l0.38,-0.71l1.03,-0.18l0.57,0.51l0.81,-0.44l0.44,0.56l0.87,-0.39l0.52,0.16l2.74,1.81l1.75,0.51l0.95,1.07l1.45,0.7l0.28,1.13l0.62,0.57l0.6,-0.21l0.24,-1.27l-0.25,-0.93l-1.59,-0.83l-0.66,-1.29l-2.05,-0.5l-0.85,-0.68l-0.09,-0.83l-1.99,-0.64l0.85,-0.9l2.67,0.06l1.02,-0.47l-0.01,-0.73l-0.57,-0.1l-0.71,0.33l-2.33,-0.19l0.4,-1.07l-0.41,-0.53l-1.4,0.49l-1.84,1.18l-2.44,-0.72l-1.64,-0.93l-0.68,-1.15l1.06,-0.29l0.2,-0.47l-0.38,-0.4l-1.41,-0.21l-0.56,-0.62l-0.05,-1.81l0.56,-2.48l-0.21,-0.66l0.97,-1.09l3.77,0.53l12.17,3.84l0.39,-0.18l-0.0,-0.73l-2.94,-0.85l-3.83,-1.97l-4.34,-1.44l-1.56,-2.45l7.28,1.57l6.05,0.51l2.15,0.94l0.51,-0.05l-0.22,-0.86l-1.56,-1.01l-7.92,-1.34l-4.53,-1.7l-1.31,-0.09l0.47,-1.52l2.92,-1.28l1.52,1.7l1.18,0.43l1.18,1.03l0.9,-0.06l0.22,-0.65l-2.39,-1.83l-0.47,-1.08l4.17,-1.26l3.94,0.79l0.92,2.15l1.11,0.51l0.43,-0.58l-0.5,-1.11l-0.06,-1.65l-0.46,-0.46l-2.74,-0.75l5.9,-2.17l1.88,-0.45l1.27,0.27l2.14,-1.65l7.85,-0.02l5.26,0.42l0.47,0.3l0.36,1.08l1.93,1.86l0.45,3.18l-0.37,1.52l0.36,0.75l0.78,0.53l5.05,1.59l0.57,1.0l-0.33,1.29l-0.69,0.84l0.23,1.37l1.49,1.8l1.82,0.63l0.43,0.97l-0.92,0.27l-1.89,1.55l0.01,1.06l-2.01,0.89l-2.36,1.6l-1.33,1.75l-0.74,0.32l-0.2,0.85l-1.77,0.88l-0.16,0.45l0.39,0.28l1.58,-0.35l3.66,-3.39l3.3,-1.36l-0.2,1.77l-2.23,1.43l-0.87,1.03l-0.24,0.91l-0.8,-0.05l-0.41,0.29l0.19,0.46l2.12,1.16l-2.51,0.18l-0.36,0.3l0.13,0.33l-0.5,0.17l-0.08,0.72l0.49,0.27l2.21,-0.21l-0.34,1.51l-1.2,0.62l-0.23,0.84l0.42,0.15l1.54,-0.37l0.86,-0.63l0.19,-0.93l3.6,-1.25l0.54,-0.81l-0.12,-0.69l-1.12,-1.16l0.79,0.39l1.49,-0.74l0.04,-0.57l-0.55,-0.7l0.25,-0.34l2.19,2.18l3.42,1.08l0.46,-0.58l-0.36,-0.53l-2.34,-0.9l-2.25,-2.19l0.99,-0.98l1.81,-0.63l0.35,-1.41l0.38,0.54l-0.23,1.03l1.6,1.31l-0.31,0.55l-1.28,0.84l-0.13,0.64l0.34,0.49l0.87,0.06l0.33,-0.56l1.1,-0.49l0.62,1.4l0.58,0.1l0.27,-0.81l-0.59,-1.35l1.47,-1.73l3.21,2.24l-0.13,0.62l0.3,0.64l-0.49,0.7l-0.33,1.45l-1.9,1.78l0.1,0.61l0.93,0.44l0.94,-0.37l3.36,0.95l1.82,1.18l0.75,-0.28l0.07,-0.64l-0.81,-0.51l-0.26,-0.83l-1.7,-0.36l-1.29,-0.81l0.5,-1.41l-0.14,-1.06l3.18,1.32l1.15,2.96l1.79,2.21l2.82,1.1l0.53,0.04l0.42,-0.4l-0.27,-0.46l0.56,0.19l0.66,0.92l0.68,-0.23l0.37,-1.52l-2.0,-0.62l-2.39,-2.52l-1.79,-0.05l-0.61,-1.83l-0.65,-0.81l-4.05,-1.74l0.72,-0.57l-0.01,-1.05l1.32,-0.47l0.41,0.15l0.05,1.93l1.24,1.32l0.82,-0.41l-0.32,-1.07l-0.45,-0.35l0.23,-1.0l3.56,0.85l0.45,0.61l0.95,-0.23l2.07,0.82l0.54,1.18l-0.38,0.73l0.5,0.39l0.89,-0.7l-0.03,-0.88l2.69,-0.11l3.01,1.04l0.47,-0.24l-0.18,-0.5l-1.44,-0.76l-1.54,-0.46l-2.69,-0.06l-2.87,-1.5l-4.03,-1.13l-3.07,-1.78l0.04,-0.94l0.91,-0.91l0.12,-0.52l4.56,-2.02l1.68,-0.1l2.11,-0.99l8.05,0.48l0.93,0.63l-0.02,0.7l0.53,0.44l4.7,0.83l-0.02,1.03l0.96,1.21l0.86,-0.27l0.21,-0.46l-0.29,-0.88l0.91,-0.56l1.97,0.18l2.66,1.02l2.55,0.55l0.43,1.4l1.99,2.79l-0.95,1.11l-1.98,1.1l-1.91,-0.42l-1.74,0.03l-4.16,1.13l-0.56,0.42l-0.79,1.56l-1.34,0.83l-1.36,1.65l0.13,0.57l0.89,0.13l1.23,-1.49l1.67,-1.11l0.67,-1.23l3.51,-1.25l1.35,-0.02l2.46,0.72l-3.35,0.85l-0.53,0.77l-0.81,2.66l-0.99,1.32l-0.56,0.46l-2.27,0.45l-0.27,0.38l0.41,0.53l2.42,-0.22l0.87,-0.48l1.4,-1.77l1.03,-2.03l0.13,-1.04l0.68,-0.38l1.67,0.09l1.16,-0.42l1.37,-1.97l7.91,0.94l1.08,1.76l-0.84,0.76l0.31,0.98l-0.61,0.66l-1.91,0.22l-1.02,-0.44l-0.49,0.84l-1.23,0.95l-2.02,0.5l-1.32,-0.24l-3.06,0.43l-0.73,0.68l0.42,0.58l3.1,-0.52l1.0,0.24l-4.54,2.35l0.17,0.82l5.4,-1.99l1.05,-1.12l0.79,-0.3l0.26,0.39l-0.41,0.8l-1.18,0.88l-2.15,0.23l-1.28,1.09l-0.2,0.43l0.43,0.56l1.33,-0.95l1.56,-0.04l-1.06,0.9l0.37,0.36l1.64,0.22l0.23,0.53l-0.59,0.2l-1.48,1.83l-1.78,1.38l0.2,0.81l0.83,-0.03l1.55,-1.12l2.74,-2.74l0.02,-1.04l-0.96,-1.04l-0.09,-0.49l0.08,-0.3l1.09,-0.3l0.95,-1.9l1.01,-0.14l1.34,-1.14l1.17,-0.13l-0.23,0.71l-0.95,0.66l-0.24,0.76l0.28,1.11l1.09,0.6l0.44,-0.59l-0.61,-1.22l0.84,-0.41l1.21,-1.91l0.75,-0.33l1.7,-0.04l0.22,0.83l-1.18,0.7l-0.15,0.61l-0.71,0.28l-0.25,0.7l-0.8,0.73l-0.35,1.22l-2.94,1.01l0.02,0.71l0.27,0.13l2.11,-0.54l-0.06,1.18l-1.16,0.79l0.74,0.51l-1.36,1.54l0.6,0.35l0.66,-0.39l1.93,-2.07l0.0,-0.96l1.06,-1.48l0.36,-1.46l1.17,-0.85l0.73,0.08l0.27,0.21l-0.72,1.88l0.52,1.08l-0.37,0.87l1.3,0.0l-1.79,1.77l-0.52,2.73l-1.53,0.59l0.03,0.67l0.54,0.15l1.97,-0.64l0.46,-0.71l0.42,-2.18l2.0,-1.87l0.69,0.06l1.47,0.82l-1.26,0.67l0.22,1.48l-0.43,0.88l-1.68,1.3l0.13,0.55l1.04,0.96l0.4,-0.66l-0.28,-0.69l1.1,-0.49l1.2,-1.88l-0.06,-0.88l1.22,-0.05l0.62,-0.62l0.39,-1.39l-0.25,-1.41l1.37,-0.05l0.78,-0.38l0.19,-0.46l-0.59,-1.03l1.76,-0.77l0.48,-1.92l10.01,2.84l1.08,0.78l0.08,0.53l1.48,0.97l1.5,1.8l-2.15,1.71l-0.98,1.68l-1.39,-0.06l-2.48,-0.77l-2.12,0.56l-0.82,0.6l-0.05,0.81l-0.57,0.8l-1.28,0.47l-0.45,1.14l-3.91,0.93l-0.57,0.69l0.43,0.27l3.05,-0.37l1.77,-0.64l0.81,0.36l-1.29,0.98l-0.61,1.48l-2.42,0.85l-0.03,0.69l1.11,0.42l0.77,-0.62l1.59,-0.58l1.17,-1.62l2.48,-0.47l3.72,-1.52l2.61,-0.25l1.01,0.58l0.65,-0.05l0.17,-0.71l-0.97,-0.84l1.1,-1.83l2.88,-1.29l1.22,0.08l0.77,0.51l0.96,2.49l-1.89,1.3l-0.44,1.63l-0.39,0.38l-2.7,0.92l-1.28,1.65l-3.05,-0.7l-0.83,0.19l-0.38,0.49l0.1,0.81l-1.35,0.93l-0.22,0.83l-1.2,0.03l-0.95,0.46l0.1,0.68l0.3,0.12l1.85,-0.26l-0.32,1.24l-0.89,0.83l0.81,0.42l0.8,-0.43l0.92,-1.15l0.34,-1.93l1.31,-1.22l0.07,-0.61l0.34,0.56l1.0,-0.18l1.38,0.36l-1.07,3.09l-0.47,0.48l0.37,1.13l-2.56,4.02l-0.08,0.32l0.52,0.48l2.12,-1.94l0.48,-1.26l0.67,-0.75l0.37,-0.81l-0.2,-0.55l0.2,-0.69l0.83,-1.8l0.67,-1.33l0.64,-0.22l0.02,-0.62l-0.42,-0.26l0.41,-0.96l1.44,-0.3l4.46,-2.48l1.66,-0.32l3.23,-1.44l0.84,0.09l-1.62,1.89l-2.47,1.4l-2.62,0.52l-0.35,0.86l0.72,1.28l-0.92,0.79l0.23,0.49l0.62,0.11l1.47,-0.45l0.34,-0.52l-0.83,-1.54l3.49,0.19l0.61,-1.03l1.07,-0.51l0.59,0.06l0.29,-0.38l1.04,0.27l0.69,-1.46l1.23,-0.41l0.63,0.26l1.86,-0.07l1.15,1.05l7.41,2.54l0.58,0.42l0.03,0.49l-1.52,1.58l-0.16,0.68l-0.52,-0.36l0.3,-0.59l-0.21,-0.64l-0.78,-0.15l-1.04,0.98l0.16,1.25l-0.4,0.41l-7.58,1.35l-0.55,0.47l-1.09,0.17l-1.97,0.91l-0.93,1.33l-1.96,0.5l-0.73,0.45l-0.34,0.68l0.31,0.43l0.55,0.04l1.14,-0.83l1.53,0.62l-1.39,-0.16l-2.02,0.73l-0.54,0.5l-0.03,0.45l-2.15,0.87l-0.27,0.33l0.3,0.66l1.56,-0.17l2.81,-1.99l1.1,-0.07l0.68,0.3l1.32,-0.43l0.4,-0.89l-0.63,-1.13l0.96,-1.0l4.69,-0.95l1.72,0.46l0.58,-0.61l2.75,-0.14l0.24,0.54l-0.95,0.6l-0.0,0.8l-0.35,0.4l-3.3,1.16l-2.93,2.66l-2.92,-0.32l-1.01,0.32l-0.79,0.75l-0.35,1.11l-1.1,1.26l0.06,1.26l0.81,0.0l0.4,-0.89l1.16,-0.98l0.6,-1.31l1.33,-0.12l1.17,0.49l1.19,-0.03l1.88,-1.9l1.06,-0.58l1.63,-0.6l2.34,0.37l0.71,-0.23l0.07,-0.8l1.18,-1.1l1.88,-0.36l1.55,-1.1l-0.06,-0.66l-0.86,-0.25l-0.25,-0.41l0.07,-0.57l2.0,-1.68l0.55,0.55l1.98,0.54l3.9,3.43l0.56,1.06l1.33,1.11l0.07,1.17l0.86,2.28l-1.78,0.16l-4.11,-1.19l-2.71,0.12l-2.37,1.27l-0.38,0.85l-0.72,0.47l-3.72,-0.24l-5.51,2.01l-5.41,-0.56l-2.4,0.5l-0.26,0.72l1.6,0.63l2.43,-0.77l3.8,0.76l2.86,-0.51l0.72,-0.58l1.77,-0.42l1.7,0.02l5.93,2.32l1.03,0.14l1.3,-0.46l5.55,0.29l4.34,2.17l1.07,1.21l0.15,0.86l-0.87,0.9l-2.01,-0.77l-1.85,-0.14l-0.84,0.51l-1.27,-0.65l-1.5,0.56l-1.59,-0.27l-5.38,-2.41l-1.55,0.22l-6.97,-1.04l-2.05,1.08l-0.54,0.45l0.0,0.62l0.7,0.26l1.01,-0.71l1.68,-0.57l5.38,1.12l2.05,-0.15l0.79,0.64l-4.86,-0.58l-1.67,0.37l-1.78,-0.14l-0.37,0.62l1.01,0.52l2.51,-0.14l-0.7,0.53l-3.19,0.29l-0.69,0.32l-0.27,0.39l0.33,0.63l1.28,-0.24l-0.82,2.28l0.82,0.05l0.63,-0.47l0.65,-1.66l4.76,-1.52l2.15,0.57l3.67,1.65l-1.7,0.15l-0.38,0.54l-2.34,-0.6l-3.17,0.34l-0.43,0.59l0.53,0.6l2.21,-0.34l2.28,0.64l-0.27,0.21l0.14,0.41l-3.83,-0.56l-0.41,0.26l0.56,0.73l-1.48,-0.02l-0.29,0.38l0.19,0.63l-0.8,-0.41l-2.49,-0.11l-0.96,-0.61l-3.23,-0.54l-0.63,0.54l0.42,1.39l3.96,0.25l-0.43,0.58l0.52,0.48l1.19,-0.42l6.93,1.03l-1.8,0.62l-2.71,-0.61l-1.39,0.22l-0.7,0.7l-0.84,0.19l-0.2,0.42l1.84,0.94l3.07,0.12l0.82,-0.65l2.15,0.48l0.49,0.59l1.6,0.07l0.18,0.91l-0.49,0.95l0.1,0.45l0.46,0.06l0.67,-0.54l0.46,-1.87l1.88,-0.41l0.27,0.26l-0.5,0.71l0.18,1.9l-1.55,0.3l-0.81,0.48l-0.35,0.79l0.26,0.7l0.59,0.11l0.98,-0.95l1.16,-0.08l0.05,0.28l-0.93,0.23l-0.3,0.41l0.37,0.51l1.27,-0.18l0.63,-0.4l0.14,-0.73l1.16,-0.69l0.56,0.56l0.99,-0.63l0.89,0.22l-0.98,0.1l-1.02,0.82l-0.55,1.68l-1.61,-0.36l-0.63,0.15l-0.06,0.72l0.49,0.27l2.23,0.36l1.13,-1.23l-0.07,-0.82l1.49,-0.7l0.89,-0.06l2.06,0.76l-0.61,0.77l-0.03,0.87l-1.18,0.88l-0.13,1.06l0.38,0.47l0.55,-0.03l0.37,-0.86l1.68,-1.28l-0.03,1.18l-0.57,1.34l0.43,0.19l0.99,-0.53l0.71,-2.28l2.04,0.22l-1.17,0.12l-0.39,0.4l0.35,0.53l0.9,0.12l1.18,-0.31l0.25,0.76l-1.02,0.54l-0.9,1.82l-2.72,-0.41l-0.5,0.19l-0.07,0.72l2.39,0.87l0.93,-0.04l0.17,0.72l0.37,0.2l0.58,-0.31l0.03,-1.12l0.72,-1.76l2.43,-1.06l-0.57,0.82l0.88,1.3l-0.57,0.94l-0.31,1.75l0.1,1.45l0.51,0.5l0.54,-0.25l0.37,-1.2l0.05,-2.0l1.42,-0.66l0.47,-0.78l-0.15,-0.91l0.69,-0.38l1.93,-0.11l-0.8,2.27l-0.64,0.43l-0.21,0.64l0.44,0.75l1.38,0.78l0.7,1.76l0.51,0.32l0.66,-0.43l-0.44,-1.99l-1.7,-1.27l1.17,-1.98l2.22,-0.79l0.49,-0.95l0.98,-0.58l2.42,0.86l-3.04,0.52l-0.01,0.72l0.74,0.2l-0.53,0.51l-0.23,-0.22l-0.62,0.23l-0.4,1.2l0.37,0.52l0.32,-0.05l0.65,-0.52l0.02,0.09l-1.79,1.4l-0.03,1.48l0.38,0.3l0.51,-0.11l0.53,-1.34l0.74,-0.14l0.43,-0.67l0.84,-0.42l0.48,0.4l-0.53,0.97l0.4,0.4l0.74,-0.08l0.53,-0.54l0.22,-1.57l0.97,-0.22l1.97,1.14l-1.92,0.62l-0.66,0.87l0.6,0.25l2.37,-0.53l0.8,-0.59l0.61,0.89l-0.76,0.47l0.19,0.44l1.93,0.13l-0.32,1.34l-1.24,0.51l-1.73,-0.23l-0.43,0.27l0.19,0.48l1.38,0.53l2.78,-0.23l0.58,0.58l0.15,0.81l-0.58,0.49l-7.31,-0.87l-0.61,0.24l-0.21,0.41l0.32,0.34l4.65,0.84l-1.88,-0.08l-2.68,0.7l-0.47,0.33l0.13,0.69l0.67,0.16l1.99,-0.65l2.72,-0.02l-3.23,0.89l-0.69,0.46l-0.5,0.9l-0.02,1.18l0.3,0.5l0.88,-0.12l0.56,-1.47l0.8,-0.63l1.57,-0.14l2.03,-0.69l1.87,-0.04l0.83,-0.84l0.67,-0.03l0.57,0.38l1.83,-0.46l0.74,0.13l-0.03,0.56l-0.71,0.89l-2.06,1.14l-0.68,0.99l0.07,0.64l0.7,0.5l0.48,-1.25l1.85,-0.69l1.26,-0.98l0.49,-0.84l-0.17,-0.88l0.49,-0.67l0.39,0.38l0.85,-0.19l0.55,-0.47l0.09,-0.82l1.09,0.61l0.19,0.77l-0.62,0.76l-1.86,0.55l-0.53,0.54l0.46,2.32l-0.88,0.5l-1.93,0.38l-0.55,0.56l0.06,0.67l-0.33,0.21l-1.85,-0.04l-0.48,0.45l0.33,0.6l2.52,0.13l1.22,-0.6l-0.4,1.83l0.4,0.51l0.42,-0.04l1.14,-1.87l-0.06,-1.34l4.32,-1.26l0.22,2.43l-0.88,2.71l0.1,0.28l0.71,0.07l0.77,-0.72l0.01,-0.8l0.82,-1.18l-0.08,-2.42l1.42,0.09l0.59,1.6l0.77,0.41l1.12,1.6l0.57,-0.07l0.23,-1.13l-1.28,-1.41l-0.14,-0.54l0.12,-0.28l1.39,-0.44l-0.06,-1.53l1.6,-0.2l0.36,0.11l-0.76,1.65l0.12,0.6l0.85,0.23l0.44,0.62l0.76,-0.33l2.64,0.14l-1.07,0.43l0.22,0.43l2.27,0.47l0.3,0.66l0.7,0.31l0.95,1.07l0.14,0.8l-1.14,0.31l-0.36,0.47l-1.04,-0.05l-0.48,-0.82l-0.99,-0.75l-3.15,-0.9l-0.46,0.81l-1.33,0.28l-0.32,0.39l0.26,0.49l1.13,0.3l1.17,-0.68l1.39,0.32l2.11,2.05l-1.0,0.05l-0.54,0.43l-0.95,-0.2l-1.25,0.48l-0.3,0.39l0.24,0.48l4.39,-0.08l0.26,0.36l-1.28,0.35l-1.22,-0.11l-0.79,0.75l-0.6,0.04l-1.44,-0.68l-1.1,0.21l-0.22,-1.32l-0.33,-0.17l-3.87,-0.63l-0.5,0.47l-0.7,0.07l-0.09,0.68l1.22,0.5l1.1,-0.36l0.17,0.57l1.05,0.76l-2.7,1.06l-0.67,-0.39l-0.22,-0.83l-0.55,-0.57l-0.93,-0.18l-0.43,0.4l0.97,1.73l1.17,0.95l1.84,-0.37l2.04,1.05l1.44,0.1l-0.04,0.4l0.7,0.56l-0.01,0.66l0.26,0.15l-0.95,-0.11l-1.09,0.49l-0.78,-0.62l-1.32,-0.28l-1.08,0.08l-0.74,-0.32l-0.79,0.2l-0.73,-1.37l-0.81,-0.56l-1.61,0.49l-0.05,0.7l1.38,0.01l0.41,1.04l0.71,0.69l3.02,0.28l0.4,0.48l0.64,0.03l-0.4,0.78l0.71,0.43l0.36,0.76l-1.25,0.31l-0.25,-0.38l-1.12,0.12l-1.7,-1.44l-0.69,-0.2l-0.44,0.75l0.76,1.12l2.28,1.17l-2.14,-0.69l-0.52,0.44l-1.01,-0.21l-0.13,0.7l0.34,0.29l0.18,1.24l-0.35,0.44l-0.37,-0.68l-1.81,-0.14l-2.15,-3.2l-0.43,-1.41l-0.5,-0.32l-0.55,0.18l-0.17,1.5l1.45,2.18l-0.0,0.46l-3.17,-0.01l-0.29,0.58l0.8,0.71l0.93,-0.13l0.8,0.43l1.21,-0.09l0.26,0.31l-0.21,0.57l-0.88,0.12l-0.97,-1.07l-0.8,0.35l0.19,0.4l-0.25,0.63l0.88,0.63l-1.15,0.2l0.06,0.67l1.31,0.69l-0.19,0.32l0.46,0.58l0.85,0.47l-0.53,0.37l0.11,1.24l-0.63,0.2l0.44,1.17l0.67,0.16l-0.74,1.17l0.02,0.8l-0.53,0.35l-0.23,1.11l-0.25,-0.16l0.35,-0.52l-0.05,-0.68l-0.64,-0.29l-0.03,-0.61l-0.89,-0.27l-1.07,0.4l-0.14,-0.66l0.89,-1.23l-0.34,-0.61l-0.9,0.06l-1.08,1.3l-0.96,-0.33l-0.51,1.15l-0.67,-0.92l1.37,-0.8l0.21,-0.45l-0.36,-0.4l-1.59,0.1l-0.9,0.58l-0.24,-0.18l-0.12,-0.73l0.51,-0.65l-0.09,-0.53l1.03,-1.29l0.13,-0.56l-0.41,-0.51l-0.84,0.24l-0.72,1.27l-0.78,0.39l-0.48,1.0l0.16,1.16l-0.52,1.15l-0.42,-0.32l-0.05,-0.85l-0.65,0.01l0.52,-0.69l-1.15,-0.76l0.8,-0.83l-0.85,-0.35l1.35,-0.6l1.73,0.03l0.54,-1.14l-0.15,-0.45l-0.54,-0.16l-0.54,0.53l-1.78,-0.18l-0.52,0.51l-2.54,0.48l-0.57,0.56l-0.8,-0.74l-0.08,-0.65l1.95,-0.42l0.84,-0.99l0.42,0.1l0.37,-0.59l-0.32,-0.38l0.96,-0.2l0.25,-0.5l-0.37,-0.4l-1.6,-0.02l-1.45,1.88l-1.6,0.03l0.04,-0.65l1.99,-1.28l1.66,-0.18l0.31,-0.21l-0.06,-0.7l-2.41,0.03l-1.0,0.38l-0.79,0.74l-2.14,-0.29l0.63,-1.35l-0.23,-0.44l-0.77,0.09l1.16,-1.66l3.96,-1.41l1.19,0.55l0.96,-0.04l0.16,-0.58l-0.98,-0.76l0.61,-1.08l0.37,-1.59l1.68,-1.26l1.77,-0.72l0.42,-0.46l-0.15,-0.64l-1.41,0.14l-2.62,1.06l-1.37,1.57l-0.24,1.35l-0.83,0.47l-2.54,0.84l-0.64,-0.27l-1.19,1.02l-4.98,0.48l-0.3,-1.07l0.41,-0.57l2.55,-1.27l1.06,-1.23l0.8,-1.28l0.05,-1.78l-0.83,0.02l-0.68,1.03l-0.22,0.99l-0.99,1.25l-1.72,0.89l-1.28,0.25l-1.12,-0.32l-0.73,-1.0l0.72,-0.99l-0.07,-0.5l-0.5,-0.03l-1.01,0.66l-0.57,-0.42l-0.35,0.19l-0.84,-0.26l0.11,-0.88l-0.4,-0.37l0.68,-0.39l-0.19,-0.67l-0.53,-0.13l-2.01,0.82l0.34,-1.02l-0.43,-0.51l-0.86,0.35l-0.08,-1.3l0.83,-0.65l-0.2,-0.6l-1.36,-0.02l-2.12,-0.93l-0.46,0.4l0.18,0.46l1.3,0.83l-2.23,0.3l-1.17,-0.51l-0.3,-0.58l-1.28,0.19l-0.99,-0.75l-0.5,0.59l-0.62,-0.12l-1.24,0.58l0.13,0.67l0.44,0.17l3.32,0.2l0.79,0.3l0.25,0.69l0.92,0.56l0.07,0.51l-1.77,-0.9l-0.49,0.03l-0.33,0.57l0.67,0.83l1.77,0.74l-1.02,0.38l-0.64,-0.54l-0.33,0.18l-0.76,-1.3l-1.57,-1.09l-0.69,0.12l-0.93,-0.34l-0.45,-0.98l-1.17,-0.07l-0.71,0.32l0.02,0.64l1.12,0.74l0.25,0.79l0.86,0.77l0.54,1.07l-0.33,0.9l3.27,1.99l1.33,0.38l0.64,1.09l-0.92,0.4l0.78,0.93l-0.59,0.1l-0.76,-0.41l-0.68,0.8l-1.32,-0.11l-1.18,-0.94l-0.64,0.21l0.12,0.93l-0.38,0.23l-0.88,-0.32l-0.94,-1.52l0.43,-1.48l-2.54,-1.11l-0.53,-1.32l-0.98,-0.02l-0.36,0.43l-0.36,-1.05l-0.89,-0.73l-0.52,0.17l-0.13,0.43l0.49,0.95l-3.59,0.33l-0.2,0.42l0.33,0.33l1.51,0.35l2.41,-0.28l0.51,0.74l1.55,1.09l0.84,-0.11l-0.07,-0.64l0.92,0.73l-1.02,0.13l-0.35,0.38l-0.78,-0.71l-0.41,-0.01l-0.33,0.59l0.54,0.89l-0.41,0.78l0.3,0.62l1.53,0.17l-0.21,0.74l0.27,0.2l-0.58,0.63l0.42,0.4l1.66,0.24l0.88,-0.25l-0.55,1.26l0.84,0.41l0.08,0.45l-0.86,-0.17l-0.15,0.62l-0.68,0.52l0.07,0.68l0.56,0.15l-0.5,0.73l0.4,0.52l0.55,-0.16l1.34,-1.47l0.72,-0.11l0.57,-0.79l1.81,-0.37l0.44,0.24l0.68,-0.55l1.24,0.44l-0.7,0.79l0.08,0.26l-1.27,1.11l1.43,1.17l2.25,-0.24l0.2,0.7l-3.08,0.47l-0.33,0.57l1.04,0.7l0.93,-0.48l0.73,0.47l-0.13,1.47l0.88,0.53l0.71,-0.33l0.63,0.31l-0.08,0.75l-0.92,0.14l-0.68,1.08l0.45,0.4l1.16,-0.4l0.64,0.61l1.12,0.12l0.31,0.65l-0.89,0.56l1.06,0.59l-0.37,0.64l0.73,1.95l1.17,-0.12l0.15,-0.6l-0.48,-0.55l0.41,-1.98l-0.25,-0.99l0.63,0.29l-0.01,0.67l0.45,0.08l0.26,0.48l1.52,0.3l0.19,0.76l0.63,-0.0l0.28,-0.45l0.42,0.24l-0.16,1.11l-1.22,0.0l-0.29,0.68l1.15,0.38l0.27,1.08l0.97,-0.09l0.23,-1.01l0.59,-1.07l-0.34,1.06l0.37,0.77l0.44,0.1l0.35,-0.36l1.29,1.44l0.78,-0.18l0.02,-0.6l-0.83,-1.04l0.36,-0.52l-0.57,-0.57l0.36,-0.97l0.27,1.12l0.64,-0.05l-0.32,0.91l0.33,0.86l0.43,0.23l0.4,-0.4l0.0,-0.78l0.5,0.02l-0.04,1.23l-0.59,0.6l-1.04,0.31l0.17,1.76l0.47,0.57l1.75,-0.16l0.41,0.39l0.52,-0.16l0.21,0.59l0.49,-0.01l0.53,-0.49l0.6,0.15l0.36,-0.35l1.25,0.23l-0.49,0.38l-1.06,0.13l-0.32,0.42l0.17,0.59l0.6,0.29l-0.22,0.33l-3.09,-0.49l-1.19,0.33l-0.32,0.59l0.42,0.34l0.87,-0.05l-0.02,0.88l1.74,-0.01l0.46,0.4l-0.81,0.72l0.39,0.51l0.66,-0.03l0.64,-0.45l0.37,0.29l0.32,0.56l-0.6,1.18l0.3,0.42l2.47,0.2l-0.11,0.52l0.44,0.19l1.4,-0.84l0.58,0.28l0.62,-0.33l0.08,0.22l-2.25,1.16l-0.16,0.6l-0.79,0.31l-0.22,0.74l0.78,1.0l1.79,0.51l0.57,-0.13l1.74,1.45l-0.78,0.52l0.43,0.65l0.1,1.93l0.26,0.31l-1.02,-0.16l-0.24,0.58l0.3,0.53l0.9,0.3l0.08,0.27l-1.03,-0.1l-0.05,0.7l0.38,0.24l-0.25,0.12l-0.94,-1.01l-0.73,-2.76l-1.01,-1.21l-0.21,-1.09l-1.32,-0.75l-0.7,-1.44l-0.62,-0.57l-1.28,-0.2l-0.37,0.38l0.17,0.51l2.87,2.89l-0.96,0.97l0.4,1.18l-0.84,0.38l0.53,1.08l0.98,0.03l0.7,1.16l-0.86,-0.57l-0.56,0.24l0.05,0.31l-0.47,-0.1l-0.39,0.61l1.28,1.95l1.22,-0.09l0.04,0.37l0.54,0.3l-0.14,0.64l0.53,0.33l0.17,0.63l-0.36,0.33l-0.07,0.73l1.1,0.67l-0.28,0.32l-0.91,-0.07l-1.88,-1.16l-0.44,-0.84l-0.59,0.1l-0.24,0.51l-0.59,-0.69l-0.66,0.14l-0.06,0.76l0.85,0.8l0.05,0.81l2.04,2.49l0.24,0.84l-1.65,0.99l-0.89,-1.24l0.24,-0.55l-0.62,-0.28l0.67,-0.55l-0.24,-0.79l0.36,-0.48l-0.92,-0.44l-0.02,-1.15l-0.78,0.04l-0.43,1.14l-1.69,0.25l-0.39,-1.08l-0.8,-0.24l0.56,-1.32l-0.44,-0.95l-0.8,0.21l-0.12,1.2l-0.73,0.55l-0.27,-0.07l0.89,-1.15l-0.42,-0.5l-1.76,0.8l-0.18,-0.98l-0.86,0.06l-0.32,-0.79l-1.32,-0.73l-0.47,0.17l-0.03,0.61l0.7,0.63l0.18,0.81l0.97,0.69l-0.29,0.12l-1.06,-0.73l-1.16,-0.1l-0.91,-1.01l0.14,-0.28l-0.7,-0.94l0.01,-1.02l-1.24,-1.07l0.51,-0.85l-0.35,-0.85l-0.7,0.32l-0.72,1.2l0.03,0.49l-0.43,-0.41l-0.58,0.3l-0.15,0.81l0.37,0.86l-1.33,-1.15l0.62,-0.45l0.03,-0.43l-0.51,-0.47l0.32,-0.95l-0.19,-0.41l-0.94,0.03l-0.24,1.69l-0.99,-0.54l-0.34,0.22l-1.25,-1.14l-0.51,-1.33l-0.59,-0.1l-0.32,0.49l-0.44,-1.3l-0.77,-0.52l-0.96,-1.77l-0.76,0.28l-0.21,-0.74l-1.31,-1.25l-0.45,-0.01l-0.08,0.78l1.06,1.65l0.01,1.17l1.33,2.75l-0.8,-0.5l-1.23,-1.62l-1.44,-0.77l-0.39,-0.79l-0.88,-0.08l-0.84,-1.48l-0.49,-0.08l-0.4,0.4l0.07,0.36l-0.72,-0.96l-1.0,-0.54l-0.52,0.19l-1.77,-0.75l-0.48,0.45l0.08,0.31l-2.17,-0.46l-0.38,0.28l-0.02,0.48l1.66,1.59l-0.16,0.81l0.71,0.27l0.74,1.04l2.12,1.39l2.14,2.09l0.06,0.64l0.56,0.35l0.03,0.74l1.04,0.75l1.74,0.21l-0.31,0.54l0.26,0.68l0.85,-0.13l0.37,-0.62l1.06,0.49l-0.62,0.52l0.19,1.03l1.47,1.16l1.1,-0.78l1.17,-0.24l0.03,0.66l1.02,0.35l-0.68,0.61l0.38,0.4l1.06,-0.08l-0.14,0.5l0.42,0.24l1.11,-0.11l-0.28,0.43l0.41,0.56l0.57,0.02l-0.32,0.79l0.61,0.22l0.28,0.61l2.02,-0.33l0.44,0.64l1.1,0.26l1.27,1.62l-0.23,0.96l0.31,0.53l1.05,-0.34l0.17,0.4l-1.09,0.45l-0.05,0.46l1.48,1.35l0.77,-0.13l1.0,0.65l1.33,0.25l0.58,-0.28l0.19,0.2l-0.98,0.79l0.0,0.73l-0.69,-0.67l-0.54,0.05l-0.28,0.8l0.91,0.94l-0.12,0.81l0.61,0.19l0.93,1.0l-2.7,0.45l-1.3,-0.27l-1.34,-0.41l-0.65,-0.41l-0.03,-0.53l-0.82,-0.04l-0.58,-0.74l-2.02,-0.55l-0.41,0.19l-0.61,-0.28l-0.59,0.28l-1.28,-1.01l-0.77,0.36l-0.03,-0.72l-0.31,-0.26l-1.61,-0.1l-0.74,-0.49l-1.92,0.21l-0.73,-0.72l-0.57,0.22l-1.61,-0.21l-0.27,-0.31l-4.92,-0.34l-1.3,-0.65l-0.26,-0.59l-0.92,-0.18l-0.45,-0.65l-0.71,0.22l-0.41,-0.28l-0.72,0.09l-1.65,-0.97l-0.8,-0.68l-0.17,-0.63l0.32,-0.98l-0.34,-0.64l-0.72,0.23l-0.27,0.66l-0.13,-0.53l-0.61,-0.4l-0.53,0.44l-0.39,-0.51l0.56,0.06l0.74,-0.59l-0.11,-0.48l0.65,-0.39l-0.28,-0.73l-1.76,-0.0l-0.64,-0.38l-0.55,0.25l-1.97,-0.79l-0.24,0.59l0.22,0.37l-0.43,-0.43l-0.64,-0.05l-1.15,0.73l-1.58,-0.12l-2.51,-1.77l-2.7,-0.42l0.2,-0.25l-0.36,-0.38l-1.39,-0.31l-0.14,-1.62l1.34,-0.85l-0.13,-0.42l-0.78,-0.13l-0.1,-0.38l-1.14,0.12l-0.56,1.24l-1.3,-0.29l-0.62,1.04l-1.35,-0.31l0.19,-0.62l-0.36,-0.49l-0.7,0.16l-1.83,-0.75l0.17,-0.27l-0.33,-0.44l0.44,-0.6l-0.42,-0.49l-0.71,0.03l0.02,-1.79l1.21,-0.02l0.71,-0.73l1.43,-0.34l0.21,-0.54l0.78,-0.3l1.05,-1.15l-0.11,-0.44l-0.47,-0.32l-0.86,0.12l-0.69,-0.44l-0.7,0.55l-0.09,-0.53l-0.57,-0.13l0.37,-0.71l-0.4,-0.4l-1.15,-0.14l-0.21,-0.39l-0.75,0.19l-1.67,-1.36l-0.84,0.34l-0.5,1.11l-0.78,0.06l-0.58,-0.79l-0.59,-0.01l0.44,-0.91l0.85,-0.23l0.49,-0.89l-1.33,0.01l-0.2,-0.77l-0.69,-0.06l-0.41,0.92l-1.22,1.17l0.08,0.54l-0.24,-0.56l-1.53,-0.71l-0.14,-0.46l0.41,-0.38l0.19,-1.23l-0.23,-0.55l-0.49,-0.04l-0.03,-0.7l-0.46,-0.27l-0.46,0.29l-0.22,1.08l-0.79,-0.25l-0.37,-0.47l0.21,-0.63l-0.54,-1.31l-1.36,-0.38l-0.06,-0.63l-0.58,-0.78l-1.02,-0.31l-0.61,-1.14l-0.81,-0.6l0.51,-0.5l-0.21,-0.65l1.44,-1.03l0.24,-0.5l-0.11,-0.59l-0.53,-0.21l-0.45,0.36l-0.34,-1.01l-0.37,-0.2l-0.84,0.69l0.46,1.34l-0.23,0.26l-0.6,-1.36l-0.56,-0.08l-0.64,0.36l-0.52,-0.93l-0.59,-0.26l-0.57,0.34l-0.08,1.41l-0.53,0.18l-1.3,-1.03l-0.53,0.11l-0.26,0.47l-0.71,-0.69l0.25,-1.62l-0.71,-0.59l-0.7,0.32l-0.0,0.75l-0.55,0.31l-1.28,-0.21l-0.29,0.52l-0.41,-0.25l-0.5,0.59l-0.58,0.13l-0.3,-0.67l-1.11,-0.88l1.06,-1.34l0.59,0.12l0.4,-0.31l-0.06,-0.59l-0.95,-0.92l-1.21,-0.05l-0.33,0.58l-0.65,0.19l-0.21,0.4l0.21,0.64l-0.53,-0.27l-0.51,0.38l-1.18,-0.3l-0.45,0.62l0.46,0.63l0.98,0.29l0.62,0.87l0.74,0.23l2.17,1.67l-0.96,-0.11l-0.47,0.36l0.37,1.18l0.67,0.44l-1.4,0.7l-0.74,-0.31l-0.27,0.29l-0.97,-0.72l-0.69,0.14l-1.63,-1.09l-0.74,0.08l-0.15,0.48l-1.35,-0.95l-1.8,-0.48l-0.55,-0.54l-0.72,0.1l-1.29,-0.78l-0.61,-0.04l-0.4,0.7l0.54,1.55l-1.08,-0.08l-0.12,0.7l0.82,0.4l0.3,0.63l-1.48,-0.43l-0.9,0.54l-0.45,-0.3l-0.88,0.47l-1.95,0.13l-0.08,0.62l-2.21,0.11l-0.37,0.45l-0.84,-0.27l-0.31,0.42l0.18,1.12l-1.93,-1.05l-0.69,0.17l-1.15,-0.67l-2.14,0.84l-0.5,-1.2l-0.88,0.11l-0.05,-0.51l-1.73,-0.7l-0.52,0.24l-0.05,0.58l-0.36,-0.07l-0.92,-0.41l0.14,-0.81l-1.44,0.05l0.01,-0.78l-0.84,-0.58l-0.15,-0.67l-0.65,-0.24l0.21,-0.32l-0.62,-1.16l0.23,-0.24l-0.2,-1.09l0.6,-0.4l0.6,-1.1l-0.76,-1.83l1.5,-0.93l0.21,-0.42l2.51,-0.93l0.77,-0.61l1.36,0.01l1.84,-0.79l0.16,-0.73l-1.88,-1.88l0.28,-0.47l1.19,0.31l0.65,-0.47l-0.21,-0.75l-0.84,-0.61l1.64,0.29l1.12,0.66l1.25,0.07l0.51,-0.35l0.8,0.03l0.62,0.41l0.99,-0.07l8.82,2.92l0.68,1.24l1.78,0.62l1.0,0.7l0.14,1.16l-0.64,0.37l-1.58,-0.07l-0.16,0.64l0.52,0.43l0.37,1.02l0.85,0.17l-0.47,0.51l0.23,0.69l0.77,0.13l0.58,0.79l0.42,0.08l0.95,-0.24l0.27,-0.6l-0.77,-1.58l0.21,-1.18l-0.58,-0.55l1.01,0.25l0.44,-0.52l-0.16,-0.41l0.77,-1.13l0.05,-0.89l-0.97,-0.37l-0.42,0.4l-0.09,0.81l-0.48,0.33l-1.84,-2.42l-1.49,-0.53l-0.54,-0.66l-1.36,-0.59l1.51,0.14l0.76,-0.35l0.8,0.85l3.63,0.41l1.41,-0.61l0.36,-0.93l-0.2,-0.78l0.83,0.27l1.03,-0.33l0.79,0.21l0.71,-0.39l0.48,0.93l1.42,0.3l2.22,-1.36l0.49,-1.08l1.41,-0.28l0.28,-0.66l1.24,0.51l1.06,-0.48l0.96,0.16l0.96,1.05l2.39,0.01l-0.06,-1.16l-1.2,-1.81l0.01,-0.84l-0.79,-0.37l0.34,-0.82l-0.61,-0.85l-1.27,-0.84l-1.81,-0.61l-4.55,-4.5l1.12,-1.1l4.23,-2.16l2.23,-1.83l2.65,-1.56l1.11,-1.82l2.33,-1.09l1.55,-0.13l0.25,-0.6l-0.52,-1.12l1.16,-1.66l0.8,-2.01l1.12,-0.53l2.03,-0.14l1.36,-0.58l0.9,-1.09l-0.0,-0.94l0.69,-0.65l-0.03,-0.72l-1.51,-0.75l-0.02,-0.7l-1.13,-2.14l0.52,-0.79l-0.52,-0.55l-0.25,-1.06l-1.04,-0.32l-0.64,-0.6l0.76,-0.91l-0.23,-0.88l-1.65,-1.72l-0.94,0.32l-0.31,-0.55l0.01,-1.91l-1.09,-4.07l-0.45,-0.24l-0.67,0.39l-0.58,-0.09l-0.54,-0.84l-0.95,-0.27l0.21,-0.8l0.85,-0.26l-0.16,-0.46l-0.77,-0.41l-0.51,-0.02l-0.73,0.71l-0.07,0.47l-0.98,0.11l-0.7,0.77l-0.15,-0.36l-1.41,-0.16l-0.97,-0.49l-0.75,-0.96l0.51,-1.13l0.94,-0.17l0.41,-0.39l-0.26,-0.96l0.46,-1.35l-0.69,-1.16l-1.52,-0.47l-0.61,0.13l-0.68,-0.39l-1.67,-0.03l-0.35,0.59l0.25,0.46l1.14,0.6l1.59,1.82l-0.16,0.35l-0.24,0.19l-0.38,-0.61l-1.93,0.3l-1.65,-0.41l-0.6,-0.72l-0.71,-0.26l-0.26,-1.08l-1.74,-1.09l1.34,-0.75l0.31,-0.95l-0.41,-0.43l-0.89,-0.19l0.02,-1.14l-0.3,-0.29l-1.6,-0.13l0.13,-0.22l-0.35,-0.24l0.54,0.24l1.58,-0.3l0.43,-0.77l-0.39,-0.57l-1.79,-0.72l-1.39,0.49l-1.2,0.88l-0.75,2.07l-1.31,-0.73l-1.53,-1.5l-0.76,-0.1l-1.0,0.73l-0.04,0.66l0.49,0.56l-0.71,0.49l-3.36,1.09l-0.95,0.88l-2.97,1.34l-2.7,0.3l-0.34,-0.92l0.98,-0.95l0.46,-1.26l-1.16,-0.82l0.07,-1.38l1.86,-0.6l2.53,0.25l0.74,0.55l1.13,0.07l1.75,-0.84l0.36,-0.53l1.67,-0.0l0.49,-0.36l0.32,-1.08l-0.31,-1.79l-1.05,-1.09l-2.89,-1.59l-2.13,-0.73l-2.06,0.21l-0.59,-1.07l-1.72,-1.29l0.06,-0.4l1.36,-1.08l2.47,0.71l0.66,-1.41l-0.37,-0.27l-1.76,-0.05l-0.57,-0.57l-2.28,0.26l-0.41,0.42l0.34,0.63l0.65,-0.02l-0.95,0.23l-0.42,0.94l-1.26,-0.24l0.44,-0.3l0.03,-0.53l-1.25,0.05l-0.75,0.43l-0.64,-0.61l-1.06,-0.07l1.51,-0.38l0.68,0.34l0.77,-0.12l0.57,-0.26l0.5,-0.75l-0.12,-0.86l-0.94,-0.17l1.22,-0.36l-0.04,-0.89l-0.39,-0.18l-1.95,0.31l-0.28,-0.74l-0.9,0.14l-0.67,0.53l-0.86,-0.21l2.59,-0.88l0.44,-0.86l-0.4,-0.22l-5.25,1.45l-1.36,0.66l-0.28,-2.65l0.28,-1.75l-0.42,-2.25l-1.04,-1.0l-1.31,-0.3l-1.52,0.71l-0.6,-0.46l-0.87,-0.14l-0.39,0.56l-1.3,0.27l-1.02,-1.34l0.97,-0.27l-0.11,-0.71l-1.59,-0.34l-0.79,0.38l0.12,-0.23l-0.38,-0.58l-0.36,0.02l-0.75,-1.42l-0.83,0.14l-0.71,-0.59l-0.41,0.56l-0.82,-0.14l0.11,-0.68l1.47,-0.29l-0.06,-0.85l0.98,0.86l0.96,-0.27l-1.36,-1.93l-1.31,0.02l-0.34,-0.77l-0.47,-0.22l-1.73,1.12l0.18,0.79l1.01,0.01l-0.85,1.03l-0.4,0.12l-0.39,-0.8l-0.96,0.28l-0.19,1.17l-0.53,-0.3l-0.47,0.12l-0.12,0.68l-0.76,-0.05l-0.76,0.49l-0.23,0.87l0.37,0.54l1.56,0.77l0.95,-0.29l1.56,1.05l0.8,0.02l0.67,-0.55l0.77,0.39l1.84,2.28l0.23,1.96l0.66,1.0l-0.37,1.31l-0.88,0.67l-0.63,-0.25l-5.54,0.18l-2.43,0.6l-2.12,-2.31l-0.58,-0.01l-0.7,0.55l-0.13,-0.86l-0.47,-0.17l-1.49,-0.13l-0.97,0.38l-2.45,-1.04l-2.74,-0.14l-0.86,-0.33l-1.06,0.19l-0.46,-0.6l-0.92,0.18l-4.22,-0.4l-1.47,-0.47l-0.95,0.3l0.33,1.11l0.7,0.48l1.03,0.09l1.39,1.17l1.28,-0.55l1.13,0.56l0.64,1.25l3.5,2.51l-1.24,0.7l-0.04,-0.34l-1.25,-0.52l-0.93,-1.09l-1.12,-0.35l-2.16,-1.46l-0.77,-0.08l-0.04,-0.72l-1.87,-0.07l-3.67,-2.58l-4.56,-1.34l-4.66,-2.26l-0.84,0.22l0.14,0.46l2.51,1.96l0.96,0.0l4.76,1.72l1.87,0.97l1.72,1.53l1.44,0.36l-1.7,1.13l-0.41,-0.39l-0.72,0.05l-1.24,0.92l0.09,0.38l-0.07,0.12l-0.24,-0.7l-2.02,-0.61l-0.56,0.32l-2.5,-1.38l-0.63,0.09l-1.43,-0.63l-1.68,-1.06l-2.37,-0.04l-0.76,0.55l-3.13,0.65l-4.0,-0.77l-6.32,-0.33l-1.29,-0.56l0.62,-0.7l-0.45,-0.75l-1.65,0.9l-3.9,-0.76l-4.71,0.16l-0.9,0.39l-0.04,0.99l-3.61,-1.57l-2.71,-2.2l-0.21,-2.1l0.61,-0.79l1.7,-0.61l0.52,-0.56l-0.03,-0.6l-0.96,-0.74l-0.46,0.03l-0.19,0.68l0.26,0.26l-2.21,0.96l-0.97,1.1l0.06,0.65l-1.49,-0.01l0.89,-0.17l0.58,-0.6l-0.78,-0.48l-0.71,0.08l-0.59,-1.32l-0.73,-0.2l-1.78,0.6l-0.21,0.62l-0.83,0.23l-0.28,0.52l0.48,0.52l2.08,0.04l0.1,0.91l-4.73,-0.81l-2.96,-0.06l-0.51,0.37l-0.0,0.58l1.13,0.33l-1.36,0.42l-0.5,-0.13l-0.14,-0.32l0.52,-0.24l0.08,-0.68l-0.25,-0.19l-5.12,-2.26l-3.05,-0.31l-2.0,-1.37l-1.04,-2.13l-2.96,-2.18l-1.28,-2.04l1.94,-0.31l0.52,-1.02l-2.69,-1.67l1.7,0.15l0.13,0.44l1.13,0.43l4.95,-0.42l2.2,0.46l0.9,1.29l4.52,0.46l2.15,-0.49l3.31,0.23l0.91,-1.12l2.48,0.36l0.43,-0.16l0.01,-0.72l-3.96,-0.98l-0.49,-0.47l-3.12,-1.22l-0.82,-0.76l0.12,-1.41l-0.76,-0.39l-0.72,0.14l-1.49,1.05l-0.92,-0.35l-4.47,-0.15l-12.38,-1.85l-1.25,-1.97l0.38,-1.18l-0.57,-1.3l0.26,-0.9l1.47,-1.26l0.47,-1.05l-0.99,-0.68l-0.02,-0.54l-0.61,-0.18l-0.77,-1.31l-0.75,-0.39ZM568.17,223.51l-0.08,0.09l-2.72,-0.2l0.76,-1.44l0.54,0.81l1.51,0.75ZM614.25,241.58l0.44,0.15l0.04,0.03l-0.37,-0.1l-0.11,-0.08ZM740.05,301.26l0.4,0.04l0.2,0.13l-0.04,0.0l-0.56,-0.17ZM747.98,309.54l0.35,-0.64l-0.05,-0.77l0.87,-0.05l0.49,0.33l0.47,-0.38l0.14,0.41l-0.4,0.55l-1.88,0.55ZM752.49,309.43l0.46,-0.93l1.07,0.45l-0.31,0.54l-1.23,-0.06ZM754.89,308.59l0.1,-0.03l0.34,0.01l-0.1,0.15l-0.35,-0.13ZM796.0,355.58l1.3,0.3l0.64,0.54l-0.81,0.01l-0.5,0.68l-0.55,-0.62l-0.08,-0.91ZM787.44,367.12l-0.71,0.34l-0.13,-0.1l0.24,-0.12l0.59,-0.12ZM776.24,362.52l-0.36,0.45l-0.3,-0.17l0.2,-0.44l0.46,0.16ZM771.51,357.14l-0.3,0.21l-0.01,-0.17l0.31,-0.04ZM758.98,346.35l0.01,0.13l0.47,0.37l-0.73,-0.15l-0.13,-0.35l0.38,0.0ZM756.0,370.57l0.02,0.05l-0.02,-0.03l-0.0,-0.01ZM755.9,395.56l1.25,1.02l-0.16,0.58l0.36,0.94l-0.45,-0.25l-0.5,0.55l-0.13,-0.16l0.06,-1.42l-0.43,-1.27ZM702.45,388.16l0.08,0.01l-0.06,0.08l-0.02,-0.09ZM703.48,388.07l0.06,-0.0l-0.04,0.04l-0.03,-0.04ZM700.1,387.97l-0.12,0.63l-0.24,-0.02l-0.01,-0.67l0.37,0.06ZM689.56,378.24l-0.0,0.01l-0.06,-0.01l0.06,-0.0ZM689.49,378.24l-0.16,-0.01l-0.41,0.38l0.35,-0.44l0.22,0.07ZM688.92,378.78l0.23,0.33l0.12,0.09l-0.33,-0.11l-0.02,-0.3ZM688.52,376.98l-0.18,0.29l-0.29,-0.22l0.11,-0.2l0.36,0.14ZM682.54,374.12l0.77,1.18l-0.23,0.37l-0.07,-0.69l-0.7,-0.51l0.22,-0.34ZM682.54,375.74l-0.28,0.24l0.03,1.01l-0.31,0.92l-0.48,-0.01l0.22,-0.94l0.49,-0.55l-0.31,-0.79l0.63,0.13ZM664.12,375.69l0.25,0.04l0.04,0.04l-0.05,0.02l-0.24,-0.1ZM667.72,368.55l-0.08,0.08l0.01,-0.02l0.07,-0.06ZM688.87,311.12l-0.18,0.21l-0.01,0.18l-0.1,-0.43l0.29,0.04ZM674.36,301.67l0.05,0.51l-0.3,0.04l-0.25,-0.34l0.51,-0.21ZM645.4,284.31l0.31,0.03l0.48,-0.17l-0.51,0.75l-0.28,-0.62ZM629.38,271.19l0.08,1.01l-0.33,0.3l-0.47,-0.52l0.72,-0.79ZM561.89,280.14l2.12,-0.49l1.51,0.49l-1.38,-0.17l-1.39,0.39l-0.85,-0.21ZM704.35,393.25l-0.95,-0.09l-0.04,-0.02l0.55,0.0l0.44,0.11ZM760.92,411.19l-0.39,-0.55l1.09,0.38l-0.02,0.07l-0.69,0.09ZM746.64,400.15l-0.07,-0.18l0.41,-0.33l0.24,0.06l-0.58,0.46ZM747.8,399.56l0.06,-0.06l0.04,0.04l-0.07,0.02l-0.03,0.0ZM766.4,370.73l0.11,-0.17l0.05,-0.13l0.08,0.1l-0.25,0.2ZM755.14,365.91l-0.07,-0.0l-0.01,-0.18l0.08,0.18ZM755.5,365.23l0.03,-0.02l0.07,-0.03l-0.0,0.01l-0.1,0.04ZM804.94,334.94l0.31,-0.41l0.25,-0.05l0.14,0.47l-0.7,-0.02ZM806.36,335.07l0.09,-0.04l0.15,-0.09l-0.18,0.13l-0.05,-0.01ZM782.85,329.53l1.03,-0.27l-0.37,0.46l-0.66,-0.19ZM736.45,305.68l0.5,-0.16l0.61,0.12l-1.11,0.04ZM737.99,279.7l-0.03,-0.05l0.04,0.05l-0.02,-0.0ZM687.61,254.88l0.08,-0.4l0.07,-0.04l0.2,0.42l-0.35,0.02ZM641.84,246.97l-1.76,-0.96l-1.31,-1.35l0.96,-0.26l1.55,1.55l0.56,1.02ZM800.02,355.38l0.65,0.27l0.53,-0.27l0.1,0.49l1.14,0.33l-0.22,0.26l-0.1,-0.29l-0.95,-0.26l-0.42,0.21l-0.72,-0.74ZM796.41,332.96l0.03,-0.02l0.09,-0.13l-0.03,0.16l-0.09,-0.02ZM796.65,332.63l0.01,-0.36l1.65,-0.7l0.24,-0.6l1.29,-0.21l-1.6,0.94l-0.68,0.77l-0.91,0.17ZM786.8,328.54l1.07,-0.59l0.26,0.63l-1.33,-0.04ZM788.92,328.61l0.48,-0.35l0.55,0.3l-0.4,0.07l-0.64,-0.02ZM784.64,323.15l0.27,0.42l1.04,0.9l-1.79,0.02l0.48,-1.34ZM779.49,389.99l0.89,-0.35l0.44,3.39l-0.51,-0.89l-0.09,-0.93l-0.73,-1.22ZM780.84,393.13l1.13,0.88l0.18,0.38l-0.46,-0.1l-0.85,-1.16ZM782.88,390.66l0.29,0.26l-0.12,0.26l-0.1,-0.14l-0.07,-0.38ZM781.1,387.56l-0.08,-0.87l0.65,0.02l0.1,0.13l-0.67,0.72ZM774.8,408.38l1.2,-0.04l0.33,-0.66l-0.56,-0.38l0.24,-0.16l0.93,0.51l1.48,-0.09l0.32,-0.29l0.5,0.35l-0.49,0.42l-0.04,1.02l-0.79,0.37l-3.04,-0.71l-0.09,-0.36ZM776.75,386.03l0.49,-0.52l0.75,1.15l-0.46,0.49l-0.67,-0.33l-0.8,0.3l-0.82,-0.49l0.45,-0.38l0.48,0.59l0.68,-0.26l-0.1,-0.54ZM778.41,387.8l0.03,0.03l-0.01,-0.0l-0.02,-0.03ZM779.18,388.16l0.42,-0.32l0.06,0.72l-0.23,0.0l-0.25,-0.4ZM777.52,439.6l0.78,0.86l0.24,0.69l-1.7,-0.46l-1.09,-1.01l1.77,-0.07ZM769.37,421.78l0.27,-0.39l3.79,-0.54l2.36,0.43l0.07,0.7l0.9,0.13l-0.44,0.63l0.34,1.17l-0.86,0.56l-0.62,1.18l-0.34,-0.2l-0.0,-0.76l-1.48,-0.27l-0.37,-0.62l-0.59,-0.01l-0.35,-0.68l-0.6,-0.06l-2.09,-1.25ZM771.74,417.3l0.48,-0.42l0.73,0.24l0.38,0.94l0.61,0.15l0.11,0.46l0.74,0.12l0.39,0.55l-0.5,0.25l-1.99,-0.84l-0.68,-0.61l-0.28,-0.84ZM773.61,406.9l0.47,-0.33l0.33,-0.06l0.29,0.04l-1.08,0.35ZM773.58,378.89l0.78,0.76l0.03,0.36l-0.23,0.1l-0.58,-1.22ZM767.32,375.02l2.09,-2.01l0.31,0.43l0.66,-0.37l0.44,0.2l-1.55,0.5l-0.02,0.58l-0.93,0.05l-0.16,0.45l-0.84,0.16ZM764.92,418.9l0.58,-0.48l0.81,0.37l-0.7,0.28l-0.69,-0.17ZM765.55,355.34l0.01,-0.44l-0.01,-0.08l0.07,0.04l-0.08,0.48ZM758.51,312.8l0.32,-0.34l1.8,0.06l0.0,0.63l-2.12,-0.35ZM747.02,289.2l0.39,-0.19l0.34,-0.06l-0.13,0.21l-0.61,0.04ZM748.26,288.75l0.24,-0.36l1.18,0.35l-1.18,-0.05l-0.24,0.06ZM741.49,288.05l1.3,-1.04l1.84,0.4l0.96,-0.35l-1.15,0.89l-0.46,0.8l-2.48,-0.7ZM742.46,438.0l0.69,0.12l0.5,0.72l1.03,0.65l-0.13,0.61l-1.17,1.64l-0.87,0.07l-2.57,1.42l-0.52,-0.08l0.07,-1.08l1.69,-4.03l1.28,-0.04ZM712.78,402.47l-0.06,-0.06l2.14,0.38l2.88,1.15l1.28,1.18l0.09,0.45l0.81,0.07l0.79,0.84l-1.42,0.51l-1.94,-0.21l-0.78,-0.42l-0.57,0.22l-0.39,-0.67l-0.56,-0.23l-0.39,-1.34l0.79,-0.34l-0.06,-0.78l-1.47,-0.15l-1.14,-0.61ZM700.79,263.76l0.62,0.37l0.74,-0.25l0.49,-0.78l0.21,-1.49l1.17,-0.37l3.53,1.09l1.34,0.03l-0.46,1.12l-2.1,0.24l-2.79,0.9l-1.02,0.75l-0.68,-0.02l-0.12,-0.63l-0.94,-0.95ZM694.93,251.76l-0.2,0.18l-2.23,-0.69l0.86,-0.86l1.72,-0.1l0.4,0.7l-0.54,0.78ZM689.07,252.63l1.65,-0.67l0.49,0.3l-0.95,1.38l0.51,1.1l0.65,-0.21l0.11,-0.51l1.22,-1.08l0.6,0.8l-1.42,0.54l-0.03,1.5l-1.41,-0.34l-0.32,-0.2l0.09,-0.82l-1.18,-1.8ZM692.19,256.22l0.02,0.03l-0.05,0.02l0.04,-0.04l-0.01,-0.02ZM678.21,314.72l0.71,-1.08l0.62,0.51l-0.48,0.75l0.66,0.75l1.14,-0.08l3.45,1.26l0.83,-0.37l2.53,0.35l0.01,0.95l0.63,1.87l-0.15,0.23l-9.91,-0.05l-1.39,-0.5l-2.04,-2.48l0.02,-1.2l0.77,-0.35l2.02,0.22l0.59,-0.78ZM686.15,375.22l0.31,-0.26l0.42,-0.06l-0.19,0.47l-0.54,-0.15ZM686.81,375.95l0.19,0.19l-0.04,0.34l-0.2,-0.48l0.04,-0.04ZM686.56,376.88l-0.04,0.81l-0.33,0.4l-0.12,-1.28l0.49,0.07ZM676.56,404.43l0.37,-0.21l0.96,0.67l-0.9,-0.13l-0.42,-0.33ZM678.53,405.29l2.15,-0.11l1.15,0.25l0.19,0.3l-3.49,-0.44ZM679.93,311.2l0.55,-0.53l-1.33,-0.93l-0.56,-0.87l0.13,-0.33l0.77,0.34l1.52,1.65l-0.66,1.11l-0.42,-0.44ZM675.63,104.71l0.43,-0.68l0.42,0.03l3.53,1.03l-1.12,0.48l-3.27,-0.86ZM676.01,306.16l-1.69,-0.07l-0.65,-0.67l0.61,-0.53l0.87,0.17l0.33,0.89l0.54,0.22ZM668.4,306.74l0.05,-1.19l1.07,-1.42l0.79,0.47l1.43,0.15l0.73,1.83l1.53,1.41l-0.86,0.13l-0.38,0.41l0.53,1.42l-0.87,0.1l-0.39,-0.94l-2.36,-1.0l-1.16,-0.81l-0.1,-0.55ZM649.62,324.82l0.21,-0.62l-0.99,-2.73l0.75,-2.09l3.75,-5.52l1.74,-1.76l3.85,-1.23l0.55,0.54l1.58,0.12l1.77,-0.81l3.03,0.51l1.07,0.55l3.52,0.79l1.01,1.09l0.17,0.53l-1.58,3.11l0.51,1.62l0.63,0.74l-0.18,1.41l0.37,1.87l-1.03,2.09l-0.79,0.84l-1.0,0.36l-0.68,0.89l-1.17,-0.01l-0.81,0.83l-1.0,0.08l-2.22,0.87l-3.36,-0.23l-1.21,0.47l-1.68,-0.1l-1.03,0.33l-3.38,-0.25l-0.76,-0.58l-1.01,-2.36l-0.64,-0.48l-0.01,-0.88ZM612.55,212.55l0.83,-1.28l-0.12,-1.38l2.27,-0.38l2.1,0.25l2.25,1.23l0.64,-0.12l0.4,-0.57l5.85,1.92l4.85,0.0l1.35,-0.61l0.79,0.21l6.47,-0.23l2.61,1.12l4.37,0.97l1.05,0.86l1.07,0.11l1.46,1.78l-0.1,0.58l0.44,0.6l1.38,0.66l1.5,0.09l0.21,0.78l1.31,0.99l-0.42,0.58l0.23,0.62l1.4,0.9l1.75,0.35l-0.26,1.22l0.32,0.4l-0.36,0.36l0.07,0.57l0.9,0.59l1.33,0.04l0.21,0.27l-0.2,0.73l-1.92,0.63l-10.01,-0.75l-1.15,-0.53l-7.7,-0.3l-4.79,0.89l-5.44,1.89l-2.1,0.24l-1.69,-0.33l-4.19,-1.96l-1.72,-3.24l0.51,-1.32l-0.57,-0.71l0.52,-0.36l0.11,-0.6l-0.61,-0.93l-0.9,-0.41l-1.39,0.17l-4.05,-0.75l-0.71,-0.67l-0.08,-2.1l0.32,-0.58l1.32,0.08l0.08,-0.64l-1.56,-1.13l-0.24,-0.81ZM648.34,390.25l0.39,-0.51l-0.38,-0.4l-0.71,-0.03l0.41,-0.31l2.13,0.56l0.66,-0.11l3.38,1.53l0.58,0.65l-0.08,0.81l0.49,0.17l-0.6,0.93l-1.68,-0.67l-0.89,0.05l-2.69,-2.21l-1.01,-0.46ZM651.04,291.52l0.92,0.26l2.55,-0.24l0.39,0.35l-0.06,0.53l-2.77,2.1l0.01,1.22l-1.93,0.41l-0.89,-0.42l-0.91,-1.23l-0.17,-0.6l0.47,-1.03l-0.18,-1.08l0.81,-0.52l1.14,-0.19l0.62,0.43ZM636.57,393.09l-0.11,-0.47l0.42,-0.62l0.45,0.76l0.5,0.17l1.81,-0.57l1.05,0.32l2.12,-0.06l0.33,0.67l1.39,0.01l0.37,0.29l0.07,0.73l1.15,1.31l-0.52,1.11l-0.63,0.48l-2.65,0.84l-5.68,-4.5l-0.06,-0.47ZM642.21,384.01l0.37,-0.25l2.42,-0.23l-0.9,0.94l-1.9,-0.45ZM643.93,125.12l-0.89,0.32l-0.5,-0.66l2.8,-0.43l-0.02,0.43l-0.55,0.31l-0.84,0.03ZM643.89,406.62l0.13,0.09l0.03,0.02l-0.22,0.03l0.06,-0.14ZM633.01,290.08l1.8,-1.18l1.13,-1.4l1.55,0.03l0.52,-0.64l0.44,0.31l0.75,-0.05l0.4,-0.6l-0.23,-0.7l0.44,-0.33l1.23,0.59l0.64,0.93l-1.29,0.93l-1.86,0.34l-2.36,1.29l-1.33,-0.41l-1.83,0.9ZM635.5,435.28l0.08,-0.22l2.24,-0.46l-1.49,0.33l-0.83,0.35ZM627.69,300.86l0.01,-0.74l1.65,-2.5l2.61,-0.53l1.15,-0.9l0.1,-0.96l0.78,-0.82l1.31,-0.05l0.21,-0.64l-0.94,-0.8l2.21,-0.87l1.63,0.26l0.43,0.87l-1.05,1.38l-1.2,-0.24l-0.26,1.16l-0.82,0.52l-0.03,0.75l-1.49,1.32l-0.19,0.87l-0.69,0.34l-0.41,0.7l-2.91,0.64l-0.82,0.66l-1.27,-0.43ZM632.69,307.62l0.53,-0.56l0.61,-0.02l0.19,0.48l0.51,0.13l-1.02,0.46l-0.51,-0.05l-0.32,-0.45ZM635.03,306.08l-0.24,-0.55l-0.94,-0.44l2.56,0.63l-0.18,0.66l-1.19,-0.29ZM632.5,503.56l0.97,-1.56l0.07,-1.28l0.85,-1.05l0.08,2.59l-0.24,0.55l-0.85,0.12l-0.87,0.63ZM625.34,166.29l0.41,-0.45l-0.01,-0.65l3.08,-1.67l0.21,-0.55l1.07,-0.52l0.74,-0.82l1.39,0.05l0.73,0.41l-3.66,2.24l0.02,1.1l0.97,0.73l-2.38,0.01l-1.1,0.5l-0.13,0.58l-0.7,-0.05l-0.19,-0.63l-0.45,-0.28ZM631.32,166.66l0.03,0.01l-0.03,0.0l-0.0,-0.01ZM629.89,310.79l1.89,-0.23l1.05,0.87l-1.96,1.58l-0.95,-0.65l-0.03,-1.57ZM622.24,507.48l-0.73,-0.7l2.63,-3.1l1.12,-0.89l-0.44,0.54l0.13,0.75l-2.71,3.4ZM626.19,503.4l1.27,-0.58l1.14,-3.26l0.15,-1.49l0.93,0.18l0.46,1.16l0.9,0.51l-0.56,0.46l-0.47,1.64l-0.44,-0.05l-0.46,0.43l-1.71,3.41l-1.3,1.42l-0.87,-0.41l1.7,-2.53l-0.14,-0.65l-0.59,-0.25ZM625.13,561.74l0.64,-0.0l2.26,-1.13l-0.64,1.38l-2.07,0.14l-0.19,-0.39ZM619.33,418.64l-0.65,-1.82l0.7,-3.16l2.19,-2.54l0.41,-0.92l0.89,-0.53l1.44,0.48l1.31,-0.67l0.9,0.46l0.24,0.61l1.5,1.34l-0.04,1.43l-0.65,1.91l-0.41,0.14l-1.38,2.45l-0.38,1.5l-0.89,1.47l-1.49,1.19l-1.15,-1.7l-2.54,-1.64ZM449.2,148.51l0.8,-0.71l-0.26,-0.59l0.84,0.3l0.88,0.86l1.24,-0.31l1.98,0.49l0.67,-0.36l-0.06,-0.69l-0.37,-0.11l0.37,-0.23l-0.14,-0.72l-2.79,-0.67l-1.01,-0.59l-1.2,-0.06l-0.28,-0.57l1.32,-0.16l0.56,-0.29l0.03,-0.54l1.28,0.12l0.39,0.32l1.14,-0.68l0.96,0.08l0.55,-0.63l-0.31,-0.51l4.77,-0.77l3.49,0.32l2.28,1.2l1.95,0.17l0.85,0.39l4.01,0.16l0.69,1.05l1.57,0.02l0.81,0.66l1.42,0.02l1.76,-1.05l2.35,0.45l0.78,1.06l2.83,1.6l0.36,0.71l0.82,0.22l0.04,0.26l-0.04,0.88l-0.71,0.81l-0.56,1.68l-3.44,2.13l-0.04,0.52l1.23,1.21l0.86,0.01l0.51,-0.41l0.12,-0.44l-0.94,-0.27l1.84,-0.63l1.43,-1.67l1.28,-0.93l0.01,-0.56l1.08,-0.04l2.64,0.71l1.81,-0.54l1.63,0.47l1.35,-0.49l0.95,0.02l1.57,-0.93l5.49,-0.6l5.12,1.03l1.27,1.21l2.58,0.68l0.14,1.13l-1.07,0.16l-2.59,-0.58l-0.81,-0.7l-0.55,0.18l-0.42,0.61l-2.77,-0.77l-2.2,0.22l-0.36,0.54l2.06,1.26l4.05,0.15l3.55,0.71l0.88,0.55l1.23,-0.4l11.45,2.28l0.89,0.81l-1.53,0.88l-10.89,0.14l-0.17,0.42l-6.85,-0.83l-0.84,-0.58l-3.83,-0.87l-0.45,0.22l0.4,0.71l2.84,0.85l-1.19,0.91l0.31,0.54l1.81,-0.28l4.75,0.73l-1.35,0.72l0.26,0.47l-2.28,-0.02l-0.76,0.33l-0.22,0.39l0.27,0.35l0.83,0.17l-0.03,0.36l0.89,0.46l-1.67,0.76l0.04,1.77l0.69,0.21l0.37,-0.23l0.46,-1.12l1.13,-0.43l1.36,-1.54l0.2,0.71l0.61,0.22l1.82,-0.63l-0.55,1.19l0.13,0.38l0.57,0.22l1.97,-1.51l1.12,0.67l0.81,0.08l0.77,-1.4l0.5,-0.27l0.14,0.79l1.19,0.23l1.23,1.13l-0.83,1.41l0.26,1.03l0.85,0.08l0.59,-0.67l1.36,-0.72l1.84,1.02l1.37,0.36l-0.81,2.49l-1.26,0.35l-2.4,-0.1l-1.6,1.22l0.28,0.41l1.04,0.67l1.47,-0.11l1.22,-0.69l1.89,0.05l1.02,1.95l1.01,0.34l0.25,0.62l0.55,0.27l1.89,-0.12l0.36,-0.44l0.08,-1.02l-1.25,-2.29l1.09,-0.63l0.16,-0.73l1.18,0.5l2.53,2.01l0.95,0.3l-0.85,0.78l0.91,0.74l0.66,-0.04l2.35,-1.44l2.12,-0.67l0.81,0.33l0.2,0.61l0.95,0.66l-0.89,0.51l0.39,0.54l1.51,-0.1l0.53,-0.41l0.22,-0.84l-0.86,-1.04l1.19,-1.01l0.83,-0.12l1.39,0.52l0.56,0.91l2.87,1.55l2.15,0.02l1.48,0.74l-1.95,0.72l-0.25,0.46l0.42,0.32l2.2,-0.15l2.15,-0.81l1.97,-0.13l4.8,0.39l0.41,-0.54l-0.43,-0.46l-2.61,-0.35l-1.22,-0.76l-1.74,-0.31l3.68,-0.76l1.12,-0.69l0.49,0.46l3.24,0.15l0.46,-0.39l-0.24,-0.45l0.59,-0.62l0.87,0.01l0.83,-0.5l1.81,-0.01l2.48,0.64l1.05,-0.6l-0.25,-0.39l-1.18,-0.2l-0.03,-0.24l3.25,-0.39l1.22,-1.04l1.72,-0.26l1.07,-0.89l1.23,-0.07l0.0,0.28l0.93,0.35l1.47,-0.13l1.39,1.02l2.2,-0.13l0.96,0.3l4.79,-1.67l2.96,-0.47l12.03,1.3l-1.76,1.8l0.13,0.58l0.59,0.25l2.41,0.37l5.14,-0.52l0.72,0.47l1.99,0.37l1.31,0.59l-0.15,0.43l0.26,0.41l-2.75,0.73l-0.35,0.37l0.3,0.67l6.76,-0.09l0.02,0.54l0.59,0.55l1.18,0.42l-0.24,0.67l-0.92,0.65l0.3,0.72l0.89,0.16l-0.21,0.6l-1.0,0.86l-1.96,0.11l-0.3,0.44l-0.87,0.29l-0.42,0.87l-3.0,0.65l-0.51,0.43l-0.99,0.03l-0.39,0.3l0.19,0.45l1.57,0.93l-0.06,0.42l-1.23,0.7l0.13,1.0l2.75,1.17l-0.0,0.29l-1.23,0.59l0.1,0.62l0.71,0.4l-0.5,0.44l0.32,1.46l-0.51,0.57l-1.93,-0.12l-0.98,0.45l-5.84,-0.3l-2.09,0.34l-4.72,2.06l-5.68,-1.13l-0.1,-0.72l-0.68,-0.44l-1.84,1.21l-3.0,-0.74l-1.82,-2.15l0.07,-1.33l0.75,-0.76l-0.71,-1.25l-1.21,-0.09l-1.53,-0.58l-1.69,-1.11l-0.95,0.54l0.37,1.31l2.01,1.51l-1.16,1.77l-0.46,1.67l-1.08,0.54l-4.26,0.05l-2.19,0.74l-3.52,0.06l-0.97,-0.46l-1.91,0.33l-0.59,-1.02l0.26,-2.22l-0.71,-0.64l-1.16,1.36l0.26,2.31l-1.09,0.56l-1.4,-0.1l-0.02,-0.73l-0.64,-0.84l-0.55,-1.74l-0.86,-0.55l-0.55,0.63l0.61,2.63l-0.91,0.61l-4.62,0.24l0.17,-1.13l-0.75,-0.65l-0.18,-0.79l-0.44,-0.17l-0.9,0.62l-0.12,1.43l-0.52,0.49l-0.98,0.13l-2.13,-0.91l-0.79,-0.92l-0.1,-0.65l-0.65,-0.21l-0.5,0.41l0.02,1.44l1.3,1.24l-2.08,0.06l-0.68,-0.82l-0.52,-0.08l-0.46,0.76l-1.76,0.1l-0.66,-0.48l0.53,-0.46l-0.34,-0.64l-1.23,0.22l-0.69,1.08l-1.64,0.47l-0.62,-0.2l-0.11,-0.76l-0.43,-0.28l-1.29,0.77l-1.72,0.08l-1.17,-0.63l-0.76,0.54l-2.59,-0.37l-0.28,-0.89l0.27,-1.07l1.03,-1.51l0.29,-1.16l0.8,-0.09l0.36,-0.54l-0.47,-0.48l-1.41,-0.08l0.3,-0.72l-1.3,-1.64l-0.74,0.3l0.13,0.82l-0.33,-0.18l-0.58,0.25l-0.93,1.46l-0.07,1.12l-0.57,0.84l-0.51,-2.11l-1.94,-1.19l-0.52,0.5l0.79,1.21l-0.25,0.66l-1.58,-0.7l-0.69,0.19l0.67,1.16l1.02,0.57l-0.39,1.23l-0.74,0.35l-1.5,-0.05l-0.52,0.67l-1.58,-0.1l-1.03,0.43l-2.14,0.16l-0.32,-0.9l-0.45,-0.32l-0.53,0.07l-0.66,0.6l-1.86,-0.66l0.1,-0.67l-0.43,-0.14l-2.34,0.4l-1.45,-0.91l-0.16,-0.71l0.27,-0.53l-0.53,-0.45l-1.25,0.26l-0.57,0.74l-0.56,-0.15l1.07,-0.65l1.5,-1.66l0.01,-1.05l-0.72,-0.58l-0.84,0.29l-2.54,2.54l-0.64,-0.16l-0.72,0.43l-0.14,0.68l0.94,1.44l-0.73,-0.05l-0.11,-1.13l-0.48,-0.52l-0.95,0.32l0.05,1.11l-1.15,0.01l-1.11,-0.37l0.3,-0.4l-0.59,-0.83l-1.46,-0.07l-2.42,-1.32l0.52,-0.84l-0.03,-1.34l-0.58,-1.18l-1.36,-1.25l0.22,-0.76l0.88,0.15l0.71,-0.33l-0.04,-0.69l-0.48,-0.24l0.08,-0.78l-0.51,-0.2l-1.95,0.38l-1.68,-1.38l0.35,-1.94l1.05,-0.79l-0.16,-0.7l-0.83,-0.01l0.53,-1.05l1.73,-1.92l1.11,-0.3l0.94,-0.72l-0.04,-0.59l-0.5,-0.3l0.43,-0.37l-0.04,-0.64l-1.45,-1.5l0.72,-1.52l-0.3,-1.16l-0.77,-0.63l-2.27,-0.64l-0.41,-0.67l-0.75,-0.2l-0.26,-0.66l-0.65,-0.34l-0.06,-1.59l-0.35,-0.77l-0.97,-0.66l-0.54,-1.14l-1.26,-0.48l-1.19,-1.17l-0.17,-1.17l-0.86,-0.51l-1.76,0.02l-2.96,1.39l-0.52,-0.54l-0.76,0.14l-0.77,0.8l-0.03,0.41l-2.78,0.08l-1.27,-0.5l-4.15,0.21l-0.69,-0.86l-1.09,0.07l-0.65,-0.6l-2.9,-0.57l-0.62,0.31l-0.93,-0.53l-0.86,0.3l0.19,-0.36l-0.32,-0.34l-1.92,0.27l-2.6,-0.32l-1.45,-0.74l-1.06,-1.02l3.27,-0.22l1.71,-1.59l0.16,-0.31l-0.41,-0.58l-0.72,0.19l-1.14,0.93l-0.52,-0.25l-1.48,0.29l-0.04,-0.53l-1.5,-0.04l-1.03,-1.16l-1.75,-0.19l-0.87,-1.03l-1.95,-0.37l-0.98,0.27l-1.21,-0.24ZM469.89,157.81l-1.53,0.35l-0.63,0.58l-2.86,-0.48l0.06,-0.27l0.63,0.23l1.95,-0.4l0.67,-0.56l1.32,0.0l0.38,0.55ZM618.52,185.8l0.17,0.01l0.09,0.62l-0.09,0.07l-0.17,-0.7ZM619.76,185.51l0.95,0.13l0.58,-0.59l2.44,-0.85l1.65,0.32l0.16,0.65l1.69,1.42l-5.13,1.25l-2.23,-0.83l0.22,-0.91l-0.33,-0.6ZM512.68,162.77l1.07,-0.5l2.81,0.44l-0.24,0.08l-3.64,-0.03ZM613.39,286.25l0.71,-0.71l1.95,0.47l0.07,0.29l-2.73,-0.04ZM617.18,287.0l0.56,-1.26l-0.98,-0.55l-0.27,-0.37l0.26,-0.14l1.09,0.33l1.1,-0.34l0.53,0.32l-0.2,0.84l0.5,0.24l0.72,-0.51l1.05,0.38l1.51,-0.55l0.74,0.05l0.26,-0.68l0.56,-0.39l1.93,0.27l0.18,0.63l0.8,0.63l-2.48,1.25l-2.97,0.26l-0.99,-0.71l-0.72,0.02l-0.34,0.7l1.3,1.72l-0.16,0.15l-1.99,-0.55l0.25,-1.13l-0.22,-0.4l-0.72,-0.08l-0.45,0.54l-0.86,-0.68ZM620.54,502.62l0.5,-1.13l1.4,-0.14l0.53,-0.64l1.02,0.1l-3.46,1.81ZM623.49,483.15l0.24,-0.34l0.13,0.54l-0.1,-0.02l-0.27,-0.18ZM622.24,546.24l0.08,-0.38l0.37,0.45l-0.27,-0.07l-0.18,-0.0ZM622.12,493.77l0.5,-0.04l-0.47,0.76l-0.09,-0.17l0.05,-0.55ZM620.51,449.2l0.46,-0.36l0.78,0.14l-0.98,0.73l-0.26,-0.51ZM620.83,543.25l0.41,0.0l0.22,0.59l-0.2,-0.04l-0.43,-0.55ZM557.28,379.86l0.15,-0.29l-0.8,-1.64l0.32,-0.72l-0.52,-0.7l0.14,-1.63l-0.28,-0.79l1.62,-3.27l0.73,-0.4l-0.17,-1.12l0.38,-0.93l-0.7,-1.01l0.9,-1.76l-0.34,-2.93l0.64,-0.91l0.07,-0.51l-0.48,-0.41l0.66,-2.66l0.58,-0.82l0.01,-0.95l0.81,-1.45l3.21,-2.38l0.81,-0.18l-0.27,1.21l0.47,0.9l0.86,-0.13l0.46,-0.59l1.62,0.65l-0.12,1.04l1.28,1.55l-2.26,0.71l-0.36,0.43l0.06,0.49l3.08,2.02l-0.13,1.02l0.9,1.48l0.17,0.94l1.04,0.12l0.64,-0.27l0.75,-1.33l0.03,-0.93l1.44,-2.02l0.98,0.36l-0.03,0.63l0.9,0.63l1.73,0.6l-0.54,1.07l1.56,1.27l1.78,0.24l0.6,0.53l1.06,-0.21l3.61,0.6l0.49,0.82l0.05,0.78l1.58,1.61l3.23,1.11l1.0,1.23l0.73,0.4l0.98,0.02l0.77,0.56l2.07,-0.28l1.39,1.19l1.0,0.02l2.49,2.45l0.73,0.33l-0.11,3.14l0.74,1.11l1.12,0.87l-0.18,0.6l-3.41,1.01l-0.55,1.04l0.31,0.72l2.3,-0.03l2.91,-0.5l0.67,-0.2l0.29,-0.54l0.93,-0.02l3.84,1.4l0.56,-0.4l0.06,-0.48l-0.57,-0.69l0.31,-0.52l1.07,0.68l0.62,0.87l1.56,0.57l0.0,0.71l-1.64,-0.15l0.42,0.96l3.07,0.75l1.83,0.79l-2.79,0.49l-1.3,1.43l-2.52,1.61l-0.86,0.2l-0.59,1.12l-1.07,-0.16l-3.85,-1.82l-1.52,-0.05l-1.11,-0.98l-1.43,0.04l-1.77,-0.87l-1.87,0.05l-0.95,0.44l-1.16,-0.34l-0.59,-0.78l0.2,-0.38l1.42,-0.52l0.36,-0.75l-0.21,-1.14l-2.0,-1.17l-3.41,-0.22l-2.03,0.49l-0.28,-0.26l1.49,-1.71l0.22,-0.74l-0.9,-1.12l-0.81,0.04l-0.78,0.34l-0.47,0.7l-0.96,-0.24l-0.97,0.46l-0.56,-0.22l-1.08,0.36l-1.58,1.96l0.75,1.23l-0.41,0.93l0.28,1.28l-0.65,-0.18l-0.78,0.27l-2.32,1.6l-0.72,0.91l-0.69,-0.28l-1.39,0.07l-1.23,1.16l-0.92,2.74l-1.02,1.14l-5.02,2.48l-1.74,0.52l-1.75,0.02l-1.02,-0.65l-0.5,-1.1l-0.13,-2.83l0.43,-0.95l-0.18,-1.23l0.38,-0.79l-0.3,-1.09l-0.95,-0.51l-0.28,-1.33l-1.31,1.1l-3.99,0.88l-2.81,-0.34l-1.51,0.13l-2.33,1.64l-2.37,-0.01l-0.7,-0.73l0.32,-1.36l2.75,-3.12l7.24,-2.89l0.03,-1.46l-1.16,-1.04ZM600.79,547.39l1.5,-1.64l4.42,-0.6l2.83,0.32l3.37,3.37l1.01,2.44l-0.24,0.3l-2.84,-0.67l-2.62,-1.24l-1.92,-0.26l-4.82,-1.53l-0.69,-0.5ZM607.26,160.33l0.61,-0.18l0.2,0.01l-0.49,0.17l-0.32,-0.0ZM207.35,316.06l-0.0,-26.51l3.48,2.17l2.95,1.13l2.17,0.02l11.33,2.15l1.98,1.73l4.39,1.85l6.86,1.34l2.23,1.04l1.94,-0.23l0.38,-0.37l0.85,0.7l3.89,0.43l0.91,-0.37l1.72,0.94l2.41,0.39l0.54,-0.18l-0.02,-0.73l-1.36,-0.59l-0.09,-0.62l-2.04,-0.98l1.0,-0.02l2.91,1.02l1.17,-0.23l0.38,-0.26l-0.08,-0.29l1.52,-0.06l3.7,1.38l1.1,0.73l1.19,-0.22l1.53,0.9l1.02,1.11l2.18,0.66l1.18,1.74l2.01,0.8l0.23,0.62l0.89,0.62l0.09,0.36l-0.48,0.26l-0.08,0.44l0.24,0.46l1.37,0.34l-0.91,1.11l0.28,0.89l-1.51,-0.29l-1.17,0.37l-1.15,-0.58l-1.88,0.29l-2.03,-0.17l-1.06,-0.49l-0.59,0.17l-0.01,0.71l1.44,0.93l-0.39,0.59l-3.57,-0.58l-0.42,0.59l0.56,0.79l-0.66,1.42l0.69,0.79l-3.33,0.85l-0.36,0.65l0.4,0.72l2.34,0.3l1.91,1.38l1.38,0.19l2.66,-0.33l1.04,0.61l1.02,-0.19l1.85,1.01l1.71,-0.22l3.21,0.8l5.52,-0.25l2.75,0.64l6.38,-0.15l0.98,-0.36l0.14,-0.69l1.35,0.25l1.48,-0.33l0.43,0.92l1.06,0.17l0.44,-0.27l-0.23,-1.06l3.17,0.69l0.48,-0.35l-0.08,-0.51l0.36,0.52l0.64,0.02l1.27,-1.39l0.54,-0.19l-0.08,0.61l0.35,0.59l1.25,-0.43l0.76,0.32l1.93,-0.74l1.01,-0.97l1.58,-0.39l1.62,-1.04l0.84,0.01l0.19,-0.34l1.72,0.82l0.29,-0.15l0.07,-0.67l-0.55,-0.48l0.72,-0.25l0.79,0.5l-0.13,2.11l0.94,0.46l0.51,-0.85l0.27,0.1l0.92,0.88l-0.17,1.3l0.47,0.52l2.1,0.57l1.11,-1.08l1.14,0.52l0.57,-0.22l1.59,0.19l0.58,0.64l0.21,1.43l0.49,0.74l-0.82,0.64l0.04,0.83l1.17,1.03l0.46,0.03l0.38,0.88l0.65,0.02l0.46,-0.54l0.38,-1.36l0.11,-2.65l0.55,-0.06l0.81,1.89l0.13,1.91l0.5,0.89l0.92,-0.07l0.05,-1.2l0.27,-0.25l0.9,1.05l2.71,1.68l0.99,1.92l-0.29,0.42l0.3,0.77l-0.98,-0.36l-1.31,0.07l-0.87,0.83l-2.37,-1.15l-1.01,-0.96l-0.55,-0.11l-0.43,0.52l1.19,2.29l0.57,0.06l0.36,-0.37l1.03,1.19l1.22,0.2l0.8,0.55l-0.05,0.73l-0.88,0.15l-0.03,0.74l2.32,0.28l0.41,0.61l-0.01,1.06l0.63,1.05l0.69,0.08l0.21,-0.96l1.72,2.61l0.73,0.69l0.65,-0.06l0.69,1.34l0.69,0.38l0.96,1.25l0.75,0.21l0.52,-0.43l-0.1,-0.77l-2.23,-2.11l-0.27,-0.74l-1.04,-0.69l-0.95,-1.88l-0.59,-0.4l0.27,-0.64l-0.53,-2.43l0.45,0.7l0.63,0.32l0.11,0.65l1.83,0.57l0.31,-0.74l-0.33,-0.41l0.56,-0.63l-0.26,-0.88l1.36,1.02l0.87,1.18l0.72,0.27l0.44,-0.53l-0.62,-0.82l0.05,-0.48l-2.29,-2.42l0.94,-0.24l0.6,-0.78l-0.06,-0.66l-1.97,-0.44l-1.21,-0.97l-1.28,-2.7l0.78,-1.52l-0.04,-0.67l-0.9,-0.61l-0.86,-1.14l-2.44,-1.72l-0.01,-1.04l0.53,-1.16l2.62,-1.09l0.23,-1.12l-0.87,-0.37l0.5,-0.75l0.88,-0.29l2.18,0.33l1.98,-1.27l0.47,0.49l1.82,-0.15l0.31,-0.45l1.51,0.35l0.62,-0.89l-0.42,-1.27l0.92,0.95l0.62,-0.32l0.05,-0.79l1.16,1.26l0.64,0.12l0.79,-0.46l0.11,-0.78l-1.2,-0.63l0.59,-0.98l-0.19,-0.59l0.72,0.01l0.95,-0.69l1.25,0.47l0.74,-0.57l0.74,0.0l0.33,-0.44l0.59,0.22l0.69,-0.35l1.08,0.04l0.51,-1.57l-0.76,-0.92l1.2,-1.39l-0.3,-0.63l-0.9,0.01l-0.65,0.46l-0.82,-0.48l-0.73,-0.0l-1.2,0.39l-0.34,0.47l-4.49,1.2l-0.32,0.19l-0.14,0.75l-0.62,0.05l-0.26,0.49l0.54,0.91l0.86,0.3l-0.67,0.76l-2.02,-1.5l-0.48,0.67l-0.68,-0.18l-1.19,0.32l-1.44,1.64l-0.77,0.12l-0.7,-0.84l-1.7,-0.09l-0.69,-0.54l-1.97,0.34l-0.86,-0.22l-0.56,0.45l-0.37,1.52l1.43,0.92l-0.98,0.08l-0.52,0.49l-0.62,-0.42l-1.7,-0.01l-1.43,0.67l0.04,-1.07l-0.77,-0.67l0.03,-0.74l-0.37,-0.47l-0.68,-0.14l-1.43,0.96l-1.47,0.21l0.43,-0.48l-0.04,-0.59l1.57,-1.05l1.91,-2.84l1.08,-0.93l5.39,-0.45l3.28,-0.93l1.27,-0.02l4.0,-1.77l2.47,-0.28l1.07,-0.65l2.69,-0.81l0.81,-0.81l1.98,0.78l2.02,0.29l3.06,2.64l-0.61,0.5l-0.04,0.71l1.44,2.31l-1.46,1.09l-0.1,0.57l0.32,0.5l1.79,-0.07l-0.04,0.54l0.42,0.54l2.42,1.54l0.57,0.18l0.66,-0.27l0.58,0.8l1.17,-0.43l1.71,0.09l-0.64,1.34l0.35,0.59l0.35,0.0l0.14,0.74l0.82,0.36l0.45,0.71l1.44,0.0l0.53,-0.3l1.6,0.52l1.63,-0.4l1.13,0.42l0.99,-0.06l0.94,-0.79l0.76,0.25l0.82,-0.17l0.33,-0.41l0.01,-0.82l0.82,-0.55l0.39,0.53l-0.33,0.76l0.41,1.43l1.24,0.73l0.85,0.04l0.79,0.71l1.26,0.03l1.9,1.89l3.27,0.62l1.89,0.99l0.44,0.57l0.59,-0.2l-0.09,-0.75l0.52,-0.3l1.15,0.26l0.66,-0.49l1.59,1.22l0.53,-0.28l0.8,0.52l2.46,0.1l0.92,-0.68l0.85,0.09l0.53,-0.66l2.63,0.18l0.55,-0.2l0.36,-0.63l1.7,-0.77l0.57,0.13l0.06,0.36l0.54,0.27l1.71,-0.92l2.37,0.1l0.83,0.47l1.74,-0.09l0.96,0.37l0.7,-0.4l1.32,0.56l0.62,-0.25l0.78,0.43l0.58,-0.17l1.92,1.3l2.53,-0.08l0.82,0.39l0.46,-0.96l1.5,0.0l0.6,-0.85l0.8,0.35l2.17,-0.13l0.48,-0.32l-0.04,-0.71l-1.06,-1.13l-0.84,-0.06l-1.74,-1.25l-0.13,-1.5l1.1,-0.24l3.12,2.7l1.71,2.91l1.12,0.2l0.72,0.99l1.23,0.17l2.48,1.57l1.83,-0.31l1.06,-0.87l0.51,0.61l0.57,-0.05l0.29,-0.69l0.99,-0.14l0.27,-0.64l-1.12,-0.77l0.47,-0.4l0.1,-0.69l-1.36,-2.38l-0.59,-0.1l-0.79,0.77l-3.37,-2.54l-0.69,0.68l-1.17,0.2l-0.88,0.61l-0.75,-0.29l-0.71,0.96l-0.06,0.83l-0.97,-1.35l-1.78,-1.26l-0.28,-0.68l0.72,-0.33l0.4,-0.6l0.03,-1.2l-1.73,-0.88l-0.1,-0.63l-1.84,-1.62l1.19,0.89l1.04,-0.74l0.92,0.28l1.39,0.96l0.6,-0.4l0.68,0.07l0.37,-0.64l1.3,0.27l0.48,-0.41l-0.02,-0.38l1.17,0.37l0.44,-0.47l-0.31,-0.75l-1.33,-0.47l-0.06,-0.43l-0.98,-0.74l1.16,-0.21l1.4,0.26l0.62,1.2l1.22,0.69l0.51,-0.17l0.27,-0.56l-0.4,-0.58l-0.54,-0.12l1.23,-0.05l1.46,0.55l0.93,0.9l0.22,0.76l1.44,0.46l-0.83,0.63l-0.04,0.53l0.36,0.38l1.56,0.42l2.37,-0.72l-0.27,0.7l0.82,0.95l-0.27,0.66l-1.37,0.63l-0.41,0.56l0.1,0.72l0.6,0.41l1.12,-0.01l0.6,-0.84l0.44,0.47l1.17,-0.06l0.29,-0.16l0.04,-0.68l-0.45,-0.84l1.94,-1.07l2.4,-0.8l-0.8,1.22l0.5,0.8l-1.85,4.8l0.16,1.72l-0.26,0.64l0.42,0.84l-0.72,-1.17l-0.8,0.17l-0.06,1.58l-1.07,0.79l-0.25,1.61l0.18,0.34l0.77,-0.2l0.65,0.84l1.35,0.32l0.64,-0.22l-1.14,1.51l-0.29,1.32l0.46,0.46l0.79,-0.12l0.67,0.57l0.88,-0.35l0.71,-0.74l0.6,-0.06l1.45,-1.43l0.78,0.64l0.59,-0.31l0.2,-0.52l-0.21,0.74l-2.28,1.84l-0.34,0.59l0.43,0.58l1.6,-0.71l1.41,-0.17l0.08,1.0l0.94,0.12l-0.2,1.22l0.84,0.73l-0.1,0.36l-0.71,0.33l-1.25,0.05l-0.38,-0.67l-2.95,0.7l-0.44,-0.94l0.34,-0.45l-0.13,-0.7l-0.25,-0.07l-0.59,0.22l-0.78,0.9l-0.08,0.84l-0.2,-0.48l-1.31,0.0l0.06,-0.82l-0.52,-0.64l-1.36,-0.28l-0.82,0.87l0.64,1.35l1.08,0.48l0.59,0.83l0.93,0.44l0.51,1.13l2.45,1.19l0.67,1.44l-0.29,1.49l0.49,0.04l0.89,-1.02l1.16,-0.58l-0.22,-1.32l-0.55,-0.39l-0.39,0.24l-0.16,0.81l-1.52,-2.22l-1.72,-1.47l0.7,-0.19l1.04,0.42l0.6,-0.24l0.76,0.68l2.31,0.01l0.82,-0.47l1.23,0.52l0.73,-0.41l0.56,-1.0l0.04,-0.45l-0.73,-0.6l-0.51,-1.07l0.22,-0.57l-0.24,-0.55l0.78,-0.98l0.12,-0.72l0.62,-0.19l0.25,-0.43l-0.24,-0.49l-1.41,-0.79l-0.66,-1.95l0.75,-0.73l-0.16,-0.85l-1.5,-1.75l-2.23,-1.26l1.63,-1.21l0.2,-0.86l-0.37,-0.99l1.09,-1.2l0.25,-1.28l0.96,-0.05l-0.14,0.3l0.53,0.38l1.53,-0.89l0.87,0.65l0.78,-0.16l0.95,0.51l0.76,-0.17l2.43,-2.19l3.7,-2.02l0.08,-1.8l0.73,-0.77l5.69,-2.39l0.32,-0.82l1.54,-0.59l0.15,-0.53l-0.52,-0.18l-1.89,0.42l-0.98,-0.22l0.29,-1.68l1.15,-1.88l-0.78,-1.0l-0.04,-1.35l-1.29,-0.34l-0.72,0.2l0.16,-0.37l-0.31,-0.31l0.49,-0.35l-0.12,-0.71l-0.28,-0.08l-1.52,0.81l-0.13,1.06l-1.23,1.32l-0.07,1.37l0.75,0.31l-0.87,0.62l-1.7,0.03l-1.27,0.56l-0.99,-0.13l-0.77,-0.51l0.66,-1.52l-0.34,-1.53l0.95,0.65l0.35,-0.1l1.03,-1.48l1.65,-0.38l0.36,-0.34l-0.22,-0.76l1.62,-0.9l0.16,-0.47l-0.42,-0.27l-1.39,0.5l-1.0,0.09l-0.42,-0.28l0.59,-1.76l-0.28,-0.74l2.4,-0.7l0.83,0.0l0.62,0.37l0.54,-0.14l-0.92,1.24l0.38,1.89l0.56,0.13l2.4,-1.83l0.28,-0.52l2.15,-1.3l0.03,-0.73l-0.24,-0.12l-1.56,0.23l1.15,-1.53l-0.08,-0.52l-0.62,-0.54l-0.86,-0.4l-1.35,0.13l-1.04,0.61l-0.92,0.07l-0.47,0.89l-3.78,-0.28l-1.85,-2.01l-0.52,-1.31l-0.62,-0.21l-0.46,-0.72l-1.45,0.51l-0.2,0.41l0.27,0.88l-0.92,0.29l-1.43,-0.96l-1.13,0.08l-2.78,-1.14l-2.68,-1.87l-1.1,0.02l-0.57,-0.38l-0.71,0.42l-0.75,-0.04l-0.98,-0.98l-0.17,-1.88l-0.79,-0.45l-0.82,0.04l-2.66,-2.8l-0.42,-1.74l0.24,-1.73l0.92,-1.1l0.58,0.08l0.53,-0.35l0.18,-1.42l0.57,-0.83l0.89,0.23l0.76,-1.01l2.71,1.1l0.57,-0.5l-0.23,-0.55l-2.43,-0.87l-0.0,-0.34l0.73,-0.52l1.54,-0.68l0.15,-0.47l-0.42,-0.25l-1.01,0.15l-2.23,0.98l-0.54,0.52l-1.36,-0.65l-0.92,-1.33l-1.54,-0.87l0.04,-0.92l0.72,-1.35l0.43,-1.9l1.14,-1.25l-0.45,-0.74l0.4,-0.3l-0.12,-0.54l-0.66,-0.45l0.26,-1.04l-0.29,-0.36l1.66,-0.33l0.98,-1.66l1.73,-0.19l3.19,2.26l1.52,-0.04l0.39,-1.2l0.94,-0.66l-1.04,-0.93l0.11,-0.28l1.54,-1.47l-0.43,-0.29l-1.35,0.42l-2.89,-0.42l-0.73,-0.59l0.27,-0.39l-0.23,-0.3l1.64,-0.32l2.2,-1.6l2.23,-0.04l0.39,-0.39l-0.21,-0.69l0.44,-0.87l1.41,-0.35l3.97,0.16l0.23,1.29l0.39,0.44l0.89,-0.37l0.4,-0.71l0.62,0.12l-0.26,2.03l0.36,0.46l0.46,-0.12l1.75,-2.23l0.32,0.47l0.74,-0.0l0.49,-0.39l0.94,0.65l2.06,-0.41l0.07,0.64l-1.0,0.88l-0.02,0.58l1.99,1.5l2.22,0.84l0.65,0.64l1.21,0.47l0.77,1.66l1.59,0.49l0.54,2.48l0.7,1.01l-0.28,1.52l0.24,0.59l-0.47,2.03l0.24,1.21l-1.29,-0.63l-0.4,0.53l0.19,0.46l1.04,0.9l1.42,0.21l1.04,0.54l-0.29,0.68l0.68,1.14l2.47,0.22l1.03,0.52l-0.32,0.52l1.04,1.31l-0.35,0.27l0.19,0.71l1.24,0.33l0.25,0.67l0.61,0.16l0.56,0.7l-0.1,0.57l-0.87,0.43l0.43,0.54l0.59,-0.02l0.31,0.63l0.62,0.16l0.44,-0.8l0.75,-0.2l-0.46,-0.88l0.46,0.36l0.8,-0.15l-0.28,0.64l0.32,1.74l0.54,0.38l0.49,-0.35l0.74,0.58l-4.38,0.44l-1.12,-0.88l-0.91,-0.18l-0.89,-1.33l-0.9,0.32l-0.39,0.31l0.46,0.56l-1.26,0.13l-0.4,0.4l0.61,0.52l-0.38,0.63l-1.05,0.36l0.01,0.73l1.5,0.56l0.33,-0.44l1.18,-0.37l1.91,0.1l1.2,0.71l-0.92,0.25l-1.86,1.54l-0.37,0.4l0.12,0.27l-2.69,1.01l-0.24,0.84l-0.38,-0.38l-0.52,0.03l-0.36,0.66l-2.24,1.28l-0.32,0.39l0.27,0.51l2.69,0.38l0.87,-0.55l1.86,-0.01l2.8,2.3l3.1,1.21l1.36,-1.21l1.28,-0.53l0.16,-0.72l1.23,-0.75l1.67,0.45l-1.1,0.86l-2.24,0.57l0.04,0.79l2.46,-0.05l1.52,-0.69l0.83,0.87l1.98,-0.27l0.34,0.7l1.4,0.0l0.69,-0.88l2.27,0.78l-1.05,0.41l-0.43,-0.42l-1.0,-0.05l-0.4,0.51l0.48,0.4l-1.28,0.75l-0.3,0.61l-0.0,1.32l-0.69,-0.9l-0.49,0.09l0.49,-0.56l-0.41,-0.52l-2.35,1.23l-2.47,-1.18l-0.59,0.47l0.78,0.83l2.17,0.95l4.16,2.94l0.9,0.33l-0.46,1.01l0.16,0.46l0.88,0.26l0.17,0.36l-0.33,0.62l0.36,0.45l1.27,0.31l-1.31,1.03l0.2,0.66l0.59,0.05l-0.18,0.76l0.42,0.63l-0.58,0.97l0.29,0.82l-0.21,0.67l0.44,0.47l-0.16,0.46l-0.85,0.59l-0.14,0.58l0.32,0.4l1.88,0.75l-0.65,0.33l-0.19,0.5l0.47,0.25l1.14,-0.23l-0.01,0.65l0.68,1.23l1.02,0.15l0.95,-0.56l-0.18,-1.09l1.48,-1.06l0.06,-1.01l0.61,-0.15l0.72,-0.78l0.47,-1.33l-0.92,-0.31l-0.32,-0.64l1.13,-1.29l-0.12,0.79l0.35,0.55l0.53,-0.13l0.45,-0.61l0.28,-3.03l-0.6,-1.86l0.19,-1.18l0.45,-0.74l2.36,-1.98l1.05,-1.65l1.2,-0.44l1.45,0.17l0.71,0.45l1.05,1.7l1.25,1.06l4.89,2.73l2.24,2.12l0.9,1.99l-0.15,1.75l1.45,3.32l0.02,1.15l-0.43,1.1l-0.68,0.6l-0.66,-0.44l-1.41,-0.14l0.07,-1.85l-0.38,-0.54l-0.47,0.02l-0.99,1.18l-0.91,0.4l-0.29,0.81l0.79,1.13l0.42,1.47l-0.98,1.54l0.07,1.05l0.97,2.94l1.13,1.23l0.34,1.28l0.78,0.73l1.31,0.48l2.89,2.98l1.85,1.3l0.12,1.35l0.46,0.34l-1.06,0.96l-0.06,1.1l0.47,0.47l1.35,-1.05l0.5,1.24l0.71,-0.0l0.39,-1.48l0.57,-0.63l0.14,0.68l0.69,0.07l0.49,-1.1l0.95,-0.15l-0.25,-1.17l0.99,-1.4l0.8,-0.18l0.86,0.73l1.29,0.46l1.07,-0.66l-0.22,-1.11l0.53,-0.46l-0.06,-1.64l0.34,-0.9l-0.67,-1.42l1.67,-2.52l1.65,-1.27l0.68,-1.02l2.25,-1.5l-0.1,-1.04l0.51,-0.45l-0.24,-0.86l0.54,-0.03l0.42,-0.53l-0.5,-0.62l0.32,-0.62l-0.11,-0.61l1.41,-2.09l-0.14,-0.72l-0.37,-0.08l-0.1,-2.48l0.72,-1.67l1.28,0.04l0.74,-0.72l0.6,0.7l1.48,0.26l0.44,-0.26l0.04,-0.41l0.66,0.19l1.6,-0.24l1.82,0.47l0.68,-0.97l-0.77,-1.18l-0.48,-0.2l-1.49,0.2l-0.64,-0.17l0.74,-0.43l-0.05,-1.12l2.05,0.26l0.12,-0.92l-0.7,-0.41l0.3,-0.33l2.2,0.6l0.98,-0.66l-0.21,-0.58l-2.0,-0.35l-0.42,-0.79l-1.6,0.11l-0.63,-1.65l-2.17,0.03l-0.55,-0.45l-0.98,-0.08l-1.09,-1.22l1.29,-0.16l-0.12,-0.72l-1.0,-0.42l-0.02,-0.52l0.54,-0.1l0.63,-1.01l-0.83,-0.63l-1.06,0.29l0.12,-0.86l0.43,-0.48l0.95,-0.15l-0.1,-0.47l-1.4,-1.34l0.87,-0.53l0.04,-0.9l1.07,-0.6l-0.06,-0.9l1.23,0.78l1.3,0.33l0.45,-0.54l1.52,-0.23l0.41,-0.54l0.59,0.2l4.22,-0.37l0.49,0.45l1.2,0.14l1.5,1.14l2.84,0.94l2.64,0.45l1.6,0.1l0.95,-0.47l2.28,0.47l1.29,-0.22l2.14,0.22l0.81,-0.32l-0.79,0.84l0.16,0.47l-0.85,0.1l-0.35,0.4l0.36,0.39l1.28,0.13l0.52,0.48l-6.78,-1.05l-0.85,0.6l0.48,0.56l8.86,1.83l0.09,0.61l1.73,1.1l-0.35,0.15l-0.56,1.22l0.5,0.47l2.58,-0.2l0.35,-0.51l2.32,0.17l2.64,1.15l1.3,0.1l0.24,0.96l-1.52,0.68l-0.82,1.16l-1.07,0.05l-0.6,0.9l-2.85,0.82l-0.61,0.41l-0.14,0.49l0.45,0.23l2.3,-0.57l1.22,0.07l1.52,1.35l0.77,-0.61l0.75,-0.14l1.26,1.4l-0.14,2.12l-3.64,2.17l-1.55,-0.38l-0.47,1.17l-1.2,0.61l-0.92,-1.33l-2.07,-0.57l-0.46,0.52l0.8,0.87l-1.88,-0.3l-1.51,-0.92l-0.77,0.11l-0.32,0.84l0.85,0.56l-0.6,-0.1l-0.39,0.52l0.38,0.88l1.28,0.01l1.12,0.8l-1.05,0.08l-0.18,0.66l0.35,0.37l1.26,0.6l0.77,-0.32l-0.83,1.71l0.56,0.75l1.24,0.41l0.66,-0.12l-0.74,1.88l0.96,2.01l2.55,1.73l0.21,0.5l1.25,0.71l0.62,0.85l1.89,1.03l2.03,2.61l-0.71,1.33l-1.06,4.78l-0.76,0.62l-0.05,0.82l-0.93,-0.19l-0.9,0.59l-1.19,-0.42l-1.49,0.44l-0.95,1.0l0.05,0.51l-0.65,0.71l0.01,0.42l-0.82,0.81l-0.11,0.9l-1.85,-0.06l-0.19,0.54l-0.73,0.27l-0.94,0.95l-0.42,0.89l-2.3,-0.07l-1.75,0.33l-0.42,1.13l-3.25,2.2l-1.13,-0.14l-0.14,-0.62l-1.61,-2.11l-1.68,-0.35l-0.6,-0.81l-0.55,0.03l-0.22,-1.25l0.52,1.03l0.47,-0.08l0.48,-0.79l-0.33,-0.8l-0.62,-0.3l0.7,-1.27l-0.41,-1.42l-0.71,0.1l-0.22,0.93l-0.92,0.49l-0.75,1.26l-1.24,-0.29l0.22,-0.2l-0.16,-0.73l0.57,-0.51l-1.77,-1.04l-0.01,-0.85l0.45,-0.49l-0.32,-0.35l-4.44,-0.94l-1.27,-0.55l-0.57,0.46l0.56,1.08l-3.09,0.91l-0.25,1.4l1.16,0.76l1.97,-0.47l1.0,-1.41l0.75,-0.11l0.17,0.21l-0.32,0.32l0.96,0.53l-0.26,0.73l0.43,0.36l2.62,0.81l-0.51,0.28l-0.04,0.71l1.41,0.7l1.51,-0.17l-0.62,1.44l3.26,2.82l0.27,1.86l0.83,0.42l0.34,0.82l-1.59,0.15l-1.56,-0.85l-0.33,-0.78l-0.65,-0.39l-1.6,0.73l-0.49,-1.27l-1.33,-0.84l-1.34,1.1l-0.13,0.5l2.5,2.44l-1.66,-0.78l-1.79,-0.22l-0.9,-0.7l-1.24,0.2l-1.25,-1.24l-0.52,0.04l-0.22,0.75l-0.51,0.23l-0.54,-1.61l-0.16,-1.81l-0.93,-1.44l-0.76,-0.33l-3.46,1.23l-1.16,-0.24l-2.29,0.23l-1.3,-0.3l-0.7,-0.61l-0.51,0.14l-0.32,0.51l-1.87,-0.67l-0.39,0.79l-0.92,-0.34l-0.73,0.15l-0.17,0.63l0.5,0.57l-0.67,0.14l-0.12,0.53l2.01,2.36l2.98,0.5l4.46,1.62l-0.91,0.93l-0.21,1.19l-1.88,0.64l-0.33,0.85l-2.14,0.64l-0.84,1.82l0.32,0.94l-0.77,0.97l-1.35,0.46l-1.41,1.43l-1.64,0.44l-0.41,0.76l-0.51,0.07l-0.5,0.56l0.14,0.88l-2.57,1.1l-5.44,-0.06l-1.28,-0.4l-1.5,-0.8l-1.09,-1.34l-1.44,-1.09l-2.16,-0.78l2.35,0.34l0.44,-0.29l-0.14,-0.57l-7.13,-1.65l-0.47,-0.78l-1.49,-0.61l-1.1,-0.93l-0.95,-0.02l-0.41,-0.56l-1.64,-0.78l-2.78,-0.15l-0.81,0.55l0.26,0.37l2.33,0.88l0.12,0.43l-2.63,-1.14l-1.52,0.31l0.02,-0.6l-0.51,-0.32l-1.74,0.36l-7.88,-0.71l-1.45,-0.47l-2.0,0.53l0.03,0.71l4.75,2.33l0.59,-0.13l0.13,-0.63l-0.94,-1.22l5.4,0.77l5.72,1.44l2.2,1.08l1.27,1.31l1.39,0.67l0.77,1.74l2.15,1.06l0.52,0.98l1.0,0.9l1.18,-0.18l0.66,0.35l8.19,0.91l1.4,-0.34l1.88,0.34l0.91,-0.55l1.43,0.54l1.53,-0.11l2.95,0.55l0.03,0.49l1.01,0.69l-0.51,0.73l0.14,0.63l-1.2,0.75l0.14,0.7l-0.77,0.35l-0.81,1.03l-0.68,1.83l-0.88,0.58l-0.42,-0.39l-0.69,0.36l-0.28,0.62l0.18,1.1l-0.59,0.97l-2.32,0.83l-0.78,2.72l-1.63,1.57l-0.16,0.48l0.33,0.59l-0.77,0.72l-1.08,-0.07l-2.63,1.5l-0.63,0.02l-0.4,0.47l-0.76,0.13l-0.6,0.63l-1.62,-0.56l-0.74,0.22l-1.65,-0.96l-0.64,-1.24l-0.84,-0.49l-0.53,0.5l0.12,0.6l1.38,1.96l-0.57,-0.56l-0.71,-0.02l-0.56,-0.48l-0.81,0.13l-1.02,-0.83l-0.42,0.06l-0.25,0.61l-0.73,-0.6l-0.6,0.09l-0.37,-0.3l0.61,-0.26l0.11,-0.38l-0.16,-1.29l-0.48,-0.63l-0.54,0.01l-1.07,1.26l-2.24,0.6l-0.29,0.36l0.25,0.39l1.02,0.51l0.63,-0.37l0.05,0.71l0.43,0.26l-0.18,0.61l-0.61,-0.25l-0.86,0.44l-0.97,-0.78l-1.01,0.11l-0.28,0.38l3.17,3.2l-1.55,0.34l0.52,0.67l-0.99,1.44l-0.95,-0.29l-0.61,0.5l-0.72,0.02l-0.38,-0.79l-1.85,-0.61l-0.76,0.7l-0.03,0.71l0.72,0.21l0.6,-0.27l0.1,0.24l-3.29,0.61l-2.34,-1.07l-0.88,0.04l-1.29,-1.05l-1.48,-0.51l-1.36,0.15l-0.06,-0.51l-0.52,-0.43l-0.82,0.49l-1.46,-0.02l0.61,-0.45l-0.32,-0.51l-1.32,-0.15l-0.73,1.07l-2.91,-0.45l-1.23,-0.79l-2.27,-0.49l-0.67,-0.68l-1.31,-0.06l-0.45,-0.55l-1.14,0.07l-0.88,-0.61l-2.89,-0.81l-1.6,-1.19l-0.19,-1.04l-1.93,-0.49l-0.06,0.67l0.86,0.69l0.2,0.85l0.85,0.86l-1.52,0.1l-0.37,0.55l0.31,0.81l0.4,-0.04l0.71,1.27l2.97,1.07l1.68,-0.43l0.3,-0.5l-0.4,-0.4l-1.18,-0.29l-0.65,-0.94l2.86,1.51l3.45,0.8l1.37,0.78l1.62,-0.5l0.71,1.11l1.56,0.01l0.47,0.32l-0.25,0.72l-0.87,-0.3l-0.85,0.99l-1.65,0.68l0.09,0.64l0.95,0.48l1.64,-0.63l0.79,0.42l0.49,-0.35l0.2,-0.95l3.83,-1.5l1.39,0.88l0.27,1.1l1.95,0.87l-0.03,0.49l0.39,0.32l2.24,-0.09l1.03,0.66l0.76,-0.24l-0.09,0.46l0.41,0.55l2.08,0.66l-0.16,0.5l0.57,1.34l-0.39,0.8l0.37,0.37l0.15,1.44l-0.76,0.78l-0.17,0.71l-2.47,-0.1l-1.75,0.89l-0.31,0.6l-0.78,0.42l-1.13,0.14l-0.05,0.53l-7.01,-1.42l-0.45,0.45l0.08,0.61l-1.65,-0.55l-1.22,0.23l-0.52,0.53l0.07,0.58l1.81,1.6l0.0,0.36l3.43,0.52l0.49,0.17l-0.07,0.4l-0.55,0.59l-1.32,-0.22l-0.17,-0.8l-0.73,-0.18l-0.9,0.22l-0.07,0.4l-1.0,0.47l-0.32,-0.06l-0.26,-0.82l-0.64,0.16l-0.99,-0.61l-0.45,0.55l0.7,1.21l-0.11,0.71l-1.36,0.07l-0.28,0.6l0.09,0.98l-0.92,0.15l0.01,0.61l-4.04,-0.86l-0.49,0.22l0.18,0.51l0.67,0.37l3.8,1.45l0.02,0.45l-0.6,-0.41l-1.09,0.01l-0.36,0.46l-0.67,0.01l-0.71,1.01l0.68,0.65l-0.07,0.36l-0.8,0.05l-0.04,0.7l-1.14,-0.87l-0.34,-0.01l-0.19,0.42l-0.57,-0.1l-0.47,0.51l0.92,0.73l-0.57,0.52l-2.04,-0.48l-0.26,0.65l0.44,0.44l-0.47,0.62l0.16,0.46l1.62,0.46l-0.2,1.01l0.43,0.47l-0.87,0.17l-2.54,1.86l-0.84,0.09l-1.44,1.63l0.28,1.5l1.05,0.2l0.09,0.37l-0.77,0.23l-1.65,-0.42l-0.36,0.63l0.98,1.28l-0.81,0.77l0.33,1.18l-0.86,0.67l-0.97,2.24l-1.13,0.74l-0.61,1.51l0.09,0.63l-0.94,1.17l-0.19,1.34l-1.56,-0.17l-1.39,1.22l0.32,0.38l1.01,0.25l0.55,1.01l-0.97,1.93l0.31,0.99l-0.37,0.71l0.15,0.76l-0.52,0.33l-0.35,0.84l-72.64,0.0l0.15,-63.77l-0.34,-2.76l-71.13,-9.07l-2.41,-0.54l-2.96,-1.43l-11.77,-9.88l-18.74,-0.12l-41.6,-21.12l-41.4,-21.48ZM488.63,414.14l0.1,-0.03l0.14,-0.0l-0.12,0.09l-0.13,-0.06ZM490.75,410.6l0.66,0.01l0.98,0.32l0.12,0.26l-0.2,0.28l-0.66,-0.71l-0.9,-0.16ZM520.18,384.17l0.6,0.16l0.05,0.29l-0.62,-0.04l-0.04,-0.41ZM582.9,346.89l0.28,0.21l-0.23,0.09l-0.06,-0.3ZM452.38,312.9l-0.1,-0.46l0.69,-0.63l-0.06,0.53l-0.54,0.56ZM275.0,309.68l0.04,-0.05l-0.0,0.01l-0.04,0.04ZM338.85,334.52l-0.02,-0.16l-0.0,-0.23l0.12,0.12l-0.1,0.27ZM340.29,334.47l0.19,-0.48l-0.23,-0.72l0.54,1.28l-0.49,-0.08ZM337.53,315.79l0.05,-0.64l0.05,-0.15l0.23,0.14l-0.33,0.65ZM366.87,311.57l-0.02,-0.28l0.41,0.04l-0.24,0.09l-0.16,0.15ZM367.29,311.31l0.26,-0.13l0.28,-0.29l-0.0,0.2l-0.54,0.21ZM433.04,314.35l-0.27,-0.35l0.25,-0.53l0.14,0.14l-0.12,0.74ZM480.48,292.73l0.22,-0.11l-0.09,0.07l-0.13,0.04ZM480.89,292.48l0.61,-0.77l0.56,-0.24l-0.41,0.55l-0.76,0.46ZM453.84,259.7l-0.26,0.53l-0.44,-0.4l0.5,-0.32l0.21,0.19ZM472.63,246.02l-0.41,-0.53l-1.39,0.6l-4.51,-0.25l0.33,-1.08l6.35,-0.92l0.51,0.73l0.61,0.24l-1.03,0.49l0.55,0.57l-0.99,0.16ZM600.08,313.89l0.09,-0.38l0.24,-0.29l-0.14,0.59l-0.19,0.08ZM603.05,291.36l-0.36,0.61l-0.35,-0.05l-0.11,-0.44l0.82,-0.12ZM604.08,291.56l1.39,0.13l0.05,0.41l-1.19,-0.12l-0.26,-0.42ZM583.71,413.0l-0.14,-2.02l-1.91,-1.77l-0.2,-0.62l2.11,-1.51l1.6,-1.89l0.39,-2.12l1.03,-1.14l0.98,-0.49l0.67,0.22l0.9,0.96l0.8,0.18l3.82,-1.64l2.89,0.25l1.54,-1.03l3.44,0.74l-0.68,1.16l0.02,2.09l-1.8,1.29l-2.14,0.84l-0.9,1.51l-1.88,1.12l-1.32,1.39l-3.14,1.88l-0.43,0.1l-0.52,-0.7l-1.15,-0.45l-1.54,0.25l-2.46,1.41ZM598.69,309.99l0.26,0.0l0.23,0.08l-0.49,-0.08l0.0,-0.0ZM593.04,284.37l1.11,-0.14l1.18,0.53l-0.26,0.14l-2.02,-0.53ZM588.04,345.33l0.47,0.33l0.25,0.53l-0.64,-0.21l-0.07,-0.65ZM588.89,346.24l0.57,-0.03l0.53,0.42l0.61,-0.08l-0.26,0.41l-0.4,0.0l-1.06,-0.71ZM576.01,349.25l0.04,-0.6l3.42,1.33l0.59,-0.09l0.18,0.55l2.58,1.28l0.43,0.87l-1.0,0.73l-0.07,0.49l-1.44,0.81l-0.48,-0.32l-0.7,0.06l0.22,-0.64l-0.21,-1.4l-0.75,-1.33l-1.22,-0.76l-0.98,-0.1l-0.61,-0.87ZM584.01,354.96l0.8,0.24l0.01,0.33l-0.18,-0.3l-1.04,0.69l-0.66,-0.13l1.08,-0.82ZM584.96,355.76l0.35,0.12l2.37,-0.22l-0.08,0.58l-0.71,0.43l-0.76,-0.56l-1.22,-0.1l0.06,-0.24ZM585.25,353.25l0.71,0.0l-0.2,0.23l-0.51,-0.23ZM583.12,285.22l-1.13,-0.52l-0.19,-0.45l1.86,0.18l-0.51,0.25l-0.03,0.54ZM579.77,153.63l1.02,0.45l-0.27,0.39l-0.81,-0.36l0.07,-0.48ZM568.83,351.53l0.04,-0.6l0.41,-0.34l0.82,0.34l0.67,-0.12l0.35,0.41l-0.02,0.65l1.22,1.05l1.62,3.17l0.2,0.62l-0.93,0.99l-0.97,-0.32l-0.5,-1.5l-1.73,-0.78l-0.54,-0.62l-0.64,-2.95ZM566.21,130.75l0.8,-0.34l2.91,0.11l0.72,1.07l0.85,0.3l-2.47,0.54l0.18,-0.7l-0.36,-0.44l-1.04,-0.46l-1.59,-0.09ZM450.61,73.71l0.5,-0.9l3.35,0.15l3.57,1.62l8.65,0.88l3.27,-0.26l4.24,1.45l0.67,-0.13l0.16,-0.66l-0.43,-0.43l-3.32,-1.83l1.92,-1.01l4.59,-0.51l0.22,-0.7l-0.2,-0.17l-3.9,-0.53l-1.22,-0.48l-1.34,0.95l-2.58,1.02l-4.33,0.35l-2.12,-0.96l3.43,-0.42l0.64,-0.6l-0.05,-0.61l-0.32,-0.23l-1.48,0.47l-1.66,0.0l-0.79,-0.45l-2.67,1.09l-0.73,-0.02l-3.52,-1.38l-1.78,-0.25l0.52,-0.63l0.04,-0.56l2.02,0.4l0.3,-0.17l-0.08,-0.78l1.16,-0.25l1.4,-0.04l1.34,0.49l1.5,-0.02l2.36,0.65l0.43,-0.56l-0.58,-1.23l-2.16,-0.4l-1.13,-1.12l-2.01,-0.53l0.57,-0.29l0.6,-0.9l-0.92,-0.65l6.7,-0.06l3.15,-0.38l4.12,1.13l3.0,-0.26l2.91,0.3l0.66,0.75l1.63,-0.18l0.32,-0.39l-0.2,-0.52l-2.24,-1.29l-3.9,-0.66l-1.52,0.28l-1.14,-1.04l0.24,-0.25l5.45,-0.33l0.35,-0.27l-0.11,-0.43l-0.56,-0.49l-1.73,-0.01l-0.65,-0.59l-1.95,0.54l-3.97,-0.79l0.88,-0.47l-0.01,-0.64l-0.55,-0.31l-2.61,0.53l-3.51,-0.32l3.08,-0.67l0.59,-0.38l0.15,-0.44l-0.37,-0.28l-2.62,-0.06l1.4,-0.77l0.72,-1.59l3.12,-1.04l3.34,0.7l0.32,0.23l0.06,1.03l0.86,0.35l0.96,-0.25l0.87,-0.92l0.81,0.26l0.99,-0.57l1.47,0.16l0.7,-0.73l-0.17,-0.48l-0.62,-0.37l-2.13,-0.18l-0.04,-0.04l3.43,-0.14l3.32,0.82l0.5,-0.46l3.09,-0.2l0.49,-0.54l-0.0,-0.77l0.4,-0.58l-0.22,-0.68l-1.08,-0.46l0.1,-0.27l-0.36,-0.29l-3.68,-0.23l-3.47,0.35l-2.45,-0.32l-1.94,-0.69l1.22,-0.97l0.07,-0.9l0.38,-0.1l5.14,0.63l0.93,0.82l0.5,-0.02l0.89,-0.7l-0.08,-0.68l-0.55,-0.54l2.51,0.3l10.36,2.82l3.96,2.17l-0.24,0.44l0.44,0.78l-0.75,-0.03l-0.42,0.4l0.24,0.53l2.06,0.92l1.66,1.28l-0.0,0.64l0.52,0.69l1.35,0.71l1.02,1.36l0.89,0.4l0.28,1.25l0.52,0.53l3.91,1.13l0.87,1.0l-1.44,1.08l-0.16,0.42l0.52,0.71l2.13,-0.1l5.28,0.73l2.3,1.77l0.77,-0.11l0.22,-0.47l-0.62,-0.97l1.38,0.04l0.27,-0.25l2.69,0.13l2.23,1.33l-1.74,1.28l0.2,0.62l1.3,-0.11l-0.16,1.07l-1.19,0.52l-0.26,0.43l0.3,0.84l2.1,2.0l5.15,2.24l1.32,-0.08l0.34,-0.19l0.08,-0.62l2.36,0.98l0.49,-0.53l-1.55,-1.33l0.37,-0.39l-0.04,-0.49l-0.56,-0.59l-2.21,-0.32l-0.93,-0.52l-0.64,-0.82l0.42,-0.96l-0.31,-0.71l0.25,-0.43l1.55,-0.9l7.63,0.63l0.65,1.62l0.37,3.06l-0.72,0.42l-3.51,0.53l-0.58,0.39l0.02,0.65l1.89,1.6l1.94,-0.47l4.54,0.2l0.67,1.32l1.31,0.97l-1.76,0.46l-0.9,1.06l-1.61,0.47l-0.36,0.58l0.36,0.57l1.62,-0.17l3.29,-1.62l-0.98,2.26l0.06,1.37l-0.76,1.89l-2.76,1.32l-0.37,0.49l-0.05,1.34l1.32,0.68l0.8,-0.07l0.87,-0.63l0.58,-0.95l1.47,-0.51l1.27,0.2l0.1,0.99l0.46,0.08l1.15,-0.49l0.39,-0.53l-0.76,-1.02l0.26,-0.15l3.95,-0.11l2.32,1.54l-0.9,0.8l0.74,0.87l-0.89,0.4l0.01,0.6l1.31,0.64l0.81,-0.18l1.3,-1.61l0.28,-1.95l0.55,-0.4l0.68,-0.01l1.14,0.73l0.27,0.86l1.14,1.17l0.44,0.97l1.4,1.22l1.96,0.93l1.3,1.46l-2.55,0.64l-1.16,0.91l-2.03,0.62l-10.12,2.21l-0.75,0.52l-0.45,1.63l-1.19,0.31l-1.34,-1.18l-0.48,-1.04l-0.61,-0.09l-0.4,0.51l-0.15,1.51l0.51,1.56l-0.72,0.74l-2.84,1.53l-2.23,2.61l-0.12,0.51l-0.78,0.44l-2.13,-1.26l-1.03,-2.17l0.43,-2.1l-0.26,-1.08l1.69,-0.85l-0.02,-0.78l0.89,-1.12l-0.25,-0.51l-1.1,0.11l-1.2,1.55l-2.53,0.33l-0.66,1.26l0.29,1.18l-0.42,2.23l0.9,2.45l-1.73,0.21l-0.37,0.34l0.11,0.66l3.39,0.06l0.99,1.1l-0.02,0.66l-1.16,1.43l-1.64,0.3l-2.95,-2.62l-0.32,-0.59l-2.25,-0.21l-0.66,0.25l0.42,1.94l2.09,2.69l-1.33,1.98l-0.63,2.31l-0.6,0.92l-1.99,-0.33l-1.91,-1.7l-1.14,-1.76l-3.12,-2.16l-1.41,-1.44l-1.56,-2.32l-0.77,-0.29l-1.18,0.62l-0.2,1.05l0.46,1.27l0.84,1.55l2.01,1.02l3.14,4.65l-0.9,-0.09l-0.28,-0.92l-0.57,-0.46l-2.39,-0.06l-0.19,-0.84l-1.96,-1.34l-2.09,-0.28l-2.15,0.29l-1.64,-0.27l-0.73,0.33l-0.04,0.65l0.61,0.45l3.23,0.41l-0.01,1.08l0.82,0.82l-0.42,0.46l-5.31,0.0l-3.06,-0.68l-4.19,-0.33l-2.55,-1.15l-1.39,0.27l-0.45,0.42l-1.3,-0.84l-0.23,-0.63l0.24,-0.74l-0.45,-0.38l-3.04,0.34l-0.76,-0.35l-0.33,-0.73l-2.57,-0.95l-0.7,-0.59l-0.17,-0.62l0.76,-0.26l3.1,0.28l1.0,-0.61l6.27,-0.64l1.89,0.44l0.59,-0.61l-0.42,-0.96l-0.99,0.11l-9.2,-1.15l-1.76,-0.59l-1.34,0.36l-0.38,0.4l-2.89,0.22l-1.26,-0.78l0.72,-0.39l-0.26,-0.84l-1.78,0.16l-2.09,-1.58l1.61,-0.06l4.05,1.03l1.11,-0.03l0.56,-0.44l-0.12,-0.89l-5.28,-1.63l-3.26,0.1l-0.8,-1.04l-3.09,-1.86l3.24,-1.04l3.32,-0.32l1.53,-1.49l0.39,-0.82l0.83,-0.25l4.87,0.58l1.06,-0.44l4.64,0.27l4.17,-0.24l5.15,-0.71l8.72,-0.59l1.57,-0.52l0.34,-0.62l-0.22,-0.19l-0.7,-0.37l-6.35,0.21l-10.62,1.03l-5.4,-0.88l0.6,-0.69l6.56,0.18l2.65,-0.76l4.98,-0.43l0.56,-0.33l0.17,-0.62l-0.18,-0.68l-0.43,-0.1l-6.05,0.72l-0.86,0.47l-6.55,-0.53l2.56,-0.71l0.31,-0.58l-0.2,-0.39l-0.76,-0.4l-3.25,0.16l-2.48,0.86l-0.6,-0.06l-1.19,-1.39l-0.63,-0.25l-0.76,0.24l-0.22,0.61l1.29,1.58l-2.19,0.61l0.65,-0.74l0.09,-0.68l-0.43,-0.67l-0.88,-0.13l-1.18,0.93l-0.78,1.26l-1.62,-0.14l-0.28,0.51l0.16,0.72l-2.46,1.1l-1.93,-0.45l-0.02,-0.5l1.36,-0.86l1.55,-0.4l0.4,-0.57l-0.43,-0.4l-2.5,0.16l-3.9,-0.79l-0.59,0.2l0.18,1.56l-0.33,0.19l-4.34,1.15l-0.4,0.5l-1.61,-0.28l0.31,-1.47l-1.06,-0.27l-0.37,-1.09l-0.91,0.0l-0.58,0.56l-2.66,-0.59l0.37,-0.18l0.1,-0.62l-0.53,-0.52l0.24,-0.42l-0.15,-0.63l0.85,-0.34l9.11,-1.23l4.08,-1.9l-0.07,-1.12l0.59,-0.81l-0.17,-0.58l-1.1,-0.34l-0.53,0.75l-1.5,0.21l-0.59,0.75l-1.52,0.68l-4.22,0.78l-6.52,-0.11l-2.75,-1.89l-1.02,-0.14l-0.28,-1.24l-1.44,-0.8l0.06,-0.52l0.84,-0.4l1.77,-0.24l0.04,-0.68l-0.91,-0.58l-3.46,-0.33l-0.79,-1.09l2.43,-0.46l0.32,-0.42l-0.38,-0.37l-2.74,0.11l-0.95,-0.72ZM453.99,78.51l-1.26,0.42l-0.22,-0.43l1.43,-0.22l0.05,0.24ZM550.86,317.89l0.85,-0.66l0.24,-0.81l-0.26,-0.77l-1.19,-0.54l0.04,-0.42l0.67,-0.44l0.09,-1.06l1.46,-1.58l0.53,-0.29l0.74,0.3l1.46,1.22l-0.23,1.8l0.64,2.73l-0.38,1.55l-0.53,0.9l-1.34,0.87l-2.12,-1.27l-0.65,-1.52ZM547.17,278.98l1.85,-0.24l0.06,-0.39l0.71,0.51l2.02,0.51l1.66,-0.49l0.38,0.13l0.9,1.54l-2.54,0.24l-2.29,-0.81l-0.91,0.46l-1.52,-0.65l-0.31,-0.81ZM537.69,112.53l0.09,-0.82l1.0,-0.37l-0.19,0.6l-0.89,0.59ZM537.76,113.51l-0.82,1.47l-0.87,0.27l0.11,-1.02l1.58,-0.72ZM519.51,153.4l-1.93,-0.83l-0.66,-1.09l-3.04,-2.96l-0.02,-0.74l2.23,-0.93l3.34,-0.38l1.27,0.56l1.43,1.18l0.02,0.79l-1.21,0.51l-0.54,1.29l0.4,1.61l0.88,0.7l-0.41,0.13l-1.31,-0.56l-0.45,0.72ZM507.5,130.36l0.19,-0.61l1.02,-0.06l1.68,-0.77l5.75,0.6l5.25,3.04l0.41,0.4l0.09,1.98l0.68,0.49l-1.3,1.12l-2.91,1.35l-0.73,-0.17l-1.92,0.29l-0.19,-0.72l-5.4,-1.57l-2.52,-1.85l0.24,-1.02l-0.35,-2.53ZM517.06,296.93l0.25,-0.08l0.12,0.11l-0.29,0.08l-0.08,-0.11ZM514.59,292.49l0.03,-0.27l1.68,-0.87l0.39,0.7l0.69,0.12l-0.65,0.48l-0.39,1.02l-0.52,0.15l-0.27,-0.74l-0.96,-0.58ZM461.73,224.22l0.49,-0.72l-0.33,-0.96l0.22,-0.33l1.35,-0.24l-0.01,-0.65l-0.52,-0.51l-0.08,-0.76l0.28,-0.44l-0.69,-1.81l0.24,-0.99l-0.8,-1.61l0.39,-0.5l-0.12,-1.6l0.92,0.2l0.22,-0.63l-1.53,-1.22l0.23,-1.21l2.12,-0.82l0.53,0.42l0.9,-0.26l2.62,1.92l2.22,0.43l1.95,-0.13l0.24,-0.69l-0.64,-0.58l-1.74,-0.23l-2.35,-1.76l1.14,-0.28l0.3,-0.39l-0.28,-0.53l-1.14,-0.4l-0.94,0.56l-1.22,-0.81l-0.22,-0.52l0.15,-0.93l0.45,-0.49l3.97,-0.95l1.28,-0.84l2.61,0.06l0.95,-0.69l4.46,-0.15l0.84,0.98l0.89,0.27l0.57,-0.28l-0.01,-1.46l4.35,-0.27l2.54,0.71l2.21,0.2l0.6,0.94l1.04,-0.34l2.11,0.78l1.28,1.06l-0.52,0.73l0.38,0.59l2.07,-0.15l0.39,-0.21l0.14,-0.62l2.6,-0.68l0.52,0.21l2.01,-0.32l5.83,0.53l6.53,1.78l0.44,-0.2l0.7,0.23l-0.24,0.47l-0.62,-0.48l-0.78,0.46l-0.01,1.4l-1.36,1.81l-2.71,2.68l-2.1,0.04l-0.16,0.61l0.62,0.88l-0.99,0.81l-0.67,1.23l-0.79,0.53l-0.81,1.56l-3.73,0.72l-0.18,0.42l0.34,0.31l2.08,0.28l-4.58,6.48l-1.58,0.97l-0.77,0.94l-2.73,0.64l-8.38,-1.45l-1.01,-0.63l-1.05,0.46l-7.57,0.45l-1.38,-0.17l-0.59,0.39l-0.26,1.0l0.66,0.64l0.87,-0.38l2.04,0.47l1.46,0.05l0.43,-0.25l-0.27,0.95l0.19,0.45l1.92,0.85l0.64,0.63l0.89,1.78l-0.8,0.45l-0.68,1.21l-1.96,0.85l-2.25,3.16l-0.52,1.55l-1.14,0.18l-0.47,0.63l0.1,0.31l-0.88,-0.42l-4.19,0.21l-3.17,0.74l-0.45,-0.42l-0.49,0.06l0.08,-0.71l0.9,-0.58l0.04,-0.52l2.83,-0.55l0.32,-0.38l-0.31,-0.4l-0.68,-0.13l-2.65,0.5l-0.57,-0.61l0.4,-3.07l-0.65,-1.27l0.81,-0.14l0.0,-0.98l-0.81,-1.32l-0.97,-0.24l-0.05,-1.22l-0.52,-0.63l-1.11,-0.93l-1.06,-0.18l0.75,-0.32l-0.57,-1.36l-1.01,-0.25l0.42,-2.03l-0.69,-1.64ZM477.47,243.35l0.13,-0.07l0.09,0.09l-0.03,0.04l-0.19,-0.07ZM513.15,293.86l-0.33,-0.3l0.23,-1.13l1.06,1.41l-0.09,0.7l-0.51,0.13l-0.36,-0.81ZM512.3,392.33l0.08,0.02l-0.07,-0.0l-0.01,-0.01ZM502.54,284.47l0.97,-0.44l0.54,0.62l-0.47,0.53l-1.04,-0.7ZM487.69,417.33l0.44,-0.11l0.38,0.46l-0.36,0.27l-0.46,-0.61ZM455.73,129.06l0.34,-1.21l3.35,-1.18l2.77,-0.34l1.21,-0.75l0.51,0.32l0.07,0.83l0.79,0.4l0.69,-0.48l0.53,0.35l1.68,-0.29l1.33,-0.7l5.67,0.36l0.2,0.32l3.08,-0.25l1.43,0.72l1.1,-0.04l0.52,-0.61l1.61,-0.27l3.59,1.0l0.88,0.99l-1.68,0.18l-0.73,0.41l-0.35,0.53l0.11,0.55l-0.98,0.91l0.04,1.43l-0.56,0.58l-2.64,-0.38l-0.87,0.38l-0.49,-0.41l-1.23,0.19l-2.43,-0.58l-16.78,-0.03l-2.88,-2.26l0.13,-0.68ZM452.52,183.2l1.3,-2.27l0.77,0.18l0.21,-0.85l3.74,-0.57l0.08,-0.62l0.8,-0.24l0.05,-0.7l-1.12,-0.19l0.33,-0.49l0.35,0.26l1.37,-0.44l0.34,-0.56l1.05,-0.4l-0.17,-0.85l-1.24,-0.39l0.28,-0.56l3.3,-1.39l0.6,0.35l0.4,-0.15l0.51,-0.85l1.48,0.21l2.54,-1.05l4.96,0.81l4.06,3.34l2.04,1.33l1.08,0.26l0.07,0.22l-1.03,0.04l-0.41,0.4l0.37,0.54l1.28,0.09l1.38,0.57l-0.66,0.74l-0.06,0.52l1.11,1.35l-0.41,0.86l-1.29,0.67l0.11,0.62l1.11,-0.07l0.83,1.25l0.23,1.54l-0.34,2.33l-1.26,0.55l0.35,0.43l0.74,0.18l-1.2,0.87l-5.83,0.35l-1.08,-0.42l-1.72,0.56l-2.49,-0.05l-1.02,-1.03l-0.64,-0.04l-0.61,0.39l-1.09,-0.27l0.23,-0.57l-0.18,-0.45l-2.68,-1.54l-3.37,-0.16l-1.07,-0.66l-0.46,0.47l-0.59,-0.04l-0.35,-0.63l-0.76,-0.13l-1.41,-0.94l0.56,-0.07l0.34,-0.48l-0.54,-0.75l0.29,-0.6l-0.44,-0.45l-0.98,0.1l-0.93,2.16l-0.92,0.05l-0.05,-0.58l0.6,-0.44l-0.27,-0.87l-2.46,0.05l-0.09,-0.87ZM459.2,176.01l-0.45,-0.08l0.36,0.04l0.09,0.04ZM473.27,164.45l0.33,0.33l0.4,1.98l1.2,1.62l-3.23,0.34l-0.72,-0.26l-0.63,-0.79l-0.03,-1.47l-0.77,-0.84l3.46,-0.91ZM434.96,109.58l2.27,-0.02l0.78,-0.64l-0.4,-1.05l-1.05,-0.58l-0.71,-0.03l-0.27,-0.55l-0.64,-0.33l-0.14,-2.35l1.65,-0.79l6.92,0.47l1.1,0.53l3.81,0.86l0.79,0.72l1.93,0.37l1.13,-0.16l2.78,1.6l1.11,-0.18l-0.93,1.58l0.27,0.52l3.73,1.07l2.24,-0.84l2.29,0.31l3.45,1.25l2.42,1.3l0.22,0.35l-0.28,0.28l-5.38,2.3l0.08,0.66l0.71,0.37l2.13,0.46l0.31,0.67l1.69,1.0l-0.06,0.73l-1.74,2.02l-2.72,-0.24l-0.82,0.59l-2.44,0.41l-1.13,0.52l-5.51,0.85l-0.35,-0.74l-1.12,-0.18l-1.34,0.61l-0.95,0.01l-0.32,0.22l0.12,0.75l-1.27,0.91l-1.86,-0.35l-0.08,-0.92l1.08,-1.04l-0.26,-0.6l-3.47,-0.74l-0.99,-0.76l-2.24,-0.69l0.07,-0.77l7.1,0.32l1.13,-0.74l-0.17,-1.22l-5.49,-1.74l-1.52,0.12l-2.13,-0.31l0.02,-0.48l-0.73,-0.63l-1.88,-0.68l0.16,-0.6l-0.58,-0.65l0.28,-0.18l-0.09,-0.69l-1.87,-0.39l-1.4,-0.8l-0.27,-0.76l0.81,-0.33ZM449.67,125.62l0.01,0.01l-0.02,-0.0l0.01,-0.0ZM458.12,59.97l5.43,-0.32l3.16,0.17l0.85,0.27l0.41,0.57l-1.47,0.42l-2.88,-0.38l-1.6,-0.66l-3.9,-0.06ZM423.52,300.2l-0.42,-1.19l-1.05,-0.81l1.15,-1.54l1.05,0.04l0.47,-0.39l2.9,0.29l1.08,-0.73l1.36,0.01l0.85,-0.5l0.5,-1.67l0.85,0.42l0.61,-0.53l0.97,-0.04l0.38,-0.31l-0.13,-1.08l-1.96,-1.58l1.13,0.15l0.61,-0.26l-0.08,-0.72l-1.5,-0.64l0.06,-0.51l1.58,0.21l0.97,1.24l1.51,0.61l0.53,0.74l1.25,-0.5l-0.08,-0.62l-1.53,-0.92l-0.93,-1.24l-0.92,-0.51l0.61,-2.33l0.58,-0.65l1.06,-0.27l0.94,-1.3l0.67,-0.13l2.0,0.69l0.47,0.88l2.07,0.61l0.51,0.76l-0.82,0.37l-0.09,0.54l1.11,1.41l0.79,-0.13l0.54,-1.45l0.41,0.15l1.43,1.8l1.99,1.55l1.1,0.1l0.78,0.69l1.73,0.44l3.16,2.01l0.35,0.6l-0.69,1.57l0.19,2.34l1.05,0.67l0.75,-0.38l-0.3,-2.38l0.49,-0.62l0.94,1.85l-0.4,1.06l1.23,1.32l0.32,1.73l0.43,0.2l0.99,-0.2l0.34,0.73l0.56,0.24l0.85,-0.13l1.98,-1.15l0.94,0.51l-0.4,0.63l-2.1,1.58l-0.68,-0.86l-2.4,0.32l-0.78,1.38l-0.05,0.74l-1.14,-0.18l-0.85,0.84l-0.93,0.36l-1.42,1.44l-2.05,0.49l-4.15,-1.36l-1.61,-1.11l-0.55,-0.06l-0.37,0.61l0.34,0.58l-0.28,0.13l-2.17,-0.57l-0.8,0.21l-3.13,-2.13l-2.7,-0.77l-0.75,0.42l-1.45,-1.17l0.4,-0.87l-0.21,-0.53l-1.27,-0.63l-1.0,0.29l-0.05,1.59l-0.45,0.04l-0.71,-0.79l-1.36,0.04l-1.32,-0.68l0.61,-1.25l-0.83,-0.7l-1.38,-0.29l-0.51,0.68l-1.0,-0.06l-0.18,0.61l0.49,0.56l-0.81,0.33l-2.25,-1.02ZM464.32,246.95l0.55,-0.18l0.42,-0.01l-0.32,0.65l-0.1,-0.38l-0.56,-0.08ZM464.79,247.97l-0.01,0.09l-0.11,0.01l0.07,-0.05l0.05,-0.05ZM460.78,193.21l0.61,-0.92l1.27,-0.17l1.25,0.49l1.48,1.44l-0.49,0.23l-3.6,-0.71l-0.51,-0.35ZM458.56,290.09l0.51,-0.44l0.34,-1.41l0.76,-0.12l0.36,-0.44l0.58,0.06l0.37,0.41l0.52,-0.12l2.25,1.57l-0.33,1.84l-0.65,0.32l-0.34,0.6l-1.43,0.15l-0.04,-0.51l0.56,-0.3l0.1,-0.47l-0.32,-1.02l0.16,-0.82l-0.61,-0.95l-0.67,-0.27l-0.92,0.15l-0.23,0.46l0.47,1.53l-0.84,1.85l-0.43,-0.12l0.31,-1.2l-0.5,-0.74ZM460.41,227.01l0.33,0.35l-0.01,0.27l-0.43,-0.55l0.11,-0.07ZM448.23,174.93l-0.03,-0.53l2.81,-1.12l0.57,0.2l1.01,-0.39l-0.35,0.85l0.36,0.9l-1.78,0.65l0.11,0.76l-1.22,0.41l-0.73,-0.41l-0.75,-1.31ZM454.42,172.18l0.14,-0.81l2.17,0.96l0.86,-0.04l1.08,0.65l-1.12,0.41l-0.06,0.4l-1.28,0.91l-1.78,-1.16l0.53,-0.82l-0.52,-0.51ZM452.05,289.04l2.22,-0.04l0.74,0.56l1.45,-0.55l0.37,1.26l-0.44,1.62l-0.71,-0.24l-1.2,-1.39l-1.49,-0.41l-0.93,-0.81ZM389.88,228.59l0.02,-0.63l1.46,-1.77l0.37,-1.63l0.68,-0.72l2.24,-0.79l1.38,-0.12l1.0,0.09l0.19,0.44l1.76,0.85l-0.26,0.8l0.91,0.91l1.11,0.68l0.89,0.05l0.7,1.6l0.65,0.4l-0.25,0.32l0.31,0.38l0.79,0.52l2.03,0.26l0.82,0.4l2.07,-0.11l0.83,-0.65l-0.05,-0.43l1.98,-0.1l1.74,0.34l1.32,-1.16l-0.03,-1.44l2.61,-0.44l0.43,-1.29l-0.4,-0.76l-0.45,-0.18l-0.34,-1.4l-0.96,-1.03l-0.07,-0.71l-1.64,0.0l-1.05,0.9l-0.8,-0.97l1.04,-0.53l0.07,-0.74l0.68,-0.78l0.85,-0.03l0.74,0.77l2.28,1.06l2.15,-0.17l0.43,-0.31l-0.12,-0.71l-1.61,-0.08l-1.17,-0.55l-2.38,-2.44l-1.24,-0.62l-0.27,-0.71l-1.49,-0.87l0.58,-1.33l-0.5,-1.06l-0.75,0.03l-0.67,-0.5l-0.79,0.35l-0.69,-0.18l0.19,-0.56l-0.39,-0.48l-1.45,-0.15l0.23,-0.41l-0.27,-0.34l0.53,-0.5l-0.26,-0.54l0.19,-0.12l1.01,-0.31l1.44,0.21l0.83,-0.72l2.11,0.19l3.33,1.3l0.54,0.72l0.54,-0.06l0.65,-1.55l0.77,-0.33l0.43,-0.75l0.3,0.04l0.41,0.42l2.18,0.39l0.58,0.59l0.62,0.1l1.63,1.06l-0.31,0.35l0.32,0.61l0.61,0.13l0.65,-0.43l0.16,-0.82l2.57,-0.18l0.69,0.48l0.63,-0.59l2.05,-0.54l4.41,-0.47l1.5,-0.76l0.71,-0.96l0.24,-0.06l-0.01,0.75l0.6,0.21l2.18,-0.68l1.21,0.57l2.54,0.3l1.22,1.48l1.04,0.57l0.13,0.65l-0.4,0.98l-1.72,0.69l-0.49,0.63l-2.16,-0.58l-0.45,0.33l0.1,0.89l-1.7,-0.32l-0.55,1.24l0.1,0.69l0.74,0.47l1.78,-0.84l0.58,0.52l1.26,-0.02l-0.13,0.69l0.78,0.41l-0.17,0.49l-0.83,-0.26l-4.63,1.23l-6.24,5.1l-1.62,0.62l-0.21,0.26l0.69,1.51l-0.07,1.41l0.57,0.5l0.48,-0.26l0.18,-0.76l1.24,-1.33l2.67,-1.2l3.15,0.15l3.93,1.38l-0.19,0.97l-1.24,0.14l-0.36,0.53l0.37,0.4l1.81,0.31l0.65,1.12l0.73,0.04l0.36,0.56l-1.37,0.95l-0.22,1.2l0.21,0.53l1.55,0.03l1.48,-1.21l3.03,-0.89l-0.02,0.42l1.24,0.95l0.38,1.34l-0.18,0.34l0.43,0.54l0.27,-0.06l0.63,1.69l-0.66,0.06l-0.69,0.8l-2.0,0.94l-2.06,-0.16l-0.38,0.28l0.51,0.7l2.36,0.8l-0.06,0.39l0.68,0.31l0.39,2.12l-3.5,0.77l-0.32,0.34l0.47,0.54l1.93,0.43l1.4,-0.38l-0.29,0.84l-0.9,-0.15l-1.58,1.12l0.75,0.71l1.99,-0.58l-0.79,1.49l-0.52,0.21l0.14,-0.56l-0.95,-0.34l-1.02,0.76l-1.33,0.12l-1.47,2.08l-1.07,0.57l-2.45,0.91l-2.13,-0.02l-0.88,-0.52l-2.05,-0.29l-1.8,0.25l-0.9,-0.33l-0.89,-0.89l0.31,-1.26l1.0,-1.19l0.1,-0.62l-0.91,-0.62l-0.41,0.12l-0.19,0.66l-1.93,2.06l-0.2,1.26l0.95,0.3l0.3,1.0l3.04,2.31l-1.29,1.74l-1.05,0.45l-2.13,1.67l-1.28,-0.09l-0.5,0.42l-0.77,-0.37l-1.59,-1.64l-0.73,-0.02l-0.83,0.58l-0.94,0.11l-0.85,-2.29l-0.69,-0.88l0.22,-0.68l-0.22,-0.48l-1.87,-0.72l-0.62,-1.58l-0.57,-0.39l-0.06,-0.7l-1.36,-0.84l-0.44,-0.98l-1.92,-0.26l-0.64,-0.4l-0.32,-0.61l-1.33,-0.79l-1.41,-1.54l-0.13,-0.91l-0.69,-0.11l-0.08,-0.57l-0.63,-0.2l-0.88,-0.93l-2.67,-0.46l-0.8,0.56l-0.38,-0.62l0.21,-0.45l-0.31,-0.72l-1.09,-0.39l-0.93,-0.77l-1.67,0.61l-0.64,0.79l-1.52,-0.92l-1.81,0.05l-0.77,-0.72l0.74,-0.18l0.27,-0.59l-0.49,-0.53l-0.83,-0.0l-0.33,-1.3l-2.15,-1.1l-0.61,0.03l-1.98,-0.83l-2.6,-1.85l-0.67,-0.69l-0.23,-0.88ZM413.2,216.61l-0.07,0.92l-4.31,1.19l-1.41,-0.59l-0.38,-0.64l-2.41,-0.62l-0.25,-0.77l-1.28,-0.36l-1.06,-0.78l1.05,-1.18l1.7,-0.13l0.41,-0.86l3.0,0.06l1.25,1.03l1.19,1.66l1.05,0.22l0.75,0.79l0.78,0.05ZM413.8,225.93l-0.22,-0.23l0.1,-0.08l0.22,0.11l-0.1,0.2ZM418.43,206.49l-1.82,1.04l-1.36,-0.14l-0.23,-0.36l1.61,-0.9l2.22,0.04l-0.43,0.32ZM452.48,229.5l0.02,-0.02l0.0,-0.01l0.01,0.02l-0.03,0.02ZM450.19,222.24l0.57,0.21l0.68,-0.35l0.55,0.69l0.03,0.56l-0.61,1.17l-1.2,0.67l-1.68,0.05l-1.1,-1.01l-0.36,-1.67l0.8,-1.0l1.69,-0.69l0.86,0.28l-0.32,0.45l0.09,0.64ZM450.47,229.19l-1.87,-0.45l0.55,-0.4l0.06,-0.71l1.57,-0.98l-0.14,1.16l0.6,0.55l-0.77,0.83ZM444.08,282.19l-0.53,-0.07l-0.06,-0.35l0.74,0.07l-0.16,0.35ZM440.48,194.73l1.46,-0.85l1.27,-1.44l1.0,-0.06l0.76,0.39l-0.97,1.24l-1.0,0.08l-1.53,0.92l-0.98,-0.28ZM388.77,171.82l0.03,-0.01l0.06,0.04l-0.09,-0.03ZM389.8,172.21l0.91,0.02l0.36,-0.59l-0.4,-0.86l1.13,-0.19l0.26,-0.7l2.5,0.09l1.5,0.55l1.09,-0.15l0.31,-0.53l-1.67,-0.94l0.6,-0.27l0.1,-0.66l-0.28,-0.25l-2.33,0.21l0.72,-0.99l4.19,-0.72l0.54,0.68l2.85,1.18l0.1,0.81l0.29,0.2l1.89,0.44l1.44,-0.79l1.59,-0.14l0.95,-0.56l0.16,-0.47l-0.42,-0.26l-3.89,0.73l0.06,-0.6l-0.62,-0.87l-1.55,-0.22l-0.36,-0.86l2.49,-1.49l0.29,-0.4l-0.33,-0.6l-4.1,0.64l-1.12,-0.65l-0.55,-1.0l0.31,-0.63l1.17,-1.02l1.94,-0.52l1.7,-0.94l0.18,-0.48l-0.45,-0.26l-4.01,0.72l-0.68,-0.22l-2.01,0.15l0.31,-2.0l0.93,-0.39l-0.05,-0.63l-0.66,-0.29l1.93,-0.85l3.88,0.43l3.16,1.93l-0.5,1.37l0.18,0.74l1.82,0.31l2.31,1.15l0.5,0.58l-0.73,0.43l-0.11,0.48l0.43,0.23l0.71,-0.12l0.35,0.42l2.62,0.32l2.17,2.25l-0.13,0.82l0.24,0.13l1.32,-0.21l0.15,0.7l0.54,0.29l1.05,-0.7l1.42,-0.2l1.56,-0.93l1.36,-0.24l-0.02,-0.72l-0.76,-0.26l-3.56,0.78l0.07,-0.55l-0.92,-0.37l-0.61,-1.07l-0.6,-0.1l-0.55,-1.27l0.59,-0.32l3.69,0.75l2.51,-0.62l0.58,-0.77l-0.44,-0.25l-2.77,0.46l-2.93,-1.32l-1.85,0.28l-2.97,-0.86l0.23,-0.29l5.43,0.13l0.74,-0.23l0.25,-0.41l-1.04,-0.47l-0.02,-0.59l-0.32,-0.16l-1.11,0.01l-0.69,-0.43l0.15,-0.51l-0.42,-0.23l-0.97,0.28l-0.86,-0.4l-3.47,0.16l-2.73,-1.95l2.24,-0.48l0.76,-1.02l3.74,-1.41l4.19,0.83l1.61,-0.57l-0.26,0.37l0.34,0.37l1.56,0.22l2.61,1.9l0.17,1.05l0.93,0.74l1.01,0.27l0.45,-0.53l-0.47,-0.61l0.86,-0.28l0.33,0.55l0.6,0.21l0.55,-0.04l0.37,-0.4l-0.36,-1.12l-1.57,-1.35l0.19,-0.82l1.4,-0.23l0.46,0.65l0.7,0.14l0.43,-0.61l1.73,-0.16l0.5,-0.8l0.12,0.53l0.42,0.25l-0.21,0.39l0.6,0.7l1.9,0.5l0.4,-0.18l0.62,0.45l2.79,0.38l0.91,0.41l0.23,1.03l-0.68,0.72l-0.5,1.33l0.15,0.58l0.4,0.16l0.38,0.91l1.52,0.92l0.41,1.15l-0.82,1.3l-0.14,1.13l-0.61,1.2l0.12,0.99l0.72,1.36l-0.88,1.11l-2.7,1.14l0.08,0.7l5.54,1.24l-0.36,0.83l-0.16,2.44l-3.0,-1.73l-0.44,0.49l-0.75,0.09l-0.18,0.61l-0.67,0.02l-0.35,0.48l-0.75,0.22l-0.31,0.84l0.52,0.56l-0.46,0.33l0.07,0.47l-0.99,0.62l-0.1,0.92l0.81,0.96l0.9,-0.04l0.89,0.56l0.45,-0.22l0.87,0.61l-0.35,0.47l0.23,0.53l1.0,0.14l0.55,0.58l-1.43,0.23l-1.85,-0.86l-0.19,-1.18l-0.98,-0.26l-0.9,1.32l0.05,0.42l0.64,0.74l1.21,0.53l0.15,1.23l-7.53,0.58l-0.03,-0.43l-0.84,-0.06l-0.2,-0.94l-0.64,-0.14l-1.01,0.54l0.1,0.67l-3.66,0.34l0.01,-0.55l1.04,-1.51l-0.17,-0.56l-0.73,-0.17l-1.91,1.97l-0.06,0.86l-1.24,0.25l-7.1,-0.87l-0.06,-1.71l-0.3,-0.54l0.19,-0.3l-1.28,-0.83l0.73,-0.22l4.02,0.11l0.53,-0.25l0.03,-0.66l-2.84,-0.57l0.28,-0.45l-0.41,-0.61l-2.5,0.43l-0.85,-0.42l1.83,-0.69l-0.05,-0.68l-0.91,-0.51l4.92,-0.37l1.02,-1.22l-0.76,-0.39l1.66,-0.15l0.35,-0.31l-0.25,-0.46l1.24,-0.21l0.59,-0.55l-0.3,-0.67l-1.1,-0.07l8.4,-0.57l0.83,-0.41l0.07,-0.5l-0.33,-0.37l-6.42,0.49l-0.37,-0.28l-6.79,0.66l-0.6,0.31l-2.78,0.03l-8.05,1.41l-0.34,-0.44l-0.75,-0.08l-6.2,1.23l-3.46,0.16l-2.26,0.82l-0.11,-0.43l-0.66,-0.38l-0.21,-0.79ZM443.41,174.23l0.16,0.78l0.35,0.6l-0.5,-0.29l-0.01,-1.1ZM439.84,174.22l0.2,0.35l-0.01,0.11l-0.16,-0.27l-0.03,-0.19ZM433.29,149.97l-0.04,-0.05l0.06,0.02l-0.02,0.03ZM442.87,322.46l0.13,-0.43l0.61,-0.05l0.65,-0.62l0.01,0.35l-1.41,0.74ZM428.09,205.05l1.29,-0.21l0.91,-0.52l2.35,-0.02l3.58,-1.27l4.43,-0.46l0.44,0.51l-1.48,1.61l-1.99,0.76l-1.31,1.17l-4.92,0.83l-0.54,-0.48l-0.52,-0.01l-0.44,0.83l-0.8,-0.75l-3.85,0.02l-1.46,-0.52l2.97,-0.71l1.16,0.09l0.26,-0.14l-0.08,-0.75ZM416.22,77.71l0.31,-1.1l-0.51,-1.56l1.13,-1.1l2.7,-1.2l1.94,0.18l1.57,0.73l3.11,-0.52l2.24,1.08l-0.04,0.59l0.88,0.77l0.54,1.05l-0.46,1.56l0.84,0.94l0.39,1.49l-1.45,2.45l-0.15,-0.66l-0.92,-0.61l-3.45,-0.73l0.22,-1.01l-0.22,-0.9l-2.95,-1.32l-5.01,0.44l-0.69,-0.56ZM427.57,315.65l0.08,-0.05l-0.02,0.2l-0.02,-0.05l-0.05,-0.09ZM360.88,96.36l-0.24,-1.3l0.63,-1.43l1.38,-1.15l-0.29,-0.87l2.71,0.75l14.46,-1.43l3.55,1.39l0.95,-0.17l1.56,0.39l1.21,1.09l0.58,0.13l0.49,1.45l0.67,0.16l0.78,0.92l1.2,0.5l-0.45,2.01l-0.69,0.32l-0.45,0.68l0.25,0.57l0.48,0.13l1.2,-0.24l-0.42,0.79l0.65,0.87l0.93,-0.1l1.42,-1.39l0.28,-0.65l-0.29,-1.0l2.74,-0.64l1.96,-1.04l2.44,0.21l3.57,2.34l1.41,0.43l0.63,-0.29l0.76,0.39l-1.93,2.26l-0.09,0.55l0.4,0.48l1.62,0.12l0.35,0.49l0.97,0.17l1.57,-0.62l1.66,0.02l0.9,-0.53l1.4,-0.02l0.16,0.65l0.6,0.49l2.91,0.83l0.64,0.53l-1.22,0.65l-0.3,0.42l0.18,0.6l1.41,0.35l1.08,-0.31l0.57,0.7l2.01,0.11l-1.04,0.69l0.25,0.46l-0.52,0.83l-1.38,0.45l-0.56,0.52l0.11,0.63l0.69,0.35l0.34,0.6l-0.42,1.88l0.61,0.42l2.15,0.06l1.05,1.67l1.42,0.63l3.21,2.59l-0.06,0.87l-1.24,0.71l-0.11,0.52l0.6,1.32l-1.17,0.77l-6.17,0.52l-1.36,0.79l-1.66,-0.66l-1.76,-0.11l-3.07,-0.92l-0.14,-0.71l-1.7,-1.6l-0.43,-0.8l-0.03,-0.4l0.74,-0.49l-0.17,-0.8l-2.34,-1.13l-0.17,-1.02l-0.54,-0.56l-2.28,0.38l-2.32,-1.14l-6.74,-1.12l-4.37,0.97l-1.88,-0.8l-0.0,-0.38l1.23,-0.72l-0.03,-0.71l-1.0,-0.41l-9.37,1.33l-2.54,1.02l-0.35,0.68l-5.09,-0.68l-3.43,-1.82l-1.74,-1.71l-0.45,-1.08l0.16,-0.26l1.88,-1.09l1.64,-0.11l6.09,1.39l3.24,-0.07l2.04,0.51l1.01,-0.78l-0.02,-0.99l0.78,-0.29l-0.3,-1.28l-0.57,-0.22l-5.33,0.1l0.63,-0.28l4.28,-0.06l0.32,-0.63l-0.28,-0.41l1.73,-0.25l0.21,-0.94l-1.34,-1.09l-1.04,-0.02l-0.51,0.52l-1.01,-0.13l0.03,-0.53l-0.62,-0.34l-0.75,0.22l-0.86,-0.31l-0.36,0.2l-0.17,0.7l-0.6,0.28l-1.6,-0.44l3.31,-1.66l0.4,-0.83l-0.5,-0.58l-1.65,-0.63l-0.52,-0.94l-1.9,-0.31l-0.5,0.2l-0.31,0.57l-0.98,-0.12l-0.6,0.3l-1.28,2.11l-2.07,1.22l-1.46,0.19l-0.31,-0.39l1.4,-1.06l1.95,-2.67l-0.25,-0.96l-2.91,-0.68l-4.5,0.91l-1.58,-0.39l-0.05,-1.31ZM416.16,296.78l0.57,0.3l0.49,0.99l-0.09,1.23l-1.09,-0.4l-0.65,-0.73l0.07,-0.79l0.7,-0.59ZM415.96,310.85l0.25,-0.13l0.01,0.28l-0.15,-0.06l-0.11,-0.1ZM411.57,300.42l0.44,-0.69l-0.3,-0.84l0.42,-0.53l1.17,0.19l0.51,0.27l0.36,0.82l1.3,0.76l-0.44,1.03l0.18,0.44l-0.32,0.53l-0.85,0.15l-0.6,0.78l-0.31,-0.29l0.22,-0.51l-0.36,-0.58l-0.76,-0.04l-0.71,0.5l0.03,-2.0ZM411.08,268.76l0.69,0.16l0.61,-0.32l1.2,0.81l-0.35,0.8l0.85,0.62l0.18,0.59l-1.32,-0.23l-1.8,-0.93l-0.06,-1.5ZM401.76,151.3l1.25,-0.55l2.53,-0.32l0.6,-0.59l0.95,-0.22l0.69,-0.87l3.36,-0.5l2.55,0.29l-9.8,3.12l-2.13,-0.35ZM409.21,275.24l0.07,-0.18l0.09,0.0l-0.11,0.24l-0.05,-0.06ZM246.03,287.84l0.22,-0.22l1.84,0.14l0.41,-0.18l-0.01,-0.45l-5.09,-4.61l0.15,-1.48l42.43,0.01l0.01,2.61l0.47,0.44l2.28,-0.02l0.4,-0.38l1.6,0.06l0.73,-0.39l0.21,-0.68l-0.46,-0.48l-0.54,-0.06l-0.0,-1.11l25.05,0.0l0.4,-0.4l-0.04,-45.56l1.74,0.52l0.45,-0.74l-0.56,-0.46l0.41,-0.27l0.06,-0.59l-1.26,-1.07l-0.84,-1.23l0.0,-0.75l1.52,0.48l0.35,-0.34l-0.11,-0.53l0.55,-0.22l-0.35,-0.72l-1.96,-0.45l-0.0,-3.66l0.42,0.13l0.42,0.86l1.43,-0.13l-0.41,0.37l0.11,0.61l3.42,1.9l0.37,0.64l2.16,-0.26l0.02,0.74l1.42,0.79l-0.35,0.83l0.19,1.33l2.3,0.03l0.22,-0.46l1.55,0.51l0.33,0.94l-0.39,0.6l-0.34,2.16l1.31,3.05l-0.05,0.85l0.18,0.44l1.19,0.42l-0.12,2.16l0.41,0.49l0.71,-0.01l-0.25,0.37l0.27,0.68l1.08,-0.56l-0.96,1.33l0.46,0.71l-0.34,0.95l0.91,0.73l-0.29,0.1l-0.1,0.71l0.82,0.37l1.23,-0.22l0.78,1.58l1.53,0.5l1.08,-0.19l0.44,-0.52l-0.09,-0.49l-1.01,-0.74l0.12,-0.38l1.14,0.43l1.36,-1.33l3.0,-0.53l0.2,-0.7l-1.17,-0.55l0.89,-0.28l0.36,-0.47l-0.12,-0.55l-1.46,-0.52l-0.27,-0.91l-1.87,-0.68l-0.3,-0.66l0.38,-0.5l-0.2,-0.76l-1.4,-0.52l-0.11,-0.39l-0.2,-1.64l0.76,-0.32l0.09,-0.55l-0.33,-0.65l-0.61,-0.35l-0.01,-0.72l-0.49,-0.37l0.72,-0.64l-0.32,-0.6l-1.24,-0.34l0.67,-0.59l-0.03,-1.0l-0.96,-0.86l0.02,-0.58l-0.49,-0.4l0.1,-0.67l-0.63,-0.81l0.05,-0.95l-0.73,-1.39l0.36,-0.66l-0.62,-0.79l0.22,-0.88l-0.51,-0.61l0.25,-0.76l-1.26,-1.29l1.03,-1.01l2.84,0.32l0.41,-0.19l-0.41,-0.9l-2.11,-1.01l-0.01,-0.34l0.69,0.03l0.27,-0.74l1.89,0.47l1.36,-0.03l2.04,0.75l2.9,1.83l1.15,0.35l0.93,-0.52l-0.01,-0.52l-0.85,-0.7l0.2,-0.47l2.12,-0.38l1.53,1.57l1.15,0.32l0.58,-0.26l0.93,1.37l1.33,0.75l0.39,0.54l2.44,0.81l1.51,-0.2l0.17,0.9l1.88,1.05l-0.02,0.33l0.92,0.84l-0.2,0.34l1.14,0.61l0.63,0.79l-0.77,-0.32l-0.41,0.77l0.62,0.69l0.04,0.86l1.43,0.7l-0.42,0.81l0.19,0.85l0.87,0.85l-0.03,0.69l-0.5,0.16l-0.1,0.62l3.37,4.92l-0.74,1.22l0.37,1.3l0.61,0.17l0.6,1.02l0.77,2.71l1.5,0.75l2.97,4.4l-0.38,1.39l0.76,0.82l-0.15,0.78l0.37,0.73l-1.03,-0.17l-0.79,0.63l-0.1,0.61l0.54,1.34l-0.14,0.5l-1.9,1.7l0.59,1.3l3.04,1.97l1.01,0.31l0.88,0.94l1.21,2.65l1.58,0.35l1.92,1.45l0.95,1.14l2.95,0.23l1.51,1.53l1.93,0.31l0.74,-0.67l4.68,1.91l1.51,0.89l0.72,0.8l0.73,-0.08l2.05,1.36l1.03,-0.0l0.54,-0.75l0.79,-0.05l0.56,0.41l-0.39,0.68l0.09,0.96l0.66,1.05l0.69,0.45l1.45,-0.31l0.51,-0.77l1.22,0.63l1.12,-0.47l0.39,-0.61l0.4,0.16l0.27,0.37l-0.17,1.21l0.61,1.11l-0.25,1.77l0.73,0.73l0.15,1.36l-0.17,0.62l-0.59,0.55l0.25,0.55l-0.26,0.48l-0.97,0.04l-0.91,-0.51l-1.15,0.36l-1.13,-1.55l-0.33,-0.99l0.42,-1.24l-0.64,-0.54l-0.62,0.5l-0.99,2.73l-0.68,0.87l-1.67,-1.16l-0.76,0.17l-0.73,-0.96l-0.2,-0.95l-0.54,-0.22l-0.81,0.4l-0.14,-1.14l-0.93,-0.42l-0.5,0.49l0.06,0.69l-0.7,0.26l-0.86,0.94l-0.67,0.02l-0.83,0.75l-0.8,-0.44l-0.45,0.25l-0.01,0.65l0.68,0.76l1.15,0.5l-0.06,1.21l-0.43,0.62l-2.14,0.2l-3.52,-1.37l-1.39,-1.38l-0.88,0.15l-0.66,-0.5l-0.84,0.29l-0.42,1.58l0.31,0.53l2.78,1.11l0.86,1.94l0.82,-0.03l0.26,-0.79l0.22,0.91l-0.39,0.82l-0.01,1.92l-1.42,0.73l-0.41,0.53l-0.05,1.22l0.4,0.57l0.57,0.09l0.36,-0.28l0.25,-0.77l0.87,-0.62l2.07,-3.16l2.95,-0.57l0.74,-1.12l1.65,-0.39l2.16,0.29l0.92,0.86l-0.68,0.63l-0.82,-0.11l-0.7,0.34l-0.13,0.87l0.28,0.3l-0.82,0.47l0.22,1.21l1.07,0.77l0.68,0.09l0.6,-0.97l0.76,-0.4l1.35,1.05l0.0,0.89l-0.93,1.3l0.36,0.87l-1.05,0.29l-1.06,-0.57l-1.05,0.87l-1.41,0.21l-1.07,-0.23l-0.16,0.87l-1.01,0.71l-0.96,-0.01l-1.23,-0.6l-0.45,0.23l-0.11,0.47l0.29,0.5l-2.0,0.59l-2.04,-0.78l-1.9,0.28l-0.54,0.78l-1.51,-0.84l-0.67,0.21l-3.38,-0.84l-1.39,0.13l-1.06,-0.5l-0.32,-0.87l-0.52,-0.21l-0.57,0.45l-1.38,-0.3l-0.85,1.17l-0.47,0.13l-5.26,-0.55l-0.72,-0.6l0.42,-0.45l1.05,0.14l0.37,-0.55l1.09,-0.5l0.17,-0.83l-0.37,-0.49l-1.6,-0.45l-0.87,0.54l-2.88,-0.45l-1.05,-0.95l-3.44,-0.4l-1.08,0.52l-0.93,-0.22l-1.23,0.17l-1.79,-0.6l1.35,-1.23l-0.39,-2.41l-2.16,-1.8l-0.87,-0.3l-1.91,1.14l-0.2,1.16l-2.12,0.36l-0.4,0.88l0.64,1.79l-2.27,1.33l-1.66,1.96l-1.32,0.54l-4.73,0.91l-6.02,-0.11l-0.52,0.31l0.05,1.01l-4.6,2.6l-3.21,0.5l-2.85,1.0l-6.11,0.24l-1.35,0.87l-0.62,-0.54l-1.5,-0.18l-1.05,0.55l-1.35,0.18l-0.19,-0.37l-0.7,-0.23l-2.22,0.55l-2.64,-0.1l-0.57,0.16l0.09,0.84l-1.16,-0.24l-7.68,0.33l-1.08,0.39l-2.19,-0.08l-0.69,0.6l-0.78,0.17l-2.64,-0.08l-0.04,-0.51l-0.7,-0.66l-2.53,-0.99l-0.76,-0.77l-0.17,-1.08l-2.02,-1.7l0.39,-0.76l-0.53,-0.74l0.99,-0.97l0.26,-1.46l-0.25,-0.67l-0.77,-0.46l-0.07,-1.12l1.1,0.14l0.41,-0.23l-0.54,-0.82l-3.49,-0.73l-0.62,-0.49l-1.99,0.12l-1.3,-0.59l-1.53,-0.08l-4.56,0.62l-0.71,-0.46l-0.96,-0.09l-1.1,0.7l-0.67,0.04l-7.87,-1.01l-0.81,-0.63l-4.8,-1.4l-0.7,-0.57l0.39,-0.17l0.15,-0.62l-0.35,-0.36l0.1,-0.68l-0.49,-0.43l-1.63,-0.16l-0.14,0.26l-0.71,-0.33ZM283.15,307.92l-0.44,0.04l-0.13,-0.04l0.4,-0.04l0.17,0.03ZM395.65,293.35l0.2,-0.1l0.35,0.58l-0.34,-0.36l-0.21,-0.12ZM388.06,270.89l-1.99,-0.99l-0.26,-1.31l2.3,1.43l-0.06,0.87ZM403.95,288.89l0.39,-0.29l0.37,0.6l1.45,0.18l0.59,0.69l-0.53,0.29l-0.31,0.72l-0.64,0.03l0.52,-0.87l-0.15,-0.53l-0.81,-0.42l-0.32,0.13l-0.56,-0.52ZM393.3,126.6l-0.27,-0.71l-0.66,-0.38l-0.13,-0.92l0.54,-0.59l7.21,-0.51l5.0,1.41l2.52,1.71l-4.66,0.14l-1.17,-0.22l-0.88,0.69l-1.55,0.42l-3.79,-0.33l-2.17,-0.71ZM401.46,296.38l-0.08,-0.83l-0.79,-0.31l1.04,0.06l0.16,0.53l-0.34,0.55ZM394.69,304.4l2.05,-1.19l0.4,-1.0l2.75,0.65l0.04,1.81l-1.32,-0.01l0.0,1.16l-1.21,-0.67l-0.86,0.02l-1.85,-0.77ZM384.18,168.64l0.59,-0.53l-0.17,-0.34l1.85,-0.07l0.4,-0.29l-0.19,-0.46l-0.64,-0.23l0.65,-0.53l8.31,-1.77l1.39,0.7l-3.4,0.71l-0.64,0.55l-0.55,1.35l-0.9,0.49l-1.16,-0.13l-0.37,0.4l-0.37,-0.3l-1.03,0.46l-3.76,0.0ZM395.16,285.98l0.33,-0.07l-0.03,0.6l-0.29,-0.24l-0.01,-0.29ZM377.92,165.38l0.92,-0.1l0.88,-0.57l2.36,-0.12l1.73,-0.8l1.16,-0.03l0.89,-0.54l6.75,-0.82l0.9,0.55l-0.13,0.27l-13.43,2.55l-2.03,-0.38ZM372.36,160.8l1.17,-0.43l0.28,-0.59l1.77,-0.13l2.76,-0.77l2.62,-0.05l8.72,-1.18l1.55,1.56l-0.73,1.48l-1.98,1.1l-4.07,0.69l-6.19,0.23l-0.1,-0.37l-4.99,-0.46l-0.8,-1.08ZM386.32,117.87l-1.59,-0.05l-0.23,-0.35l2.33,-2.0l1.86,0.17l0.13,0.61l-2.51,1.61ZM370.53,152.02l0.02,-0.55l2.76,-1.18l3.19,-0.15l0.62,0.35l-1.18,1.12l0.13,0.67l1.93,-0.18l0.79,-0.96l1.8,1.13l0.37,0.89l1.96,0.64l1.16,-0.1l0.38,0.57l1.69,0.21l0.31,0.36l-3.0,1.66l-5.38,0.3l-4.52,-0.17l0.21,-0.74l-0.74,-0.65l0.24,-0.76l-0.19,-0.71l-0.78,-0.73l-0.93,0.24l-0.02,-0.77l-0.81,-0.5ZM369.73,178.63l0.44,-0.93l1.93,-1.37l0.69,-0.31l2.57,-0.06l1.62,0.51l1.39,0.85l0.63,1.39l0.13,1.19l1.4,1.1l-2.5,1.78l-3.67,0.91l-2.25,-0.33l-2.3,-0.65l-1.99,-1.13l1.05,-0.63l0.71,-1.36l0.46,-0.24l0.14,-0.46l-0.43,-0.26ZM355.92,127.08l1.5,-0.56l2.46,0.28l1.42,0.69l5.07,3.93l0.31,0.71l-0.52,0.65l0.15,1.38l2.58,-0.09l0.48,0.7l2.32,1.4l0.05,0.7l0.72,0.28l0.16,0.5l-0.65,1.48l-1.77,0.24l-1.38,0.58l-2.12,-1.37l-2.29,0.16l-0.06,-0.78l-0.66,-0.25l-1.14,-1.56l-1.32,-0.53l0.08,-1.12l-0.82,-0.45l-0.27,-1.08l-0.69,-0.48l0.54,-0.75l-0.13,-0.45l-1.34,-0.52l0.0,-1.02l-0.55,-1.11l-2.12,-1.55ZM366.56,306.7l1.21,-0.28l1.97,0.14l1.97,1.1l0.29,0.78l-0.66,0.42l-1.12,0.08l-2.36,-0.98l-1.29,-1.27ZM352.38,216.56l-0.44,-0.53l-1.7,-0.36l-1.69,-0.92l-2.19,-0.14l4.08,-3.88l8.87,-0.49l1.52,-0.52l1.89,-0.17l2.89,0.56l2.14,1.34l0.61,0.71l1.38,0.16l1.12,0.62l0.52,0.78l-0.84,1.56l0.22,0.69l-0.32,0.65l0.12,1.06l-1.73,2.12l-0.07,0.78l-2.3,1.82l-0.27,1.28l-1.99,1.4l-0.8,-0.4l-0.67,0.22l0.27,1.43l-0.61,-0.45l-0.42,-1.0l-2.51,-1.8l-0.97,-1.25l-0.73,-0.41l-0.07,-0.66l-1.48,-0.39l0.01,-0.76l-0.93,-0.64l0.07,-0.76l-2.99,-1.63ZM316.07,154.05l1.77,-0.16l1.13,-0.8l-0.05,-0.65l-0.58,-0.23l0.13,-0.42l0.75,0.09l0.38,-0.73l0.64,-0.15l0.97,-2.12l1.42,-0.66l0.23,-0.69l1.31,-0.62l2.91,0.09l0.82,-0.39l0.32,-0.54l0.75,0.64l-0.3,0.83l0.22,0.4l1.7,0.13l0.53,0.47l-0.08,0.55l-1.02,0.78l-0.97,-0.15l-0.55,0.2l-0.21,0.57l0.67,1.05l1.15,0.66l-0.7,0.42l0.57,1.56l-0.48,0.54l0.04,0.51l0.58,0.4l2.5,0.22l0.96,1.28l0.96,0.67l-1.14,0.49l-0.02,0.44l0.53,0.51l-2.01,0.74l-0.3,1.04l-0.45,0.38l0.1,0.65l-0.6,0.74l0.43,0.59l6.35,-0.53l1.88,1.15l-1.36,0.96l-0.02,0.52l-1.1,0.15l-1.08,1.24l-0.48,0.78l0.44,1.01l1.41,-0.13l1.94,-1.92l3.47,-0.66l1.45,0.06l0.99,0.35l-0.15,0.98l0.83,0.85l-0.02,0.63l0.61,0.38l0.42,1.72l0.74,0.61l0.47,-0.31l-0.25,-1.11l0.35,-1.23l2.61,-0.8l-0.7,-0.72l-2.02,-0.26l-0.08,-0.26l0.11,-2.06l2.29,-1.79l2.76,-0.03l5.78,1.46l1.47,1.04l1.32,1.53l0.18,2.76l0.56,1.26l-0.72,0.68l-0.38,1.06l-1.71,0.55l-0.68,0.75l0.06,0.69l1.11,0.24l-0.92,0.9l0.56,1.02l-2.43,2.1l-0.44,0.91l0.14,0.56l0.46,0.3l-0.11,0.39l-1.65,0.66l-0.29,0.66l0.33,0.54l-6.93,0.99l-2.55,1.61l-2.13,0.07l-2.82,-0.46l-1.5,-0.67l-0.27,-0.52l0.31,-0.49l-0.15,-0.86l-1.1,-0.69l-0.45,0.22l0.13,1.22l-0.69,0.36l-0.93,-0.17l-0.62,0.29l-0.13,0.72l0.3,0.31l-0.34,0.42l-3.82,0.36l-1.09,-0.44l0.41,-0.58l-1.01,-1.39l-2.65,-0.71l-1.12,0.41l-0.59,0.91l-0.65,0.34l-3.19,0.96l-0.65,0.92l-1.04,0.65l-4.22,0.11l-0.0,-13.18l9.45,0.9l1.32,0.42l0.46,-0.5l-0.41,-1.26l0.39,0.07l0.47,-0.39l-0.35,-0.55l0.52,-0.56l-0.54,-1.02l0.49,-0.24l-0.02,-0.66l-0.3,-0.19l-1.94,-0.48l-0.69,-0.61l-2.86,-0.55l-0.27,-0.52l-2.03,-0.09l-0.34,-1.27l-0.54,-0.27l-2.17,0.52l-0.65,-0.32l0.03,-0.26l3.01,-0.62l1.01,-0.75l1.61,-0.45l0.42,-0.68l0.69,0.03l0.58,-0.46l-0.25,-0.65l-0.49,-0.13l0.27,-0.15l-0.01,-0.81l-1.85,-0.93l-0.51,-0.76l-1.29,-0.15l-0.4,-0.65l-1.39,-0.34l-1.0,0.22l-0.2,0.43l-0.24,-0.17l-0.0,-4.86ZM340.5,330.96l1.14,0.9l-0.68,-0.03l-0.46,-0.87ZM335.78,212.72l1.84,-0.46l2.09,0.37l-3.51,0.53l-0.41,-0.44ZM336.03,326.87l-0.09,-0.57l0.89,-0.49l-0.03,0.79l-0.46,0.79l-0.33,-0.52ZM335.5,323.87l-0.36,-0.62l0.04,-0.83l0.57,0.16l0.56,1.29l-0.81,-0.0ZM334.05,317.96l0.15,-0.4l0.9,-0.41l-0.2,0.88l-0.85,-0.07ZM331.52,324.62l0.13,-0.29l0.96,0.2l0.0,0.41l-0.63,0.23l-0.46,-0.55ZM325.32,317.5l1.04,-0.28l0.38,0.94l-0.12,-0.02l-1.3,-0.64ZM316.07,106.39l0.64,0.04l0.31,0.74l2.21,1.2l1.35,0.0l1.53,1.13l0.59,1.24l-0.56,0.61l-0.05,1.63l-0.69,0.79l-3.86,0.33l-1.47,-0.74l-0.0,-6.97ZM321.48,315.47l0.69,0.33l0.16,0.44l-0.94,-0.57l0.09,-0.2ZM316.07,122.06l-0.0,-2.81l2.62,0.04l0.76,0.41l-0.79,1.64l-2.58,0.72ZM316.2,314.51l0.04,-0.03l0.1,-0.05l-0.02,0.04l-0.12,0.04ZM305.64,307.65l1.61,-0.58l0.69,0.34l-1.45,0.28l-0.85,-0.04ZM298.0,311.93l0.6,-0.51l0.16,0.0l-0.12,0.52l-0.65,-0.0Z", "name": "Nunavut"}, "CA-NS": {"path": "M809.49,640.22l0.7,-0.58l0.14,-0.79l1.62,-1.12l2.08,-2.83l0.9,-2.24l1.33,-2.1l1.03,-0.59l1.53,-2.26l1.15,0.39l-0.55,0.78l0.7,0.9l1.18,0.0l-0.01,0.37l-0.85,2.0l0.31,0.57l-2.46,4.9l0.06,0.46l0.35,0.04l-1.9,1.05l-1.14,-0.0l-1.04,1.11l-1.23,0.39l-0.41,0.58l0.57,0.55l-0.25,0.32l0.47,0.61l-0.74,0.58l-0.14,1.18l1.04,0.29l1.62,-0.81l0.68,0.24l-0.34,0.43l-1.42,0.33l-1.07,0.63l-0.77,-0.54l-1.08,0.65l-1.15,-1.64l-0.9,-3.86ZM816.75,645.2l1.0,-0.59l-0.03,-1.1l2.84,-2.14l0.53,-0.64l-0.02,-0.45l-0.64,-0.08l-2.72,1.27l-0.18,-0.31l2.55,-1.63l1.19,-1.22l0.3,-0.05l-0.04,0.46l1.03,0.32l0.52,-0.14l0.13,-0.9l0.4,-0.3l0.27,0.51l1.09,0.08l0.26,0.51l0.49,0.01l-0.07,0.71l-0.73,0.38l-0.01,0.43l0.54,0.58l0.76,0.01l-1.3,0.4l-0.31,0.37l-1.36,0.18l-0.38,0.59l0.4,0.48l-0.67,0.31l-0.35,0.6l-4.35,1.64l-1.13,-0.3ZM815.1,641.17l0.97,-0.76l0.29,-0.01l-0.15,0.6l-1.11,0.17ZM822.18,637.58l-0.56,-0.47l-0.64,0.14l0.71,-0.43l0.49,0.76ZM814.11,646.37l0.31,-0.13l0.38,-0.03l-0.13,0.29l-0.56,-0.13ZM762.04,664.25l1.03,-2.98l2.58,-2.41l0.05,-0.53l-0.44,-0.39l0.54,-0.4l0.19,0.85l1.03,-0.11l2.91,-2.38l-0.51,-0.39l-1.05,0.42l7.1,-4.19l4.61,-1.7l-0.28,1.47l0.37,0.65l0.46,0.05l0.4,-0.42l0.51,0.31l0.6,0.61l0.24,1.03l0.9,-0.31l0.16,-1.03l-0.9,-0.91l0.54,-0.71l4.09,-1.31l1.71,-0.13l0.3,0.39l1.47,-0.75l0.32,-0.35l-0.7,-0.58l-4.33,-0.3l-0.69,0.31l-2.23,-0.56l-2.99,0.53l-1.91,-0.53l-1.19,0.45l-0.45,0.72l-1.46,-0.33l1.24,-1.21l3.45,-2.35l0.35,-0.78l1.33,-0.13l0.48,-1.57l0.75,-0.95l1.38,-0.51l1.02,0.35l1.32,1.11l0.09,0.5l1.19,0.27l0.37,-0.48l0.77,-0.18l-0.09,0.68l1.53,0.2l-0.19,0.23l0.23,0.36l0.98,0.47l2.25,-0.45l0.5,-0.52l2.53,0.46l0.43,0.24l-0.63,0.25l-0.3,0.55l0.19,0.47l0.83,0.35l0.29,-0.31l0.79,-0.02l0.15,-0.54l0.64,0.33l0.17,0.54l0.72,0.03l5.07,-3.24l0.61,2.19l1.61,0.87l1.09,0.17l1.38,-0.93l1.37,1.64l0.91,0.6l-2.26,0.98l-0.15,0.63l0.31,0.33l4.24,0.24l-0.24,0.59l-0.38,-0.51l-0.81,0.39l-1.07,-0.07l-0.93,1.05l-1.67,0.19l-1.39,-0.31l-0.07,0.84l-1.22,0.09l-0.69,0.69l-1.38,0.23l-0.52,0.64l-1.68,0.23l-1.95,1.01l-0.27,-0.3l-1.33,0.89l-2.19,0.57l-0.36,0.69l-1.18,-0.01l-0.36,-0.55l-1.18,-0.21l-0.39,0.16l-0.08,0.66l-1.06,-0.03l-0.44,1.16l-0.55,-0.07l-0.04,-0.34l-0.49,-0.19l-0.59,0.22l-0.02,0.63l-1.93,-1.28l-0.36,0.53l0.35,0.69l0.66,0.38l0.35,1.4l-1.61,0.16l-0.38,-0.75l-1.4,0.32l0.49,-2.03l-0.21,-0.4l-2.21,0.79l0.06,1.6l-0.75,-0.97l-0.69,0.07l-0.25,0.34l-0.92,-0.09l-0.12,1.19l-0.45,0.43l0.43,0.74l-0.32,0.53l-0.75,-0.12l-0.06,0.5l0.53,0.54l-0.62,0.74l-0.48,0.43l-0.86,-0.06l-0.29,0.26l-0.29,0.31l0.44,0.49l-1.03,0.19l-0.32,0.63l0.31,0.29l-1.12,0.4l-0.46,0.99l-0.77,0.03l-0.57,0.43l0.08,0.3l-0.59,-0.22l-0.23,0.39l0.15,0.64l-1.06,0.12l-0.4,-0.7l-0.71,0.13l-0.12,0.42l-0.5,-0.19l-0.58,0.35l0.13,1.7l-0.2,0.34l-0.39,-0.3l-0.59,0.35l-0.01,0.74l-0.42,-0.71l-0.53,-0.03l-1.04,0.7l-0.12,-0.59l-0.36,-0.19l-0.0,-1.12l-1.25,-1.76l-1.06,-0.45l-0.69,0.1l0.06,1.19l-0.66,-0.37l0.2,-0.53l-0.59,-0.59l0.19,-1.56l-0.55,-1.23ZM771.09,669.04l0.08,0.14l-0.07,0.15l-0.08,-0.06l0.08,-0.23ZM795.93,655.94l0.01,-0.02l0.01,-0.01l-0.01,0.02Z", "name": "Nova Scotia"}, "CA-BC": {"path": "M21.69,447.03l191.79,0.0l-0.01,89.47l0.28,0.69l0.63,0.24l0.03,0.77l1.2,0.37l0.54,0.58l-1.37,-0.18l-0.54,0.3l0.22,1.53l0.4,0.43l0.56,0.0l0.77,1.39l1.15,0.75l0.74,-0.28l1.74,0.14l0.31,0.99l1.12,1.33l2.41,0.89l0.65,-0.45l0.07,-0.84l0.97,0.55l0.81,0.75l-0.2,0.8l1.14,0.54l-0.1,0.58l0.68,1.43l0.5,0.19l0.84,-0.29l0.58,0.62l-0.1,0.67l0.8,0.63l0.39,0.81l-0.42,0.7l1.15,2.0l-0.21,0.62l0.6,1.2l1.99,-0.43l0.5,-1.0l0.87,0.65l1.33,0.28l0.03,0.43l-0.88,0.93l0.57,1.13l2.0,1.26l2.76,-0.18l0.46,1.32l2.24,1.76l1.15,2.66l1.5,0.14l0.75,-1.15l0.5,-0.12l0.8,2.03l0.91,0.47l0.83,0.87l0.26,0.77l0.8,0.45l-0.04,0.84l0.53,1.11l2.18,1.08l0.17,1.06l0.57,0.62l1.96,0.54l0.2,0.47l1.39,0.94l0.14,0.42l-0.49,0.51l0.23,0.69l0.62,0.17l1.92,1.62l0.61,-0.07l0.12,1.09l1.03,1.22l0.56,0.1l0.65,-0.54l0.94,0.2l2.11,2.58l0.6,3.07l0.61,0.93l0.13,0.78l-0.32,0.3l-0.05,0.84l0.62,1.5l-0.52,1.76l-0.6,0.53l-0.02,0.63l0.61,0.6l1.08,0.15l-0.18,1.45l1.26,1.17l0.97,1.69l1.73,0.41l0.45,0.31l0.35,0.96l0.78,0.45l-88.05,0.03l-0.99,-0.25l-0.19,-0.85l-0.62,-0.15l-1.73,0.85l0.63,-0.77l0.01,-0.83l-1.48,0.37l-0.01,-0.33l0.51,0.0l0.12,-0.45l-0.53,-0.55l2.55,-0.33l0.48,-0.67l0.32,-1.8l-0.51,-0.35l-0.43,0.26l-0.51,1.54l-0.58,0.17l-2.14,-0.46l0.3,-0.61l0.16,-2.25l0.67,-1.14l-0.23,-0.68l-1.24,0.49l-0.2,0.96l-2.49,1.19l-0.02,1.42l-2.18,-0.88l0.29,-0.55l-0.16,-0.75l1.68,-0.59l0.71,-0.86l-0.09,-0.45l-0.45,-0.07l-2.29,0.74l-1.19,-1.36l0.48,-0.78l0.0,-0.87l-0.73,-0.99l1.41,-0.58l0.64,-1.02l-0.88,-1.1l-1.83,-0.9l-0.48,0.56l1.66,1.49l-1.6,0.85l-0.13,1.08l-0.42,0.18l-0.27,1.04l-0.58,0.58l-2.63,0.18l-0.71,-0.31l-0.7,-1.07l-1.21,-0.77l0.33,-1.87l0.79,-1.74l-0.87,-1.33l0.17,-0.43l1.03,-0.03l1.26,-0.59l0.88,-0.8l0.07,-0.57l-0.65,-0.28l-1.39,0.9l-1.85,0.18l-1.37,1.4l-0.79,-0.13l-0.49,-1.21l-0.39,-0.17l-0.3,0.32l0.03,-0.3l0.83,-0.29l1.1,-1.22l0.46,-2.34l-0.74,-0.64l1.12,-1.35l-0.52,-0.8l-0.76,0.01l-0.71,1.2l-0.7,0.49l0.29,1.02l0.43,0.31l-0.09,1.32l-1.85,1.56l-0.46,0.87l-0.54,-1.11l-0.74,0.34l-0.14,-0.59l-0.53,-0.25l-0.68,0.98l-0.73,0.14l0.2,-1.85l0.97,-0.92l-0.19,-0.64l-0.3,-0.09l-1.52,0.97l-0.23,1.55l-0.58,1.2l-0.5,-0.26l-0.07,-0.79l-0.57,-0.17l-1.82,0.75l-1.83,-0.21l-0.04,-0.4l2.05,-0.52l0.33,-0.46l2.26,-0.4l0.47,-0.85l0.63,-0.4l0.11,-0.64l-0.35,-0.53l0.87,-0.25l0.54,-1.33l-0.62,-1.61l-0.86,-0.76l-0.63,0.35l0.02,0.32l0.8,1.94l-1.16,0.59l0.03,1.22l-0.63,0.75l-1.15,0.05l-0.49,0.33l-0.6,-0.41l-1.34,0.48l1.16,-0.77l0.12,-0.47l-0.4,-0.32l-1.24,0.24l0.15,-0.72l-0.42,-0.34l0.45,-0.52l-0.03,-0.5l-0.53,-0.26l-0.55,0.31l-1.98,-0.28l-0.34,-1.31l-0.4,-0.4l-0.69,0.92l0.11,1.08l-1.12,0.67l-1.68,-0.88l-0.75,0.49l-2.27,-0.37l-0.57,0.16l0.02,0.63l-0.53,-0.57l-1.32,-0.19l-0.24,-0.64l-0.86,-0.12l0.48,-1.15l-0.19,-0.43l-0.5,-0.18l-1.42,0.3l-1.02,-1.19l1.9,-0.74l1.93,0.33l1.6,-0.19l1.14,-0.65l0.29,-1.06l-0.73,-0.42l-0.5,0.74l-0.92,0.41l-1.48,-0.12l-0.43,-0.61l-1.93,0.27l1.34,-1.07l0.55,-0.97l0.0,-0.99l1.72,-0.49l2.71,-0.17l3.76,0.31l0.89,-0.69l0.2,-0.82l-0.66,-1.24l-0.48,-0.15l-0.24,0.44l0.19,1.0l-0.35,0.36l-3.77,-0.49l-1.69,0.24l-0.89,-0.37l-0.54,0.54l0.02,-0.43l0.64,-0.36l0.33,-1.2l-0.2,-0.51l-0.65,0.01l-0.49,1.11l-0.61,0.27l-0.21,0.73l-1.13,-0.07l-0.64,0.5l0.33,0.49l0.73,0.22l-0.49,0.96l0.22,0.48l-0.19,0.26l-0.56,-0.52l-0.7,-0.01l-0.44,-0.81l-0.43,-0.88l-0.08,-2.26l0.22,-0.59l0.6,-0.36l1.22,-0.17l0.27,-0.96l0.82,-0.64l1.59,-0.39l-0.23,-1.11l0.59,-0.52l1.02,-0.27l0.97,-0.94l1.31,0.22l0.85,1.56l2.8,2.73l0.31,-0.39l-0.07,-1.04l-0.88,-1.18l-1.33,-0.89l-0.43,-1.32l1.68,-0.4l0.34,-0.62l-0.79,-0.54l-2.37,0.79l-1.39,-0.42l-0.45,-1.51l2.37,-1.54l0.73,-1.47l-0.58,-1.69l-1.27,-0.86l-0.45,0.56l0.9,2.05l-2.62,2.02l-0.37,0.69l0.09,0.6l-1.6,0.61l-0.58,0.79l-1.7,0.71l-0.33,-0.78l-0.23,0.05l-1.04,1.57l-0.43,-0.57l0.67,-0.46l0.12,-0.56l-0.67,-0.92l0.41,-0.54l-0.03,-1.16l-0.55,-0.47l-2.34,1.09l-0.75,1.47l-0.21,0.13l0.35,-0.83l-0.2,-1.23l1.19,-2.57l-0.09,-1.5l0.9,-0.38l0.09,-0.65l-1.43,-0.28l-1.26,1.72l-1.5,-0.28l-0.47,-0.66l-0.35,-2.32l0.5,-1.08l-0.27,-0.37l-0.87,-0.03l-0.91,-1.28l-0.68,0.37l-1.11,-0.78l-0.27,-1.81l0.5,-0.65l-0.38,-0.6l0.26,-0.25l0.4,0.9l0.68,0.5l0.59,-0.04l1.05,0.86l0.12,0.6l0.51,0.21l0.35,-0.45l-0.01,-0.8l1.13,-0.44l1.99,0.22l0.25,0.36l-0.26,0.68l0.16,0.49l0.79,-0.38l0.53,0.35l0.37,1.21l0.72,0.35l0.57,-0.43l-0.63,-0.89l-0.13,-0.84l-0.94,-0.57l-1.24,-1.6l-1.75,0.07l-0.72,-0.28l-0.76,0.73l-0.81,0.11l-2.61,-2.22l0.4,-0.97l-0.02,-1.17l0.61,-0.15l0.27,-0.5l1.7,0.32l0.39,-0.2l0.04,-0.48l-0.39,-0.42l-1.61,-0.38l0.79,-1.73l-0.58,-0.32l-0.63,0.27l-2.04,2.38l-1.04,-0.79l-0.68,0.39l0.43,1.16l-0.65,-0.32l-0.34,0.39l0.15,0.67l-1.78,1.63l-0.4,3.15l-3.44,-3.02l-0.52,-1.13l-2.02,-1.45l-0.58,-1.3l-0.62,0.11l-0.5,-0.61l0.08,-1.94l0.27,-0.52l0.4,-0.06l1.24,1.75l1.2,1.05l0.57,-0.02l-0.23,-1.24l-0.87,-0.68l-0.97,-1.45l0.79,-0.26l2.11,0.52l1.32,-0.71l0.34,-0.64l-0.17,-0.23l-0.68,-0.1l-0.9,0.63l-2.24,-0.57l-2.91,1.11l-1.06,-0.55l0.36,-0.06l0.22,-0.7l-0.33,-0.23l-0.09,-1.52l-0.34,-0.35l-0.6,0.79l-0.67,0.25l-0.73,-0.21l0.04,-0.67l0.75,-0.16l0.09,-0.67l-0.48,-0.77l0.48,-0.22l2.85,3.36l0.65,0.31l0.8,-0.13l0.02,-0.58l-1.17,-0.8l0.18,-0.83l0.83,-0.56l-0.11,-0.56l-0.61,-0.13l-0.63,0.27l-0.45,0.78l-2.1,-2.61l0.95,-0.36l1.28,0.44l0.85,0.81l1.23,0.18l0.54,-0.26l0.12,-0.44l-0.32,-0.31l-1.21,-0.15l-0.64,-0.77l-0.98,-0.46l1.4,-1.83l-0.3,-0.57l0.2,-0.29l0.52,0.69l1.55,-1.0l0.59,0.23l1.59,-0.4l0.11,-0.75l-3.57,-0.13l3.38,-5.38l0.87,0.07l0.94,-0.69l-0.06,-0.5l-0.51,-0.21l-0.6,0.37l-1.33,0.14l-0.91,-2.31l-0.7,-0.14l-0.23,0.51l0.44,1.86l-0.59,1.13l0.13,1.49l-2.35,3.82l-0.29,-0.8l0.37,-0.75l1.77,-2.13l-0.5,-0.96l-0.3,-1.8l-0.66,-1.15l0.14,-1.84l-0.5,-0.71l1.67,-2.81l-0.49,-0.39l-0.69,-2.03l-0.65,-0.42l-1.09,0.21l-1.76,-0.42l-0.55,-1.35l-1.86,-0.63l-1.23,-1.23l-3.48,-0.91l-4.66,-2.68l-2.53,0.05l-0.02,-0.85l-0.56,-1.03l0.11,-0.89l-2.26,-1.0l0.66,-2.11l-0.29,-0.51l-2.59,-0.62l0.81,-1.65l-6.99,-10.04l-1.61,-1.89l-0.91,-2.04l-2.51,-2.68l0.17,-1.18l-2.42,-2.16l-2.13,-2.59l-3.98,-1.87l-0.87,-0.83l-0.01,-0.7l-0.67,-0.45l0.0,-0.78l-1.01,-1.29l-1.15,-0.27l-1.26,-1.67l-2.5,-0.57l-0.44,-0.62l0.01,-0.94l-0.63,-0.34l0.53,-0.69l-0.02,-1.54l-4.61,-3.55l-0.6,-0.11l-4.45,1.89l-4.39,1.15l-0.0,0.72l0.82,0.58l-0.54,0.72l-1.2,-0.07l-0.5,0.39l0.01,2.55l-0.93,1.51l-2.67,0.31l-4.49,2.42l-1.72,1.26l0.23,-1.1l-1.37,-3.85l-10.09,-7.8l-1.08,-2.2l-2.01,-0.85ZM129.89,556.5l-0.2,0.44l-0.42,0.43l0.14,-0.8l0.48,-0.07ZM135.48,570.26l-0.21,0.12l-0.18,0.03l0.22,-0.11l0.17,-0.03ZM141.99,576.97l0.2,0.07l0.18,0.03l-0.1,0.06l-0.28,-0.16ZM173.38,590.16l0.21,0.13l-0.15,0.24l-0.0,-0.18l-0.06,-0.19ZM174.88,595.11l-1.13,-0.6l-0.85,-1.28l0.39,-0.92l1.17,1.24l0.42,1.56ZM166.11,585.47l-0.07,0.27l-0.04,0.03l0.01,-0.08l0.09,-0.22ZM148.64,576.78l-0.77,0.4l-0.36,-0.18l0.27,-0.34l0.86,0.13ZM132.88,555.09l0.17,1.05l-0.37,0.55l-0.51,-1.21l0.27,-0.52l0.45,0.13ZM123.26,540.87l-0.12,0.1l-0.04,-0.15l0.07,0.03l0.09,0.02ZM178.29,604.3l0.26,0.18l-0.21,0.52l-0.19,-0.24l0.14,-0.45ZM128.69,578.39l2.99,-1.1l1.85,0.03l3.65,1.17l0.22,0.82l0.78,-0.0l2.29,1.3l2.0,0.44l0.19,0.31l0.96,0.05l0.27,0.42l0.97,-0.2l1.84,0.88l0.64,-0.18l3.44,0.32l2.34,0.98l2.19,0.51l1.62,-0.17l1.02,0.39l0.97,2.59l0.98,0.84l0.89,1.9l3.03,2.7l-0.82,-0.05l-0.2,0.64l2.02,2.84l1.32,0.41l0.79,0.7l4.12,1.11l0.22,0.66l1.95,0.21l0.37,1.21l1.13,0.29l0.41,0.79l-0.47,0.04l-0.12,0.74l2.34,2.04l-0.58,0.91l1.22,1.04l-0.03,1.87l0.87,0.09l0.42,-0.36l0.17,-0.88l1.1,2.33l-1.43,-0.35l-1.23,1.56l-0.66,0.01l-7.34,-2.58l-0.13,-0.62l-0.68,-0.08l-0.49,0.3l-1.58,-0.35l-1.52,-0.96l-2.78,-1.07l-0.49,-0.58l1.36,-0.85l0.18,-0.73l1.2,-0.62l0.74,-1.08l0.39,-1.47l-0.27,-1.14l-0.64,-0.27l-0.89,3.09l-1.72,0.33l-0.71,-0.22l-0.77,0.55l0.12,-0.54l-1.27,-0.58l-1.42,1.6l-2.48,-1.75l1.19,-0.85l0.42,-0.98l-0.62,-0.38l-0.85,0.55l0.14,-0.72l-0.63,-0.38l0.28,-1.0l-0.4,-0.42l-0.52,0.32l-0.36,0.9l-0.66,0.15l0.66,-1.52l-0.17,-0.56l-0.71,0.06l-0.66,1.2l-0.22,-0.34l0.19,-0.84l-0.46,-0.36l-1.38,0.5l-0.3,-0.47l-0.47,-0.05l-0.3,0.93l-1.39,-1.26l-0.83,0.62l0.05,0.62l-0.18,-0.2l0.03,-1.91l0.94,-0.51l3.67,-0.33l0.28,-0.47l-0.15,-0.36l-1.35,-0.23l-1.37,0.42l-1.07,-0.3l0.67,-0.97l-0.9,-0.62l-0.48,0.29l-0.13,0.77l-0.41,0.08l-0.51,-2.21l-0.44,-0.33l-0.55,0.25l-1.18,-1.19l-0.54,0.33l-0.8,-0.14l-0.13,1.21l-1.5,0.05l-0.81,-0.96l0.64,-1.2l0.75,-0.5l-0.03,-0.98l-0.64,-0.09l-0.63,0.61l-0.81,-0.69l-0.5,0.11l-0.02,1.23l-0.45,0.19l-0.65,-0.42l0.47,-0.56l-0.36,-0.94l-0.38,-0.11l-1.42,0.85l0.14,-0.66l-0.42,-0.16l-0.91,0.38l-0.86,0.86l-0.54,-0.18l1.26,-1.14l0.14,-0.48l-0.63,-0.43l-0.09,-0.71l-0.81,-0.36l-0.69,0.18l0.41,-0.98l2.92,-0.35l1.44,1.44l0.48,-0.55l-1.12,-1.66l1.09,-0.51l0.35,-0.62l-0.47,-0.46l-1.24,0.35l-0.56,-0.34l-2.63,-0.34l-0.47,0.11l-0.02,0.48l0.43,0.44l1.8,0.28l-1.38,0.46l-1.66,0.27l-0.52,-0.27l-0.51,0.28l-1.01,-0.68l-0.23,-0.72l-0.56,-0.36l0.22,-0.22l-0.24,-0.62l-0.69,0.01l-0.3,-0.81ZM143.99,589.37l0.18,0.13l-0.12,0.13l-0.06,-0.26ZM153.48,597.87l-0.33,0.38l-0.11,-0.09l0.21,-0.11l0.23,-0.17ZM179.2,595.19l0.22,-0.14l0.05,0.14l-0.16,-0.01l-0.11,0.02ZM171.65,592.62l-0.09,-0.1l0.25,-0.23l-0.11,0.28l-0.05,0.05ZM168.47,592.5l0.86,0.25l0.64,0.96l-0.92,-0.39l-0.59,-0.82ZM163.78,585.23l0.62,-0.11l0.01,0.34l-0.42,0.07l-0.22,-0.31ZM164.96,586.26l0.02,0.01l-0.03,0.03l0.01,-0.04ZM163.27,587.45l-0.39,-0.48l0.46,-0.5l0.17,0.9l-0.25,0.08ZM160.2,583.76l-0.02,-0.54l0.83,0.76l-0.19,-0.16l-0.62,-0.06ZM161.49,584.8l0.01,0.01l0.13,0.16l-0.06,-0.04l-0.08,-0.13ZM162.04,585.61l0.0,0.0l-0.0,0.0l-0.0,-0.01ZM160.02,586.37l-0.2,-1.04l0.34,-0.31l0.73,0.86l-0.56,0.74l-0.31,-0.26ZM158.23,583.37l0.12,-0.24l0.64,-0.22l-0.21,0.37l-0.54,0.1ZM159.07,582.86l0.03,-0.02l0.09,-0.06l-0.02,0.06l-0.1,0.02ZM154.47,582.63l0.26,-0.04l0.08,0.06l-0.18,0.01l-0.16,-0.03ZM154.05,599.09l0.5,-0.04l-0.09,0.48l-0.07,0.0l-0.35,-0.44ZM150.78,597.22l0.63,-0.26l0.23,0.93l-0.83,-0.16l-0.03,-0.51ZM147.23,579.28l1.66,-1.19l1.04,-0.25l0.37,0.58l-0.64,0.97l-2.44,-0.1ZM149.35,581.01l0.16,-0.17l0.17,0.02l-0.15,0.13l-0.18,0.02ZM143.59,592.14l0.78,-0.42l-0.06,-0.64l-0.63,-0.13l1.09,-0.46l0.75,0.37l0.5,2.66l-1.25,-0.41l-1.18,-0.96ZM133.84,561.73l0.56,-2.24l0.81,-0.92l2.35,-0.85l0.87,-1.04l1.35,-0.43l0.11,0.83l-3.3,1.63l-0.86,0.83l-0.65,1.89l-1.23,0.3ZM135.19,576.71l0.13,0.05l0.05,0.07l-0.02,-0.0l-0.17,-0.12ZM131.74,560.0l0.41,-0.25l0.77,0.0l-0.17,0.31l-1.02,-0.06ZM132.04,568.54l-0.79,-1.84l0.93,-0.83l1.13,3.07l-1.28,-0.4ZM132.37,557.86l0.15,0.03l0.33,0.86l-0.42,-0.08l0.19,-0.38l-0.24,-0.43ZM130.44,563.18l0.65,-1.74l1.39,-0.31l-0.2,1.31l-0.56,1.12l0.21,0.9l-0.31,-0.02l-0.23,-1.16l-0.94,-0.1ZM130.13,560.62l-0.28,-0.58l0.62,-0.75l-0.02,0.97l-0.32,0.36ZM129.83,551.92l-0.29,-0.62l-0.01,-0.03l0.46,-0.04l-0.17,0.69ZM128.11,559.27l0.05,-0.49l1.17,-0.02l-0.28,0.68l-0.51,-0.32l-0.43,0.15ZM128.27,553.0l0.22,-1.03l0.66,2.92l-0.26,0.66l-0.53,0.53l-0.02,0.0l0.33,-0.61l-0.41,-2.48ZM128.39,551.47l-0.05,-0.07l0.03,-0.04l0.02,0.12ZM120.75,548.46l0.19,-1.29l0.35,0.07l0.52,-0.75l1.02,0.65l-1.4,1.56l-0.69,-0.24ZM121.85,545.83l0.1,-1.81l1.12,0.23l1.96,1.58l0.77,0.21l0.29,0.47l0.63,2.32l-0.76,3.43l0.12,0.6l-0.77,0.0l-0.09,-1.41l1.01,-2.33l0.02,-0.73l-0.38,-0.43l-0.67,0.17l-0.04,0.55l-0.51,0.05l-0.53,3.09l-0.39,0.3l-1.41,-0.63l-0.76,-1.12l-0.11,-0.27l0.69,0.13l0.09,-0.82l0.95,-1.3l0.84,-0.33l0.21,-0.6l-1.92,-1.63l-0.46,0.26ZM126.29,552.87l0.01,0.02l-0.02,-0.01l0.01,-0.01ZM125.41,553.83l1.34,-0.13l0.39,1.57l-1.35,-0.81l-0.38,-0.63ZM125.73,555.55l0.05,0.92l-0.22,0.8l-0.51,-1.74l0.68,0.01ZM120.88,541.49l0.02,-0.35l0.0,-0.01l0.07,0.3l-0.09,0.06ZM121.02,540.6l0.11,-1.38l0.87,-0.52l1.21,-0.1l-0.16,0.8l-0.74,0.03l-1.29,1.16ZM119.72,551.18l0.12,-0.28l0.3,0.21l2.38,2.19l0.08,1.11l-1.21,-0.8l0.05,-0.27l-0.87,-0.77l0.04,-0.5l-0.87,-0.89ZM121.23,542.98l0.65,-1.08l0.14,-0.71l0.73,1.27l-0.11,0.5l-1.42,0.02ZM119.24,545.91l0.05,-0.83l0.78,-0.92l0.35,1.97l-1.18,-0.23ZM117.05,545.71l0.16,-0.04l0.45,0.54l-0.23,-0.12l-0.38,-0.38ZM117.77,546.33l0.95,1.1l0.12,0.37l-0.4,-0.28l-0.66,-1.19ZM110.29,537.41l-0.05,-1.01l-0.63,-0.39l0.49,-0.36l3.43,2.37l2.33,2.59l-0.49,0.46l0.45,0.56l1.35,0.14l1.2,1.3l-0.43,-0.2l-0.51,0.39l-0.57,-0.05l-0.25,1.25l-0.91,-1.68l-0.67,0.02l-0.82,-0.71l0.06,-0.77l-0.64,-0.34l0.12,-0.58l-0.36,-0.6l0.23,-1.05l-0.95,-0.44l-1.18,0.24l-0.29,-0.83l-0.92,-0.31ZM107.07,539.92l0.07,-0.45l0.53,0.09l4.45,2.35l0.78,0.7l1.44,2.53l-0.53,-0.2l-0.87,0.32l-0.84,-1.16l-0.5,-0.2l-0.3,-0.8l-1.25,-0.84l-1.0,-0.17l-0.66,-0.92l0.62,-0.31l-0.19,-0.44l-1.25,-0.05l-0.5,-0.44ZM108.53,538.38l0.77,-0.58l0.25,0.42l0.87,0.29l0.02,0.85l-1.57,-0.47l-0.34,-0.51ZM108.03,522.74l-0.18,-0.24l2.26,-2.32l-1.08,1.88l-1.0,0.68ZM109.75,531.79l0.18,0.07l0.01,0.01l-0.14,0.07l-0.05,-0.15ZM106.0,534.18l1.96,-1.08l0.66,0.57l-1.32,0.26l-0.4,1.08l-0.91,-0.83ZM108.82,533.9l0.5,0.69l-1.13,1.33l-0.38,-0.31l0.38,-0.66l0.9,-0.46l-0.27,-0.59ZM108.86,530.07l0.09,-0.23l0.09,-0.06l-0.04,0.14l-0.15,0.14ZM106.45,523.46l0.59,-0.37l0.16,0.14l-0.11,0.32l-0.64,-0.09ZM103.84,527.67l0.05,-0.05l0.17,0.21l-0.03,-0.01l-0.18,-0.15ZM102.67,526.92l0.32,-1.36l1.01,0.23l-0.13,0.23l-1.2,0.89ZM100.99,560.13l0.05,0.06l-0.06,0.06l-0.01,-0.02l0.01,-0.1ZM86.55,546.46l4.51,-0.38l1.5,-1.01l0.99,-0.17l-0.06,0.71l0.29,0.39l1.29,0.75l-1.6,-0.3l-1.82,0.18l-0.28,0.68l0.53,0.29l0.25,0.69l0.71,-0.06l0.49,-0.59l1.94,0.63l-0.11,0.53l-0.46,0.4l-0.93,0.02l-0.83,-0.83l-0.69,-0.03l-0.81,1.22l0.44,0.4l0.73,-0.19l-0.09,0.53l0.48,0.46l-0.24,0.37l0.29,0.27l-0.13,0.3l0.41,0.53l0.93,0.25l0.65,2.01l-1.8,-1.08l-0.62,-1.08l-0.74,-0.41l0.96,0.01l-0.19,-1.24l-1.57,-1.21l-0.45,0.06l0.08,0.88l-0.27,0.32l-0.7,-0.68l-0.1,-0.7l-0.77,-0.4l0.92,0.28l0.94,-0.5l0.27,-0.82l-0.22,-0.44l-2.58,-0.59l-1.18,0.12l-0.4,-0.6ZM95.26,554.66l0.08,0.01l0.04,0.07l-0.13,-0.08ZM95.4,554.75l1.25,0.32l0.49,0.5l-0.13,0.29l-0.56,-0.47l-0.65,-0.02l-0.42,-0.62ZM97.0,556.24l0.95,0.85l0.36,0.89l0.48,0.1l-0.06,0.2l-0.37,-0.27l-0.36,0.27l-1.24,-1.43l0.24,-0.61ZM99.98,557.92l0.14,-0.26l0.2,0.17l-0.15,0.03l-0.19,0.07ZM96.47,552.36l0.28,-0.31l0.15,-0.08l-0.09,0.6l-0.34,-0.21ZM81.01,536.92l0.18,-0.55l-0.73,-0.88l1.04,-1.92l-0.33,-1.07l0.25,-0.39l1.75,0.53l1.63,-0.24l0.74,0.32l-0.06,0.7l-1.05,0.95l0.3,0.81l1.36,-0.55l0.43,-0.92l2.01,-0.84l0.56,1.03l0.7,0.35l0.16,1.66l-0.58,0.23l-0.39,0.65l-1.3,0.19l-1.45,0.77l-1.08,0.03l-0.62,0.58l0.23,0.53l0.4,0.02l0.05,0.51l0.44,0.09l0.46,-0.37l0.45,0.19l-0.19,0.4l0.55,0.56l0.72,-0.51l1.17,-0.13l0.31,-0.55l0.47,0.11l0.72,-0.72l0.14,-0.67l-0.37,-0.55l1.15,-1.61l-0.47,-1.64l1.86,-0.18l2.01,-1.02l-0.41,1.65l-1.52,2.16l-0.71,2.55l0.18,3.69l-0.45,0.9l-2.45,0.55l-1.79,1.14l-0.27,-0.47l-0.63,0.06l-0.51,-0.82l-0.52,-0.2l1.02,-0.49l0.9,0.64l0.37,-0.28l0.07,-0.86l-1.3,-1.22l-1.2,-0.28l-0.25,-0.72l-0.46,0.1l-0.52,-0.58l-0.65,0.42l-0.27,-0.5l-0.43,0.0l0.16,-1.03l-0.6,-0.55l0.18,-0.48l-0.47,-0.48l-0.05,-0.62l-0.34,-0.27l-0.73,0.08Z", "name": "British Columbia"}, "CA-SK": {"path": "M316.11,601.42l0.0,-154.39l80.64,-0.0l0.01,61.34l6.45,93.05l-87.1,0.0Z", "name": "Saskatchewan"}, "CA-QC": {"path": "M625.13,524.75l-0.04,-0.36l0.83,-0.37l5.86,-1.58l1.0,-0.8l4.97,-1.72l2.43,-1.61l3.82,-1.9l1.11,-1.33l5.75,-4.43l0.36,-0.75l-0.27,-0.26l2.71,-2.73l0.36,-0.77l1.31,-0.85l1.53,-4.11l0.33,-6.77l-0.55,-3.59l0.25,-1.28l-1.28,-4.32l-1.5,-3.02l-0.12,-1.08l-3.48,-5.06l-2.99,-2.07l-0.32,-0.83l-1.42,-0.94l-4.02,-1.58l-0.17,-0.67l-2.53,-1.41l-1.47,-1.64l-1.44,0.26l1.02,-1.16l-0.45,-0.75l0.23,-0.9l-0.57,-1.31l0.59,0.32l0.48,-0.68l0.1,0.55l0.94,-0.04l0.84,-1.15l0.11,-0.47l-0.32,-0.33l0.65,-0.16l0.83,-0.91l0.45,-1.02l-0.09,-0.48l2.56,-0.99l0.08,-0.41l0.63,-0.42l-0.0,-0.59l1.04,-0.56l-0.21,-0.39l-0.8,-0.07l-0.93,-0.78l1.34,-0.83l0.11,-1.52l-0.6,-0.4l1.65,0.06l0.68,0.47l0.19,0.8l0.44,0.35l1.42,0.18l0.42,-0.4l-0.32,-0.49l-0.98,-0.27l-0.17,-0.9l-0.55,-0.67l0.6,-0.68l1.55,-0.26l-0.76,-1.94l0.16,-0.49l1.25,-0.83l-0.16,-0.27l0.53,-0.42l0.06,-0.45l-0.4,-0.22l-1.2,0.36l-0.68,-0.48l-0.59,0.29l-1.18,-0.13l0.11,-0.34l1.31,0.05l0.44,-0.49l-1.15,-0.75l0.31,-0.15l0.08,-0.64l-0.67,-0.61l0.07,-0.31l-0.57,-0.23l-0.58,-1.11l-0.9,-0.45l1.83,-1.66l1.48,-0.25l-0.67,-0.81l-1.02,-0.18l-1.3,0.28l-1.06,-0.86l1.88,-1.47l0.01,-0.79l0.97,-0.38l0.25,-0.47l-0.43,-0.4l-0.51,0.03l-2.76,1.06l-0.35,-0.87l-0.39,-0.12l-2.4,0.53l1.75,-2.02l1.27,-1.13l0.51,-0.05l0.46,-1.72l0.86,-0.58l-0.54,-3.55l2.04,-0.87l-0.11,-0.67l-0.84,-0.35l-0.09,-0.09l1.42,0.36l0.38,-0.62l-1.16,-1.1l-1.25,-0.17l-1.14,-1.42l-1.69,-0.07l-0.88,-2.49l-0.11,-1.47l-0.43,-0.54l-0.18,-4.18l1.17,-1.38l2.37,-1.17l0.92,-0.12l0.53,-0.73l1.19,-0.51l0.44,-0.59l0.71,0.51l2.23,0.21l0.52,0.31l1.59,-0.24l2.08,0.5l1.35,0.78l4.82,1.18l0.48,0.63l1.57,-0.1l1.25,0.64l1.57,0.24l-2.38,1.39l-0.16,0.45l0.38,0.29l0.96,-0.1l2.43,-1.21l0.91,-0.82l1.45,-0.27l1.49,0.38l-0.09,0.47l0.47,0.49l0.78,-0.59l0.51,0.0l1.07,0.5l1.39,1.32l2.2,0.72l0.42,-0.52l-1.97,-1.36l0.15,-0.37l3.02,-0.05l1.55,-1.16l1.08,0.03l1.66,-0.69l1.37,-1.52l1.68,-0.24l0.99,1.35l1.24,0.46l0.63,-0.1l0.58,0.62l0.99,0.23l0.17,0.75l1.57,1.31l1.1,0.31l-0.19,0.41l0.36,0.32l1.59,0.2l0.51,-0.63l0.76,0.43l-0.33,0.74l0.5,0.22l0.09,0.76l-0.69,0.28l-0.15,0.86l-0.99,0.97l-0.09,0.44l0.37,0.25l1.03,-0.39l0.79,0.72l0.56,-0.39l-0.3,-1.53l3.62,0.97l0.21,0.52l-0.49,0.81l0.12,0.51l0.52,0.32l1.1,-0.14l0.55,0.74l-0.63,0.68l-1.45,-0.2l-0.57,0.29l-0.4,0.71l0.11,0.48l1.11,-0.42l1.38,0.18l1.18,-0.25l0.72,-1.51l2.74,1.11l-0.37,0.56l-2.06,0.17l-0.26,0.58l0.74,0.74l-0.81,0.18l-0.32,0.49l0.29,0.38l0.78,0.13l-0.35,0.25l0.17,0.76l1.11,0.19l-0.32,0.52l1.13,0.68l-0.15,0.53l0.59,0.43l0.1,0.68l0.98,-0.04l0.26,-0.51l1.09,1.11l0.37,-0.37l0.85,-0.12l0.54,0.55l1.57,-0.12l0.76,0.23l0.33,0.67l1.63,0.31l0.5,-0.35l0.26,0.63l1.66,0.36l0.45,-0.48l0.66,0.26l0.39,-0.77l0.48,0.14l0.38,-0.42l0.61,0.33l0.76,-0.22l-0.19,0.85l0.63,0.75l-0.07,0.63l-0.55,0.55l2.64,1.48l0.99,-0.55l0.2,-0.34l-0.24,-0.29l0.6,-0.42l0.6,0.59l0.74,-0.16l0.35,-0.76l-0.39,-0.81l0.1,-0.63l0.3,-0.64l0.61,-0.11l1.33,2.41l0.06,1.27l-1.75,0.61l-1.57,1.08l0.38,1.92l-1.5,0.52l-0.06,0.6l0.66,0.77l-0.14,0.75l0.45,0.56l-0.39,1.01l1.39,1.39l-0.2,0.29l0.38,1.2l-0.21,0.37l-0.66,0.22l-1.0,-0.28l-0.42,0.4l-0.07,0.66l-4.56,-0.45l-0.5,0.42l-1.98,0.14l-4.24,-1.22l-0.63,0.16l-0.26,0.42l0.34,0.35l4.68,1.36l3.6,-0.13l1.84,0.53l2.92,-0.3l-0.46,0.32l0.17,0.46l1.62,0.57l-0.22,0.98l0.31,0.53l-0.63,0.48l0.03,0.66l1.24,0.4l-2.33,1.94l-0.11,0.65l1.07,0.85l-0.05,0.67l-0.91,0.42l-0.09,0.59l0.49,0.51l1.23,0.0l2.02,-0.82l0.44,0.62l0.89,-0.12l0.21,0.83l-0.76,-0.37l-0.57,0.35l-0.55,-0.1l-1.19,1.07l0.01,1.04l0.54,0.48l-0.2,0.21l0.45,2.31l-0.64,0.25l-0.24,1.0l-0.67,0.16l-0.23,-0.59l0.41,-1.02l-0.43,-0.79l-0.46,-0.43l-0.51,0.03l-0.68,-1.1l-0.52,-0.01l-0.49,1.84l0.85,0.45l-0.0,0.55l-0.6,-0.15l-0.59,0.9l-2.81,0.46l-0.45,0.74l2.59,0.74l0.65,-0.22l0.17,0.74l0.51,0.17l0.09,0.79l0.91,0.62l1.29,-1.5l0.66,-0.25l0.36,-0.77l1.21,-0.47l1.07,-1.12l1.06,-0.39l2.45,-0.05l0.18,0.31l1.0,0.05l1.13,-0.61l1.56,0.37l2.39,1.44l-0.25,0.88l0.56,0.73l-0.2,0.96l0.7,0.51l0.02,0.76l0.62,0.21l0.1,0.78l-1.09,2.82l-0.3,1.69l-1.5,1.26l-4.55,1.04l-0.92,0.7l-0.96,0.26l-2.38,1.93l-0.05,0.54l0.53,0.09l2.63,-1.79l1.58,-0.68l5.57,-1.55l1.16,-1.3l0.12,-1.29l0.59,-0.65l0.92,-3.83l1.23,-0.14l0.55,0.33l-0.21,1.28l0.61,1.27l-0.27,0.56l-1.93,1.59l-0.47,1.44l0.69,0.28l1.23,-1.02l0.53,-1.1l0.68,-0.25l0.91,-1.47l0.03,0.6l0.78,0.44l-0.54,1.38l0.29,1.11l-0.67,1.91l0.35,0.5l0.51,0.08l0.32,-0.43l-0.06,-0.74l0.67,-0.95l-0.2,-0.96l0.77,-1.38l0.97,-0.81l0.94,-0.01l0.56,-0.64l1.03,-0.24l0.47,-0.44l0.97,0.09l1.33,-1.93l0.22,0.72l0.53,0.38l0.93,-1.08l1.71,-0.04l-0.09,-0.81l0.53,-1.86l0.35,-0.58l0.87,-0.26l0.09,-1.48l0.46,-0.17l2.36,1.7l0.47,1.03l1.25,0.53l-0.74,1.25l0.18,1.41l-0.92,0.67l0.23,0.89l0.64,0.15l1.59,-2.05l-0.44,-0.65l0.65,-0.92l0.54,-0.07l0.03,-0.7l-1.28,-1.54l-0.64,-0.15l-0.1,-0.75l-0.42,-0.31l0.31,-0.5l1.55,0.22l0.93,-0.4l-0.03,-0.81l-1.42,-0.27l0.68,-0.19l0.31,-0.7l1.23,0.88l0.56,-0.15l0.09,-0.76l-0.68,-0.64l0.15,-0.2l1.95,0.89l0.39,-0.61l-0.18,-0.31l1.39,0.15l0.58,-0.48l-0.51,-0.62l-0.85,-0.04l-0.99,-0.52l-0.56,-0.07l-0.51,0.49l-0.62,-1.03l0.17,-0.63l0.79,0.66l0.25,-0.86l0.81,-0.18l0.27,-0.38l-0.86,-1.2l1.42,1.18l0.49,0.05l0.27,-0.59l-0.85,-1.12l0.62,-0.33l-0.09,-0.47l-0.56,-0.36l0.47,-0.18l1.5,0.3l1.75,1.25l0.58,0.06l0.44,-0.47l-2.24,-1.77l-2.27,-0.6l-1.09,-2.87l1.77,-1.38l2.64,1.21l0.77,0.04l0.42,-0.4l-0.34,-0.51l-1.8,-0.73l0.61,-0.39l-0.13,-0.64l0.73,-0.27l0.04,-0.86l-0.44,-0.48l0.63,-0.34l0.05,-0.83l0.34,-0.02l0.51,-1.1l0.74,-0.26l0.88,0.58l0.91,-0.11l0.29,0.36l-1.11,0.1l-0.1,0.74l-0.31,0.14l-0.92,-0.26l-0.53,0.36l0.72,1.76l1.75,0.44l-0.94,0.22l-0.13,0.7l-0.41,0.27l0.17,1.93l-0.81,0.36l-0.34,0.51l0.05,1.41l2.18,2.07l3.23,-1.16l-1.44,0.97l-0.32,3.6l0.75,1.87l1.21,0.35l0.44,0.48l-0.95,0.11l-2.0,-0.62l-0.71,-0.58l-0.73,-0.01l-0.82,0.49l-0.49,0.75l-0.15,1.38l0.81,0.44l1.24,-0.44l1.32,0.79l2.67,0.06l0.31,1.43l1.22,0.55l0.65,-0.07l1.38,-1.01l1.41,-0.1l0.81,-0.72l1.59,0.57l0.69,0.84l-1.66,0.38l-2.02,0.01l-1.95,0.59l-0.56,1.12l0.29,1.23l0.81,0.5l1.29,-0.53l0.42,0.82l-1.48,0.39l-0.65,0.85l-1.22,0.49l-0.53,1.62l-1.36,0.39l-0.54,0.47l-0.42,1.49l0.43,0.81l1.75,0.31l0.16,1.1l1.55,2.86l0.48,0.13l0.87,-0.48l0.44,1.02l0.65,0.54l0.8,-0.15l0.5,0.6l-0.68,0.49l-0.2,0.61l0.01,1.57l0.47,1.01l-1.21,0.78l-0.4,1.48l0.24,0.8l0.66,-0.02l0.05,0.7l-0.9,0.79l-0.07,1.11l-0.36,0.6l0.11,0.83l-0.93,0.52l-0.05,0.94l-0.79,0.29l-0.5,0.95l0.24,0.91l1.61,1.7l-0.05,0.79l0.37,0.48l-2.22,-0.18l-0.4,0.66l0.61,0.69l-0.21,1.18l0.44,0.56l2.05,0.48l-1.2,0.57l-0.06,1.65l0.5,0.23l0.85,-0.45l0.95,0.82l1.15,-0.02l0.68,0.34l-1.71,0.57l-0.71,0.58l0.82,1.88l0.67,0.35l-0.55,1.39l0.34,0.5l0.43,0.02l-0.02,0.95l-0.96,1.1l0.13,0.56l0.5,0.43l3.4,0.46l-1.84,0.21l-1.01,1.14l0.12,0.73l1.05,0.45l-0.63,1.78l0.25,1.26l-0.2,0.81l-1.85,-0.54l-0.65,1.08l0.1,0.85l-0.72,0.83l1.49,1.49l-1.19,0.52l-1.32,-0.06l-1.24,-1.42l-2.28,-1.14l-0.99,0.03l-0.99,0.83l-1.56,-0.07l0.15,-0.7l-0.34,-0.61l-0.62,-0.24l-1.04,-1.14l-1.82,-0.47l-0.91,0.44l-0.64,1.12l-1.37,0.31l-0.82,-0.24l-0.49,0.29l0.18,1.28l-1.26,-0.26l-0.63,0.35l-1.12,-1.16l-0.53,-1.4l-1.3,-0.32l-0.69,0.2l-1.99,-1.13l-3.11,-3.43l-1.13,-0.28l-0.59,-0.93l-1.0,-0.27l-0.6,0.21l-0.14,0.53l1.36,1.48l-0.6,1.48l0.89,1.56l-0.55,0.81l1.15,1.81l-0.74,0.05l-0.33,0.53l-1.59,-0.77l-0.89,-1.36l-2.56,-1.48l0.12,-0.84l-1.04,-0.45l-0.77,0.12l-0.62,0.8l0.24,0.91l1.73,2.45l1.68,1.34l0.0,0.39l-1.67,1.41l0.07,0.97l-2.04,-1.39l-0.69,0.45l0.07,1.06l-1.2,0.12l-1.31,1.11l0.04,1.19l1.08,1.95l-1.28,0.8l-0.36,1.79l1.94,1.58l0.16,0.71l0.49,0.4l-0.39,0.31l-0.01,0.53l1.8,1.24l0.19,0.81l0.75,0.94l3.11,0.85l0.93,0.91l-0.88,0.76l0.43,1.14l-0.2,2.2l-0.3,-0.35l-2.02,-0.61l-1.68,0.99l0.36,3.09l0.46,0.66l1.64,0.82l0.8,-0.66l0.17,0.98l1.88,1.74l1.66,-0.39l0.06,-1.0l1.1,-0.62l0.23,-1.65l1.09,-0.32l0.67,-0.92l0.94,1.43l-1.01,0.21l-0.11,0.38l0.86,2.26l-0.47,-0.04l-0.45,0.56l0.51,3.42l-0.74,0.07l-0.52,0.96l1.26,2.84l0.93,0.19l0.64,-0.42l0.0,-1.21l1.21,0.87l-0.08,0.89l0.31,0.42l0.82,0.34l1.95,-0.55l1.24,0.15l0.05,1.22l0.69,0.09l1.28,-0.82l1.05,1.09l-0.27,0.9l0.56,1.07l0.72,-0.01l0.16,-0.33l0.71,0.48l0.18,0.66l1.62,0.26l0.67,0.43l0.64,-0.06l0.59,-0.58l0.7,0.11l1.91,2.02l0.85,0.3l1.84,-1.01l0.87,-1.12l-0.73,-3.21l0.61,0.25l0.42,-0.19l0.21,-0.52l-0.33,-0.7l0.15,-0.69l0.94,-0.27l-0.58,-2.05l0.75,-1.06l0.19,-1.12l0.94,1.28l1.81,0.31l0.89,1.74l0.3,1.43l-1.25,-0.3l-0.32,0.52l0.54,0.88l0.67,0.33l67.19,-0.0l0.0,7.0l-0.55,-0.06l-0.08,-0.78l-0.51,-0.28l-2.04,0.34l-1.06,0.55l-0.24,-0.33l-0.7,0.36l-0.52,-0.51l-3.59,2.25l-1.71,0.44l-0.08,-0.58l-0.59,-0.18l-0.41,0.27l-0.04,0.49l-1.16,-0.48l-1.31,0.71l-0.55,-0.19l-0.89,0.71l0.1,0.61l0.51,0.47l-3.89,1.87l0.46,1.89l-0.34,1.11l-0.26,0.25l0.23,-1.34l-0.69,-0.34l-1.21,1.9l-0.72,-0.03l-0.89,1.12l-0.83,0.22l-0.54,1.06l0.16,0.42l-0.48,0.01l-0.72,0.82l-2.26,0.55l-0.96,1.21l0.28,0.64l-1.35,0.74l-0.85,0.08l-0.43,-0.67l-0.7,0.27l-0.85,-0.19l-0.18,0.41l-0.53,0.08l-1.27,-0.11l-0.79,0.45l-0.23,-0.41l-1.01,0.34l-1.18,-0.52l-1.12,0.71l-1.03,-0.21l-1.45,0.47l-1.46,-0.09l-2.24,0.64l-0.43,-0.52l-1.85,0.7l-0.98,-1.23l-3.58,-0.16l-1.85,-0.7l-0.62,0.28l-2.25,-0.12l-0.51,-0.43l-2.17,0.36l-0.91,-0.37l-0.48,0.37l-1.22,-0.01l-0.25,0.59l-1.31,-0.07l-0.7,0.39l-0.68,-0.57l-1.18,0.08l-2.23,-0.78l-1.92,0.13l-1.55,0.51l-1.85,-0.24l-1.15,-0.49l-1.91,0.52l-2.52,0.14l-3.1,-0.22l-0.84,-0.42l-4.81,0.85l-2.27,-0.48l-1.02,0.9l-0.46,-0.24l-0.46,0.64l-0.97,-0.32l-1.04,0.23l-0.57,-0.87l-0.75,0.01l-0.81,0.65l-0.26,0.65l-0.35,-0.18l-0.55,0.35l-1.13,1.59l-1.94,0.77l-0.78,1.85l-0.51,-0.1l-0.61,0.39l-0.58,1.19l0.13,0.94l-0.77,1.49l0.02,1.36l-1.22,1.43l-3.49,0.25l-0.78,0.44l-2.25,-0.16l-1.16,0.46l-0.3,0.69l-1.07,0.11l-0.51,0.38l0.79,0.8l-0.71,0.12l-0.55,-1.09l-0.93,-0.04l0.27,1.02l-1.75,0.8l-1.05,1.74l-0.85,0.11l-1.92,1.61l-0.93,0.31l-0.82,2.14l-0.95,0.24l-0.66,1.74l-1.49,2.03l-1.35,0.74l-0.89,1.12l-1.06,-0.15l-1.68,-1.5l-1.72,0.01l-2.34,-1.31l-3.21,-0.24l-0.72,-0.52l-2.35,-0.43l-1.01,0.27l-0.29,0.47l0.45,0.32l0.82,-0.09l0.9,0.39l-0.3,0.6l0.54,0.68l1.34,-0.4l2.57,-0.02l3.23,1.45l2.1,0.17l0.71,0.91l0.99,0.39l-1.7,4.02l-2.13,1.48l-0.66,0.94l-0.28,1.13l-2.62,0.76l-1.11,2.49l-1.15,1.64l-2.43,1.21l-2.38,2.09l-0.53,0.87l-0.94,0.56l-3.69,0.88l-1.85,-0.17l-1.29,1.01l-2.21,0.71l-0.41,1.12l-1.96,0.8l-1.45,1.3l-2.35,0.42l-1.6,0.71l-0.41,1.35l-1.4,0.49l-1.07,2.21l-1.54,1.66l-3.33,1.07l-2.44,2.32l-1.14,0.0l-0.71,-0.52l-1.11,0.06l-0.79,-0.59l-2.88,-1.06l-1.15,0.3l-1.7,-0.06l-1.21,0.53l-2.39,0.26l-4.05,1.36l-0.92,0.93l-0.62,0.07l-1.98,-1.6l-1.93,-0.06l-0.85,0.61l-2.96,-1.14l-0.77,-1.81l-0.5,-0.46l-0.48,-1.66l-0.79,-0.3l-0.75,0.11l-0.33,0.31l-0.07,0.93l-1.17,-0.42l-1.43,-0.99l-0.36,-1.12l-0.71,-0.76l-3.21,-1.71l-10.67,-2.01l-0.34,-0.66l-2.11,-1.64l-2.0,-3.67l-2.73,-3.4l-0.12,-2.35l-1.29,-1.87l0.61,-2.2l-0.08,-43.02l1.16,2.08l0.74,-0.26l-0.06,-0.93l-1.84,-2.37l-0.2,-7.56l1.75,-1.35l0.35,0.24l-0.18,1.28l0.46,0.31l1.33,-0.14l0.92,0.78l0.68,2.24l-0.11,1.04l0.7,0.77l1.09,0.06l-0.01,-0.47l-0.66,-0.77l0.07,-0.61l0.78,-1.14l-0.41,-0.34l0.67,-0.76l0.82,-0.11l0.3,-0.67l-0.55,-0.39l-0.66,0.0l-0.0,-1.4l-1.22,-0.61l-0.8,-1.21l0.67,0.04l1.06,-0.73l0.13,-0.61l-0.47,-0.79l1.24,-0.38l1.65,-1.83l0.66,-1.37l-0.1,-0.51l0.88,0.19l0.5,-0.49l-0.56,-0.64l-0.66,-0.15l0.27,-0.55l-0.11,-1.61l-0.44,-1.01l-0.46,-0.4l-1.16,-0.24l0.15,-0.46l-0.67,-0.78l-0.24,-1.11l0.65,-0.61l-0.14,-0.54l0.38,-0.36l-0.25,-0.69l-1.46,0.1l-0.02,-0.38l0.52,-0.04l0.35,-0.5l-0.84,-0.91l-0.67,0.1l0.06,-0.75l-0.26,-0.16l0.68,-1.93l-0.54,-0.85l-0.1,-1.56l-0.61,-0.89l0.38,-0.23l0.47,-1.21l-0.83,-0.87l-0.53,-1.57l0.22,-0.79l0.95,0.32l0.41,-0.19l-0.3,-0.81l-0.96,-0.33l0.28,-0.68l-0.51,-0.53l0.45,-0.05l0.38,-0.62l-1.65,-1.17l0.69,-0.76l-0.05,-0.71l-0.78,-0.13l-1.16,0.33l-0.61,-0.34l0.34,-0.43l-0.16,-0.47l-1.29,-0.25l-0.56,-1.21l0.36,-0.5l-0.91,-1.34l0.06,-1.31l-1.2,-0.75ZM728.39,460.32l0.32,0.16l0.13,-0.04l-0.18,0.18l-0.28,-0.3ZM783.01,554.73l-0.41,-0.84l0.24,-1.33l0.43,-0.45l3.74,-0.76l0.71,-0.54l0.43,0.65l1.76,1.01l-4.66,0.44l-1.34,0.75l-0.9,1.07ZM678.45,646.78l2.84,0.97l0.77,0.84l-1.43,0.14l-0.68,0.71l-1.12,0.5l-0.98,-0.9l0.6,-2.25ZM786.15,488.18l0.01,-0.03l0.06,-0.31l0.06,0.1l-0.13,0.24ZM775.87,441.93l0.09,-0.41l0.64,0.24l-0.36,0.06l-0.37,0.11ZM777.27,441.76l0.04,-0.06l0.27,0.05l-0.15,0.01l-0.16,-0.01ZM766.94,458.28l-0.18,-0.07l0.0,-0.08l0.02,0.01l0.15,0.14ZM745.71,471.94l-0.15,-0.35l0.03,-0.86l0.34,-0.64l0.23,0.28l-0.45,1.56ZM717.83,430.82l-0.08,-0.13l0.06,0.02l0.02,0.11ZM805.4,622.77l0.03,-0.04l0.2,-0.09l-0.04,0.11l-0.19,0.02ZM779.53,590.17l3.13,-0.59l1.93,0.72l8.3,1.48l5.95,2.36l1.33,1.38l1.39,0.45l0.68,0.7l3.21,0.81l1.84,2.28l-1.01,0.65l-4.36,0.03l-2.49,-0.9l-1.86,-0.15l-4.12,-1.09l-1.93,-1.09l-2.76,-0.87l-0.75,-1.64l-2.97,-2.2l-3.82,-1.38l-0.73,-0.64l-0.57,0.21l-0.41,-0.51ZM677.39,652.76l1.73,-1.5l3.34,-0.87l2.69,-2.14l2.25,-0.14l0.35,-0.61l-0.21,-1.04l0.61,-0.86l0.12,-1.22l2.3,-2.36l0.58,-1.86l0.98,-0.21l1.07,-0.83l2.25,-0.56l2.4,-2.34l2.27,-0.78l0.86,-1.33l1.69,-0.51l1.5,-1.22l1.52,0.43l4.19,-1.45l1.03,-0.55l0.54,-0.71l1.29,-0.09l1.13,-0.63l1.35,-0.2l0.58,-0.55l2.03,-0.75l1.53,-1.39l1.92,-2.52l1.29,-0.79l0.7,-1.59l1.04,-0.63l3.48,-3.69l0.19,-0.86l0.95,-1.21l1.21,-0.49l2.78,-2.66l2.33,-1.71l0.97,-0.13l5.25,-3.43l2.48,-0.78l4.19,-2.08l1.3,-0.19l8.07,-3.22l4.09,-1.12l6.59,-0.76l6.02,0.61l1.41,0.39l2.66,1.17l3.25,2.57l-0.0,0.44l-2.7,-0.91l-0.81,0.3l0.42,0.52l-0.22,0.37l0.28,0.37l0.93,-0.06l0.09,0.55l1.05,0.34l0.94,1.01l-0.68,1.01l0.61,0.73l-0.77,0.38l-0.28,0.59l-3.82,1.05l-0.66,1.73l-1.83,0.24l-0.27,0.79l-2.9,1.42l-1.33,0.12l-0.69,-0.62l-2.84,-0.82l-0.84,-0.6l-0.4,-0.85l-1.96,1.64l-4.1,-0.24l-0.8,0.76l-3.54,0.93l-0.76,1.0l-0.92,-0.2l-1.15,0.54l-1.3,-0.14l-0.56,0.43l-1.96,-0.89l-0.47,-0.86l-5.1,0.0l-0.4,0.4l0.0,0.5l-2.29,0.0l-0.4,0.4l-0.2,4.8l-1.68,1.4l-4.31,1.47l0.11,-1.06l-0.26,-0.45l-1.88,-0.49l-0.72,0.37l-7.57,9.5l-0.7,3.64l-1.21,0.91l-0.96,1.93l0.36,0.96l-0.57,0.5l-0.16,1.53l0.56,0.63l-1.5,1.4l-0.0,1.05l-1.51,0.66l-1.21,1.17l-0.56,1.07l0.11,0.65l-0.99,0.37l-0.4,1.55l-0.46,-0.76l-0.63,-0.14l-1.67,1.26l-1.59,-0.58l-1.43,0.84l0.1,0.81l-0.93,1.87l-29.88,0.18ZM747.54,470.81l0.24,0.71l-0.2,0.53l-0.37,-0.37l0.33,-0.87ZM730.29,461.72l0.35,-0.91l-0.45,-0.91l1.67,0.16l0.2,0.28l-0.25,0.29l-1.52,1.09ZM712.9,628.81l0.26,-0.17l1.02,-0.9l-0.3,0.44l-0.98,0.64ZM684.77,646.87l0.89,-0.44l1.39,-1.53l-0.5,1.94l-0.35,0.33l-1.43,-0.29ZM684.31,645.85l0.83,-0.76l0.4,-0.21l-0.55,0.78l-0.69,0.19Z", "name": "Qu\u00e9bec"}, "CA-PE": {"path": "M780.35,632.09l0.01,-0.65l1.24,-1.21l0.43,-1.02l1.68,-1.41l0.21,1.13l-1.04,1.16l-0.06,0.67l0.47,0.48l0.65,0.09l0.79,0.87l-0.03,0.71l0.46,0.28l-0.69,0.57l-0.1,0.7l1.04,-0.01l0.35,0.53l-0.93,-0.3l-0.66,0.28l-0.85,-0.11l0.03,-1.02l0.51,-0.7l-0.3,-1.2l-0.9,0.44l-0.91,-0.41l-1.39,0.1ZM786.99,635.24l0.51,-0.33l-0.06,-1.25l1.2,0.27l0.99,1.02l0.64,-0.56l0.42,0.11l0.29,0.59l1.01,0.6l0.43,-0.27l3.46,0.14l0.83,-0.37l1.74,0.23l0.8,-0.58l4.68,0.04l-1.69,0.8l-0.41,-0.35l-0.99,0.18l-0.44,0.4l0.09,0.28l-0.41,0.08l0.01,0.35l-0.83,0.05l-0.11,0.58l-0.89,0.0l-0.12,1.3l0.78,0.73l0.51,0.05l-0.93,0.32l-0.26,0.45l0.34,0.39l-1.85,0.13l-0.7,-0.18l-0.28,-0.41l-0.23,-0.67l0.35,-1.0l-1.18,-0.81l-0.84,0.08l1.09,-0.92l0.07,-0.44l-0.38,-0.23l-1.74,0.88l-0.9,-0.15l-0.01,0.58l-0.87,0.56l0.11,0.23l-1.78,-0.83l-1.83,-0.21l-0.61,-0.74l0.34,-0.2l-0.37,-0.89Z", "name": "Prince Edward Island"}, "CA-MB": {"path": "M404.01,601.42l-6.46,-93.09l-0.01,-61.3l72.4,-0.0l0.4,2.81l-0.49,2.15l0.42,1.19l-0.09,0.8l0.59,1.12l0.12,1.63l-0.53,0.71l-0.18,2.6l-1.74,0.19l-0.3,0.97l1.86,-0.06l0.36,0.73l0.83,0.32l0.05,0.49l-0.51,0.84l0.06,1.05l1.5,-0.67l1.05,0.77l0.66,1.57l0.64,0.19l1.17,-0.52l0.27,0.45l-0.51,0.42l-0.49,1.2l0.2,2.09l-0.46,0.78l-0.23,2.68l0.71,-0.08l1.31,-2.62l-0.11,-3.0l0.8,-1.16l0.19,-1.06l2.51,0.15l1.68,-0.49l1.39,0.41l0.5,-0.13l0.34,0.79l0.72,0.21l0.96,-0.83l1.23,0.14l0.34,3.33l3.19,6.5l0.43,3.66l0.43,0.13l1.13,2.2l0.53,1.71l1.07,1.51l0.31,1.3l-0.31,1.67l-1.38,2.46l-1.06,1.31l-1.61,0.5l-0.31,0.35l0.23,0.41l1.91,-0.18l2.38,-1.6l1.46,-0.27l-1.57,0.93l-0.22,0.46l0.55,0.37l1.28,-0.33l1.28,-0.93l2.62,-0.55l9.38,-2.95l4.35,0.49l1.74,0.6l0.39,0.51l3.07,1.35l1.08,0.81l4.99,1.23l0.96,-0.07l3.39,1.19l-23.84,21.29l-22.83,22.07l-15.62,12.81l-0.18,51.35l-62.41,0.0Z", "name": "Manitoba"}, "CA-YT": {"path": "M0.4,287.52l0.88,0.33l0.65,-0.21l4.18,0.65l4.93,-0.36l2.19,0.84l3.32,0.52l0.75,0.5l1.52,0.07l1.43,1.58l2.3,1.14l1.84,2.16l0.61,-0.19l1.1,0.33l0.66,-0.72l1.25,1.54l1.42,0.83l6.6,2.28l2.41,1.14l2.2,0.03l2.7,1.26l0.97,0.04l1.72,-0.67l-0.0,20.53l0.34,1.46l1.62,0.52l0.66,0.91l0.21,0.96l-0.33,1.67l0.72,0.61l0.33,1.19l-0.32,1.08l-0.92,0.63l-0.18,0.51l0.31,0.63l-0.12,1.41l0.58,1.06l0.4,0.23l20.79,0.0l0.08,0.79l1.91,0.9l1.24,1.49l-0.71,1.13l0.72,0.83l-0.1,0.71l1.45,1.26l-0.56,0.52l0.26,1.05l-0.89,0.3l-0.7,2.3l0.55,0.74l1.66,-0.08l0.36,0.37l0.02,1.53l-0.93,0.53l-0.5,1.01l0.34,0.61l0.55,0.12l0.09,1.37l2.69,0.47l0.73,-0.65l1.51,-0.53l2.11,-0.2l-0.7,1.14l0.07,0.57l0.85,0.34l1.44,-0.31l0.37,-0.8l1.44,-0.94l0.44,0.02l0.74,0.83l1.24,-0.22l-1.96,1.09l-0.39,1.05l0.33,0.47l1.81,0.99l1.85,2.64l-0.88,0.57l-0.58,1.71l-2.01,1.5l-0.35,1.11l-0.81,0.17l-0.56,0.67l-0.74,0.08l-0.13,0.6l-0.07,0.64l0.53,0.48l0.72,0.21l1.15,-0.53l0.07,1.33l0.89,0.39l0.97,-0.01l0.13,0.31l-1.56,0.98l-0.19,0.58l0.32,0.97l-1.14,0.55l-0.19,0.81l0.79,0.94l0.98,-0.18l1.48,0.24l1.59,1.01l1.06,0.16l1.14,1.6l0.97,0.71l1.33,0.3l-1.13,1.36l-0.18,0.91l0.42,0.38l1.33,-0.24l0.93,0.38l1.92,-0.81l0.35,-0.74l2.13,0.6l1.14,1.31l-0.39,0.46l0.22,0.62l0.7,0.18l0.57,0.99l-0.36,0.89l0.85,1.02l-0.04,0.45l0.43,0.36l0.53,-0.13l-0.0,0.58l0.51,0.61l1.72,0.81l0.51,-0.08l1.55,1.36l1.69,0.69l-0.99,0.46l-0.37,0.52l0.04,0.48l0.69,0.67l0.68,0.04l0.75,-0.39l0.24,0.91l1.29,0.2l0.15,0.62l0.61,0.25l0.44,0.94l-0.69,0.6l-0.02,0.94l-2.09,0.89l-0.4,1.08l0.38,0.51l0.86,-0.09l0.77,0.97l0.58,0.05l0.83,1.82l1.13,0.45l1.02,-0.16l-0.53,0.51l-1.17,2.5l1.34,1.7l0.25,1.04l0.94,0.47l0.17,0.6l-0.56,0.41l0.18,0.71l1.33,-0.19l1.01,0.76l1.33,0.46l-0.82,0.21l-0.4,0.88l0.46,0.67l-0.5,0.96l0.87,1.65l-0.67,0.51l0.04,0.53l1.84,0.79l1.31,-0.3l1.13,0.3l0.28,0.66l0.92,0.29l1.16,-1.01l1.06,-0.04l1.46,1.2l0.12,0.73l1.07,0.7l0.62,1.46l0.57,0.26l0.81,-0.15l0.68,1.05l0.32,1.33l0.84,0.37l1.02,1.01l1.05,0.34l0.49,0.69l1.24,0.57l2.5,-0.11l1.38,0.74l0.19,0.91l0.57,0.46l0.56,2.66l-0.12,0.92l-0.68,0.37l-0.14,0.6l0.67,0.73l0.99,-0.35l0.46,3.89l0.84,0.91l0.77,-0.41l1.15,0.55l1.49,-1.02l0.98,0.53l1.44,-0.02l0.61,-0.25l0.35,-0.51l-0.07,-0.52l0.38,-0.03l0.33,0.7l1.04,0.27l0.46,-0.19l0.79,-1.22l1.73,0.92l3.75,0.8l1.94,-1.05l2.97,-0.11l0.44,-0.49l0.27,-1.17l1.93,0.06l0.94,2.23l-1.2,1.01l-0.13,0.89l1.67,1.76l0.43,1.38l1.99,0.25l0.2,1.93l2.15,3.46l-0.44,1.03l-152.53,0.0l-1.0,-0.9l1.16,-3.56l-0.59,-0.8l-6.11,0.29l-2.96,2.11l-4.5,-1.6l-0.61,0.11l-0.63,0.99l-4.25,-1.1l-0.06,-154.24ZM18.11,287.95l1.15,-0.6l1.05,0.43l-1.25,0.9l-0.95,-0.73Z", "name": "Yukon"}, "CA-NB": {"path": "M733.04,624.2l4.53,-1.55l1.89,-1.53l0.44,-0.96l0.01,-4.03l2.29,0.0l0.4,-0.4l0.0,-0.5l4.36,0.0l0.29,0.75l1.85,0.7l0.57,0.57l0.46,-0.08l0.32,-0.6l1.27,0.12l1.18,-0.54l1.22,0.38l0.66,-1.25l1.53,0.1l3.37,-1.1l0.63,0.74l5.46,1.6l1.39,3.37l0.62,-0.05l0.46,-0.54l1.05,-0.15l1.14,-0.99l1.51,-0.72l0.97,-0.2l0.31,0.74l2.01,-0.44l-0.29,0.4l0.82,0.57l-0.29,0.91l-0.85,0.91l0.04,0.71l-0.41,0.71l0.29,0.43l-0.61,1.41l-0.6,0.15l-0.95,1.01l-2.29,1.29l-0.32,0.48l0.36,0.4l1.25,0.08l0.49,0.45l1.62,-0.59l0.66,0.42l1.15,-0.39l0.18,0.76l-0.82,0.84l-0.19,0.63l0.79,1.9l-0.27,0.75l0.4,0.43l0.43,-0.24l0.67,0.24l0.13,2.43l0.82,0.51l-0.07,0.53l-0.62,0.22l-0.22,0.46l0.71,0.35l0.8,-0.15l-0.04,1.04l0.6,0.32l2.88,-0.08l0.91,0.83l1.93,-0.18l1.15,0.43l-0.47,0.37l-1.74,-0.01l-0.37,1.05l-0.71,0.29l-0.96,1.19l-0.92,-0.3l-0.8,1.3l-0.66,-1.51l-0.4,0.12l-0.89,-1.07l-0.29,-0.94l-1.03,-0.48l-0.18,0.69l1.79,2.62l-1.69,2.51l-1.45,0.04l-0.96,0.89l-3.2,1.24l-4.28,2.59l-0.61,-0.12l-1.0,0.63l-0.58,-0.15l-0.85,-0.85l0.88,-0.84l-0.14,-1.2l-0.69,0.08l-0.76,1.07l-1.08,0.47l0.15,0.8l0.6,0.49l-0.28,0.4l-1.39,-0.19l-0.41,0.31l0.16,0.44l-0.87,0.6l-0.32,-0.54l-0.56,-0.13l-2.43,0.96l-0.27,-0.35l-0.55,0.16l0.08,-0.44l-1.25,-0.83l-1.11,0.46l-0.24,0.51l-0.27,-0.92l-0.72,-0.57l-1.2,0.47l-0.28,0.46l-1.14,-1.18l0.45,-1.27l-0.6,-1.22l0.49,-0.37l0.18,-0.72l-0.5,-1.66l-0.34,-0.3l-0.58,0.28l-0.1,0.45l-0.65,-0.06l-1.35,-0.99l-0.27,-0.55l0.21,-0.58l-0.21,-0.47l0.37,-0.68l-0.27,-0.49l-0.35,-14.51l-1.89,-1.9l-2.8,-1.89l-1.2,0.03l-0.66,0.8l-1.09,-0.1l-1.31,0.76l-1.15,0.11l-1.29,0.58l-1.18,-0.66ZM777.85,617.47l-0.38,-0.62l0.06,-0.07l0.84,0.15l-0.52,0.54ZM755.14,657.15l0.29,-0.75l0.21,-0.28l0.23,0.93l-0.73,0.1Z", "name": "New Brunswick"}, "CA-NL": {"path": "M831.3,616.16l0.78,-0.31l1.41,-1.48l2.05,-1.11l2.53,-2.15l0.62,-0.99l1.81,-0.66l0.68,-0.77l1.42,-0.34l0.18,-0.49l-0.41,-0.38l-2.45,0.29l-1.41,-0.57l0.26,-1.73l1.22,-1.88l0.46,-1.77l0.64,-0.87l0.55,0.37l1.56,-0.11l1.22,1.18l2.07,0.07l0.07,-0.72l-1.61,-0.3l-0.76,-1.06l1.97,0.02l0.86,-0.85l0.01,-0.5l-0.98,-0.04l0.22,-0.76l-0.45,-0.15l-0.99,0.36l-1.55,-0.37l0.11,-1.59l1.85,-1.78l0.39,0.19l0.23,1.2l0.47,0.31l0.44,-0.09l-0.12,-0.87l1.13,0.59l0.78,-0.21l-0.07,-0.51l-1.0,-0.63l-0.41,-0.76l-0.47,0.19l-0.29,-0.36l-0.16,-1.22l3.31,-6.03l1.19,-3.48l1.35,-2.3l1.28,0.21l0.77,-0.46l-0.15,-0.7l-0.71,0.02l-0.71,-0.51l2.19,-1.0l1.62,-1.71l0.16,-0.51l-0.51,-0.54l0.64,-0.32l0.48,-1.35l0.71,-0.41l0.55,-2.19l8.09,-4.02l0.06,1.51l2.56,0.39l0.84,-0.45l-0.89,-1.02l0.82,0.2l0.62,-0.47l0.2,0.47l-0.39,0.0l-0.32,0.64l0.6,0.51l-0.18,0.58l-0.44,-0.13l-0.75,0.89l-1.59,-0.38l-0.83,0.11l-1.39,-0.49l-0.79,0.14l-0.36,0.4l-0.07,0.59l0.72,0.51l-0.32,0.41l0.04,0.71l1.26,1.04l1.27,-0.95l0.6,0.12l0.07,1.35l-0.68,0.19l0.09,0.62l-0.79,1.43l-1.75,2.05l0.18,-1.68l-0.45,-0.5l-0.85,0.53l-0.16,1.7l0.53,1.41l-1.21,1.42l-0.87,0.4l0.32,0.49l-0.92,1.01l-0.88,-0.07l-0.23,0.66l0.61,0.38l-0.1,0.35l-0.75,1.34l-0.74,0.72l-0.65,0.06l-0.02,0.7l-0.69,0.63l-0.55,1.32l-0.07,0.51l0.34,0.37l-0.18,0.66l-1.29,0.88l0.17,0.67l0.97,0.24l-0.65,2.37l0.79,-0.12l2.83,-3.84l0.53,-0.36l0.19,0.31l0.67,0.02l0.1,-0.58l0.46,-0.03l-0.05,-0.89l0.41,-0.8l1.66,-1.64l0.32,0.56l-1.14,1.82l-0.05,0.49l0.46,0.17l1.28,-1.09l0.07,0.36l0.78,-0.06l0.34,-0.72l1.92,1.43l0.52,-0.06l0.46,-0.51l1.46,-0.29l-2.36,1.57l-2.99,1.03l-1.58,1.69l-0.22,0.72l0.1,0.35l0.64,0.12l1.24,-1.26l0.9,-0.04l-0.45,0.76l0.27,0.29l-1.4,0.66l-0.83,1.01l0.35,0.61l3.1,-1.22l0.26,0.08l0.03,0.84l0.67,-0.01l0.5,0.87l0.71,-0.23l0.73,0.44l0.73,-1.28l0.35,0.46l-0.42,0.38l-0.0,0.49l1.81,0.66l0.34,-0.56l0.06,0.69l-1.49,1.32l0.53,0.91l-0.6,0.53l-0.04,0.47l0.57,0.15l2.03,-1.03l0.16,-0.41l-0.49,-0.39l-0.48,0.18l0.25,-0.62l1.47,-0.79l0.29,0.7l1.07,-0.83l1.48,0.17l0.85,-0.69l1.46,-2.08l0.05,0.51l0.59,-0.04l-0.2,2.13l0.51,0.35l1.01,-0.96l0.29,-1.15l0.69,0.17l0.07,0.41l0.72,0.09l1.26,-1.16l0.47,0.41l0.99,-0.23l4.31,2.25l-0.76,1.15l-0.7,0.31l-0.1,0.37l0.43,0.49l-2.54,0.28l-0.03,0.39l-0.55,0.3l0.17,0.7l-0.72,0.26l-0.26,0.81l-1.96,0.47l-0.4,0.82l0.46,0.4l1.6,-0.54l-0.25,0.51l0.8,0.43l-0.01,0.72l0.4,0.59l-0.46,0.51l0.15,0.64l0.83,-0.24l0.82,0.1l-2.16,0.93l-1.04,0.08l-0.6,0.46l-0.01,0.69l0.36,0.5l0.94,-0.69l0.9,-0.01l0.53,-0.38l0.08,0.62l0.72,0.26l0.83,-1.11l0.63,0.36l0.5,-0.26l0.05,0.41l0.51,0.04l1.08,-0.83l0.82,-1.85l0.48,0.07l0.23,0.76l0.79,0.39l0.52,-0.2l1.5,-1.74l0.29,0.99l-0.74,1.63l-1.04,0.76l-0.69,-0.38l-1.01,0.03l-0.47,1.26l-1.47,0.7l-0.9,0.84l-1.8,-0.34l-0.73,-0.56l-0.51,0.12l-0.3,0.78l0.54,1.75l-0.22,0.68l1.74,0.57l1.1,-0.29l-0.44,0.77l-0.72,-0.03l-0.41,0.4l0.58,0.5l-0.3,0.56l-1.13,-0.92l-0.49,0.26l0.09,0.61l0.8,1.17l-0.11,0.57l0.86,1.07l0.97,0.59l0.05,0.77l1.33,-0.08l0.5,-0.23l0.11,-1.01l0.6,-0.91l-0.14,-0.77l0.72,-1.37l0.75,-0.36l0.63,-1.55l1.06,-0.5l0.8,0.17l0.87,-0.64l-0.16,0.62l-0.9,0.96l-0.15,0.95l-1.26,1.38l0.16,1.05l-0.83,0.63l0.08,1.25l0.62,0.25l0.01,1.3l1.26,0.26l2.2,-1.79l0.72,-1.07l0.4,-1.72l0.34,0.16l-0.08,1.11l0.54,0.28l-0.24,1.26l0.42,0.3l-0.36,0.24l0.09,0.73l-0.65,1.15l-0.48,0.11l-0.83,2.7l-0.58,0.13l-0.23,0.39l0.72,0.64l-0.25,1.13l-0.47,1.74l-0.83,0.68l-0.42,0.95l-0.82,0.35l-0.48,-1.03l-0.57,-0.38l-0.56,0.34l-0.29,-0.36l-1.94,1.51l-0.42,-0.58l0.3,-1.24l1.18,-1.2l-0.53,-1.37l-0.75,-0.25l1.12,-1.33l-0.83,-1.53l-0.47,0.22l-0.28,0.61l-0.53,-0.01l-0.58,1.13l-0.66,0.3l-0.53,0.97l-1.32,1.31l-0.85,0.56l-0.91,-0.15l0.35,-1.75l1.4,-2.8l0.88,-0.3l-0.47,-0.6l0.92,-0.8l-0.13,-0.48l0.95,-0.65l-1.0,-0.63l0.14,-1.64l-0.51,-0.61l-0.27,-1.6l-0.52,-0.96l-0.47,-0.03l-0.45,-0.76l-0.58,0.42l-0.32,-0.43l-1.39,-0.23l-0.03,0.47l0.64,0.59l-0.62,1.42l-0.7,0.23l-0.24,1.15l-0.59,-0.06l-2.23,2.75l-0.28,-0.18l-0.5,0.45l-0.47,-0.76l-0.81,0.22l-2.08,2.62l-0.96,0.6l0.53,1.17l-0.23,0.23l-0.45,-0.34l-0.46,0.23l-0.05,1.06l-0.42,0.79l-1.02,0.06l-0.39,0.54l-1.09,-0.98l-1.64,1.04l-1.65,-0.1l-1.03,-0.72l0.97,-1.16l3.88,-0.84l2.03,-1.78l0.45,-1.81l0.74,-0.6l2.88,-0.94l0.58,-0.53l0.01,-0.55l1.53,-0.96l-0.29,-0.39l-1.06,-0.09l-1.17,0.76l-1.03,0.2l1.03,-1.57l-0.14,-0.78l-0.93,0.55l-0.9,1.33l-0.09,-0.26l-0.79,0.27l-1.32,-0.41l-0.11,-0.47l-0.51,-0.32l-0.83,0.31l-0.48,1.29l0.62,1.01l0.0,0.62l-1.29,0.49l0.18,-0.71l-0.37,-0.47l-0.39,-0.15l-0.9,0.56l-0.11,-0.37l0.18,-0.51l-0.24,-0.14l1.23,-0.5l0.24,-0.4l-0.3,-0.35l-0.75,-0.0l-1.36,0.68l-0.51,-0.22l0.71,-0.54l0.54,-2.08l0.38,-0.32l0.12,-0.53l-0.66,-0.64l-0.86,0.88l-0.48,1.47l-1.24,0.48l-0.05,-0.43l-0.57,0.02l-0.34,-0.75l-0.41,-0.18l-0.32,0.31l0.19,1.11l-0.38,1.0l-0.52,0.3l-0.09,-1.17l-0.35,-0.39l-0.73,1.02l0.14,0.81l-4.31,-0.2l-0.04,1.18l-1.93,-0.67l-1.35,0.22l-0.41,-0.79l-1.47,0.53l-0.38,-0.69l-2.11,-0.08l-0.91,0.54l-0.98,-0.63l-0.84,0.28l-0.78,-0.83l-0.81,0.3l-1.4,-0.28l-1.3,0.47l-0.55,-0.21l0.62,-0.68l-0.42,-0.33l-1.19,0.32l-0.54,1.11l-1.09,-0.3l-0.81,0.6l-0.97,0.23l-2.08,-0.01l-2.26,0.52l-1.26,-0.62l0.19,-1.4l-1.19,-1.91ZM888.28,606.18l0.01,-0.02l0.0,0.02l-0.02,0.01ZM835.69,607.65l-1.09,-0.04l-1.59,0.46l1.99,-1.44l0.69,1.02ZM873.54,596.16l-0.17,-0.78l0.3,0.07l0.31,-0.43l0.08,0.37l-0.52,0.76ZM896.48,613.68l0.01,-0.01l-0.0,0.0l-0.0,0.0ZM896.71,613.33l0.17,-0.26l0.09,0.12l-0.26,0.14ZM887.46,612.95l0.76,-0.05l0.36,0.19l-0.81,0.06l-0.32,-0.2ZM889.38,613.21l0.97,-0.46l0.02,0.03l-0.2,0.55l-0.79,-0.12ZM883.28,593.64l-0.04,-0.42l1.08,-0.27l0.41,-0.79l0.37,0.37l0.05,0.38l-1.87,0.73ZM883.03,622.2l0.15,-0.14l-0.07,0.14l-0.08,-0.01ZM879.54,593.97l0.0,-0.03l0.09,-0.01l-0.04,0.02l-0.05,0.01ZM871.9,562.79l0.22,-0.34l0.1,-0.04l-0.18,0.33l-0.14,0.05ZM869.73,578.55l0.25,-0.06l0.26,-0.11l-0.31,0.29l-0.2,-0.12ZM747.14,527.75l1.27,-0.17l0.34,-0.32l0.12,-0.95l1.76,1.28l0.5,-0.1l0.35,-0.44l-0.16,-0.89l0.97,-0.53l0.78,-1.15l-0.15,-1.04l-1.76,-1.41l-1.56,-2.2l0.0,-0.65l0.58,0.05l-0.19,0.5l0.23,0.43l2.77,1.57l0.66,1.2l1.89,0.99l1.14,0.12l0.28,-0.59l0.85,-0.4l0.1,-0.47l-1.15,-1.8l0.52,-0.29l0.07,-0.55l-0.98,-1.47l0.16,-0.76l0.55,-0.44l-0.1,-0.51l0.45,-0.03l3.52,3.63l2.17,1.23l1.74,-0.01l0.36,1.2l1.68,1.62l0.75,-0.44l0.74,0.29l0.82,-0.13l0.55,-0.55l-0.08,-0.74l2.11,-0.38l1.14,-1.44l1.4,0.34l0.99,1.14l0.59,0.19l-0.12,0.68l0.39,0.71l2.21,0.13l1.18,-0.9l0.43,0.05l1.97,1.02l0.63,1.03l0.78,0.48l1.7,0.12l1.01,-0.54l0.5,0.2l0.53,-0.24l0.07,-0.68l-0.62,-0.92l-1.0,-0.67l0.66,-0.55l-0.14,-0.88l0.24,-0.52l1.24,0.56l0.92,-0.23l0.34,-1.28l-0.15,-1.87l0.36,-0.79l0.88,-0.21l0.58,-0.89l-0.43,-0.49l-1.41,0.35l-0.6,-0.16l0.83,-0.21l0.29,-0.52l1.99,-0.48l0.07,-0.94l-0.39,-0.31l-3.9,-0.38l0.64,-0.47l0.22,-0.71l0.04,-1.17l-0.58,-0.7l0.32,-1.4l-0.72,-0.51l-0.73,-1.14l3.62,-1.24l0.37,-0.45l-0.15,-0.47l-3.79,-0.36l-0.12,-0.78l-0.45,-0.36l-1.33,0.58l0.12,-0.54l1.21,-0.55l0.05,-0.7l-0.8,-0.63l-1.41,-0.09l-0.2,-0.33l0.02,-1.32l1.29,0.09l1.17,-0.62l-0.11,-0.54l-0.6,-0.36l-0.11,-1.08l-1.7,-1.94l0.27,-0.53l0.89,-0.33l0.06,-1.03l1.05,-0.2l0.32,-0.42l-0.44,-0.87l0.49,-0.85l-0.11,-0.8l0.81,-0.57l0.54,-2.08l-1.0,-1.09l1.34,-0.95l-0.54,-1.34l-0.0,-1.41l1.4,-1.15l0.42,-1.13l-0.47,-0.7l-0.76,0.13l-0.36,0.64l-0.39,-0.55l-1.25,-0.05l-0.61,-1.08l-0.84,-0.22l-0.48,0.41l-1.25,-2.52l-0.09,-1.03l-2.09,-0.57l0.33,-1.16l1.84,-0.78l0.48,-1.55l1.05,-0.34l0.65,-0.85l1.27,-0.15l0.54,-0.65l0.02,-0.54l-0.81,-1.31l-0.41,-0.09l-1.11,0.56l-0.35,-0.2l0.16,-1.22l1.54,-0.42l3.63,-0.3l0.62,-0.43l0.13,-0.67l-1.04,-1.3l-1.77,-0.71l-0.88,0.21l-0.49,0.55l-1.43,0.11l-1.55,1.03l-0.78,-0.3l0.05,-0.97l-0.72,-0.7l-2.71,-0.07l-1.45,-0.82l-1.1,0.45l-0.06,-0.81l0.73,-0.68l3.12,1.23l1.34,-0.15l0.55,-0.74l-0.74,-1.1l-1.2,-0.33l-0.5,-1.35l0.37,-3.3l1.35,-0.72l0.04,-0.85l-0.47,-0.39l-0.92,-0.04l-2.42,1.17l-0.51,-0.9l-1.13,-0.69l0.02,-0.98l1.02,-0.48l0.19,-0.46l-0.27,-1.56l0.54,-0.41l-0.02,-0.34l0.8,-0.25l0.17,-0.51l-0.3,-0.84l-0.89,-0.24l1.85,-0.75l-0.27,0.23l0.31,0.44l1.14,0.41l-1.11,0.54l0.11,0.67l1.73,-0.33l0.4,-0.78l0.23,0.51l0.69,0.06l-0.66,0.59l0.4,0.4l0.49,-0.01l-0.05,0.61l-0.85,0.25l-0.01,0.61l1.06,1.23l1.29,0.22l-0.88,1.8l0.12,0.62l0.46,-0.01l0.84,-0.67l-0.05,0.57l0.59,0.31l0.97,-0.91l1.01,0.43l-0.54,1.0l-2.41,0.24l-0.32,0.23l0.02,0.74l3.07,0.24l-0.04,0.77l-0.77,0.73l0.44,0.51l1.18,-0.39l0.69,-1.29l0.72,0.04l-0.1,0.8l-0.64,0.35l-0.32,0.66l1.04,0.28l0.81,-0.46l-0.1,0.27l0.6,0.49l-1.54,1.02l-1.58,0.32l-2.39,-0.38l-0.98,1.27l0.45,0.43l0.83,-0.32l0.37,0.96l0.61,0.17l0.36,-0.38l-0.13,-0.74l0.98,0.3l2.17,-0.28l1.32,-0.51l0.35,-0.49l0.44,0.08l0.17,0.2l-0.79,0.39l0.77,0.58l-0.31,1.04l1.01,0.07l-1.04,0.49l-0.13,0.71l1.34,0.09l0.59,0.51l0.53,-0.26l0.29,-0.59l1.32,0.9l-0.06,0.42l-1.21,0.61l0.14,0.62l1.76,-0.01l-0.74,1.02l-2.39,1.31l-1.7,0.09l-0.57,-0.31l-1.18,0.62l-0.3,0.47l0.45,0.32l1.28,-0.19l-2.27,1.96l0.23,0.79l1.92,-0.97l1.58,-1.48l1.1,-0.11l-0.61,0.81l0.37,0.82l1.1,-1.15l0.64,0.21l0.7,-0.57l0.69,-0.11l0.88,0.23l0.44,-0.48l1.01,-0.15l-0.54,0.64l0.23,1.62l-2.36,0.58l-0.48,1.33l-1.48,0.19l-0.34,0.3l0.23,0.47l-1.37,0.63l-0.03,0.64l-1.09,0.38l-0.38,0.63l0.54,0.29l2.03,-0.27l0.58,-0.44l0.07,-0.55l1.09,-0.46l0.38,-0.5l2.8,0.13l0.52,-0.31l0.68,1.21l-1.64,1.02l-0.28,0.65l0.72,0.19l1.62,-0.55l0.24,1.29l0.47,0.24l1.52,-1.09l0.27,0.44l0.67,-0.21l0.29,-0.61l0.36,0.63l-0.7,0.83l0.18,0.71l0.28,0.37l1.0,0.2l0.38,0.62l-0.13,0.41l0.81,0.6l-1.65,0.57l-0.33,0.69l-1.63,-0.04l-0.75,1.11l-1.87,-0.73l-0.29,0.8l1.82,1.18l0.89,0.0l1.41,-0.55l2.44,0.69l-0.43,0.48l0.51,0.46l0.04,0.49l-1.14,0.15l-0.36,0.57l0.24,0.35l1.23,0.45l0.5,0.7l3.91,0.2l0.82,0.51l-0.07,1.18l-1.56,0.41l-1.21,1.33l-0.05,0.81l-2.47,0.25l-0.1,1.63l-0.38,0.22l-3.95,-1.33l3.27,-0.21l0.37,-0.32l-0.83,-0.7l-3.19,0.13l-1.19,-0.29l-0.53,0.28l-0.56,0.98l2.56,1.4l1.94,0.64l-0.6,-0.03l-0.36,0.37l0.27,0.51l2.52,0.48l1.35,-0.07l1.63,0.51l-0.54,0.21l-2.81,-0.3l-1.15,0.76l-0.2,0.71l0.28,0.22l2.06,0.21l0.79,0.3l-0.08,0.24l0.67,0.4l-1.49,0.35l-0.67,-0.32l-0.74,0.18l-0.2,0.59l0.89,0.99l2.53,0.49l1.66,-0.21l0.74,0.33l1.32,-0.25l-0.35,0.68l0.15,0.47l-1.12,1.58l0.71,0.62l0.5,0.32l2.0,0.14l0.71,-0.29l0.31,0.24l-0.85,0.14l-0.25,0.58l1.39,0.83l1.56,-0.31l1.72,0.2l-0.57,0.63l-1.56,0.12l-0.01,0.74l0.41,0.31l2.01,-0.1l0.94,-0.78l0.13,0.74l-0.56,0.49l0.19,0.63l-0.44,1.07l0.72,0.16l0.87,-1.02l0.18,0.75l1.13,-0.46l-0.53,1.16l0.04,0.47l0.3,0.07l-0.4,0.45l0.07,0.72l-0.28,0.42l0.01,0.46l0.76,0.04l-0.04,0.14l-0.82,0.42l-0.5,1.06l-0.61,0.39l-0.14,0.53l0.51,0.17l0.74,-0.42l-0.34,0.56l-1.35,0.79l-0.2,1.48l0.53,-0.07l2.12,-1.62l0.24,-0.63l0.75,-0.11l1.38,-1.14l-0.05,0.7l0.6,-0.0l-1.23,1.02l-0.52,1.02l0.15,0.44l0.46,0.0l2.07,-1.69l0.84,-1.33l0.91,-0.03l0.97,-1.16l0.2,1.03l-1.02,0.59l-1.09,0.03l-0.1,1.05l0.51,0.24l0.61,-0.31l0.87,0.4l0.74,-0.53l0.93,0.24l1.04,-0.57l0.31,0.3l-1.43,1.39l-1.11,0.49l-0.05,0.51l-1.18,0.87l-0.01,1.06l-0.87,0.52l-0.05,0.68l0.26,0.19l1.68,-0.56l0.28,-0.39l-0.07,-1.0l3.22,-2.38l0.26,0.11l0.03,0.8l0.61,0.07l1.26,-0.79l0.34,-0.69l1.24,0.04l0.43,-0.71l0.29,0.14l-0.77,1.28l0.18,0.49l0.65,-0.08l0.33,0.27l-0.89,0.95l0.38,0.4l0.62,0.0l0.32,0.62l1.27,-0.01l0.2,0.52l0.42,0.13l0.34,-0.3l1.15,0.31l0.4,0.47l0.75,-0.15l0.54,0.52l0.58,-0.08l0.18,-0.64l1.21,-0.02l0.51,0.69l1.48,0.08l0.32,0.33l1.37,-0.36l1.78,1.48l2.09,-0.27l0.55,0.7l-0.32,0.43l0.45,0.45l-2.99,0.23l0.13,0.84l1.27,0.05l-0.78,0.43l-2.3,-0.2l-3.11,0.49l-1.0,0.8l0.1,0.66l-2.05,0.31l-2.56,1.2l-1.59,-0.0l-5.2,1.35l-1.25,-0.19l-0.73,0.21l-0.33,0.31l0.11,0.44l0.91,0.66l4.55,-0.77l0.73,0.54l-2.28,0.5l-2.61,1.41l-3.65,-0.25l-0.55,0.25l-0.13,0.45l-1.54,0.44l-0.5,-0.24l-0.57,0.46l0.57,0.73l-0.38,1.25l0.25,0.75l-3.59,-2.13l-3.15,-0.95l-0.38,-0.72l-0.43,-0.15l-0.43,1.17l-0.54,0.47l0.14,0.67l3.12,0.3l5.1,2.6l-2.87,1.36l-0.09,0.89l0.73,0.24l-0.62,0.07l-0.36,0.49l0.41,0.4l2.5,-0.45l0.53,0.34l0.61,-0.41l-0.05,-0.56l2.37,-1.83l0.65,-0.07l0.19,-0.57l2.58,-0.46l2.07,-1.64l2.34,-0.18l0.98,-1.22l-0.46,-0.65l1.63,-1.14l0.31,-0.61l7.1,-2.09l3.09,0.43l0.69,-0.46l-0.52,-0.71l-3.44,-0.66l-1.6,0.68l-0.72,-0.43l0.34,-0.45l3.04,-0.41l1.03,0.4l3.08,0.29l0.27,0.34l1.39,-0.35l0.52,0.36l1.03,2.1l0.68,0.7l0.04,0.94l0.96,0.73l-0.34,0.83l-3.52,1.48l-0.47,0.62l0.02,0.46l0.44,0.14l1.71,-0.09l0.26,0.77l-0.67,0.89l0.0,0.47l1.37,0.07l0.32,-0.78l1.33,-0.82l0.2,-1.01l1.32,-1.41l1.76,-0.04l0.73,0.79l2.85,0.82l0.75,-0.12l-0.02,0.36l0.85,0.2l0.16,0.59l2.0,0.9l0.2,1.49l1.38,-0.32l-0.08,1.17l0.46,0.09l0.0,1.03l0.77,0.73l-0.37,0.3l-1.06,-0.28l-0.44,0.4l0.67,0.6l-0.27,0.3l-2.27,-0.16l-0.37,0.5l0.55,0.39l-0.19,0.41l0.38,0.35l0.9,-0.41l1.15,0.2l-0.03,0.42l0.55,0.27l0.36,0.71l-1.88,0.55l-1.33,-0.4l-0.42,0.49l0.35,0.61l1.01,0.45l0.57,0.73l-0.84,-0.13l-0.56,0.32l-0.12,0.45l1.1,0.26l-0.24,0.23l-1.47,0.39l-2.41,-0.75l-0.83,0.31l0.81,0.79l1.95,0.5l1.49,-0.14l1.18,0.46l1.46,-0.0l0.71,0.24l0.3,0.66l0.67,0.02l0.04,0.31l-1.2,-0.25l-0.28,0.5l-3.32,-1.29l-0.3,-0.04l-0.41,0.59l0.52,0.58l1.46,0.37l1.92,1.22l0.26,-0.06l0.91,2.18l-0.82,0.11l-0.12,0.85l-1.77,0.21l0.58,1.06l-1.99,0.93l-0.96,0.91l-1.31,0.2l-2.36,1.65l-1.02,0.11l-0.4,0.96l-0.96,0.71l-0.23,0.54l-1.07,-0.08l-0.33,0.9l-0.74,-0.06l-0.0,-7.37l-0.4,-0.4l-66.26,0.0l-0.5,-2.31l-0.74,-1.26l0.03,-0.75l-2.32,-0.46l-0.87,-1.24l0.71,-0.89l1.09,-0.62l5.1,-0.6l0.09,-0.91l-2.15,-1.44l-0.09,-0.97l-0.64,-0.24l-1.01,1.07l-3.86,0.79l-0.74,0.67l-0.41,1.84l0.62,2.38l-0.94,1.78l0.43,1.45l-0.74,0.49l-0.18,1.21l-0.68,0.12l-0.25,0.61l0.25,2.18l0.53,0.96l-0.5,0.73l-1.6,0.92l-2.25,-2.22l-1.21,-0.19l-0.92,0.62l-0.5,-0.37l-1.33,-0.1l-0.07,-0.49l-1.04,-0.81l-0.9,0.1l-0.04,-1.57l-0.87,-0.64l-0.39,-0.92l-0.73,-0.03l-0.37,0.67l-0.53,0.04l0.08,-0.63l-0.44,-0.44l-0.82,0.26l-0.97,-0.25l-1.58,0.55l-0.57,-0.24l-0.05,-1.06l-1.17,-0.74l-1.03,-1.2l-0.69,0.43l0.3,1.84l-0.34,0.08l-0.98,-2.29l1.28,-0.4l-0.58,-3.51l0.81,0.47l0.39,-0.47l-1.04,-2.95l0.72,0.15l0.32,-0.41l-0.04,-0.76l-0.78,-1.55l-0.74,-0.6l-0.67,0.03l-0.67,1.06l-1.32,0.48l-0.28,1.81l-1.03,0.35l-0.15,0.59l-0.34,-0.16l-0.53,0.39l-1.18,-0.92l-0.16,-1.13l-0.45,-0.35l-1.19,0.7l-0.97,-0.56l-0.66,-2.8l0.98,-0.55l1.53,0.59l0.57,0.66l0.82,-0.33l0.38,-3.08l-0.45,-0.79l0.97,-0.54l0.08,-0.65l-1.64,-1.48l-2.81,-0.68l-0.95,-1.76l-1.22,-0.89l0.4,-0.56l-0.11,-0.34l-0.76,-0.46l-0.38,-0.98l-1.72,-1.28l0.43,-1.18l0.72,-0.25l0.54,-0.63l-0.08,-0.81l-1.02,-1.54l-0.02,-0.77l0.83,-0.52ZM778.36,445.0l-0.59,-1.4l-1.27,-0.04l-0.67,-0.52l0.0,-0.19l0.29,-0.17l0.17,0.7l0.3,0.05l1.27,-0.57l0.55,0.06l0.26,0.19l-0.65,0.55l0.3,0.67l1.36,-0.38l-1.33,1.04ZM795.88,473.59l0.28,-0.36l1.82,-0.09l-0.36,0.47l-1.74,-0.02ZM799.52,476.06l0.33,-0.48l0.59,0.65l-0.2,0.02l-0.73,-0.19ZM810.28,492.65l0.13,0.68l-0.79,-0.17l-0.92,0.84l-0.08,-0.59l0.88,-0.56l0.21,-0.52l0.57,0.32ZM808.96,495.2l0.82,-0.5l0.62,0.13l0.05,0.81l-0.33,0.56l-1.15,-1.01ZM805.79,495.77l0.18,-0.04l0.37,0.43l-0.54,-0.03l-0.01,-0.35ZM808.24,500.37l0.87,0.08l0.68,-0.16l-0.16,0.38l-1.39,-0.3ZM822.33,513.45l-0.0,-0.0l-0.04,-0.22l0.03,0.01l0.01,0.21ZM827.13,516.99l0.01,0.03l-0.02,0.01l0.0,-0.04l0.0,0.0ZM831.55,518.99l0.82,-1.34l0.47,0.17l-0.77,0.54l-0.52,0.63ZM858.24,538.0l0.03,-0.04l0.09,0.05l-0.11,-0.01ZM859.94,537.65l0.68,-0.23l0.14,0.1l-0.33,0.01l-0.49,0.12ZM866.55,552.65l0.97,-0.04l0.05,0.07l-0.81,0.16l-0.2,-0.2ZM867.32,557.8l0.01,0.01l-0.01,0.0l0.01,-0.01ZM836.59,532.95l1.64,-0.29l1.61,-0.9l-1.4,1.37l-1.85,-0.18ZM819.28,510.62l0.59,-1.71l0.89,0.34l-0.16,0.64l-1.32,0.73ZM813.0,504.87l0.68,-0.82l0.97,0.48l-0.5,0.56l-1.15,-0.22ZM783.99,453.51l0.18,-0.77l0.07,0.0l0.22,0.13l-0.47,0.64ZM779.31,446.09l0.38,-0.14l0.09,0.11l-0.04,0.05l-0.44,-0.01ZM756.32,516.03l-0.28,-0.23l-0.27,-0.25l0.29,0.11l0.26,0.37ZM866.1,541.55l0.43,-0.08l0.58,0.34l-0.45,-0.08l-0.55,-0.19ZM865.42,619.37l0.41,-0.09l0.02,0.18l-0.42,-0.09ZM852.17,526.59l0.03,-0.08l0.07,0.08l-0.1,0.0ZM843.52,522.35l1.46,-0.61l-0.13,0.61l0.28,0.46l-0.48,0.25l-0.88,-0.13l-0.24,-0.58ZM816.74,507.05l-0.13,-0.17l0.31,0.12l-0.18,0.05ZM810.62,498.56l0.05,0.01l-0.02,0.03l-0.02,-0.04ZM807.12,484.13l0.17,-0.32l0.08,-0.01l-0.01,0.33l-0.24,-0.01ZM806.42,479.53l0.36,-0.2l0.52,0.96l-0.25,0.1l-0.63,-0.86ZM807.4,479.43l0.01,-0.0l0.0,0.0l-0.01,-0.0ZM804.67,483.41l0.52,0.16l0.64,-0.47l0.43,0.35l-1.03,0.7l-0.57,-0.74ZM804.09,478.71l0.62,-0.45l0.65,0.64l-0.43,0.37l-0.83,-0.56ZM782.84,450.47l0.32,-0.35l0.74,0.31l-1.05,0.34l-0.0,-0.29ZM783.04,449.83l-0.07,-0.09l0.16,-0.52l0.06,0.14l-0.15,0.47Z", "name": "Newfoundland and Labrador"}, "CA-ON": {"path": "M467.2,596.58l0.07,-46.04l15.48,-12.68l22.83,-22.08l16.77,-15.11l8.19,-6.92l2.34,2.26l1.38,0.57l2.05,1.71l3.25,1.27l3.86,5.18l-0.29,0.62l0.37,0.7l1.03,-0.65l0.26,0.44l1.1,0.12l-0.11,0.38l0.54,0.48l3.69,0.25l0.15,0.29l0.86,-0.01l1.56,0.59l4.46,2.08l3.84,0.89l2.04,0.82l2.71,2.51l3.0,1.02l-0.72,0.44l-1.98,2.52l-0.33,1.65l0.56,0.47l0.56,-0.46l0.58,-1.45l1.22,-1.62l0.8,-0.51l1.44,-0.13l3.47,0.71l3.91,-0.73l1.52,0.28l1.49,-0.68l1.46,0.58l0.44,0.85l1.17,-0.07l0.04,0.79l0.4,0.5l0.64,-0.2l-0.21,-1.43l3.7,0.74l1.99,-0.53l0.43,0.43l-0.42,1.2l0.43,0.16l0.76,-0.64l1.12,0.19l1.13,-0.4l1.67,0.39l0.68,0.81l0.99,0.18l0.25,2.32l0.55,0.62l-2.48,6.74l0.27,2.42l0.55,1.23l0.63,0.06l0.64,0.62l1.14,3.41l-0.92,2.73l1.05,4.44l-1.26,0.8l-0.65,2.9l0.22,1.14l2.54,1.65l1.33,2.29l3.46,2.97l0.08,1.29l-3.09,1.21l-0.18,0.6l0.31,0.66l1.43,-0.66l2.23,0.03l1.43,1.74l3.79,1.37l0.66,1.31l1.46,0.77l1.7,1.72l0.8,2.42l0.8,0.83l0.09,1.14l-1.87,0.8l-1.19,1.44l-2.49,1.72l-0.33,0.46l0.65,0.81l0.58,0.06l1.04,-1.53l1.51,-0.47l1.38,-1.48l1.55,-0.91l3.87,1.1l2.36,1.69l0.43,0.82l1.77,1.5l0.08,43.95l-0.68,1.97l1.39,2.36l0.19,2.5l2.71,3.38l2.05,3.74l2.19,1.74l0.43,0.74l3.77,0.74l0.47,0.34l2.04,0.03l4.59,1.0l2.93,1.54l1.31,2.1l2.53,1.37l1.02,-0.18l0.27,-0.46l-0.1,-0.66l0.56,0.07l0.44,1.63l1.54,2.43l1.94,0.55l1.02,0.64l0.76,-0.04l0.67,-0.57l1.47,0.06l1.61,1.42l0.69,0.22l0.95,-0.21l0.78,-0.85l3.99,-1.34l2.29,-0.24l1.16,-0.52l2.87,-0.24l2.17,0.88l-0.77,2.91l1.09,1.3l-0.89,0.4l-0.6,0.96l-1.76,1.05l-1.9,-0.06l-3.81,1.81l-7.15,5.99l-2.69,0.68l-2.88,1.25l-1.27,-0.01l-2.06,0.93l-0.23,-0.42l-0.84,0.08l-0.37,-0.44l-1.81,0.58l-0.59,-0.31l-3.41,0.96l-0.39,0.91l-1.11,0.05l-1.92,0.7l-10.67,1.51l-1.58,0.56l-2.76,2.17l-1.15,0.12l-1.33,1.11l-0.22,0.89l-1.57,1.98l0.06,0.95l2.0,1.05l2.72,0.33l2.51,-0.97l-0.2,1.67l0.3,1.14l1.05,1.1l-1.34,0.38l-0.96,-0.28l-2.56,0.0l-1.88,0.41l-0.88,-0.24l-4.75,0.91l-1.73,1.39l-0.7,0.22l-0.58,1.09l-4.51,-1.15l-4.42,0.22l-2.11,1.1l-2.46,1.97l-0.53,1.03l-0.93,0.64l-1.4,0.12l-3.02,1.51l-1.38,1.77l-1.35,-0.72l-2.52,0.68l-1.79,-0.79l0.36,-2.39l1.04,-0.36l3.26,0.39l2.26,-0.55l0.37,-0.92l-0.15,-1.44l-1.76,-0.35l0.84,-1.14l0.3,-2.33l0.7,-2.01l2.9,-1.12l1.15,-1.33l1.26,-0.54l1.04,-0.88l0.8,-1.43l0.02,-6.53l-0.3,-1.78l1.23,-1.51l0.29,-1.4l0.87,-0.94l0.94,-0.4l1.51,-2.67l-0.14,-2.08l-0.84,-1.22l-0.05,-1.31l-0.33,-0.33l-0.51,0.05l-1.79,-2.42l2.51,-0.0l-0.26,0.72l0.63,0.87l0.1,1.31l1.19,0.62l-0.12,0.33l0.51,0.38l0.99,-0.06l-1.14,0.97l-0.12,0.86l0.45,0.27l1.04,-0.68l0.86,0.06l-0.49,1.84l0.05,0.44l0.69,0.22l1.09,-1.17l1.2,-0.4l0.85,1.39l5.18,1.75l1.18,-0.93l0.23,-2.1l-0.25,-0.55l-0.99,-0.72l1.03,-0.58l-0.07,0.28l0.89,0.9l1.59,0.23l0.78,-0.04l0.3,-0.63l-0.43,-0.34l0.33,-0.69l-0.18,-0.6l-0.99,0.12l-0.66,-0.98l-0.71,-0.2l-0.24,-0.64l-0.95,-0.75l0.47,-0.69l-0.36,-0.74l-0.74,-0.36l0.73,-1.16l-0.44,-0.99l-0.81,-0.37l-0.78,0.2l-0.33,0.45l-0.44,-0.07l-0.13,-0.77l-0.71,-0.25l0.09,-1.09l-0.33,-0.93l-0.6,-0.28l-0.46,0.58l-0.11,-0.53l-1.13,-1.1l-0.04,-0.69l-1.32,-2.0l-1.58,-0.4l-2.38,0.13l0.06,-0.36l-0.47,-0.54l-0.76,0.15l-0.34,0.44l-2.0,-0.28l-0.65,-1.34l-0.98,-0.4l-0.68,0.49l-0.23,-0.24l-4.3,-0.22l-1.92,-0.91l-1.23,-0.1l-1.49,0.35l-0.49,-0.57l-3.47,0.57l-5.7,-0.97l-0.58,-0.42l-2.28,-0.16l-0.78,-0.49l-1.32,0.1l-0.81,-0.64l0.38,-1.31l-0.19,-0.51l-0.51,-0.23l-0.75,-0.02l-0.89,0.47l-1.0,-0.17l-0.86,0.49l-0.62,-0.63l1.39,-1.38l0.24,-0.63l-0.46,-0.75l-0.74,-0.08l-0.0,-0.34l1.43,-0.09l0.43,-1.06l-1.13,-0.94l-1.42,-0.07l-0.49,0.28l-0.25,-0.38l-0.93,-0.21l0.8,-2.24l1.15,-1.69l-1.56,-2.05l-1.91,-0.96l-0.92,-0.98l0.36,-1.23l0.83,-0.97l-0.41,-0.69l0.87,-0.77l-0.04,-0.97l-1.16,-0.39l-6.1,0.59l-3.14,-0.72l-2.08,-2.19l-1.03,-2.24l-0.94,-3.33l-0.93,-1.1l-0.3,-0.98l-0.71,-0.5l-1.47,0.43l-0.31,-0.58l-1.07,-0.37l-1.54,0.71l-1.29,-0.72l-2.61,0.6l-1.9,-0.99l-0.94,0.05l-0.42,-0.54l-0.69,0.1l-0.66,-0.5l-2.4,-0.48l-1.18,-1.06l-1.44,0.7l-0.98,-0.25l-0.3,0.49l0.28,0.78l-0.13,0.69l1.48,1.18l0.0,0.86l-0.57,0.68l-0.65,0.16l-0.34,-0.35l0.25,-1.14l-0.56,-1.24l-1.08,-0.31l-0.67,0.13l-0.74,1.03l-0.06,1.71l-0.75,0.46l-0.14,1.12l-0.43,0.15l-0.5,1.73l-0.63,0.32l0.26,-1.24l0.79,-1.05l-0.02,-0.49l-0.42,-0.35l-4.49,1.6l-0.58,0.77l-0.13,0.74l0.28,0.41l-0.9,2.13l-0.34,0.5l-0.87,0.26l-0.37,0.57l-1.15,0.68l-1.8,-0.23l-1.31,0.4l-0.61,-0.31l-0.77,-1.05l-0.76,-0.31l-6.32,0.41l-0.63,-1.46l-0.8,-0.49l-2.14,0.88l-2.01,1.33l-1.44,0.33l-2.37,-0.73l-0.66,-1.06l-2.29,-0.71l-0.57,-1.13l-0.61,-0.38l-2.33,0.23l-0.59,1.37l-0.71,-1.1l-0.32,-1.42l-0.71,-0.37l-0.94,0.04l0.3,-0.44l-0.31,-0.65l-3.56,-1.19l-4.31,0.03l-0.71,0.24l-0.44,0.72l-2.57,0.32l-0.43,-1.02l-0.57,-0.48l-3.68,-0.26l-0.73,-0.79l-1.95,0.14l-0.97,-0.29l-1.0,-0.81l-0.01,-1.42l-1.34,-5.27l-1.14,-0.67l-2.09,-0.21ZM646.18,664.94l1.86,-0.74l0.04,0.54l0.66,0.13l0.66,-0.64l1.08,-0.24l-0.44,0.88l0.3,0.64l0.97,-0.1l-0.4,0.64l0.15,0.55l-0.8,0.42l0.03,-1.09l-0.87,0.17l-0.36,-0.43l-2.17,0.24l-0.7,-0.96ZM651.93,664.17l-0.12,0.18l-0.07,0.01l0.2,-0.19l0.0,-0.0ZM604.86,650.37l-0.01,0.0l-0.01,-0.0l0.02,-0.0ZM535.93,606.61l0.06,0.23l-0.57,0.26l0.51,-0.49ZM534.28,608.18l0.0,0.12l-0.04,0.04l-0.03,-0.03l0.06,-0.13ZM657.31,663.7l0.15,-0.26l0.25,-0.0l0.03,0.11l-0.43,0.15ZM624.63,570.04l1.03,-0.67l0.0,5.26l-0.84,-0.58l-0.62,-1.13l0.63,-1.88l-0.19,-1.01ZM619.29,649.45l0.04,-0.03l0.03,0.01l-0.06,0.05l-0.01,-0.03ZM589.05,641.3l0.25,0.4l-0.57,-0.04l0.05,-0.26l0.27,-0.1ZM589.84,641.78l0.38,-0.38l0.63,0.31l1.09,-0.52l0.07,0.68l0.72,0.78l-1.27,-0.14l-1.62,-0.72ZM593.76,642.68l0.06,-0.03l0.01,0.03l-0.0,-0.0l-0.07,-0.01ZM594.29,642.96l0.39,-0.13l0.16,0.32l-0.36,-0.07l-0.19,-0.12ZM595.66,643.36l0.39,-0.89l-0.52,-0.58l0.77,-0.14l0.34,-0.47l0.78,-0.18l0.14,0.44l0.71,0.16l0.81,1.15l0.54,-0.18l0.58,-1.17l1.02,-0.45l0.26,0.13l-0.02,0.78l0.79,0.28l-0.24,0.96l0.53,0.82l-2.22,1.57l-2.05,-1.27l-1.93,-0.48l-0.65,-0.49ZM603.33,643.86l0.17,-0.9l0.27,0.47l0.74,-0.05l-0.78,1.02l-0.39,-0.54ZM603.31,644.98l-0.06,0.12l-0.17,0.11l0.14,-0.2l0.09,-0.04ZM602.96,645.33l-0.57,0.75l-0.39,-0.02l0.57,-0.54l0.39,-0.19ZM602.51,640.4l0.02,0.09l-0.03,-0.06l0.0,-0.03ZM593.95,641.3l0.43,-0.09l0.03,0.01l-0.31,0.11l-0.15,-0.03ZM586.18,641.48l0.75,-0.58l0.55,0.41l-0.48,0.55l-0.82,-0.38ZM579.87,637.06l1.14,0.0l0.75,0.37l0.4,0.4l-0.1,0.27l-0.58,0.05l-0.31,0.79l-1.29,-1.88ZM561.22,618.04l0.41,-0.3l1.73,0.16l-0.55,0.15l-1.59,-0.01ZM542.91,604.63l0.01,0.02l-0.01,0.0l0.0,-0.02ZM539.13,604.3l0.98,-0.43l1.56,0.09l-0.42,0.52l-0.98,-0.05l-1.01,0.52l-0.13,-0.64Z", "name": "Ontario"}, "CA-AB": {"path": "M215.37,539.85l1.06,0.08l0.58,-0.72l-0.82,-1.28l-1.03,-0.26l-0.05,-0.83l-0.83,-0.39l0.01,-89.43l101.02,0.0l0.0,154.39l-40.31,0.0l-0.16,-0.54l-1.07,-0.68l-0.11,-0.75l-0.92,-0.58l-1.23,-0.15l-0.07,-0.65l-2.0,-1.78l0.03,-2.11l-1.62,-0.35l0.56,-0.33l0.61,-2.1l-0.63,-1.74l0.45,-0.85l-0.2,-1.29l-0.65,-0.84l-0.59,-3.17l-2.32,-2.82l-1.29,-0.46l-1.02,0.41l-0.62,-0.66l0.08,-0.61l-0.47,-0.77l-2.16,-1.07l-0.57,-0.62l0.31,-0.64l-0.68,-1.13l-1.28,-0.8l-0.32,-0.57l-1.98,-0.54l-0.67,-1.63l-0.97,-0.33l-0.35,-0.56l-0.81,-0.13l-0.38,-1.82l-0.89,-0.56l-0.16,-0.66l-0.96,-1.01l-0.85,-0.41l-1.0,-2.21l-1.17,0.03l-0.95,1.22l-0.54,-0.05l-1.1,-2.61l-2.19,-1.79l-0.6,-1.88l-0.44,-0.12l-0.55,0.65l-1.12,-0.21l-0.91,0.23l-0.63,-0.63l-0.86,-0.25l-0.47,-0.59l0.75,-0.67l0.07,-1.14l-0.48,-0.43l-1.67,-0.44l-0.82,-0.66l-0.57,0.2l-0.34,0.99l-1.18,0.24l-0.2,-0.32l0.49,-0.63l-1.33,-1.76l0.33,-0.99l-0.62,-1.23l-0.61,-0.38l-0.03,-0.86l-0.88,-0.89l-1.17,0.18l-0.44,-1.83l-0.84,-0.6l-0.06,-0.69l-1.02,-0.93l-1.62,-0.86l-0.62,0.38l-0.19,0.81l-1.84,-0.6l-1.25,-2.23l-3.13,-0.19l-1.27,-1.78l-0.57,-0.18l0.0,-0.57Z", "name": "Alberta"}}, "height": 693.6576731732696, "projection": {"type": "mill", "centralMeridian": 0.0}, "width": 900.0});













(function() {

  function initVectorMap() {
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('vectormaps') && initVectorMap.call(this)
  })

})()

;
/* ============================================================
 * Bootstrap: rowlink.js v3.1.3
 * http://jasny.github.io/bootstrap/javascript/#rowlink
 * ============================================================
 * Copyright 2012-2014 Arnold Daniels
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ============================================================ */


+function ($) { "use strict";

  var Rowlink = function (element, options) {
    this.$element = $(element)
    this.options = $.extend({}, Rowlink.DEFAULTS, options)

    this.$element.on('click.bs.rowlink', 'td:not(.rowlink-skip)', $.proxy(this.click, this))
  }

  Rowlink.DEFAULTS = {
    target: "a"
  }

  Rowlink.prototype.click = function(e) {
    var target = $(e.currentTarget).closest('tr').find(this.options.target)[0]
    if ($(e.target)[0] === target) return

    e.preventDefault();

    if (target.click) {
      target.click()
    } else if (document.createEvent) {
      var evt = document.createEvent("MouseEvents");
      evt.initMouseEvent("click", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
      target.dispatchEvent(evt);
    }
  }


  // ROWLINK PLUGIN DEFINITION
  // ===========================

  var old = $.fn.rowlink

  $.fn.rowlink = function (options) {
    return this.each(function () {
      var $this = $(this)
      var data = $this.data('bs.rowlink')
      if (!data) $this.data('bs.rowlink', (data = new Rowlink(this, options)))
    })
  }

  $.fn.rowlink.Constructor = Rowlink


  // ROWLINK NO CONFLICT
  // ====================

  $.fn.rowlink.noConflict = function () {
    $.fn.rowlink = old
    return this
  }


  // ROWLINK DATA-API
  // ==================

  $(document).on('click.bs.rowlink.data-api', '[data-link="row"]', function (e) {
    if ($(e.target).closest('.rowlink-skip').length !== 0) return

    var $this = $(this)
    if ($this.data('bs.rowlink')) return
    $this.rowlink($this.data())
    $(e.target).trigger('click.bs.rowlink')
  })

}(window.jQuery);

/* ===========================================================
 * Bootstrap: inputmask.js v3.1.0
 * http://jasny.github.io/bootstrap/javascript/#inputmask
 *
 * Based on Masked Input plugin by Josh Bush (digitalbush.com)
 * ===========================================================
 * Copyright 2012-2014 Arnold Daniels
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */

+function ($) { "use strict";

  var isIphone = (window.orientation !== undefined)
  var isAndroid = navigator.userAgent.toLowerCase().indexOf("android") > -1
  var isIE = window.navigator.appName == 'Microsoft Internet Explorer'

  // INPUTMASK PUBLIC CLASS DEFINITION
  // =================================

  var Inputmask = function (element, options) {
    if (isAndroid) return // No support because caret positioning doesn't work on Android

    this.$element = $(element)
    this.options = $.extend({}, Inputmask.DEFAULTS, options)
    this.mask = String(this.options.mask)

    this.init()
    this.listen()

    this.checkVal() //Perform initial check for existing values
  }

  Inputmask.DEFAULTS = {
    mask: "",
    placeholder: "_",
    definitions: {
      '9': "[0-9]",
      'a': "[A-Za-z]",
      'w': "[A-Za-z0-9]",
      '*': "."
    }
  }

  Inputmask.prototype.init = function() {
    var defs = this.options.definitions
    var len = this.mask.length

    this.tests = []
    this.partialPosition = this.mask.length
    this.firstNonMaskPos = null

    $.each(this.mask.split(""), $.proxy(function(i, c) {
      if (c == '?') {
        len--
        this.partialPosition = i
      } else if (defs[c]) {
        this.tests.push(new RegExp(defs[c]))
        if (this.firstNonMaskPos === null)
          this.firstNonMaskPos =  this.tests.length - 1
      } else {
        this.tests.push(null)
      }
    }, this))

    this.buffer = $.map(this.mask.split(""), $.proxy(function(c, i) {
      if (c != '?') return defs[c] ? this.options.placeholder : c
    }, this))

    this.focusText = this.$element.val()

    this.$element.data("rawMaskFn", $.proxy(function() {
      return $.map(this.buffer, function(c, i) {
        return this.tests[i] && c != this.options.placeholder ? c : null
      }).join('')
    }, this))
  }

  Inputmask.prototype.listen = function() {
    if (this.$element.attr("readonly")) return

    var pasteEventName = (isIE ? 'paste' : 'input') + ".bs.inputmask"

    this.$element
      .on("unmask.bs.inputmask", $.proxy(this.unmask, this))

      .on("focus.bs.inputmask", $.proxy(this.focusEvent, this))
      .on("blur.bs.inputmask", $.proxy(this.blurEvent, this))

      .on("keydown.bs.inputmask", $.proxy(this.keydownEvent, this))
      .on("keypress.bs.inputmask", $.proxy(this.keypressEvent, this))

      .on(pasteEventName, $.proxy(this.pasteEvent, this))
  }

  //Helper Function for Caret positioning
  Inputmask.prototype.caret = function(begin, end) {
    if (this.$element.length === 0) return
    if (typeof begin == 'number') {
      end = (typeof end == 'number') ? end : begin
      return this.$element.each(function() {
        if (this.setSelectionRange) {
          this.setSelectionRange(begin, end)
        } else if (this.createTextRange) {
          var range = this.createTextRange()
          range.collapse(true)
          range.moveEnd('character', end)
          range.moveStart('character', begin)
          range.select()
        }
      })
    } else {
      if (this.$element[0].setSelectionRange) {
        begin = this.$element[0].selectionStart
        end = this.$element[0].selectionEnd
      } else if (document.selection && document.selection.createRange) {
        var range = document.selection.createRange()
        begin = 0 - range.duplicate().moveStart('character', -100000)
        end = begin + range.text.length
      }
      return {
        begin: begin,
        end: end
      }
    }
  }

  Inputmask.prototype.seekNext = function(pos) {
    var len = this.mask.length
    while (++pos <= len && !this.tests[pos]);

    return pos
  }

  Inputmask.prototype.seekPrev = function(pos) {
    while (--pos >= 0 && !this.tests[pos]);

    return pos
  }

  Inputmask.prototype.shiftL = function(begin,end) {
    var len = this.mask.length

    if (begin < 0) return

    for (var i = begin, j = this.seekNext(end); i < len; i++) {
      if (this.tests[i]) {
        if (j < len && this.tests[i].test(this.buffer[j])) {
          this.buffer[i] = this.buffer[j]
          this.buffer[j] = this.options.placeholder
        } else
          break
        j = this.seekNext(j)
      }
    }
    this.writeBuffer()
    this.caret(Math.max(this.firstNonMaskPos, begin))
  }

  Inputmask.prototype.shiftR = function(pos) {
    var len = this.mask.length

    for (var i = pos, c = this.options.placeholder; i < len; i++) {
      if (this.tests[i]) {
        var j = this.seekNext(i)
        var t = this.buffer[i]
        this.buffer[i] = c
        if (j < len && this.tests[j].test(t))
          c = t
        else
          break
      }
    }
  },

  Inputmask.prototype.unmask = function() {
    this.$element
      .unbind(".bs.inputmask")
      .removeData("bs.inputmask")
  }

  Inputmask.prototype.focusEvent = function() {
    this.focusText = this.$element.val()
    var len = this.mask.length
    var pos = this.checkVal()
    this.writeBuffer()

    var that = this
    var moveCaret = function() {
      if (pos == len)
        that.caret(0, pos)
      else
        that.caret(pos)
    }

    moveCaret()
    setTimeout(moveCaret, 50)
  }

  Inputmask.prototype.blurEvent = function() {
    this.checkVal()
    if (this.$element.val() !== this.focusText) {
      this.$element.trigger('change')
      this.$element.trigger('input')
    }
  }

  Inputmask.prototype.keydownEvent = function(e) {
    var k = e.which

    //backspace, delete, and escape get special treatment
    if (k == 8 || k == 46 || (isIphone && k == 127)) {
      var pos = this.caret(),
      begin = pos.begin,
      end = pos.end

      if (end - begin === 0) {
        begin = k != 46 ? this.seekPrev(begin) : (end = this.seekNext(begin - 1))
        end = k == 46 ? this.seekNext(end) : end
      }
      this.clearBuffer(begin, end)
      this.shiftL(begin, end - 1)

      return false
    } else if (k == 27) {//escape
      this.$element.val(this.focusText)
      this.caret(0, this.checkVal())
      return false
    }
  }

  Inputmask.prototype.keypressEvent = function(e) {
    var len = this.mask.length

    var k = e.which,
    pos = this.caret()

    if (e.ctrlKey || e.altKey || e.metaKey || k < 32)  {//Ignore
      return true
    } else if (k) {
      if (pos.end - pos.begin !== 0) {
        this.clearBuffer(pos.begin, pos.end)
        this.shiftL(pos.begin, pos.end - 1)
      }

      var p = this.seekNext(pos.begin - 1)
      if (p < len) {
        var c = String.fromCharCode(k)
        if (this.tests[p].test(c)) {
          this.shiftR(p)
          this.buffer[p] = c
          this.writeBuffer()
          var next = this.seekNext(p)
          this.caret(next)
        }
      }
      return false
    }
  }

  Inputmask.prototype.pasteEvent = function() {
    var that = this

    setTimeout(function() {
      that.caret(that.checkVal(true))
    }, 0)
  }

  Inputmask.prototype.clearBuffer = function(start, end) {
    var len = this.mask.length

    for (var i = start; i < end && i < len; i++) {
      if (this.tests[i])
        this.buffer[i] = this.options.placeholder
    }
  }

  Inputmask.prototype.writeBuffer = function() {
    return this.$element.val(this.buffer.join('')).val()
  }

  Inputmask.prototype.checkVal = function(allow) {
    var len = this.mask.length
    //try to place characters where they belong
    var test = this.$element.val()
    var lastMatch = -1

    for (var i = 0, pos = 0; i < len; i++) {
      if (this.tests[i]) {
        this.buffer[i] = this.options.placeholder
        while (pos++ < test.length) {
          var c = test.charAt(pos - 1)
          if (this.tests[i].test(c)) {
            this.buffer[i] = c
            lastMatch = i
            break
          }
        }
        if (pos > test.length)
          break
      } else if (this.buffer[i] == test.charAt(pos) && i != this.partialPosition) {
        pos++
        lastMatch = i
      }
    }
    if (!allow && lastMatch + 1 < this.partialPosition) {
      this.$element.val("")
      this.clearBuffer(0, len)
    } else if (allow || lastMatch + 1 >= this.partialPosition) {
      this.writeBuffer()
      if (!allow) this.$element.val(this.$element.val().substring(0, lastMatch + 1))
    }
    return (this.partialPosition ? i : this.firstNonMaskPos)
  }


  // INPUTMASK PLUGIN DEFINITION
  // ===========================

  var old = $.fn.inputmask

  $.fn.inputmask = function (options) {
    return this.each(function () {
      var $this = $(this)
      var data = $this.data('bs.inputmask')

      if (!data) $this.data('bs.inputmask', (data = new Inputmask(this, options)))
    })
  }

  $.fn.inputmask.Constructor = Inputmask


  // INPUTMASK NO CONFLICT
  // ====================

  $.fn.inputmask.noConflict = function () {
    $.fn.inputmask = old
    return this
  }


  // INPUTMASK DATA-API
  // ==================

  $(document).on('focus.bs.inputmask.data-api', '[data-mask]', function (e) {
    var $this = $(this)
    if ($this.data('bs.inputmask')) return
    $this.inputmask($this.data())
  })

}(window.jQuery);

/* ===========================================================
 * Bootstrap: fileinput.js v3.1.3
 * http://jasny.github.com/bootstrap/javascript/#fileinput
 * ===========================================================
 * Copyright 2012-2014 Arnold Daniels
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */

+function ($) { "use strict";

  var isIE = window.navigator.appName == 'Microsoft Internet Explorer'

  // FILEUPLOAD PUBLIC CLASS DEFINITION
  // =================================

  var Fileinput = function (element, options) {
    this.$element = $(element)

    this.$input = this.$element.find(':file')
    if (this.$input.length === 0) return

    this.name = this.$input.attr('name') || options.name

    this.$hidden = this.$element.find('input[type=hidden][name="' + this.name + '"]')
    if (this.$hidden.length === 0) {
      this.$hidden = $('<input type="hidden">').insertBefore(this.$input)
    }

    this.$preview = this.$element.find('.fileinput-preview')
    var height = this.$preview.css('height')
    if (this.$preview.css('display') !== 'inline' && height !== '0px' && height !== 'none') {
      this.$preview.css('line-height', height)
    }

    this.original = {
      exists: this.$element.hasClass('fileinput-exists'),
      preview: this.$preview.html(),
      hiddenVal: this.$hidden.val()
    }

    this.listen()
  }

  Fileinput.prototype.listen = function() {
    this.$input.on('change.bs.fileinput', $.proxy(this.change, this))
    $(this.$input[0].form).on('reset.bs.fileinput', $.proxy(this.reset, this))

    this.$element.find('[data-trigger="fileinput"]').on('click.bs.fileinput', $.proxy(this.trigger, this))
    this.$element.find('[data-dismiss="fileinput"]').on('click.bs.fileinput', $.proxy(this.clear, this))
  },

  Fileinput.prototype.change = function(e) {
    var files = e.target.files === undefined ? (e.target && e.target.value ? [{ name: e.target.value.replace(/^.+\\/, '')}] : []) : e.target.files

    e.stopPropagation()

    if (files.length === 0) {
      this.clear()
      return
    }

    this.$hidden.val('')
    this.$hidden.attr('name', '')
    this.$input.attr('name', this.name)

    var file = files[0]

    if (this.$preview.length > 0 && (typeof file.type !== "undefined" ? file.type.match(/^image\/(gif|png|jpeg)$/) : file.name.match(/\.(gif|png|jpe?g)$/i)) && typeof FileReader !== "undefined") {
      var reader = new FileReader()
      var preview = this.$preview
      var element = this.$element

      reader.onload = function(re) {
        var $img = $('<img>')
        $img[0].src = re.target.result
        files[0].result = re.target.result

        element.find('.fileinput-filename').text(file.name)

        // if parent has max-height, using `(max-)height: 100%` on child doesn't take padding and border into account
        if (preview.css('max-height') != 'none') $img.css('max-height', parseInt(preview.css('max-height'), 10) - parseInt(preview.css('padding-top'), 10) - parseInt(preview.css('padding-bottom'), 10)  - parseInt(preview.css('border-top'), 10) - parseInt(preview.css('border-bottom'), 10))

        preview.html($img)
        element.addClass('fileinput-exists').removeClass('fileinput-new')

        element.trigger('change.bs.fileinput', files)
      }

      reader.readAsDataURL(file)
    } else {
      this.$element.find('.fileinput-filename').text(file.name)
      this.$preview.text(file.name)

      this.$element.addClass('fileinput-exists').removeClass('fileinput-new')

      this.$element.trigger('change.bs.fileinput')
    }
  },

  Fileinput.prototype.clear = function(e) {
    if (e) e.preventDefault()

    this.$hidden.val('')
    this.$hidden.attr('name', this.name)
    this.$input.attr('name', '')

    //ie8+ doesn't support changing the value of input with type=file so clone instead
    if (isIE) {
      var inputClone = this.$input.clone(true);
      this.$input.after(inputClone);
      this.$input.remove();
      this.$input = inputClone;
    } else {
      this.$input.val('')
    }

    this.$preview.html('')
    this.$element.find('.fileinput-filename').text('')
    this.$element.addClass('fileinput-new').removeClass('fileinput-exists')

    if (e !== undefined) {
      this.$input.trigger('change')
      this.$element.trigger('clear.bs.fileinput')
    }
  },

  Fileinput.prototype.reset = function() {
    this.clear()

    this.$hidden.val(this.original.hiddenVal)
    this.$preview.html(this.original.preview)
    this.$element.find('.fileinput-filename').text('')

    if (this.original.exists) this.$element.addClass('fileinput-exists').removeClass('fileinput-new')
     else this.$element.addClass('fileinput-new').removeClass('fileinput-exists')

    this.$element.trigger('reset.bs.fileinput')
  },

  Fileinput.prototype.trigger = function(e) {
    this.$input.trigger('click')
    e.preventDefault()
  }


  // FILEUPLOAD PLUGIN DEFINITION
  // ===========================

  var old = $.fn.fileinput

  $.fn.fileinput = function (options) {
    return this.each(function () {
      var $this = $(this),
          data = $this.data('bs.fileinput')
      if (!data) $this.data('bs.fileinput', (data = new Fileinput(this, options)))
      if (typeof options == 'string') data[options]()
    })
  }

  $.fn.fileinput.Constructor = Fileinput


  // FILEINPUT NO CONFLICT
  // ====================

  $.fn.fileinput.noConflict = function () {
    $.fn.fileinput = old
    return this
  }


  // FILEUPLOAD DATA-API
  // ==================

  $(document).on('click.fileinput.data-api', '[data-provides="fileinput"]', function (e) {
    var $this = $(this)
    if ($this.data('bs.fileinput')) return
    $this.fileinput($this.data())

    var $target = $(e.target).closest('[data-dismiss="fileinput"],[data-trigger="fileinput"]');
    if ($target.length > 0) {
      e.preventDefault()
      $target.trigger('click.bs.fileinput')
    }
  })

}(window.jQuery);

/* ========================================================================
 * Bootstrap: offcanvas.js v3.1.3
 * http://jasny.github.io/bootstrap/javascript/#offcanvas
 * ========================================================================
 * Copyright 2013-2014 Arnold Daniels
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ======================================================================== */

+function ($) { "use strict";

  // OFFCANVAS PUBLIC CLASS DEFINITION
  // =================================

  var OffCanvas = function (element, options) {
    this.$element = $(element)
    this.options  = $.extend({}, OffCanvas.DEFAULTS, options)
    this.state    = null
    this.placement = null

    if (this.options.recalc) {
      this.calcClone()
      $(window).on('resize', $.proxy(this.recalc, this))
    }

    if (this.options.autohide)
      $(document).on('click', $.proxy(this.autohide, this))

    if (this.options.toggle) this.toggle()

    if (this.options.disablescrolling) {
        this.options.disableScrolling = this.options.disablescrolling
        delete this.options.disablescrolling
    }
  }

  OffCanvas.DEFAULTS = {
    toggle: true,
    placement: 'auto',
    autohide: true,
    recalc: true,
    disableScrolling: true,
    modal: false
  }

  OffCanvas.prototype.offset = function () {
    switch (this.placement) {
      case 'left':
      case 'right':  return this.$element.outerWidth()
      case 'top':
      case 'bottom': return this.$element.outerHeight()
    }
  }

  OffCanvas.prototype.calcPlacement = function () {
    if (this.options.placement !== 'auto') {
        this.placement = this.options.placement
        return
    }

    if (!this.$element.hasClass('in')) {
      this.$element.css('visiblity', 'hidden !important').addClass('in')
    }

    var horizontal = $(window).width() / this.$element.width()
    var vertical = $(window).height() / this.$element.height()

    var element = this.$element
    function ab(a, b) {
      if (element.css(b) === 'auto') return a
      if (element.css(a) === 'auto') return b

      var size_a = parseInt(element.css(a), 10)
      var size_b = parseInt(element.css(b), 10)

      return size_a > size_b ? b : a
    }

    this.placement = horizontal >= vertical ? ab('left', 'right') : ab('top', 'bottom')

    if (this.$element.css('visibility') === 'hidden !important') {
      this.$element.removeClass('in').css('visiblity', '')
    }
  }

  OffCanvas.prototype.opposite = function (placement) {
    switch (placement) {
      case 'top':    return 'bottom'
      case 'left':   return 'right'
      case 'bottom': return 'top'
      case 'right':  return 'left'
    }
  }

  OffCanvas.prototype.getCanvasElements = function() {
    // Return a set containing the canvas plus all fixed elements
    var canvas = this.options.canvas ? $(this.options.canvas) : this.$element

    var fixed_elements = canvas.find('*').filter(function() {
      return $(this).css('position') === 'fixed'
    }).not(this.options.exclude)

    return canvas.add(fixed_elements)
  }

  OffCanvas.prototype.slide = function (elements, offset, callback) {
    // Use jQuery animation if CSS transitions aren't supported
    if (!$.support.transition) {
      var anim = {}
      anim[this.placement] = "+=" + offset
      return elements.animate(anim, 350, callback)
    }

    var placement = this.placement
    var opposite = this.opposite(placement)

    elements.each(function() {
      if ($(this).css(placement) !== 'auto')
        $(this).css(placement, (parseInt($(this).css(placement), 10) || 0) + offset)

      if ($(this).css(opposite) !== 'auto')
        $(this).css(opposite, (parseInt($(this).css(opposite), 10) || 0) - offset)
    })

    this.$element
      .one($.support.transition.end, callback)
      .emulateTransitionEnd(350)
  }

  OffCanvas.prototype.disableScrolling = function() {
    var bodyWidth = $('body').width()
    var prop = 'padding-' + this.opposite(this.placement)

    if ($('body').data('offcanvas-style') === undefined) {
      $('body').data('offcanvas-style', $('body').attr('style') || '')
    }

    $('body').css('overflow', 'hidden')

    if ($('body').width() > bodyWidth) {
      var padding = parseInt($('body').css(prop), 10) + $('body').width() - bodyWidth

      setTimeout(function() {
        $('body').css(prop, padding)
      }, 1)
    }
    //disable scrolling on mobiles (they ignore overflow:hidden)
    $('body').on('touchmove.bs', function(e) {
      e.preventDefault();
    });
  }

  OffCanvas.prototype.enableScrolling = function() {
    $('body').off('touchmove.bs');
  }

  OffCanvas.prototype.show = function () {
    if (this.state) return

    var startEvent = $.Event('show.bs.offcanvas')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    this.state = 'slide-in'
    this.calcPlacement();

    var elements = this.getCanvasElements()
    var placement = this.placement
    var opposite = this.opposite(placement)
    var offset = this.offset()

    if (elements.index(this.$element) !== -1) {
      $(this.$element).data('offcanvas-style', $(this.$element).attr('style') || '')
      this.$element.css(placement, -1 * offset)
      this.$element.css(placement); // Workaround: Need to get the CSS property for it to be applied before the next line of code
    }

    elements.addClass('canvas-sliding').each(function() {
      if ($(this).data('offcanvas-style') === undefined) $(this).data('offcanvas-style', $(this).attr('style') || '')
      if ($(this).css('position') === 'static') $(this).css('position', 'relative')
      if (($(this).css(placement) === 'auto' || $(this).css(placement) === '0px') &&
          ($(this).css(opposite) === 'auto' || $(this).css(opposite) === '0px')) {
        $(this).css(placement, 0)
      }
    })

    if (this.options.disableScrolling) this.disableScrolling()
    if (this.options.modal) this.toggleBackdrop()

    var complete = function () {
      if (this.state != 'slide-in') return

      this.state = 'slid'

      elements.removeClass('canvas-sliding').addClass('canvas-slid')
      this.$element.trigger('shown.bs.offcanvas')
    }

    setTimeout($.proxy(function() {
      this.$element.addClass('in')
      this.slide(elements, offset, $.proxy(complete, this))
    }, this), 1)
  }

  OffCanvas.prototype.hide = function (fast) {
    if (this.state !== 'slid') return

    var startEvent = $.Event('hide.bs.offcanvas')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    this.state = 'slide-out'

    var elements = $('.canvas-slid')
    var placement = this.placement
    var offset = -1 * this.offset()

    var complete = function () {
      if (this.state != 'slide-out') return

      this.state = null
      this.placement = null

      this.$element.removeClass('in')

      elements.removeClass('canvas-sliding')
      elements.add(this.$element).add('body').each(function() {
        $(this).attr('style', $(this).data('offcanvas-style')).removeData('offcanvas-style')
      })

      this.$element.trigger('hidden.bs.offcanvas')
    }

    if (this.options.disableScrolling) this.enableScrolling()
    if (this.options.modal) this.toggleBackdrop()

    elements.removeClass('canvas-slid').addClass('canvas-sliding')

    setTimeout($.proxy(function() {
      this.slide(elements, offset, $.proxy(complete, this))
    }, this), 1)
  }

  OffCanvas.prototype.toggle = function () {
    if (this.state === 'slide-in' || this.state === 'slide-out') return
    this[this.state === 'slid' ? 'hide' : 'show']()
  }

  OffCanvas.prototype.toggleBackdrop = function (callback) {
    callback = callback || $.noop;
    if (this.state == 'slide-in') {
      var doAnimate = $.support.transition;

      this.$backdrop = $('<div class="modal-backdrop fade" />')
      .insertAfter(this.$element);

      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

      this.$backdrop.addClass('in')

      doAnimate ?
        this.$backdrop
        .one($.support.transition.end, callback)
        .emulateTransitionEnd(150) :
        callback()
    } else if (this.state == 'slide-out' && this.$backdrop) {
      this.$backdrop.removeClass('in');
      $('body').off('touchmove.bs');
      var self = this;
      if ($.support.transition) {
        this.$backdrop
          .one($.support.transition.end, function() {
            self.$backdrop.remove();
            callback()
            self.$backdrop = null;
          })
        .emulateTransitionEnd(150);
      } else {
        this.$backdrop.remove();
        this.$backdrop = null;
        callback();
      }
    } else if (callback) {
      callback()
    }
  }

  OffCanvas.prototype.calcClone = function() {
    this.$calcClone = this.$element.clone()
      .html('')
      .addClass('offcanvas-clone').removeClass('in')
      .appendTo($('body'))
  }

  OffCanvas.prototype.recalc = function () {
    if (this.$calcClone.css('display') === 'none' || (this.state !== 'slid' && this.state !== 'slide-in')) return

    this.state = null
    this.placement = null
    var elements = this.getCanvasElements()

    this.$element.removeClass('in')

    elements.removeClass('canvas-slid')
    elements.add(this.$element).add('body').each(function() {
      $(this).attr('style', $(this).data('offcanvas-style')).removeData('offcanvas-style')
    })
  }

  OffCanvas.prototype.autohide = function (e) {
    if ($(e.target).closest(this.$element).length === 0) this.hide()
  }

  // OFFCANVAS PLUGIN DEFINITION
  // ==========================

  var old = $.fn.offcanvas

  $.fn.offcanvas = function (option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.offcanvas')
      var options = $.extend({}, OffCanvas.DEFAULTS, $this.data(), typeof option === 'object' && option)

      if (!data) $this.data('bs.offcanvas', (data = new OffCanvas(this, options)))
      if (typeof option === 'string') data[option]()
    })
  }

  $.fn.offcanvas.Constructor = OffCanvas


  // OFFCANVAS NO CONFLICT
  // ====================

  $.fn.offcanvas.noConflict = function () {
    $.fn.offcanvas = old
    return this
  }


  // OFFCANVAS DATA-API
  // =================

  $(document).on('click.bs.offcanvas.data-api', '[data-toggle=offcanvas]', function (e) {
    var $this   = $(this), href
    var target  = $this.attr('data-target')
        || e.preventDefault()
        || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') //strip for ie7
    var $canvas = $(target)
    var data    = $canvas.data('bs.offcanvas')
    var option  = data ? 'toggle' : $this.data()

    e.stopPropagation()

    if (data) data.toggle()
      else $canvas.offcanvas(option)
  })

}(window.jQuery);


(function() {

  function initJasny() {
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('jasny') && initJasny.call(this)
  })

})()

;

(function() {
  function initFlot() {
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('flot') && initFlot.call(this)
  })
})()


;

(function() {

  function initChartJS() {
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('chartjs') && initChartJS.call(this)
  })

})()
;
/**
*
* jquery.sparkline.js
*
* v2.1.2
* (c) Splunk, Inc
* Contact: Gareth Watts (gareth@splunk.com)
* http://omnipotent.net/jquery.sparkline/
*
* Generates inline sparkline charts from data supplied either to the method
* or inline in HTML
*
* Compatible with Internet Explorer 6.0+ and modern browsers equipped with the canvas tag
* (Firefox 2.0+, Safari, Opera, etc)
*
* License: New BSD License
*
* Copyright (c) 2012, Splunk Inc.
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without modification,
* are permitted provided that the following conditions are met:
*
*     * Redistributions of source code must retain the above copyright notice,
*       this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright notice,
*       this list of conditions and the following disclaimer in the documentation
*       and/or other materials provided with the distribution.
*     * Neither the name of Splunk Inc nor the names of its contributors may
*       be used to endorse or promote products derived from this software without
*       specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
* OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
* SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
* OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
* HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*
*
* Usage:
*  $(selector).sparkline(values, options)
*
* If values is undefined or set to 'html' then the data values are read from the specified tag:
*   <p>Sparkline: <span class="sparkline">1,4,6,6,8,5,3,5</span></p>
*   $('.sparkline').sparkline();
* There must be no spaces in the enclosed data set
*
* Otherwise values must be an array of numbers or null values
*    <p>Sparkline: <span id="sparkline1">This text replaced if the browser is compatible</span></p>
*    $('#sparkline1').sparkline([1,4,6,6,8,5,3,5])
*    $('#sparkline2').sparkline([1,4,6,null,null,5,3,5])
*
* Values can also be specified in an HTML comment, or as a values attribute:
*    <p>Sparkline: <span class="sparkline"><!--1,4,6,6,8,5,3,5 --></span></p>
*    <p>Sparkline: <span class="sparkline" values="1,4,6,6,8,5,3,5"></span></p>
*    $('.sparkline').sparkline();
*
* For line charts, x values can also be specified:
*   <p>Sparkline: <span class="sparkline">1:1,2.7:4,3.4:6,5:6,6:8,8.7:5,9:3,10:5</span></p>
*    $('#sparkline1').sparkline([ [1,1], [2.7,4], [3.4,6], [5,6], [6,8], [8.7,5], [9,3], [10,5] ])
*
* By default, options should be passed in as teh second argument to the sparkline function:
*   $('.sparkline').sparkline([1,2,3,4], {type: 'bar'})
*
* Options can also be set by passing them on the tag itself.  This feature is disabled by default though
* as there's a slight performance overhead:
*   $('.sparkline').sparkline([1,2,3,4], {enableTagOptions: true})
*   <p>Sparkline: <span class="sparkline" sparkType="bar" sparkBarColor="red">loading</span></p>
* Prefix all options supplied as tag attribute with "spark" (configurable by setting tagOptionPrefix)
*
* Supported options:
*   lineColor - Color of the line used for the chart
*   fillColor - Color used to fill in the chart - Set to '' or false for a transparent chart
*   width - Width of the chart - Defaults to 3 times the number of values in pixels
*   height - Height of the chart - Defaults to the height of the containing element
*   chartRangeMin - Specify the minimum value to use for the Y range of the chart - Defaults to the minimum value supplied
*   chartRangeMax - Specify the maximum value to use for the Y range of the chart - Defaults to the maximum value supplied
*   chartRangeClip - Clip out of range values to the max/min specified by chartRangeMin and chartRangeMax
*   chartRangeMinX - Specify the minimum value to use for the X range of the chart - Defaults to the minimum value supplied
*   chartRangeMaxX - Specify the maximum value to use for the X range of the chart - Defaults to the maximum value supplied
*   composite - If true then don't erase any existing chart attached to the tag, but draw
*           another chart over the top - Note that width and height are ignored if an
*           existing chart is detected.
*   tagValuesAttribute - Name of tag attribute to check for data values - Defaults to 'values'
*   enableTagOptions - Whether to check tags for sparkline options
*   tagOptionPrefix - Prefix used for options supplied as tag attributes - Defaults to 'spark'
*   disableHiddenCheck - If set to true, then the plugin will assume that charts will never be drawn into a
*           hidden dom element, avoding a browser reflow
*   disableInteraction - If set to true then all mouseover/click interaction behaviour will be disabled,
*       making the plugin perform much like it did in 1.x
*   disableTooltips - If set to true then tooltips will be disabled - Defaults to false (tooltips enabled)
*   disableHighlight - If set to true then highlighting of selected chart elements on mouseover will be disabled
*       defaults to false (highlights enabled)
*   highlightLighten - Factor to lighten/darken highlighted chart values by - Defaults to 1.4 for a 40% increase
*   tooltipContainer - Specify which DOM element the tooltip should be rendered into - defaults to document.body
*   tooltipClassname - Optional CSS classname to apply to tooltips - If not specified then a default style will be applied
*   tooltipOffsetX - How many pixels away from the mouse pointer to render the tooltip on the X axis
*   tooltipOffsetY - How many pixels away from the mouse pointer to render the tooltip on the r axis
*   tooltipFormatter  - Optional callback that allows you to override the HTML displayed in the tooltip
*       callback is given arguments of (sparkline, options, fields)
*   tooltipChartTitle - If specified then the tooltip uses the string specified by this setting as a title
*   tooltipFormat - A format string or SPFormat object  (or an array thereof for multiple entries)
*       to control the format of the tooltip
*   tooltipPrefix - A string to prepend to each field displayed in a tooltip
*   tooltipSuffix - A string to append to each field displayed in a tooltip
*   tooltipSkipNull - If true then null values will not have a tooltip displayed (defaults to true)
*   tooltipValueLookups - An object or range map to map field values to tooltip strings
*       (eg. to map -1 to "Lost", 0 to "Draw", and 1 to "Win")
*   numberFormatter - Optional callback for formatting numbers in tooltips
*   numberDigitGroupSep - Character to use for group separator in numbers "1,234" - Defaults to ","
*   numberDecimalMark - Character to use for the decimal point when formatting numbers - Defaults to "."
*   numberDigitGroupCount - Number of digits between group separator - Defaults to 3
*
* There are 7 types of sparkline, selected by supplying a "type" option of 'line' (default),
* 'bar', 'tristate', 'bullet', 'discrete', 'pie' or 'box'
*    line - Line chart.  Options:
*       spotColor - Set to '' to not end each line in a circular spot
*       minSpotColor - If set, color of spot at minimum value
*       maxSpotColor - If set, color of spot at maximum value
*       spotRadius - Radius in pixels
*       lineWidth - Width of line in pixels
*       normalRangeMin
*       normalRangeMax - If set draws a filled horizontal bar between these two values marking the "normal"
*                      or expected range of values
*       normalRangeColor - Color to use for the above bar
*       drawNormalOnTop - Draw the normal range above the chart fill color if true
*       defaultPixelsPerValue - Defaults to 3 pixels of width for each value in the chart
*       highlightSpotColor - The color to use for drawing a highlight spot on mouseover - Set to null to disable
*       highlightLineColor - The color to use for drawing a highlight line on mouseover - Set to null to disable
*       valueSpots - Specify which points to draw spots on, and in which color.  Accepts a range map
*
*   bar - Bar chart.  Options:
*       barColor - Color of bars for postive values
*       negBarColor - Color of bars for negative values
*       zeroColor - Color of bars with zero values
*       nullColor - Color of bars with null values - Defaults to omitting the bar entirely
*       barWidth - Width of bars in pixels
*       colorMap - Optional mappnig of values to colors to override the *BarColor values above
*                  can be an Array of values to control the color of individual bars or a range map
*                  to specify colors for individual ranges of values
*       barSpacing - Gap between bars in pixels
*       zeroAxis - Centers the y-axis around zero if true
*
*   tristate - Charts values of win (>0), lose (<0) or draw (=0)
*       posBarColor - Color of win values
*       negBarColor - Color of lose values
*       zeroBarColor - Color of draw values
*       barWidth - Width of bars in pixels
*       barSpacing - Gap between bars in pixels
*       colorMap - Optional mappnig of values to colors to override the *BarColor values above
*                  can be an Array of values to control the color of individual bars or a range map
*                  to specify colors for individual ranges of values
*
*   discrete - Options:
*       lineHeight - Height of each line in pixels - Defaults to 30% of the graph height
*       thesholdValue - Values less than this value will be drawn using thresholdColor instead of lineColor
*       thresholdColor
*
*   bullet - Values for bullet graphs msut be in the order: target, performance, range1, range2, range3, ...
*       options:
*       targetColor - The color of the vertical target marker
*       targetWidth - The width of the target marker in pixels
*       performanceColor - The color of the performance measure horizontal bar
*       rangeColors - Colors to use for each qualitative range background color
*
*   pie - Pie chart. Options:
*       sliceColors - An array of colors to use for pie slices
*       offset - Angle in degrees to offset the first slice - Try -90 or +90
*       borderWidth - Width of border to draw around the pie chart, in pixels - Defaults to 0 (no border)
*       borderColor - Color to use for the pie chart border - Defaults to #000
*
*   box - Box plot. Options:
*       raw - Set to true to supply pre-computed plot points as values
*             values should be: low_outlier, low_whisker, q1, median, q3, high_whisker, high_outlier
*             When set to false you can supply any number of values and the box plot will
*             be computed for you.  Default is false.
*       showOutliers - Set to true (default) to display outliers as circles
*       outlierIQR - Interquartile range used to determine outliers.  Default 1.5
*       boxLineColor - Outline color of the box
*       boxFillColor - Fill color for the box
*       whiskerColor - Line color used for whiskers
*       outlierLineColor - Outline color of outlier circles
*       outlierFillColor - Fill color of the outlier circles
*       spotRadius - Radius of outlier circles
*       medianColor - Line color of the median line
*       target - Draw a target cross hair at the supplied value (default undefined)
*
*
*
*   Examples:
*   $('#sparkline1').sparkline(myvalues, { lineColor: '#f00', fillColor: false });
*   $('.barsparks').sparkline('html', { type:'bar', height:'40px', barWidth:5 });
*   $('#tristate').sparkline([1,1,-1,1,0,0,-1], { type:'tristate' }):
*   $('#discrete').sparkline([1,3,4,5,5,3,4,5], { type:'discrete' });
*   $('#bullet').sparkline([10,12,12,9,7], { type:'bullet' });
*   $('#pie').sparkline([1,1,2], { type:'pie' });
*/

/*jslint regexp: true, browser: true, jquery: true, white: true, nomen: false, plusplus: false, maxerr: 500, indent: 4 */


(function(document, Math, undefined) { // performance/minified-size optimization
(function(factory) {
    if(typeof define === 'function' && define.amd) {
        define(['jquery'], factory);
    } else if (jQuery && !jQuery.fn.sparkline) {
        factory(jQuery);
    }
}
(function($) {
    'use strict';

    var UNSET_OPTION = {},
        getDefaults, createClass, SPFormat, clipval, quartile, normalizeValue, normalizeValues,
        remove, isNumber, all, sum, addCSS, ensureArray, formatNumber, RangeMap,
        MouseHandler, Tooltip, barHighlightMixin,
        line, bar, tristate, discrete, bullet, pie, box, defaultStyles, initStyles,
        VShape, VCanvas_base, VCanvas_canvas, VCanvas_vml, pending, shapeCount = 0;

    /**
     * Default configuration settings
     */
    getDefaults = function () {
        return {
            // Settings common to most/all chart types
            common: {
                type: 'line',
                lineColor: '#00f',
                fillColor: '#cdf',
                defaultPixelsPerValue: 3,
                width: 'auto',
                height: 'auto',
                composite: false,
                tagValuesAttribute: 'values',
                tagOptionsPrefix: 'spark',
                enableTagOptions: false,
                enableHighlight: true,
                highlightLighten: 1.4,
                tooltipSkipNull: true,
                tooltipPrefix: '',
                tooltipSuffix: '',
                disableHiddenCheck: false,
                numberFormatter: false,
                numberDigitGroupCount: 3,
                numberDigitGroupSep: ',',
                numberDecimalMark: '.',
                disableTooltips: false,
                disableInteraction: false
            },
            // Defaults for line charts
            line: {
                spotColor: '#f80',
                highlightSpotColor: '#5f5',
                highlightLineColor: '#f22',
                spotRadius: 1.5,
                minSpotColor: '#f80',
                maxSpotColor: '#f80',
                lineWidth: 1,
                normalRangeMin: undefined,
                normalRangeMax: undefined,
                normalRangeColor: '#ccc',
                drawNormalOnTop: false,
                chartRangeMin: undefined,
                chartRangeMax: undefined,
                chartRangeMinX: undefined,
                chartRangeMaxX: undefined,
                tooltipFormat: new SPFormat('<span style="color: {{color}}">&#9679;</span> {{prefix}}{{y}}{{suffix}}')
            },
            // Defaults for bar charts
            bar: {
                barColor: '#3366cc',
                negBarColor: '#f44',
                stackedBarColor: ['#3366cc', '#dc3912', '#ff9900', '#109618', '#66aa00',
                    '#dd4477', '#0099c6', '#990099'],
                zeroColor: undefined,
                nullColor: undefined,
                zeroAxis: true,
                barWidth: 4,
                barSpacing: 1,
                chartRangeMax: undefined,
                chartRangeMin: undefined,
                chartRangeClip: false,
                colorMap: undefined,
                tooltipFormat: new SPFormat('<span style="color: {{color}}">&#9679;</span> {{prefix}}{{value}}{{suffix}}')
            },
            // Defaults for tristate charts
            tristate: {
                barWidth: 4,
                barSpacing: 1,
                posBarColor: '#6f6',
                negBarColor: '#f44',
                zeroBarColor: '#999',
                colorMap: {},
                tooltipFormat: new SPFormat('<span style="color: {{color}}">&#9679;</span> {{value:map}}'),
                tooltipValueLookups: { map: { '-1': 'Loss', '0': 'Draw', '1': 'Win' } }
            },
            // Defaults for discrete charts
            discrete: {
                lineHeight: 'auto',
                thresholdColor: undefined,
                thresholdValue: 0,
                chartRangeMax: undefined,
                chartRangeMin: undefined,
                chartRangeClip: false,
                tooltipFormat: new SPFormat('{{prefix}}{{value}}{{suffix}}')
            },
            // Defaults for bullet charts
            bullet: {
                targetColor: '#f33',
                targetWidth: 3, // width of the target bar in pixels
                performanceColor: '#33f',
                rangeColors: ['#d3dafe', '#a8b6ff', '#7f94ff'],
                base: undefined, // set this to a number to change the base start number
                tooltipFormat: new SPFormat('{{fieldkey:fields}} - {{value}}'),
                tooltipValueLookups: { fields: {r: 'Range', p: 'Performance', t: 'Target'} }
            },
            // Defaults for pie charts
            pie: {
                offset: 0,
                sliceColors: ['#3366cc', '#dc3912', '#ff9900', '#109618', '#66aa00',
                    '#dd4477', '#0099c6', '#990099'],
                borderWidth: 0,
                borderColor: '#000',
                tooltipFormat: new SPFormat('<span style="color: {{color}}">&#9679;</span> {{value}} ({{percent.1}}%)')
            },
            // Defaults for box plots
            box: {
                raw: false,
                boxLineColor: '#000',
                boxFillColor: '#cdf',
                whiskerColor: '#000',
                outlierLineColor: '#333',
                outlierFillColor: '#fff',
                medianColor: '#f00',
                showOutliers: true,
                outlierIQR: 1.5,
                spotRadius: 1.5,
                target: undefined,
                targetColor: '#4a2',
                chartRangeMax: undefined,
                chartRangeMin: undefined,
                tooltipFormat: new SPFormat('{{field:fields}}: {{value}}'),
                tooltipFormatFieldlistKey: 'field',
                tooltipValueLookups: { fields: { lq: 'Lower Quartile', med: 'Median',
                    uq: 'Upper Quartile', lo: 'Left Outlier', ro: 'Right Outlier',
                    lw: 'Left Whisker', rw: 'Right Whisker'} }
            }
        };
    };

    // You can have tooltips use a css class other than jqstooltip by specifying tooltipClassname
    defaultStyles = '.jqstooltip { ' +
            'position: absolute;' +
            'left: 0px;' +
            'top: 0px;' +
            'visibility: hidden;' +
            'background: rgb(0, 0, 0) transparent;' +
            'background-color: rgba(0,0,0,0.6);' +
            'filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000);' +
            '-ms-filter: "progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)";' +
            'color: white;' +
            'font: 10px arial, san serif;' +
            'text-align: left;' +
            'white-space: nowrap;' +
            'padding: 5px;' +
            'border: 1px solid white;' +
            'z-index: 10000;' +
            '}' +
            '.jqsfield { ' +
            'color: white;' +
            'font: 10px arial, san serif;' +
            'text-align: left;' +
            '}';

    /**
     * Utilities
     */

    createClass = function (/* [baseclass, [mixin, ...]], definition */) {
        var Class, args;
        Class = function () {
            this.init.apply(this, arguments);
        };
        if (arguments.length > 1) {
            if (arguments[0]) {
                Class.prototype = $.extend(new arguments[0](), arguments[arguments.length - 1]);
                Class._super = arguments[0].prototype;
            } else {
                Class.prototype = arguments[arguments.length - 1];
            }
            if (arguments.length > 2) {
                args = Array.prototype.slice.call(arguments, 1, -1);
                args.unshift(Class.prototype);
                $.extend.apply($, args);
            }
        } else {
            Class.prototype = arguments[0];
        }
        Class.prototype.cls = Class;
        return Class;
    };

    /**
     * Wraps a format string for tooltips
     * {{x}}
     * {{x.2}
     * {{x:months}}
     */
    $.SPFormatClass = SPFormat = createClass({
        fre: /\{\{([\w.]+?)(:(.+?))?\}\}/g,
        precre: /(\w+)\.(\d+)/,

        init: function (format, fclass) {
            this.format = format;
            this.fclass = fclass;
        },

        render: function (fieldset, lookups, options) {
            var self = this,
                fields = fieldset,
                match, token, lookupkey, fieldvalue, prec;
            return this.format.replace(this.fre, function () {
                var lookup;
                token = arguments[1];
                lookupkey = arguments[3];
                match = self.precre.exec(token);
                if (match) {
                    prec = match[2];
                    token = match[1];
                } else {
                    prec = false;
                }
                fieldvalue = fields[token];
                if (fieldvalue === undefined) {
                    return '';
                }
                if (lookupkey && lookups && lookups[lookupkey]) {
                    lookup = lookups[lookupkey];
                    if (lookup.get) { // RangeMap
                        return lookups[lookupkey].get(fieldvalue) || fieldvalue;
                    } else {
                        return lookups[lookupkey][fieldvalue] || fieldvalue;
                    }
                }
                if (isNumber(fieldvalue)) {
                    if (options.get('numberFormatter')) {
                        fieldvalue = options.get('numberFormatter')(fieldvalue);
                    } else {
                        fieldvalue = formatNumber(fieldvalue, prec,
                            options.get('numberDigitGroupCount'),
                            options.get('numberDigitGroupSep'),
                            options.get('numberDecimalMark'));
                    }
                }
                return fieldvalue;
            });
        }
    });

    // convience method to avoid needing the new operator
    $.spformat = function(format, fclass) {
        return new SPFormat(format, fclass);
    };

    clipval = function (val, min, max) {
        if (val < min) {
            return min;
        }
        if (val > max) {
            return max;
        }
        return val;
    };

    quartile = function (values, q) {
        var vl;
        if (q === 2) {
            vl = Math.floor(values.length / 2);
            return values.length % 2 ? values[vl] : (values[vl-1] + values[vl]) / 2;
        } else {
            if (values.length % 2 ) { // odd
                vl = (values.length * q + q) / 4;
                return vl % 1 ? (values[Math.floor(vl)] + values[Math.floor(vl) - 1]) / 2 : values[vl-1];
            } else { //even
                vl = (values.length * q + 2) / 4;
                return vl % 1 ? (values[Math.floor(vl)] + values[Math.floor(vl) - 1]) / 2 :  values[vl-1];

            }
        }
    };

    normalizeValue = function (val) {
        var nf;
        switch (val) {
            case 'undefined':
                val = undefined;
                break;
            case 'null':
                val = null;
                break;
            case 'true':
                val = true;
                break;
            case 'false':
                val = false;
                break;
            default:
                nf = parseFloat(val);
                if (val == nf) {
                    val = nf;
                }
        }
        return val;
    };

    normalizeValues = function (vals) {
        var i, result = [];
        for (i = vals.length; i--;) {
            result[i] = normalizeValue(vals[i]);
        }
        return result;
    };

    remove = function (vals, filter) {
        var i, vl, result = [];
        for (i = 0, vl = vals.length; i < vl; i++) {
            if (vals[i] !== filter) {
                result.push(vals[i]);
            }
        }
        return result;
    };

    isNumber = function (num) {
        return !isNaN(parseFloat(num)) && isFinite(num);
    };

    formatNumber = function (num, prec, groupsize, groupsep, decsep) {
        var p, i;
        num = (prec === false ? parseFloat(num).toString() : num.toFixed(prec)).split('');
        p = (p = $.inArray('.', num)) < 0 ? num.length : p;
        if (p < num.length) {
            num[p] = decsep;
        }
        for (i = p - groupsize; i > 0; i -= groupsize) {
            num.splice(i, 0, groupsep);
        }
        return num.join('');
    };

    // determine if all values of an array match a value
    // returns true if the array is empty
    all = function (val, arr, ignoreNull) {
        var i;
        for (i = arr.length; i--; ) {
            if (ignoreNull && arr[i] === null) continue;
            if (arr[i] !== val) {
                return false;
            }
        }
        return true;
    };

    // sums the numeric values in an array, ignoring other values
    sum = function (vals) {
        var total = 0, i;
        for (i = vals.length; i--;) {
            total += typeof vals[i] === 'number' ? vals[i] : 0;
        }
        return total;
    };

    ensureArray = function (val) {
        return $.isArray(val) ? val : [val];
    };

    // http://paulirish.com/2008/bookmarklet-inject-new-css-rules/
    addCSS = function(css) {
        var tag;
        //if ('\v' == 'v') /* ie only */ {
        if (document.createStyleSheet) {
            document.createStyleSheet().cssText = css;
        } else {
            tag = document.createElement('style');
            tag.type = 'text/css';
            document.getElementsByTagName('head')[0].appendChild(tag);
            tag[(typeof document.body.style.WebkitAppearance == 'string') /* webkit only */ ? 'innerText' : 'innerHTML'] = css;
        }
    };

    // Provide a cross-browser interface to a few simple drawing primitives
    $.fn.simpledraw = function (width, height, useExisting, interact) {
        var target, mhandler;
        if (useExisting && (target = this.data('_jqs_vcanvas'))) {
            return target;
        }

        if ($.fn.sparkline.canvas === false) {
            // We've already determined that neither Canvas nor VML are available
            return false;

        } else if ($.fn.sparkline.canvas === undefined) {
            // No function defined yet -- need to see if we support Canvas or VML
            var el = document.createElement('canvas');
            if (!!(el.getContext && el.getContext('2d'))) {
                // Canvas is available
                $.fn.sparkline.canvas = function(width, height, target, interact) {
                    return new VCanvas_canvas(width, height, target, interact);
                };
            } else if (document.namespaces && !document.namespaces.v) {
                // VML is available
                document.namespaces.add('v', 'urn:schemas-microsoft-com:vml', '#default#VML');
                $.fn.sparkline.canvas = function(width, height, target, interact) {
                    return new VCanvas_vml(width, height, target);
                };
            } else {
                // Neither Canvas nor VML are available
                $.fn.sparkline.canvas = false;
                return false;
            }
        }

        if (width === undefined) {
            width = $(this).innerWidth();
        }
        if (height === undefined) {
            height = $(this).innerHeight();
        }

        target = $.fn.sparkline.canvas(width, height, this, interact);

        mhandler = $(this).data('_jqs_mhandler');
        if (mhandler) {
            mhandler.registerCanvas(target);
        }
        return target;
    };

    $.fn.cleardraw = function () {
        var target = this.data('_jqs_vcanvas');
        if (target) {
            target.reset();
        }
    };

    $.RangeMapClass = RangeMap = createClass({
        init: function (map) {
            var key, range, rangelist = [];
            for (key in map) {
                if (map.hasOwnProperty(key) && typeof key === 'string' && key.indexOf(':') > -1) {
                    range = key.split(':');
                    range[0] = range[0].length === 0 ? -Infinity : parseFloat(range[0]);
                    range[1] = range[1].length === 0 ? Infinity : parseFloat(range[1]);
                    range[2] = map[key];
                    rangelist.push(range);
                }
            }
            this.map = map;
            this.rangelist = rangelist || false;
        },

        get: function (value) {
            var rangelist = this.rangelist,
                i, range, result;
            if ((result = this.map[value]) !== undefined) {
                return result;
            }
            if (rangelist) {
                for (i = rangelist.length; i--;) {
                    range = rangelist[i];
                    if (range[0] <= value && range[1] >= value) {
                        return range[2];
                    }
                }
            }
            return undefined;
        }
    });

    // Convenience function
    $.range_map = function(map) {
        return new RangeMap(map);
    };

    MouseHandler = createClass({
        init: function (el, options) {
            var $el = $(el);
            this.$el = $el;
            this.options = options;
            this.currentPageX = 0;
            this.currentPageY = 0;
            this.el = el;
            this.splist = [];
            this.tooltip = null;
            this.over = false;
            this.displayTooltips = !options.get('disableTooltips');
            this.highlightEnabled = !options.get('disableHighlight');
        },

        registerSparkline: function (sp) {
            this.splist.push(sp);
            if (this.over) {
                this.updateDisplay();
            }
        },

        registerCanvas: function (canvas) {
            var $canvas = $(canvas.canvas);
            this.canvas = canvas;
            this.$canvas = $canvas;
            $canvas.mouseenter($.proxy(this.mouseenter, this));
            $canvas.mouseleave($.proxy(this.mouseleave, this));
            $canvas.click($.proxy(this.mouseclick, this));
        },

        reset: function (removeTooltip) {
            this.splist = [];
            if (this.tooltip && removeTooltip) {
                this.tooltip.remove();
                this.tooltip = undefined;
            }
        },

        mouseclick: function (e) {
            var clickEvent = $.Event('sparklineClick');
            clickEvent.originalEvent = e;
            clickEvent.sparklines = this.splist;
            this.$el.trigger(clickEvent);
        },

        mouseenter: function (e) {
            $(document.body).unbind('mousemove.jqs');
            $(document.body).bind('mousemove.jqs', $.proxy(this.mousemove, this));
            this.over = true;
            this.currentPageX = e.pageX;
            this.currentPageY = e.pageY;
            this.currentEl = e.target;
            if (!this.tooltip && this.displayTooltips) {
                this.tooltip = new Tooltip(this.options);
                this.tooltip.updatePosition(e.pageX, e.pageY);
            }
            this.updateDisplay();
        },

        mouseleave: function () {
            $(document.body).unbind('mousemove.jqs');
            var splist = this.splist,
                 spcount = splist.length,
                 needsRefresh = false,
                 sp, i;
            this.over = false;
            this.currentEl = null;

            if (this.tooltip) {
                this.tooltip.remove();
                this.tooltip = null;
            }

            for (i = 0; i < spcount; i++) {
                sp = splist[i];
                if (sp.clearRegionHighlight()) {
                    needsRefresh = true;
                }
            }

            if (needsRefresh) {
                this.canvas.render();
            }
        },

        mousemove: function (e) {
            this.currentPageX = e.pageX;
            this.currentPageY = e.pageY;
            this.currentEl = e.target;
            if (this.tooltip) {
                this.tooltip.updatePosition(e.pageX, e.pageY);
            }
            this.updateDisplay();
        },

        updateDisplay: function () {
            var splist = this.splist,
                 spcount = splist.length,
                 needsRefresh = false,
                 offset = this.$canvas.offset(),
                 localX = this.currentPageX - offset.left,
                 localY = this.currentPageY - offset.top,
                 tooltiphtml, sp, i, result, changeEvent;
            if (!this.over) {
                return;
            }
            for (i = 0; i < spcount; i++) {
                sp = splist[i];
                result = sp.setRegionHighlight(this.currentEl, localX, localY);
                if (result) {
                    needsRefresh = true;
                }
            }
            if (needsRefresh) {
                changeEvent = $.Event('sparklineRegionChange');
                changeEvent.sparklines = this.splist;
                this.$el.trigger(changeEvent);
                if (this.tooltip) {
                    tooltiphtml = '';
                    for (i = 0; i < spcount; i++) {
                        sp = splist[i];
                        tooltiphtml += sp.getCurrentRegionTooltip();
                    }
                    this.tooltip.setContent(tooltiphtml);
                }
                if (!this.disableHighlight) {
                    this.canvas.render();
                }
            }
            if (result === null) {
                this.mouseleave();
            }
        }
    });


    Tooltip = createClass({
        sizeStyle: 'position: static !important;' +
            'display: block !important;' +
            'visibility: hidden !important;' +
            'float: left !important;',

        init: function (options) {
            var tooltipClassname = options.get('tooltipClassname', 'jqstooltip'),
                sizetipStyle = this.sizeStyle,
                offset;
            this.container = options.get('tooltipContainer') || document.body;
            this.tooltipOffsetX = options.get('tooltipOffsetX', 10);
            this.tooltipOffsetY = options.get('tooltipOffsetY', 12);
            // remove any previous lingering tooltip
            $('#jqssizetip').remove();
            $('#jqstooltip').remove();
            this.sizetip = $('<div/>', {
                id: 'jqssizetip',
                style: sizetipStyle,
                'class': tooltipClassname
            });
            this.tooltip = $('<div/>', {
                id: 'jqstooltip',
                'class': tooltipClassname
            }).appendTo(this.container);
            // account for the container's location
            offset = this.tooltip.offset();
            this.offsetLeft = offset.left;
            this.offsetTop = offset.top;
            this.hidden = true;
            $(window).unbind('resize.jqs scroll.jqs');
            $(window).bind('resize.jqs scroll.jqs', $.proxy(this.updateWindowDims, this));
            this.updateWindowDims();
        },

        updateWindowDims: function () {
            this.scrollTop = $(window).scrollTop();
            this.scrollLeft = $(window).scrollLeft();
            this.scrollRight = this.scrollLeft + $(window).width();
            this.updatePosition();
        },

        getSize: function (content) {
            this.sizetip.html(content).appendTo(this.container);
            this.width = this.sizetip.width() + 1;
            this.height = this.sizetip.height();
            this.sizetip.remove();
        },

        setContent: function (content) {
            if (!content) {
                this.tooltip.css('visibility', 'hidden');
                this.hidden = true;
                return;
            }
            this.getSize(content);
            this.tooltip.html(content)
                .css({
                    'width': this.width,
                    'height': this.height,
                    'visibility': 'visible'
                });
            if (this.hidden) {
                this.hidden = false;
                this.updatePosition();
            }
        },

        updatePosition: function (x, y) {
            if (x === undefined) {
                if (this.mousex === undefined) {
                    return;
                }
                x = this.mousex - this.offsetLeft;
                y = this.mousey - this.offsetTop;

            } else {
                this.mousex = x = x - this.offsetLeft;
                this.mousey = y = y - this.offsetTop;
            }
            if (!this.height || !this.width || this.hidden) {
                return;
            }

            y -= this.height + this.tooltipOffsetY;
            x += this.tooltipOffsetX;

            if (y < this.scrollTop) {
                y = this.scrollTop;
            }
            if (x < this.scrollLeft) {
                x = this.scrollLeft;
            } else if (x + this.width > this.scrollRight) {
                x = this.scrollRight - this.width;
            }

            this.tooltip.css({
                'left': x,
                'top': y
            });
        },

        remove: function () {
            this.tooltip.remove();
            this.sizetip.remove();
            this.sizetip = this.tooltip = undefined;
            $(window).unbind('resize.jqs scroll.jqs');
        }
    });

    initStyles = function() {
        addCSS(defaultStyles);
    };

    $(initStyles);

    pending = [];
    $.fn.sparkline = function (userValues, userOptions) {
        return this.each(function () {
            var options = new $.fn.sparkline.options(this, userOptions),
                 $this = $(this),
                 render, i;
            render = function () {
                var values, width, height, tmp, mhandler, sp, vals;
                if (userValues === 'html' || userValues === undefined) {
                    vals = this.getAttribute(options.get('tagValuesAttribute'));
                    if (vals === undefined || vals === null) {
                        vals = $this.html();
                    }
                    values = vals.replace(/(^\s*<!--)|(-->\s*$)|\s+/g, '').split(',');
                } else {
                    values = userValues;
                }

                width = options.get('width') === 'auto' ? values.length * options.get('defaultPixelsPerValue') : options.get('width');
                if (options.get('height') === 'auto') {
                    if (!options.get('composite') || !$.data(this, '_jqs_vcanvas')) {
                        // must be a better way to get the line height
                        tmp = document.createElement('span');
                        tmp.innerHTML = 'a';
                        $this.html(tmp);
                        height = $(tmp).innerHeight() || $(tmp).height();
                        $(tmp).remove();
                        tmp = null;
                    }
                } else {
                    height = options.get('height');
                }

                if (!options.get('disableInteraction')) {
                    mhandler = $.data(this, '_jqs_mhandler');
                    if (!mhandler) {
                        mhandler = new MouseHandler(this, options);
                        $.data(this, '_jqs_mhandler', mhandler);
                    } else if (!options.get('composite')) {
                        mhandler.reset();
                    }
                } else {
                    mhandler = false;
                }

                if (options.get('composite') && !$.data(this, '_jqs_vcanvas')) {
                    if (!$.data(this, '_jqs_errnotify')) {
                        alert('Attempted to attach a composite sparkline to an element with no existing sparkline');
                        $.data(this, '_jqs_errnotify', true);
                    }
                    return;
                }

                sp = new $.fn.sparkline[options.get('type')](this, values, options, width, height);

                sp.render();

                if (mhandler) {
                    mhandler.registerSparkline(sp);
                }
            };
            if (($(this).html() && !options.get('disableHiddenCheck') && $(this).is(':hidden')) || !$(this).parents('body').length) {
                if (!options.get('composite') && $.data(this, '_jqs_pending')) {
                    // remove any existing references to the element
                    for (i = pending.length; i; i--) {
                        if (pending[i - 1][0] == this) {
                            pending.splice(i - 1, 1);
                        }
                    }
                }
                pending.push([this, render]);
                $.data(this, '_jqs_pending', true);
            } else {
                render.call(this);
            }
        });
    };

    $.fn.sparkline.defaults = getDefaults();


    $.sparkline_display_visible = function () {
        var el, i, pl;
        var done = [];
        for (i = 0, pl = pending.length; i < pl; i++) {
            el = pending[i][0];
            if ($(el).is(':visible') && !$(el).parents().is(':hidden')) {
                pending[i][1].call(el);
                $.data(pending[i][0], '_jqs_pending', false);
                done.push(i);
            } else if (!$(el).closest('html').length && !$.data(el, '_jqs_pending')) {
                // element has been inserted and removed from the DOM
                // If it was not yet inserted into the dom then the .data request
                // will return true.
                // removing from the dom causes the data to be removed.
                $.data(pending[i][0], '_jqs_pending', false);
                done.push(i);
            }
        }
        for (i = done.length; i; i--) {
            pending.splice(done[i - 1], 1);
        }
    };


    /**
     * User option handler
     */
    $.fn.sparkline.options = createClass({
        init: function (tag, userOptions) {
            var extendedOptions, defaults, base, tagOptionType;
            this.userOptions = userOptions = userOptions || {};
            this.tag = tag;
            this.tagValCache = {};
            defaults = $.fn.sparkline.defaults;
            base = defaults.common;
            this.tagOptionsPrefix = userOptions.enableTagOptions && (userOptions.tagOptionsPrefix || base.tagOptionsPrefix);

            tagOptionType = this.getTagSetting('type');
            if (tagOptionType === UNSET_OPTION) {
                extendedOptions = defaults[userOptions.type || base.type];
            } else {
                extendedOptions = defaults[tagOptionType];
            }
            this.mergedOptions = $.extend({}, base, extendedOptions, userOptions);
        },


        getTagSetting: function (key) {
            var prefix = this.tagOptionsPrefix,
                val, i, pairs, keyval;
            if (prefix === false || prefix === undefined) {
                return UNSET_OPTION;
            }
            if (this.tagValCache.hasOwnProperty(key)) {
                val = this.tagValCache.key;
            } else {
                val = this.tag.getAttribute(prefix + key);
                if (val === undefined || val === null) {
                    val = UNSET_OPTION;
                } else if (val.substr(0, 1) === '[') {
                    val = val.substr(1, val.length - 2).split(',');
                    for (i = val.length; i--;) {
                        val[i] = normalizeValue(val[i].replace(/(^\s*)|(\s*$)/g, ''));
                    }
                } else if (val.substr(0, 1) === '{') {
                    pairs = val.substr(1, val.length - 2).split(',');
                    val = {};
                    for (i = pairs.length; i--;) {
                        keyval = pairs[i].split(':', 2);
                        val[keyval[0].replace(/(^\s*)|(\s*$)/g, '')] = normalizeValue(keyval[1].replace(/(^\s*)|(\s*$)/g, ''));
                    }
                } else {
                    val = normalizeValue(val);
                }
                this.tagValCache.key = val;
            }
            return val;
        },

        get: function (key, defaultval) {
            var tagOption = this.getTagSetting(key),
                result;
            if (tagOption !== UNSET_OPTION) {
                return tagOption;
            }
            return (result = this.mergedOptions[key]) === undefined ? defaultval : result;
        }
    });


    $.fn.sparkline._base = createClass({
        disabled: false,

        init: function (el, values, options, width, height) {
            this.el = el;
            this.$el = $(el);
            this.values = values;
            this.options = options;
            this.width = width;
            this.height = height;
            this.currentRegion = undefined;
        },

        /**
         * Setup the canvas
         */
        initTarget: function () {
            var interactive = !this.options.get('disableInteraction');
            if (!(this.target = this.$el.simpledraw(this.width, this.height, this.options.get('composite'), interactive))) {
                this.disabled = true;
            } else {
                this.canvasWidth = this.target.pixelWidth;
                this.canvasHeight = this.target.pixelHeight;
            }
        },

        /**
         * Actually render the chart to the canvas
         */
        render: function () {
            if (this.disabled) {
                this.el.innerHTML = '';
                return false;
            }
            return true;
        },

        /**
         * Return a region id for a given x/y co-ordinate
         */
        getRegion: function (x, y) {
        },

        /**
         * Highlight an item based on the moused-over x,y co-ordinate
         */
        setRegionHighlight: function (el, x, y) {
            var currentRegion = this.currentRegion,
                highlightEnabled = !this.options.get('disableHighlight'),
                newRegion;
            if (x > this.canvasWidth || y > this.canvasHeight || x < 0 || y < 0) {
                return null;
            }
            newRegion = this.getRegion(el, x, y);
            if (currentRegion !== newRegion) {
                if (currentRegion !== undefined && highlightEnabled) {
                    this.removeHighlight();
                }
                this.currentRegion = newRegion;
                if (newRegion !== undefined && highlightEnabled) {
                    this.renderHighlight();
                }
                return true;
            }
            return false;
        },

        /**
         * Reset any currently highlighted item
         */
        clearRegionHighlight: function () {
            if (this.currentRegion !== undefined) {
                this.removeHighlight();
                this.currentRegion = undefined;
                return true;
            }
            return false;
        },

        renderHighlight: function () {
            this.changeHighlight(true);
        },

        removeHighlight: function () {
            this.changeHighlight(false);
        },

        changeHighlight: function (highlight)  {},

        /**
         * Fetch the HTML to display as a tooltip
         */
        getCurrentRegionTooltip: function () {
            var options = this.options,
                header = '',
                entries = [],
                fields, formats, formatlen, fclass, text, i,
                showFields, showFieldsKey, newFields, fv,
                formatter, format, fieldlen, j;
            if (this.currentRegion === undefined) {
                return '';
            }
            fields = this.getCurrentRegionFields();
            formatter = options.get('tooltipFormatter');
            if (formatter) {
                return formatter(this, options, fields);
            }
            if (options.get('tooltipChartTitle')) {
                header += '<div class="jqs jqstitle">' + options.get('tooltipChartTitle') + '</div>\n';
            }
            formats = this.options.get('tooltipFormat');
            if (!formats) {
                return '';
            }
            if (!$.isArray(formats)) {
                formats = [formats];
            }
            if (!$.isArray(fields)) {
                fields = [fields];
            }
            showFields = this.options.get('tooltipFormatFieldlist');
            showFieldsKey = this.options.get('tooltipFormatFieldlistKey');
            if (showFields && showFieldsKey) {
                // user-selected ordering of fields
                newFields = [];
                for (i = fields.length; i--;) {
                    fv = fields[i][showFieldsKey];
                    if ((j = $.inArray(fv, showFields)) != -1) {
                        newFields[j] = fields[i];
                    }
                }
                fields = newFields;
            }
            formatlen = formats.length;
            fieldlen = fields.length;
            for (i = 0; i < formatlen; i++) {
                format = formats[i];
                if (typeof format === 'string') {
                    format = new SPFormat(format);
                }
                fclass = format.fclass || 'jqsfield';
                for (j = 0; j < fieldlen; j++) {
                    if (!fields[j].isNull || !options.get('tooltipSkipNull')) {
                        $.extend(fields[j], {
                            prefix: options.get('tooltipPrefix'),
                            suffix: options.get('tooltipSuffix')
                        });
                        text = format.render(fields[j], options.get('tooltipValueLookups'), options);
                        entries.push('<div class="' + fclass + '">' + text + '</div>');
                    }
                }
            }
            if (entries.length) {
                return header + entries.join('\n');
            }
            return '';
        },

        getCurrentRegionFields: function () {},

        calcHighlightColor: function (color, options) {
            var highlightColor = options.get('highlightColor'),
                lighten = options.get('highlightLighten'),
                parse, mult, rgbnew, i;
            if (highlightColor) {
                return highlightColor;
            }
            if (lighten) {
                // extract RGB values
                parse = /^#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(color) || /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(color);
                if (parse) {
                    rgbnew = [];
                    mult = color.length === 4 ? 16 : 1;
                    for (i = 0; i < 3; i++) {
                        rgbnew[i] = clipval(Math.round(parseInt(parse[i + 1], 16) * mult * lighten), 0, 255);
                    }
                    return 'rgb(' + rgbnew.join(',') + ')';
                }

            }
            return color;
        }

    });

    barHighlightMixin = {
        changeHighlight: function (highlight) {
            var currentRegion = this.currentRegion,
                target = this.target,
                shapeids = this.regionShapes[currentRegion],
                newShapes;
            // will be null if the region value was null
            if (shapeids) {
                newShapes = this.renderRegion(currentRegion, highlight);
                if ($.isArray(newShapes) || $.isArray(shapeids)) {
                    target.replaceWithShapes(shapeids, newShapes);
                    this.regionShapes[currentRegion] = $.map(newShapes, function (newShape) {
                        return newShape.id;
                    });
                } else {
                    target.replaceWithShape(shapeids, newShapes);
                    this.regionShapes[currentRegion] = newShapes.id;
                }
            }
        },

        render: function () {
            var values = this.values,
                target = this.target,
                regionShapes = this.regionShapes,
                shapes, ids, i, j;

            if (!this.cls._super.render.call(this)) {
                return;
            }
            for (i = values.length; i--;) {
                shapes = this.renderRegion(i);
                if (shapes) {
                    if ($.isArray(shapes)) {
                        ids = [];
                        for (j = shapes.length; j--;) {
                            shapes[j].append();
                            ids.push(shapes[j].id);
                        }
                        regionShapes[i] = ids;
                    } else {
                        shapes.append();
                        regionShapes[i] = shapes.id; // store just the shapeid
                    }
                } else {
                    // null value
                    regionShapes[i] = null;
                }
            }
            target.render();
        }
    };

    /**
     * Line charts
     */
    $.fn.sparkline.line = line = createClass($.fn.sparkline._base, {
        type: 'line',

        init: function (el, values, options, width, height) {
            line._super.init.call(this, el, values, options, width, height);
            this.vertices = [];
            this.regionMap = [];
            this.xvalues = [];
            this.yvalues = [];
            this.yminmax = [];
            this.hightlightSpotId = null;
            this.lastShapeId = null;
            this.initTarget();
        },

        getRegion: function (el, x, y) {
            var i,
                regionMap = this.regionMap; // maps regions to value positions
            for (i = regionMap.length; i--;) {
                if (regionMap[i] !== null && x >= regionMap[i][0] && x <= regionMap[i][1]) {
                    return regionMap[i][2];
                }
            }
            return undefined;
        },

        getCurrentRegionFields: function () {
            var currentRegion = this.currentRegion;
            return {
                isNull: this.yvalues[currentRegion] === null,
                x: this.xvalues[currentRegion],
                y: this.yvalues[currentRegion],
                color: this.options.get('lineColor'),
                fillColor: this.options.get('fillColor'),
                offset: currentRegion
            };
        },

        renderHighlight: function () {
            var currentRegion = this.currentRegion,
                target = this.target,
                vertex = this.vertices[currentRegion],
                options = this.options,
                spotRadius = options.get('spotRadius'),
                highlightSpotColor = options.get('highlightSpotColor'),
                highlightLineColor = options.get('highlightLineColor'),
                highlightSpot, highlightLine;

            if (!vertex) {
                return;
            }
            if (spotRadius && highlightSpotColor) {
                highlightSpot = target.drawCircle(vertex[0], vertex[1],
                    spotRadius, undefined, highlightSpotColor);
                this.highlightSpotId = highlightSpot.id;
                target.insertAfterShape(this.lastShapeId, highlightSpot);
            }
            if (highlightLineColor) {
                highlightLine = target.drawLine(vertex[0], this.canvasTop, vertex[0],
                    this.canvasTop + this.canvasHeight, highlightLineColor);
                this.highlightLineId = highlightLine.id;
                target.insertAfterShape(this.lastShapeId, highlightLine);
            }
        },

        removeHighlight: function () {
            var target = this.target;
            if (this.highlightSpotId) {
                target.removeShapeId(this.highlightSpotId);
                this.highlightSpotId = null;
            }
            if (this.highlightLineId) {
                target.removeShapeId(this.highlightLineId);
                this.highlightLineId = null;
            }
        },

        scanValues: function () {
            var values = this.values,
                valcount = values.length,
                xvalues = this.xvalues,
                yvalues = this.yvalues,
                yminmax = this.yminmax,
                i, val, isStr, isArray, sp;
            for (i = 0; i < valcount; i++) {
                val = values[i];
                isStr = typeof(values[i]) === 'string';
                isArray = typeof(values[i]) === 'object' && values[i] instanceof Array;
                sp = isStr && values[i].split(':');
                if (isStr && sp.length === 2) { // x:y
                    xvalues.push(Number(sp[0]));
                    yvalues.push(Number(sp[1]));
                    yminmax.push(Number(sp[1]));
                } else if (isArray) {
                    xvalues.push(val[0]);
                    yvalues.push(val[1]);
                    yminmax.push(val[1]);
                } else {
                    xvalues.push(i);
                    if (values[i] === null || values[i] === 'null') {
                        yvalues.push(null);
                    } else {
                        yvalues.push(Number(val));
                        yminmax.push(Number(val));
                    }
                }
            }
            if (this.options.get('xvalues')) {
                xvalues = this.options.get('xvalues');
            }

            this.maxy = this.maxyorg = Math.max.apply(Math, yminmax);
            this.miny = this.minyorg = Math.min.apply(Math, yminmax);

            this.maxx = Math.max.apply(Math, xvalues);
            this.minx = Math.min.apply(Math, xvalues);

            this.xvalues = xvalues;
            this.yvalues = yvalues;
            this.yminmax = yminmax;

        },

        processRangeOptions: function () {
            var options = this.options,
                normalRangeMin = options.get('normalRangeMin'),
                normalRangeMax = options.get('normalRangeMax');

            if (normalRangeMin !== undefined) {
                if (normalRangeMin < this.miny) {
                    this.miny = normalRangeMin;
                }
                if (normalRangeMax > this.maxy) {
                    this.maxy = normalRangeMax;
                }
            }
            if (options.get('chartRangeMin') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMin') < this.miny)) {
                this.miny = options.get('chartRangeMin');
            }
            if (options.get('chartRangeMax') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMax') > this.maxy)) {
                this.maxy = options.get('chartRangeMax');
            }
            if (options.get('chartRangeMinX') !== undefined && (options.get('chartRangeClipX') || options.get('chartRangeMinX') < this.minx)) {
                this.minx = options.get('chartRangeMinX');
            }
            if (options.get('chartRangeMaxX') !== undefined && (options.get('chartRangeClipX') || options.get('chartRangeMaxX') > this.maxx)) {
                this.maxx = options.get('chartRangeMaxX');
            }

        },

        drawNormalRange: function (canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey) {
            var normalRangeMin = this.options.get('normalRangeMin'),
                normalRangeMax = this.options.get('normalRangeMax'),
                ytop = canvasTop + Math.round(canvasHeight - (canvasHeight * ((normalRangeMax - this.miny) / rangey))),
                height = Math.round((canvasHeight * (normalRangeMax - normalRangeMin)) / rangey);
            this.target.drawRect(canvasLeft, ytop, canvasWidth, height, undefined, this.options.get('normalRangeColor')).append();
        },

        render: function () {
            var options = this.options,
                target = this.target,
                canvasWidth = this.canvasWidth,
                canvasHeight = this.canvasHeight,
                vertices = this.vertices,
                spotRadius = options.get('spotRadius'),
                regionMap = this.regionMap,
                rangex, rangey, yvallast,
                canvasTop, canvasLeft,
                vertex, path, paths, x, y, xnext, xpos, xposnext,
                last, next, yvalcount, lineShapes, fillShapes, plen,
                valueSpots, hlSpotsEnabled, color, xvalues, yvalues, i;

            if (!line._super.render.call(this)) {
                return;
            }

            this.scanValues();
            this.processRangeOptions();

            xvalues = this.xvalues;
            yvalues = this.yvalues;

            if (!this.yminmax.length || this.yvalues.length < 2) {
                // empty or all null valuess
                return;
            }

            canvasTop = canvasLeft = 0;

            rangex = this.maxx - this.minx === 0 ? 1 : this.maxx - this.minx;
            rangey = this.maxy - this.miny === 0 ? 1 : this.maxy - this.miny;
            yvallast = this.yvalues.length - 1;

            if (spotRadius && (canvasWidth < (spotRadius * 4) || canvasHeight < (spotRadius * 4))) {
                spotRadius = 0;
            }
            if (spotRadius) {
                // adjust the canvas size as required so that spots will fit
                hlSpotsEnabled = options.get('highlightSpotColor') &&  !options.get('disableInteraction');
                if (hlSpotsEnabled || options.get('minSpotColor') || (options.get('spotColor') && yvalues[yvallast] === this.miny)) {
                    canvasHeight -= Math.ceil(spotRadius);
                }
                if (hlSpotsEnabled || options.get('maxSpotColor') || (options.get('spotColor') && yvalues[yvallast] === this.maxy)) {
                    canvasHeight -= Math.ceil(spotRadius);
                    canvasTop += Math.ceil(spotRadius);
                }
                if (hlSpotsEnabled ||
                     ((options.get('minSpotColor') || options.get('maxSpotColor')) && (yvalues[0] === this.miny || yvalues[0] === this.maxy))) {
                    canvasLeft += Math.ceil(spotRadius);
                    canvasWidth -= Math.ceil(spotRadius);
                }
                if (hlSpotsEnabled || options.get('spotColor') ||
                    (options.get('minSpotColor') || options.get('maxSpotColor') &&
                        (yvalues[yvallast] === this.miny || yvalues[yvallast] === this.maxy))) {
                    canvasWidth -= Math.ceil(spotRadius);
                }
            }


            canvasHeight--;

            if (options.get('normalRangeMin') !== undefined && !options.get('drawNormalOnTop')) {
                this.drawNormalRange(canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey);
            }

            path = [];
            paths = [path];
            last = next = null;
            yvalcount = yvalues.length;
            for (i = 0; i < yvalcount; i++) {
                x = xvalues[i];
                xnext = xvalues[i + 1];
                y = yvalues[i];
                xpos = canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex));
                xposnext = i < yvalcount - 1 ? canvasLeft + Math.round((xnext - this.minx) * (canvasWidth / rangex)) : canvasWidth;
                next = xpos + ((xposnext - xpos) / 2);
                regionMap[i] = [last || 0, next, i];
                last = next;
                if (y === null) {
                    if (i) {
                        if (yvalues[i - 1] !== null) {
                            path = [];
                            paths.push(path);
                        }
                        vertices.push(null);
                    }
                } else {
                    if (y < this.miny) {
                        y = this.miny;
                    }
                    if (y > this.maxy) {
                        y = this.maxy;
                    }
                    if (!path.length) {
                        // previous value was null
                        path.push([xpos, canvasTop + canvasHeight]);
                    }
                    vertex = [xpos, canvasTop + Math.round(canvasHeight - (canvasHeight * ((y - this.miny) / rangey)))];
                    path.push(vertex);
                    vertices.push(vertex);
                }
            }

            lineShapes = [];
            fillShapes = [];
            plen = paths.length;
            for (i = 0; i < plen; i++) {
                path = paths[i];
                if (path.length) {
                    if (options.get('fillColor')) {
                        path.push([path[path.length - 1][0], (canvasTop + canvasHeight)]);
                        fillShapes.push(path.slice(0));
                        path.pop();
                    }
                    // if there's only a single point in this path, then we want to display it
                    // as a vertical line which means we keep path[0]  as is
                    if (path.length > 2) {
                        // else we want the first value
                        path[0] = [path[0][0], path[1][1]];
                    }
                    lineShapes.push(path);
                }
            }

            // draw the fill first, then optionally the normal range, then the line on top of that
            plen = fillShapes.length;
            for (i = 0; i < plen; i++) {
                target.drawShape(fillShapes[i],
                    options.get('fillColor'), options.get('fillColor')).append();
            }

            if (options.get('normalRangeMin') !== undefined && options.get('drawNormalOnTop')) {
                this.drawNormalRange(canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey);
            }

            plen = lineShapes.length;
            for (i = 0; i < plen; i++) {
                target.drawShape(lineShapes[i], options.get('lineColor'), undefined,
                    options.get('lineWidth')).append();
            }

            if (spotRadius && options.get('valueSpots')) {
                valueSpots = options.get('valueSpots');
                if (valueSpots.get === undefined) {
                    valueSpots = new RangeMap(valueSpots);
                }
                for (i = 0; i < yvalcount; i++) {
                    color = valueSpots.get(yvalues[i]);
                    if (color) {
                        target.drawCircle(canvasLeft + Math.round((xvalues[i] - this.minx) * (canvasWidth / rangex)),
                            canvasTop + Math.round(canvasHeight - (canvasHeight * ((yvalues[i] - this.miny) / rangey))),
                            spotRadius, undefined,
                            color).append();
                    }
                }

            }
            if (spotRadius && options.get('spotColor') && yvalues[yvallast] !== null) {
                target.drawCircle(canvasLeft + Math.round((xvalues[xvalues.length - 1] - this.minx) * (canvasWidth / rangex)),
                    canvasTop + Math.round(canvasHeight - (canvasHeight * ((yvalues[yvallast] - this.miny) / rangey))),
                    spotRadius, undefined,
                    options.get('spotColor')).append();
            }
            if (this.maxy !== this.minyorg) {
                if (spotRadius && options.get('minSpotColor')) {
                    x = xvalues[$.inArray(this.minyorg, yvalues)];
                    target.drawCircle(canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex)),
                        canvasTop + Math.round(canvasHeight - (canvasHeight * ((this.minyorg - this.miny) / rangey))),
                        spotRadius, undefined,
                        options.get('minSpotColor')).append();
                }
                if (spotRadius && options.get('maxSpotColor')) {
                    x = xvalues[$.inArray(this.maxyorg, yvalues)];
                    target.drawCircle(canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex)),
                        canvasTop + Math.round(canvasHeight - (canvasHeight * ((this.maxyorg - this.miny) / rangey))),
                        spotRadius, undefined,
                        options.get('maxSpotColor')).append();
                }
            }

            this.lastShapeId = target.getLastShapeId();
            this.canvasTop = canvasTop;
            target.render();
        }
    });

    /**
     * Bar charts
     */
    $.fn.sparkline.bar = bar = createClass($.fn.sparkline._base, barHighlightMixin, {
        type: 'bar',

        init: function (el, values, options, width, height) {
            var barWidth = parseInt(options.get('barWidth'), 10),
                barSpacing = parseInt(options.get('barSpacing'), 10),
                chartRangeMin = options.get('chartRangeMin'),
                chartRangeMax = options.get('chartRangeMax'),
                chartRangeClip = options.get('chartRangeClip'),
                stackMin = Infinity,
                stackMax = -Infinity,
                isStackString, groupMin, groupMax, stackRanges,
                numValues, i, vlen, range, zeroAxis, xaxisOffset, min, max, clipMin, clipMax,
                stacked, vlist, j, slen, svals, val, yoffset, yMaxCalc, canvasHeightEf;
            bar._super.init.call(this, el, values, options, width, height);

            // scan values to determine whether to stack bars
            for (i = 0, vlen = values.length; i < vlen; i++) {
                val = values[i];
                isStackString = typeof(val) === 'string' && val.indexOf(':') > -1;
                if (isStackString || $.isArray(val)) {
                    stacked = true;
                    if (isStackString) {
                        val = values[i] = normalizeValues(val.split(':'));
                    }
                    val = remove(val, null); // min/max will treat null as zero
                    groupMin = Math.min.apply(Math, val);
                    groupMax = Math.max.apply(Math, val);
                    if (groupMin < stackMin) {
                        stackMin = groupMin;
                    }
                    if (groupMax > stackMax) {
                        stackMax = groupMax;
                    }
                }
            }

            this.stacked = stacked;
            this.regionShapes = {};
            this.barWidth = barWidth;
            this.barSpacing = barSpacing;
            this.totalBarWidth = barWidth + barSpacing;
            this.width = width = (values.length * barWidth) + ((values.length - 1) * barSpacing);

            this.initTarget();

            if (chartRangeClip) {
                clipMin = chartRangeMin === undefined ? -Infinity : chartRangeMin;
                clipMax = chartRangeMax === undefined ? Infinity : chartRangeMax;
            }

            numValues = [];
            stackRanges = stacked ? [] : numValues;
            var stackTotals = [];
            var stackRangesNeg = [];
            for (i = 0, vlen = values.length; i < vlen; i++) {
                if (stacked) {
                    vlist = values[i];
                    values[i] = svals = [];
                    stackTotals[i] = 0;
                    stackRanges[i] = stackRangesNeg[i] = 0;
                    for (j = 0, slen = vlist.length; j < slen; j++) {
                        val = svals[j] = chartRangeClip ? clipval(vlist[j], clipMin, clipMax) : vlist[j];
                        if (val !== null) {
                            if (val > 0) {
                                stackTotals[i] += val;
                            }
                            if (stackMin < 0 && stackMax > 0) {
                                if (val < 0) {
                                    stackRangesNeg[i] += Math.abs(val);
                                } else {
                                    stackRanges[i] += val;
                                }
                            } else {
                                stackRanges[i] += Math.abs(val - (val < 0 ? stackMax : stackMin));
                            }
                            numValues.push(val);
                        }
                    }
                } else {
                    val = chartRangeClip ? clipval(values[i], clipMin, clipMax) : values[i];
                    val = values[i] = normalizeValue(val);
                    if (val !== null) {
                        numValues.push(val);
                    }
                }
            }
            this.max = max = Math.max.apply(Math, numValues);
            this.min = min = Math.min.apply(Math, numValues);
            this.stackMax = stackMax = stacked ? Math.max.apply(Math, stackTotals) : max;
            this.stackMin = stackMin = stacked ? Math.min.apply(Math, numValues) : min;

            if (options.get('chartRangeMin') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMin') < min)) {
                min = options.get('chartRangeMin');
            }
            if (options.get('chartRangeMax') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMax') > max)) {
                max = options.get('chartRangeMax');
            }

            this.zeroAxis = zeroAxis = options.get('zeroAxis', true);
            if (min <= 0 && max >= 0 && zeroAxis) {
                xaxisOffset = 0;
            } else if (zeroAxis == false) {
                xaxisOffset = min;
            } else if (min > 0) {
                xaxisOffset = min;
            } else {
                xaxisOffset = max;
            }
            this.xaxisOffset = xaxisOffset;

            range = stacked ? (Math.max.apply(Math, stackRanges) + Math.max.apply(Math, stackRangesNeg)) : max - min;

            // as we plot zero/min values a single pixel line, we add a pixel to all other
            // values - Reduce the effective canvas size to suit
            this.canvasHeightEf = (zeroAxis && min < 0) ? this.canvasHeight - 2 : this.canvasHeight - 1;

            if (min < xaxisOffset) {
                yMaxCalc = (stacked && max >= 0) ? stackMax : max;
                yoffset = (yMaxCalc - xaxisOffset) / range * this.canvasHeight;
                if (yoffset !== Math.ceil(yoffset)) {
                    this.canvasHeightEf -= 2;
                    yoffset = Math.ceil(yoffset);
                }
            } else {
                yoffset = this.canvasHeight;
            }
            this.yoffset = yoffset;

            if ($.isArray(options.get('colorMap'))) {
                this.colorMapByIndex = options.get('colorMap');
                this.colorMapByValue = null;
            } else {
                this.colorMapByIndex = null;
                this.colorMapByValue = options.get('colorMap');
                if (this.colorMapByValue && this.colorMapByValue.get === undefined) {
                    this.colorMapByValue = new RangeMap(this.colorMapByValue);
                }
            }

            this.range = range;
        },

        getRegion: function (el, x, y) {
            var result = Math.floor(x / this.totalBarWidth);
            return (result < 0 || result >= this.values.length) ? undefined : result;
        },

        getCurrentRegionFields: function () {
            var currentRegion = this.currentRegion,
                values = ensureArray(this.values[currentRegion]),
                result = [],
                value, i;
            for (i = values.length; i--;) {
                value = values[i];
                result.push({
                    isNull: value === null,
                    value: value,
                    color: this.calcColor(i, value, currentRegion),
                    offset: currentRegion
                });
            }
            return result;
        },

        calcColor: function (stacknum, value, valuenum) {
            var colorMapByIndex = this.colorMapByIndex,
                colorMapByValue = this.colorMapByValue,
                options = this.options,
                color, newColor;
            if (this.stacked) {
                color = options.get('stackedBarColor');
            } else {
                color = (value < 0) ? options.get('negBarColor') : options.get('barColor');
            }
            if (value === 0 && options.get('zeroColor') !== undefined) {
                color = options.get('zeroColor');
            }
            if (colorMapByValue && (newColor = colorMapByValue.get(value))) {
                color = newColor;
            } else if (colorMapByIndex && colorMapByIndex.length > valuenum) {
                color = colorMapByIndex[valuenum];
            }
            return $.isArray(color) ? color[stacknum % color.length] : color;
        },

        /**
         * Render bar(s) for a region
         */
        renderRegion: function (valuenum, highlight) {
            var vals = this.values[valuenum],
                options = this.options,
                xaxisOffset = this.xaxisOffset,
                result = [],
                range = this.range,
                stacked = this.stacked,
                target = this.target,
                x = valuenum * this.totalBarWidth,
                canvasHeightEf = this.canvasHeightEf,
                yoffset = this.yoffset,
                y, height, color, isNull, yoffsetNeg, i, valcount, val, minPlotted, allMin;

            vals = $.isArray(vals) ? vals : [vals];
            valcount = vals.length;
            val = vals[0];
            isNull = all(null, vals);
            allMin = all(xaxisOffset, vals, true);

            if (isNull) {
                if (options.get('nullColor')) {
                    color = highlight ? options.get('nullColor') : this.calcHighlightColor(options.get('nullColor'), options);
                    y = (yoffset > 0) ? yoffset - 1 : yoffset;
                    return target.drawRect(x, y, this.barWidth - 1, 0, color, color);
                } else {
                    return undefined;
                }
            }
            yoffsetNeg = yoffset;
            for (i = 0; i < valcount; i++) {
                val = vals[i];

                if (stacked && val === xaxisOffset) {
                    if (!allMin || minPlotted) {
                        continue;
                    }
                    minPlotted = true;
                }

                if (range > 0) {
                    height = Math.floor(canvasHeightEf * ((Math.abs(val - xaxisOffset) / range))) + 1;
                } else {
                    height = 1;
                }
                if (val < xaxisOffset || (val === xaxisOffset && yoffset === 0)) {
                    y = yoffsetNeg;
                    yoffsetNeg += height;
                } else {
                    y = yoffset - height;
                    yoffset -= height;
                }
                color = this.calcColor(i, val, valuenum);
                if (highlight) {
                    color = this.calcHighlightColor(color, options);
                }
                result.push(target.drawRect(x, y, this.barWidth - 1, height - 1, color, color));
            }
            if (result.length === 1) {
                return result[0];
            }
            return result;
        }
    });

    /**
     * Tristate charts
     */
    $.fn.sparkline.tristate = tristate = createClass($.fn.sparkline._base, barHighlightMixin, {
        type: 'tristate',

        init: function (el, values, options, width, height) {
            var barWidth = parseInt(options.get('barWidth'), 10),
                barSpacing = parseInt(options.get('barSpacing'), 10);
            tristate._super.init.call(this, el, values, options, width, height);

            this.regionShapes = {};
            this.barWidth = barWidth;
            this.barSpacing = barSpacing;
            this.totalBarWidth = barWidth + barSpacing;
            this.values = $.map(values, Number);
            this.width = width = (values.length * barWidth) + ((values.length - 1) * barSpacing);

            if ($.isArray(options.get('colorMap'))) {
                this.colorMapByIndex = options.get('colorMap');
                this.colorMapByValue = null;
            } else {
                this.colorMapByIndex = null;
                this.colorMapByValue = options.get('colorMap');
                if (this.colorMapByValue && this.colorMapByValue.get === undefined) {
                    this.colorMapByValue = new RangeMap(this.colorMapByValue);
                }
            }
            this.initTarget();
        },

        getRegion: function (el, x, y) {
            return Math.floor(x / this.totalBarWidth);
        },

        getCurrentRegionFields: function () {
            var currentRegion = this.currentRegion;
            return {
                isNull: this.values[currentRegion] === undefined,
                value: this.values[currentRegion],
                color: this.calcColor(this.values[currentRegion], currentRegion),
                offset: currentRegion
            };
        },

        calcColor: function (value, valuenum) {
            var values = this.values,
                options = this.options,
                colorMapByIndex = this.colorMapByIndex,
                colorMapByValue = this.colorMapByValue,
                color, newColor;

            if (colorMapByValue && (newColor = colorMapByValue.get(value))) {
                color = newColor;
            } else if (colorMapByIndex && colorMapByIndex.length > valuenum) {
                color = colorMapByIndex[valuenum];
            } else if (values[valuenum] < 0) {
                color = options.get('negBarColor');
            } else if (values[valuenum] > 0) {
                color = options.get('posBarColor');
            } else {
                color = options.get('zeroBarColor');
            }
            return color;
        },

        renderRegion: function (valuenum, highlight) {
            var values = this.values,
                options = this.options,
                target = this.target,
                canvasHeight, height, halfHeight,
                x, y, color;

            canvasHeight = target.pixelHeight;
            halfHeight = Math.round(canvasHeight / 2);

            x = valuenum * this.totalBarWidth;
            if (values[valuenum] < 0) {
                y = halfHeight;
                height = halfHeight - 1;
            } else if (values[valuenum] > 0) {
                y = 0;
                height = halfHeight - 1;
            } else {
                y = halfHeight - 1;
                height = 2;
            }
            color = this.calcColor(values[valuenum], valuenum);
            if (color === null) {
                return;
            }
            if (highlight) {
                color = this.calcHighlightColor(color, options);
            }
            return target.drawRect(x, y, this.barWidth - 1, height - 1, color, color);
        }
    });

    /**
     * Discrete charts
     */
    $.fn.sparkline.discrete = discrete = createClass($.fn.sparkline._base, barHighlightMixin, {
        type: 'discrete',

        init: function (el, values, options, width, height) {
            discrete._super.init.call(this, el, values, options, width, height);

            this.regionShapes = {};
            this.values = values = $.map(values, Number);
            this.min = Math.min.apply(Math, values);
            this.max = Math.max.apply(Math, values);
            this.range = this.max - this.min;
            this.width = width = options.get('width') === 'auto' ? values.length * 2 : this.width;
            this.interval = Math.floor(width / values.length);
            this.itemWidth = width / values.length;
            if (options.get('chartRangeMin') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMin') < this.min)) {
                this.min = options.get('chartRangeMin');
            }
            if (options.get('chartRangeMax') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMax') > this.max)) {
                this.max = options.get('chartRangeMax');
            }
            this.initTarget();
            if (this.target) {
                this.lineHeight = options.get('lineHeight') === 'auto' ? Math.round(this.canvasHeight * 0.3) : options.get('lineHeight');
            }
        },

        getRegion: function (el, x, y) {
            return Math.floor(x / this.itemWidth);
        },

        getCurrentRegionFields: function () {
            var currentRegion = this.currentRegion;
            return {
                isNull: this.values[currentRegion] === undefined,
                value: this.values[currentRegion],
                offset: currentRegion
            };
        },

        renderRegion: function (valuenum, highlight) {
            var values = this.values,
                options = this.options,
                min = this.min,
                max = this.max,
                range = this.range,
                interval = this.interval,
                target = this.target,
                canvasHeight = this.canvasHeight,
                lineHeight = this.lineHeight,
                pheight = canvasHeight - lineHeight,
                ytop, val, color, x;

            val = clipval(values[valuenum], min, max);
            x = valuenum * interval;
            ytop = Math.round(pheight - pheight * ((val - min) / range));
            color = (options.get('thresholdColor') && val < options.get('thresholdValue')) ? options.get('thresholdColor') : options.get('lineColor');
            if (highlight) {
                color = this.calcHighlightColor(color, options);
            }
            return target.drawLine(x, ytop, x, ytop + lineHeight, color);
        }
    });

    /**
     * Bullet charts
     */
    $.fn.sparkline.bullet = bullet = createClass($.fn.sparkline._base, {
        type: 'bullet',

        init: function (el, values, options, width, height) {
            var min, max, vals;
            bullet._super.init.call(this, el, values, options, width, height);

            // values: target, performance, range1, range2, range3
            this.values = values = normalizeValues(values);
            // target or performance could be null
            vals = values.slice();
            vals[0] = vals[0] === null ? vals[2] : vals[0];
            vals[1] = values[1] === null ? vals[2] : vals[1];
            min = Math.min.apply(Math, values);
            max = Math.max.apply(Math, values);
            if (options.get('base') === undefined) {
                min = min < 0 ? min : 0;
            } else {
                min = options.get('base');
            }
            this.min = min;
            this.max = max;
            this.range = max - min;
            this.shapes = {};
            this.valueShapes = {};
            this.regiondata = {};
            this.width = width = options.get('width') === 'auto' ? '4.0em' : width;
            this.target = this.$el.simpledraw(width, height, options.get('composite'));
            if (!values.length) {
                this.disabled = true;
            }
            this.initTarget();
        },

        getRegion: function (el, x, y) {
            var shapeid = this.target.getShapeAt(el, x, y);
            return (shapeid !== undefined && this.shapes[shapeid] !== undefined) ? this.shapes[shapeid] : undefined;
        },

        getCurrentRegionFields: function () {
            var currentRegion = this.currentRegion;
            return {
                fieldkey: currentRegion.substr(0, 1),
                value: this.values[currentRegion.substr(1)],
                region: currentRegion
            };
        },

        changeHighlight: function (highlight) {
            var currentRegion = this.currentRegion,
                shapeid = this.valueShapes[currentRegion],
                shape;
            delete this.shapes[shapeid];
            switch (currentRegion.substr(0, 1)) {
                case 'r':
                    shape = this.renderRange(currentRegion.substr(1), highlight);
                    break;
                case 'p':
                    shape = this.renderPerformance(highlight);
                    break;
                case 't':
                    shape = this.renderTarget(highlight);
                    break;
            }
            this.valueShapes[currentRegion] = shape.id;
            this.shapes[shape.id] = currentRegion;
            this.target.replaceWithShape(shapeid, shape);
        },

        renderRange: function (rn, highlight) {
            var rangeval = this.values[rn],
                rangewidth = Math.round(this.canvasWidth * ((rangeval - this.min) / this.range)),
                color = this.options.get('rangeColors')[rn - 2];
            if (highlight) {
                color = this.calcHighlightColor(color, this.options);
            }
            return this.target.drawRect(0, 0, rangewidth - 1, this.canvasHeight - 1, color, color);
        },

        renderPerformance: function (highlight) {
            var perfval = this.values[1],
                perfwidth = Math.round(this.canvasWidth * ((perfval - this.min) / this.range)),
                color = this.options.get('performanceColor');
            if (highlight) {
                color = this.calcHighlightColor(color, this.options);
            }
            return this.target.drawRect(0, Math.round(this.canvasHeight * 0.3), perfwidth - 1,
                Math.round(this.canvasHeight * 0.4) - 1, color, color);
        },

        renderTarget: function (highlight) {
            var targetval = this.values[0],
                x = Math.round(this.canvasWidth * ((targetval - this.min) / this.range) - (this.options.get('targetWidth') / 2)),
                targettop = Math.round(this.canvasHeight * 0.10),
                targetheight = this.canvasHeight - (targettop * 2),
                color = this.options.get('targetColor');
            if (highlight) {
                color = this.calcHighlightColor(color, this.options);
            }
            return this.target.drawRect(x, targettop, this.options.get('targetWidth') - 1, targetheight - 1, color, color);
        },

        render: function () {
            var vlen = this.values.length,
                target = this.target,
                i, shape;
            if (!bullet._super.render.call(this)) {
                return;
            }
            for (i = 2; i < vlen; i++) {
                shape = this.renderRange(i).append();
                this.shapes[shape.id] = 'r' + i;
                this.valueShapes['r' + i] = shape.id;
            }
            if (this.values[1] !== null) {
                shape = this.renderPerformance().append();
                this.shapes[shape.id] = 'p1';
                this.valueShapes.p1 = shape.id;
            }
            if (this.values[0] !== null) {
                shape = this.renderTarget().append();
                this.shapes[shape.id] = 't0';
                this.valueShapes.t0 = shape.id;
            }
            target.render();
        }
    });

    /**
     * Pie charts
     */
    $.fn.sparkline.pie = pie = createClass($.fn.sparkline._base, {
        type: 'pie',

        init: function (el, values, options, width, height) {
            var total = 0, i;

            pie._super.init.call(this, el, values, options, width, height);

            this.shapes = {}; // map shape ids to value offsets
            this.valueShapes = {}; // maps value offsets to shape ids
            this.values = values = $.map(values, Number);

            if (options.get('width') === 'auto') {
                this.width = this.height;
            }

            if (values.length > 0) {
                for (i = values.length; i--;) {
                    total += values[i];
                }
            }
            this.total = total;
            this.initTarget();
            this.radius = Math.floor(Math.min(this.canvasWidth, this.canvasHeight) / 2);
        },

        getRegion: function (el, x, y) {
            var shapeid = this.target.getShapeAt(el, x, y);
            return (shapeid !== undefined && this.shapes[shapeid] !== undefined) ? this.shapes[shapeid] : undefined;
        },

        getCurrentRegionFields: function () {
            var currentRegion = this.currentRegion;
            return {
                isNull: this.values[currentRegion] === undefined,
                value: this.values[currentRegion],
                percent: this.values[currentRegion] / this.total * 100,
                color: this.options.get('sliceColors')[currentRegion % this.options.get('sliceColors').length],
                offset: currentRegion
            };
        },

        changeHighlight: function (highlight) {
            var currentRegion = this.currentRegion,
                 newslice = this.renderSlice(currentRegion, highlight),
                 shapeid = this.valueShapes[currentRegion];
            delete this.shapes[shapeid];
            this.target.replaceWithShape(shapeid, newslice);
            this.valueShapes[currentRegion] = newslice.id;
            this.shapes[newslice.id] = currentRegion;
        },

        renderSlice: function (valuenum, highlight) {
            var target = this.target,
                options = this.options,
                radius = this.radius,
                borderWidth = options.get('borderWidth'),
                offset = options.get('offset'),
                circle = 2 * Math.PI,
                values = this.values,
                total = this.total,
                next = offset ? (2*Math.PI)*(offset/360) : 0,
                start, end, i, vlen, color;

            vlen = values.length;
            for (i = 0; i < vlen; i++) {
                start = next;
                end = next;
                if (total > 0) {  // avoid divide by zero
                    end = next + (circle * (values[i] / total));
                }
                if (valuenum === i) {
                    color = options.get('sliceColors')[i % options.get('sliceColors').length];
                    if (highlight) {
                        color = this.calcHighlightColor(color, options);
                    }

                    return target.drawPieSlice(radius, radius, radius - borderWidth, start, end, undefined, color);
                }
                next = end;
            }
        },

        render: function () {
            var target = this.target,
                values = this.values,
                options = this.options,
                radius = this.radius,
                borderWidth = options.get('borderWidth'),
                shape, i;

            if (!pie._super.render.call(this)) {
                return;
            }
            if (borderWidth) {
                target.drawCircle(radius, radius, Math.floor(radius - (borderWidth / 2)),
                    options.get('borderColor'), undefined, borderWidth).append();
            }
            for (i = values.length; i--;) {
                if (values[i]) { // don't render zero values
                    shape = this.renderSlice(i).append();
                    this.valueShapes[i] = shape.id; // store just the shapeid
                    this.shapes[shape.id] = i;
                }
            }
            target.render();
        }
    });

    /**
     * Box plots
     */
    $.fn.sparkline.box = box = createClass($.fn.sparkline._base, {
        type: 'box',

        init: function (el, values, options, width, height) {
            box._super.init.call(this, el, values, options, width, height);
            this.values = $.map(values, Number);
            this.width = options.get('width') === 'auto' ? '4.0em' : width;
            this.initTarget();
            if (!this.values.length) {
                this.disabled = 1;
            }
        },

        /**
         * Simulate a single region
         */
        getRegion: function () {
            return 1;
        },

        getCurrentRegionFields: function () {
            var result = [
                { field: 'lq', value: this.quartiles[0] },
                { field: 'med', value: this.quartiles[1] },
                { field: 'uq', value: this.quartiles[2] }
            ];
            if (this.loutlier !== undefined) {
                result.push({ field: 'lo', value: this.loutlier});
            }
            if (this.routlier !== undefined) {
                result.push({ field: 'ro', value: this.routlier});
            }
            if (this.lwhisker !== undefined) {
                result.push({ field: 'lw', value: this.lwhisker});
            }
            if (this.rwhisker !== undefined) {
                result.push({ field: 'rw', value: this.rwhisker});
            }
            return result;
        },

        render: function () {
            var target = this.target,
                values = this.values,
                vlen = values.length,
                options = this.options,
                canvasWidth = this.canvasWidth,
                canvasHeight = this.canvasHeight,
                minValue = options.get('chartRangeMin') === undefined ? Math.min.apply(Math, values) : options.get('chartRangeMin'),
                maxValue = options.get('chartRangeMax') === undefined ? Math.max.apply(Math, values) : options.get('chartRangeMax'),
                canvasLeft = 0,
                lwhisker, loutlier, iqr, q1, q2, q3, rwhisker, routlier, i,
                size, unitSize;

            if (!box._super.render.call(this)) {
                return;
            }

            if (options.get('raw')) {
                if (options.get('showOutliers') && values.length > 5) {
                    loutlier = values[0];
                    lwhisker = values[1];
                    q1 = values[2];
                    q2 = values[3];
                    q3 = values[4];
                    rwhisker = values[5];
                    routlier = values[6];
                } else {
                    lwhisker = values[0];
                    q1 = values[1];
                    q2 = values[2];
                    q3 = values[3];
                    rwhisker = values[4];
                }
            } else {
                values.sort(function (a, b) { return a - b; });
                q1 = quartile(values, 1);
                q2 = quartile(values, 2);
                q3 = quartile(values, 3);
                iqr = q3 - q1;
                if (options.get('showOutliers')) {
                    lwhisker = rwhisker = undefined;
                    for (i = 0; i < vlen; i++) {
                        if (lwhisker === undefined && values[i] > q1 - (iqr * options.get('outlierIQR'))) {
                            lwhisker = values[i];
                        }
                        if (values[i] < q3 + (iqr * options.get('outlierIQR'))) {
                            rwhisker = values[i];
                        }
                    }
                    loutlier = values[0];
                    routlier = values[vlen - 1];
                } else {
                    lwhisker = values[0];
                    rwhisker = values[vlen - 1];
                }
            }
            this.quartiles = [q1, q2, q3];
            this.lwhisker = lwhisker;
            this.rwhisker = rwhisker;
            this.loutlier = loutlier;
            this.routlier = routlier;

            unitSize = canvasWidth / (maxValue - minValue + 1);
            if (options.get('showOutliers')) {
                canvasLeft = Math.ceil(options.get('spotRadius'));
                canvasWidth -= 2 * Math.ceil(options.get('spotRadius'));
                unitSize = canvasWidth / (maxValue - minValue + 1);
                if (loutlier < lwhisker) {
                    target.drawCircle((loutlier - minValue) * unitSize + canvasLeft,
                        canvasHeight / 2,
                        options.get('spotRadius'),
                        options.get('outlierLineColor'),
                        options.get('outlierFillColor')).append();
                }
                if (routlier > rwhisker) {
                    target.drawCircle((routlier - minValue) * unitSize + canvasLeft,
                        canvasHeight / 2,
                        options.get('spotRadius'),
                        options.get('outlierLineColor'),
                        options.get('outlierFillColor')).append();
                }
            }

            // box
            target.drawRect(
                Math.round((q1 - minValue) * unitSize + canvasLeft),
                Math.round(canvasHeight * 0.1),
                Math.round((q3 - q1) * unitSize),
                Math.round(canvasHeight * 0.8),
                options.get('boxLineColor'),
                options.get('boxFillColor')).append();
            // left whisker
            target.drawLine(
                Math.round((lwhisker - minValue) * unitSize + canvasLeft),
                Math.round(canvasHeight / 2),
                Math.round((q1 - minValue) * unitSize + canvasLeft),
                Math.round(canvasHeight / 2),
                options.get('lineColor')).append();
            target.drawLine(
                Math.round((lwhisker - minValue) * unitSize + canvasLeft),
                Math.round(canvasHeight / 4),
                Math.round((lwhisker - minValue) * unitSize + canvasLeft),
                Math.round(canvasHeight - canvasHeight / 4),
                options.get('whiskerColor')).append();
            // right whisker
            target.drawLine(Math.round((rwhisker - minValue) * unitSize + canvasLeft),
                Math.round(canvasHeight / 2),
                Math.round((q3 - minValue) * unitSize + canvasLeft),
                Math.round(canvasHeight / 2),
                options.get('lineColor')).append();
            target.drawLine(
                Math.round((rwhisker - minValue) * unitSize + canvasLeft),
                Math.round(canvasHeight / 4),
                Math.round((rwhisker - minValue) * unitSize + canvasLeft),
                Math.round(canvasHeight - canvasHeight / 4),
                options.get('whiskerColor')).append();
            // median line
            target.drawLine(
                Math.round((q2 - minValue) * unitSize + canvasLeft),
                Math.round(canvasHeight * 0.1),
                Math.round((q2 - minValue) * unitSize + canvasLeft),
                Math.round(canvasHeight * 0.9),
                options.get('medianColor')).append();
            if (options.get('target')) {
                size = Math.ceil(options.get('spotRadius'));
                target.drawLine(
                    Math.round((options.get('target') - minValue) * unitSize + canvasLeft),
                    Math.round((canvasHeight / 2) - size),
                    Math.round((options.get('target') - minValue) * unitSize + canvasLeft),
                    Math.round((canvasHeight / 2) + size),
                    options.get('targetColor')).append();
                target.drawLine(
                    Math.round((options.get('target') - minValue) * unitSize + canvasLeft - size),
                    Math.round(canvasHeight / 2),
                    Math.round((options.get('target') - minValue) * unitSize + canvasLeft + size),
                    Math.round(canvasHeight / 2),
                    options.get('targetColor')).append();
            }
            target.render();
        }
    });

    // Setup a very simple "virtual canvas" to make drawing the few shapes we need easier
    // This is accessible as $(foo).simpledraw()

    VShape = createClass({
        init: function (target, id, type, args) {
            this.target = target;
            this.id = id;
            this.type = type;
            this.args = args;
        },
        append: function () {
            this.target.appendShape(this);
            return this;
        }
    });

    VCanvas_base = createClass({
        _pxregex: /(\d+)(px)?\s*$/i,

        init: function (width, height, target) {
            if (!width) {
                return;
            }
            this.width = width;
            this.height = height;
            this.target = target;
            this.lastShapeId = null;
            if (target[0]) {
                target = target[0];
            }
            $.data(target, '_jqs_vcanvas', this);
        },

        drawLine: function (x1, y1, x2, y2, lineColor, lineWidth) {
            return this.drawShape([[x1, y1], [x2, y2]], lineColor, lineWidth);
        },

        drawShape: function (path, lineColor, fillColor, lineWidth) {
            return this._genShape('Shape', [path, lineColor, fillColor, lineWidth]);
        },

        drawCircle: function (x, y, radius, lineColor, fillColor, lineWidth) {
            return this._genShape('Circle', [x, y, radius, lineColor, fillColor, lineWidth]);
        },

        drawPieSlice: function (x, y, radius, startAngle, endAngle, lineColor, fillColor) {
            return this._genShape('PieSlice', [x, y, radius, startAngle, endAngle, lineColor, fillColor]);
        },

        drawRect: function (x, y, width, height, lineColor, fillColor) {
            return this._genShape('Rect', [x, y, width, height, lineColor, fillColor]);
        },

        getElement: function () {
            return this.canvas;
        },

        /**
         * Return the most recently inserted shape id
         */
        getLastShapeId: function () {
            return this.lastShapeId;
        },

        /**
         * Clear and reset the canvas
         */
        reset: function () {
            alert('reset not implemented');
        },

        _insert: function (el, target) {
            $(target).html(el);
        },

        /**
         * Calculate the pixel dimensions of the canvas
         */
        _calculatePixelDims: function (width, height, canvas) {
            // XXX This should probably be a configurable option
            var match;
            match = this._pxregex.exec(height);
            if (match) {
                this.pixelHeight = match[1];
            } else {
                this.pixelHeight = $(canvas).height();
            }
            match = this._pxregex.exec(width);
            if (match) {
                this.pixelWidth = match[1];
            } else {
                this.pixelWidth = $(canvas).width();
            }
        },

        /**
         * Generate a shape object and id for later rendering
         */
        _genShape: function (shapetype, shapeargs) {
            var id = shapeCount++;
            shapeargs.unshift(id);
            return new VShape(this, id, shapetype, shapeargs);
        },

        /**
         * Add a shape to the end of the render queue
         */
        appendShape: function (shape) {
            alert('appendShape not implemented');
        },

        /**
         * Replace one shape with another
         */
        replaceWithShape: function (shapeid, shape) {
            alert('replaceWithShape not implemented');
        },

        /**
         * Insert one shape after another in the render queue
         */
        insertAfterShape: function (shapeid, shape) {
            alert('insertAfterShape not implemented');
        },

        /**
         * Remove a shape from the queue
         */
        removeShapeId: function (shapeid) {
            alert('removeShapeId not implemented');
        },

        /**
         * Find a shape at the specified x/y co-ordinates
         */
        getShapeAt: function (el, x, y) {
            alert('getShapeAt not implemented');
        },

        /**
         * Render all queued shapes onto the canvas
         */
        render: function () {
            alert('render not implemented');
        }
    });

    VCanvas_canvas = createClass(VCanvas_base, {
        init: function (width, height, target, interact) {
            VCanvas_canvas._super.init.call(this, width, height, target);
            this.canvas = document.createElement('canvas');
            if (target[0]) {
                target = target[0];
            }
            $.data(target, '_jqs_vcanvas', this);
            $(this.canvas).css({ display: 'inline-block', width: width, height: height, verticalAlign: 'top' });
            this._insert(this.canvas, target);
            this._calculatePixelDims(width, height, this.canvas);
            this.canvas.width = this.pixelWidth;
            this.canvas.height = this.pixelHeight;
            this.interact = interact;
            this.shapes = {};
            this.shapeseq = [];
            this.currentTargetShapeId = undefined;
            $(this.canvas).css({width: this.pixelWidth, height: this.pixelHeight});
        },

        _getContext: function (lineColor, fillColor, lineWidth) {
            var context = this.canvas.getContext('2d');
            if (lineColor !== undefined) {
                context.strokeStyle = lineColor;
            }
            context.lineWidth = lineWidth === undefined ? 1 : lineWidth;
            if (fillColor !== undefined) {
                context.fillStyle = fillColor;
            }
            return context;
        },

        reset: function () {
            var context = this._getContext();
            context.clearRect(0, 0, this.pixelWidth, this.pixelHeight);
            this.shapes = {};
            this.shapeseq = [];
            this.currentTargetShapeId = undefined;
        },

        _drawShape: function (shapeid, path, lineColor, fillColor, lineWidth) {
            var context = this._getContext(lineColor, fillColor, lineWidth),
                i, plen;
            context.beginPath();
            context.moveTo(path[0][0] + 0.5, path[0][1] + 0.5);
            for (i = 1, plen = path.length; i < plen; i++) {
                context.lineTo(path[i][0] + 0.5, path[i][1] + 0.5); // the 0.5 offset gives us crisp pixel-width lines
            }
            if (lineColor !== undefined) {
                context.stroke();
            }
            if (fillColor !== undefined) {
                context.fill();
            }
            if (this.targetX !== undefined && this.targetY !== undefined &&
                context.isPointInPath(this.targetX, this.targetY)) {
                this.currentTargetShapeId = shapeid;
            }
        },

        _drawCircle: function (shapeid, x, y, radius, lineColor, fillColor, lineWidth) {
            var context = this._getContext(lineColor, fillColor, lineWidth);
            context.beginPath();
            context.arc(x, y, radius, 0, 2 * Math.PI, false);
            if (this.targetX !== undefined && this.targetY !== undefined &&
                context.isPointInPath(this.targetX, this.targetY)) {
                this.currentTargetShapeId = shapeid;
            }
            if (lineColor !== undefined) {
                context.stroke();
            }
            if (fillColor !== undefined) {
                context.fill();
            }
        },

        _drawPieSlice: function (shapeid, x, y, radius, startAngle, endAngle, lineColor, fillColor) {
            var context = this._getContext(lineColor, fillColor);
            context.beginPath();
            context.moveTo(x, y);
            context.arc(x, y, radius, startAngle, endAngle, false);
            context.lineTo(x, y);
            context.closePath();
            if (lineColor !== undefined) {
                context.stroke();
            }
            if (fillColor) {
                context.fill();
            }
            if (this.targetX !== undefined && this.targetY !== undefined &&
                context.isPointInPath(this.targetX, this.targetY)) {
                this.currentTargetShapeId = shapeid;
            }
        },

        _drawRect: function (shapeid, x, y, width, height, lineColor, fillColor) {
            return this._drawShape(shapeid, [[x, y], [x + width, y], [x + width, y + height], [x, y + height], [x, y]], lineColor, fillColor);
        },

        appendShape: function (shape) {
            this.shapes[shape.id] = shape;
            this.shapeseq.push(shape.id);
            this.lastShapeId = shape.id;
            return shape.id;
        },

        replaceWithShape: function (shapeid, shape) {
            var shapeseq = this.shapeseq,
                i;
            this.shapes[shape.id] = shape;
            for (i = shapeseq.length; i--;) {
                if (shapeseq[i] == shapeid) {
                    shapeseq[i] = shape.id;
                }
            }
            delete this.shapes[shapeid];
        },

        replaceWithShapes: function (shapeids, shapes) {
            var shapeseq = this.shapeseq,
                shapemap = {},
                sid, i, first;

            for (i = shapeids.length; i--;) {
                shapemap[shapeids[i]] = true;
            }
            for (i = shapeseq.length; i--;) {
                sid = shapeseq[i];
                if (shapemap[sid]) {
                    shapeseq.splice(i, 1);
                    delete this.shapes[sid];
                    first = i;
                }
            }
            for (i = shapes.length; i--;) {
                shapeseq.splice(first, 0, shapes[i].id);
                this.shapes[shapes[i].id] = shapes[i];
            }

        },

        insertAfterShape: function (shapeid, shape) {
            var shapeseq = this.shapeseq,
                i;
            for (i = shapeseq.length; i--;) {
                if (shapeseq[i] === shapeid) {
                    shapeseq.splice(i + 1, 0, shape.id);
                    this.shapes[shape.id] = shape;
                    return;
                }
            }
        },

        removeShapeId: function (shapeid) {
            var shapeseq = this.shapeseq,
                i;
            for (i = shapeseq.length; i--;) {
                if (shapeseq[i] === shapeid) {
                    shapeseq.splice(i, 1);
                    break;
                }
            }
            delete this.shapes[shapeid];
        },

        getShapeAt: function (el, x, y) {
            this.targetX = x;
            this.targetY = y;
            this.render();
            return this.currentTargetShapeId;
        },

        render: function () {
            var shapeseq = this.shapeseq,
                shapes = this.shapes,
                shapeCount = shapeseq.length,
                context = this._getContext(),
                shapeid, shape, i;
            context.clearRect(0, 0, this.pixelWidth, this.pixelHeight);
            for (i = 0; i < shapeCount; i++) {
                shapeid = shapeseq[i];
                shape = shapes[shapeid];
                this['_draw' + shape.type].apply(this, shape.args);
            }
            if (!this.interact) {
                // not interactive so no need to keep the shapes array
                this.shapes = {};
                this.shapeseq = [];
            }
        }

    });

    VCanvas_vml = createClass(VCanvas_base, {
        init: function (width, height, target) {
            var groupel;
            VCanvas_vml._super.init.call(this, width, height, target);
            if (target[0]) {
                target = target[0];
            }
            $.data(target, '_jqs_vcanvas', this);
            this.canvas = document.createElement('span');
            $(this.canvas).css({ display: 'inline-block', position: 'relative', overflow: 'hidden', width: width, height: height, margin: '0px', padding: '0px', verticalAlign: 'top'});
            this._insert(this.canvas, target);
            this._calculatePixelDims(width, height, this.canvas);
            this.canvas.width = this.pixelWidth;
            this.canvas.height = this.pixelHeight;
            groupel = '<v:group coordorigin="0 0" coordsize="' + this.pixelWidth + ' ' + this.pixelHeight + '"' +
                    ' style="position:absolute;top:0;left:0;width:' + this.pixelWidth + 'px;height=' + this.pixelHeight + 'px;"></v:group>';
            this.canvas.insertAdjacentHTML('beforeEnd', groupel);
            this.group = $(this.canvas).children()[0];
            this.rendered = false;
            this.prerender = '';
        },

        _drawShape: function (shapeid, path, lineColor, fillColor, lineWidth) {
            var vpath = [],
                initial, stroke, fill, closed, vel, plen, i;
            for (i = 0, plen = path.length; i < plen; i++) {
                vpath[i] = '' + (path[i][0]) + ',' + (path[i][1]);
            }
            initial = vpath.splice(0, 1);
            lineWidth = lineWidth === undefined ? 1 : lineWidth;
            stroke = lineColor === undefined ? ' stroked="false" ' : ' strokeWeight="' + lineWidth + 'px" strokeColor="' + lineColor + '" ';
            fill = fillColor === undefined ? ' filled="false"' : ' fillColor="' + fillColor + '" filled="true" ';
            closed = vpath[0] === vpath[vpath.length - 1] ? 'x ' : '';
            vel = '<v:shape coordorigin="0 0" coordsize="' + this.pixelWidth + ' ' + this.pixelHeight + '" ' +
                 ' id="jqsshape' + shapeid + '" ' +
                 stroke +
                 fill +
                ' style="position:absolute;left:0px;top:0px;height:' + this.pixelHeight + 'px;width:' + this.pixelWidth + 'px;padding:0px;margin:0px;" ' +
                ' path="m ' + initial + ' l ' + vpath.join(', ') + ' ' + closed + 'e">' +
                ' </v:shape>';
            return vel;
        },

        _drawCircle: function (shapeid, x, y, radius, lineColor, fillColor, lineWidth) {
            var stroke, fill, vel;
            x -= radius;
            y -= radius;
            stroke = lineColor === undefined ? ' stroked="false" ' : ' strokeWeight="' + lineWidth + 'px" strokeColor="' + lineColor + '" ';
            fill = fillColor === undefined ? ' filled="false"' : ' fillColor="' + fillColor + '" filled="true" ';
            vel = '<v:oval ' +
                 ' id="jqsshape' + shapeid + '" ' +
                stroke +
                fill +
                ' style="position:absolute;top:' + y + 'px; left:' + x + 'px; width:' + (radius * 2) + 'px; height:' + (radius * 2) + 'px"></v:oval>';
            return vel;

        },

        _drawPieSlice: function (shapeid, x, y, radius, startAngle, endAngle, lineColor, fillColor) {
            var vpath, startx, starty, endx, endy, stroke, fill, vel;
            if (startAngle === endAngle) {
                return '';  // VML seems to have problem when start angle equals end angle.
            }
            if ((endAngle - startAngle) === (2 * Math.PI)) {
                startAngle = 0.0;  // VML seems to have a problem when drawing a full circle that doesn't start 0
                endAngle = (2 * Math.PI);
            }

            startx = x + Math.round(Math.cos(startAngle) * radius);
            starty = y + Math.round(Math.sin(startAngle) * radius);
            endx = x + Math.round(Math.cos(endAngle) * radius);
            endy = y + Math.round(Math.sin(endAngle) * radius);

            if (startx === endx && starty === endy) {
                if ((endAngle - startAngle) < Math.PI) {
                    // Prevent very small slices from being mistaken as a whole pie
                    return '';
                }
                // essentially going to be the entire circle, so ignore startAngle
                startx = endx = x + radius;
                starty = endy = y;
            }

            if (startx === endx && starty === endy && (endAngle - startAngle) < Math.PI) {
                return '';
            }

            vpath = [x - radius, y - radius, x + radius, y + radius, startx, starty, endx, endy];
            stroke = lineColor === undefined ? ' stroked="false" ' : ' strokeWeight="1px" strokeColor="' + lineColor + '" ';
            fill = fillColor === undefined ? ' filled="false"' : ' fillColor="' + fillColor + '" filled="true" ';
            vel = '<v:shape coordorigin="0 0" coordsize="' + this.pixelWidth + ' ' + this.pixelHeight + '" ' +
                 ' id="jqsshape' + shapeid + '" ' +
                 stroke +
                 fill +
                ' style="position:absolute;left:0px;top:0px;height:' + this.pixelHeight + 'px;width:' + this.pixelWidth + 'px;padding:0px;margin:0px;" ' +
                ' path="m ' + x + ',' + y + ' wa ' + vpath.join(', ') + ' x e">' +
                ' </v:shape>';
            return vel;
        },

        _drawRect: function (shapeid, x, y, width, height, lineColor, fillColor) {
            return this._drawShape(shapeid, [[x, y], [x, y + height], [x + width, y + height], [x + width, y], [x, y]], lineColor, fillColor);
        },

        reset: function () {
            this.group.innerHTML = '';
        },

        appendShape: function (shape) {
            var vel = this['_draw' + shape.type].apply(this, shape.args);
            if (this.rendered) {
                this.group.insertAdjacentHTML('beforeEnd', vel);
            } else {
                this.prerender += vel;
            }
            this.lastShapeId = shape.id;
            return shape.id;
        },

        replaceWithShape: function (shapeid, shape) {
            var existing = $('#jqsshape' + shapeid),
                vel = this['_draw' + shape.type].apply(this, shape.args);
            existing[0].outerHTML = vel;
        },

        replaceWithShapes: function (shapeids, shapes) {
            // replace the first shapeid with all the new shapes then toast the remaining old shapes
            var existing = $('#jqsshape' + shapeids[0]),
                replace = '',
                slen = shapes.length,
                i;
            for (i = 0; i < slen; i++) {
                replace += this['_draw' + shapes[i].type].apply(this, shapes[i].args);
            }
            existing[0].outerHTML = replace;
            for (i = 1; i < shapeids.length; i++) {
                $('#jqsshape' + shapeids[i]).remove();
            }
        },

        insertAfterShape: function (shapeid, shape) {
            var existing = $('#jqsshape' + shapeid),
                 vel = this['_draw' + shape.type].apply(this, shape.args);
            existing[0].insertAdjacentHTML('afterEnd', vel);
        },

        removeShapeId: function (shapeid) {
            var existing = $('#jqsshape' + shapeid);
            this.group.removeChild(existing[0]);
        },

        getShapeAt: function (el, x, y) {
            var shapeid = el.id.substr(8);
            return shapeid;
        },

        render: function () {
            if (!this.rendered) {
                // batch the intial render into a single repaint
                this.group.innerHTML = this.prerender;
                this.rendered = true;
            }
        }
    });

}))}(document, Math));
/**!
 * easy-pie-chart
 * Lightweight plugin to render simple, animated and retina optimized pie charts
 *
 * @license 
 * @author Robert Fleischmann <rendro87@gmail.com> (http://robert-fleischmann.de)
 * @version 2.1.7
 **/


(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    define(["jquery"], function (a0) {
      return (factory(a0));
    });
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(require("jquery"));
  } else {
    factory(jQuery);
  }
}(this, function ($) {

/**
 * Renderer to render the chart on a canvas object
 * @param {DOMElement} el      DOM element to host the canvas (root of the plugin)
 * @param {object}     options options object of the plugin
 */
var CanvasRenderer = function(el, options) {
	var cachedBackground;
	var canvas = document.createElement('canvas');

	el.appendChild(canvas);

	if (typeof(G_vmlCanvasManager) === 'object') {
		G_vmlCanvasManager.initElement(canvas);
	}

	var ctx = canvas.getContext('2d');

	canvas.width = canvas.height = options.size;

	// canvas on retina devices
	var scaleBy = 1;
	if (window.devicePixelRatio > 1) {
		scaleBy = window.devicePixelRatio;
		canvas.style.width = canvas.style.height = [options.size, 'px'].join('');
		canvas.width = canvas.height = options.size * scaleBy;
		ctx.scale(scaleBy, scaleBy);
	}

	// move 0,0 coordinates to the center
	ctx.translate(options.size / 2, options.size / 2);

	// rotate canvas -90deg
	ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI);

	var radius = (options.size - options.lineWidth) / 2;
	if (options.scaleColor && options.scaleLength) {
		radius -= options.scaleLength + 2; // 2 is the distance between scale and bar
	}

	// IE polyfill for Date
	Date.now = Date.now || function() {
		return +(new Date());
	};

	/**
	 * Draw a circle around the center of the canvas
	 * @param {strong} color     Valid CSS color string
	 * @param {number} lineWidth Width of the line in px
	 * @param {number} percent   Percentage to draw (float between -1 and 1)
	 */
	var drawCircle = function(color, lineWidth, percent) {
		percent = Math.min(Math.max(-1, percent || 0), 1);
		var isNegative = percent <= 0 ? true : false;

		ctx.beginPath();
		ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, isNegative);

		ctx.strokeStyle = color;
		ctx.lineWidth = lineWidth;

		ctx.stroke();
	};

	/**
	 * Draw the scale of the chart
	 */
	var drawScale = function() {
		var offset;
		var length;

		ctx.lineWidth = 1;
		ctx.fillStyle = options.scaleColor;

		ctx.save();
		for (var i = 24; i > 0; --i) {
			if (i % 6 === 0) {
				length = options.scaleLength;
				offset = 0;
			} else {
				length = options.scaleLength * 0.6;
				offset = options.scaleLength - length;
			}
			ctx.fillRect(-options.size/2 + offset, 0, length, 1);
			ctx.rotate(Math.PI / 12);
		}
		ctx.restore();
	};

	/**
	 * Request animation frame wrapper with polyfill
	 * @return {function} Request animation frame method or timeout fallback
	 */
	var reqAnimationFrame = (function() {
		return  window.requestAnimationFrame ||
				window.webkitRequestAnimationFrame ||
				window.mozRequestAnimationFrame ||
				function(callback) {
					window.setTimeout(callback, 1000 / 60);
				};
	}());

	/**
	 * Draw the background of the plugin including the scale and the track
	 */
	var drawBackground = function() {
		if(options.scaleColor) drawScale();
		if(options.trackColor) drawCircle(options.trackColor, options.trackWidth || options.lineWidth, 1);
	};

  /**
    * Canvas accessor
   */
  this.getCanvas = function() {
    return canvas;
  };

  /**
    * Canvas 2D context 'ctx' accessor
   */
  this.getCtx = function() {
    return ctx;
  };

	/**
	 * Clear the complete canvas
	 */
	this.clear = function() {
		ctx.clearRect(options.size / -2, options.size / -2, options.size, options.size);
	};

	/**
	 * Draw the complete chart
	 * @param {number} percent Percent shown by the chart between -100 and 100
	 */
	this.draw = function(percent) {
		// do we need to render a background
		if (!!options.scaleColor || !!options.trackColor) {
			// getImageData and putImageData are supported
			if (ctx.getImageData && ctx.putImageData) {
				if (!cachedBackground) {
					drawBackground();
					cachedBackground = ctx.getImageData(0, 0, options.size * scaleBy, options.size * scaleBy);
				} else {
					ctx.putImageData(cachedBackground, 0, 0);
				}
			} else {
				this.clear();
				drawBackground();
			}
		} else {
			this.clear();
		}

		ctx.lineCap = options.lineCap;

		// if barcolor is a function execute it and pass the percent as a value
		var color;
		if (typeof(options.barColor) === 'function') {
			color = options.barColor(percent);
		} else {
			color = options.barColor;
		}

		// draw bar
		drawCircle(color, options.lineWidth, percent / 100);
	}.bind(this);

	/**
	 * Animate from some percent to some other percentage
	 * @param {number} from Starting percentage
	 * @param {number} to   Final percentage
	 */
	this.animate = function(from, to) {
		var startTime = Date.now();
		options.onStart(from, to);
		var animation = function() {
			var process = Math.min(Date.now() - startTime, options.animate.duration);
			var currentValue = options.easing(this, process, from, to - from, options.animate.duration);
			this.draw(currentValue);
			options.onStep(from, to, currentValue);
			if (process >= options.animate.duration) {
				options.onStop(from, to);
			} else {
				reqAnimationFrame(animation);
			}
		}.bind(this);

		reqAnimationFrame(animation);
	}.bind(this);
};

var EasyPieChart = function(el, opts) {
	var defaultOptions = {
		barColor: '#ef1e25',
		trackColor: '#f9f9f9',
		scaleColor: '#dfe0e0',
		scaleLength: 5,
		lineCap: 'round',
		lineWidth: 3,
		trackWidth: undefined,
		size: 110,
		rotate: 0,
		animate: {
			duration: 1000,
			enabled: true
		},
		easing: function (x, t, b, c, d) { // more can be found here: http://gsgd.co.uk/sandbox/jquery/easing/
			t = t / (d/2);
			if (t < 1) {
				return c / 2 * t * t + b;
			}
			return -c/2 * ((--t)*(t-2) - 1) + b;
		},
		onStart: function(from, to) {
			return;
		},
		onStep: function(from, to, currentValue) {
			return;
		},
		onStop: function(from, to) {
			return;
		}
	};

	// detect present renderer
	if (typeof(CanvasRenderer) !== 'undefined') {
		defaultOptions.renderer = CanvasRenderer;
	} else if (typeof(SVGRenderer) !== 'undefined') {
		defaultOptions.renderer = SVGRenderer;
	} else {
		throw new Error('Please load either the SVG- or the CanvasRenderer');
	}

	var options = {};
	var currentValue = 0;

	/**
	 * Initialize the plugin by creating the options object and initialize rendering
	 */
	var init = function() {
		this.el = el;
		this.options = options;

		// merge user options into default options
		for (var i in defaultOptions) {
			if (defaultOptions.hasOwnProperty(i)) {
				options[i] = opts && typeof(opts[i]) !== 'undefined' ? opts[i] : defaultOptions[i];
				if (typeof(options[i]) === 'function') {
					options[i] = options[i].bind(this);
				}
			}
		}

		// check for jQuery easing
		if (typeof(options.easing) === 'string' && typeof(jQuery) !== 'undefined' && jQuery.isFunction(jQuery.easing[options.easing])) {
			options.easing = jQuery.easing[options.easing];
		} else {
			options.easing = defaultOptions.easing;
		}

		// process earlier animate option to avoid bc breaks
		if (typeof(options.animate) === 'number') {
			options.animate = {
				duration: options.animate,
				enabled: true
			};
		}

		if (typeof(options.animate) === 'boolean' && !options.animate) {
			options.animate = {
				duration: 1000,
				enabled: options.animate
			};
		}

		// create renderer
		this.renderer = new options.renderer(el, options);

		// initial draw
		this.renderer.draw(currentValue);

		// initial update
		if (el.dataset && el.dataset.percent) {
			this.update(parseFloat(el.dataset.percent));
		} else if (el.getAttribute && el.getAttribute('data-percent')) {
			this.update(parseFloat(el.getAttribute('data-percent')));
		}
	}.bind(this);

	/**
	 * Update the value of the chart
	 * @param  {number} newValue Number between 0 and 100
	 * @return {object}          Instance of the plugin for method chaining
	 */
	this.update = function(newValue) {
		newValue = parseFloat(newValue);
		if (options.animate.enabled) {
			this.renderer.animate(currentValue, newValue);
		} else {
			this.renderer.draw(newValue);
		}
		currentValue = newValue;
		return this;
	}.bind(this);

	/**
	 * Disable animation
	 * @return {object} Instance of the plugin for method chaining
	 */
	this.disableAnimation = function() {
		options.animate.enabled = false;
		return this;
	};

	/**
	 * Enable animation
	 * @return {object} Instance of the plugin for method chaining
	 */
	this.enableAnimation = function() {
		options.animate.enabled = true;
		return this;
	};

	init();
};

$.fn.easyPieChart = function(options) {
	return this.each(function() {
		var instanceOptions;

		if (!$.data(this, 'easyPieChart')) {
			instanceOptions = $.extend({}, options, $(this).data());
			$.data(this, 'easyPieChart', new EasyPieChart(this, instanceOptions));
		}
	});
};


}));

(function() {

  function initEasyPieChart() {
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('easypiechart') && initEasyPieChart.call(this)
  })

})()
;
// Copyright (C) 2006 Google Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.


/**
 * @fileoverview
 * some functions for browser-side pretty printing of code contained in html.
 *
 * <p>
 * For a fairly comprehensive set of languages see the
 * <a href="http://google-code-prettify.googlecode.com/svn/trunk/README.html#langs">README</a>
 * file that came with this source.  At a minimum, the lexer should work on a
 * number of languages including C and friends, Java, Python, Bash, SQL, HTML,
 * XML, CSS, Javascript, and Makefiles.  It works passably on Ruby, PHP and Awk
 * and a subset of Perl, but, because of commenting conventions, doesn't work on
 * Smalltalk, Lisp-like, or CAML-like languages without an explicit lang class.
 * <p>
 * Usage: <ol>
 * <li> include this source file in an html page via
 *   {@code <script type="text/javascript" src="/path/to/prettify.js"></script>}
 * <li> define style rules.  See the example page for examples.
 * <li> mark the {@code <pre>} and {@code <code>} tags in your source with
 *    {@code class=prettyprint.}
 *    You can also use the (html deprecated) {@code <xmp>} tag, but the pretty
 *    printer needs to do more substantial DOM manipulations to support that, so
 *    some css styles may not be preserved.
 * </ol>
 * That's it.  I wanted to keep the API as simple as possible, so there's no
 * need to specify which language the code is in, but if you wish, you can add
 * another class to the {@code <pre>} or {@code <code>} element to specify the
 * language, as in {@code <pre class="prettyprint lang-java">}.  Any class that
 * starts with "lang-" followed by a file extension, specifies the file type.
 * See the "lang-*.js" files in this directory for code that implements
 * per-language file handlers.
 * <p>
 * Change log:<br>
 * cbeust, 2006/08/22
 * <blockquote>
 *   Java annotations (start with "@") are now captured as literals ("lit")
 * </blockquote>
 * @requires console
 */

// JSLint declarations
/*global console, document, navigator, setTimeout, window, define */

/** @define {boolean} */

var IN_GLOBAL_SCOPE = true;

/**
 * Split {@code prettyPrint} into multiple timeouts so as not to interfere with
 * UI events.
 * If set to {@code false}, {@code prettyPrint()} is synchronous.
 */
window['PR_SHOULD_USE_CONTINUATION'] = true;

/**
 * Pretty print a chunk of code.
 * @param {string} sourceCodeHtml The HTML to pretty print.
 * @param {string} opt_langExtension The language name to use.
 *     Typically, a filename extension like 'cpp' or 'java'.
 * @param {number|boolean} opt_numberLines True to number lines,
 *     or the 1-indexed number of the first line in sourceCodeHtml.
 * @return {string} code as html, but prettier
 */
var prettyPrintOne;
/**
 * Find all the {@code <pre>} and {@code <code>} tags in the DOM with
 * {@code class=prettyprint} and prettify them.
 *
 * @param {Function} opt_whenDone called when prettifying is done.
 * @param {HTMLElement|HTMLDocument} opt_root an element or document
 *   containing all the elements to pretty print.
 *   Defaults to {@code document.body}.
 */
var prettyPrint;


(function () {
  var win = window;
  // Keyword lists for various languages.
  // We use things that coerce to strings to make them compact when minified
  // and to defeat aggressive optimizers that fold large string constants.
  var FLOW_CONTROL_KEYWORDS = ["break,continue,do,else,for,if,return,while"];
  var C_KEYWORDS = [FLOW_CONTROL_KEYWORDS,"auto,case,char,const,default," +
      "double,enum,extern,float,goto,inline,int,long,register,short,signed," +
      "sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"];
  var COMMON_KEYWORDS = [C_KEYWORDS,"catch,class,delete,false,import," +
      "new,operator,private,protected,public,this,throw,true,try,typeof"];
  var CPP_KEYWORDS = [COMMON_KEYWORDS,"alignof,align_union,asm,axiom,bool," +
      "concept,concept_map,const_cast,constexpr,decltype,delegate," +
      "dynamic_cast,explicit,export,friend,generic,late_check," +
      "mutable,namespace,nullptr,property,reinterpret_cast,static_assert," +
      "static_cast,template,typeid,typename,using,virtual,where"];
  var JAVA_KEYWORDS = [COMMON_KEYWORDS,
      "abstract,assert,boolean,byte,extends,final,finally,implements,import," +
      "instanceof,interface,null,native,package,strictfp,super,synchronized," +
      "throws,transient"];
  var CSHARP_KEYWORDS = [COMMON_KEYWORDS,
      "abstract,as,base,bool,by,byte,checked,decimal,delegate,descending," +
      "dynamic,event,finally,fixed,foreach,from,group,implicit,in,interface," +
      "internal,into,is,let,lock,null,object,out,override,orderby,params," +
      "partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong," +
      "unchecked,unsafe,ushort,var,virtual,where"];
  var COFFEE_KEYWORDS = "all,and,by,catch,class,else,extends,false,finally," +
      "for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then," +
      "throw,true,try,unless,until,when,while,yes";
  var JSCRIPT_KEYWORDS = [COMMON_KEYWORDS,
      "debugger,eval,export,function,get,null,set,undefined,var,with," +
      "Infinity,NaN"];
  var PERL_KEYWORDS = "caller,delete,die,do,dump,elsif,eval,exit,foreach,for," +
      "goto,if,import,last,local,my,next,no,our,print,package,redo,require," +
      "sub,undef,unless,until,use,wantarray,while,BEGIN,END";
  var PYTHON_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "and,as,assert,class,def,del," +
      "elif,except,exec,finally,from,global,import,in,is,lambda," +
      "nonlocal,not,or,pass,print,raise,try,with,yield," +
      "False,True,None"];
  var RUBY_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "alias,and,begin,case,class," +
      "def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo," +
      "rescue,retry,self,super,then,true,undef,unless,until,when,yield," +
      "BEGIN,END"];
   var RUST_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "as,assert,const,copy,drop," +
      "enum,extern,fail,false,fn,impl,let,log,loop,match,mod,move,mut,priv," +
      "pub,pure,ref,self,static,struct,true,trait,type,unsafe,use"];
  var SH_KEYWORDS = [FLOW_CONTROL_KEYWORDS, "case,done,elif,esac,eval,fi," +
      "function,in,local,set,then,until"];
  var ALL_KEYWORDS = [
      CPP_KEYWORDS, CSHARP_KEYWORDS, JSCRIPT_KEYWORDS, PERL_KEYWORDS,
      PYTHON_KEYWORDS, RUBY_KEYWORDS, SH_KEYWORDS];
  var C_TYPES = /^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)\b/;

  // token style names.  correspond to css classes
  /**
   * token style for a string literal
   * @const
   */
  var PR_STRING = 'str';
  /**
   * token style for a keyword
   * @const
   */
  var PR_KEYWORD = 'kwd';
  /**
   * token style for a comment
   * @const
   */
  var PR_COMMENT = 'com';
  /**
   * token style for a type
   * @const
   */
  var PR_TYPE = 'typ';
  /**
   * token style for a literal value.  e.g. 1, null, true.
   * @const
   */
  var PR_LITERAL = 'lit';
  /**
   * token style for a punctuation string.
   * @const
   */
  var PR_PUNCTUATION = 'pun';
  /**
   * token style for plain text.
   * @const
   */
  var PR_PLAIN = 'pln';

  /**
   * token style for an sgml tag.
   * @const
   */
  var PR_TAG = 'tag';
  /**
   * token style for a markup declaration such as a DOCTYPE.
   * @const
   */
  var PR_DECLARATION = 'dec';
  /**
   * token style for embedded source.
   * @const
   */
  var PR_SOURCE = 'src';
  /**
   * token style for an sgml attribute name.
   * @const
   */
  var PR_ATTRIB_NAME = 'atn';
  /**
   * token style for an sgml attribute value.
   * @const
   */
  var PR_ATTRIB_VALUE = 'atv';

  /**
   * A class that indicates a section of markup that is not code, e.g. to allow
   * embedding of line numbers within code listings.
   * @const
   */
  var PR_NOCODE = 'nocode';



  /**
   * A set of tokens that can precede a regular expression literal in
   * javascript
   * http://web.archive.org/web/20070717142515/http://www.mozilla.org/js/language/js20/rationale/syntax.html
   * has the full list, but I've removed ones that might be problematic when
   * seen in languages that don't support regular expression literals.
   *
   * <p>Specifically, I've removed any keywords that can't precede a regexp
   * literal in a syntactically legal javascript program, and I've removed the
   * "in" keyword since it's not a keyword in many languages, and might be used
   * as a count of inches.
   *
   * <p>The link above does not accurately describe EcmaScript rules since
   * it fails to distinguish between (a=++/b/i) and (a++/b/i) but it works
   * very well in practice.
   *
   * @private
   * @const
   */
  var REGEXP_PRECEDER_PATTERN = '(?:^^\\.?|[+-]|[!=]=?=?|\\#|%=?|&&?=?|\\(|\\*=?|[+\\-]=|->|\\/=?|::?|<<?=?|>>?>?=?|,|;|\\?|@|\\[|~|{|\\^\\^?=?|\\|\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*';

  // CAVEAT: this does not properly handle the case where a regular
  // expression immediately follows another since a regular expression may
  // have flags for case-sensitivity and the like.  Having regexp tokens
  // adjacent is not valid in any language I'm aware of, so I'm punting.
  // TODO: maybe style special characters inside a regexp as punctuation.

  /**
   * Given a group of {@link RegExp}s, returns a {@code RegExp} that globally
   * matches the union of the sets of strings matched by the input RegExp.
   * Since it matches globally, if the input strings have a start-of-input
   * anchor (/^.../), it is ignored for the purposes of unioning.
   * @param {Array.<RegExp>} regexs non multiline, non-global regexs.
   * @return {RegExp} a global regex.
   */
  function combinePrefixPatterns(regexs) {
    var capturedGroupIndex = 0;

    var needToFoldCase = false;
    var ignoreCase = false;
    for (var i = 0, n = regexs.length; i < n; ++i) {
      var regex = regexs[i];
      if (regex.ignoreCase) {
        ignoreCase = true;
      } else if (/[a-z]/i.test(regex.source.replace(
                     /\\u[0-9a-f]{4}|\\x[0-9a-f]{2}|\\[^ux]/gi, ''))) {
        needToFoldCase = true;
        ignoreCase = false;
        break;
      }
    }

    var escapeCharToCodeUnit = {
      'b': 8,
      't': 9,
      'n': 0xa,
      'v': 0xb,
      'f': 0xc,
      'r': 0xd
    };

    function decodeEscape(charsetPart) {
      var cc0 = charsetPart.charCodeAt(0);
      if (cc0 !== 92 /* \\ */) {
        return cc0;
      }
      var c1 = charsetPart.charAt(1);
      cc0 = escapeCharToCodeUnit[c1];
      if (cc0) {
        return cc0;
      } else if ('0' <= c1 && c1 <= '7') {
        return parseInt(charsetPart.substring(1), 8);
      } else if (c1 === 'u' || c1 === 'x') {
        return parseInt(charsetPart.substring(2), 16);
      } else {
        return charsetPart.charCodeAt(1);
      }
    }

    function encodeEscape(charCode) {
      if (charCode < 0x20) {
        return (charCode < 0x10 ? '\\x0' : '\\x') + charCode.toString(16);
      }
      var ch = String.fromCharCode(charCode);
      return (ch === '\\' || ch === '-' || ch === ']' || ch === '^')
          ? "\\" + ch : ch;
    }

    function caseFoldCharset(charSet) {
      var charsetParts = charSet.substring(1, charSet.length - 1).match(
          new RegExp(
              '\\\\u[0-9A-Fa-f]{4}'
              + '|\\\\x[0-9A-Fa-f]{2}'
              + '|\\\\[0-3][0-7]{0,2}'
              + '|\\\\[0-7]{1,2}'
              + '|\\\\[\\s\\S]'
              + '|-'
              + '|[^-\\\\]',
              'g'));
      var ranges = [];
      var inverse = charsetParts[0] === '^';

      var out = ['['];
      if (inverse) { out.push('^'); }

      for (var i = inverse ? 1 : 0, n = charsetParts.length; i < n; ++i) {
        var p = charsetParts[i];
        if (/\\[bdsw]/i.test(p)) {  // Don't muck with named groups.
          out.push(p);
        } else {
          var start = decodeEscape(p);
          var end;
          if (i + 2 < n && '-' === charsetParts[i + 1]) {
            end = decodeEscape(charsetParts[i + 2]);
            i += 2;
          } else {
            end = start;
          }
          ranges.push([start, end]);
          // If the range might intersect letters, then expand it.
          // This case handling is too simplistic.
          // It does not deal with non-latin case folding.
          // It works for latin source code identifiers though.
          if (!(end < 65 || start > 122)) {
            if (!(end < 65 || start > 90)) {
              ranges.push([Math.max(65, start) | 32, Math.min(end, 90) | 32]);
            }
            if (!(end < 97 || start > 122)) {
              ranges.push([Math.max(97, start) & ~32, Math.min(end, 122) & ~32]);
            }
          }
        }
      }

      // [[1, 10], [3, 4], [8, 12], [14, 14], [16, 16], [17, 17]]
      // -> [[1, 12], [14, 14], [16, 17]]
      ranges.sort(function (a, b) { return (a[0] - b[0]) || (b[1]  - a[1]); });
      var consolidatedRanges = [];
      var lastRange = [];
      for (var i = 0; i < ranges.length; ++i) {
        var range = ranges[i];
        if (range[0] <= lastRange[1] + 1) {
          lastRange[1] = Math.max(lastRange[1], range[1]);
        } else {
          consolidatedRanges.push(lastRange = range);
        }
      }

      for (var i = 0; i < consolidatedRanges.length; ++i) {
        var range = consolidatedRanges[i];
        out.push(encodeEscape(range[0]));
        if (range[1] > range[0]) {
          if (range[1] + 1 > range[0]) { out.push('-'); }
          out.push(encodeEscape(range[1]));
        }
      }
      out.push(']');
      return out.join('');
    }

    function allowAnywhereFoldCaseAndRenumberGroups(regex) {
      // Split into character sets, escape sequences, punctuation strings
      // like ('(', '(?:', ')', '^'), and runs of characters that do not
      // include any of the above.
      var parts = regex.source.match(
          new RegExp(
              '(?:'
              + '\\[(?:[^\\x5C\\x5D]|\\\\[\\s\\S])*\\]'  // a character set
              + '|\\\\u[A-Fa-f0-9]{4}'  // a unicode escape
              + '|\\\\x[A-Fa-f0-9]{2}'  // a hex escape
              + '|\\\\[0-9]+'  // a back-reference or octal escape
              + '|\\\\[^ux0-9]'  // other escape sequence
              + '|\\(\\?[:!=]'  // start of a non-capturing group
              + '|[\\(\\)\\^]'  // start/end of a group, or line start
              + '|[^\\x5B\\x5C\\(\\)\\^]+'  // run of other characters
              + ')',
              'g'));
      var n = parts.length;

      // Maps captured group numbers to the number they will occupy in
      // the output or to -1 if that has not been determined, or to
      // undefined if they need not be capturing in the output.
      var capturedGroups = [];

      // Walk over and identify back references to build the capturedGroups
      // mapping.
      for (var i = 0, groupIndex = 0; i < n; ++i) {
        var p = parts[i];
        if (p === '(') {
          // groups are 1-indexed, so max group index is count of '('
          ++groupIndex;
        } else if ('\\' === p.charAt(0)) {
          var decimalValue = +p.substring(1);
          if (decimalValue) {
            if (decimalValue <= groupIndex) {
              capturedGroups[decimalValue] = -1;
            } else {
              // Replace with an unambiguous escape sequence so that
              // an octal escape sequence does not turn into a backreference
              // to a capturing group from an earlier regex.
              parts[i] = encodeEscape(decimalValue);
            }
          }
        }
      }

      // Renumber groups and reduce capturing groups to non-capturing groups
      // where possible.
      for (var i = 1; i < capturedGroups.length; ++i) {
        if (-1 === capturedGroups[i]) {
          capturedGroups[i] = ++capturedGroupIndex;
        }
      }
      for (var i = 0, groupIndex = 0; i < n; ++i) {
        var p = parts[i];
        if (p === '(') {
          ++groupIndex;
          if (!capturedGroups[groupIndex]) {
            parts[i] = '(?:';
          }
        } else if ('\\' === p.charAt(0)) {
          var decimalValue = +p.substring(1);
          if (decimalValue && decimalValue <= groupIndex) {
            parts[i] = '\\' + capturedGroups[decimalValue];
          }
        }
      }

      // Remove any prefix anchors so that the output will match anywhere.
      // ^^ really does mean an anchored match though.
      for (var i = 0; i < n; ++i) {
        if ('^' === parts[i] && '^' !== parts[i + 1]) { parts[i] = ''; }
      }

      // Expand letters to groups to handle mixing of case-sensitive and
      // case-insensitive patterns if necessary.
      if (regex.ignoreCase && needToFoldCase) {
        for (var i = 0; i < n; ++i) {
          var p = parts[i];
          var ch0 = p.charAt(0);
          if (p.length >= 2 && ch0 === '[') {
            parts[i] = caseFoldCharset(p);
          } else if (ch0 !== '\\') {
            // TODO: handle letters in numeric escapes.
            parts[i] = p.replace(
                /[a-zA-Z]/g,
                function (ch) {
                  var cc = ch.charCodeAt(0);
                  return '[' + String.fromCharCode(cc & ~32, cc | 32) + ']';
                });
          }
        }
      }

      return parts.join('');
    }

    var rewritten = [];
    for (var i = 0, n = regexs.length; i < n; ++i) {
      var regex = regexs[i];
      if (regex.global || regex.multiline) { throw new Error('' + regex); }
      rewritten.push(
          '(?:' + allowAnywhereFoldCaseAndRenumberGroups(regex) + ')');
    }

    return new RegExp(rewritten.join('|'), ignoreCase ? 'gi' : 'g');
  }

  /**
   * Split markup into a string of source code and an array mapping ranges in
   * that string to the text nodes in which they appear.
   *
   * <p>
   * The HTML DOM structure:</p>
   * <pre>
   * (Element   "p"
   *   (Element "b"
   *     (Text  "print "))       ; #1
   *   (Text    "'Hello '")      ; #2
   *   (Element "br")            ; #3
   *   (Text    "  + 'World';")) ; #4
   * </pre>
   * <p>
   * corresponds to the HTML
   * {@code <p><b>print </b>'Hello '<br>  + 'World';</p>}.</p>
   *
   * <p>
   * It will produce the output:</p>
   * <pre>
   * {
   *   sourceCode: "print 'Hello '\n  + 'World';",
   *   //                     1          2
   *   //           012345678901234 5678901234567
   *   spans: [0, #1, 6, #2, 14, #3, 15, #4]
   * }
   * </pre>
   * <p>
   * where #1 is a reference to the {@code "print "} text node above, and so
   * on for the other text nodes.
   * </p>
   *
   * <p>
   * The {@code} spans array is an array of pairs.  Even elements are the start
   * indices of substrings, and odd elements are the text nodes (or BR elements)
   * that contain the text for those substrings.
   * Substrings continue until the next index or the end of the source.
   * </p>
   *
   * @param {Node} node an HTML DOM subtree containing source-code.
   * @param {boolean} isPreformatted true if white-space in text nodes should
   *    be considered significant.
   * @return {Object} source code and the text nodes in which they occur.
   */
  function extractSourceSpans(node, isPreformatted) {
    var nocode = /(?:^|\s)nocode(?:\s|$)/;

    var chunks = [];
    var length = 0;
    var spans = [];
    var k = 0;

    function walk(node) {
      var type = node.nodeType;
      if (type == 1) {  // Element
        if (nocode.test(node.className)) { return; }
        for (var child = node.firstChild; child; child = child.nextSibling) {
          walk(child);
        }
        var nodeName = node.nodeName.toLowerCase();
        if ('br' === nodeName || 'li' === nodeName) {
          chunks[k] = '\n';
          spans[k << 1] = length++;
          spans[(k++ << 1) | 1] = node;
        }
      } else if (type == 3 || type == 4) {  // Text
        var text = node.nodeValue;
        if (text.length) {
          if (!isPreformatted) {
            text = text.replace(/[ \t\r\n]+/g, ' ');
          } else {
            text = text.replace(/\r\n?/g, '\n');  // Normalize newlines.
          }
          // TODO: handle tabs here?
          chunks[k] = text;
          spans[k << 1] = length;
          length += text.length;
          spans[(k++ << 1) | 1] = node;
        }
      }
    }

    walk(node);

    return {
      sourceCode: chunks.join('').replace(/\n$/, ''),
      spans: spans
    };
  }

  /**
   * Apply the given language handler to sourceCode and add the resulting
   * decorations to out.
   * @param {number} basePos the index of sourceCode within the chunk of source
   *    whose decorations are already present on out.
   */
  function appendDecorations(basePos, sourceCode, langHandler, out) {
    if (!sourceCode) { return; }
    var job = {
      sourceCode: sourceCode,
      basePos: basePos
    };
    langHandler(job);
    out.push.apply(out, job.decorations);
  }

  var notWs = /\S/;

  /**
   * Given an element, if it contains only one child element and any text nodes
   * it contains contain only space characters, return the sole child element.
   * Otherwise returns undefined.
   * <p>
   * This is meant to return the CODE element in {@code <pre><code ...>} when
   * there is a single child element that contains all the non-space textual
   * content, but not to return anything where there are multiple child elements
   * as in {@code <pre><code>...</code><code>...</code></pre>} or when there
   * is textual content.
   */
  function childContentWrapper(element) {
    var wrapper = undefined;
    for (var c = element.firstChild; c; c = c.nextSibling) {
      var type = c.nodeType;
      wrapper = (type === 1)  // Element Node
          ? (wrapper ? element : c)
          : (type === 3)  // Text Node
          ? (notWs.test(c.nodeValue) ? element : wrapper)
          : wrapper;
    }
    return wrapper === element ? undefined : wrapper;
  }

  /** Given triples of [style, pattern, context] returns a lexing function,
    * The lexing function interprets the patterns to find token boundaries and
    * returns a decoration list of the form
    * [index_0, style_0, index_1, style_1, ..., index_n, style_n]
    * where index_n is an index into the sourceCode, and style_n is a style
    * constant like PR_PLAIN.  index_n-1 <= index_n, and style_n-1 applies to
    * all characters in sourceCode[index_n-1:index_n].
    *
    * The stylePatterns is a list whose elements have the form
    * [style : string, pattern : RegExp, DEPRECATED, shortcut : string].
    *
    * Style is a style constant like PR_PLAIN, or can be a string of the
    * form 'lang-FOO', where FOO is a language extension describing the
    * language of the portion of the token in $1 after pattern executes.
    * E.g., if style is 'lang-lisp', and group 1 contains the text
    * '(hello (world))', then that portion of the token will be passed to the
    * registered lisp handler for formatting.
    * The text before and after group 1 will be restyled using this decorator
    * so decorators should take care that this doesn't result in infinite
    * recursion.  For example, the HTML lexer rule for SCRIPT elements looks
    * something like ['lang-js', /<[s]cript>(.+?)<\/script>/].  This may match
    * '<script>foo()<\/script>', which would cause the current decorator to
    * be called with '<script>' which would not match the same rule since
    * group 1 must not be empty, so it would be instead styled as PR_TAG by
    * the generic tag rule.  The handler registered for the 'js' extension would
    * then be called with 'foo()', and finally, the current decorator would
    * be called with '<\/script>' which would not match the original rule and
    * so the generic tag rule would identify it as a tag.
    *
    * Pattern must only match prefixes, and if it matches a prefix, then that
    * match is considered a token with the same style.
    *
    * Context is applied to the last non-whitespace, non-comment token
    * recognized.
    *
    * Shortcut is an optional string of characters, any of which, if the first
    * character, gurantee that this pattern and only this pattern matches.
    *
    * @param {Array} shortcutStylePatterns patterns that always start with
    *   a known character.  Must have a shortcut string.
    * @param {Array} fallthroughStylePatterns patterns that will be tried in
    *   order if the shortcut ones fail.  May have shortcuts.
    *
    * @return {function (Object)} a
    *   function that takes source code and returns a list of decorations.
    */
  function createSimpleLexer(shortcutStylePatterns, fallthroughStylePatterns) {
    var shortcuts = {};
    var tokenizer;
    (function () {
      var allPatterns = shortcutStylePatterns.concat(fallthroughStylePatterns);
      var allRegexs = [];
      var regexKeys = {};
      for (var i = 0, n = allPatterns.length; i < n; ++i) {
        var patternParts = allPatterns[i];
        var shortcutChars = patternParts[3];
        if (shortcutChars) {
          for (var c = shortcutChars.length; --c >= 0;) {
            shortcuts[shortcutChars.charAt(c)] = patternParts;
          }
        }
        var regex = patternParts[1];
        var k = '' + regex;
        if (!regexKeys.hasOwnProperty(k)) {
          allRegexs.push(regex);
          regexKeys[k] = null;
        }
      }
      allRegexs.push(/[\0-\uffff]/);
      tokenizer = combinePrefixPatterns(allRegexs);
    })();

    var nPatterns = fallthroughStylePatterns.length;

    /**
     * Lexes job.sourceCode and produces an output array job.decorations of
     * style classes preceded by the position at which they start in
     * job.sourceCode in order.
     *
     * @param {Object} job an object like <pre>{
     *    sourceCode: {string} sourceText plain text,
     *    basePos: {int} position of job.sourceCode in the larger chunk of
     *        sourceCode.
     * }</pre>
     */
    var decorate = function (job) {
      var sourceCode = job.sourceCode, basePos = job.basePos;
      /** Even entries are positions in source in ascending order.  Odd enties
        * are style markers (e.g., PR_COMMENT) that run from that position until
        * the end.
        * @type {Array.<number|string>}
        */
      var decorations = [basePos, PR_PLAIN];
      var pos = 0;  // index into sourceCode
      var tokens = sourceCode.match(tokenizer) || [];
      var styleCache = {};

      for (var ti = 0, nTokens = tokens.length; ti < nTokens; ++ti) {
        var token = tokens[ti];
        var style = styleCache[token];
        var match = void 0;

        var isEmbedded;
        if (typeof style === 'string') {
          isEmbedded = false;
        } else {
          var patternParts = shortcuts[token.charAt(0)];
          if (patternParts) {
            match = token.match(patternParts[1]);
            style = patternParts[0];
          } else {
            for (var i = 0; i < nPatterns; ++i) {
              patternParts = fallthroughStylePatterns[i];
              match = token.match(patternParts[1]);
              if (match) {
                style = patternParts[0];
                break;
              }
            }

            if (!match) {  // make sure that we make progress
              style = PR_PLAIN;
            }
          }

          isEmbedded = style.length >= 5 && 'lang-' === style.substring(0, 5);
          if (isEmbedded && !(match && typeof match[1] === 'string')) {
            isEmbedded = false;
            style = PR_SOURCE;
          }

          if (!isEmbedded) { styleCache[token] = style; }
        }

        var tokenStart = pos;
        pos += token.length;

        if (!isEmbedded) {
          decorations.push(basePos + tokenStart, style);
        } else {  // Treat group 1 as an embedded block of source code.
          var embeddedSource = match[1];
          var embeddedSourceStart = token.indexOf(embeddedSource);
          var embeddedSourceEnd = embeddedSourceStart + embeddedSource.length;
          if (match[2]) {
            // If embeddedSource can be blank, then it would match at the
            // beginning which would cause us to infinitely recurse on the
            // entire token, so we catch the right context in match[2].
            embeddedSourceEnd = token.length - match[2].length;
            embeddedSourceStart = embeddedSourceEnd - embeddedSource.length;
          }
          var lang = style.substring(5);
          // Decorate the left of the embedded source
          appendDecorations(
              basePos + tokenStart,
              token.substring(0, embeddedSourceStart),
              decorate, decorations);
          // Decorate the embedded source
          appendDecorations(
              basePos + tokenStart + embeddedSourceStart,
              embeddedSource,
              langHandlerForExtension(lang, embeddedSource),
              decorations);
          // Decorate the right of the embedded section
          appendDecorations(
              basePos + tokenStart + embeddedSourceEnd,
              token.substring(embeddedSourceEnd),
              decorate, decorations);
        }
      }
      job.decorations = decorations;
    };
    return decorate;
  }

  /** returns a function that produces a list of decorations from source text.
    *
    * This code treats ", ', and ` as string delimiters, and \ as a string
    * escape.  It does not recognize perl's qq() style strings.
    * It has no special handling for double delimiter escapes as in basic, or
    * the tripled delimiters used in python, but should work on those regardless
    * although in those cases a single string literal may be broken up into
    * multiple adjacent string literals.
    *
    * It recognizes C, C++, and shell style comments.
    *
    * @param {Object} options a set of optional parameters.
    * @return {function (Object)} a function that examines the source code
    *     in the input job and builds the decoration list.
    */
  function sourceDecorator(options) {
    var shortcutStylePatterns = [], fallthroughStylePatterns = [];
    if (options['tripleQuotedStrings']) {
      // '''multi-line-string''', 'single-line-string', and double-quoted
      shortcutStylePatterns.push(
          [PR_STRING,  /^(?:\'\'\'(?:[^\'\\]|\\[\s\S]|\'{1,2}(?=[^\']))*(?:\'\'\'|$)|\"\"\"(?:[^\"\\]|\\[\s\S]|\"{1,2}(?=[^\"]))*(?:\"\"\"|$)|\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$))/,
           null, '\'"']);
    } else if (options['multiLineStrings']) {
      // 'multi-line-string', "multi-line-string"
      shortcutStylePatterns.push(
          [PR_STRING,  /^(?:\'(?:[^\\\']|\\[\s\S])*(?:\'|$)|\"(?:[^\\\"]|\\[\s\S])*(?:\"|$)|\`(?:[^\\\`]|\\[\s\S])*(?:\`|$))/,
           null, '\'"`']);
    } else {
      // 'single-line-string', "single-line-string"
      shortcutStylePatterns.push(
          [PR_STRING,
           /^(?:\'(?:[^\\\'\r\n]|\\.)*(?:\'|$)|\"(?:[^\\\"\r\n]|\\.)*(?:\"|$))/,
           null, '"\'']);
    }
    if (options['verbatimStrings']) {
      // verbatim-string-literal production from the C# grammar.  See issue 93.
      fallthroughStylePatterns.push(
          [PR_STRING, /^@\"(?:[^\"]|\"\")*(?:\"|$)/, null]);
    }
    var hc = options['hashComments'];
    if (hc) {
      if (options['cStyleComments']) {
        if (hc > 1) {  // multiline hash comments
          shortcutStylePatterns.push(
              [PR_COMMENT, /^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/, null, '#']);
        } else {
          // Stop C preprocessor declarations at an unclosed open comment
          shortcutStylePatterns.push(
              [PR_COMMENT, /^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\b|[^\r\n]*)/,
               null, '#']);
        }
        // #include <stdio.h>
        fallthroughStylePatterns.push(
            [PR_STRING,
             /^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h(?:h|pp|\+\+)?|[a-z]\w*)>/,
             null]);
      } else {
        shortcutStylePatterns.push([PR_COMMENT, /^#[^\r\n]*/, null, '#']);
      }
    }
    if (options['cStyleComments']) {
      fallthroughStylePatterns.push([PR_COMMENT, /^\/\/[^\r\n]*/, null]);
      fallthroughStylePatterns.push(
          [PR_COMMENT, /^\/\*[\s\S]*?(?:\*\/|$)/, null]);
    }
    var regexLiterals = options['regexLiterals'];
    if (regexLiterals) {
      /**
       * @const
       */
      var regexExcls = regexLiterals > 1
        ? ''  // Multiline regex literals
        : '\n\r';
      /**
       * @const
       */
      var regexAny = regexExcls ? '.' : '[\\S\\s]';
      /**
       * @const
       */
      var REGEX_LITERAL = (
          // A regular expression literal starts with a slash that is
          // not followed by * or / so that it is not confused with
          // comments.
          '/(?=[^/*' + regexExcls + '])'
          // and then contains any number of raw characters,
          + '(?:[^/\\x5B\\x5C' + regexExcls + ']'
          // escape sequences (\x5C),
          +    '|\\x5C' + regexAny
          // or non-nesting character sets (\x5B\x5D);
          +    '|\\x5B(?:[^\\x5C\\x5D' + regexExcls + ']'
          +             '|\\x5C' + regexAny + ')*(?:\\x5D|$))+'
          // finally closed by a /.
          + '/');
      fallthroughStylePatterns.push(
          ['lang-regex',
           RegExp('^' + REGEXP_PRECEDER_PATTERN + '(' + REGEX_LITERAL + ')')
           ]);
    }

    var types = options['types'];
    if (types) {
      fallthroughStylePatterns.push([PR_TYPE, types]);
    }

    var keywords = ("" + options['keywords']).replace(/^ | $/g, '');
    if (keywords.length) {
      fallthroughStylePatterns.push(
          [PR_KEYWORD,
           new RegExp('^(?:' + keywords.replace(/[\s,]+/g, '|') + ')\\b'),
           null]);
    }

    shortcutStylePatterns.push([PR_PLAIN,       /^\s+/, null, ' \r\n\t\xA0']);

    var punctuation =
      // The Bash man page says

      // A word is a sequence of characters considered as a single
      // unit by GRUB. Words are separated by metacharacters,
      // which are the following plus space, tab, and newline: { }
      // | & $ ; < >
      // ...

      // A word beginning with # causes that word and all remaining
      // characters on that line to be ignored.

      // which means that only a '#' after /(?:^|[{}|&$;<>\s])/ starts a
      // comment but empirically
      // $ echo {#}
      // {#}
      // $ echo \$#
      // $#
      // $ echo }#
      // }#

      // so /(?:^|[|&;<>\s])/ is more appropriate.

      // http://gcc.gnu.org/onlinedocs/gcc-2.95.3/cpp_1.html#SEC3
      // suggests that this definition is compatible with a
      // default mode that tries to use a single token definition
      // to recognize both bash/python style comments and C
      // preprocessor directives.

      // This definition of punctuation does not include # in the list of
      // follow-on exclusions, so # will not be broken before if preceeded
      // by a punctuation character.  We could try to exclude # after
      // [|&;<>] but that doesn't seem to cause many major problems.
      // If that does turn out to be a problem, we should change the below
      // when hc is truthy to include # in the run of punctuation characters
      // only when not followint [|&;<>].
      '^.[^\\s\\w.$@\'"`/\\\\]*';
    if (options['regexLiterals']) {
      punctuation += '(?!\s*\/)';
    }

    fallthroughStylePatterns.push(
        // TODO(mikesamuel): recognize non-latin letters and numerals in idents
        [PR_LITERAL,     /^@[a-z_$][a-z_$@0-9]*/i, null],
        [PR_TYPE,        /^(?:[@_]?[A-Z]+[a-z][A-Za-z_$@0-9]*|\w+_t\b)/, null],
        [PR_PLAIN,       /^[a-z_$][a-z_$@0-9]*/i, null],
        [PR_LITERAL,
         new RegExp(
             '^(?:'
             // A hex number
             + '0x[a-f0-9]+'
             // or an octal or decimal number,
             + '|(?:\\d(?:_\\d+)*\\d*(?:\\.\\d*)?|\\.\\d\\+)'
             // possibly in scientific notation
             + '(?:e[+\\-]?\\d+)?'
             + ')'
             // with an optional modifier like UL for unsigned long
             + '[a-z]*', 'i'),
         null, '0123456789'],
        // Don't treat escaped quotes in bash as starting strings.
        // See issue 144.
        [PR_PLAIN,       /^\\[\s\S]?/, null],
        [PR_PUNCTUATION, new RegExp(punctuation), null]);

    return createSimpleLexer(shortcutStylePatterns, fallthroughStylePatterns);
  }

  var decorateSource = sourceDecorator({
        'keywords': ALL_KEYWORDS,
        'hashComments': true,
        'cStyleComments': true,
        'multiLineStrings': true,
        'regexLiterals': true
      });

  /**
   * Given a DOM subtree, wraps it in a list, and puts each line into its own
   * list item.
   *
   * @param {Node} node modified in place.  Its content is pulled into an
   *     HTMLOListElement, and each line is moved into a separate list item.
   *     This requires cloning elements, so the input might not have unique
   *     IDs after numbering.
   * @param {boolean} isPreformatted true iff white-space in text nodes should
   *     be treated as significant.
   */
  function numberLines(node, opt_startLineNum, isPreformatted) {
    var nocode = /(?:^|\s)nocode(?:\s|$)/;
    var lineBreak = /\r\n?|\n/;

    var document = node.ownerDocument;

    var li = document.createElement('li');
    while (node.firstChild) {
      li.appendChild(node.firstChild);
    }
    // An array of lines.  We split below, so this is initialized to one
    // un-split line.
    var listItems = [li];

    function walk(node) {
      var type = node.nodeType;
      if (type == 1 && !nocode.test(node.className)) {  // Element
        if ('br' === node.nodeName) {
          breakAfter(node);
          // Discard the <BR> since it is now flush against a </LI>.
          if (node.parentNode) {
            node.parentNode.removeChild(node);
          }
        } else {
          for (var child = node.firstChild; child; child = child.nextSibling) {
            walk(child);
          }
        }
      } else if ((type == 3 || type == 4) && isPreformatted) {  // Text
        var text = node.nodeValue;
        var match = text.match(lineBreak);
        if (match) {
          var firstLine = text.substring(0, match.index);
          node.nodeValue = firstLine;
          var tail = text.substring(match.index + match[0].length);
          if (tail) {
            var parent = node.parentNode;
            parent.insertBefore(
              document.createTextNode(tail), node.nextSibling);
          }
          breakAfter(node);
          if (!firstLine) {
            // Don't leave blank text nodes in the DOM.
            node.parentNode.removeChild(node);
          }
        }
      }
    }

    // Split a line after the given node.
    function breakAfter(lineEndNode) {
      // If there's nothing to the right, then we can skip ending the line
      // here, and move root-wards since splitting just before an end-tag
      // would require us to create a bunch of empty copies.
      while (!lineEndNode.nextSibling) {
        lineEndNode = lineEndNode.parentNode;
        if (!lineEndNode) { return; }
      }

      function breakLeftOf(limit, copy) {
        // Clone shallowly if this node needs to be on both sides of the break.
        var rightSide = copy ? limit.cloneNode(false) : limit;
        var parent = limit.parentNode;
        if (parent) {
          // We clone the parent chain.
          // This helps us resurrect important styling elements that cross lines.
          // E.g. in <i>Foo<br>Bar</i>
          // should be rewritten to <li><i>Foo</i></li><li><i>Bar</i></li>.
          var parentClone = breakLeftOf(parent, 1);
          // Move the clone and everything to the right of the original
          // onto the cloned parent.
          var next = limit.nextSibling;
          parentClone.appendChild(rightSide);
          for (var sibling = next; sibling; sibling = next) {
            next = sibling.nextSibling;
            parentClone.appendChild(sibling);
          }
        }
        return rightSide;
      }

      var copiedListItem = breakLeftOf(lineEndNode.nextSibling, 0);

      // Walk the parent chain until we reach an unattached LI.
      for (var parent;
           // Check nodeType since IE invents document fragments.
           (parent = copiedListItem.parentNode) && parent.nodeType === 1;) {
        copiedListItem = parent;
      }
      // Put it on the list of lines for later processing.
      listItems.push(copiedListItem);
    }

    // Split lines while there are lines left to split.
    for (var i = 0;  // Number of lines that have been split so far.
         i < listItems.length;  // length updated by breakAfter calls.
         ++i) {
      walk(listItems[i]);
    }

    // Make sure numeric indices show correctly.
    if (opt_startLineNum === (opt_startLineNum|0)) {
      listItems[0].setAttribute('value', opt_startLineNum);
    }

    var ol = document.createElement('ol');
    ol.className = 'linenums';
    var offset = Math.max(0, ((opt_startLineNum - 1 /* zero index */)) | 0) || 0;
    for (var i = 0, n = listItems.length; i < n; ++i) {
      li = listItems[i];
      // Stick a class on the LIs so that stylesheets can
      // color odd/even rows, or any other row pattern that
      // is co-prime with 10.
      li.className = 'L' + ((i + offset) % 10);
      if (!li.firstChild) {
        li.appendChild(document.createTextNode('\xA0'));
      }
      ol.appendChild(li);
    }

    node.appendChild(ol);
  }
  /**
   * Breaks {@code job.sourceCode} around style boundaries in
   * {@code job.decorations} and modifies {@code job.sourceNode} in place.
   * @param {Object} job like <pre>{
   *    sourceCode: {string} source as plain text,
   *    sourceNode: {HTMLElement} the element containing the source,
   *    spans: {Array.<number|Node>} alternating span start indices into source
   *       and the text node or element (e.g. {@code <BR>}) corresponding to that
   *       span.
   *    decorations: {Array.<number|string} an array of style classes preceded
   *       by the position at which they start in job.sourceCode in order
   * }</pre>
   * @private
   */
  function recombineTagsAndDecorations(job) {
    var isIE8OrEarlier = /\bMSIE\s(\d+)/.exec(navigator.userAgent);
    isIE8OrEarlier = isIE8OrEarlier && +isIE8OrEarlier[1] <= 8;
    var newlineRe = /\n/g;

    var source = job.sourceCode;
    var sourceLength = source.length;
    // Index into source after the last code-unit recombined.
    var sourceIndex = 0;

    var spans = job.spans;
    var nSpans = spans.length;
    // Index into spans after the last span which ends at or before sourceIndex.
    var spanIndex = 0;

    var decorations = job.decorations;
    var nDecorations = decorations.length;
    // Index into decorations after the last decoration which ends at or before
    // sourceIndex.
    var decorationIndex = 0;

    // Remove all zero-length decorations.
    decorations[nDecorations] = sourceLength;
    var decPos, i;
    for (i = decPos = 0; i < nDecorations;) {
      if (decorations[i] !== decorations[i + 2]) {
        decorations[decPos++] = decorations[i++];
        decorations[decPos++] = decorations[i++];
      } else {
        i += 2;
      }
    }
    nDecorations = decPos;

    // Simplify decorations.
    for (i = decPos = 0; i < nDecorations;) {
      var startPos = decorations[i];
      // Conflate all adjacent decorations that use the same style.
      var startDec = decorations[i + 1];
      var end = i + 2;
      while (end + 2 <= nDecorations && decorations[end + 1] === startDec) {
        end += 2;
      }
      decorations[decPos++] = startPos;
      decorations[decPos++] = startDec;
      i = end;
    }

    nDecorations = decorations.length = decPos;

    var sourceNode = job.sourceNode;
    var oldDisplay;
    if (sourceNode) {
      oldDisplay = sourceNode.style.display;
      sourceNode.style.display = 'none';
    }
    try {
      var decoration = null;
      while (spanIndex < nSpans) {
        var spanStart = spans[spanIndex];
        var spanEnd = spans[spanIndex + 2] || sourceLength;

        var decEnd = decorations[decorationIndex + 2] || sourceLength;

        var end = Math.min(spanEnd, decEnd);

        var textNode = spans[spanIndex + 1];
        var styledText;
        if (textNode.nodeType !== 1  // Don't muck with <BR>s or <LI>s
            // Don't introduce spans around empty text nodes.
            && (styledText = source.substring(sourceIndex, end))) {
          // This may seem bizarre, and it is.  Emitting LF on IE causes the
          // code to display with spaces instead of line breaks.
          // Emitting Windows standard issue linebreaks (CRLF) causes a blank
          // space to appear at the beginning of every line but the first.
          // Emitting an old Mac OS 9 line separator makes everything spiffy.
          if (isIE8OrEarlier) {
            styledText = styledText.replace(newlineRe, '\r');
          }
          textNode.nodeValue = styledText;
          var document = textNode.ownerDocument;
          var span = document.createElement('span');
          span.className = decorations[decorationIndex + 1];
          var parentNode = textNode.parentNode;
          parentNode.replaceChild(span, textNode);
          span.appendChild(textNode);
          if (sourceIndex < spanEnd) {  // Split off a text node.
            spans[spanIndex + 1] = textNode
                // TODO: Possibly optimize by using '' if there's no flicker.
                = document.createTextNode(source.substring(end, spanEnd));
            parentNode.insertBefore(textNode, span.nextSibling);
          }
        }

        sourceIndex = end;

        if (sourceIndex >= spanEnd) {
          spanIndex += 2;
        }
        if (sourceIndex >= decEnd) {
          decorationIndex += 2;
        }
      }
    } finally {
      if (sourceNode) {
        sourceNode.style.display = oldDisplay;
      }
    }
  }

  /** Maps language-specific file extensions to handlers. */
  var langHandlerRegistry = {};
  /** Register a language handler for the given file extensions.
    * @param {function (Object)} handler a function from source code to a list
    *      of decorations.  Takes a single argument job which describes the
    *      state of the computation.   The single parameter has the form
    *      {@code {
    *        sourceCode: {string} as plain text.
    *        decorations: {Array.<number|string>} an array of style classes
    *                     preceded by the position at which they start in
    *                     job.sourceCode in order.
    *                     The language handler should assigned this field.
    *        basePos: {int} the position of source in the larger source chunk.
    *                 All positions in the output decorations array are relative
    *                 to the larger source chunk.
    *      } }
    * @param {Array.<string>} fileExtensions
    */
  function registerLangHandler(handler, fileExtensions) {
    for (var i = fileExtensions.length; --i >= 0;) {
      var ext = fileExtensions[i];
      if (!langHandlerRegistry.hasOwnProperty(ext)) {
        langHandlerRegistry[ext] = handler;
      } else if (win['console']) {
        console['warn']('cannot override language handler %s', ext);
      }
    }
  }
  function langHandlerForExtension(extension, source) {
    if (!(extension && langHandlerRegistry.hasOwnProperty(extension))) {
      // Treat it as markup if the first non whitespace character is a < and
      // the last non-whitespace character is a >.
      extension = /^\s*</.test(source)
          ? 'default-markup'
          : 'default-code';
    }
    return langHandlerRegistry[extension];
  }
  registerLangHandler(decorateSource, ['default-code']);
  registerLangHandler(
      createSimpleLexer(
          [],
          [
           [PR_PLAIN,       /^[^<?]+/],
           [PR_DECLARATION, /^<!\w[^>]*(?:>|$)/],
           [PR_COMMENT,     /^<\!--[\s\S]*?(?:-\->|$)/],
           // Unescaped content in an unknown language
           ['lang-',        /^<\?([\s\S]+?)(?:\?>|$)/],
           ['lang-',        /^<%([\s\S]+?)(?:%>|$)/],
           [PR_PUNCTUATION, /^(?:<[%?]|[%?]>)/],
           ['lang-',        /^<xmp\b[^>]*>([\s\S]+?)<\/xmp\b[^>]*>/i],
           // Unescaped content in javascript.  (Or possibly vbscript).
           ['lang-js',      /^<script\b[^>]*>([\s\S]*?)(<\/script\b[^>]*>)/i],
           // Contains unescaped stylesheet content
           ['lang-css',     /^<style\b[^>]*>([\s\S]*?)(<\/style\b[^>]*>)/i],
           ['lang-in.tag',  /^(<\/?[a-z][^<>]*>)/i]
          ]),
      ['default-markup', 'htm', 'html', 'mxml', 'xhtml', 'xml', 'xsl']);
  registerLangHandler(
      createSimpleLexer(
          [
           [PR_PLAIN,        /^[\s]+/, null, ' \t\r\n'],
           [PR_ATTRIB_VALUE, /^(?:\"[^\"]*\"?|\'[^\']*\'?)/, null, '\"\'']
           ],
          [
           [PR_TAG,          /^^<\/?[a-z](?:[\w.:-]*\w)?|\/?>$/i],
           [PR_ATTRIB_NAME,  /^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],
           ['lang-uq.val',   /^=\s*([^>\'\"\s]*(?:[^>\'\"\s\/]|\/(?=\s)))/],
           [PR_PUNCTUATION,  /^[=<>\/]+/],
           ['lang-js',       /^on\w+\s*=\s*\"([^\"]+)\"/i],
           ['lang-js',       /^on\w+\s*=\s*\'([^\']+)\'/i],
           ['lang-js',       /^on\w+\s*=\s*([^\"\'>\s]+)/i],
           ['lang-css',      /^style\s*=\s*\"([^\"]+)\"/i],
           ['lang-css',      /^style\s*=\s*\'([^\']+)\'/i],
           ['lang-css',      /^style\s*=\s*([^\"\'>\s]+)/i]
           ]),
      ['in.tag']);
  registerLangHandler(
      createSimpleLexer([], [[PR_ATTRIB_VALUE, /^[\s\S]+/]]), ['uq.val']);
  registerLangHandler(sourceDecorator({
          'keywords': CPP_KEYWORDS,
          'hashComments': true,
          'cStyleComments': true,
          'types': C_TYPES
        }), ['c', 'cc', 'cpp', 'cxx', 'cyc', 'm']);
  registerLangHandler(sourceDecorator({
          'keywords': 'null,true,false'
        }), ['json']);
  registerLangHandler(sourceDecorator({
          'keywords': CSHARP_KEYWORDS,
          'hashComments': true,
          'cStyleComments': true,
          'verbatimStrings': true,
          'types': C_TYPES
        }), ['cs']);
  registerLangHandler(sourceDecorator({
          'keywords': JAVA_KEYWORDS,
          'cStyleComments': true
        }), ['java']);
  registerLangHandler(sourceDecorator({
          'keywords': SH_KEYWORDS,
          'hashComments': true,
          'multiLineStrings': true
        }), ['bash', 'bsh', 'csh', 'sh']);
  registerLangHandler(sourceDecorator({
          'keywords': PYTHON_KEYWORDS,
          'hashComments': true,
          'multiLineStrings': true,
          'tripleQuotedStrings': true
        }), ['cv', 'py', 'python']);
  registerLangHandler(sourceDecorator({
          'keywords': PERL_KEYWORDS,
          'hashComments': true,
          'multiLineStrings': true,
          'regexLiterals': 2  // multiline regex literals
        }), ['perl', 'pl', 'pm']);
  registerLangHandler(sourceDecorator({
          'keywords': RUBY_KEYWORDS,
          'hashComments': true,
          'multiLineStrings': true,
          'regexLiterals': true
        }), ['rb', 'ruby']);
  registerLangHandler(sourceDecorator({
          'keywords': JSCRIPT_KEYWORDS,
          'cStyleComments': true,
          'regexLiterals': true
        }), ['javascript', 'js']);
  registerLangHandler(sourceDecorator({
          'keywords': COFFEE_KEYWORDS,
          'hashComments': 3,  // ### style block comments
          'cStyleComments': true,
          'multilineStrings': true,
          'tripleQuotedStrings': true,
          'regexLiterals': true
        }), ['coffee']);
  registerLangHandler(sourceDecorator({
          'keywords': RUST_KEYWORDS,
          'cStyleComments': true,
          'multilineStrings': true
        }), ['rc', 'rs', 'rust']);
  registerLangHandler(
      createSimpleLexer([], [[PR_STRING, /^[\s\S]+/]]), ['regex']);

  function applyDecorator(job) {
    var opt_langExtension = job.langExtension;

    try {
      // Extract tags, and convert the source code to plain text.
      var sourceAndSpans = extractSourceSpans(job.sourceNode, job.pre);
      /** Plain text. @type {string} */
      var source = sourceAndSpans.sourceCode;
      job.sourceCode = source;
      job.spans = sourceAndSpans.spans;
      job.basePos = 0;

      // Apply the appropriate language handler
      langHandlerForExtension(opt_langExtension, source)(job);

      // Integrate the decorations and tags back into the source code,
      // modifying the sourceNode in place.
      recombineTagsAndDecorations(job);
    } catch (e) {
      if (win['console']) {
        console['log'](e && e['stack'] || e);
      }
    }
  }

  /**
   * Pretty print a chunk of code.
   * @param sourceCodeHtml {string} The HTML to pretty print.
   * @param opt_langExtension {string} The language name to use.
   *     Typically, a filename extension like 'cpp' or 'java'.
   * @param opt_numberLines {number|boolean} True to number lines,
   *     or the 1-indexed number of the first line in sourceCodeHtml.
   */
  function $prettyPrintOne(sourceCodeHtml, opt_langExtension, opt_numberLines) {
    var container = document.createElement('div');
    // This could cause images to load and onload listeners to fire.
    // E.g. <img onerror="alert(1337)" src="nosuchimage.png">.
    // We assume that the inner HTML is from a trusted source.
    // The pre-tag is required for IE8 which strips newlines from innerHTML
    // when it is injected into a <pre> tag.
    // http://stackoverflow.com/questions/451486/pre-tag-loses-line-breaks-when-setting-innerhtml-in-ie
    // http://stackoverflow.com/questions/195363/inserting-a-newline-into-a-pre-tag-ie-javascript
    container.innerHTML = '<pre>' + sourceCodeHtml + '</pre>';
    container = container.firstChild;
    if (opt_numberLines) {
      numberLines(container, opt_numberLines, true);
    }

    var job = {
      langExtension: opt_langExtension,
      numberLines: opt_numberLines,
      sourceNode: container,
      pre: 1
    };
    applyDecorator(job);
    return container.innerHTML;
  }

   /**
    * Find all the {@code <pre>} and {@code <code>} tags in the DOM with
    * {@code class=prettyprint} and prettify them.
    *
    * @param {Function} opt_whenDone called when prettifying is done.
    * @param {HTMLElement|HTMLDocument} opt_root an element or document
    *   containing all the elements to pretty print.
    *   Defaults to {@code document.body}.
    */
  function $prettyPrint(opt_whenDone, opt_root) {
    var root = opt_root || document.body;
    var doc = root.ownerDocument || document;
    function byTagName(tn) { return root.getElementsByTagName(tn); }
    // fetch a list of nodes to rewrite
    var codeSegments = [byTagName('pre'), byTagName('code'), byTagName('xmp')];
    var elements = [];
    for (var i = 0; i < codeSegments.length; ++i) {
      for (var j = 0, n = codeSegments[i].length; j < n; ++j) {
        elements.push(codeSegments[i][j]);
      }
    }
    codeSegments = null;

    var clock = Date;
    if (!clock['now']) {
      clock = { 'now': function () { return +(new Date); } };
    }

    // The loop is broken into a series of continuations to make sure that we
    // don't make the browser unresponsive when rewriting a large page.
    var k = 0;
    var prettyPrintingJob;

    var langExtensionRe = /\blang(?:uage)?-([\w.]+)(?!\S)/;
    var prettyPrintRe = /\bprettyprint\b/;
    var prettyPrintedRe = /\bprettyprinted\b/;
    var preformattedTagNameRe = /pre|xmp/i;
    var codeRe = /^code$/i;
    var preCodeXmpRe = /^(?:pre|code|xmp)$/i;
    var EMPTY = {};

    function doWork() {
      var endTime = (win['PR_SHOULD_USE_CONTINUATION'] ?
                     clock['now']() + 250 /* ms */ :
                     Infinity);
      for (; k < elements.length && clock['now']() < endTime; k++) {
        var cs = elements[k];

        // Look for a preceding comment like
        // <?prettify lang="..." linenums="..."?>
        var attrs = EMPTY;
        {
          for (var preceder = cs; (preceder = preceder.previousSibling);) {
            var nt = preceder.nodeType;
            // <?foo?> is parsed by HTML 5 to a comment node (8)
            // like <!--?foo?-->, but in XML is a processing instruction
            var value = (nt === 7 || nt === 8) && preceder.nodeValue;
            if (value
                ? !/^\??prettify\b/.test(value)
                : (nt !== 3 || /\S/.test(preceder.nodeValue))) {
              // Skip over white-space text nodes but not others.
              break;
            }
            if (value) {
              attrs = {};
              value.replace(
                  /\b(\w+)=([\w:.%+-]+)/g,
                function (_, name, value) { attrs[name] = value; });
              break;
            }
          }
        }

        var className = cs.className;
        if ((attrs !== EMPTY || prettyPrintRe.test(className))
            // Don't redo this if we've already done it.
            // This allows recalling pretty print to just prettyprint elements
            // that have been added to the page since last call.
            && !prettyPrintedRe.test(className)) {

          // make sure this is not nested in an already prettified element
          var nested = false;
          for (var p = cs.parentNode; p; p = p.parentNode) {
            var tn = p.tagName;
            if (preCodeXmpRe.test(tn)
                && p.className && prettyPrintRe.test(p.className)) {
              nested = true;
              break;
            }
          }
          if (!nested) {
            // Mark done.  If we fail to prettyprint for whatever reason,
            // we shouldn't try again.
            cs.className += ' prettyprinted';

            // If the classes includes a language extensions, use it.
            // Language extensions can be specified like
            //     <pre class="prettyprint lang-cpp">
            // the language extension "cpp" is used to find a language handler
            // as passed to PR.registerLangHandler.
            // HTML5 recommends that a language be specified using "language-"
            // as the prefix instead.  Google Code Prettify supports both.
            // http://dev.w3.org/html5/spec-author-view/the-code-element.html
            var langExtension = attrs['lang'];
            if (!langExtension) {
              langExtension = className.match(langExtensionRe);
              // Support <pre class="prettyprint"><code class="language-c">
              var wrapper;
              if (!langExtension && (wrapper = childContentWrapper(cs))
                  && codeRe.test(wrapper.tagName)) {
                langExtension = wrapper.className.match(langExtensionRe);
              }

              if (langExtension) { langExtension = langExtension[1]; }
            }

            var preformatted;
            if (preformattedTagNameRe.test(cs.tagName)) {
              preformatted = 1;
            } else {
              var currentStyle = cs['currentStyle'];
              var defaultView = doc.defaultView;
              var whitespace = (
                  currentStyle
                  ? currentStyle['whiteSpace']
                  : (defaultView
                     && defaultView.getComputedStyle)
                  ? defaultView.getComputedStyle(cs, null)
                  .getPropertyValue('white-space')
                  : 0);
              preformatted = whitespace
                  && 'pre' === whitespace.substring(0, 3);
            }

            // Look for a class like linenums or linenums:<n> where <n> is the
            // 1-indexed number of the first line.
            var lineNums = attrs['linenums'];
            if (!(lineNums = lineNums === 'true' || +lineNums)) {
              lineNums = className.match(/\blinenums\b(?::(\d+))?/);
              lineNums =
                lineNums
                ? lineNums[1] && lineNums[1].length
                  ? +lineNums[1] : true
                : false;
            }
            if (lineNums) { numberLines(cs, lineNums, preformatted); }

            // do the pretty printing
            prettyPrintingJob = {
              langExtension: langExtension,
              sourceNode: cs,
              numberLines: lineNums,
              pre: preformatted
            };
            applyDecorator(prettyPrintingJob);
          }
        }
      }
      if (k < elements.length) {
        // finish up in a continuation
        setTimeout(doWork, 250);
      } else if ('function' === typeof opt_whenDone) {
        opt_whenDone();
      }
    }

    doWork();
  }

  /**
   * Contains functions for creating and registering new language handlers.
   * @type {Object}
   */
  var PR = win['PR'] = {
        'createSimpleLexer': createSimpleLexer,
        'registerLangHandler': registerLangHandler,
        'sourceDecorator': sourceDecorator,
        'PR_ATTRIB_NAME': PR_ATTRIB_NAME,
        'PR_ATTRIB_VALUE': PR_ATTRIB_VALUE,
        'PR_COMMENT': PR_COMMENT,
        'PR_DECLARATION': PR_DECLARATION,
        'PR_KEYWORD': PR_KEYWORD,
        'PR_LITERAL': PR_LITERAL,
        'PR_NOCODE': PR_NOCODE,
        'PR_PLAIN': PR_PLAIN,
        'PR_PUNCTUATION': PR_PUNCTUATION,
        'PR_SOURCE': PR_SOURCE,
        'PR_STRING': PR_STRING,
        'PR_TAG': PR_TAG,
        'PR_TYPE': PR_TYPE,
        'prettyPrintOne':
           IN_GLOBAL_SCOPE
             ? (win['prettyPrintOne'] = $prettyPrintOne)
             : (prettyPrintOne = $prettyPrintOne),
        'prettyPrint': prettyPrint =
           IN_GLOBAL_SCOPE
             ? (win['prettyPrint'] = $prettyPrint)
             : (prettyPrint = $prettyPrint)
      };

  // Make PR available via the Asynchronous Module Definition (AMD) API.
  // Per https://github.com/amdjs/amdjs-api/wiki/AMD:
  // The Asynchronous Module Definition (AMD) API specifies a
  // mechanism for defining modules such that the module and its
  // dependencies can be asynchronously loaded.
  // ...
  // To allow a clear indicator that a global define function (as
  // needed for script src browser loading) conforms to the AMD API,
  // any global define function SHOULD have a property called "amd"
  // whose value is an object. This helps avoid conflict with any
  // other existing JavaScript code that could have defined a define()
  // function that does not conform to the AMD API.
  if (typeof define === "function" && define['amd']) {
    define("google-code-prettify", [], function () {
      return PR;
    });
  }
})();

(function() {
  function initPrettify() {
    PR.prettyPrint()
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('prettify') && initPrettify.call(this)
  })
})()

;
(function (factory) {
    if (typeof define === 'function' && define.amd) {
        // AMD
        define(['jquery'], factory);
    } else if (typeof exports === 'object') {
        // CommonJS
        factory(require('jquery'));
    } else {
        // Browser globals
        factory(jQuery);
    }
}(function ($) {
  var CountTo = function (element, options) {
    this.$element = $(element);
    this.options  = $.extend({}, CountTo.DEFAULTS, this.dataOptions(), options);
    this.init();
  };

  CountTo.DEFAULTS = {
    from: 0,               // the number the element should start at
    to: 0,                 // the number the element should end at
    speed: 1000,           // how long it should take to count between the target numbers
    refreshInterval: 100,  // how often the element should be updated
    decimals: 0,           // the number of decimal places to show
    formatter: formatter,  // handler for formatting the value before rendering
    onUpdate: null,        // callback method for every time the element is updated
    onComplete: null       // callback method for when the element finishes updating
  };

  CountTo.prototype.init = function () {
    this.value     = this.options.from;
    this.loops     = Math.ceil(this.options.speed / this.options.refreshInterval);
    this.loopCount = 0;
    this.increment = (this.options.to - this.options.from) / this.loops;
  };

  CountTo.prototype.dataOptions = function () {
    var options = {
      from:            this.$element.data('from'),
      to:              this.$element.data('to'),
      speed:           this.$element.data('speed'),
      refreshInterval: this.$element.data('refresh-interval'),
      decimals:        this.$element.data('decimals')
    };

    var keys = Object.keys(options);

    for (var i in keys) {
      var key = keys[i];

      if (typeof(options[key]) === 'undefined') {
        delete options[key];
      }
    }

    return options;
  };

  CountTo.prototype.update = function () {
    this.value += this.increment;
    this.loopCount++;

    this.render();

    if (typeof(this.options.onUpdate) == 'function') {
      this.options.onUpdate.call(this.$element, this.value);
    }

    if (this.loopCount >= this.loops) {
      clearInterval(this.interval);
      this.value = this.options.to;

      if (typeof(this.options.onComplete) == 'function') {
        this.options.onComplete.call(this.$element, this.value);
      }
    }
  };

  CountTo.prototype.render = function () {
    var formattedValue = this.options.formatter.call(this.$element, this.value, this.options);
    this.$element.html(formattedValue);
  };

  CountTo.prototype.restart = function () {
    this.stop();
    this.init();
    this.start();
  };

  CountTo.prototype.start = function () {
    this.stop();
    this.render();
    this.interval = setInterval(this.update.bind(this), this.options.refreshInterval);
  };

  CountTo.prototype.stop = function () {
    if (this.interval) {
      clearInterval(this.interval);
    }
  };

  CountTo.prototype.toggle = function () {
    if (this.interval) {
      this.stop();
    } else {
      this.start();
    }
  };

  function formatter(value, options) {
    return value.toFixed(options.decimals);
  }

  $.fn.countTo = function (option) {
    return this.each(function () {
      var $this   = $(this);
      var data    = $this.data('countTo');
      var init    = !data || typeof(option) === 'object';
      var options = typeof(option) === 'object' ? option : {};
      var method  = typeof(option) === 'string' ? option : 'start';

      if (init) {
        if (data) data.stop();
        $this.data('countTo', data = new CountTo(this, options));
      }

      data[method].call(data);
    });
  };
}));

/* **********************************************
     Begin prism-core.js
********************************************** */


var _self = (typeof window !== 'undefined')
    ? window   // if in browser
    : (
        (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)
        ? self // if in worker
        : {}   // if in node js
    );

/**
 * Prism: Lightweight, robust, elegant syntax highlighting
 * MIT license http://www.opensource.org/licenses/mit-license.php/
 * @author Lea Verou http://lea.verou.me
 */

var Prism = (function(){

// Private helper vars
var lang = /\blang(?:uage)?-(\w+)\b/i;
var uniqueId = 0;

var _ = _self.Prism = {
    manual: _self.Prism && _self.Prism.manual,
    util: {
        encode: function (tokens) {
            if (tokens instanceof Token) {
                return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);
            } else if (_.util.type(tokens) === 'Array') {
                return tokens.map(_.util.encode);
            } else {
                return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\u00a0/g, ' ');
            }
        },

        type: function (o) {
            return Object.prototype.toString.call(o).match(/\[object (\w+)\]/)[1];
        },

        objId: function (obj) {
            if (!obj['__id']) {
                Object.defineProperty(obj, '__id', { value: ++uniqueId });
            }
            return obj['__id'];
        },

        // Deep clone a language definition (e.g. to extend it)
        clone: function (o) {
            var type = _.util.type(o);

            switch (type) {
                case 'Object':
                    var clone = {};

                    for (var key in o) {
                        if (o.hasOwnProperty(key)) {
                            clone[key] = _.util.clone(o[key]);
                        }
                    }

                    return clone;

                case 'Array':
                    return o.map(function(v) { return _.util.clone(v); });
            }

            return o;
        }
    },

    languages: {
        extend: function (id, redef) {
            var lang = _.util.clone(_.languages[id]);

            for (var key in redef) {
                lang[key] = redef[key];
            }

            return lang;
        },

        /**
         * Insert a token before another token in a language literal
         * As this needs to recreate the object (we cannot actually insert before keys in object literals),
         * we cannot just provide an object, we need anobject and a key.
         * @param inside The key (or language id) of the parent
         * @param before The key to insert before. If not provided, the function appends instead.
         * @param insert Object with the key/value pairs to insert
         * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.
         */
        insertBefore: function (inside, before, insert, root) {
            root = root || _.languages;
            var grammar = root[inside];

            if (arguments.length == 2) {
                insert = arguments[1];

                for (var newToken in insert) {
                    if (insert.hasOwnProperty(newToken)) {
                        grammar[newToken] = insert[newToken];
                    }
                }

                return grammar;
            }

            var ret = {};

            for (var token in grammar) {

                if (grammar.hasOwnProperty(token)) {

                    if (token == before) {

                        for (var newToken in insert) {

                            if (insert.hasOwnProperty(newToken)) {
                                ret[newToken] = insert[newToken];
                            }
                        }
                    }

                    ret[token] = grammar[token];
                }
            }

            // Update references in other language definitions
            _.languages.DFS(_.languages, function(key, value) {
                if (value === root[inside] && key != inside) {
                    this[key] = ret;
                }
            });

            return root[inside] = ret;
        },

        // Traverse a language definition with Depth First Search
        DFS: function(o, callback, type, visited) {
            visited = visited || {};
            for (var i in o) {
                if (o.hasOwnProperty(i)) {
                    callback.call(o, i, o[i], type || i);

                    if (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {
                        visited[_.util.objId(o[i])] = true;
                        _.languages.DFS(o[i], callback, null, visited);
                    }
                    else if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {
                        visited[_.util.objId(o[i])] = true;
                        _.languages.DFS(o[i], callback, i, visited);
                    }
                }
            }
        }
    },
    plugins: {},

    highlightAll: function(async, callback) {
        var env = {
            callback: callback,
            selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
        };

        _.hooks.run("before-highlightall", env);

        var elements = env.elements || document.querySelectorAll(env.selector);

        for (var i=0, element; element = elements[i++];) {
            _.highlightElement(element, async === true, env.callback);
        }
    },

    highlightElement: function(element, async, callback) {
        // Find language
        var language, grammar, parent = element;

        while (parent && !lang.test(parent.className)) {
            parent = parent.parentNode;
        }

        if (parent) {
            language = (parent.className.match(lang) || [,''])[1].toLowerCase();
            grammar = _.languages[language];
        }

        // Set language on the element, if not present
        element.className = element.className.replace(lang, '').replace(/\s+/g, ' ') + ' language-' + language;

        // Set language on the parent, for styling
        parent = element.parentNode;

        if (/pre/i.test(parent.nodeName)) {
            parent.className = parent.className.replace(lang, '').replace(/\s+/g, ' ') + ' language-' + language;
        }

        var code = element.textContent;

        var env = {
            element: element,
            language: language,
            grammar: grammar,
            code: code
        };

        _.hooks.run('before-sanity-check', env);

        if (!env.code || !env.grammar) {
            if (env.code) {
                _.hooks.run('before-highlight', env);
                env.element.textContent = env.code;
                _.hooks.run('after-highlight', env);
            }
            _.hooks.run('complete', env);
            return;
        }

        _.hooks.run('before-highlight', env);

        if (async && _self.Worker) {
            var worker = new Worker(_.filename);

            worker.onmessage = function(evt) {
                env.highlightedCode = evt.data;

                _.hooks.run('before-insert', env);

                env.element.innerHTML = env.highlightedCode;

                callback && callback.call(env.element);
                _.hooks.run('after-highlight', env);
                _.hooks.run('complete', env);
            };

            worker.postMessage(JSON.stringify({
                language: env.language,
                code: env.code,
                immediateClose: true
            }));
        }
        else {
            env.highlightedCode = _.highlight(env.code, env.grammar, env.language);

            _.hooks.run('before-insert', env);

            env.element.innerHTML = env.highlightedCode;

            callback && callback.call(element);

            _.hooks.run('after-highlight', env);
            _.hooks.run('complete', env);
        }
    },

    highlight: function (text, grammar, language) {
        var tokens = _.tokenize(text, grammar);
        return Token.stringify(_.util.encode(tokens), language);
    },

    matchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {
        var Token = _.Token;

        for (var token in grammar) {
            if(!grammar.hasOwnProperty(token) || !grammar[token]) {
                continue;
            }

            if (token == target) {
                return;
            }

            var patterns = grammar[token];
            patterns = (_.util.type(patterns) === "Array") ? patterns : [patterns];

            for (var j = 0; j < patterns.length; ++j) {
                var pattern = patterns[j],
                    inside = pattern.inside,
                    lookbehind = !!pattern.lookbehind,
                    greedy = !!pattern.greedy,
                    lookbehindLength = 0,
                    alias = pattern.alias;

                if (greedy && !pattern.pattern.global) {
                    // Without the global flag, lastIndex won't work
                    var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];
                    pattern.pattern = RegExp(pattern.pattern.source, flags + "g");
                }

                pattern = pattern.pattern || pattern;

                // Don’t cache length as it changes during the loop
                for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {

                    var str = strarr[i];

                    if (strarr.length > text.length) {
                        // Something went terribly wrong, ABORT, ABORT!
                        return;
                    }

                    if (str instanceof Token) {
                        continue;
                    }

                    pattern.lastIndex = 0;

                    var match = pattern.exec(str),
                        delNum = 1;

                    // Greedy patterns can override/remove up to two previously matched tokens
                    if (!match && greedy && i != strarr.length - 1) {
                        pattern.lastIndex = pos;
                        match = pattern.exec(text);
                        if (!match) {
                            break;
                        }

                        var from = match.index + (lookbehind ? match[1].length : 0),
                            to = match.index + match[0].length,
                            k = i,
                            p = pos;

                        for (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {
                            p += strarr[k].length;
                            // Move the index i to the element in strarr that is closest to from
                            if (from >= p) {
                                ++i;
                                pos = p;
                            }
                        }

                        /*
                         * If strarr[i] is a Token, then the match starts inside another Token, which is invalid
                         * If strarr[k - 1] is greedy we are in conflict with another greedy pattern
                         */
                        if (strarr[i] instanceof Token || strarr[k - 1].greedy) {
                            continue;
                        }

                        // Number of tokens to delete and replace with the new match
                        delNum = k - i;
                        str = text.slice(pos, p);
                        match.index -= pos;
                    }

                    if (!match) {
                        if (oneshot) {
                            break;
                        }

                        continue;
                    }

                    if(lookbehind) {
                        lookbehindLength = match[1].length;
                    }

                    var from = match.index + lookbehindLength,
                        match = match[0].slice(lookbehindLength),
                        to = from + match.length,
                        before = str.slice(0, from),
                        after = str.slice(to);

                    var args = [i, delNum];

                    if (before) {
                        ++i;
                        pos += before.length;
                        args.push(before);
                    }

                    var wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);

                    args.push(wrapped);

                    if (after) {
                        args.push(after);
                    }

                    Array.prototype.splice.apply(strarr, args);

                    if (delNum != 1)
                        _.matchGrammar(text, strarr, grammar, i, pos, true, token);

                    if (oneshot)
                        break;
                }
            }
        }
    },

    tokenize: function(text, grammar, language) {
        var strarr = [text];

        var rest = grammar.rest;

        if (rest) {
            for (var token in rest) {
                grammar[token] = rest[token];
            }

            delete grammar.rest;
        }

        _.matchGrammar(text, strarr, grammar, 0, 0, false);

        return strarr;
    },

    hooks: {
        all: {},

        add: function (name, callback) {
            var hooks = _.hooks.all;

            hooks[name] = hooks[name] || [];

            hooks[name].push(callback);
        },

        run: function (name, env) {
            var callbacks = _.hooks.all[name];

            if (!callbacks || !callbacks.length) {
                return;
            }

            for (var i=0, callback; callback = callbacks[i++];) {
                callback(env);
            }
        }
    }
};

var Token = _.Token = function(type, content, alias, matchedStr, greedy) {
    this.type = type;
    this.content = content;
    this.alias = alias;
    // Copy of the full string this token was created from
    this.length = (matchedStr || "").length|0;
    this.greedy = !!greedy;
};

Token.stringify = function(o, language, parent) {
    if (typeof o == 'string') {
        return o;
    }

    if (_.util.type(o) === 'Array') {
        return o.map(function(element) {
            return Token.stringify(element, language, o);
        }).join('');
    }

    var env = {
        type: o.type,
        content: Token.stringify(o.content, language, parent),
        tag: 'span',
        classes: ['token', o.type],
        attributes: {},
        language: language,
        parent: parent
    };

    if (env.type == 'comment') {
        env.attributes['spellcheck'] = 'true';
    }

    if (o.alias) {
        var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];
        Array.prototype.push.apply(env.classes, aliases);
    }

    _.hooks.run('wrap', env);

    var attributes = Object.keys(env.attributes).map(function(name) {
        return name + '="' + (env.attributes[name] || '').replace(/"/g, '&quot;') + '"';
    }).join(' ');

    return '<' + env.tag + ' class="' + env.classes.join(' ') + '"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';

};

if (!_self.document) {
    if (!_self.addEventListener) {
        // in Node.js
        return _self.Prism;
    }
    // In worker
    _self.addEventListener('message', function(evt) {
        var message = JSON.parse(evt.data),
            lang = message.language,
            code = message.code,
            immediateClose = message.immediateClose;

        _self.postMessage(_.highlight(code, _.languages[lang], lang));
        if (immediateClose) {
            _self.close();
        }
    }, false);

    return _self.Prism;
}

//Get current script and highlight
var script = document.currentScript || [].slice.call(document.getElementsByTagName("script")).pop();

if (script) {
    _.filename = script.src;

    if (!_.manual && !script.hasAttribute('data-manual')) {
        if(document.readyState !== "loading") {
            if (window.requestAnimationFrame) {
                window.requestAnimationFrame(_.highlightAll);
            } else {
                window.setTimeout(_.highlightAll, 16);
            }
        }
        else {
            document.addEventListener('DOMContentLoaded', _.highlightAll);
        }
    }
}

return _self.Prism;

})();

if (typeof module !== 'undefined' && module.exports) {
    module.exports = Prism;
}

// hack for components to work correctly in node.js
if (typeof global !== 'undefined') {
    global.Prism = Prism;
}


/* **********************************************
     Begin prism-markup.js
********************************************** */

Prism.languages.markup = {
    'comment': /<!--[\s\S]*?-->/,
    'prolog': /<\?[\s\S]+?\?>/,
    'doctype': /<!DOCTYPE[\s\S]+?>/i,
    'cdata': /<!\[CDATA\[[\s\S]*?]]>/i,
    'tag': {
        pattern: /<\/?(?!\d)[^\s>\/=$<]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\\1|\\?(?!\1)[\s\S])*\1|[^\s'">=]+))?)*\s*\/?>/i,
        inside: {
            'tag': {
                pattern: /^<\/?[^\s>\/]+/i,
                inside: {
                    'punctuation': /^<\/?/,
                    'namespace': /^[^\s>\/:]+:/
                }
            },
            'attr-value': {
                pattern: /=(?:('|")[\s\S]*?(\1)|[^\s>]+)/i,
                inside: {
                    'punctuation': /[=>"']/
                }
            },
            'punctuation': /\/?>/,
            'attr-name': {
                pattern: /[^\s>\/]+/,
                inside: {
                    'namespace': /^[^\s>\/:]+:/
                }
            }

        }
    },
    'entity': /&#?[\da-z]{1,8};/i
};

Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =
    Prism.languages.markup['entity'];

// Plugin to make entity title show the real entity, idea by Roman Komarov
Prism.hooks.add('wrap', function(env) {

    if (env.type === 'entity') {
        env.attributes['title'] = env.content.replace(/&amp;/, '&');
    }
});

Prism.languages.xml = Prism.languages.markup;
Prism.languages.html = Prism.languages.markup;
Prism.languages.mathml = Prism.languages.markup;
Prism.languages.svg = Prism.languages.markup;


/* **********************************************
     Begin prism-css.js
********************************************** */

Prism.languages.css = {
    'comment': /\/\*[\s\S]*?\*\//,
    'atrule': {
        pattern: /@[\w-]+?.*?(;|(?=\s*\{))/i,
        inside: {
            'rule': /@[\w-]+/
            // See rest below
        }
    },
    'url': /url\((?:(["'])(\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|.*?)\)/i,
    'selector': /[^\{\}\s][^\{\};]*?(?=\s*\{)/,
    'string': {
        pattern: /("|')(\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: true
    },
    'property': /(\b|\B)[\w-]+(?=\s*:)/i,
    'important': /\B!important\b/i,
    'function': /[-a-z0-9]+(?=\()/i,
    'punctuation': /[(){};:]/
};

Prism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);

if (Prism.languages.markup) {
    Prism.languages.insertBefore('markup', 'tag', {
        'style': {
            pattern: /(<style[\s\S]*?>)[\s\S]*?(?=<\/style>)/i,
            lookbehind: true,
            inside: Prism.languages.css,
            alias: 'language-css'
        }
    });
    
    Prism.languages.insertBefore('inside', 'attr-value', {
        'style-attr': {
            pattern: /\s*style=("|').*?\1/i,
            inside: {
                'attr-name': {
                    pattern: /^\s*style/i,
                    inside: Prism.languages.markup.tag.inside
                },
                'punctuation': /^\s*=\s*['"]|['"]\s*$/,
                'attr-value': {
                    pattern: /.+/i,
                    inside: Prism.languages.css
                }
            },
            alias: 'language-css'
        }
    }, Prism.languages.markup.tag);
}

/* **********************************************
     Begin prism-clike.js
********************************************** */

Prism.languages.clike = {
    'comment': [
        {
            pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
            lookbehind: true
        },
        {
            pattern: /(^|[^\\:])\/\/.*/,
            lookbehind: true
        }
    ],
    'string': {
        pattern: /(["'])(\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
        greedy: true
    },
    'class-name': {
        pattern: /((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[a-z0-9_\.\\]+/i,
        lookbehind: true,
        inside: {
            punctuation: /(\.|\\)/
        }
    },
    'keyword': /\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,
    'boolean': /\b(true|false)\b/,
    'function': /[a-z0-9_]+(?=\()/i,
    'number': /\b-?(?:0x[\da-f]+|\d*\.?\d+(?:e[+-]?\d+)?)\b/i,
    'operator': /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,
    'punctuation': /[{}[\];(),.:]/
};


/* **********************************************
     Begin prism-javascript.js
********************************************** */

Prism.languages.javascript = Prism.languages.extend('clike', {
    'keyword': /\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\b/,
    'number': /\b-?(0[xX][\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|\d*\.?\d+([Ee][+-]?\d+)?|NaN|Infinity)\b/,
    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)
    'function': /[_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*(?=\()/i,
    'operator': /-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/
});

Prism.languages.insertBefore('javascript', 'keyword', {
    'regex': {
        pattern: /(^|[^/])\/(?!\/)(\[[^\]\r\n]+]|\\.|[^/\\\[\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})]))/,
        lookbehind: true,
        greedy: true
    }
});

Prism.languages.insertBefore('javascript', 'string', {
    'template-string': {
        pattern: /`(?:\\\\|\\?[^\\])*?`/,
        greedy: true,
        inside: {
            'interpolation': {
                pattern: /\$\{[^}]+\}/,
                inside: {
                    'interpolation-punctuation': {
                        pattern: /^\$\{|\}$/,
                        alias: 'punctuation'
                    },
                    rest: Prism.languages.javascript
                }
            },
            'string': /[\s\S]+/
        }
    }
});

if (Prism.languages.markup) {
    Prism.languages.insertBefore('markup', 'tag', {
        'script': {
            pattern: /(<script[\s\S]*?>)[\s\S]*?(?=<\/script>)/i,
            lookbehind: true,
            inside: Prism.languages.javascript,
            alias: 'language-javascript'
        }
    });
}

Prism.languages.js = Prism.languages.javascript;


/* **********************************************
     Begin prism-file-highlight.js
********************************************** */

(function () {
    if (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {
        return;
    }

    self.Prism.fileHighlight = function() {

        var Extensions = {
            'js': 'javascript',
            'py': 'python',
            'rb': 'ruby',
            'ps1': 'powershell',
            'psm1': 'powershell',
            'sh': 'bash',
            'bat': 'batch',
            'h': 'c',
            'tex': 'latex'
        };

        Array.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {
            var src = pre.getAttribute('data-src');

            var language, parent = pre;
            var lang = /\blang(?:uage)?-(?!\*)(\w+)\b/i;
            while (parent && !lang.test(parent.className)) {
                parent = parent.parentNode;
            }

            if (parent) {
                language = (pre.className.match(lang) || [, ''])[1];
            }

            if (!language) {
                var extension = (src.match(/\.(\w+)$/) || [, ''])[1];
                language = Extensions[extension] || extension;
            }

            var code = document.createElement('code');
            code.className = 'language-' + language;

            pre.textContent = '';

            code.textContent = 'Loading…';

            pre.appendChild(code);

            var xhr = new XMLHttpRequest();

            xhr.open('GET', src, true);

            xhr.onreadystatechange = function () {
                if (xhr.readyState == 4) {

                    if (xhr.status < 400 && xhr.responseText) {
                        code.textContent = xhr.responseText;

                        Prism.highlightElement(code);
                    }
                    else if (xhr.status >= 400) {
                        code.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;
                    }
                    else {
                        code.textContent = '✖ Error: File does not exist or is empty';
                    }
                }
            };

            xhr.send(null);
        });

    };

    document.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);

})();

(function() {
  function initPrism() {
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('prism') && initPrism.call(this)
  })
})()
;
/*!
 * clipboard.js v1.7.1
 * https://zenorocha.github.io/clipboard.js
 *
 * Licensed MIT © Zeno Rocha
 */

!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.Clipboard=t()}}(function(){var t,e,n;return function t(e,n,o){function i(a,c){if(!n[a]){if(!e[a]){var l="function"==typeof require&&require;if(!c&&l)return l(a,!0);if(r)return r(a,!0);var s=new Error("Cannot find module '"+a+"'");throw s.code="MODULE_NOT_FOUND",s}var u=n[a]={exports:{}};e[a][0].call(u.exports,function(t){var n=e[a][1][t];return i(n||t)},u,u.exports,t,e,n,o)}return n[a].exports}for(var r="function"==typeof require&&require,a=0;a<o.length;a++)i(o[a]);return i}({1:[function(t,e,n){function o(t,e){for(;t&&t.nodeType!==i;){if("function"==typeof t.matches&&t.matches(e))return t;t=t.parentNode}}var i=9;if("undefined"!=typeof Element&&!Element.prototype.matches){var r=Element.prototype;r.matches=r.matchesSelector||r.mozMatchesSelector||r.msMatchesSelector||r.oMatchesSelector||r.webkitMatchesSelector}e.exports=o},{}],2:[function(t,e,n){function o(t,e,n,o,r){var a=i.apply(this,arguments);return t.addEventListener(n,a,r),{destroy:function(){t.removeEventListener(n,a,r)}}}function i(t,e,n,o){return function(n){n.delegateTarget=r(n.target,e),n.delegateTarget&&o.call(t,n)}}var r=t("./closest");e.exports=o},{"./closest":1}],3:[function(t,e,n){n.node=function(t){return void 0!==t&&t instanceof HTMLElement&&1===t.nodeType},n.nodeList=function(t){var e=Object.prototype.toString.call(t);return void 0!==t&&("[object NodeList]"===e||"[object HTMLCollection]"===e)&&"length"in t&&(0===t.length||n.node(t[0]))},n.string=function(t){return"string"==typeof t||t instanceof String},n.fn=function(t){return"[object Function]"===Object.prototype.toString.call(t)}},{}],4:[function(t,e,n){function o(t,e,n){if(!t&&!e&&!n)throw new Error("Missing required arguments");if(!c.string(e))throw new TypeError("Second argument must be a String");if(!c.fn(n))throw new TypeError("Third argument must be a Function");if(c.node(t))return i(t,e,n);if(c.nodeList(t))return r(t,e,n);if(c.string(t))return a(t,e,n);throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")}function i(t,e,n){return t.addEventListener(e,n),{destroy:function(){t.removeEventListener(e,n)}}}function r(t,e,n){return Array.prototype.forEach.call(t,function(t){t.addEventListener(e,n)}),{destroy:function(){Array.prototype.forEach.call(t,function(t){t.removeEventListener(e,n)})}}}function a(t,e,n){return l(document.body,t,e,n)}var c=t("./is"),l=t("delegate");e.exports=o},{"./is":3,delegate:2}],5:[function(t,e,n){function o(t){var e;if("SELECT"===t.nodeName)t.focus(),e=t.value;else if("INPUT"===t.nodeName||"TEXTAREA"===t.nodeName){var n=t.hasAttribute("readonly");n||t.setAttribute("readonly",""),t.select(),t.setSelectionRange(0,t.value.length),n||t.removeAttribute("readonly"),e=t.value}else{t.hasAttribute("contenteditable")&&t.focus();var o=window.getSelection(),i=document.createRange();i.selectNodeContents(t),o.removeAllRanges(),o.addRange(i),e=o.toString()}return e}e.exports=o},{}],6:[function(t,e,n){function o(){}o.prototype={on:function(t,e,n){var o=this.e||(this.e={});return(o[t]||(o[t]=[])).push({fn:e,ctx:n}),this},once:function(t,e,n){function o(){i.off(t,o),e.apply(n,arguments)}var i=this;return o._=e,this.on(t,o,n)},emit:function(t){var e=[].slice.call(arguments,1),n=((this.e||(this.e={}))[t]||[]).slice(),o=0,i=n.length;for(o;o<i;o++)n[o].fn.apply(n[o].ctx,e);return this},off:function(t,e){var n=this.e||(this.e={}),o=n[t],i=[];if(o&&e)for(var r=0,a=o.length;r<a;r++)o[r].fn!==e&&o[r].fn._!==e&&i.push(o[r]);return i.length?n[t]=i:delete n[t],this}},e.exports=o},{}],7:[function(e,n,o){!function(i,r){if("function"==typeof t&&t.amd)t(["module","select"],r);else if(void 0!==o)r(n,e("select"));else{var a={exports:{}};r(a,i.select),i.clipboardAction=a.exports}}(this,function(t,e){"use strict";function n(t){return t&&t.__esModule?t:{default:t}}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var i=n(e),r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a=function(){function t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e}}(),c=function(){function t(e){o(this,t),this.resolveOptions(e),this.initSelection()}return a(t,[{key:"resolveOptions",value:function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.action=e.action,this.container=e.container,this.emitter=e.emitter,this.target=e.target,this.text=e.text,this.trigger=e.trigger,this.selectedText=""}},{key:"initSelection",value:function t(){this.text?this.selectFake():this.target&&this.selectTarget()}},{key:"selectFake",value:function t(){var e=this,n="rtl"==document.documentElement.getAttribute("dir");this.removeFake(),this.fakeHandlerCallback=function(){return e.removeFake()},this.fakeHandler=this.container.addEventListener("click",this.fakeHandlerCallback)||!0,this.fakeElem=document.createElement("textarea"),this.fakeElem.style.fontSize="12pt",this.fakeElem.style.border="0",this.fakeElem.style.padding="0",this.fakeElem.style.margin="0",this.fakeElem.style.position="absolute",this.fakeElem.style[n?"right":"left"]="-9999px";var o=window.pageYOffset||document.documentElement.scrollTop;this.fakeElem.style.top=o+"px",this.fakeElem.setAttribute("readonly",""),this.fakeElem.value=this.text,this.container.appendChild(this.fakeElem),this.selectedText=(0,i.default)(this.fakeElem),this.copyText()}},{key:"removeFake",value:function t(){this.fakeHandler&&(this.container.removeEventListener("click",this.fakeHandlerCallback),this.fakeHandler=null,this.fakeHandlerCallback=null),this.fakeElem&&(this.container.removeChild(this.fakeElem),this.fakeElem=null)}},{key:"selectTarget",value:function t(){this.selectedText=(0,i.default)(this.target),this.copyText()}},{key:"copyText",value:function t(){var e=void 0;try{e=document.execCommand(this.action)}catch(t){e=!1}this.handleResult(e)}},{key:"handleResult",value:function t(e){this.emitter.emit(e?"success":"error",{action:this.action,text:this.selectedText,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)})}},{key:"clearSelection",value:function t(){this.trigger&&this.trigger.focus(),window.getSelection().removeAllRanges()}},{key:"destroy",value:function t(){this.removeFake()}},{key:"action",set:function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"copy";if(this._action=e,"copy"!==this._action&&"cut"!==this._action)throw new Error('Invalid "action" value, use either "copy" or "cut"')},get:function t(){return this._action}},{key:"target",set:function t(e){if(void 0!==e){if(!e||"object"!==(void 0===e?"undefined":r(e))||1!==e.nodeType)throw new Error('Invalid "target" value, use a valid Element');if("copy"===this.action&&e.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');if("cut"===this.action&&(e.hasAttribute("readonly")||e.hasAttribute("disabled")))throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');this._target=e}},get:function t(){return this._target}}]),t}();t.exports=c})},{select:5}],8:[function(e,n,o){!function(i,r){if("function"==typeof t&&t.amd)t(["module","./clipboard-action","tiny-emitter","good-listener"],r);else if(void 0!==o)r(n,e("./clipboard-action"),e("tiny-emitter"),e("good-listener"));else{var a={exports:{}};r(a,i.clipboardAction,i.tinyEmitter,i.goodListener),i.clipboard=a.exports}}(this,function(t,e,n,o){"use strict";function i(t){return t&&t.__esModule?t:{default:t}}function r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function a(t,e){if(!t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!e||"object"!=typeof e&&"function"!=typeof e?t:e}function c(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function, not "+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}function l(t,e){var n="data-clipboard-"+t;if(e.hasAttribute(n))return e.getAttribute(n)}var s=i(e),u=i(n),f=i(o),d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},h=function(){function t(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,n,o){return n&&t(e.prototype,n),o&&t(e,o),e}}(),p=function(t){function e(t,n){r(this,e);var o=a(this,(e.__proto__||Object.getPrototypeOf(e)).call(this));return o.resolveOptions(n),o.listenClick(t),o}return c(e,t),h(e,[{key:"resolveOptions",value:function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.action="function"==typeof e.action?e.action:this.defaultAction,this.target="function"==typeof e.target?e.target:this.defaultTarget,this.text="function"==typeof e.text?e.text:this.defaultText,this.container="object"===d(e.container)?e.container:document.body}},{key:"listenClick",value:function t(e){var n=this;this.listener=(0,f.default)(e,"click",function(t){return n.onClick(t)})}},{key:"onClick",value:function t(e){var n=e.delegateTarget||e.currentTarget;this.clipboardAction&&(this.clipboardAction=null),this.clipboardAction=new s.default({action:this.action(n),target:this.target(n),text:this.text(n),container:this.container,trigger:n,emitter:this})}},{key:"defaultAction",value:function t(e){return l("action",e)}},{key:"defaultTarget",value:function t(e){var n=l("target",e);if(n)return document.querySelector(n)}},{key:"defaultText",value:function t(e){return l("text",e)}},{key:"destroy",value:function t(){this.listener.destroy(),this.clipboardAction&&(this.clipboardAction.destroy(),this.clipboardAction=null)}}],[{key:"isSupported",value:function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["copy","cut"],n="string"==typeof e?[e]:e,o=!!document.queryCommandSupported;return n.forEach(function(t){o=o&&!!document.queryCommandSupported(t)}),o}}]),e}(u.default);t.exports=p})},{"./clipboard-action":7,"good-listener":4,"tiny-emitter":6}]},{},[8])(8)});

(function() {

  function initClipboard() {
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('clipboard') && initClipboard.call(this)
  })

})()
;
/*!
 * The Final Countdown for jQuery v2.2.0 (http://hilios.github.io/jQuery.countdown/)
 * Copyright (c) 2016 Edson Hilios
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to
 * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
 * the Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
 * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
 * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

!function(a){"use strict";"function"==typeof define&&define.amd?define(["jquery"],a):a(jQuery)}(function(a){"use strict";function b(a){if(a instanceof Date)return a;if(String(a).match(g))return String(a).match(/^[0-9]*$/)&&(a=Number(a)),String(a).match(/\-/)&&(a=String(a).replace(/\-/g,"/")),new Date(a);throw new Error("Couldn't cast `"+a+"` to a date object.")}function c(a){var b=a.toString().replace(/([.?*+^$[\]\\(){}|-])/g,"\\$1");return new RegExp(b)}function d(a){return function(b){var d=b.match(/%(-|!)?[A-Z]{1}(:[^;]+;)?/gi);if(d)for(var f=0,g=d.length;f<g;++f){var h=d[f].match(/%(-|!)?([a-zA-Z]{1})(:[^;]+;)?/),j=c(h[0]),k=h[1]||"",l=h[3]||"",m=null;h=h[2],i.hasOwnProperty(h)&&(m=i[h],m=Number(a[m])),null!==m&&("!"===k&&(m=e(l,m)),""===k&&m<10&&(m="0"+m.toString()),b=b.replace(j,m.toString()))}return b=b.replace(/%%/,"%")}}function e(a,b){var c="s",d="";return a&&(a=a.replace(/(:|;|\s)/gi,"").split(/\,/),1===a.length?c=a[0]:(d=a[0],c=a[1])),Math.abs(b)>1?c:d}var f=[],g=[],h={precision:100,elapse:!1,defer:!1};g.push(/^[0-9]*$/.source),g.push(/([0-9]{1,2}\/){2}[0-9]{4}( [0-9]{1,2}(:[0-9]{2}){2})?/.source),g.push(/[0-9]{4}([\/\-][0-9]{1,2}){2}( [0-9]{1,2}(:[0-9]{2}){2})?/.source),g=new RegExp(g.join("|"));var i={Y:"years",m:"months",n:"daysToMonth",d:"daysToWeek",w:"weeks",W:"weeksToMonth",H:"hours",M:"minutes",S:"seconds",D:"totalDays",I:"totalHours",N:"totalMinutes",T:"totalSeconds"},j=function(b,c,d){this.el=b,this.$el=a(b),this.interval=null,this.offset={},this.options=a.extend({},h),this.firstTick=!0,this.instanceNumber=f.length,f.push(this),this.$el.data("countdown-instance",this.instanceNumber),d&&("function"==typeof d?(this.$el.on("update.countdown",d),this.$el.on("stoped.countdown",d),this.$el.on("finish.countdown",d)):this.options=a.extend({},h,d)),this.setFinalDate(c),this.options.defer===!1&&this.start()};a.extend(j.prototype,{start:function(){null!==this.interval&&clearInterval(this.interval);var a=this;this.update(),this.interval=setInterval(function(){a.update.call(a)},this.options.precision)},stop:function(){clearInterval(this.interval),this.interval=null,this.dispatchEvent("stoped")},toggle:function(){this.interval?this.stop():this.start()},pause:function(){this.stop()},resume:function(){this.start()},remove:function(){this.stop.call(this),f[this.instanceNumber]=null,delete this.$el.data().countdownInstance},setFinalDate:function(a){this.finalDate=b(a)},update:function(){if(0===this.$el.closest("html").length)return void this.remove();var a,b=new Date;return a=this.finalDate.getTime()-b.getTime(),a=Math.ceil(a/1e3),a=!this.options.elapse&&a<0?0:Math.abs(a),this.totalSecsLeft===a||this.firstTick?void(this.firstTick=!1):(this.totalSecsLeft=a,this.elapsed=b>=this.finalDate,this.offset={seconds:this.totalSecsLeft%60,minutes:Math.floor(this.totalSecsLeft/60)%60,hours:Math.floor(this.totalSecsLeft/60/60)%24,days:Math.floor(this.totalSecsLeft/60/60/24)%7,daysToWeek:Math.floor(this.totalSecsLeft/60/60/24)%7,daysToMonth:Math.floor(this.totalSecsLeft/60/60/24%30.4368),weeks:Math.floor(this.totalSecsLeft/60/60/24/7),weeksToMonth:Math.floor(this.totalSecsLeft/60/60/24/7)%4,months:Math.floor(this.totalSecsLeft/60/60/24/30.4368),years:Math.abs(this.finalDate.getFullYear()-b.getFullYear()),totalDays:Math.floor(this.totalSecsLeft/60/60/24),totalHours:Math.floor(this.totalSecsLeft/60/60),totalMinutes:Math.floor(this.totalSecsLeft/60),totalSeconds:this.totalSecsLeft},void(this.options.elapse||0!==this.totalSecsLeft?this.dispatchEvent("update"):(this.stop(),this.dispatchEvent("finish"))))},dispatchEvent:function(b){var c=a.Event(b+".countdown");c.finalDate=this.finalDate,c.elapsed=this.elapsed,c.offset=a.extend({},this.offset),c.strftime=d(this.offset),this.$el.trigger(c)}}),a.fn.countdown=function(){var b=Array.prototype.slice.call(arguments,0);return this.each(function(){var c=a(this).data("countdown-instance");if(void 0!==c){var d=f[c],e=b[0];j.prototype.hasOwnProperty(e)?d[e].apply(d,b.slice(1)):null===String(e).match(/^[$A-Z_][0-9A-Z_$]*$/i)?(d.setFinalDate.call(d,e),d.start()):a.error("Method %s does not exist on jQuery.countdown".replace(/\%s/gi,e))}else new j(this,b[0],b[1])})}});

(function() {

  function initCountdown() {
    var els = $('.countdown')

    els.each(function() {
      var el = $(this)
      var countDownTo = el.attr('data-countdownto')

      el.countdown(countDownTo, function(event) {
        var $this = $(this).html(event.strftime(''
                                                + '<div class="countDownWrap"><span class="digits">%-D</span> <div class="digits-label">day%!d</div></div> '
                                                + '<div class="countDownWrap"><span class="digits">%H</span> <div class="digits-label">hours</div></div> '
                                                + '<div class="countDownWrap"><span class="digits">%M</span> <div class="digits-label">minutes</div></div> '
                                                + '<div class="countDownWrap"><span class="digits">%S</span> <div class="digits-label">seconds</div></div> '))

      })
    })
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('countdown') && initCountdown.call(this)
  })

})()

;
/*!
 * parallax.js v1.5.0 (http://pixelcog.github.io/parallax.js/)
 * @copyright 2016 PixelCog, Inc.
 * @license MIT (https://github.com/pixelcog/parallax.js/blob/master/LICENSE)
 */

!function(t,i,e,s){function o(i,e){var h=this;"object"==typeof e&&(delete e.refresh,delete e.render,t.extend(this,e)),this.$element=t(i),!this.imageSrc&&this.$element.is("img")&&(this.imageSrc=this.$element.attr("src"));var r=(this.position+"").toLowerCase().match(/\S+/g)||[];if(r.length<1&&r.push("center"),1==r.length&&r.push(r[0]),"top"!=r[0]&&"bottom"!=r[0]&&"left"!=r[1]&&"right"!=r[1]||(r=[r[1],r[0]]),this.positionX!==s&&(r[0]=this.positionX.toLowerCase()),this.positionY!==s&&(r[1]=this.positionY.toLowerCase()),h.positionX=r[0],h.positionY=r[1],"left"!=this.positionX&&"right"!=this.positionX&&(isNaN(parseInt(this.positionX))?this.positionX="center":this.positionX=parseInt(this.positionX)),"top"!=this.positionY&&"bottom"!=this.positionY&&(isNaN(parseInt(this.positionY))?this.positionY="center":this.positionY=parseInt(this.positionY)),this.position=this.positionX+(isNaN(this.positionX)?"":"px")+" "+this.positionY+(isNaN(this.positionY)?"":"px"),navigator.userAgent.match(/(iPod|iPhone|iPad)/))return this.imageSrc&&this.iosFix&&!this.$element.is("img")&&this.$element.css({backgroundImage:'url("'+this.imageSrc+'")',backgroundSize:"cover",backgroundPosition:this.position}),this;if(navigator.userAgent.match(/(Android)/))return this.imageSrc&&this.androidFix&&!this.$element.is("img")&&this.$element.css({backgroundImage:'url("'+this.imageSrc+'")',backgroundSize:"cover",backgroundPosition:this.position}),this;this.$mirror=t("<div />").prependTo(this.mirrorContainer);var a=this.$element.find(">.parallax-slider"),n=!1;0==a.length?this.$slider=t("<img />").prependTo(this.$mirror):(this.$slider=a.prependTo(this.$mirror),n=!0),this.$mirror.addClass("parallax-mirror").css({visibility:"hidden",zIndex:this.zIndex,position:"fixed",top:0,left:0,overflow:"hidden"}),this.$slider.addClass("parallax-slider").one("load",function(){h.naturalHeight&&h.naturalWidth||(h.naturalHeight=this.naturalHeight||this.height||1,h.naturalWidth=this.naturalWidth||this.width||1),h.aspectRatio=h.naturalWidth/h.naturalHeight,o.isSetup||o.setup(),o.sliders.push(h),o.isFresh=!1,o.requestRender()}),n||(this.$slider[0].src=this.imageSrc),(this.naturalHeight&&this.naturalWidth||this.$slider[0].complete||a.length>0)&&this.$slider.trigger("load")}!function(){for(var t=0,e=["ms","moz","webkit","o"],s=0;s<e.length&&!i.requestAnimationFrame;++s)i.requestAnimationFrame=i[e[s]+"RequestAnimationFrame"],i.cancelAnimationFrame=i[e[s]+"CancelAnimationFrame"]||i[e[s]+"CancelRequestAnimationFrame"];i.requestAnimationFrame||(i.requestAnimationFrame=function(e){var s=(new Date).getTime(),o=Math.max(0,16-(s-t)),h=i.setTimeout(function(){e(s+o)},o);return t=s+o,h}),i.cancelAnimationFrame||(i.cancelAnimationFrame=function(t){clearTimeout(t)})}(),t.extend(o.prototype,{speed:.2,bleed:0,zIndex:-100,iosFix:!0,androidFix:!0,position:"center",overScrollFix:!1,mirrorContainer:"body",refresh:function(){this.boxWidth=this.$element.outerWidth(),this.boxHeight=this.$element.outerHeight()+2*this.bleed,this.boxOffsetTop=this.$element.offset().top-this.bleed,this.boxOffsetLeft=this.$element.offset().left,this.boxOffsetBottom=this.boxOffsetTop+this.boxHeight;var t,i=o.winHeight,e=o.docHeight,s=Math.min(this.boxOffsetTop,e-i),h=Math.max(this.boxOffsetTop+this.boxHeight-i,0),r=this.boxHeight+(s-h)*(1-this.speed)|0,a=(this.boxOffsetTop-s)*(1-this.speed)|0;r*this.aspectRatio>=this.boxWidth?(this.imageWidth=r*this.aspectRatio|0,this.imageHeight=r,this.offsetBaseTop=a,t=this.imageWidth-this.boxWidth,"left"==this.positionX?this.offsetLeft=0:"right"==this.positionX?this.offsetLeft=-t:isNaN(this.positionX)?this.offsetLeft=-t/2|0:this.offsetLeft=Math.max(this.positionX,-t)):(this.imageWidth=this.boxWidth,this.imageHeight=this.boxWidth/this.aspectRatio|0,this.offsetLeft=0,t=this.imageHeight-r,"top"==this.positionY?this.offsetBaseTop=a:"bottom"==this.positionY?this.offsetBaseTop=a-t:isNaN(this.positionY)?this.offsetBaseTop=a-t/2|0:this.offsetBaseTop=a+Math.max(this.positionY,-t))},render:function(){var t=o.scrollTop,i=o.scrollLeft,e=this.overScrollFix?o.overScroll:0,s=t+o.winHeight;this.boxOffsetBottom>t&&this.boxOffsetTop<=s?(this.visibility="visible",this.mirrorTop=this.boxOffsetTop-t,this.mirrorLeft=this.boxOffsetLeft-i,this.offsetTop=this.offsetBaseTop-this.mirrorTop*(1-this.speed)):this.visibility="hidden",this.$mirror.css({transform:"translate3d("+this.mirrorLeft+"px, "+(this.mirrorTop-e)+"px, 0px)",visibility:this.visibility,height:this.boxHeight,width:this.boxWidth}),this.$slider.css({transform:"translate3d("+this.offsetLeft+"px, "+this.offsetTop+"px, 0px)",position:"absolute",height:this.imageHeight,width:this.imageWidth,maxWidth:"none"})}}),t.extend(o,{scrollTop:0,scrollLeft:0,winHeight:0,winWidth:0,docHeight:1<<30,docWidth:1<<30,sliders:[],isReady:!1,isFresh:!1,isBusy:!1,setup:function(){function s(){if(p==i.pageYOffset)return i.requestAnimationFrame(s),!1;p=i.pageYOffset,h.render(),i.requestAnimationFrame(s)}if(!this.isReady){var h=this,r=t(e),a=t(i),n=function(){o.winHeight=a.height(),o.winWidth=a.width(),o.docHeight=r.height(),o.docWidth=r.width()},l=function(){var t=a.scrollTop(),i=o.docHeight-o.winHeight,e=o.docWidth-o.winWidth;o.scrollTop=Math.max(0,Math.min(i,t)),o.scrollLeft=Math.max(0,Math.min(e,a.scrollLeft())),o.overScroll=Math.max(t-i,Math.min(t,0))};a.on("resize.px.parallax load.px.parallax",function(){n(),h.refresh(),o.isFresh=!1,o.requestRender()}).on("scroll.px.parallax load.px.parallax",function(){l(),o.requestRender()}),n(),l(),this.isReady=!0;var p=-1;s()}},configure:function(i){"object"==typeof i&&(delete i.refresh,delete i.render,t.extend(this.prototype,i))},refresh:function(){t.each(this.sliders,function(){this.refresh()}),this.isFresh=!0},render:function(){this.isFresh||this.refresh(),t.each(this.sliders,function(){this.render()})},requestRender:function(){var t=this;t.render(),t.isBusy=!1},destroy:function(e){var s,h=t(e).data("px.parallax");for(h.$mirror.remove(),s=0;s<this.sliders.length;s+=1)this.sliders[s]==h&&this.sliders.splice(s,1);t(e).data("px.parallax",!1),0===this.sliders.length&&(t(i).off("scroll.px.parallax resize.px.parallax load.px.parallax"),this.isReady=!1,o.isSetup=!1)}});var h=t.fn.parallax;t.fn.parallax=function(s){return this.each(function(){var h=t(this),r="object"==typeof s&&s;this==i||this==e||h.is("body")?o.configure(r):h.data("px.parallax")?"object"==typeof s&&t.extend(h.data("px.parallax"),r):(r=t.extend({},h.data(),r),h.data("px.parallax",new o(this,r))),"string"==typeof s&&("destroy"==s?o.destroy(this):o[s]())})},t.fn.parallax.Constructor=o,t.fn.parallax.noConflict=function(){return t.fn.parallax=h,this},t(function(){t('[data-parallax="scroll"]').parallax()})}(jQuery,window,document);

(function() {

  function initParallax() {
    $('[data-parallax="scroll"]').parallax();
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('parallax') && initParallax.call(this)
  })

})()

;
var DataGenerator = function(dataPointCount, startingValue) {
  this.dataPointCount = dataPointCount;
  this.dataSet        = [];
  this.startingValue  = startingValue || 40;
}

DataGenerator.prototype.getRandomizedData = function() {
  if (this.dataSet.length > 0) {
      this.dataSet = this.dataSet.slice(1);
    }

    while (this.dataSet.length < this.dataPointCount) {
      var lastYCoord = this.dataSet.length > 0 ? this.dataSet[this.dataSet.length - 1] : this.startingValue,
          newYCoord = lastYCoord + Math.random() * 8 - 4;
      newYCoord = Math.min(Math.max(newYCoord, 0), 100);
      this.dataSet.push(newYCoord);
    }

    var res = [];
    for (var i = 0; i < this.dataSet.length; ++i) {
      res.push([i, this.dataSet[i]])
    }

    return res;
}
;



(function() {

  if(window.Chart) {
    Chart.defaults.global.defaultFontColor              = '#555555';
    Chart.defaults.scale.gridLines.color                = "rgba(0,0,0,.04)";
    Chart.defaults.scale.gridLines.zeroLineColor        = "rgba(0,0,0,.1)";
    Chart.defaults.scale.ticks.beginAtZero              = true;
    Chart.defaults.global.elements.line.borderWidth     = 2;
    Chart.defaults.global.elements.point.radius         = 5;
    Chart.defaults.global.elements.point.hoverRadius    = 7;
    Chart.defaults.global.tooltips.cornerRadius         = 3;
    Chart.defaults.global.legend.labels.boxWidth        = 6;
  }

  function lineCharts(el, type) {
    var chartLinesCon  = jQuery(el);

    var data = {
      labels: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'],
      datasets: [
        {
        label: 'Refunds',
        fill: true,
        backgroundColor: '#81A2D0',
        borderColor: 'rgba(66,165,245,1)',
        pointBackgroundColor: 'rgba(66,165,245,1)',
        pointBorderColor: '#fff',
        pointHoverBackgroundColor: '#fff',
        pointHoverBorderColor: 'rgba(66,165,245,1)',
        data: [19, 20, 8, 32, 100, 15, 99]
      },
      {
        label: 'Sales',
        fill: true,
        backgroundColor: '#e9f4fb',
        borderColor: '#A3D9FE',
        pointBackgroundColor: '#A3D9FE',
        pointBorderColor: '#fff',
        pointHoverBackgroundColor: '#fff',
        pointHoverBorderColor: 'rgba(66,165,245,1)',
        data: [200, 192, 220, 240, 200, 131, 126]
      }
      ]
    };

    if(chartLinesCon.length > 0) {
      new Chart(chartLinesCon, { type: type, data: data });
    }
  }

  function roundChart(el, type) {
    var chart  = jQuery(el);

    var data = {
      labels: [
        'New Issues',
        'Closed Issues',
        'Reopened Issues'
      ],
      datasets: [{
        data: [
          67,
          23,
          10
        ],
        backgroundColor: [
          'rgba(156,204,101,1)',
          'rgba(255,202,40,1)',
          'rgba(239,83,80,1)'
        ],
        hoverBackgroundColor: [
          'rgba(156,204,101,.5)',
          'rgba(255,202,40,.5)',
          'rgba(239,83,80,.5)'
        ]
      }]
    };

    if(chart.length > 0) {
      new Chart(chart, { type: type, data: data });
    }
  }

  function initChartJsDemo() {
    lineCharts('.sales-vs-refunds', 'line');
    lineCharts('.sales-vs-refunds-bars', 'bar');
    lineCharts('.demo-radar', 'radar');
    roundChart('.demo-pie', 'pie')
    roundChart('.demo-polar', 'polarArea')
    roundChart('.demo-doughnut', 'doughnut')

    lineCharts('[data-chartjs-line-demo]', 'line');
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('demo-chartjs') && initChartJsDemo.call(this)
  })
})()

;

if(window.Chart) {
  Chart.defaults.global.defaultFontColor              = '#555555';
  Chart.defaults.scale.gridLines.color                = "rgba(0,0,0,.04)";
  Chart.defaults.scale.gridLines.zeroLineColor        = "rgba(0,0,0,.1)";
  Chart.defaults.scale.ticks.beginAtZero              = true;
  Chart.defaults.global.elements.line.borderWidth     = 2;
  Chart.defaults.global.elements.point.radius         = 5;
  Chart.defaults.global.elements.point.hoverRadius    = 7;
  Chart.defaults.global.tooltips.cornerRadius         = 3;
  Chart.defaults.global.legend.labels.boxWidth        = 12;
}

(function() {
  function flotRealtime() {
    if ($('.flot-realtime').length === 0) {
      return;
    }

    var dataGenerator = new DataGenerator(200);
    var plot = $.plot($('.flot-realtime'), [dataGenerator.getRandomizedData()], {
      series: {
        shadowSize: 0
      },
      colors: [
        RRT.getRootCssVariable('--metric-chart-fill-color'),
        RRT.getRootCssVariable('--metric-chart-fill-color-1'),
        RRT.getRootCssVariable('--metric-chart-fill-color-2')
      ],
      lines: {
        fill: true,
        fillColor: {
          colors: [{opacity: 1}, {opacity: .3}]
        }
      },
      yaxis: {
        min: 0,
        max: 100
      },
      xaxis: {
        show: false
      }
    });

    function update() {
      plot.setData([dataGenerator.getRandomizedData()]);
      plot.draw();

      if (!Modernizr.touch) {
        window.requestAnimationFrame(update);
      } else {
        setTimeout(update, 1000);
      }
    }

    update();
  }

  function displayRandomMetricCharts() {
    var randomMetricGraphs = jQuery('.metric-random-graph');

    if(randomMetricGraphs.length > 0) {
      randomMetricGraphs.each(function(i, graph) {
        var isDetailGraph = $(graph).hasClass('detail-graph')

        var data = Array.apply(null, Array(10)).map(function() { return Math.floor(Math.random() * 100 % 100); })
        var lablels = null;

        if(isDetailGraph) {
          var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
          var endDate = new Date()
          var startDate = new Date(new Date().setDate(endDate.getDate()-30))
          labels = Array(Math.floor((endDate - startDate) / 86400000) + 1).fill().map( function(_, idx) {
            var d = new Date(startDate.getTime() + idx * 86400000)
            return monthNames[d.getMonth()] + ' ' + d.getDate()
          })
          data = Array.apply(null, Array(31)).map(function() { return Math.floor(Math.random() * 100 % 100); })
        }

        var metricChartFillColor = RRT.getRootCssVariable('--metric-chart-fill-color');
        var metricChartBorderColor = RRT.getRootCssVariable('--metric-chart-border-color');

        var graphData = {
          datasets: [{
            fill: true,
            backgroundColor: metricChartFillColor,
            borderColor: metricChartBorderColor,
            borderWidth: 4,
            pointRadius: 0,
            data: data
          }]
        };

        if(isDetailGraph) {
          graphData.labels = labels
          graphData.datasets[0].pointBackgroundColor = 'rgba(66,165,245,1)';
          graphData.datasets[0].pointBorderColor= '#fff';
          graphData.datasets[0].pointHoverBackgroundColor= '#fff';
          graphData.datasets[0].pointHoverBorderColor= 'rgba(66,165,245,1)';
          graphData.datasets[0].pointRadius = 4;
          graphData.datasets[0].borderWidth = 2;
        }

        new Chart(graph, { type: 'line', data: graphData, options: {
          maintainAspectRatio: false,
          responsive: true,
          legend: {
            display: false
          },
          scales: {
            xAxes: [{
              display: isDetailGraph,
              gridLines: {
                    display: isDetailGraph,
                    drawBorder: false,
                    drawOnChartArea: true,
                    drawTicks: isDetailGraph,
                }
            }],

            yAxes: [{
              display: isDetailGraph,
              gridLines: {
                    display: isDetailGraph,
                    drawBorder: false,
                    drawOnChartArea: true,
                    drawTicks: isDetailGraph,
                }
            }]
          }
        } })
      });
    }

  }

  function salesVsRefunds() {
    var chartLinesCon  = jQuery('.sales-vs-refunds');

    var metricChartFillColor = RRT.getRootCssVariable('--metric-chart-fill-color');
    var metricChartFillColorAlt = RRT.getRootCssVariable('--metric-chart-fill-color-1');
    var metricChartBorderColor = RRT.getRootCssVariable('--metric-chart-border-color');

    var chartLinesBarsRadarData = {
      labels: ['MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN'],
      datasets: [
        {
        label: 'Refunds',
        fill: true,
        backgroundColor: metricChartBorderColor,
        borderColor: metricChartFillColor,
        pointBackgroundColor: 'rgba(66,165,245,1)',
        pointBorderColor: '#fff',
        pointHoverBackgroundColor: '#fff',
        pointHoverBorderColor: 'rgba(66,165,245,1)',
        data: [19, 20, 8, 32, 100, 15, 99]
      },
      {
        label: 'Sales',
        fill: true,
        backgroundColor: metricChartFillColorAlt,
        borderColor: metricChartBorderColor,
        pointBackgroundColor: metricChartFillColorAlt,
        pointBorderColor: '#fff',
        pointHoverBackgroundColor: '#fff',
        pointHoverBorderColor: 'rgba(66,165,245,1)',
        data: [200, 192, 220, 240, 200, 131, 126]
      }
      ]
    };

    if(chartLinesCon.length > 0) {
      new Chart(chartLinesCon, { type: 'line', data: chartLinesBarsRadarData });
    }


  }
  function initDashboardDemo() {
    function count(options) {
      var $this = $(this);
      options = $.extend({}, options || {}, $this.data('countToOptions') || {});
      $this.countTo(options);
    }

    $('.counter').data('countToOptions', {
      onComplete: function (value) {
        var timeout = setTimeout(function() {
          count.call(this, {
            from: value,
            to: value + (Math.random()*100)
          });
          clearTimeout(timeout)
        }.bind(this), 2000 + Math.floor(Math.random() * 10000))
      },
      formatter: function (value, options) {
        return value.toFixed(0).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,")
      }
    });

    $('.cash-counter').data('countToOptions', {
      onComplete: function (value) {
        var timeout = setTimeout(function() {
          count.call(this, {
            from: value,
            to: value + (Math.floor(value * (1/90)))
          });
          clearTimeout(timeout)
        }.bind(this), 3550 + Math.floor(Math.random() * 10000))
      },
      formatter: function (value, options) {
        return '$' + value.toFixed(0).replace(/(\d)(?=(\d\d\d)+(?!\d))/g, "$1,")
      }
    });

    $('.counter').each(count)
    $('.cash-counter').each(count)


    displayRandomMetricCharts();
    flotRealtime();
    salesVsRefunds();
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('demo-dashboard') && initDashboardDemo.call(this)
  })
})()

;

(function() {
  function initEasyPieChartDemo() {

    jQuery('.js-pie-chart:not(.js-pie-chart-enabled)').each(function(){
      var el = jQuery(this);

      // Add .js-pie-chart-enabled class to tag it as activated
      el.addClass('js-pie-chart-enabled');

      // Init
      el.easyPieChart({
        barColor: el.data('bar-color') || '#777777',
        trackColor: el.data('track-color') || '#eeeeee',
        lineWidth: el.data('line-width') || 3,
        size: el.data('size') || '80',
        animate: el.data('animate') || 750,
        scaleColor: el.data('scale-color') || false
      });
    });

    jQuery('.js-pie-randomize').on('click', function(){
            jQuery(this)
                .parents('.block')
                .find('.pie-chart')
                .each(function() {
                    var random = Math.floor((Math.random() * 100) + 1);

                    jQuery(this)
                        .data('easyPieChart')
                        .update(random);
                });
        });
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('demo-easypiechart') && initEasyPieChartDemo.call(this)
  })

})()

;



(function() {

  function initFlotDemo() {
    var dataEarnings    = [[1, 1500], [2, 1700], [3, 1400], [4, 1900], [5, 2500], [6, 2300], [7, 2700], [8, 3200], [9, 3500], [10, 3260], [11, 4100], [12, 4600]];
    var dataSales       = [[1, 500], [2, 600], [3, 400], [4, 750], [5, 1150], [6, 950], [7, 1400], [8, 1700], [9, 1800], [10, 1300], [11, 1750], [12, 2900]];

    var dataSalesBefore = [[1, 500], [4, 600], [7, 1000], [10, 600], [13, 800], [16, 1200], [19, 1500], [22, 1600], [25, 2500], [28, 2700], [31, 3500], [34, 4500]];
    var dataSalesAfter  = [[2, 900], [5, 1200], [8, 2000], [11, 1200], [14, 1600], [17, 2400], [20, 3000], [23, 3200], [26, 5000], [29, 5400], [32, 7000], [35, 9000]];

    var dataMonths      = [[1, 'Jan'], [2, 'Feb'], [3, 'Mar'], [4, 'Apr'], [5, 'May'], [6, 'Jun'], [7, 'Jul'], [8, 'Aug'], [9, 'Sep'], [10, 'Oct'], [11, 'Nov'], [12, 'Dec']];
    var dataMonthsBars  = [[2, 'Jan'], [5, 'Feb'], [8, 'Mar'], [11, 'Apr'], [14, 'May'], [17, 'Jun'], [20, 'Jul'], [23, 'Aug'], [26, 'Sep'], [29, 'Oct'], [32, 'Nov'], [35, 'Dec']];

    function flotRealtime(el) {
      var dataGenerator = new DataGenerator(200);
      var plot = $.plot(el, [dataGenerator.getRandomizedData()], {
        series: {
          shadowSize: 0
        },
        lines: {
          fill: true,
          fillColor: {
            colors: [{opacity: 1}, {opacity: .3}]
          }
        },
        yaxis: {
          min: 0,
          max: 100
        },
        xaxis: {
          show: false
        }
      });

      function update() {
        plot.setData([dataGenerator.getRandomizedData()]);
        plot.draw();

        if (!Modernizr.touch) {
          setTimeout(function() { window.requestAnimationFrame(update)}, 24);
        } else {
          setTimeout(function() { window.requestAnimationFrame(update) }, 1000);
        }
      }

      update();
    }

    function flotLine(el) {

      $.plot(el,
             [
               {
               label: 'Earnings',
               data: dataEarnings,
               lines: {
                 show: true,
                 fill: true,
                 fillColor: {
                   colors: [{opacity: .7}, {opacity: .7}]
                 }
               },
               points: {
                 show: true,
                 radius: 5
               }
             },
             {
               label: 'Sales',
               data: dataSales,
               lines: {
                 show: true,
                 fill: true,
                 fillColor: {
                   colors: [{opacity: .5}, {opacity: .5}]
                 }
               },
               points: {
                 show: true,
                 radius: 5
               }
             }
             ],
             {
               colors: ['#ffca28', '#555555'],
               legend: {
                 show: true,
                 position: 'nw',
                 backgroundOpacity: 0
               },
               grid: {
                 borderWidth: 0,
                 hoverable: true,
                 clickable: true
               },
               yaxis: {
                 tickColor: '#ffffff',
                 ticks: 3
               },
               xaxis: {
                 ticks: dataMonths,
                 tickColor: '#f5f5f5'
               }
             }
            );
    }

    function flotStacked(el) {
      $.plot(el,
             [
               {
               label: 'Sales',
               data: dataSales
             },
             {
               label: 'Earnings',
               data: dataEarnings
             }
             ],
             {
               colors: ['#555555', '#26c6da'],
               series: {
                 stack: true,
                 lines: {
                   show: true,
                   fill: true
                 }
               },
               lines: {show: true,
                 lineWidth: 0,
                 fill: true,
                 fillColor: {
                   colors: [{opacity: 1}, {opacity: 1}]
                 }
               },
               legend: {
                 show: true,
                 position: 'nw',
                 sorted: true,
                 backgroundOpacity: 0
               },
               grid: {
                 borderWidth: 0
               },
               yaxis: {
                 tickColor: '#ffffff',
                 ticks: 3
               },
               xaxis: {
                 ticks: dataMonths,
                 tickColor: '#f5f5f5'
               }
             }
            );
    }

    function flotBars(el) {
      $.plot(el,
             [
               {
               label: 'Sales Before Release',
               data: dataSalesBefore,
               bars: {
                 show: true,
                 lineWidth: 0,
                 fillColor: {
                   colors: [{opacity: .75}, {opacity: .75}]
                 }
               }
             },
             {
               label: 'Sales After Release',
               data: dataSalesAfter,
               bars: {
                 show: true,
                 lineWidth: 0,
                 fillColor: {
                   colors: [{opacity: .75}, {opacity: .75}]
                 }
               }
             }
             ],
             {
               colors: ['#ef5350', '#9ccc65'],
               legend: {
                 show: true,
                 position: 'nw',
                 backgroundOpacity: 0
               },
               grid: {
                 borderWidth: 0
               },
               yaxis: {
                 ticks: 3,
                 tickColor: '#f5f5f5'
               },
               xaxis: {
                 ticks: dataMonthsBars,
                 tickColor: '#f5f5f5'
               }
             }
            );
    }

    function flotPie(el) {
      $.plot(el,
             [
               {
               label: 'Sales',
               data: 15
             },
             {
               label: 'Tickets',
               data: 12
             },
             {
               label: 'Earnings',
               data: 73
             }
             ],
             {
               colors: ['#26c6da', '#ffca28', '#9ccc65'],
               legend: {show: false},
               series: {
                 pie: {
                   show: true,
                   radius: 1,
                   label: {
                     show: true,
                     radius: 2/3,
                     formatter: function(label, pieSeries) {
                       return '<div class="flot-pie-label">' + label + '<br>' + Math.round(pieSeries.percent) + '%</div>';
                     },
                     background: {
                       opacity: .75,
                       color: '#000000'
                     }
                   }
                 }
               }
             }
            );
    }

    flotRealtime('.demo-realtime')
    flotLine('.demo-line')
    flotStacked('.demo-stacked')
    flotBars('.demo-bars')
    flotPie('.demo-pie')
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('demo-flot') && initFlotDemo.call(this)
  })
})()

;

(function() {
  function dashboardGmap() {
    if ($('#gmapDemo')[0] === undefined || !RRT.jsLibIsActive('gmaps')) {
      return;
    }

    var oldMarker;

    var map = new GMaps({
      div: '#gmapDemo',
      lat: 0,
      lng: 0,
      disableDefaultUI: true,
      scaleControl: false,
      scrollwheel: false,
      disableDoubleClickZoom: true,
      zoomControl: true,
      zoomControlOpt: {
        style: 'SMALL',
        position: 'TOP_RIGHT'
      },
      height: '485px',
      zoom: 1
    });

    function removeMarkers() {
      map.removeMarkers();
    }

    function update() {
      map.addMarker({
        lat: Math.random() * 280,
        lng: Math.random() * 360
      });

      if (!Modernizr.touch) {
        setTimeout(update, Math.random() * 1000);
        setTimeout(removeMarkers, 10000);
      }
    }

    update();
  }

  function makeGmap(el, type, opts) {
    var satelliteGmap = $(el)
    if(satelliteGmap.length === 0) {
      return
    }

    var defaultOpts = {
      div: el,
      lat: '55.855573',
      lng: '-4.3728844',
      mapType: type,
      disableDefaultUI: true,
      scaleControl: false,
      scrollwheel: false,
      disableDoubleClickZoom: false,
      zoomControl: true,
      zoomControlOpt: {
        style: 'SMALL',
        position: 'TOP_RIGHT'
      },
      height: '485px',
      zoom: 5
    }


    for (var attrname in opts) { defaultOpts[attrname] = opts[attrname]; }

    var map = new GMaps(defaultOpts);

    return map
  }

  function createStreetview( el, lat, long, heading, pitch ) {
    if ($(el).length) {
      return new GMaps.createPanorama({
        el: el,
        lat: lat,
        lng: long,
        pov: { heading: heading, pitch: pitch },
        scrollwheel: false
      });
    }
  }

  function drawMapOverlay(map, lat, long, content) {
    map.drawOverlay({
      lat: lat,
      lng: long,
      content: content
    });
  }

  function initGmapsDemo() {
    dashboardGmap();

    if($('.gmap-satellite').length) {
      makeGmap('.gmap-satellite', 'satellite');
    }

    if($('.gmap-terrain').length) {
      makeGmap('.gmap-terrain', 'terrain');
    }

    if($('.gmap-hybrid').length) {
      makeGmap('.gmap-hybrid', 'hybrid');
    }

    if($('.gmap-roadmap').length) {
      makeGmap('.gmap-roadmap', 'roadmap');
    }

    if($('.gmap-default').length) {
      makeGmap('.gmap-default', 'roadmap');
    }

    if($('#gmap-streetview').length) {
      createStreetview('#gmap-streetview', '55.8611768', '-4.2538145', 250, 9);
    }

    if($('.gmap-overlay').length) {
      var overlayMap = makeGmap('.gmap-overlay', 'satellite')
      drawMapOverlay(overlayMap, '55.855573', '-4.3728844','<div class="alert alert-danger">ZOMBIES ALERT</div>')
    }

    if($('.gmap-markers').length) {
      var markerMap = makeGmap('.gmap-markers', 'roadmap');
      markerMap.addMarker({
        lat: 55.855573,
        lng: -4.3728844,
        title: 'Zombies',
        animation: google.maps.Animation.DROP,
        click: function(e) {
          alert('You clicked in this marker');
        }
      });
    }

    if($('.gmap-polygons').length) {
      var polyMap = makeGmap('.gmap-polygons', 'roadmap', {zoom: 15, lat: '55.863340', lng:'-4.254116'});
      var path = [[55.864894, -4.261562], [55.864581, -4.249031], [55.861907, -4.252507],	[55.862678, -4.262678]];

      polygon = polyMap.drawPolygon({
        paths: path, // pre-defined polygon shape
        strokeColor: '#BBD8E9',
        strokeOpacity: 1,
        strokeWeight: 3,
        fillColor: '#BBD8E9',
        fillOpacity: 0.6
      });
    }
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('demo-gmaps') && initGmapsDemo.call(this)
  })

})()

;
(function() {

  function makeJqvMap(el, type, opts) {
    var defaultOpts = {
      map: type,
      backgroundColor: '#ffffff',
      regionStyle: {
        initial: {
          fill: '#42a5f5',
          'fill-opacity': 1,
          stroke: 'none',
          'stroke-width': 0,
          'stroke-opacity': 1
        },
        hover: {
          'fill-opacity': .8,
          cursor: 'pointer'
        }
      }
    }

    for (var attrname in opts) { defaultOpts[attrname] = opts[attrname]; }
    el.vectorMap(defaultOpts)
  }

  function initJqvDemoMaps() {
    makeJqvMap($('.jqv-world-map'), 'world_mill_en')

    makeJqvMap($('.jqv-inverse-world-map'), 'world_mill_en', {
      backgroundColor: '#193341',
      regionStyle: {
        initial: {
          fill: '#3C6A81',
          'fill-opacity': 0.8,
          stroke: 'none',
          'stroke-width': 1,
          'stroke-opacity': 1
        },
        hover: {
          fill: '#FFF',
          'fill-opacity': 1
        }
      }
    })

    makeJqvMap($('.jqv-canada-map'), 'ca_mill')

    makeJqvMap($('.jqv-europe-map'), 'europe_mill_en')
    makeJqvMap($('.jqv-us-map'), 'us_aea_en')
    makeJqvMap($('.jqv-india-map'), 'in_mill_en')
    makeJqvMap($('.jqv-china-map'), 'cn_mill_en')
    makeJqvMap($('.jqv-australia-map'), 'au_mill_en')
    makeJqvMap($('.jqv-southafrica-map'), 'za_mill_en')
    makeJqvMap($('.jqv-france-map'), 'fr_mill_en')
    makeJqvMap($('.jqv-germany-map'), 'de_mill_en')

  }


  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('demo-jqvectormap') && initJqvDemoMaps.call(this)
  })

})()

;

(function() {

  function lineSparks(el, opts) {
    var lineSpark = jQuery(el);

    var defaultOpts = {
      type: 'line',
      width: '100px',
      height: '60px',
      tooltipOffsetX: -25,
      tooltipOffsetY: 20,
      lineColor: '#ffca28',
      fillColor: '#ffca28',
      spotColor: '#555',
      minSpotColor: '#555',
      maxSpotColor: '#555',
      highlightSpotColor: '#555',
      highlightLineColor: '#555',
      spotRadius: 2,
      tooltipPrefix: '',
      tooltipFormat: '{{prefix}}{{y}}{{suffix}}'
    };

    for (var attrname in opts) { defaultOpts[attrname] = opts[attrname]; }

    if ( lineSpark.length ) { lineSpark.sparkline('html', defaultOpts); }
  }

  function barSparks(el, opts) {
    var barSpark = jQuery(el);

    var defaultOpts = {
      type: 'bar',
      barWidth: 8,
      barSpacing: 6,
      barColor: '#ffca28',
      tooltipPrefix: '',
      tooltipSuffix: ' Tickets',
      tooltipFormat: '{{prefix}}{{value}}{{suffix}}',
      enableTagOptions: true
    };

    for (var attrname in opts) { defaultOpts[attrname] = opts[attrname]; }

    if ( barSpark.length ) { barSpark.sparkline('html', defaultOpts); }
  }

  function pieSparks(el, opts) {
    var pieSpark = jQuery(el);

    var defaultOpts = {
      type: 'pie',
      width: '80px',
      height: '80px',
      sliceColors: ['#ffca28','#9ccc65', '#42a5f5','#ef5350'],
      highlightLighten: 1.1,
      tooltipPrefix: '',
      tooltipSuffix: ' Tickets',
      tooltipFormat: '{{prefix}}{{value}}{{suffix}}'
    };

    for (var attrname in opts) { defaultOpts[attrname] = opts[attrname]; }

    if ( pieSpark.length ) { pieSpark.sparkline('html', defaultOpts); }
  }

  function triSparks(el, opts) {
    var triSpark    = jQuery(el);

    var defaultOpts = {
      type: 'tristate',
      barWidth: 8,
      barSpacing: 6,
      height: '110px',
      posBarColor: '#9ccc65',
      negBarColor: '#ef5350'
    };

    for (var attrname in opts) { defaultOpts[attrname] = opts[attrname]; }

    if ( triSpark.length ) { triSpark.sparkline('html', defaultOpts); }
  }

  function initSparklineDemo() {
    lineSparks('.spark-line-1', {
      lineColor: '#9ccc65',
      fillColor: '#9ccc65',
      tooltipSuffix: ' Tickets',
      tooltipPrefix: '$ ',
    })

    lineSparks('.spark-line-2', {
      lineColor: '#9ccc65',
      fillColor: '#9ccc65',
      tooltipPrefix: '$ ',
      tooltipSuffix: ''
    })


    lineSparks('.spark-line-3', {
      lineColor: '#9ccc65',
      fillColor: '#9ccc65',
      tooltipPrefix: '$ ',
      tooltipSuffix: ''
    })

    pieSparks('.spark-pie-1', {

    })

    pieSparks('.spark-pie-2', {

    })

    pieSparks('.spark-pie-3', {

    })

    barSparks('.spark-bar-1', {
      barColor: '#9ccc65',
      tooltipPrefix: '$ ',
      tooltipSuffix: ''
    })

    barSparks('.spark-bar-2', {
      barColor: '#9ccc65',
      tooltipPrefix: '$ ',
      tooltipSuffix: ''
    })

    barSparks('.spark-bar-3', {
      barColor: '#9ccc65',
      tooltipPrefix: '$ ',
      tooltipSuffix: ''
    })

    triSparks('.spark-tri-1',{

    })

    triSparks('.spark-tri-2',{

    })

    triSparks('.spark-tri-3',{

    })
  }

  RRT.hookOnPageLoad( function() {
    RRT.jsLibIsActive('demo-sparklines') && initSparklineDemo.call(this)
  })

})()

;
window.INSPECT_MODE = false;

$(document).ready(function() {
  var clipboard = new Clipboard('.copy-to-clipboard');

  function removeHandlers() {
    var _inspectable = this

    $(_inspectable)
      .off('mouseenter')
      .off('mouseleave')
      .off('click')
  }

  $('.inspect-mode').on('click', function() {
    window.INSPECT_MODE = !window.INSPECT_MODE;
    var inspectables = $('.inspectable');

    if(window.INSPECT_MODE) {
      $(this).addClass('on')

      inspectables.each(function () {
        var $inspectable = this;

        $($inspectable).on('mouseenter', function () {
          $(this).addClass('inspect-target')
        })

        $($inspectable).on('mouseleave', function () {
          $(this).removeClass('inspect-target')
        })

        $($inspectable).on('click', function () {
          var rawHtml = $($inspectable)[0].outerHTML

          $('.inspect-mode-bg').removeClass('d-none').addClass('d-flex')

          componentNameRe = /<!-- component-title: ([\w\s]*) -->/g
          componentName = componentNameRe.exec(rawHtml)

          componentName = componentName ? componentName[1] : "Component Markup"

          $('.inspector-component-name').text(componentName)

          rawHtml = rawHtml.trim().replace(/<!--[\s\S]*?-->/g, '')
          rawHtml = rawHtml.replace(/inspectable/, '')
          rawHtml = rawHtml.replace(/inspect-target/, '')

          code = style_html(rawHtml, {
            'indent_size': 2,
            'indent_char': ' ',
            'unformatted': []
          })


          $('.inspector-modal code').html(
            Prism.highlight(code, Prism.languages.markup)
          )

          $('#raw-markup').text(code)
        })
      })
    } else {
      $(this).removeClass('on')
      inspectables.each(removeHandlers)
    }
  })

  $('.close-inspector').on('click', function () {
    window.INSPECT_MODE = false

    $('.inspect-mode').removeClass('on')
    $('.inspect-mode-bg').removeClass('d-flex').addClass('d-none')

    var inspectables = $('.inspectable');

    inspectables.each( function() {
     var $inspectable = this;

     $($inspectable).off('mouseenter')
     $($inspectable).off('mouseleave')
     $($inspectable).off('click')
    })
  })
})

function style_html(html_source, options) {
//Wrapper function to invoke all the necessary constructors and deal with the output.

  var multi_parser,
      indent_size,
      indent_character,
      max_char,
      brace_style,
      unformatted;

  options = options || {};
  indent_size = options.indent_size || 4;
  indent_character = options.indent_char || ' ';
  brace_style = options.brace_style || 'collapse';
  max_char = options.max_char == 0 ? Infinity : options.max_char || 70;
  unformatted = options.unformatted || ['a', 'span', 'bdo', 'em', 'strong', 'dfn', 'code', 'samp', 'kbd', 'var', 'cite', 'abbr', 'acronym', 'q', 'sub', 'sup', 'tt', 'i', 'b', 'big', 'small', 'u', 's', 'strike', 'font', 'ins', 'del', 'pre', 'address', 'dt', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];

  function Parser() {

    this.pos = 0; //Parser position
    this.token = '';
    this.current_mode = 'CONTENT'; //reflects the current Parser mode: TAG/CONTENT
    this.tags = { //An object to hold tags, their position, and their parent-tags, initiated with default values
      parent: 'parent1',
      parentcount: 1,
      parent1: ''
    };
    this.tag_type = '';
    this.token_text = this.last_token = this.last_text = this.token_type = '';

    this.Utils = { //Uilities made available to the various functions
      whitespace: "\n\r\t ".split(''),
      single_token: 'br,input,link,meta,!doctype,basefont,base,area,hr,wbr,param,img,isindex,?xml,embed,?php,?,?='.split(','), //all the single tags for HTML
      extra_liners: 'head,body,/html'.split(','), //for tags that need a line of whitespace before them
      in_array: function (what, arr) {
        for (var i=0; i<arr.length; i++) {
          if (what === arr[i]) {
            return true;
          }
        }
        return false;
      }
    }

    this.get_content = function () { //function to capture regular content between tags

      var input_char = '',
          content = [],
          space = false; //if a space is needed

      while (this.input.charAt(this.pos) !== '<') {
        if (this.pos >= this.input.length) {
          return content.length?content.join(''):['', 'TK_EOF'];
        }

        input_char = this.input.charAt(this.pos);
        this.pos++;
        this.line_char_count++;

        if (this.Utils.in_array(input_char, this.Utils.whitespace)) {
          if (content.length) {
            space = true;
          }
          this.line_char_count--;
          continue; //don't want to insert unnecessary space
        }
        else if (space) {
          if (this.line_char_count >= this.max_char) { //insert a line when the max_char is reached
            content.push('\n');
            for (var i=0; i<this.indent_level; i++) {
              content.push(this.indent_string);
            }
            this.line_char_count = 0;
          }
          else{
            content.push(' ');
            this.line_char_count++;
          }
          space = false;
        }
        content.push(input_char); //letter at-a-time (or string) inserted to an array
      }
      return content.length?content.join(''):'';
    }

    this.get_contents_to = function (name) { //get the full content of a script or style to pass to js_beautify
      if (this.pos == this.input.length) {
        return ['', 'TK_EOF'];
      }
      var input_char = '';
      var content = '';
      var reg_match = new RegExp('\<\/' + name + '\\s*\>', 'igm');
      reg_match.lastIndex = this.pos;
      var reg_array = reg_match.exec(this.input);
      var end_script = reg_array?reg_array.index:this.input.length; //absolute end of script
      if(this.pos < end_script) { //get everything in between the script tags
        content = this.input.substring(this.pos, end_script);
        this.pos = end_script;
      }
      return content;
    }

    this.record_tag = function (tag){ //function to record a tag and its parent in this.tags Object
      if (this.tags[tag + 'count']) { //check for the existence of this tag type
        this.tags[tag + 'count']++;
        this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level
      }
      else { //otherwise initialize this tag type
        this.tags[tag + 'count'] = 1;
        this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level
      }
      this.tags[tag + this.tags[tag + 'count'] + 'parent'] = this.tags.parent; //set the parent (i.e. in the case of a div this.tags.div1parent)
      this.tags.parent = tag + this.tags[tag + 'count']; //and make this the current parent (i.e. in the case of a div 'div1')
    }

    this.retrieve_tag = function (tag) { //function to retrieve the opening tag to the corresponding closer
      if (this.tags[tag + 'count']) { //if the openener is not in the Object we ignore it
        var temp_parent = this.tags.parent; //check to see if it's a closable tag.
        while (temp_parent) { //till we reach '' (the initial value);
          if (tag + this.tags[tag + 'count'] === temp_parent) { //if this is it use it
            break;
          }
          temp_parent = this.tags[temp_parent + 'parent']; //otherwise keep on climbing up the DOM Tree
        }
        if (temp_parent) { //if we caught something
          this.indent_level = this.tags[tag + this.tags[tag + 'count']]; //set the indent_level accordingly
          this.tags.parent = this.tags[temp_parent + 'parent']; //and set the current parent
        }
        delete this.tags[tag + this.tags[tag + 'count'] + 'parent']; //delete the closed tags parent reference...
        delete this.tags[tag + this.tags[tag + 'count']]; //...and the tag itself
        if (this.tags[tag + 'count'] == 1) {
          delete this.tags[tag + 'count'];
        }
        else {
          this.tags[tag + 'count']--;
        }
      }
    }

    this.get_tag = function () { //function to get a full tag and parse its type
      var input_char = '',
          content = [],
          space = false,
          tag_start, tag_end;

      do {
        if (this.pos >= this.input.length) {
          return content.length?content.join(''):['', 'TK_EOF'];
        }

        input_char = this.input.charAt(this.pos);
        this.pos++;
        this.line_char_count++;

        if (this.Utils.in_array(input_char, this.Utils.whitespace)) { //don't want to insert unnecessary space
          space = true;
          this.line_char_count--;
          continue;
        }

        if (input_char === "'" || input_char === '"') {
          if (!content[1] || content[1] !== '!') { //if we're in a comment strings don't get treated specially
            input_char += this.get_unformatted(input_char);
            space = true;
          }
        }

        if (input_char === '=') { //no space before =
          space = false;
        }

        if (content.length && content[content.length-1] !== '=' && input_char !== '>'
            && space) { //no space after = or before >
          if (this.line_char_count >= this.max_char) {
            this.print_newline(false, content);
            this.line_char_count = 0;
          }
          else {
            content.push(' ');
            this.line_char_count++;
          }
          space = false;
        }
        if (input_char === '<') {
            tag_start = this.pos - 1;
        }
        content.push(input_char); //inserts character at-a-time (or string)
      } while (input_char !== '>');

      var tag_complete = content.join('');
      var tag_index;
      if (tag_complete.indexOf(' ') != -1) { //if there's whitespace, thats where the tag name ends
        tag_index = tag_complete.indexOf(' ');
      }
      else { //otherwise go with the tag ending
        tag_index = tag_complete.indexOf('>');
      }
      var tag_check = tag_complete.substring(1, tag_index).toLowerCase();
      if (tag_complete.charAt(tag_complete.length-2) === '/' ||
          this.Utils.in_array(tag_check, this.Utils.single_token)) { //if this tag name is a single tag type (either in the list or has a closing /)
        this.tag_type = 'SINGLE';
      }
      else if (tag_check === 'script') { //for later script handling
        this.record_tag(tag_check);
        this.tag_type = 'SCRIPT';
      }
      else if (tag_check === 'style') { //for future style handling (for now it justs uses get_content)
        this.record_tag(tag_check);
        this.tag_type = 'STYLE';
      }
      else if (this.Utils.in_array(tag_check, unformatted)) { // do not reformat the "unformatted" tags
        var comment = this.get_unformatted('</'+tag_check+'>', tag_complete); //...delegate to get_unformatted function
        content.push(comment);
        // Preserve collapsed whitespace either before or after this tag.
        if (tag_start > 0 && this.Utils.in_array(this.input.charAt(tag_start - 1), this.Utils.whitespace)){
            content.splice(0, 0, this.input.charAt(tag_start - 1));
        }
        tag_end = this.pos - 1;
        if (this.Utils.in_array(this.input.charAt(tag_end + 1), this.Utils.whitespace)){
            content.push(this.input.charAt(tag_end + 1));
        }
        this.tag_type = 'SINGLE';
      }
      else if (tag_check.charAt(0) === '!') { //peek for <!-- comment
        if (tag_check.indexOf('[if') != -1) { //peek for <!--[if conditional comment
          if (tag_complete.indexOf('!IE') != -1) { //this type needs a closing --> so...
            var comment = this.get_unformatted('-->', tag_complete); //...delegate to get_unformatted
            content.push(comment);
          }
          this.tag_type = 'START';
        }
        else if (tag_check.indexOf('[endif') != -1) {//peek for <!--[endif end conditional comment
          this.tag_type = 'END';
          this.unindent();
        }
        else if (tag_check.indexOf('[cdata[') != -1) { //if it's a <[cdata[ comment...
          var comment = this.get_unformatted(']]>', tag_complete); //...delegate to get_unformatted function
          content.push(comment);
          this.tag_type = 'SINGLE'; //<![CDATA[ comments are treated like single tags
        }
        else {
          var comment = this.get_unformatted('-->', tag_complete);
          content.push(comment);
          this.tag_type = 'SINGLE';
        }
      }
      else {
        if (tag_check.charAt(0) === '/') { //this tag is a double tag so check for tag-ending
          this.retrieve_tag(tag_check.substring(1)); //remove it and all ancestors
          this.tag_type = 'END';
        }
        else { //otherwise it's a start-tag
          this.record_tag(tag_check); //push it on the tag stack
          this.tag_type = 'START';
        }
        if (this.Utils.in_array(tag_check, this.Utils.extra_liners)) { //check if this double needs an extra line
          this.print_newline(true, this.output);
        }
      }
      return content.join(''); //returns fully formatted tag
    }

    this.get_unformatted = function (delimiter, orig_tag) { //function to return unformatted content in its entirety

      if (orig_tag && orig_tag.toLowerCase().indexOf(delimiter) != -1) {
        return '';
      }
      var input_char = '';
      var content = '';
      var space = true;
      do {

        if (this.pos >= this.input.length) {
          return content;
        }

        input_char = this.input.charAt(this.pos);
        this.pos++

        if (this.Utils.in_array(input_char, this.Utils.whitespace)) {
          if (!space) {
            this.line_char_count--;
            continue;
          }
          if (input_char === '\n' || input_char === '\r') {
            content += '\n';
            /*  Don't change tab indention for unformatted blocks.  If using code for html editing, this will greatly affect <pre> tags if they are specified in the 'unformatted array'
            for (var i=0; i<this.indent_level; i++) {
              content += this.indent_string;
            }
            space = false; //...and make sure other indentation is erased
            */
            this.line_char_count = 0;
            continue;
          }
        }
        content += input_char;
        this.line_char_count++;
        space = true;


      } while (content.toLowerCase().indexOf(delimiter) == -1);
      return content;
    }

    this.get_token = function () { //initial handler for token-retrieval
      var token;

      if (this.last_token === 'TK_TAG_SCRIPT' || this.last_token === 'TK_TAG_STYLE') { //check if we need to format javascript
       var type = this.last_token.substr(7)
       token = this.get_contents_to(type);
        if (typeof token !== 'string') {
          return token;
        }
        return [token, 'TK_' + type];
      }
      if (this.current_mode === 'CONTENT') {
        token = this.get_content();
        if (typeof token !== 'string') {
          return token;
        }
        else {
          return [token, 'TK_CONTENT'];
        }
      }

      if (this.current_mode === 'TAG') {
        token = this.get_tag();
        if (typeof token !== 'string') {
          return token;
        }
        else {
          var tag_name_type = 'TK_TAG_' + this.tag_type;
          return [token, tag_name_type];
        }
      }
    }

    this.get_full_indent = function (level) {
      level = this.indent_level + level || 0;
      if (level < 1)
        return '';

      return Array(level + 1).join(this.indent_string);
    }


    this.printer = function (js_source, indent_character, indent_size, max_char, brace_style) { //handles input/output and some other printing functions

      this.input = js_source || ''; //gets the input for the Parser
      this.output = [];
      this.indent_character = indent_character;
      this.indent_string = '';
      this.indent_size = indent_size;
      this.brace_style = brace_style;
      this.indent_level = 0;
      this.max_char = max_char;
      this.line_char_count = 0; //count to see if max_char was exceeded

      for (var i=0; i<this.indent_size; i++) {
        this.indent_string += this.indent_character;
      }

      this.print_newline = function (ignore, arr) {
        this.line_char_count = 0;
        if (!arr || !arr.length) {
          return;
        }
        if (!ignore) { //we might want the extra line
          while (this.Utils.in_array(arr[arr.length-1], this.Utils.whitespace)) {
            arr.pop();
          }
        }
        arr.push('\n');
        for (var i=0; i<this.indent_level; i++) {
          arr.push(this.indent_string);
        }
      }

      this.print_token = function (text) {
        this.output.push(text);
      }

      this.indent = function () {
        this.indent_level++;
      }

      this.unindent = function () {
        if (this.indent_level > 0) {
          this.indent_level--;
        }
      }
    }
    return this;
  }

  /*_____________________--------------------_____________________*/

  multi_parser = new Parser(); //wrapping functions Parser
  multi_parser.printer(html_source, indent_character, indent_size, max_char, brace_style); //initialize starting values

  while (true) {
      var t = multi_parser.get_token();
      multi_parser.token_text = t[0];
      multi_parser.token_type = t[1];

    if (multi_parser.token_type === 'TK_EOF') {
      break;
    }

    switch (multi_parser.token_type) {
      case 'TK_TAG_START':
        multi_parser.print_newline(false, multi_parser.output);
        multi_parser.print_token(multi_parser.token_text);
        multi_parser.indent();
        multi_parser.current_mode = 'CONTENT';
        break;
      case 'TK_TAG_STYLE':
      case 'TK_TAG_SCRIPT':
        multi_parser.print_newline(false, multi_parser.output);
        multi_parser.print_token(multi_parser.token_text);
        multi_parser.current_mode = 'CONTENT';
        break;
      case 'TK_TAG_END':
        //Print new line only if the tag has no content and has child
        if (multi_parser.last_token === 'TK_CONTENT' && multi_parser.last_text === '') {
            var tag_name = multi_parser.token_text.match(/\w+/)[0];
            var tag_extracted_from_last_output = multi_parser.output[multi_parser.output.length -1].match(/<\s*(\w+)/);
            if (tag_extracted_from_last_output === null || tag_extracted_from_last_output[1] !== tag_name)
                multi_parser.print_newline(true, multi_parser.output);
        }
        multi_parser.print_token(multi_parser.token_text);
        multi_parser.current_mode = 'CONTENT';
        break;
      case 'TK_TAG_SINGLE':
        // Don't add a newline before elements that should remain unformatted.
        var tag_check = multi_parser.token_text.match(/^\s*<([a-z]+)/i);
        if (!tag_check || !multi_parser.Utils.in_array(tag_check[1], unformatted)){
            multi_parser.print_newline(false, multi_parser.output);
        }
        multi_parser.print_token(multi_parser.token_text);
        multi_parser.current_mode = 'CONTENT';
        break;
      case 'TK_CONTENT':
        if (multi_parser.token_text !== '') {
          multi_parser.print_token(multi_parser.token_text);
        }
        multi_parser.current_mode = 'TAG';
        break;
      case 'TK_STYLE':
      case 'TK_SCRIPT':
        if (multi_parser.token_text !== '') {
          multi_parser.output.push('\n');
          var text = multi_parser.token_text;
          if (multi_parser.token_type == 'TK_SCRIPT') {
            var _beautifier = typeof js_beautify == 'function' && js_beautify;
          } else if (multi_parser.token_type == 'TK_STYLE') {
            var _beautifier = typeof css_beautify == 'function' && css_beautify;
          }

          if (options.indent_scripts == "keep") {
            var script_indent_level = 0;
          } else if (options.indent_scripts == "separate") {
            var script_indent_level = -multi_parser.indent_level;
          } else {
            var script_indent_level = 1;
          }

          var indentation = multi_parser.get_full_indent(script_indent_level);
          if (_beautifier) {
            // call the Beautifier if avaliable
            text = _beautifier(text.replace(/^\s*/, indentation), options);
          } else {
            // simply indent the string otherwise
            var white = text.match(/^\s*/)[0];
            var _level = white.match(/[^\n\r]*$/)[0].split(multi_parser.indent_string).length - 1;
            var reindent = multi_parser.get_full_indent(script_indent_level -_level);
            text = text.replace(/^\s*/, indentation)
                   .replace(/\r\n|\r|\n/g, '\n' + reindent)
                   .replace(/\s*$/, '');
          }
          if (text) {
            multi_parser.print_token(text);
            multi_parser.print_newline(true, multi_parser.output);
          }
        }
        multi_parser.current_mode = 'TAG';
        break;
    }
    multi_parser.last_token = multi_parser.token_type;
    multi_parser.last_text = multi_parser.token_text;
  }
  return multi_parser.output.join('');
}
;





































Popper.Defaults.modifiers.computeStyle.gpuAcceleration = false;

// Prevent enter from form submission
$("#callsForm").submit(function(e){ 
        e.preventDefault();
    });

// Event listeners
$('#shortkeyReset').on('click',function(){
     resetShortkey()
});

$('#spCodeCalls').on('blur',function(){
     spVerification()
});

$('#skuFieldCalls').on('blur',function(){
	$('#skuAlertCalls').removeClass("alert-calls");
     skuVerification()
});

$('#ppcFieldCalls').on('blur',function(){
     calculateLiabilities();
});

$('#oppFieldCalls').on('change',function(){
     calculateLiabilities();
     calculateTotal();
});

$('#ppcFieldCalls').on('change',function(){
     calculateLiabilities();
     calculateTotal();
});

$('#partsFieldCalls').on('blur',function(){
     calculateTotal();
});

$('#laborFieldCalls').on('blur',function(){
     calculateTotal();
});

$('#taxFieldCalls').on('blur',function(){
     calculateTotal();
});

$('#mileageFieldCalls').on('blur',function(){
     calculateTotal();
});

$('#miscFieldCalls').on('blur',function(){
     calculateTotal();
});

$('#deductibleFieldCalls').on('blur',function(){
     calculateTotal();
});

$('#totalFieldCalls').on('blur',function(){
     calculateTotal();
});

$('#totalLolFieldCalls').on('blur',function(){
     calculateTotal();
});

$('#attemptFieldCalls').on('blur',function(){
     calculateTotal();
     calculateJfrrRemainder();
});

$('#approvalSelectCalls').on('change', function(){
	approvalToggle();
})

$('#rspCheckCalls').on('click', function(){
	calculateTotal();
	calculateLiabilities();
})

$('#alertVerifiedCalls').on('click',function(){
    if ($('.collapse').hasClass('show')) {
    	alert('Please acknowledge all alerts first');
    } else {
	   	$('#alertModalCalls').modal('hide');
	    formReceiptTemplate();
	    otlVal();
	    $('#completionModalCalls').modal('show');
    };
});

$('#extCheckCalls').on('click',function(){
    if ($('#extCheckCalls').prop('checked') == true) {
    	$('#extensionModalCalls').modal('show');
    	$('.mirror').on('keyup', function(){
  			$('.mirror').val($(this).val());
		});
		$('#extAlertCalls').addClass('alert-calls');
		$('#extCollapse').addClass('show');
	} else {
		$('#extCollapse').removeClass('show');
		$('#extAlertCalls').removeClass('alert-calls');
	}
});

$('#samCheckCalls').on('click', function(){
	$('#modelNumberCalls').removeClass("alert-calls bg-warning");
	$('#serialNumberCalls').removeClass("alert-calls bg-warning");
	samVal();
})

// Reset shortkeys
function resetShortkey() {
	$('#shortkeyForm').trigger('reset');
}

// Reset button
$('#resetCalls').on('click', function(){
	$('#callsForm').trigger('reset');
	$('.alert-calls').removeClass('alert-calls bg-warning').addClass('text-muted');
  $('#est1ReceiptCallsJetsons').prop('hidden', true);
  $('#est1ReceiptCalls').prop('hidden', false);
})

// Email over limits
$('#emailFormButtonCalls').on('click',function(){
     emailOTL();
     $('#emailFormButtonCalls').prop('disabled', true);
     $('#emailFormButtonCalls').html("SENT");
});

// OTL ajax and such
function emailOTL() {
    $.ajax({
      url: 'validator_email',
      type: 'put',
      data: { 
        username: $('#username').val(),
        receipt: $('#est1ReceiptCalls').val(),
        caller_name: $('#callerNameCalls').val(), 
        service_provider: $('#servicerNameCalls').val(), 
        model_number: $('#modelNumberCalls').val(), 
        serial_number: $('#serialNumberCalls').val(), 
        failure_cause: $('#failureCauseCalls').val(), 
        warranty_link: $('#warrantyLinkCalls').val(), 
        sku: $('#skuFieldCalls').val(), 
        opp: $('#oppFieldCalls').val(), 
        ppc: $('#ppcFieldCalls').val(),
        lol: $('#lolFieldCalls').val(),
        distributor: $('#distributorFieldCalls').val(),
        total_parts: $('#partsFieldCalls').val(),
        total_labor: $('#laborFieldCalls').val(),
        total_tax: $('#taxFieldCalls').val(),
        total_mileage: $('#mileageFieldCalls').val(),
        total_misc: $('#miscFieldCalls').val(),
        total_deductible: $('#deductibleFieldCalls').val(),
        total_estimate: $('#totalFieldCalls').val(),
        approved: $('#approvalSelectCalls').val(),
        diagnostic: $('#attemptFieldCalls').val(),
        serviceorder: $('#soNumberCalls').val() 
      }
    })
}

function otlVal() {
  if ($('#totalFieldCalls').val() > 849.99) {
    $('#emailFormButtonCalls').prop('hidden', false);
    $('#emailFormButtonCalls').prop('disabled', false);
  } else {
    $('#emailFormButtonCalls').prop('hidden', true);
    $('#emailFormButtonCalls').prop('disabled', true);

  }
}

// Samsung model/serial verification to see if it lands under the ice maker warranty
function samVal() {
	var modVal = $('#modelNumberCalls').val();
	var serVal = $('#serialNumberCalls').val();
	var aVal = a();
	function a() {
    	var snArray = ['HC', 'J1', 'J2', 'J3', 'J4', 'J5', 'J6', 'J7', 'J8', 'J9'];
    	for (var i = 0; i < snArray.length; i++) {
    		if ((serVal.toUpperCase().includes(snArray[i], 5) == true) && (modVal.toUpperCase().includes("RF", 0) == true)) {
        		$('#modelNumberCalls').addClass("alert-calls");
            $('#serialNumberCalls').addClass("alert-calls"); 
        		$('#samAlertCalls').addClass("alert-calls");
            	$('#samCollapse').addClass('show'); 
    		};
    	};
	};
};

//SKU Verification
function skuVerification() {
    var triggerWords = ['MJC5', 'GMJC5', 'MJC10', 'MJC5-V', 'MJC10-NC', 'MJC210', 'D-MJC10', 'D-MJC210', 'MJR10', 'MJC5E', 'MJC5-NC', 'MJC8', 'MJC10-NL', 'NLMJC10', 'GMJC10', 'MJC10NLF', 'MJR5', 'RPL1U50', 'RPL1U100', 'RPL1U200', 'RPL1U300', 'RPL1U400', 'RPL1U500', 'RPL1U750', 'RPL1U1000', 'RPL2U50', 'RPL2U100', 'RPL2U200', 'RPL2U300', 'RPL2U400', 'RPL2U500', 'RPL2U1000'];
    for (var i = 0; i < triggerWords.length; i++) {
        if ($('#skuFieldCalls').val().toUpperCase() == triggerWords[i]) {
            $('#skuAlertCalls').addClass("alert-calls");
            $('#skuCollapse').addClass('show');
        }
    }; 
};

//SP Verification
function spVerification() {
    var triggerCodes = ['SP-NL-AMEX', 'S-SEAN-HIC'];
    var jetsonCode = 'S-1004-JET';
    for (var i = 0; i < triggerCodes.length; i++) {
        if ($('#spCodeCalls').val().toUpperCase() == triggerCodes[i] || $('#spCodeCalls').val().toUpperCase() == (" " + triggerCodes[i])) {
            alert('Credit Card Provider, fill out credit card tab'); 
        } else if ($('#spCodeCalls').val().toUpperCase() == jetsonCode || $('#spCodeCalls').val().toUpperCase() == (" " + jetsonCode)) {
        	$('#est1ReceiptCallsJetsons').prop('hidden', false);
        	$('#est1ReceiptCalls').prop('hidden', true);
        } else {
        	$('#est1ReceiptCallsJetsons').prop('hidden', true);
        	$('#est1ReceiptCalls').prop('hidden', false);
        }
	}; 
};

// Limit of Liability calculations "calculateLiabilities" & "calculateTotal"
function calculateLiabilities() {
	if ($('#rspCheckCalls').prop('checked') && $('#ppcFieldCalls').val() > 0) {
		$('#lolFieldCalls').val(
			(parseFloat($('#oppFieldCalls').val() ? $('#oppFieldCalls').val() : "0.00")
			-
			parseFloat($('#ppcFieldCalls').val() ? $('#ppcFieldCalls').val() : "0.00")
			-
			250).toFixed(2)
		);
		if ($('#lolFieldCalls').val() <= 0) {
			$('#lolAlertCalls').addClass('alert-calls');
			$('#lolCollapse').addClass('show');
		} else {
			$('#lolAlertCalls').removeClass('alert-calls');
			$('#lolCollapse').removeClass('show');
		}
		$('#lolPercFieldCalls').val(
			(parseFloat($('#lolFieldCalls').val() ? $('#lolFieldCalls').val() : "0.00")
			*
			100
			/
			parseFloat($('#oppFieldCalls').val() ? $('#oppFieldCalls').val() : "0.00")).toFixed(1)
		);
		if ($('#lolPercFieldCalls').val() < 30) {
			$('#rspAlertCalls').removeClass('text-muted').addClass('alert-calls');
			$('#rspCollapse').addClass('show');
			$('#lolPercFieldCalls').removeClass('text-muted').addClass('alert-calls bg-warning');
		} else {
			$('#rspAlertCalls').removeClass('alert-calls').addClass('text-muted');
			$('#rspCollapse').removeClass('show');
			$('#lolPercFieldCalls').removeClass('alert-calls bg-warning').addClass('text-muted');
		}
	}
	else {
		$('#lolFieldCalls').val(
			(parseFloat($('#oppFieldCalls').val() ? $('#oppFieldCalls').val() : "0.00")
			-
			parseFloat($('#ppcFieldCalls').val() ? $('#ppcFieldCalls').val() : "0.00")).toFixed(2)
		);
		$('#lolPercFieldCalls').val(
			(parseFloat($('#lolFieldCalls').val() ? $('#lolFieldCalls').val() : "0.00")
			*
			100
			/
			parseFloat($('#oppFieldCalls').val() ? $('#oppFieldCalls').val() : "0.00")).toFixed(1)
		);
		if ($('#lolFieldCalls').val() <= 300) {
			$('#300AlertCalls').addClass('alert-calls');
			$('#300Collapse').addClass('show');
		} else {
			$('#300AlertCalls').removeClass('alert-calls');
			$('#300Collapse').removeClass('show');
		}
	};
};

function calculateTotal() {
	if ($('#rspCheckCalls').prop('checked') && $('#ppcFieldCalls').val() == 0) {
		$('#totalFieldCalls').val(
			(parseFloat($('#partsFieldCalls').val() ? $('#partsFieldCalls').val() : "0.00")
			+
			parseFloat($('#laborFieldCalls').val() ? $('#laborFieldCalls').val() : "0.00")
			+
			parseFloat($('#taxFieldCalls').val() ? $('#taxFieldCalls').val() : "0.00")
			+
			parseFloat($('#mileageFieldCalls').val() ? $('#mileageFieldCalls').val() : "0.00")
			+
			parseFloat($('#miscFieldCalls').val() ? $('#miscFieldCalls').val() : "0.00")
			-
			parseFloat($('#deductibleFieldCalls').val() ? $('#deductibleFieldCalls').val() : "0.00")).toFixed(2)
		);
		$('#totalLolFieldCalls').val(
			(parseFloat($('#lolFieldCalls').val() ? $('#lolFieldCalls').val() : "0.00")
			-
			parseFloat($('#totalFieldCalls').val() ? $('#totalFieldCalls').val() : "0.00")).toFixed(2)
		)
		$('#totalLolPercFieldCalls').val(
			(parseFloat($('#totalLolFieldCalls').val() ? $('#totalLolFieldCalls').val() : "0.00")
			*
			100
			/
			parseFloat($('#oppFieldCalls').val() ? $('#oppFieldCalls').val() : "0.00")).toFixed(1)
		);
		if ($('#totalLolPercFieldCalls').val() < 30) {
			$('#rspAlertCalls').removeClass('text-muted').addClass('alert-calls');
			$('#totalLolPercFieldCalls').removeClass('text-muted').addClass('alert-calls bg-warning');
		}
	}
	else {
		$('#totalFieldCalls').val(
			(parseFloat($('#partsFieldCalls').val() ? $('#partsFieldCalls').val() : "0.00")
			+
			parseFloat($('#laborFieldCalls').val() ? $('#laborFieldCalls').val() : "0.00")
			+
			parseFloat($('#taxFieldCalls').val() ? $('#taxFieldCalls').val() : "0.00")
			+
			parseFloat($('#mileageFieldCalls').val() ? $('#mileageFieldCalls').val() : "0.00")
			+
			parseFloat($('#miscFieldCalls').val() ? $('#miscFieldCalls').val() : "0.00")
			-
			parseFloat($('#deductibleFieldCalls').val() ? $('#deductibleFieldCalls').val() : "0.00")).toFixed(2)
		);
		$('#totalLolFieldCalls').val(
			(parseFloat($('#lolFieldCalls').val() ? $('#lolFieldCalls').val() : "0.00")
			-
			parseFloat($('#totalFieldCalls').val() ? $('#totalFieldCalls').val() : "0.00")).toFixed(2)
		)
		$('#totalLolPercFieldCalls').val(
			(parseFloat($('#totalLolFieldCalls').val() ? $('#totalLolFieldCalls').val() : "0.00")
			*
			100
			/
			parseFloat($('#oppFieldCalls').val() ? $('#oppFieldCalls').val() : "0.00")).toFixed(1)
		);
	}
}

function calculateJfrrRemainder(){
	$('#ppcDIAG').val(
		(parseFloat($('#ppcFieldCalls').val() ? $('#ppcFieldCalls').val() : "0.00")
			+
			parseFloat($('#attemptFieldCalls').val() ? $('#attemptFieldCalls').val() : "0.00")).toFixed(2)
	);
  $('#lolDIAG').val(
    (parseFloat($('#oppFieldCalls').val() ? $('#oppFieldCalls').val() : "0.00")
      -
      parseFloat($('#ppcDIAG').val() ? $('#ppcDIAG').val() : "0.00")).toFixed(2)
    )
};

// Enable/disable "attemptFieldCalls" based on approval selection
function approvalToggle() {
	var appStatus = "APPROVED";
	var appStatusField = $('#approvalSelectCalls').val();
	if (appStatusField === appStatus) {
		$('#attemptFieldCalls').prop( "disabled", true );
	} else {
		$('#attemptFieldCalls').prop( "disabled", false );
	};
};

// Check for alerts
function alertVal() {
	if ($('.alert-calls')[0]) {
		$('#alertModalCalls').modal('show');
	} else {
		formReceiptTemplate();
		otlVal();
		$('#completionModalCalls').modal('show');
	}
}

// Completion receipts for modals
function formReceiptTemplate() {
  $('#est1ReceiptCalls').val(
    Date() + ' '  + $('#soNumberCalls').val()
    +'\n '
    +'\nName of s/p and person supplying estimate: '  + $('#callerNameCalls').val() + ' @ ' + $('#servicerNameCalls').val()
    +'\nModel number: ' + $('#modelNumberCalls').val()
    +'\nSerial number: ' + $('#serialNumberCalls').val()
    +'\nCause of Failure: ' + $('#failureCauseCalls').val()
    +'\nManufacturer\'s Warranty Link: ' + $('#warrantyLinkCalls').val()
    +'\nPlan SKU: ' + $('#skuFieldCalls').val()
    +'\n*If exception exists for this MFG refer service provider to the manufacturer if within exception period.* '
    +'\n '
    +'\nOPP: $'+ $('#oppFieldCalls').val() +' Previous Paid Claims: $'+ $('#ppcFieldCalls').val() +' Limit of Liability: $' + $('#lolFieldCalls').val()
    +'\nWhere were part prices verified: ' + $('#distributorFieldCalls').val()
    +'\nTotal Parts: $'+ $('#partsFieldCalls').val() +' Labor: $'+ $('#laborFieldCalls').val() +' Tax: $' + $('#taxFieldCalls').val()
    +'\nMileage: $' + $('#mileageFieldCalls').val() +' Misc: $'+ $('#miscFieldCalls').val()
    +'\nDeductible (if applicable): $' + $('#deductibleFieldCalls').val()
    +'\nTotal Estimate: $' + $('#totalFieldCalls').val()
    +'\n___________________________'
    +'\nEstimate: ' + $('#approvalSelectCalls').val()
    +'\nAttempted Repair or Diagnostic Fee if Pending: $' + $('#attemptFieldCalls').val()
    +'\nPre-Approval Code: '
    +'\n'
    +'\n"As a reminder, all pre-approvals are contingent upon verification of your contracted or agreed upon service rates. Contracted rates supersede preliminary estimates and approvals".' 
  );
  $('#est1ReceiptCallsJetsons').val(
    Date() + ' '  + $('#soNumberCalls').val()
    +'\n '
    +'\nName of s/p and person supplying estimate: '  + $('#callerNameCalls').val() + ' @ ' + $('#servicerNameCalls').val()
    +'\nModel number: ' + $('#modelNumberCalls').val()
    +'\nSerial number: ' + $('#serialNumberCalls').val()
    +'\nCause of Failure: ' + $('#failureCauseCalls').val()
    +'\nManufacturer\'s Warranty Link: ' + $('#warrantyLinkCalls').val()
    +'\nPlan SKU: ' + $('#skuFieldCalls').val()
    +'\n*If exception exists for this MFG refer service provider to the manufacturer if within exception period.* '
    +'\n '
    +'\nOPP: $'+ $('#oppFieldCalls').val() +' Previous Paid Claims: $'+ $('#ppcFieldCalls').val() +' Limit of Liability: $' + $('#lolFieldCalls').val()
    +'\nWhere were part prices verified: ' + $('#distributorFieldCalls').val()
    +'\nTotal Parts: $'+ $('#partsFieldCalls').val() +' Labor: $'+ $('#laborFieldCalls').val() +' Tax: $' + $('#taxFieldCalls').val()
    +'\nMileage: $' + $('#mileageFieldCalls').val() +' Misc: $'+ $('#miscFieldCalls').val()
    +'\nDeductible (if applicable): $' + $('#deductibleFieldCalls').val()
    +'\nTotal Estimate: $' + $('#totalFieldCalls').val()
    +'\n___________________________'
    +'\nEstimate: ' + $('#approvalSelectCalls').val()
    +'\nAttempted Repair or Diagnostic Fee if Pending: $' + $('#attemptFieldCalls').val()
    +'\nPre-Approval Code: '
    +'\n'
    +'\n"As a reminder, all pre-approvals are contingent upon verification of your contracted or agreed upon service rates. Contracted rates supersede preliminary estimates and approvals."'
    +'\n'
    +'\n**Parts Verification Process**'
    +'\n"Please note, final claim approval is contingent on technician contacting New Leaf through the parts verification line at (855) 868-5820 at the time of service (prior to installing parts) for New Leaf to obtain parts verification by the customer. Additionally, service provider is required to submit a SIGNED Parts Invoice by the customer at completion. FAILURE TO FOLLOW THIS PROCEDURE WILL RESULT IN CLAIM PAYMENT BEING REJECTED."' 
  );
  $('#jfrrReceiptCalls').val(
    Date() + ' '  + $('#soNumberCalls').val()
    +'\n '    
    +'\nJustification for Replacement Review (why) :  '
    +'\nInitial purchase price of unit (OPP): '  + $('#oppFieldCalls').val()
    +'\nAttempted Repair or Diagnostic Fee: ' + $('#attemptFieldCalls').val()
    +'\nTotal of all previous paid, pending and current owed clams: ' + $('#ppcDIAG').val()
    +'\nRemaining LOL: ' + $('#lolDIAG').val()
    +'\n(If Diag was done please enter total amount of estimate here): ' + $('#totalFieldCalls').val()
    +'\nIs Proof of Purchase required? Yes _____        No _____'
    +'\nIf Yes make sure it been received'
    +'\nIf open SO was dispatched you will need to create Sub SO and assigned to Pending Review'
    +'\n '   
    +'\n--------------------------------------------------------------'    
    +'\n '     
  );
}

function appendTemplate(){
    var pasteTime = document.getElementById("est1ReceiptCalls").value;    
    document.getElementById("historyField").value += pasteTime;
    var pasteTime3 = document.getElementById("jfrrReceiptCalls").value;    
    document.getElementById("historyField").value += pasteTime3;
    $('#callsForm').trigger('reset');
	$('.alert-calls').removeClass('alert-calls bg-warning').addClass('text-muted');
  $('#est1ReceiptCallsJetsons').prop('hidden', true);
  $('#est1ReceiptCalls').prop('hidden', false);
}

// 
// EMAILS TAB
// 
// 
// Prevent enter from form submission
$("#emailsForm").submit(function(e){ 
        e.preventDefault();
    });

// Event listeners
$('#spCodeEmails').on('blur',function(){
     spVerification2()
});

$('#skuFieldEmails').on('blur',function(){
	$('#skuAlertEmails').removeClass("alert-emails");
     skuVerification2()
});

$('#ppcFieldEmails').on('blur',function(){
     calculateLiabilities2();
});

$('#oppFieldEmails').on('change',function(){
     calculateLiabilities2();
     calculateTotal2();
});

$('#ppcFieldEmails').on('change',function(){
     calculateLiabilities2();
     calculateTotal2();
});

$('#partsFieldEmails').on('blur',function(){
     calculateTotal2();
});

$('#laborFieldEmails').on('blur',function(){
     calculateTotal2();
});

$('#taxFieldEmails').on('blur',function(){
     calculateTotal2();
});

$('#mileageFieldEmails').on('blur',function(){
     calculateTotal2();
});

$('#miscFieldEmails').on('blur',function(){
     calculateTotal2();
});

$('#deductibleFieldEmails').on('blur',function(){
     calculateTotal2();
});

$('#totalFieldEmails').on('blur',function(){
     calculateTotal2();
});

$('#totalLolFieldEmails').on('blur',function(){
     calculateTotal2();
});

$('#attemptFieldEmails').on('blur',function(){
     calculateTotal2();
     calculateJfrrRemainder2();
});

$('#approvalSelectEmails').on('change', function(){
	approvalToggle2();
})

$('#rspCheckEmails').on('click', function(){
	calculateTotal2();
	calculateLiabilities2();
})

$('#alertVerifiedEmails').on('click',function(){
    if ($('.collapse').hasClass('show')) {
    	alert('Please acknowledge all alerts first');
    } else {
	   	$('#alertModalEmails').modal('hide');
	    formReceiptTemplate2();
	    otlVal2();
	    $('#completionModalEmails').modal('show');
    };
});

$('#extCheckEmails').on('click',function(){
    if ($('#extCheckEmails').prop('checked') == true) {
    	$('#extensionModalEmails').modal('show');
    	$('.mirror2').on('keyup', function(){
  			$('.mirror2').val($(this).val());
		});
		$('#extAlertEmails').addClass('alert-emails');
		$('#extCollapseEmails').addClass('show');
	} else {
		$('#extCollapseEmails').removeClass('show');
		$('#extAlertEmails').removeClass('alert-emails');
	}
});

$('#samCheckEmails').on('click', function(){
	$('#modelNumberEmails').removeClass("alert-emails bg-warning");
	$('#serialNumberEmails').removeClass("alert-emails bg-warning");
	samVal2();
})

// Reset button
$('#resetEmails').on('click', function(){
	$('#emailsForm').trigger('reset');
	$('.alert-emails').removeClass('alert-emails bg-warning').addClass('text-muted');
  $('#est1ReceiptEmailsJetsons').prop('hidden', true);
  $('#est1ReceiptEmails').prop('hidden', false);
})

// Email over limits
$('#emailFormButtonEmails').on('click',function(){
     emailOTL2();
     $('#emailFormButtonEmails').prop('disabled', true);
     $('#emailFormButtonEmails').html("SENT");
});

// OTL ajax and such
function emailOTL2() {
    $.ajax({
      url: 'validator_email',
      type: 'put',
      data: { 
        username: $('#username').val(),
        receipt: $('#est1ReceiptEmails').val(),
        caller_name: $('#callerNameEmails').val(), 
        service_provider: $('#servicerNameEmails').val(), 
        model_number: $('#modelNumberEmails').val(), 
        serial_number: $('#serialNumberEmails').val(), 
        failure_cause: $('#failureCauseEmails').val(), 
        warranty_link: $('#warrantyLinkEmails').val(), 
        sku: $('#skuFieldEmails').val(), 
        opp: $('#oppFieldEmails').val(), 
        ppc: $('#ppcFieldEmails').val(),
        lol: $('#lolFieldEmails').val(),
        distributor: $('#distributorFieldEmails').val(),
        total_parts: $('#partsFieldEmails').val(),
        total_labor: $('#laborFieldEmails').val(),
        total_tax: $('#taxFieldEmails').val(),
        total_mileage: $('#mileageFieldEmails').val(),
        total_misc: $('#miscFieldEmails').val(),
        total_deductible: $('#deductibleFieldEmails').val(),
        total_estimate: $('#totalFieldEmails').val(),
        approved: $('#approvalSelectEmails').val(),
        diagnostic: $('#attemptFieldEmails').val(),
        serviceorder: $('#soNumberEmails').val() 
      }
    })
}

function otlVal2() {
  if ($('#totalFieldEmails').val() > 849.99) {
    $('#emailFormButtonEmails').prop('hidden', false)
  } else {
    $('#emailFormButtonEmails').prop('hidden', true)
  }
}

// Samsung model/serial verification to see if it lands under the ice maker warranty
function samVal2() {
	var modVal2 = $('#modelNumberEmails').val();
	var serVal2 = $('#serialNumberEmails').val();
	var aVal2 = a2();
	function a2() {
    	var snArray2 = ['HC', 'J1', 'J2', 'J3', 'J4', 'J5', 'J6', 'J7', 'J8', 'J9'];
    	for (var i = 0; i < snArray2.length; i++) {
    		if ((serVal2.toUpperCase().includes(snArray2[i], 5) === true) && (modVal2.toUpperCase().includes("RF", 0-2) == true)) {
        		$('#modelNumberEmails').addClass("alert-emails");
            $('#serialNumberEmails').addClass("alert-emails"); 
        		$('#samAlertEmails').addClass("alert-emails");
            $('#samCollapseEmails').addClass('show'); 
    		};
    	};
	};
};

//SKU Verification
function skuVerification2() {
    var triggerWords2 = ['MJC5', 'GMJC5', 'MJC10', 'MJC5-V', 'MJC10-NC', 'MJC210', 'D-MJC10', 'D-MJC210', 'MJR10', 'MJC5E', 'MJC5-NC', 'MJC8', 'MJC10-NL', 'NLMJC10', 'GMJC10', 'MJC10NLF', 'MJR5', 'RPL1U50', 'RPL1U100', 'RPL1U200', 'RPL1U300', 'RPL1U400', 'RPL1U500', 'RPL1U750', 'RPL1U1000', 'RPL2U50', 'RPL2U100', 'RPL2U200', 'RPL2U300', 'RPL2U400', 'RPL2U500', 'RPL2U1000'];
    for (var i = 0; i < triggerWords2.length; i++) {
        if ($('#skuFieldEmails').val().toUpperCase() == triggerWords2[i]) {
            $('#skuAlertEmails').addClass("alert-emails");
            $('#skuCollapseEmails').addClass('show');
        }
    }; 
};

//SP Verification
function spVerification2() {
    var triggerCodes2 = ['SP-NL-AMEX', 'S-SEAN-HIC'];
    var jetsonCode2 = 'S-1004-JET';
    for (var i = 0; i < triggerCodes2.length; i++) {
        if ($('#spCodeEmails').val().toUpperCase() == triggerCodes2[i] || $('#spCodeEmails').val().toUpperCase() == (" " + triggerCodes2[i])) {
            alert('Credit Card Provider, fill out credit card tab'); 
        } else if ($('#spCodeEmails').val().toUpperCase() == jetsonCode2 || $('#spCodeEmails').val().toUpperCase() == (" " + jetsonCode2)) {
        	$('#est1ReceiptEmailsJetsons').prop('hidden', false);
        	$('#est1ReceiptEmails').prop('hidden', true);
        } else {
        	$('#est1ReceiptEmailsJetsons').prop('hidden', true);
        	$('#est1ReceiptEmails').prop('hidden', false);
        }; 
	}; 
};

// Limit of Liability calculations "calculateLiabilities" & "calculateTotal"
function calculateLiabilities2() {
	if ($('#rspCheckEmails').prop('checked') && $('#ppcFieldEmails').val() > 0) {
		$('#lolFieldEmails').val(
			(parseFloat($('#oppFieldEmails').val() ? $('#oppFieldEmails').val() : "0.00")
			-
			parseFloat($('#ppcFieldEmails').val() ? $('#ppcFieldEmails').val() : "0.00")
			-
			250).toFixed(2)
		);
		if ($('#lolFieldEmails').val() <= 0) {
			$('#lolAlertEmails').addClass('alert-emails');
			$('#lolCollapseEmails').addClass('show');
		} else {
			$('#lolAlertEmails').removeClass('alert-emails');
			$('#lolCollapseEmails').removeClass('show');
		}
		$('#lolPercFieldEmails').val(
			(parseFloat($('#lolFieldEmails').val() ? $('#lolFieldEmails').val() : "0.00")
			*
			100
			/
			parseFloat($('#oppFieldEmails').val() ? $('#oppFieldEmails').val() : "0.00")).toFixed(1)
		);
		if ($('#lolPercFieldEmails').val() < 30) {
			$('#rspAlertEmails').removeClass('text-muted').addClass('alert-emails');
			$('#rspCollapseEmails').addClass('show');
			$('#lolPercFieldEmails').removeClass('text-muted').addClass('alert-emails bg-warning');
		} else {
			$('#rspAlertEmails').removeClass('alert-emails').addClass('text-muted');
			$('#rspCollapseEmails').removeClass('show');
			$('#lolPercFieldEmails').removeClass('alert-emails bg-warning').addClass('text-muted');
		}
	}
	else {
		$('#lolFieldEmails').val(
			(parseFloat($('#oppFieldEmails').val() ? $('#oppFieldEmails').val() : "0.00")
			-
			parseFloat($('#ppcFieldEmails').val() ? $('#ppcFieldEmails').val() : "0.00")).toFixed(2)
		);
		$('#lolPercFieldEmails').val(
			(parseFloat($('#lolFieldEmails').val() ? $('#lolFieldEmails').val() : "0.00")
			*
			100
			/
			parseFloat($('#oppFieldEmails').val() ? $('#oppFieldEmails').val() : "0.00")).toFixed(1)
		);
		if ($('#lolFieldEmails').val() <= 300) {
			$('#300AlertEmails').addClass('alert-emails');
			$('#300CollapseEmails').addClass('show');
		} else {
			$('#300AlertEmails').removeClass('alert-emails');
			$('#300CollapseEmails').removeClass('show');
		}
	};
};

function calculateTotal2() {
	if ($('#rspCheckEmails').prop('checked') && $('#ppcFieldEmails').val() == 0) {
		$('#totalFieldEmails').val(
			(parseFloat($('#partsFieldEmails').val() ? $('#partsFieldEmails').val() : "0.00")
			+
			parseFloat($('#laborFieldEmails').val() ? $('#laborFieldEmails').val() : "0.00")
			+
			parseFloat($('#taxFieldEmails').val() ? $('#taxFieldEmails').val() : "0.00")
			+
			parseFloat($('#mileageFieldEmails').val() ? $('#mileageFieldEmails').val() : "0.00")
			+
			parseFloat($('#miscFieldEmails').val() ? $('#miscFieldEmails').val() : "0.00")
			-
			parseFloat($('#deductibleFieldEmails').val() ? $('#deductibleFieldEmails').val() : "0.00")).toFixed(2)
		);
		$('#totalLolFieldEmails').val(
			(parseFloat($('#lolFieldEmails').val() ? $('#lolFieldEmails').val() : "0.00")
			-
			parseFloat($('#totalFieldEmails').val() ? $('#totalFieldEmails').val() : "0.00")).toFixed(2)
		)
		$('#totalLolPercFieldEmails').val(
			(parseFloat($('#totalLolFieldEmails').val() ? $('#totalLolFieldEmails').val() : "0.00")
			*
			100
			/
			parseFloat($('#oppFieldEmails').val() ? $('#oppFieldEmails').val() : "0.00")).toFixed(1)
		);
		if ($('#totalLolPercFieldEmails').val() < 30) {
			$('#rspAlertCallsEmails').removeClass('text-muted').addClass('alert-emails');
			$('#totalLolPercFieldEmails').removeClass('text-muted').addClass('alert-emails bg-warning');
		}
	}
	else {
		$('#totalFieldEmails').val(
			(parseFloat($('#partsFieldEmails').val() ? $('#partsFieldEmails').val() : "0.00")
			+
			parseFloat($('#laborFieldEmails').val() ? $('#laborFieldEmails').val() : "0.00")
			+
			parseFloat($('#taxFieldEmails').val() ? $('#taxFieldEmails').val() : "0.00")
			+
			parseFloat($('#mileageFieldEmails').val() ? $('#mileageFieldEmails').val() : "0.00")
			+
			parseFloat($('#miscFieldEmails').val() ? $('#miscFieldEmails').val() : "0.00")
			-
			parseFloat($('#deductibleFieldEmails').val() ? $('#deductibleFieldEmails').val() : "0.00")).toFixed(2)
		);
		$('#totalLolFieldEmails').val(
			(parseFloat($('#lolFieldEmails').val() ? $('#lolFieldEmails').val() : "0.00")
			-
			parseFloat($('#totalFieldEmails').val() ? $('#totalFieldEmails').val() : "0.00")).toFixed(2)
		)
		$('#totalLolPercFieldEmails').val(
			(parseFloat($('#totalLolFieldEmails').val() ? $('#totalLolFieldEmails').val() : "0.00")
			*
			100
			/
			parseFloat($('#oppFieldEmails').val() ? $('#oppFieldEmails').val() : "0.00")).toFixed(1)
		);
	}
}

function calculateJfrrRemainder2(){
	$('#ppcDIAGEmails').val(
		(parseFloat($('#ppcFieldEmails').val() ? $('#ppcFieldEmails').val() : "0.00")
			+
			parseFloat($('#attemptFieldEmails').val() ? $('#attemptFieldEmails').val() : "0.00")).toFixed(2)
	);
  $('#lolDIAGEmails').val(
    (parseFloat($('#oppFieldEmails').val() ? $('#oppFieldEmails').val() : "0.00")
      -
      parseFloat($('#ppcDIAGEmails').val() ? $('#ppcDIAGEmails').val() : "0.00")).toFixed(2)
    )
};

// Enable/disable "attemptFieldCalls" based on approval selection
function approvalToggle2() {
	var appStatus2 = "APPROVED";
	var appStatusField2 = $('#approvalSelectEmails').val();
	if (appStatusField2 === appStatus2) {
		$('#attemptFieldEmails').prop( "disabled", true );
	} else {
		$('#attemptFieldEmails').prop( "disabled", false );
	};
};

// Check for alerts
function alertVal2() {
	if ($('.alert-emails')[0]) {
		$('#alertModalEmails').modal('show');
	} else {
		formReceiptTemplate2();
		otlVal2();
		$('#completionModalEmails').modal('show');
	}
}

// Completion receipts for modals
function formReceiptTemplate2() {
  $('#est1ReceiptEmails').val(
    Date() + ' '  + $('#soNumberEmails').val()
    +'\n '
    +'\nName of s/p and person supplying estimate: '  + $('#callerNameEmails').val() + ' @ ' + $('#servicerNameEmails').val()
    +'\nModel number: ' + $('#modelNumberEmails').val()
    +'\nSerial number: ' + $('#serialNumberEmails').val()
    +'\nCause of Failure: ' + $('#failureCauseEmails').val()
    +'\nManufacturer\'s Warranty Link: ' + $('#warrantyLinkEmails').val()
    +'\nPlan SKU: ' + $('#skuFieldEmails').val()
    +'\n*If exception exists for this MFG refer service provider to the manufacturer if within exception period.* '
    +'\n '
    +'\nOPP: $'+ $('#oppFieldEmails').val() +' Previous Paid Claims: $'+ $('#ppcFieldEmails').val() +' Limit of Liability: $' + $('#lolFieldEmails').val()
    +'\nWhere were part prices verified: ' + $('#distributorFieldEmails').val()
    +'\nTotal Parts: $'+ $('#partsFieldEmails').val() +' Labor: $'+ $('#laborFieldEmails').val() +' Tax: $' + $('#taxFieldEmails').val()
    +'\nMileage: $' + $('#mileageFieldEmails').val() +' Misc: $'+ $('#miscFieldEmails').val()
    +'\nDeductible (if applicable): $' + $('#deductibleFieldEmails').val()
    +'\nTotal Estimate: $' + $('#totalFieldEmails').val()
    +'\n___________________________'
    +'\nEstimate: ' + $('#approvalSelectEmails').val()
    +'\nAttempted Repair or Diagnostic Fee if Pending: $' + $('#attemptFieldEmails').val()
    +'\nPre-Approval Code: '
    +'\n'
    +'\n"As a reminder, all pre-approvals are contingent upon verification of your contracted or agreed upon service rates. Contracted rates supersede preliminary estimates and approvals".' 
  );
  $('#est1ReceiptEmailsJetsons').val(
    Date() + ' '  + $('#soNumberEmails').val()
    +'\n '
    +'\nName of s/p and person supplying estimate: '  + $('#callerNameEmails').val() + ' @ ' + $('#servicerNameEmails').val()
    +'\nModel number: ' + $('#modelNumberEmails').val()
    +'\nSerial number: ' + $('#serialNumberEmails').val()
    +'\nCause of Failure: ' + $('#failureCauseEmails').val()
    +'\nManufacturer\'s Warranty Link: ' + $('#warrantyLinkEmails').val()
    +'\nPlan SKU: ' + $('#skuFieldEmails').val()
    +'\n*If exception exists for this MFG refer service provider to the manufacturer if within exception period.* '
    +'\n '
    +'\nOPP: $'+ $('#oppFieldEmails').val() +' Previous Paid Claims: $'+ $('#ppcFieldEmails').val() +' Limit of Liability: $' + $('#lolFieldEmails').val()
    +'\nWhere were part prices verified: ' + $('#distributorFieldEmails').val()
    +'\nTotal Parts: $'+ $('#partsFieldEmails').val() +' Labor: $'+ $('#laborFieldEmails').val() +' Tax: $' + $('#taxFieldEmails').val()
    +'\nMileage: $' + $('#mileageFieldEmails').val() +' Misc: $'+ $('#miscFieldEmails').val()
    +'\nDeductible (if applicable): $' + $('#deductibleFieldEmails').val()
    +'\nTotal Estimate: $' + $('#totalFieldEmails').val()
    +'\n___________________________'
    +'\nEstimate: ' + $('#approvalSelectEmails').val()
    +'\nAttempted Repair or Diagnostic Fee if Pending: $' + $('#attemptFieldEmails').val()
    +'\nPre-Approval Code: '
    +'\n'
    +'\n"As a reminder, all pre-approvals are contingent upon verification of your contracted or agreed upon service rates. Contracted rates supersede preliminary estimates and approvals.' 
    +'\n'
    +'\n**Parts Verification Process**'
    +'\n"Please note, final claim approval is contingent on technician contacting New Leaf through the parts verification line at (855) 868-5820 at the time of service (prior to installing parts) for New Leaf to obtain parts verification by the customer. Additionally, service provider is required to submit a SIGNED Parts Invoice by the customer at completion. FAILURE TO FOLLOW THIS PROCEDURE WILL RESULT IN CLAIM PAYMENT BEING REJECTED."' 
   );
  $('#jfrrReceiptEmails').val(
    Date() + ' '  + $('#soNumberEmails').val()
    +'\n '    
    +'\nJustification for Replacement Review (why) :  '
    +'\nInitial purchase price of unit (OPP): '  + $('#oppFieldEmails').val()
    +'\nAttempted Repair or Diagnostic Fee: ' + $('#attemptFieldEmails').val()
    +'\nTotal of all previous paid, pending and current owed clams: ' + $('#ppcDIAGEmails').val()
    +'\nRemaining LOL: ' + $('#lolDIAGEmails').val()
    +'\n(If Diag was done please enter total amount of estimate here): ' + $('#totalFieldEmails').val()
    +'\nIs Proof of Purchase required? Yes _____        No _____'
    +'\nIf Yes make sure it been received'
    +'\nIf open SO was dispatched you will need to create Sub SO and assigned to Pending Review'
    +'\n '   
    +'\n--------------------------------------------------------------'    
    +'\n '     
  );
}

function appendTemplate2(){
    var pasteTime2 = document.getElementById("est1ReceiptEmails").value;    
    document.getElementById("historyField").value += pasteTime2;
    var pasteTime4 = document.getElementById("jfrrReceiptEmails").value;    
    document.getElementById("historyField").value += pasteTime4;
    $('#emailsForm').trigger('reset');
	$('.alert-emails').removeClass('alert-emails bg-warning').addClass('text-muted');
  $('#est1ReceiptEmailsJetsons').prop('hidden', true);
  $('#est1ReceiptEmails').prop('hidden', false);
}
;
/*!
	Autosize v1.18.9 - 2014-05-27
	Automatically adjust textarea height based on user input.
	(c) 2014 Jack Moore - http://www.jacklmoore.com/autosize
	license: http://www.opensource.org/licenses/mit-license.php
*/

(function ($) {
    'use strict';
	var	defaults = {
		className: 'autosizejs',
		id: 'autosizejs',
		append: '\n',
		callback: false,
		resizeDelay: 10,
		placeholder: true
	},

	// border:0 is unnecessary, but avoids a bug in Firefox on OSX
	copy = '<textarea tabindex="-1" style="position:absolute; top:-999px; left:0; right:auto; bottom:auto; border:0; padding: 0; -moz-box-sizing:content-box; -webkit-box-sizing:content-box; box-sizing:content-box; word-wrap:break-word; height:0 !important; min-height:0 !important; overflow:hidden; transition:none; -webkit-transition:none; -moz-transition:none;"/>',

	// line-height is conditionally included because IE7/IE8/old Opera do not return the correct value.
	typographyStyles = [
		'fontFamily',
		'fontSize',
		'fontWeight',
		'fontStyle',
		'letterSpacing',
		'textTransform',
		'wordSpacing',
		'textIndent'
	],

	// to keep track which textarea is being mirrored when adjust() is called.
	mirrored,

	// the mirror element, which is used to calculate what size the mirrored element should be.
	mirror = $(copy).data('autosize', true)[0];

	// test that line-height can be accurately copied.
	mirror.style.lineHeight = '99px';
	if ($(mirror).css('lineHeight') === '99px') {
		typographyStyles.push('lineHeight');
	}
	mirror.style.lineHeight = '';

	$.fn.autosize = function (options) {
		if (!this.length) {
			return this;
		}

		options = $.extend({}, defaults, options || {});

		if (mirror.parentNode !== document.body) {
			$(document.body).append(mirror);
		}

		return this.each(function () {
			var
			ta = this,
			$ta = $(ta),
			maxHeight,
			minHeight,
			boxOffset = 0,
			callback = $.isFunction(options.callback),
			originalStyles = {
				height: ta.style.height,
				overflow: ta.style.overflow,
				overflowY: ta.style.overflowY,
				wordWrap: ta.style.wordWrap,
				resize: ta.style.resize
			},
			timeout,
			width = $ta.width(),
			taResize = $ta.css('resize');

			if ($ta.data('autosize')) {
				// exit if autosize has already been applied, or if the textarea is the mirror element.
				return;
			}
			$ta.data('autosize', true);

			if ($ta.css('box-sizing') === 'border-box' || $ta.css('-moz-box-sizing') === 'border-box' || $ta.css('-webkit-box-sizing') === 'border-box'){
				boxOffset = $ta.outerHeight() - $ta.height();
			}

			// IE8 and lower return 'auto', which parses to NaN, if no min-height is set.
			minHeight = Math.max(parseInt($ta.css('minHeight'), 10) - boxOffset || 0, $ta.height());

			$ta.css({
				overflow: 'hidden',
				overflowY: 'hidden',
				wordWrap: 'break-word' // horizontal overflow is hidden, so break-word is necessary for handling words longer than the textarea width
			});

			if (taResize === 'vertical') {
				$ta.css('resize','none');
			} else if (taResize === 'both') {
				$ta.css('resize', 'horizontal');
			}

			// The mirror width must exactly match the textarea width, so using getBoundingClientRect because it doesn't round the sub-pixel value.
			// window.getComputedStyle, getBoundingClientRect returning a width are unsupported, but also unneeded in IE8 and lower.
			function setWidth() {
				var width;
				var style = window.getComputedStyle ? window.getComputedStyle(ta, null) : false;
				
				if (style) {

					width = ta.getBoundingClientRect().width;

					if (width === 0 || typeof width !== 'number') {
						width = parseInt(style.width,10);
					}

					$.each(['paddingLeft', 'paddingRight', 'borderLeftWidth', 'borderRightWidth'], function(i,val){
						width -= parseInt(style[val],10);
					});
				} else {
					width = $ta.width();
				}

				mirror.style.width = Math.max(width,0) + 'px';
			}

			function initMirror() {
				var styles = {};

				mirrored = ta;
				mirror.className = options.className;
				mirror.id = options.id;
				maxHeight = parseInt($ta.css('maxHeight'), 10);

				// mirror is a duplicate textarea located off-screen that
				// is automatically updated to contain the same text as the
				// original textarea.  mirror always has a height of 0.
				// This gives a cross-browser supported way getting the actual
				// height of the text, through the scrollTop property.
				$.each(typographyStyles, function(i,val){
					styles[val] = $ta.css(val);
				});
				
				$(mirror).css(styles).attr('wrap', $ta.attr('wrap'));

				setWidth();

				// Chrome-specific fix:
				// When the textarea y-overflow is hidden, Chrome doesn't reflow the text to account for the space
				// made available by removing the scrollbar. This workaround triggers the reflow for Chrome.
				if (window.chrome) {
					var width = ta.style.width;
					ta.style.width = '0px';
					var ignore = ta.offsetWidth;
					ta.style.width = width;
				}
			}

			// Using mainly bare JS in this function because it is going
			// to fire very often while typing, and needs to very efficient.
			function adjust() {
				var height, original;

				if (mirrored !== ta) {
					initMirror();
				} else {
					setWidth();
				}

				if (!ta.value && options.placeholder) {
					// If the textarea is empty, copy the placeholder text into 
					// the mirror control and use that for sizing so that we 
					// don't end up with placeholder getting trimmed.
					mirror.value = ($ta.attr("placeholder") || '') + options.append;
				} else {
					mirror.value = ta.value + options.append;
				}

				mirror.style.overflowY = ta.style.overflowY;
				original = parseInt(ta.style.height,10);

				// Setting scrollTop to zero is needed in IE8 and lower for the next step to be accurately applied
				mirror.scrollTop = 0;

				mirror.scrollTop = 9e4;

				// Using scrollTop rather than scrollHeight because scrollHeight is non-standard and includes padding.
				height = mirror.scrollTop;

				if (maxHeight && height > maxHeight) {
					ta.style.overflowY = 'scroll';
					height = maxHeight;
				} else {
					ta.style.overflowY = 'hidden';
					if (height < minHeight) {
						height = minHeight;
					}
				}

				height += boxOffset;

				if (original !== height) {
					ta.style.height = height + 'px';
					if (callback) {
						options.callback.call(ta,ta);
					}
				}
			}

			function resize () {
				clearTimeout(timeout);
				timeout = setTimeout(function(){
					var newWidth = $ta.width();

					if (newWidth !== width) {
						width = newWidth;
						adjust();
					}
				}, parseInt(options.resizeDelay,10));
			}

			if ('onpropertychange' in ta) {
				if ('oninput' in ta) {
					// Detects IE9.  IE9 does not fire onpropertychange or oninput for deletions,
					// so binding to onkeyup to catch most of those occasions.  There is no way that I
					// know of to detect something like 'cut' in IE9.
					$ta.on('input.autosize keyup.autosize', adjust);
				} else {
					// IE7 / IE8
					$ta.on('propertychange.autosize', function(){
						if(event.propertyName === 'value'){
							adjust();
						}
					});
				}
			} else {
				// Modern Browsers
				$ta.on('input.autosize', adjust);
			}

			// Set options.resizeDelay to false if using fixed-width textarea elements.
			// Uses a timeout and width check to reduce the amount of times adjust needs to be called after window resize.

			if (options.resizeDelay !== false) {
				$(window).on('resize.autosize', resize);
			}

			// Event for manual triggering if needed.
			// Should only be needed when the value of the textarea is changed through JavaScript rather than user input.
			$ta.on('autosize.resize', adjust);

			// Event for manual triggering that also forces the styles to update as well.
			// Should only be needed if one of typography styles of the textarea change, and the textarea is already the target of the adjust method.
			$ta.on('autosize.resizeIncludeStyle', function() {
				mirrored = null;
				adjust();
			});

			$ta.on('autosize.destroy', function(){
				mirrored = null;
				clearTimeout(timeout);
				$(window).off('resize', resize);
				$ta
					.off('autosize')
					.off('.autosize')
					.css(originalStyles)
					.removeData('autosize');
			});

			// Call adjust in case the textarea already contains text.
			adjust();
		});
	};
}(window.jQuery || window.$)); // jQuery or jQuery-like library, such as Zepto
;
/*
 * BestInPlace (for jQuery)
 * version: 3.0.0.alpha (2014)
 *
 * By Bernat Farrero based on the work of Jan Varwig.
 * Examples at http://bernatfarrero.com
 *
 * Licensed under the MIT:
 * http://www.opensource.org/licenses/mit-license.php
 *
 * @requires jQuery
 *
 * Usage:
 *
 * Attention.
 * The format of the JSON object given to the select inputs is the following:
 * [["key", "value"],["key", "value"]]
 * The format of the JSON object given to the checkbox inputs is the following:
 * ["falseValue", "trueValue"]

 */


function BestInPlaceEditor(e) {
    'use strict';
    this.element = e;
    this.initOptions();
    this.bindForm();
    this.initPlaceHolder();
    jQuery(this.activator).bind('click', {editor: this}, this.clickHandler);
}

BestInPlaceEditor.prototype = {
    // Public Interface Functions //////////////////////////////////////////////

    activate: function () {
        'use strict';
        var to_display;
        if (this.isPlaceHolder()) {
            to_display = "";
        } else if (this.original_content) {
            to_display = this.original_content;
        } else {
            switch (this.formType) {
                case 'input':
                case 'textarea':
                    if (this.display_raw) {
                        to_display = this.element.html().replace(/&amp;/gi, '&');
                    }
                    else {
                        var value = this.element.data('bipValue');
                        if (typeof value === 'undefined') {
                            to_display = '';
                        } else if (typeof value === 'string') {
                            to_display = this.element.data('bipValue').replace(/&amp;/gi, '&');
                        } else {
                            to_display = this.element.data('bipValue');
                        }
                    }
                    break;
                case 'select':
                    to_display = this.element.html();

            }
        }

        this.oldValue = this.isPlaceHolder() ? "" : this.element.html();
        this.display_value = to_display;
        jQuery(this.activator).unbind("click", this.clickHandler);
        this.activateForm();
        this.element.trigger(jQuery.Event("best_in_place:activate"));
    },

    abort: function () {
        'use strict';
        this.activateText(this.oldValue);
        jQuery(this.activator).bind('click', {editor: this}, this.clickHandler);
        this.element.trigger(jQuery.Event("best_in_place:abort"));
        this.element.trigger(jQuery.Event("best_in_place:deactivate"));
    },

    abortIfConfirm: function () {
        'use strict';
        if (!this.useConfirm) {
            this.abort();
            return;
        }

        if (confirm(BestInPlaceEditor.defaults.locales[''].confirmMessage)) {
            this.abort();
        }
    },

    update: function () {
        'use strict';
        var editor = this,
            value = this.getValue();

        // Avoid request if no change is made
        if (this.formType in {"input": 1, "textarea": 1} && value === this.oldValue) {
            this.abort();
            return true;
        }

        editor.ajax({
            "type": BestInPlaceEditor.defaults.ajaxMethod,
            "dataType": BestInPlaceEditor.defaults.ajaxDataType,
            "data": editor.requestData(),
            "success": function (data, status, xhr) {
                editor.loadSuccessCallback(data, status, xhr);
            },
            "error": function (request, error) {
                editor.loadErrorCallback(request, error);
            }
        });


        switch (this.formType) {
            case "select":
                this.previousCollectionValue = value;

                // search for the text for the span
                editor.element.html(this.arrayToObject(this.values)[value]);
                break;

            case "checkbox":
                editor.element.html(this.arrayToObject(this.values)[value]);
                break;

            default:
                if (value !== "") {
                    if (this.display_raw) {
                        editor.element.html(value);
                    } else {
                        editor.element.text(value);
                    }
                } else {
                    editor.element.html(this.placeHolder);
                }
        }

        editor.element.data('bipValue', value);

        editor.element.trigger(jQuery.Event("best_in_place:update"));


    },

    activateForm: function () {
        'use strict';
        alert(BestInPlaceEditor.defaults.locales[''].uninitializedForm);
    },

    activateText: function (value) {
        'use strict';
        this.element.html(value);
        if (this.isPlaceHolder()) {
            this.element.html(this.placeHolder);
        }
    },

    // Helper Functions ////////////////////////////////////////////////////////

    initOptions: function () {
        // Try parent supplied info
        'use strict';
        var self = this;
        self.element.parents().each(function () {
            var $parent = jQuery(this);
            self.url = self.url || $parent.data("bipUrl");
            self.activator = self.activator || $parent.data("bipActivator");
            self.okButton = self.okButton || $parent.data("bipOkButton");
            self.okButtonClass = self.okButtonClass || $parent.data("bipOkButtonClass");
            self.cancelButton = self.cancelButton || $parent.data("bipCancelButton");
            self.cancelButtonClass = self.cancelButtonClass || $parent.data("bipCancelButtonClass");
        });

        // Load own attributes (overrides all others)
        self.url = self.element.data("bipUrl") || self.url || document.location.pathname;
        self.collection = self.element.data("bipCollection") || self.collection;
        self.formType = self.element.data("bipType") || "input";
        self.objectName = self.element.data("bipObject") || self.objectName;
        self.attributeName = self.element.data("bipAttribute") || self.attributeName;
        self.activator = self.element.data("bipActivator") || self.element;
        self.okButton = self.element.data("bipOkButton") || self.okButton;
        self.okButtonClass = self.element.data("bipOkButtonClass") || self.okButtonClass || BestInPlaceEditor.defaults.okButtonClass;
        self.cancelButton = self.element.data("bipCancelButton") || self.cancelButton;
        self.cancelButtonClass = self.element.data("bipCancelButtonClass") || self.cancelButtonClass || BestInPlaceEditor.defaults.cancelButtonClass;
        
        // Fix for default values of 0
        if (self.element.data("bipPlaceholder") == null) {
          self.placeHolder = BestInPlaceEditor.defaults.locales[''].placeHolder;
        } else {
          self.placeHolder = self.element.data("bipPlaceholder");
        }
        
        self.inner_class = self.element.data("bipInnerClass");
        self.html_attrs = self.element.data("bipHtmlAttrs");
        self.original_content = self.element.data("bipOriginalContent") || self.original_content;
        
        // if set the input won't be satinized
        self.display_raw = self.element.data("bip-raw");

        self.useConfirm = self.element.data("bip-confirm");

        if (self.formType === "select" || self.formType === "checkbox") {
            self.values = self.collection;
            self.collectionValue = self.element.data("bipValue") || self.collectionValue;
        }
    },

    bindForm: function () {
        'use strict';
        this.activateForm = BestInPlaceEditor.forms[this.formType].activateForm;
        this.getValue = BestInPlaceEditor.forms[this.formType].getValue;
    },


    initPlaceHolder: function () {
        'use strict';
        // TODO add placeholder for select and checkbox
        if (this.element.html() === "") {
            this.element.html(this.placeHolder);
        }
    },

    isPlaceHolder: function () {
        'use strict';
        // TODO: It only work when form is deactivated.
        // Condition will fail when form is activated
        return this.element.html() === "" || this.element.html() === this.placeHolder;
    },

    getValue: function () {
        'use strict';
        alert(BestInPlaceEditor.defaults.locales[''].uninitializedForm);
    },

    arrayToObject: function(list, values) {
        if (list == null) return {};
        var result = {};
        for (var i = 0, length = list.length; i < length; i++) {
            if (values) {
                result[list[i]] = values[i];
            } else {
                result[list[i][0]] = list[i][1];
            }
        }
        return result;
    },

    // Trim and Strips HTML from text
    sanitizeValue: function (s) {
        'use strict';
        return jQuery.trim(s);
    },

    /* Generate the data sent in the POST request */
    requestData: function () {
        'use strict';
        // To prevent xss attacks, a csrf token must be defined as a meta attribute
        var csrf_token = jQuery('meta[name=csrf-token]').attr('content'),
            csrf_param = jQuery('meta[name=csrf-param]').attr('content');

        var data = "_method=" + BestInPlaceEditor.defaults.ajaxMethod;
        data += "&" + this.objectName + '[' + this.attributeName + ']=' + encodeURIComponent(this.getValue());

        if (csrf_param !== undefined && csrf_token !== undefined) {
            data += "&" + csrf_param + "=" + encodeURIComponent(csrf_token);
        }
        return data;
    },

    ajax: function (options) {
        'use strict';
        options.url = this.url;
        options.beforeSend = function (xhr) {
            xhr.setRequestHeader("Accept", "application/json");
        };
        return jQuery.ajax(options);
    },

    // Handlers ////////////////////////////////////////////////////////////////

    loadSuccessCallback: function (data, status, xhr) {
        'use strict';
        data = jQuery.trim(data);
        //Update original content with current text.
        if (this.display_raw) {
          this.original_content = this.element.html();
        } else {
          this.original_content = this.element.text();
        }

        if (data && data !== "") {
            var response = jQuery.parseJSON(data);
            if (response !== null && response.hasOwnProperty("display_as")) {
                this.element.data('bip-original-content', this.element.text());
                this.element.html(response.display_as);
            }
        }

        this.element.trigger(jQuery.Event("best_in_place:success"), [data, status, xhr]);
        this.element.trigger(jQuery.Event("ajax:success"), [data, status, xhr]);

        // Binding back after being clicked
        jQuery(this.activator).bind('click', {editor: this}, this.clickHandler);
        this.element.trigger(jQuery.Event("best_in_place:deactivate"));

        if (this.collectionValue !== null && this.formType === "select") {
            this.collectionValue = this.previousCollectionValue;
            this.previousCollectionValue = null;
        }
    },

    loadErrorCallback: function (request, error) {
        'use strict';
        this.activateText(this.oldValue);

        this.element.trigger(jQuery.Event("best_in_place:error"), [request, error]);
        this.element.trigger(jQuery.Event("ajax:error"), request, error);

        // Binding back after being clicked
        jQuery(this.activator).bind('click', {editor: this}, this.clickHandler);
        this.element.trigger(jQuery.Event("best_in_place:deactivate"));
    },

    clickHandler: function (event) {
        'use strict';
        event.preventDefault();
        event.data.editor.activate();
    },

    setHtmlAttributes: function () {
        'use strict';
        var formField = this.element.find(this.formType);

        if (this.html_attrs) {
            var attrs = this.html_attrs;
            $.each(attrs, function (key, val) {
                formField.attr(key, val);
            });
        }
    },

    placeButtons: function (output, field) {
        'use strict';
        if (field.okButton) {
            output.append(
                jQuery(document.createElement('input'))
                    .attr('type', 'submit')
                    .attr('class', field.okButtonClass)
                    .attr('value', field.okButton)
            );
        }
        if (field.cancelButton) {
            output.append(
                jQuery(document.createElement('input'))
                    .attr('type', 'button')
                    .attr('class', field.cancelButtonClass)
                    .attr('value', field.cancelButton)
            );
        }
    }
};


// Button cases:
// If no buttons, then blur saves, ESC cancels
// If just Cancel button, then blur saves, ESC or clicking Cancel cancels (careful of blur event!)
// If just OK button, then clicking OK saves (careful of blur event!), ESC or blur cancels
// If both buttons, then clicking OK saves, ESC or clicking Cancel or blur cancels
BestInPlaceEditor.forms = {
    "input": {
        activateForm: function () {
            'use strict';
            var output = jQuery(document.createElement('form'))
                .addClass('form_in_place')
                .attr('action', 'javascript:void(0);')
                .attr('style', 'display:inline');
            var input_elt = jQuery(document.createElement('input'))
                .attr('type', 'text')
                .attr('name', this.attributeName)
                .val(this.display_value);

            // Add class to form input
            if (this.inner_class) {
                input_elt.addClass(this.inner_class);
            }

            output.append(input_elt);
            this.placeButtons(output, this);

            this.element.html(output);
            this.setHtmlAttributes();

            this.element.find("input[type='text']")[0].select();
            this.element.find("form").bind('submit', {editor: this}, BestInPlaceEditor.forms.input.submitHandler);
            if (this.cancelButton) {
                this.element.find("input[type='button']").bind('click', {editor: this}, BestInPlaceEditor.forms.input.cancelButtonHandler);
            }
            if (!this.okButton) {
                this.element.find("input[type='text']").bind('blur', {editor: this}, BestInPlaceEditor.forms.input.inputBlurHandler);
            }
            this.element.find("input[type='text']").bind('keyup', {editor: this}, BestInPlaceEditor.forms.input.keyupHandler);
            this.blurTimer = null;
            this.userClicked = false;
        },

        getValue: function () {
            'use strict';
            return this.sanitizeValue(this.element.find("input").val());
        },

        // When buttons are present, use a timer on the blur event to give precedence to clicks
        inputBlurHandler: function (event) {
            'use strict';
            if (event.data.editor.okButton) {
                event.data.editor.blurTimer = setTimeout(function () {
                    if (!event.data.editor.userClicked) {
                        event.data.editor.abort();
                    }
                }, 500);
            } else {
                if (event.data.editor.cancelButton) {
                    event.data.editor.blurTimer = setTimeout(function () {
                        if (!event.data.editor.userClicked) {
                            event.data.editor.update();
                        }
                    }, 500);
                } else {
                    event.data.editor.update();
                }
            }
        },

        submitHandler: function (event) {
            'use strict';
            event.data.editor.userClicked = true;
            clearTimeout(event.data.editor.blurTimer);
            event.data.editor.update();
        },

        cancelButtonHandler: function (event) {
            'use strict';
            event.data.editor.userClicked = true;
            clearTimeout(event.data.editor.blurTimer);
            event.data.editor.abort();
            event.stopPropagation(); // Without this, click isn't handled
        },

        keyupHandler: function (event) {
            'use strict';
            if (event.keyCode === 27) {
                event.data.editor.abort();
                event.stopImmediatePropagation();
            }
        }
    },

    "select": {
        activateForm: function () {
            'use strict';
            var output = jQuery(document.createElement('form'))
                    .attr('action', 'javascript:void(0)')
                    .attr('style', 'display:inline'),
                selected = '',
                select_elt = jQuery(document.createElement('select'))
                    .attr('class', this.inner_class !== null ? this.inner_class : ''),
                currentCollectionValue = this.collectionValue,
                key, value,
                a = this.arrayToObject(this.values);
            for (key in a) {
                value = a[key];
                var option_elt = jQuery(document.createElement('option'))
                    .val(key)
                    .html(value);
                if (String(key) === String(currentCollectionValue)) option_elt.attr('selected', 'selected');
                select_elt.append(option_elt);
            };
            output.append(select_elt);

            this.element.html(output);
            this.setHtmlAttributes();
            this.element.find("select").bind('change', {editor: this}, BestInPlaceEditor.forms.select.blurHandler);
            this.element.find("select").bind('blur', {editor: this}, BestInPlaceEditor.forms.select.blurHandler);
            this.element.find("select").bind('keyup', {editor: this}, BestInPlaceEditor.forms.select.keyupHandler);
            this.element.find("select")[0].focus();

            // automatically click on the select so you
            // don't have to click twice
            try {
              var e = document.createEvent("MouseEvents");
              e.initMouseEvent("mousedown", true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
              this.element.find("select")[0].dispatchEvent(e);
            } 
            catch(e) {
              // browser doesn't support this, e.g. IE8 
            }
        },

        getValue: function () {
            'use strict';
            return this.sanitizeValue(this.element.find("select").val());
        },

        blurHandler: function (event) {
            'use strict';
            event.data.editor.update();
        },

        keyupHandler: function (event) {
            'use strict';
            if (event.keyCode === 27) {
                event.data.editor.abort();
            }
        }
    },

    "checkbox": {
        activateForm: function () {
            'use strict';
            this.collectionValue = !this.getValue();
            this.setHtmlAttributes();
            this.update();
        },

        getValue: function () {
            'use strict';
            return this.collectionValue;
        }
    },

    "textarea": {
        activateForm: function () {
            'use strict';
            // grab width and height of text
            var width = this.element.css('width');
            var height = this.element.css('height');

            // construct form
            var output = jQuery(document.createElement('form'))
                .addClass('form_in_place')
                .attr('action', 'javascript:void(0);')
                .attr('style', 'display:inline');
            var textarea_elt = jQuery(document.createElement('textarea'))
                .attr('name', this.attributeName)
                .val(this.sanitizeValue(this.display_value));

            if (this.inner_class !== null) {
                textarea_elt.addClass(this.inner_class);
            }

            output.append(textarea_elt);

            this.placeButtons(output, this);

            this.element.html(output);
            this.setHtmlAttributes();

            // set width and height of textarea
            jQuery(this.element.find("textarea")[0]).css({'min-width': width, 'min-height': height});
            jQuery(this.element.find("textarea")[0]).autosize();

            this.element.find("textarea")[0].focus();
            this.element.find("form").bind('submit', {editor: this}, BestInPlaceEditor.forms.textarea.submitHandler);

            if (this.cancelButton) {
                this.element.find("input[type='button']").bind('click', {editor: this}, BestInPlaceEditor.forms.textarea.cancelButtonHandler);
            }

            this.element.find("textarea").bind('blur', {editor: this}, BestInPlaceEditor.forms.textarea.blurHandler);
            this.element.find("textarea").bind('keyup', {editor: this}, BestInPlaceEditor.forms.textarea.keyupHandler);
            this.blurTimer = null;
            this.userClicked = false;
        },

        getValue: function () {
            'use strict';
            return this.sanitizeValue(this.element.find("textarea").val());
        },

        // When buttons are present, use a timer on the blur event to give precedence to clicks
        blurHandler: function (event) {
            'use strict';
            if (event.data.editor.okButton) {
                event.data.editor.blurTimer = setTimeout(function () {
                    if (!event.data.editor.userClicked) {
                        event.data.editor.abortIfConfirm();
                    }
                }, 500);
            } else {
                if (event.data.editor.cancelButton) {
                    event.data.editor.blurTimer = setTimeout(function () {
                        if (!event.data.editor.userClicked) {
                            event.data.editor.update();
                        }
                    }, 500);
                } else {
                    event.data.editor.update();
                }
            }
        },

        submitHandler: function (event) {
            'use strict';
            event.data.editor.userClicked = true;
            clearTimeout(event.data.editor.blurTimer);
            event.data.editor.update();
        },

        cancelButtonHandler: function (event) {
            'use strict';
            event.data.editor.userClicked = true;
            clearTimeout(event.data.editor.blurTimer);
            event.data.editor.abortIfConfirm();
            event.stopPropagation(); // Without this, click isn't handled
        },

        keyupHandler: function (event) {
            'use strict';
            if (event.keyCode === 27) {
                event.data.editor.abortIfConfirm();
            }
        }
    }
};

BestInPlaceEditor.defaults = {
    locales: {},
    ajaxMethod: "put",  //TODO Change to patch when support to 3.2 is dropped
    ajaxDataType: 'text',
    okButtonClass: '',
    cancelButtonClass: ''
};

// Default locale
BestInPlaceEditor.defaults.locales[''] = {
    confirmMessage: "Are you sure you want to discard your changes?",
    uninitializedForm: "The form was not properly initialized. getValue is unbound",
    placeHolder: '-'
};

jQuery.fn.best_in_place = function () {
    'use strict';
    function setBestInPlace(element) {
        if (!element.data('bestInPlaceEditor')) {
            element.data('bestInPlaceEditor', new BestInPlaceEditor(element));
            return true;
        }
    }

    jQuery(this.context).delegate(this.selector, 'click', function () {
        var el = jQuery(this);
        if (setBestInPlace(el)) {
            el.click();
        }
    });

    this.each(function () {
        setBestInPlace(jQuery(this));
    });

    return this;
};



/*
 * BestInPlace 3.0.0.alpha (2014)
 *
 * Depends:
 *	best_in_place.js
 *	jquery.ui.datepicker.js
 */
/*global BestInPlaceEditor */

BestInPlaceEditor.forms.date = {
    activateForm: function () {
        'use strict';
        var that = this,
            output = jQuery(document.createElement('form'))
                .addClass('form_in_place')
                .attr('action', 'javascript:void(0);')
                .attr('style', 'display:inline'),
            input_elt = jQuery(document.createElement('input'))
                .attr('type', 'text')
                .attr('name', this.attributeName)
                .attr('value', this.sanitizeValue(this.display_value));
                
        if (this.inner_class !== null) {
            input_elt.addClass(this.inner_class);
        }
        output.append(input_elt);

        this.element.html(output);
        this.setHtmlAttributes();
        this.element.find('input')[0].select();
        this.element.find("form").bind('submit', {editor: this}, BestInPlaceEditor.forms.input.submitHandler);
        this.element.find("input").bind('keyup', {editor: this}, BestInPlaceEditor.forms.input.keyupHandler);

        this.element.find('input')
            .datepicker({
                onClose: function () {
                    that.update();
                }
            })
            .datepicker('show');
    },

    getValue: function () {
        'use strict';
        return this.sanitizeValue(this.element.find("input").val());
    },

    submitHandler: function (event) {
        'use strict';
        event.data.editor.update();
    },

    keyupHandler: function (event) {
        'use strict';
        if (event.keyCode === 27) {
            event.data.editor.abort();
        }
    }
}
;
/*
 * This combined file was created by the DataTables downloader builder:
 *   https://datatables.net/download
 *
 * To rebuild or modify this file with the latest versions of the included
 * software please visit:
 *   https://datatables.net/download/#dt/dt-1.10.18/b-1.5.4/b-html5-1.5.4/b-print-1.5.4/fc-3.2.5/r-2.2.2
 *
 * Included libraries:
 *   DataTables 1.10.18, Buttons 1.5.4, HTML5 export 1.5.4, Print view 1.5.4, FixedColumns 3.2.5, Responsive 2.2.2
 */

/*!
 DataTables 1.10.18
 ©2008-2018 SpryMedia Ltd - datatables.net/license
*/

(function(h){"function"===typeof define&&define.amd?define(["jquery"],function(E){return h(E,window,document)}):"object"===typeof exports?module.exports=function(E,H){E||(E=window);H||(H="undefined"!==typeof window?require("jquery"):require("jquery")(E));return h(H,E,E.document)}:h(jQuery,window,document)})(function(h,E,H,k){function Z(a){var b,c,d={};h.each(a,function(e){if((b=e.match(/^([^A-Z]+?)([A-Z])/))&&-1!=="a aa ai ao as b fn i m o s ".indexOf(b[1]+" "))c=e.replace(b[0],b[2].toLowerCase()),
d[c]=e,"o"===b[1]&&Z(a[e])});a._hungarianMap=d}function J(a,b,c){a._hungarianMap||Z(a);var d;h.each(b,function(e){d=a._hungarianMap[e];if(d!==k&&(c||b[d]===k))"o"===d.charAt(0)?(b[d]||(b[d]={}),h.extend(!0,b[d],b[e]),J(a[d],b[d],c)):b[d]=b[e]})}function Ca(a){var b=n.defaults.oLanguage,c=b.sDecimal;c&&Da(c);if(a){var d=a.sZeroRecords;!a.sEmptyTable&&(d&&"No data available in table"===b.sEmptyTable)&&F(a,a,"sZeroRecords","sEmptyTable");!a.sLoadingRecords&&(d&&"Loading..."===b.sLoadingRecords)&&F(a,
a,"sZeroRecords","sLoadingRecords");a.sInfoThousands&&(a.sThousands=a.sInfoThousands);(a=a.sDecimal)&&c!==a&&Da(a)}}function eb(a){A(a,"ordering","bSort");A(a,"orderMulti","bSortMulti");A(a,"orderClasses","bSortClasses");A(a,"orderCellsTop","bSortCellsTop");A(a,"order","aaSorting");A(a,"orderFixed","aaSortingFixed");A(a,"paging","bPaginate");A(a,"pagingType","sPaginationType");A(a,"pageLength","iDisplayLength");A(a,"searching","bFilter");"boolean"===typeof a.sScrollX&&(a.sScrollX=a.sScrollX?"100%":
"");"boolean"===typeof a.scrollX&&(a.scrollX=a.scrollX?"100%":"");if(a=a.aoSearchCols)for(var b=0,c=a.length;b<c;b++)a[b]&&J(n.models.oSearch,a[b])}function fb(a){A(a,"orderable","bSortable");A(a,"orderData","aDataSort");A(a,"orderSequence","asSorting");A(a,"orderDataType","sortDataType");var b=a.aDataSort;"number"===typeof b&&!h.isArray(b)&&(a.aDataSort=[b])}function gb(a){if(!n.__browser){var b={};n.__browser=b;var c=h("<div/>").css({position:"fixed",top:0,left:-1*h(E).scrollLeft(),height:1,width:1,
overflow:"hidden"}).append(h("<div/>").css({position:"absolute",top:1,left:1,width:100,overflow:"scroll"}).append(h("<div/>").css({width:"100%",height:10}))).appendTo("body"),d=c.children(),e=d.children();b.barWidth=d[0].offsetWidth-d[0].clientWidth;b.bScrollOversize=100===e[0].offsetWidth&&100!==d[0].clientWidth;b.bScrollbarLeft=1!==Math.round(e.offset().left);b.bBounding=c[0].getBoundingClientRect().width?!0:!1;c.remove()}h.extend(a.oBrowser,n.__browser);a.oScroll.iBarWidth=n.__browser.barWidth}
function hb(a,b,c,d,e,f){var g,j=!1;c!==k&&(g=c,j=!0);for(;d!==e;)a.hasOwnProperty(d)&&(g=j?b(g,a[d],d,a):a[d],j=!0,d+=f);return g}function Ea(a,b){var c=n.defaults.column,d=a.aoColumns.length,c=h.extend({},n.models.oColumn,c,{nTh:b?b:H.createElement("th"),sTitle:c.sTitle?c.sTitle:b?b.innerHTML:"",aDataSort:c.aDataSort?c.aDataSort:[d],mData:c.mData?c.mData:d,idx:d});a.aoColumns.push(c);c=a.aoPreSearchCols;c[d]=h.extend({},n.models.oSearch,c[d]);ka(a,d,h(b).data())}function ka(a,b,c){var b=a.aoColumns[b],
d=a.oClasses,e=h(b.nTh);if(!b.sWidthOrig){b.sWidthOrig=e.attr("width")||null;var f=(e.attr("style")||"").match(/width:\s*(\d+[pxem%]+)/);f&&(b.sWidthOrig=f[1])}c!==k&&null!==c&&(fb(c),J(n.defaults.column,c),c.mDataProp!==k&&!c.mData&&(c.mData=c.mDataProp),c.sType&&(b._sManualType=c.sType),c.className&&!c.sClass&&(c.sClass=c.className),c.sClass&&e.addClass(c.sClass),h.extend(b,c),F(b,c,"sWidth","sWidthOrig"),c.iDataSort!==k&&(b.aDataSort=[c.iDataSort]),F(b,c,"aDataSort"));var g=b.mData,j=S(g),i=b.mRender?
S(b.mRender):null,c=function(a){return"string"===typeof a&&-1!==a.indexOf("@")};b._bAttrSrc=h.isPlainObject(g)&&(c(g.sort)||c(g.type)||c(g.filter));b._setter=null;b.fnGetData=function(a,b,c){var d=j(a,b,k,c);return i&&b?i(d,b,a,c):d};b.fnSetData=function(a,b,c){return N(g)(a,b,c)};"number"!==typeof g&&(a._rowReadObject=!0);a.oFeatures.bSort||(b.bSortable=!1,e.addClass(d.sSortableNone));a=-1!==h.inArray("asc",b.asSorting);c=-1!==h.inArray("desc",b.asSorting);!b.bSortable||!a&&!c?(b.sSortingClass=d.sSortableNone,
b.sSortingClassJUI=""):a&&!c?(b.sSortingClass=d.sSortableAsc,b.sSortingClassJUI=d.sSortJUIAscAllowed):!a&&c?(b.sSortingClass=d.sSortableDesc,b.sSortingClassJUI=d.sSortJUIDescAllowed):(b.sSortingClass=d.sSortable,b.sSortingClassJUI=d.sSortJUI)}function $(a){if(!1!==a.oFeatures.bAutoWidth){var b=a.aoColumns;Fa(a);for(var c=0,d=b.length;c<d;c++)b[c].nTh.style.width=b[c].sWidth}b=a.oScroll;(""!==b.sY||""!==b.sX)&&la(a);r(a,null,"column-sizing",[a])}function aa(a,b){var c=ma(a,"bVisible");return"number"===
typeof c[b]?c[b]:null}function ba(a,b){var c=ma(a,"bVisible"),c=h.inArray(b,c);return-1!==c?c:null}function V(a){var b=0;h.each(a.aoColumns,function(a,d){d.bVisible&&"none"!==h(d.nTh).css("display")&&b++});return b}function ma(a,b){var c=[];h.map(a.aoColumns,function(a,e){a[b]&&c.push(e)});return c}function Ga(a){var b=a.aoColumns,c=a.aoData,d=n.ext.type.detect,e,f,g,j,i,h,l,q,t;e=0;for(f=b.length;e<f;e++)if(l=b[e],t=[],!l.sType&&l._sManualType)l.sType=l._sManualType;else if(!l.sType){g=0;for(j=d.length;g<
j;g++){i=0;for(h=c.length;i<h;i++){t[i]===k&&(t[i]=B(a,i,e,"type"));q=d[g](t[i],a);if(!q&&g!==d.length-1)break;if("html"===q)break}if(q){l.sType=q;break}}l.sType||(l.sType="string")}}function ib(a,b,c,d){var e,f,g,j,i,m,l=a.aoColumns;if(b)for(e=b.length-1;0<=e;e--){m=b[e];var q=m.targets!==k?m.targets:m.aTargets;h.isArray(q)||(q=[q]);f=0;for(g=q.length;f<g;f++)if("number"===typeof q[f]&&0<=q[f]){for(;l.length<=q[f];)Ea(a);d(q[f],m)}else if("number"===typeof q[f]&&0>q[f])d(l.length+q[f],m);else if("string"===
typeof q[f]){j=0;for(i=l.length;j<i;j++)("_all"==q[f]||h(l[j].nTh).hasClass(q[f]))&&d(j,m)}}if(c){e=0;for(a=c.length;e<a;e++)d(e,c[e])}}function O(a,b,c,d){var e=a.aoData.length,f=h.extend(!0,{},n.models.oRow,{src:c?"dom":"data",idx:e});f._aData=b;a.aoData.push(f);for(var g=a.aoColumns,j=0,i=g.length;j<i;j++)g[j].sType=null;a.aiDisplayMaster.push(e);b=a.rowIdFn(b);b!==k&&(a.aIds[b]=f);(c||!a.oFeatures.bDeferRender)&&Ha(a,e,c,d);return e}function na(a,b){var c;b instanceof h||(b=h(b));return b.map(function(b,
e){c=Ia(a,e);return O(a,c.data,e,c.cells)})}function B(a,b,c,d){var e=a.iDraw,f=a.aoColumns[c],g=a.aoData[b]._aData,j=f.sDefaultContent,i=f.fnGetData(g,d,{settings:a,row:b,col:c});if(i===k)return a.iDrawError!=e&&null===j&&(K(a,0,"Requested unknown parameter "+("function"==typeof f.mData?"{function}":"'"+f.mData+"'")+" for row "+b+", column "+c,4),a.iDrawError=e),j;if((i===g||null===i)&&null!==j&&d!==k)i=j;else if("function"===typeof i)return i.call(g);return null===i&&"display"==d?"":i}function jb(a,
b,c,d){a.aoColumns[c].fnSetData(a.aoData[b]._aData,d,{settings:a,row:b,col:c})}function Ja(a){return h.map(a.match(/(\\.|[^\.])+/g)||[""],function(a){return a.replace(/\\\./g,".")})}function S(a){if(h.isPlainObject(a)){var b={};h.each(a,function(a,c){c&&(b[a]=S(c))});return function(a,c,f,g){var j=b[c]||b._;return j!==k?j(a,c,f,g):a}}if(null===a)return function(a){return a};if("function"===typeof a)return function(b,c,f,g){return a(b,c,f,g)};if("string"===typeof a&&(-1!==a.indexOf(".")||-1!==a.indexOf("[")||
-1!==a.indexOf("("))){var c=function(a,b,f){var g,j;if(""!==f){j=Ja(f);for(var i=0,m=j.length;i<m;i++){f=j[i].match(ca);g=j[i].match(W);if(f){j[i]=j[i].replace(ca,"");""!==j[i]&&(a=a[j[i]]);g=[];j.splice(0,i+1);j=j.join(".");if(h.isArray(a)){i=0;for(m=a.length;i<m;i++)g.push(c(a[i],b,j))}a=f[0].substring(1,f[0].length-1);a=""===a?g:g.join(a);break}else if(g){j[i]=j[i].replace(W,"");a=a[j[i]]();continue}if(null===a||a[j[i]]===k)return k;a=a[j[i]]}}return a};return function(b,e){return c(b,e,a)}}return function(b){return b[a]}}
function N(a){if(h.isPlainObject(a))return N(a._);if(null===a)return function(){};if("function"===typeof a)return function(b,d,e){a(b,"set",d,e)};if("string"===typeof a&&(-1!==a.indexOf(".")||-1!==a.indexOf("[")||-1!==a.indexOf("("))){var b=function(a,d,e){var e=Ja(e),f;f=e[e.length-1];for(var g,j,i=0,m=e.length-1;i<m;i++){g=e[i].match(ca);j=e[i].match(W);if(g){e[i]=e[i].replace(ca,"");a[e[i]]=[];f=e.slice();f.splice(0,i+1);g=f.join(".");if(h.isArray(d)){j=0;for(m=d.length;j<m;j++)f={},b(f,d[j],g),
a[e[i]].push(f)}else a[e[i]]=d;return}j&&(e[i]=e[i].replace(W,""),a=a[e[i]](d));if(null===a[e[i]]||a[e[i]]===k)a[e[i]]={};a=a[e[i]]}if(f.match(W))a[f.replace(W,"")](d);else a[f.replace(ca,"")]=d};return function(c,d){return b(c,d,a)}}return function(b,d){b[a]=d}}function Ka(a){return D(a.aoData,"_aData")}function oa(a){a.aoData.length=0;a.aiDisplayMaster.length=0;a.aiDisplay.length=0;a.aIds={}}function pa(a,b,c){for(var d=-1,e=0,f=a.length;e<f;e++)a[e]==b?d=e:a[e]>b&&a[e]--; -1!=d&&c===k&&a.splice(d,
1)}function da(a,b,c,d){var e=a.aoData[b],f,g=function(c,d){for(;c.childNodes.length;)c.removeChild(c.firstChild);c.innerHTML=B(a,b,d,"display")};if("dom"===c||(!c||"auto"===c)&&"dom"===e.src)e._aData=Ia(a,e,d,d===k?k:e._aData).data;else{var j=e.anCells;if(j)if(d!==k)g(j[d],d);else{c=0;for(f=j.length;c<f;c++)g(j[c],c)}}e._aSortData=null;e._aFilterData=null;g=a.aoColumns;if(d!==k)g[d].sType=null;else{c=0;for(f=g.length;c<f;c++)g[c].sType=null;La(a,e)}}function Ia(a,b,c,d){var e=[],f=b.firstChild,g,
j,i=0,m,l=a.aoColumns,q=a._rowReadObject,d=d!==k?d:q?{}:[],t=function(a,b){if("string"===typeof a){var c=a.indexOf("@");-1!==c&&(c=a.substring(c+1),N(a)(d,b.getAttribute(c)))}},G=function(a){if(c===k||c===i)j=l[i],m=h.trim(a.innerHTML),j&&j._bAttrSrc?(N(j.mData._)(d,m),t(j.mData.sort,a),t(j.mData.type,a),t(j.mData.filter,a)):q?(j._setter||(j._setter=N(j.mData)),j._setter(d,m)):d[i]=m;i++};if(f)for(;f;){g=f.nodeName.toUpperCase();if("TD"==g||"TH"==g)G(f),e.push(f);f=f.nextSibling}else{e=b.anCells;
f=0;for(g=e.length;f<g;f++)G(e[f])}if(b=b.firstChild?b:b.nTr)(b=b.getAttribute("id"))&&N(a.rowId)(d,b);return{data:d,cells:e}}function Ha(a,b,c,d){var e=a.aoData[b],f=e._aData,g=[],j,i,m,l,q;if(null===e.nTr){j=c||H.createElement("tr");e.nTr=j;e.anCells=g;j._DT_RowIndex=b;La(a,e);l=0;for(q=a.aoColumns.length;l<q;l++){m=a.aoColumns[l];i=c?d[l]:H.createElement(m.sCellType);i._DT_CellIndex={row:b,column:l};g.push(i);if((!c||m.mRender||m.mData!==l)&&(!h.isPlainObject(m.mData)||m.mData._!==l+".display"))i.innerHTML=
B(a,b,l,"display");m.sClass&&(i.className+=" "+m.sClass);m.bVisible&&!c?j.appendChild(i):!m.bVisible&&c&&i.parentNode.removeChild(i);m.fnCreatedCell&&m.fnCreatedCell.call(a.oInstance,i,B(a,b,l),f,b,l)}r(a,"aoRowCreatedCallback",null,[j,f,b,g])}e.nTr.setAttribute("role","row")}function La(a,b){var c=b.nTr,d=b._aData;if(c){var e=a.rowIdFn(d);e&&(c.id=e);d.DT_RowClass&&(e=d.DT_RowClass.split(" "),b.__rowc=b.__rowc?qa(b.__rowc.concat(e)):e,h(c).removeClass(b.__rowc.join(" ")).addClass(d.DT_RowClass));
d.DT_RowAttr&&h(c).attr(d.DT_RowAttr);d.DT_RowData&&h(c).data(d.DT_RowData)}}function kb(a){var b,c,d,e,f,g=a.nTHead,j=a.nTFoot,i=0===h("th, td",g).length,m=a.oClasses,l=a.aoColumns;i&&(e=h("<tr/>").appendTo(g));b=0;for(c=l.length;b<c;b++)f=l[b],d=h(f.nTh).addClass(f.sClass),i&&d.appendTo(e),a.oFeatures.bSort&&(d.addClass(f.sSortingClass),!1!==f.bSortable&&(d.attr("tabindex",a.iTabIndex).attr("aria-controls",a.sTableId),Ma(a,f.nTh,b))),f.sTitle!=d[0].innerHTML&&d.html(f.sTitle),Na(a,"header")(a,d,
f,m);i&&ea(a.aoHeader,g);h(g).find(">tr").attr("role","row");h(g).find(">tr>th, >tr>td").addClass(m.sHeaderTH);h(j).find(">tr>th, >tr>td").addClass(m.sFooterTH);if(null!==j){a=a.aoFooter[0];b=0;for(c=a.length;b<c;b++)f=l[b],f.nTf=a[b].cell,f.sClass&&h(f.nTf).addClass(f.sClass)}}function fa(a,b,c){var d,e,f,g=[],j=[],i=a.aoColumns.length,m;if(b){c===k&&(c=!1);d=0;for(e=b.length;d<e;d++){g[d]=b[d].slice();g[d].nTr=b[d].nTr;for(f=i-1;0<=f;f--)!a.aoColumns[f].bVisible&&!c&&g[d].splice(f,1);j.push([])}d=
0;for(e=g.length;d<e;d++){if(a=g[d].nTr)for(;f=a.firstChild;)a.removeChild(f);f=0;for(b=g[d].length;f<b;f++)if(m=i=1,j[d][f]===k){a.appendChild(g[d][f].cell);for(j[d][f]=1;g[d+i]!==k&&g[d][f].cell==g[d+i][f].cell;)j[d+i][f]=1,i++;for(;g[d][f+m]!==k&&g[d][f].cell==g[d][f+m].cell;){for(c=0;c<i;c++)j[d+c][f+m]=1;m++}h(g[d][f].cell).attr("rowspan",i).attr("colspan",m)}}}}function P(a){var b=r(a,"aoPreDrawCallback","preDraw",[a]);if(-1!==h.inArray(!1,b))C(a,!1);else{var b=[],c=0,d=a.asStripeClasses,e=
d.length,f=a.oLanguage,g=a.iInitDisplayStart,j="ssp"==y(a),i=a.aiDisplay;a.bDrawing=!0;g!==k&&-1!==g&&(a._iDisplayStart=j?g:g>=a.fnRecordsDisplay()?0:g,a.iInitDisplayStart=-1);var g=a._iDisplayStart,m=a.fnDisplayEnd();if(a.bDeferLoading)a.bDeferLoading=!1,a.iDraw++,C(a,!1);else if(j){if(!a.bDestroying&&!lb(a))return}else a.iDraw++;if(0!==i.length){f=j?a.aoData.length:m;for(j=j?0:g;j<f;j++){var l=i[j],q=a.aoData[l];null===q.nTr&&Ha(a,l);var t=q.nTr;if(0!==e){var G=d[c%e];q._sRowStripe!=G&&(h(t).removeClass(q._sRowStripe).addClass(G),
q._sRowStripe=G)}r(a,"aoRowCallback",null,[t,q._aData,c,j,l]);b.push(t);c++}}else c=f.sZeroRecords,1==a.iDraw&&"ajax"==y(a)?c=f.sLoadingRecords:f.sEmptyTable&&0===a.fnRecordsTotal()&&(c=f.sEmptyTable),b[0]=h("<tr/>",{"class":e?d[0]:""}).append(h("<td />",{valign:"top",colSpan:V(a),"class":a.oClasses.sRowEmpty}).html(c))[0];r(a,"aoHeaderCallback","header",[h(a.nTHead).children("tr")[0],Ka(a),g,m,i]);r(a,"aoFooterCallback","footer",[h(a.nTFoot).children("tr")[0],Ka(a),g,m,i]);d=h(a.nTBody);d.children().detach();
d.append(h(b));r(a,"aoDrawCallback","draw",[a]);a.bSorted=!1;a.bFiltered=!1;a.bDrawing=!1}}function T(a,b){var c=a.oFeatures,d=c.bFilter;c.bSort&&mb(a);d?ga(a,a.oPreviousSearch):a.aiDisplay=a.aiDisplayMaster.slice();!0!==b&&(a._iDisplayStart=0);a._drawHold=b;P(a);a._drawHold=!1}function nb(a){var b=a.oClasses,c=h(a.nTable),c=h("<div/>").insertBefore(c),d=a.oFeatures,e=h("<div/>",{id:a.sTableId+"_wrapper","class":b.sWrapper+(a.nTFoot?"":" "+b.sNoFooter)});a.nHolding=c[0];a.nTableWrapper=e[0];a.nTableReinsertBefore=
a.nTable.nextSibling;for(var f=a.sDom.split(""),g,j,i,m,l,q,k=0;k<f.length;k++){g=null;j=f[k];if("<"==j){i=h("<div/>")[0];m=f[k+1];if("'"==m||'"'==m){l="";for(q=2;f[k+q]!=m;)l+=f[k+q],q++;"H"==l?l=b.sJUIHeader:"F"==l&&(l=b.sJUIFooter);-1!=l.indexOf(".")?(m=l.split("."),i.id=m[0].substr(1,m[0].length-1),i.className=m[1]):"#"==l.charAt(0)?i.id=l.substr(1,l.length-1):i.className=l;k+=q}e.append(i);e=h(i)}else if(">"==j)e=e.parent();else if("l"==j&&d.bPaginate&&d.bLengthChange)g=ob(a);else if("f"==j&&
d.bFilter)g=pb(a);else if("r"==j&&d.bProcessing)g=qb(a);else if("t"==j)g=rb(a);else if("i"==j&&d.bInfo)g=sb(a);else if("p"==j&&d.bPaginate)g=tb(a);else if(0!==n.ext.feature.length){i=n.ext.feature;q=0;for(m=i.length;q<m;q++)if(j==i[q].cFeature){g=i[q].fnInit(a);break}}g&&(i=a.aanFeatures,i[j]||(i[j]=[]),i[j].push(g),e.append(g))}c.replaceWith(e);a.nHolding=null}function ea(a,b){var c=h(b).children("tr"),d,e,f,g,j,i,m,l,q,k;a.splice(0,a.length);f=0;for(i=c.length;f<i;f++)a.push([]);f=0;for(i=c.length;f<
i;f++){d=c[f];for(e=d.firstChild;e;){if("TD"==e.nodeName.toUpperCase()||"TH"==e.nodeName.toUpperCase()){l=1*e.getAttribute("colspan");q=1*e.getAttribute("rowspan");l=!l||0===l||1===l?1:l;q=!q||0===q||1===q?1:q;g=0;for(j=a[f];j[g];)g++;m=g;k=1===l?!0:!1;for(j=0;j<l;j++)for(g=0;g<q;g++)a[f+g][m+j]={cell:e,unique:k},a[f+g].nTr=d}e=e.nextSibling}}}function ra(a,b,c){var d=[];c||(c=a.aoHeader,b&&(c=[],ea(c,b)));for(var b=0,e=c.length;b<e;b++)for(var f=0,g=c[b].length;f<g;f++)if(c[b][f].unique&&(!d[f]||
!a.bSortCellsTop))d[f]=c[b][f].cell;return d}function sa(a,b,c){r(a,"aoServerParams","serverParams",[b]);if(b&&h.isArray(b)){var d={},e=/(.*?)\[\]$/;h.each(b,function(a,b){var c=b.name.match(e);c?(c=c[0],d[c]||(d[c]=[]),d[c].push(b.value)):d[b.name]=b.value});b=d}var f,g=a.ajax,j=a.oInstance,i=function(b){r(a,null,"xhr",[a,b,a.jqXHR]);c(b)};if(h.isPlainObject(g)&&g.data){f=g.data;var m="function"===typeof f?f(b,a):f,b="function"===typeof f&&m?m:h.extend(!0,b,m);delete g.data}m={data:b,success:function(b){var c=
b.error||b.sError;c&&K(a,0,c);a.json=b;i(b)},dataType:"json",cache:!1,type:a.sServerMethod,error:function(b,c){var d=r(a,null,"xhr",[a,null,a.jqXHR]);-1===h.inArray(!0,d)&&("parsererror"==c?K(a,0,"Invalid JSON response",1):4===b.readyState&&K(a,0,"Ajax error",7));C(a,!1)}};a.oAjaxData=b;r(a,null,"preXhr",[a,b]);a.fnServerData?a.fnServerData.call(j,a.sAjaxSource,h.map(b,function(a,b){return{name:b,value:a}}),i,a):a.sAjaxSource||"string"===typeof g?a.jqXHR=h.ajax(h.extend(m,{url:g||a.sAjaxSource})):
"function"===typeof g?a.jqXHR=g.call(j,b,i,a):(a.jqXHR=h.ajax(h.extend(m,g)),g.data=f)}function lb(a){return a.bAjaxDataGet?(a.iDraw++,C(a,!0),sa(a,ub(a),function(b){vb(a,b)}),!1):!0}function ub(a){var b=a.aoColumns,c=b.length,d=a.oFeatures,e=a.oPreviousSearch,f=a.aoPreSearchCols,g,j=[],i,m,l,k=X(a);g=a._iDisplayStart;i=!1!==d.bPaginate?a._iDisplayLength:-1;var t=function(a,b){j.push({name:a,value:b})};t("sEcho",a.iDraw);t("iColumns",c);t("sColumns",D(b,"sName").join(","));t("iDisplayStart",g);t("iDisplayLength",
i);var G={draw:a.iDraw,columns:[],order:[],start:g,length:i,search:{value:e.sSearch,regex:e.bRegex}};for(g=0;g<c;g++)m=b[g],l=f[g],i="function"==typeof m.mData?"function":m.mData,G.columns.push({data:i,name:m.sName,searchable:m.bSearchable,orderable:m.bSortable,search:{value:l.sSearch,regex:l.bRegex}}),t("mDataProp_"+g,i),d.bFilter&&(t("sSearch_"+g,l.sSearch),t("bRegex_"+g,l.bRegex),t("bSearchable_"+g,m.bSearchable)),d.bSort&&t("bSortable_"+g,m.bSortable);d.bFilter&&(t("sSearch",e.sSearch),t("bRegex",
e.bRegex));d.bSort&&(h.each(k,function(a,b){G.order.push({column:b.col,dir:b.dir});t("iSortCol_"+a,b.col);t("sSortDir_"+a,b.dir)}),t("iSortingCols",k.length));b=n.ext.legacy.ajax;return null===b?a.sAjaxSource?j:G:b?j:G}function vb(a,b){var c=ta(a,b),d=b.sEcho!==k?b.sEcho:b.draw,e=b.iTotalRecords!==k?b.iTotalRecords:b.recordsTotal,f=b.iTotalDisplayRecords!==k?b.iTotalDisplayRecords:b.recordsFiltered;if(d){if(1*d<a.iDraw)return;a.iDraw=1*d}oa(a);a._iRecordsTotal=parseInt(e,10);a._iRecordsDisplay=parseInt(f,
10);d=0;for(e=c.length;d<e;d++)O(a,c[d]);a.aiDisplay=a.aiDisplayMaster.slice();a.bAjaxDataGet=!1;P(a);a._bInitComplete||ua(a,b);a.bAjaxDataGet=!0;C(a,!1)}function ta(a,b){var c=h.isPlainObject(a.ajax)&&a.ajax.dataSrc!==k?a.ajax.dataSrc:a.sAjaxDataProp;return"data"===c?b.aaData||b[c]:""!==c?S(c)(b):b}function pb(a){var b=a.oClasses,c=a.sTableId,d=a.oLanguage,e=a.oPreviousSearch,f=a.aanFeatures,g='<input type="search" class="form-control form-control-sm'+b.sFilterInput+'" id="pn_search" onblur="$(\'#pn_form\').val($(this).val());"/>',j=d.sSearch,j=j.match(/_INPUT_/)?j.replace("_INPUT_",
g):j+g,b=h("<div/>",{id:!f.f?c+"_filter":null,"class":b.sFilter+' mr-3'}).append(h("<label/>").append(j)),f=function(){var b=!this.value?"":this.value;b!=e.sSearch&&(ga(a,{sSearch:b,bRegex:e.bRegex,bSmart:e.bSmart,bCaseInsensitive:e.bCaseInsensitive}),a._iDisplayStart=0,P(a))},g=null!==a.searchDelay?a.searchDelay:"ssp"===y(a)?400:0,i=h("input",b).val(e.sSearch).attr("placeholder",d.sSearchPlaceholder).on("keyup.DT search.DT input.DT paste.DT cut.DT", g?Oa(f,g):f).on("keypress.DT",function(a){if(13==a.keyCode)return!1}).attr("aria-controls",
c);h(a.nTable).on("search.dt.DT",function(b,c){if(a===c)try{i[0]!==H.activeElement&&i.val(e.sSearch)}catch(d){}});return b[0]}function ga(a,b,c){var d=a.oPreviousSearch,e=a.aoPreSearchCols,f=function(a){d.sSearch=a.sSearch;d.bRegex=a.bRegex;d.bSmart=a.bSmart;d.bCaseInsensitive=a.bCaseInsensitive};Ga(a);if("ssp"!=y(a)){wb(a,b.sSearch,c,b.bEscapeRegex!==k?!b.bEscapeRegex:b.bRegex,b.bSmart,b.bCaseInsensitive);f(b);for(b=0;b<e.length;b++)xb(a,e[b].sSearch,b,e[b].bEscapeRegex!==k?!e[b].bEscapeRegex:e[b].bRegex,
e[b].bSmart,e[b].bCaseInsensitive);yb(a)}else f(b);a.bFiltered=!0;r(a,null,"search",[a])}function yb(a){for(var b=n.ext.search,c=a.aiDisplay,d,e,f=0,g=b.length;f<g;f++){for(var j=[],i=0,m=c.length;i<m;i++)e=c[i],d=a.aoData[e],b[f](a,d._aFilterData,e,d._aData,i)&&j.push(e);c.length=0;h.merge(c,j)}}function xb(a,b,c,d,e,f){if(""!==b){for(var g=[],j=a.aiDisplay,d=Pa(b,d,e,f),e=0;e<j.length;e++)b=a.aoData[j[e]]._aFilterData[c],d.test(b)&&g.push(j[e]);a.aiDisplay=g}}function wb(a,b,c,d,e,f){var d=Pa(b,
d,e,f),f=a.oPreviousSearch.sSearch,g=a.aiDisplayMaster,j,e=[];0!==n.ext.search.length&&(c=!0);j=zb(a);if(0>=b.length)a.aiDisplay=g.slice();else{if(j||c||f.length>b.length||0!==b.indexOf(f)||a.bSorted)a.aiDisplay=g.slice();b=a.aiDisplay;for(c=0;c<b.length;c++)d.test(a.aoData[b[c]]._sFilterRow)&&e.push(b[c]);a.aiDisplay=e}}function Pa(a,b,c,d){a=b?a:Qa(a);c&&(a="^(?=.*?"+h.map(a.match(/"[^"]+"|[^ ]+/g)||[""],function(a){if('"'===a.charAt(0))var b=a.match(/^"(.*)"$/),a=b?b[1]:a;return a.replace('"',
"")}).join(")(?=.*?")+").*$");return RegExp(a,d?"i":"")}function zb(a){var b=a.aoColumns,c,d,e,f,g,j,i,h,l=n.ext.type.search;c=!1;d=0;for(f=a.aoData.length;d<f;d++)if(h=a.aoData[d],!h._aFilterData){j=[];e=0;for(g=b.length;e<g;e++)c=b[e],c.bSearchable?(i=B(a,d,e,"filter"),l[c.sType]&&(i=l[c.sType](i)),null===i&&(i=""),"string"!==typeof i&&i.toString&&(i=i.toString())):i="",i.indexOf&&-1!==i.indexOf("&")&&(va.innerHTML=i,i=Wb?va.textContent:va.innerText),i.replace&&(i=i.replace(/[\r\n]/g,"")),j.push(i);
h._aFilterData=j;h._sFilterRow=j.join("  ");c=!0}return c}function Ab(a){return{search:a.sSearch,smart:a.bSmart,regex:a.bRegex,caseInsensitive:a.bCaseInsensitive}}function Bb(a){return{sSearch:a.search,bSmart:a.smart,bRegex:a.regex,bCaseInsensitive:a.caseInsensitive}}function sb(a){var b=a.sTableId,c=a.aanFeatures.i,d=h("<div/>",{"class":a.oClasses.sInfo,id:!c?b+"_info":null});c||(a.aoDrawCallback.push({fn:Cb,sName:"information"}),d.attr("role","status").attr("aria-live","polite"),h(a.nTable).attr("aria-describedby",
b+"_info"));return d[0]}function Cb(a){var b=a.aanFeatures.i;if(0!==b.length){var c=a.oLanguage,d=a._iDisplayStart+1,e=a.fnDisplayEnd(),f=a.fnRecordsTotal(),g=a.fnRecordsDisplay(),j=g?c.sInfo:c.sInfoEmpty;g!==f&&(j+=" "+c.sInfoFiltered);j+=c.sInfoPostFix;j=Db(a,j);c=c.fnInfoCallback;null!==c&&(j=c.call(a.oInstance,a,d,e,f,g,j));h(b).html(j)}}function Db(a,b){var c=a.fnFormatNumber,d=a._iDisplayStart+1,e=a._iDisplayLength,f=a.fnRecordsDisplay(),g=-1===e;return b.replace(/_START_/g,c.call(a,d)).replace(/_END_/g,
c.call(a,a.fnDisplayEnd())).replace(/_MAX_/g,c.call(a,a.fnRecordsTotal())).replace(/_TOTAL_/g,c.call(a,f)).replace(/_PAGE_/g,c.call(a,g?1:Math.ceil(d/e))).replace(/_PAGES_/g,c.call(a,g?1:Math.ceil(f/e)))}function ha(a){var b,c,d=a.iInitDisplayStart,e=a.aoColumns,f;c=a.oFeatures;var g=a.bDeferLoading;if(a.bInitialised){nb(a);kb(a);fa(a,a.aoHeader);fa(a,a.aoFooter);C(a,!0);c.bAutoWidth&&Fa(a);b=0;for(c=e.length;b<c;b++)f=e[b],f.sWidth&&(f.nTh.style.width=v(f.sWidth));r(a,null,"preInit",[a]);T(a);e=
y(a);if("ssp"!=e||g)"ajax"==e?sa(a,[],function(c){var f=ta(a,c);for(b=0;b<f.length;b++)O(a,f[b]);a.iInitDisplayStart=d;T(a);C(a,!1);ua(a,c)},a):(C(a,!1),ua(a))}else setTimeout(function(){ha(a)},200)}function ua(a,b){a._bInitComplete=!0;(b||a.oInit.aaData)&&$(a);r(a,null,"plugin-init",[a,b]);r(a,"aoInitComplete","init",[a,b])}function Ra(a,b){var c=parseInt(b,10);a._iDisplayLength=c;Sa(a);r(a,null,"length",[a,c])}function ob(a){for(var b=a.oClasses,c=a.sTableId,d=a.aLengthMenu,e=h.isArray(d[0]),f=
e?d[0]:d,d=e?d[1]:d,e=h("<select/>",{name:c+"_length","aria-controls":c,"class":b.sLengthSelect}),g=0,j=f.length;g<j;g++)e[0][g]=new Option("number"===typeof d[g]?a.fnFormatNumber(d[g]):d[g],f[g]);var i=h("<div><label/></div>").addClass(b.sLength);a.aanFeatures.l||(i[0].id=c+"_length");i.children().append(a.oLanguage.sLengthMenu.replace("_MENU_",e[0].outerHTML));h("select",i).addClass("form-control form-control-sm").val(a._iDisplayLength).on("change.DT",function(){Ra(a,h(this).val());P(a)});h(a.nTable).on("length.dt.DT",function(b,c,d){a===
c&&h("select",i).val(d)});return i[0]}function tb(a){var b=a.sPaginationType,c=n.ext.pager[b],d="function"===typeof c,e=function(a){P(a)},b=h("<div/>").addClass(a.oClasses.sPaging+b)[0],f=a.aanFeatures;d||c.fnInit(a,b,e);f.p||(b.id=a.sTableId+"_paginate",a.aoDrawCallback.push({fn:function(a){if(d){var b=a._iDisplayStart,i=a._iDisplayLength,h=a.fnRecordsDisplay(),l=-1===i,b=l?0:Math.ceil(b/i),i=l?1:Math.ceil(h/i),h=c(b,i),k,l=0;for(k=f.p.length;l<k;l++)Na(a,"pageButton")(a,f.p[l],l,h,b,i)}else c.fnUpdate(a,
e)},sName:"pagination"}));return b}function Ta(a,b,c){var d=a._iDisplayStart,e=a._iDisplayLength,f=a.fnRecordsDisplay();0===f||-1===e?d=0:"number"===typeof b?(d=b*e,d>f&&(d=0)):"first"==b?d=0:"previous"==b?(d=0<=e?d-e:0,0>d&&(d=0)):"next"==b?d+e<f&&(d+=e):"last"==b?d=Math.floor((f-1)/e)*e:K(a,0,"Unknown paging action: "+b,5);b=a._iDisplayStart!==d;a._iDisplayStart=d;b&&(r(a,null,"page",[a]),c&&P(a));return b}function qb(a){return h("<div/>",{id:!a.aanFeatures.r?a.sTableId+"_processing":null,"class":a.oClasses.sProcessing}).html(a.oLanguage.sProcessing).insertBefore(a.nTable)[0]}
function C(a,b){a.oFeatures.bProcessing&&h(a.aanFeatures.r).css("display",b?"block":"none");r(a,null,"processing",[a,b])}function rb(a){var b=h(a.nTable);b.attr("role","grid");var c=a.oScroll;if(""===c.sX&&""===c.sY)return a.nTable;var d=c.sX,e=c.sY,f=a.oClasses,g=b.children("caption"),j=g.length?g[0]._captionSide:null,i=h(b[0].cloneNode(!1)),m=h(b[0].cloneNode(!1)),l=b.children("tfoot");l.length||(l=null);i=h("<div/>",{"class":f.sScrollWrapper}).append(h("<div/>",{"class":f.sScrollHead}).css({overflow:"hidden",
position:"relative",border:0,width:d?!d?null:v(d):"100%"}).append(h("<div/>",{"class":f.sScrollHeadInner}).css({"box-sizing":"content-box",width:c.sXInner||"100%"}).append(i.removeAttr("id").css("margin-left",0).append("top"===j?g:null).append(b.children("thead"))))).append(h("<div/>",{"class":f.sScrollBody}).css({position:"relative",overflow:"auto",width:!d?null:v(d)}).append(b));l&&i.append(h("<div/>",{"class":f.sScrollFoot}).css({overflow:"hidden",border:0,width:d?!d?null:v(d):"100%"}).append(h("<div/>",
{"class":f.sScrollFootInner}).append(m.removeAttr("id").css("margin-left",0).append("bottom"===j?g:null).append(b.children("tfoot")))));var b=i.children(),k=b[0],f=b[1],t=l?b[2]:null;if(d)h(f).on("scroll.DT",function(){var a=this.scrollLeft;k.scrollLeft=a;l&&(t.scrollLeft=a)});h(f).css(e&&c.bCollapse?"max-height":"height",e);a.nScrollHead=k;a.nScrollBody=f;a.nScrollFoot=t;a.aoDrawCallback.push({fn:la,sName:"scrolling"});return i[0]}function la(a){var b=a.oScroll,c=b.sX,d=b.sXInner,e=b.sY,b=b.iBarWidth,
f=h(a.nScrollHead),g=f[0].style,j=f.children("div"),i=j[0].style,m=j.children("table"),j=a.nScrollBody,l=h(j),q=j.style,t=h(a.nScrollFoot).children("div"),n=t.children("table"),o=h(a.nTHead),p=h(a.nTable),s=p[0],r=s.style,u=a.nTFoot?h(a.nTFoot):null,x=a.oBrowser,U=x.bScrollOversize,Xb=D(a.aoColumns,"nTh"),Q,L,R,w,Ua=[],y=[],z=[],A=[],B,C=function(a){a=a.style;a.paddingTop="0";a.paddingBottom="0";a.borderTopWidth="0";a.borderBottomWidth="0";a.height=0};L=j.scrollHeight>j.clientHeight;if(a.scrollBarVis!==
L&&a.scrollBarVis!==k)a.scrollBarVis=L,$(a);else{a.scrollBarVis=L;p.children("thead, tfoot").remove();u&&(R=u.clone().prependTo(p),Q=u.find("tr"),R=R.find("tr"));w=o.clone().prependTo(p);o=o.find("tr");L=w.find("tr");w.find("th, td").removeAttr("tabindex");c||(q.width="100%",f[0].style.width="100%");h.each(ra(a,w),function(b,c){B=aa(a,b);c.style.width=a.aoColumns[B].sWidth});u&&I(function(a){a.style.width=""},R);f=p.outerWidth();if(""===c){r.width="100%";if(U&&(p.find("tbody").height()>j.offsetHeight||
"scroll"==l.css("overflow-y")))r.width=v(p.outerWidth()-b);f=p.outerWidth()}else""!==d&&(r.width=v(d),f=p.outerWidth());I(C,L);I(function(a){z.push(a.innerHTML);Ua.push(v(h(a).css("width")))},L);I(function(a,b){if(h.inArray(a,Xb)!==-1)a.style.width=Ua[b]},o);h(L).height(0);u&&(I(C,R),I(function(a){A.push(a.innerHTML);y.push(v(h(a).css("width")))},R),I(function(a,b){a.style.width=y[b]},Q),h(R).height(0));I(function(a,b){a.innerHTML='<div class="dataTables_sizing">'+z[b]+"</div>";a.childNodes[0].style.height=
"0";a.childNodes[0].style.overflow="hidden";a.style.width=Ua[b]},L);u&&I(function(a,b){a.innerHTML='<div class="dataTables_sizing">'+A[b]+"</div>";a.childNodes[0].style.height="0";a.childNodes[0].style.overflow="hidden";a.style.width=y[b]},R);if(p.outerWidth()<f){Q=j.scrollHeight>j.offsetHeight||"scroll"==l.css("overflow-y")?f+b:f;if(U&&(j.scrollHeight>j.offsetHeight||"scroll"==l.css("overflow-y")))r.width=v(Q-b);(""===c||""!==d)&&K(a,1,"Possible column misalignment",6)}else Q="100%";q.width=v(Q);
g.width=v(Q);u&&(a.nScrollFoot.style.width=v(Q));!e&&U&&(q.height=v(s.offsetHeight+b));c=p.outerWidth();m[0].style.width=v(c);i.width=v(c);d=p.height()>j.clientHeight||"scroll"==l.css("overflow-y");e="padding"+(x.bScrollbarLeft?"Left":"Right");i[e]=d?b+"px":"0px";u&&(n[0].style.width=v(c),t[0].style.width=v(c),t[0].style[e]=d?b+"px":"0px");p.children("colgroup").insertBefore(p.children("thead"));l.scroll();if((a.bSorted||a.bFiltered)&&!a._drawHold)j.scrollTop=0}}function I(a,b,c){for(var d=0,e=0,
f=b.length,g,j;e<f;){g=b[e].firstChild;for(j=c?c[e].firstChild:null;g;)1===g.nodeType&&(c?a(g,j,d):a(g,d),d++),g=g.nextSibling,j=c?j.nextSibling:null;e++}}function Fa(a){var b=a.nTable,c=a.aoColumns,d=a.oScroll,e=d.sY,f=d.sX,g=d.sXInner,j=c.length,i=ma(a,"bVisible"),m=h("th",a.nTHead),l=b.getAttribute("width"),k=b.parentNode,t=!1,n,o,p=a.oBrowser,d=p.bScrollOversize;(n=b.style.width)&&-1!==n.indexOf("%")&&(l=n);for(n=0;n<i.length;n++)o=c[i[n]],null!==o.sWidth&&(o.sWidth=Eb(o.sWidthOrig,k),t=!0);if(d||
!t&&!f&&!e&&j==V(a)&&j==m.length)for(n=0;n<j;n++)i=aa(a,n),null!==i&&(c[i].sWidth=v(m.eq(n).width()));else{j=h(b).clone().css("visibility","hidden").removeAttr("id");j.find("tbody tr").remove();var s=h("<tr/>").appendTo(j.find("tbody"));j.find("thead, tfoot").remove();j.append(h(a.nTHead).clone()).append(h(a.nTFoot).clone());j.find("tfoot th, tfoot td").css("width","");m=ra(a,j.find("thead")[0]);for(n=0;n<i.length;n++)o=c[i[n]],m[n].style.width=null!==o.sWidthOrig&&""!==o.sWidthOrig?v(o.sWidthOrig):
"",o.sWidthOrig&&f&&h(m[n]).append(h("<div/>").css({width:o.sWidthOrig,margin:0,padding:0,border:0,height:1}));if(a.aoData.length)for(n=0;n<i.length;n++)t=i[n],o=c[t],h(Fb(a,t)).clone(!1).append(o.sContentPadding).appendTo(s);h("[name]",j).removeAttr("name");o=h("<div/>").css(f||e?{position:"absolute",top:0,left:0,height:1,right:0,overflow:"hidden"}:{}).append(j).appendTo(k);f&&g?j.width(g):f?(j.css("width","auto"),j.removeAttr("width"),j.width()<k.clientWidth&&l&&j.width(k.clientWidth)):e?j.width(k.clientWidth):
l&&j.width(l);for(n=e=0;n<i.length;n++)k=h(m[n]),g=k.outerWidth()-k.width(),k=p.bBounding?Math.ceil(m[n].getBoundingClientRect().width):k.outerWidth(),e+=k,c[i[n]].sWidth=v(k-g);b.style.width=v(e);o.remove()}l&&(b.style.width=v(l));if((l||f)&&!a._reszEvt)b=function(){h(E).on("resize.DT-"+a.sInstance,Oa(function(){$(a)}))},d?setTimeout(b,1E3):b(),a._reszEvt=!0}function Eb(a,b){if(!a)return 0;var c=h("<div/>").css("width",v(a)).appendTo(b||H.body),d=c[0].offsetWidth;c.remove();return d}function Fb(a,
b){var c=Gb(a,b);if(0>c)return null;var d=a.aoData[c];return!d.nTr?h("<td/>").html(B(a,c,b,"display"))[0]:d.anCells[b]}function Gb(a,b){for(var c,d=-1,e=-1,f=0,g=a.aoData.length;f<g;f++)c=B(a,f,b,"display")+"",c=c.replace(Yb,""),c=c.replace(/&nbsp;/g," "),c.length>d&&(d=c.length,e=f);return e}function v(a){return null===a?"0px":"number"==typeof a?0>a?"0px":a+"px":a.match(/\d$/)?a+"px":a}function X(a){var b,c,d=[],e=a.aoColumns,f,g,j,i;b=a.aaSortingFixed;c=h.isPlainObject(b);var m=[];f=function(a){a.length&&
!h.isArray(a[0])?m.push(a):h.merge(m,a)};h.isArray(b)&&f(b);c&&b.pre&&f(b.pre);f(a.aaSorting);c&&b.post&&f(b.post);for(a=0;a<m.length;a++){i=m[a][0];f=e[i].aDataSort;b=0;for(c=f.length;b<c;b++)g=f[b],j=e[g].sType||"string",m[a]._idx===k&&(m[a]._idx=h.inArray(m[a][1],e[g].asSorting)),d.push({src:i,col:g,dir:m[a][1],index:m[a]._idx,type:j,formatter:n.ext.type.order[j+"-pre"]})}return d}function mb(a){var b,c,d=[],e=n.ext.type.order,f=a.aoData,g=0,j,i=a.aiDisplayMaster,h;Ga(a);h=X(a);b=0;for(c=h.length;b<
c;b++)j=h[b],j.formatter&&g++,Hb(a,j.col);if("ssp"!=y(a)&&0!==h.length){b=0;for(c=i.length;b<c;b++)d[i[b]]=b;g===h.length?i.sort(function(a,b){var c,e,g,j,i=h.length,k=f[a]._aSortData,n=f[b]._aSortData;for(g=0;g<i;g++)if(j=h[g],c=k[j.col],e=n[j.col],c=c<e?-1:c>e?1:0,0!==c)return"asc"===j.dir?c:-c;c=d[a];e=d[b];return c<e?-1:c>e?1:0}):i.sort(function(a,b){var c,g,j,i,k=h.length,n=f[a]._aSortData,o=f[b]._aSortData;for(j=0;j<k;j++)if(i=h[j],c=n[i.col],g=o[i.col],i=e[i.type+"-"+i.dir]||e["string-"+i.dir],
c=i(c,g),0!==c)return c;c=d[a];g=d[b];return c<g?-1:c>g?1:0})}a.bSorted=!0}function Ib(a){for(var b,c,d=a.aoColumns,e=X(a),a=a.oLanguage.oAria,f=0,g=d.length;f<g;f++){c=d[f];var j=c.asSorting;b=c.sTitle.replace(/<.*?>/g,"");var i=c.nTh;i.removeAttribute("aria-sort");c.bSortable&&(0<e.length&&e[0].col==f?(i.setAttribute("aria-sort","asc"==e[0].dir?"ascending":"descending"),c=j[e[0].index+1]||j[0]):c=j[0],b+="asc"===c?a.sSortAscending:a.sSortDescending);i.setAttribute("aria-label",b)}}function Va(a,
b,c,d){var e=a.aaSorting,f=a.aoColumns[b].asSorting,g=function(a,b){var c=a._idx;c===k&&(c=h.inArray(a[1],f));return c+1<f.length?c+1:b?null:0};"number"===typeof e[0]&&(e=a.aaSorting=[e]);c&&a.oFeatures.bSortMulti?(c=h.inArray(b,D(e,"0")),-1!==c?(b=g(e[c],!0),null===b&&1===e.length&&(b=0),null===b?e.splice(c,1):(e[c][1]=f[b],e[c]._idx=b)):(e.push([b,f[0],0]),e[e.length-1]._idx=0)):e.length&&e[0][0]==b?(b=g(e[0]),e.length=1,e[0][1]=f[b],e[0]._idx=b):(e.length=0,e.push([b,f[0]]),e[0]._idx=0);T(a);"function"==
typeof d&&d(a)}function Ma(a,b,c,d){var e=a.aoColumns[c];Wa(b,{},function(b){!1!==e.bSortable&&(a.oFeatures.bProcessing?(C(a,!0),setTimeout(function(){Va(a,c,b.shiftKey,d);"ssp"!==y(a)&&C(a,!1)},0)):Va(a,c,b.shiftKey,d))})}function wa(a){var b=a.aLastSort,c=a.oClasses.sSortColumn,d=X(a),e=a.oFeatures,f,g;if(e.bSort&&e.bSortClasses){e=0;for(f=b.length;e<f;e++)g=b[e].src,h(D(a.aoData,"anCells",g)).removeClass(c+(2>e?e+1:3));e=0;for(f=d.length;e<f;e++)g=d[e].src,h(D(a.aoData,"anCells",g)).addClass(c+
(2>e?e+1:3))}a.aLastSort=d}function Hb(a,b){var c=a.aoColumns[b],d=n.ext.order[c.sSortDataType],e;d&&(e=d.call(a.oInstance,a,b,ba(a,b)));for(var f,g=n.ext.type.order[c.sType+"-pre"],j=0,i=a.aoData.length;j<i;j++)if(c=a.aoData[j],c._aSortData||(c._aSortData=[]),!c._aSortData[b]||d)f=d?e[j]:B(a,j,b,"sort"),c._aSortData[b]=g?g(f):f}function xa(a){if(a.oFeatures.bStateSave&&!a.bDestroying){var b={time:+new Date,start:a._iDisplayStart,length:a._iDisplayLength,order:h.extend(!0,[],a.aaSorting),search:Ab(a.oPreviousSearch),
columns:h.map(a.aoColumns,function(b,d){return{visible:b.bVisible,search:Ab(a.aoPreSearchCols[d])}})};r(a,"aoStateSaveParams","stateSaveParams",[a,b]);a.oSavedState=b;a.fnStateSaveCallback.call(a.oInstance,a,b)}}function Jb(a,b,c){var d,e,f=a.aoColumns,b=function(b){if(b&&b.time){var g=r(a,"aoStateLoadParams","stateLoadParams",[a,b]);if(-1===h.inArray(!1,g)&&(g=a.iStateDuration,!(0<g&&b.time<+new Date-1E3*g)&&!(b.columns&&f.length!==b.columns.length))){a.oLoadedState=h.extend(!0,{},b);b.start!==k&&
(a._iDisplayStart=b.start,a.iInitDisplayStart=b.start);b.length!==k&&(a._iDisplayLength=b.length);b.order!==k&&(a.aaSorting=[],h.each(b.order,function(b,c){a.aaSorting.push(c[0]>=f.length?[0,c[1]]:c)}));b.search!==k&&h.extend(a.oPreviousSearch,Bb(b.search));if(b.columns){d=0;for(e=b.columns.length;d<e;d++)g=b.columns[d],g.visible!==k&&(f[d].bVisible=g.visible),g.search!==k&&h.extend(a.aoPreSearchCols[d],Bb(g.search))}r(a,"aoStateLoaded","stateLoaded",[a,b])}}c()};if(a.oFeatures.bStateSave){var g=
a.fnStateLoadCallback.call(a.oInstance,a,b);g!==k&&b(g)}else c()}function ya(a){var b=n.settings,a=h.inArray(a,D(b,"nTable"));return-1!==a?b[a]:null}function K(a,b,c,d){c="DataTables warning: "+(a?"table id="+a.sTableId+" - ":"")+c;d&&(c+=". For more information about this error, please see http://datatables.net/tn/"+d);if(b)E.console&&console.log&&console.log(c);else if(b=n.ext,b=b.sErrMode||b.errMode,a&&r(a,null,"error",[a,d,c]),"alert"==b)alert(c);else{if("throw"==b)throw Error(c);"function"==
typeof b&&b(a,d,c)}}function F(a,b,c,d){h.isArray(c)?h.each(c,function(c,d){h.isArray(d)?F(a,b,d[0],d[1]):F(a,b,d)}):(d===k&&(d=c),b[c]!==k&&(a[d]=b[c]))}function Xa(a,b,c){var d,e;for(e in b)b.hasOwnProperty(e)&&(d=b[e],h.isPlainObject(d)?(h.isPlainObject(a[e])||(a[e]={}),h.extend(!0,a[e],d)):a[e]=c&&"data"!==e&&"aaData"!==e&&h.isArray(d)?d.slice():d);return a}function Wa(a,b,c){h(a).on("click.DT",b,function(b){h(a).blur();c(b)}).on("keypress.DT",b,function(a){13===a.which&&(a.preventDefault(),c(a))}).on("selectstart.DT",
function(){return!1})}function z(a,b,c,d){c&&a[b].push({fn:c,sName:d})}function r(a,b,c,d){var e=[];b&&(e=h.map(a[b].slice().reverse(),function(b){return b.fn.apply(a.oInstance,d)}));null!==c&&(b=h.Event(c+".dt"),h(a.nTable).trigger(b,d),e.push(b.result));return e}function Sa(a){var b=a._iDisplayStart,c=a.fnDisplayEnd(),d=a._iDisplayLength;b>=c&&(b=c-d);b-=b%d;if(-1===d||0>b)b=0;a._iDisplayStart=b}function Na(a,b){var c=a.renderer,d=n.ext.renderer[b];return h.isPlainObject(c)&&c[b]?d[c[b]]||d._:"string"===
typeof c?d[c]||d._:d._}function y(a){return a.oFeatures.bServerSide?"ssp":a.ajax||a.sAjaxSource?"ajax":"dom"}function ia(a,b){var c=[],c=Kb.numbers_length,d=Math.floor(c/2);b<=c?c=Y(0,b):a<=d?(c=Y(0,c-2),c.push("ellipsis"),c.push(b-1)):(a>=b-1-d?c=Y(b-(c-2),b):(c=Y(a-d+2,a+d-1),c.push("ellipsis"),c.push(b-1)),c.splice(0,0,"ellipsis"),c.splice(0,0,0));c.DT_el="span";return c}function Da(a){h.each({num:function(b){return za(b,a)},"num-fmt":function(b){return za(b,a,Ya)},"html-num":function(b){return za(b,
a,Aa)},"html-num-fmt":function(b){return za(b,a,Aa,Ya)}},function(b,c){x.type.order[b+a+"-pre"]=c;b.match(/^html\-/)&&(x.type.search[b+a]=x.type.search.html)})}function Lb(a){return function(){var b=[ya(this[n.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));return n.ext.internal[a].apply(this,b)}}var n=function(a){this.$=function(a,b){return this.api(!0).$(a,b)};this._=function(a,b){return this.api(!0).rows(a,b).data()};this.api=function(a){return a?new s(ya(this[x.iApiIndex])):new s(this)};
this.fnAddData=function(a,b){var c=this.api(!0),d=h.isArray(a)&&(h.isArray(a[0])||h.isPlainObject(a[0]))?c.rows.add(a):c.row.add(a);(b===k||b)&&c.draw();return d.flatten().toArray()};this.fnAdjustColumnSizing=function(a){var b=this.api(!0).columns.adjust(),c=b.settings()[0],d=c.oScroll;a===k||a?b.draw(!1):(""!==d.sX||""!==d.sY)&&la(c)};this.fnClearTable=function(a){var b=this.api(!0).clear();(a===k||a)&&b.draw()};this.fnClose=function(a){this.api(!0).row(a).child.hide()};this.fnDeleteRow=function(a,
b,c){var d=this.api(!0),a=d.rows(a),e=a.settings()[0],h=e.aoData[a[0][0]];a.remove();b&&b.call(this,e,h);(c===k||c)&&d.draw();return h};this.fnDestroy=function(a){this.api(!0).destroy(a)};this.fnDraw=function(a){this.api(!0).draw(a)};this.fnFilter=function(a,b,c,d,e,h){e=this.api(!0);null===b||b===k?e.search(a,c,d,h):e.column(b).search(a,c,d,h);e.draw()};this.fnGetData=function(a,b){var c=this.api(!0);if(a!==k){var d=a.nodeName?a.nodeName.toLowerCase():"";return b!==k||"td"==d||"th"==d?c.cell(a,b).data():
c.row(a).data()||null}return c.data().toArray()};this.fnGetNodes=function(a){var b=this.api(!0);return a!==k?b.row(a).node():b.rows().nodes().flatten().toArray()};this.fnGetPosition=function(a){var b=this.api(!0),c=a.nodeName.toUpperCase();return"TR"==c?b.row(a).index():"TD"==c||"TH"==c?(a=b.cell(a).index(),[a.row,a.columnVisible,a.column]):null};this.fnIsOpen=function(a){return this.api(!0).row(a).child.isShown()};this.fnOpen=function(a,b,c){return this.api(!0).row(a).child(b,c).show().child()[0]};
this.fnPageChange=function(a,b){var c=this.api(!0).page(a);(b===k||b)&&c.draw(!1)};this.fnSetColumnVis=function(a,b,c){a=this.api(!0).column(a).visible(b);(c===k||c)&&a.columns.adjust().draw()};this.fnSettings=function(){return ya(this[x.iApiIndex])};this.fnSort=function(a){this.api(!0).order(a).draw()};this.fnSortListener=function(a,b,c){this.api(!0).order.listener(a,b,c)};this.fnUpdate=function(a,b,c,d,e){var h=this.api(!0);c===k||null===c?h.row(b).data(a):h.cell(b,c).data(a);(e===k||e)&&h.columns.adjust();
(d===k||d)&&h.draw();return 0};this.fnVersionCheck=x.fnVersionCheck;var b=this,c=a===k,d=this.length;c&&(a={});this.oApi=this.internal=x.internal;for(var e in n.ext.internal)e&&(this[e]=Lb(e));this.each(function(){var e={},g=1<d?Xa(e,a,!0):a,j=0,i,e=this.getAttribute("id"),m=!1,l=n.defaults,q=h(this);if("table"!=this.nodeName.toLowerCase())K(null,0,"Non-table node initialisation ("+this.nodeName+")",2);else{eb(l);fb(l.column);J(l,l,!0);J(l.column,l.column,!0);J(l,h.extend(g,q.data()));var t=n.settings,
j=0;for(i=t.length;j<i;j++){var o=t[j];if(o.nTable==this||o.nTHead&&o.nTHead.parentNode==this||o.nTFoot&&o.nTFoot.parentNode==this){var s=g.bRetrieve!==k?g.bRetrieve:l.bRetrieve;if(c||s)return o.oInstance;if(g.bDestroy!==k?g.bDestroy:l.bDestroy){o.oInstance.fnDestroy();break}else{K(o,0,"Cannot reinitialise DataTable",3);return}}if(o.sTableId==this.id){t.splice(j,1);break}}if(null===e||""===e)this.id=e="DataTables_Table_"+n.ext._unique++;var p=h.extend(!0,{},n.models.oSettings,{sDestroyWidth:q[0].style.width,
sInstance:e,sTableId:e});p.nTable=this;p.oApi=b.internal;p.oInit=g;t.push(p);p.oInstance=1===b.length?b:q.dataTable();eb(g);Ca(g.oLanguage);g.aLengthMenu&&!g.iDisplayLength&&(g.iDisplayLength=h.isArray(g.aLengthMenu[0])?g.aLengthMenu[0][0]:g.aLengthMenu[0]);g=Xa(h.extend(!0,{},l),g);F(p.oFeatures,g,"bPaginate bLengthChange bFilter bSort bSortMulti bInfo bProcessing bAutoWidth bSortClasses bServerSide bDeferRender".split(" "));F(p,g,["asStripeClasses","ajax","fnServerData","fnFormatNumber","sServerMethod",
"aaSorting","aaSortingFixed","aLengthMenu","sPaginationType","sAjaxSource","sAjaxDataProp","iStateDuration","sDom","bSortCellsTop","iTabIndex","fnStateLoadCallback","fnStateSaveCallback","renderer","searchDelay","rowId",["iCookieDuration","iStateDuration"],["oSearch","oPreviousSearch"],["aoSearchCols","aoPreSearchCols"],["iDisplayLength","_iDisplayLength"]]);F(p.oScroll,g,[["sScrollX","sX"],["sScrollXInner","sXInner"],["sScrollY","sY"],["bScrollCollapse","bCollapse"]]);F(p.oLanguage,g,"fnInfoCallback");
z(p,"aoDrawCallback",g.fnDrawCallback,"user");z(p,"aoServerParams",g.fnServerParams,"user");z(p,"aoStateSaveParams",g.fnStateSaveParams,"user");z(p,"aoStateLoadParams",g.fnStateLoadParams,"user");z(p,"aoStateLoaded",g.fnStateLoaded,"user");z(p,"aoRowCallback",g.fnRowCallback,"user");z(p,"aoRowCreatedCallback",g.fnCreatedRow,"user");z(p,"aoHeaderCallback",g.fnHeaderCallback,"user");z(p,"aoFooterCallback",g.fnFooterCallback,"user");z(p,"aoInitComplete",g.fnInitComplete,"user");z(p,"aoPreDrawCallback",
g.fnPreDrawCallback,"user");p.rowIdFn=S(g.rowId);gb(p);var u=p.oClasses;h.extend(u,n.ext.classes,g.oClasses);q.addClass(u.sTable);p.iInitDisplayStart===k&&(p.iInitDisplayStart=g.iDisplayStart,p._iDisplayStart=g.iDisplayStart);null!==g.iDeferLoading&&(p.bDeferLoading=!0,e=h.isArray(g.iDeferLoading),p._iRecordsDisplay=e?g.iDeferLoading[0]:g.iDeferLoading,p._iRecordsTotal=e?g.iDeferLoading[1]:g.iDeferLoading);var v=p.oLanguage;h.extend(!0,v,g.oLanguage);v.sUrl&&(h.ajax({dataType:"json",url:v.sUrl,success:function(a){Ca(a);
J(l.oLanguage,a);h.extend(true,v,a);ha(p)},error:function(){ha(p)}}),m=!0);null===g.asStripeClasses&&(p.asStripeClasses=[u.sStripeOdd,u.sStripeEven]);var e=p.asStripeClasses,x=q.children("tbody").find("tr").eq(0);-1!==h.inArray(!0,h.map(e,function(a){return x.hasClass(a)}))&&(h("tbody tr",this).removeClass(e.join(" ")),p.asDestroyStripes=e.slice());e=[];t=this.getElementsByTagName("thead");0!==t.length&&(ea(p.aoHeader,t[0]),e=ra(p));if(null===g.aoColumns){t=[];j=0;for(i=e.length;j<i;j++)t.push(null)}else t=
g.aoColumns;j=0;for(i=t.length;j<i;j++)Ea(p,e?e[j]:null);ib(p,g.aoColumnDefs,t,function(a,b){ka(p,a,b)});if(x.length){var w=function(a,b){return a.getAttribute("data-"+b)!==null?b:null};h(x[0]).children("th, td").each(function(a,b){var c=p.aoColumns[a];if(c.mData===a){var d=w(b,"sort")||w(b,"order"),e=w(b,"filter")||w(b,"search");if(d!==null||e!==null){c.mData={_:a+".display",sort:d!==null?a+".@data-"+d:k,type:d!==null?a+".@data-"+d:k,filter:e!==null?a+".@data-"+e:k};ka(p,a)}}})}var U=p.oFeatures,
e=function(){if(g.aaSorting===k){var a=p.aaSorting;j=0;for(i=a.length;j<i;j++)a[j][1]=p.aoColumns[j].asSorting[0]}wa(p);U.bSort&&z(p,"aoDrawCallback",function(){if(p.bSorted){var a=X(p),b={};h.each(a,function(a,c){b[c.src]=c.dir});r(p,null,"order",[p,a,b]);Ib(p)}});z(p,"aoDrawCallback",function(){(p.bSorted||y(p)==="ssp"||U.bDeferRender)&&wa(p)},"sc");var a=q.children("caption").each(function(){this._captionSide=h(this).css("caption-side")}),b=q.children("thead");b.length===0&&(b=h("<thead/>").appendTo(q));
p.nTHead=b[0];b=q.children("tbody");b.length===0&&(b=h("<tbody/>").appendTo(q));p.nTBody=b[0];b=q.children("tfoot");if(b.length===0&&a.length>0&&(p.oScroll.sX!==""||p.oScroll.sY!==""))b=h("<tfoot/>").appendTo(q);if(b.length===0||b.children().length===0)q.addClass(u.sNoFooter);else if(b.length>0){p.nTFoot=b[0];ea(p.aoFooter,p.nTFoot)}if(g.aaData)for(j=0;j<g.aaData.length;j++)O(p,g.aaData[j]);else(p.bDeferLoading||y(p)=="dom")&&na(p,h(p.nTBody).children("tr"));p.aiDisplay=p.aiDisplayMaster.slice();
p.bInitialised=true;m===false&&ha(p)};g.bStateSave?(U.bStateSave=!0,z(p,"aoDrawCallback",xa,"state_save"),Jb(p,g,e)):e()}});b=null;return this},x,s,o,u,Za={},Mb=/[\r\n]/g,Aa=/<.*?>/g,Zb=/^\d{2,4}[\.\/\-]\d{1,2}[\.\/\-]\d{1,2}([T ]{1}\d{1,2}[:\.]\d{2}([\.:]\d{2})?)?$/,$b=RegExp("(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\|\\$|\\^|\\-)","g"),Ya=/[',$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfkɃΞ]/gi,M=function(a){return!a||!0===a||"-"===a?!0:!1},Nb=function(a){var b=parseInt(a,10);return!isNaN(b)&&
isFinite(a)?b:null},Ob=function(a,b){Za[b]||(Za[b]=RegExp(Qa(b),"g"));return"string"===typeof a&&"."!==b?a.replace(/\./g,"").replace(Za[b],"."):a},$a=function(a,b,c){var d="string"===typeof a;if(M(a))return!0;b&&d&&(a=Ob(a,b));c&&d&&(a=a.replace(Ya,""));return!isNaN(parseFloat(a))&&isFinite(a)},Pb=function(a,b,c){return M(a)?!0:!(M(a)||"string"===typeof a)?null:$a(a.replace(Aa,""),b,c)?!0:null},D=function(a,b,c){var d=[],e=0,f=a.length;if(c!==k)for(;e<f;e++)a[e]&&a[e][b]&&d.push(a[e][b][c]);else for(;e<
f;e++)a[e]&&d.push(a[e][b]);return d},ja=function(a,b,c,d){var e=[],f=0,g=b.length;if(d!==k)for(;f<g;f++)a[b[f]][c]&&e.push(a[b[f]][c][d]);else for(;f<g;f++)e.push(a[b[f]][c]);return e},Y=function(a,b){var c=[],d;b===k?(b=0,d=a):(d=b,b=a);for(var e=b;e<d;e++)c.push(e);return c},Qb=function(a){for(var b=[],c=0,d=a.length;c<d;c++)a[c]&&b.push(a[c]);return b},qa=function(a){var b;a:{if(!(2>a.length)){b=a.slice().sort();for(var c=b[0],d=1,e=b.length;d<e;d++){if(b[d]===c){b=!1;break a}c=b[d]}}b=!0}if(b)return a.slice();
b=[];var e=a.length,f,g=0,d=0;a:for(;d<e;d++){c=a[d];for(f=0;f<g;f++)if(b[f]===c)continue a;b.push(c);g++}return b};n.util={throttle:function(a,b){var c=b!==k?b:200,d,e;return function(){var b=this,g=+new Date,j=arguments;d&&g<d+c?(clearTimeout(e),e=setTimeout(function(){d=k;a.apply(b,j)},c)):(d=g,a.apply(b,j))}},escapeRegex:function(a){return a.replace($b,"\\$1")}};var A=function(a,b,c){a[b]!==k&&(a[c]=a[b])},ca=/\[.*?\]$/,W=/\(\)$/,Qa=n.util.escapeRegex,va=h("<div>")[0],Wb=va.textContent!==k,Yb=
/<.*?>/g,Oa=n.util.throttle,Rb=[],w=Array.prototype,ac=function(a){var b,c,d=n.settings,e=h.map(d,function(a){return a.nTable});if(a){if(a.nTable&&a.oApi)return[a];if(a.nodeName&&"table"===a.nodeName.toLowerCase())return b=h.inArray(a,e),-1!==b?[d[b]]:null;if(a&&"function"===typeof a.settings)return a.settings().toArray();"string"===typeof a?c=h(a):a instanceof h&&(c=a)}else return[];if(c)return c.map(function(){b=h.inArray(this,e);return-1!==b?d[b]:null}).toArray()};s=function(a,b){if(!(this instanceof
s))return new s(a,b);var c=[],d=function(a){(a=ac(a))&&(c=c.concat(a))};if(h.isArray(a))for(var e=0,f=a.length;e<f;e++)d(a[e]);else d(a);this.context=qa(c);b&&h.merge(this,b);this.selector={rows:null,cols:null,opts:null};s.extend(this,this,Rb)};n.Api=s;h.extend(s.prototype,{any:function(){return 0!==this.count()},concat:w.concat,context:[],count:function(){return this.flatten().length},each:function(a){for(var b=0,c=this.length;b<c;b++)a.call(this,this[b],b,this);return this},eq:function(a){var b=
this.context;return b.length>a?new s(b[a],this[a]):null},filter:function(a){var b=[];if(w.filter)b=w.filter.call(this,a,this);else for(var c=0,d=this.length;c<d;c++)a.call(this,this[c],c,this)&&b.push(this[c]);return new s(this.context,b)},flatten:function(){var a=[];return new s(this.context,a.concat.apply(a,this.toArray()))},join:w.join,indexOf:w.indexOf||function(a,b){for(var c=b||0,d=this.length;c<d;c++)if(this[c]===a)return c;return-1},iterator:function(a,b,c,d){var e=[],f,g,j,h,m,l=this.context,
n,o,u=this.selector;"string"===typeof a&&(d=c,c=b,b=a,a=!1);g=0;for(j=l.length;g<j;g++){var r=new s(l[g]);if("table"===b)f=c.call(r,l[g],g),f!==k&&e.push(f);else if("columns"===b||"rows"===b)f=c.call(r,l[g],this[g],g),f!==k&&e.push(f);else if("column"===b||"column-rows"===b||"row"===b||"cell"===b){o=this[g];"column-rows"===b&&(n=Ba(l[g],u.opts));h=0;for(m=o.length;h<m;h++)f=o[h],f="cell"===b?c.call(r,l[g],f.row,f.column,g,h):c.call(r,l[g],f,g,h,n),f!==k&&e.push(f)}}return e.length||d?(a=new s(l,a?
e.concat.apply([],e):e),b=a.selector,b.rows=u.rows,b.cols=u.cols,b.opts=u.opts,a):this},lastIndexOf:w.lastIndexOf||function(a,b){return this.indexOf.apply(this.toArray.reverse(),arguments)},length:0,map:function(a){var b=[];if(w.map)b=w.map.call(this,a,this);else for(var c=0,d=this.length;c<d;c++)b.push(a.call(this,this[c],c));return new s(this.context,b)},pluck:function(a){return this.map(function(b){return b[a]})},pop:w.pop,push:w.push,reduce:w.reduce||function(a,b){return hb(this,a,b,0,this.length,
1)},reduceRight:w.reduceRight||function(a,b){return hb(this,a,b,this.length-1,-1,-1)},reverse:w.reverse,selector:null,shift:w.shift,slice:function(){return new s(this.context,this)},sort:w.sort,splice:w.splice,toArray:function(){return w.slice.call(this)},to$:function(){return h(this)},toJQuery:function(){return h(this)},unique:function(){return new s(this.context,qa(this))},unshift:w.unshift});s.extend=function(a,b,c){if(c.length&&b&&(b instanceof s||b.__dt_wrapper)){var d,e,f,g=function(a,b,c){return function(){var d=
b.apply(a,arguments);s.extend(d,d,c.methodExt);return d}};d=0;for(e=c.length;d<e;d++)f=c[d],b[f.name]="function"===typeof f.val?g(a,f.val,f):h.isPlainObject(f.val)?{}:f.val,b[f.name].__dt_wrapper=!0,s.extend(a,b[f.name],f.propExt)}};s.register=o=function(a,b){if(h.isArray(a))for(var c=0,d=a.length;c<d;c++)s.register(a[c],b);else for(var e=a.split("."),f=Rb,g,j,c=0,d=e.length;c<d;c++){g=(j=-1!==e[c].indexOf("()"))?e[c].replace("()",""):e[c];var i;a:{i=0;for(var m=f.length;i<m;i++)if(f[i].name===g){i=
f[i];break a}i=null}i||(i={name:g,val:{},methodExt:[],propExt:[]},f.push(i));c===d-1?i.val=b:f=j?i.methodExt:i.propExt}};s.registerPlural=u=function(a,b,c){s.register(a,c);s.register(b,function(){var a=c.apply(this,arguments);return a===this?this:a instanceof s?a.length?h.isArray(a[0])?new s(a.context,a[0]):a[0]:k:a})};o("tables()",function(a){var b;if(a){b=s;var c=this.context;if("number"===typeof a)a=[c[a]];else var d=h.map(c,function(a){return a.nTable}),a=h(d).filter(a).map(function(){var a=h.inArray(this,
d);return c[a]}).toArray();b=new b(a)}else b=this;return b});o("table()",function(a){var a=this.tables(a),b=a.context;return b.length?new s(b[0]):a});u("tables().nodes()","table().node()",function(){return this.iterator("table",function(a){return a.nTable},1)});u("tables().body()","table().body()",function(){return this.iterator("table",function(a){return a.nTBody},1)});u("tables().header()","table().header()",function(){return this.iterator("table",function(a){return a.nTHead},1)});u("tables().footer()",
"table().footer()",function(){return this.iterator("table",function(a){return a.nTFoot},1)});u("tables().containers()","table().container()",function(){return this.iterator("table",function(a){return a.nTableWrapper},1)});o("draw()",function(a){return this.iterator("table",function(b){"page"===a?P(b):("string"===typeof a&&(a="full-hold"===a?!1:!0),T(b,!1===a))})});o("page()",function(a){return a===k?this.page.info().page:this.iterator("table",function(b){Ta(b,a)})});o("page.info()",function(){if(0===
this.context.length)return k;var a=this.context[0],b=a._iDisplayStart,c=a.oFeatures.bPaginate?a._iDisplayLength:-1,d=a.fnRecordsDisplay(),e=-1===c;return{page:e?0:Math.floor(b/c),pages:e?1:Math.ceil(d/c),start:b,end:a.fnDisplayEnd(),length:c,recordsTotal:a.fnRecordsTotal(),recordsDisplay:d,serverSide:"ssp"===y(a)}});o("page.len()",function(a){return a===k?0!==this.context.length?this.context[0]._iDisplayLength:k:this.iterator("table",function(b){Ra(b,a)})});var Sb=function(a,b,c){if(c){var d=new s(a);
d.one("draw",function(){c(d.ajax.json())})}if("ssp"==y(a))T(a,b);else{C(a,!0);var e=a.jqXHR;e&&4!==e.readyState&&e.abort();sa(a,[],function(c){oa(a);for(var c=ta(a,c),d=0,e=c.length;d<e;d++)O(a,c[d]);T(a,b);C(a,!1)})}};o("ajax.json()",function(){var a=this.context;if(0<a.length)return a[0].json});o("ajax.params()",function(){var a=this.context;if(0<a.length)return a[0].oAjaxData});o("ajax.reload()",function(a,b){return this.iterator("table",function(c){Sb(c,!1===b,a)})});o("ajax.url()",function(a){var b=
this.context;if(a===k){if(0===b.length)return k;b=b[0];return b.ajax?h.isPlainObject(b.ajax)?b.ajax.url:b.ajax:b.sAjaxSource}return this.iterator("table",function(b){h.isPlainObject(b.ajax)?b.ajax.url=a:b.ajax=a})});o("ajax.url().load()",function(a,b){return this.iterator("table",function(c){Sb(c,!1===b,a)})});var ab=function(a,b,c,d,e){var f=[],g,j,i,m,l,n;i=typeof b;if(!b||"string"===i||"function"===i||b.length===k)b=[b];i=0;for(m=b.length;i<m;i++){j=b[i]&&b[i].split&&!b[i].match(/[\[\(:]/)?b[i].split(","):
[b[i]];l=0;for(n=j.length;l<n;l++)(g=c("string"===typeof j[l]?h.trim(j[l]):j[l]))&&g.length&&(f=f.concat(g))}a=x.selector[a];if(a.length){i=0;for(m=a.length;i<m;i++)f=a[i](d,e,f)}return qa(f)},bb=function(a){a||(a={});a.filter&&a.search===k&&(a.search=a.filter);return h.extend({search:"none",order:"current",page:"all"},a)},cb=function(a){for(var b=0,c=a.length;b<c;b++)if(0<a[b].length)return a[0]=a[b],a[0].length=1,a.length=1,a.context=[a.context[b]],a;a.length=0;return a},Ba=function(a,b){var c,
d,e,f=[],g=a.aiDisplay;e=a.aiDisplayMaster;var j=b.search;c=b.order;d=b.page;if("ssp"==y(a))return"removed"===j?[]:Y(0,e.length);if("current"==d){c=a._iDisplayStart;for(d=a.fnDisplayEnd();c<d;c++)f.push(g[c])}else if("current"==c||"applied"==c)if("none"==j)f=e.slice();else if("applied"==j)f=g.slice();else{if("removed"==j){var i={};c=0;for(d=g.length;c<d;c++)i[g[c]]=null;f=h.map(e,function(a){return!i.hasOwnProperty(a)?a:null})}}else if("index"==c||"original"==c){c=0;for(d=a.aoData.length;c<d;c++)"none"==
j?f.push(c):(e=h.inArray(c,g),(-1===e&&"removed"==j||0<=e&&"applied"==j)&&f.push(c))}return f};o("rows()",function(a,b){a===k?a="":h.isPlainObject(a)&&(b=a,a="");var b=bb(b),c=this.iterator("table",function(c){var e=b,f;return ab("row",a,function(a){var b=Nb(a),i=c.aoData;if(b!==null&&!e)return[b];f||(f=Ba(c,e));if(b!==null&&h.inArray(b,f)!==-1)return[b];if(a===null||a===k||a==="")return f;if(typeof a==="function")return h.map(f,function(b){var c=i[b];return a(b,c._aData,c.nTr)?b:null});if(a.nodeName){var b=
a._DT_RowIndex,m=a._DT_CellIndex;if(b!==k)return i[b]&&i[b].nTr===a?[b]:[];if(m)return i[m.row]&&i[m.row].nTr===a?[m.row]:[];b=h(a).closest("*[data-dt-row]");return b.length?[b.data("dt-row")]:[]}if(typeof a==="string"&&a.charAt(0)==="#"){b=c.aIds[a.replace(/^#/,"")];if(b!==k)return[b.idx]}b=Qb(ja(c.aoData,f,"nTr"));return h(b).filter(a).map(function(){return this._DT_RowIndex}).toArray()},c,e)},1);c.selector.rows=a;c.selector.opts=b;return c});o("rows().nodes()",function(){return this.iterator("row",
function(a,b){return a.aoData[b].nTr||k},1)});o("rows().data()",function(){return this.iterator(!0,"rows",function(a,b){return ja(a.aoData,b,"_aData")},1)});u("rows().cache()","row().cache()",function(a){return this.iterator("row",function(b,c){var d=b.aoData[c];return"search"===a?d._aFilterData:d._aSortData},1)});u("rows().invalidate()","row().invalidate()",function(a){return this.iterator("row",function(b,c){da(b,c,a)})});u("rows().indexes()","row().index()",function(){return this.iterator("row",
function(a,b){return b},1)});u("rows().ids()","row().id()",function(a){for(var b=[],c=this.context,d=0,e=c.length;d<e;d++)for(var f=0,g=this[d].length;f<g;f++){var h=c[d].rowIdFn(c[d].aoData[this[d][f]]._aData);b.push((!0===a?"#":"")+h)}return new s(c,b)});u("rows().remove()","row().remove()",function(){var a=this;this.iterator("row",function(b,c,d){var e=b.aoData,f=e[c],g,h,i,m,l;e.splice(c,1);g=0;for(h=e.length;g<h;g++)if(i=e[g],l=i.anCells,null!==i.nTr&&(i.nTr._DT_RowIndex=g),null!==l){i=0;for(m=
l.length;i<m;i++)l[i]._DT_CellIndex.row=g}pa(b.aiDisplayMaster,c);pa(b.aiDisplay,c);pa(a[d],c,!1);0<b._iRecordsDisplay&&b._iRecordsDisplay--;Sa(b);c=b.rowIdFn(f._aData);c!==k&&delete b.aIds[c]});this.iterator("table",function(a){for(var c=0,d=a.aoData.length;c<d;c++)a.aoData[c].idx=c});return this});o("rows.add()",function(a){var b=this.iterator("table",function(b){var c,f,g,h=[];f=0;for(g=a.length;f<g;f++)c=a[f],c.nodeName&&"TR"===c.nodeName.toUpperCase()?h.push(na(b,c)[0]):h.push(O(b,c));return h},
1),c=this.rows(-1);c.pop();h.merge(c,b);return c});o("row()",function(a,b){return cb(this.rows(a,b))});o("row().data()",function(a){var b=this.context;if(a===k)return b.length&&this.length?b[0].aoData[this[0]]._aData:k;var c=b[0].aoData[this[0]];c._aData=a;h.isArray(a)&&c.nTr.id&&N(b[0].rowId)(a,c.nTr.id);da(b[0],this[0],"data");return this});o("row().node()",function(){var a=this.context;return a.length&&this.length?a[0].aoData[this[0]].nTr||null:null});o("row.add()",function(a){a instanceof h&&
a.length&&(a=a[0]);var b=this.iterator("table",function(b){return a.nodeName&&"TR"===a.nodeName.toUpperCase()?na(b,a)[0]:O(b,a)});return this.row(b[0])});var db=function(a,b){var c=a.context;if(c.length&&(c=c[0].aoData[b!==k?b:a[0]])&&c._details)c._details.remove(),c._detailsShow=k,c._details=k},Tb=function(a,b){var c=a.context;if(c.length&&a.length){var d=c[0].aoData[a[0]];if(d._details){(d._detailsShow=b)?d._details.insertAfter(d.nTr):d._details.detach();var e=c[0],f=new s(e),g=e.aoData;f.off("draw.dt.DT_details column-visibility.dt.DT_details destroy.dt.DT_details");
0<D(g,"_details").length&&(f.on("draw.dt.DT_details",function(a,b){e===b&&f.rows({page:"current"}).eq(0).each(function(a){a=g[a];a._detailsShow&&a._details.insertAfter(a.nTr)})}),f.on("column-visibility.dt.DT_details",function(a,b){if(e===b)for(var c,d=V(b),f=0,h=g.length;f<h;f++)c=g[f],c._details&&c._details.children("td[colspan]").attr("colspan",d)}),f.on("destroy.dt.DT_details",function(a,b){if(e===b)for(var c=0,d=g.length;c<d;c++)g[c]._details&&db(f,c)}))}}};o("row().child()",function(a,b){var c=
this.context;if(a===k)return c.length&&this.length?c[0].aoData[this[0]]._details:k;if(!0===a)this.child.show();else if(!1===a)db(this);else if(c.length&&this.length){var d=c[0],c=c[0].aoData[this[0]],e=[],f=function(a,b){if(h.isArray(a)||a instanceof h)for(var c=0,k=a.length;c<k;c++)f(a[c],b);else a.nodeName&&"tr"===a.nodeName.toLowerCase()?e.push(a):(c=h("<tr><td/></tr>").addClass(b),h("td",c).addClass(b).html(a)[0].colSpan=V(d),e.push(c[0]))};f(a,b);c._details&&c._details.detach();c._details=h(e);
c._detailsShow&&c._details.insertAfter(c.nTr)}return this});o(["row().child.show()","row().child().show()"],function(){Tb(this,!0);return this});o(["row().child.hide()","row().child().hide()"],function(){Tb(this,!1);return this});o(["row().child.remove()","row().child().remove()"],function(){db(this);return this});o("row().child.isShown()",function(){var a=this.context;return a.length&&this.length?a[0].aoData[this[0]]._detailsShow||!1:!1});var bc=/^([^:]+):(name|visIdx|visible)$/,Ub=function(a,b,
c,d,e){for(var c=[],d=0,f=e.length;d<f;d++)c.push(B(a,e[d],b));return c};o("columns()",function(a,b){a===k?a="":h.isPlainObject(a)&&(b=a,a="");var b=bb(b),c=this.iterator("table",function(c){var e=a,f=b,g=c.aoColumns,j=D(g,"sName"),i=D(g,"nTh");return ab("column",e,function(a){var b=Nb(a);if(a==="")return Y(g.length);if(b!==null)return[b>=0?b:g.length+b];if(typeof a==="function"){var e=Ba(c,f);return h.map(g,function(b,f){return a(f,Ub(c,f,0,0,e),i[f])?f:null})}var k=typeof a==="string"?a.match(bc):
"";if(k)switch(k[2]){case "visIdx":case "visible":b=parseInt(k[1],10);if(b<0){var n=h.map(g,function(a,b){return a.bVisible?b:null});return[n[n.length+b]]}return[aa(c,b)];case "name":return h.map(j,function(a,b){return a===k[1]?b:null});default:return[]}if(a.nodeName&&a._DT_CellIndex)return[a._DT_CellIndex.column];b=h(i).filter(a).map(function(){return h.inArray(this,i)}).toArray();if(b.length||!a.nodeName)return b;b=h(a).closest("*[data-dt-column]");return b.length?[b.data("dt-column")]:[]},c,f)},
1);c.selector.cols=a;c.selector.opts=b;return c});u("columns().header()","column().header()",function(){return this.iterator("column",function(a,b){return a.aoColumns[b].nTh},1)});u("columns().footer()","column().footer()",function(){return this.iterator("column",function(a,b){return a.aoColumns[b].nTf},1)});u("columns().data()","column().data()",function(){return this.iterator("column-rows",Ub,1)});u("columns().dataSrc()","column().dataSrc()",function(){return this.iterator("column",function(a,b){return a.aoColumns[b].mData},
1)});u("columns().cache()","column().cache()",function(a){return this.iterator("column-rows",function(b,c,d,e,f){return ja(b.aoData,f,"search"===a?"_aFilterData":"_aSortData",c)},1)});u("columns().nodes()","column().nodes()",function(){return this.iterator("column-rows",function(a,b,c,d,e){return ja(a.aoData,e,"anCells",b)},1)});u("columns().visible()","column().visible()",function(a,b){var c=this.iterator("column",function(b,c){if(a===k)return b.aoColumns[c].bVisible;var f=b.aoColumns,g=f[c],j=b.aoData,
i,m,l;if(a!==k&&g.bVisible!==a){if(a){var n=h.inArray(!0,D(f,"bVisible"),c+1);i=0;for(m=j.length;i<m;i++)l=j[i].nTr,f=j[i].anCells,l&&l.insertBefore(f[c],f[n]||null)}else h(D(b.aoData,"anCells",c)).detach();g.bVisible=a;fa(b,b.aoHeader);fa(b,b.aoFooter);b.aiDisplay.length||h(b.nTBody).find("td[colspan]").attr("colspan",V(b));xa(b)}});a!==k&&(this.iterator("column",function(c,e){r(c,null,"column-visibility",[c,e,a,b])}),(b===k||b)&&this.columns.adjust());return c});u("columns().indexes()","column().index()",
function(a){return this.iterator("column",function(b,c){return"visible"===a?ba(b,c):c},1)});o("columns.adjust()",function(){return this.iterator("table",function(a){$(a)},1)});o("column.index()",function(a,b){if(0!==this.context.length){var c=this.context[0];if("fromVisible"===a||"toData"===a)return aa(c,b);if("fromData"===a||"toVisible"===a)return ba(c,b)}});o("column()",function(a,b){return cb(this.columns(a,b))});o("cells()",function(a,b,c){h.isPlainObject(a)&&(a.row===k?(c=a,a=null):(c=b,b=null));
h.isPlainObject(b)&&(c=b,b=null);if(null===b||b===k)return this.iterator("table",function(b){var d=a,e=bb(c),f=b.aoData,g=Ba(b,e),j=Qb(ja(f,g,"anCells")),i=h([].concat.apply([],j)),l,m=b.aoColumns.length,n,o,u,s,r,v;return ab("cell",d,function(a){var c=typeof a==="function";if(a===null||a===k||c){n=[];o=0;for(u=g.length;o<u;o++){l=g[o];for(s=0;s<m;s++){r={row:l,column:s};if(c){v=f[l];a(r,B(b,l,s),v.anCells?v.anCells[s]:null)&&n.push(r)}else n.push(r)}}return n}if(h.isPlainObject(a))return a.column!==
k&&a.row!==k&&h.inArray(a.row,g)!==-1?[a]:[];c=i.filter(a).map(function(a,b){return{row:b._DT_CellIndex.row,column:b._DT_CellIndex.column}}).toArray();if(c.length||!a.nodeName)return c;v=h(a).closest("*[data-dt-row]");return v.length?[{row:v.data("dt-row"),column:v.data("dt-column")}]:[]},b,e)});var d=this.columns(b),e=this.rows(a),f,g,j,i,m;this.iterator("table",function(a,b){f=[];g=0;for(j=e[b].length;g<j;g++){i=0;for(m=d[b].length;i<m;i++)f.push({row:e[b][g],column:d[b][i]})}},1);var l=this.cells(f,
c);h.extend(l.selector,{cols:b,rows:a,opts:c});return l});u("cells().nodes()","cell().node()",function(){return this.iterator("cell",function(a,b,c){return(a=a.aoData[b])&&a.anCells?a.anCells[c]:k},1)});o("cells().data()",function(){return this.iterator("cell",function(a,b,c){return B(a,b,c)},1)});u("cells().cache()","cell().cache()",function(a){a="search"===a?"_aFilterData":"_aSortData";return this.iterator("cell",function(b,c,d){return b.aoData[c][a][d]},1)});u("cells().render()","cell().render()",
function(a){return this.iterator("cell",function(b,c,d){return B(b,c,d,a)},1)});u("cells().indexes()","cell().index()",function(){return this.iterator("cell",function(a,b,c){return{row:b,column:c,columnVisible:ba(a,c)}},1)});u("cells().invalidate()","cell().invalidate()",function(a){return this.iterator("cell",function(b,c,d){da(b,c,a,d)})});o("cell()",function(a,b,c){return cb(this.cells(a,b,c))});o("cell().data()",function(a){var b=this.context,c=this[0];if(a===k)return b.length&&c.length?B(b[0],
c[0].row,c[0].column):k;jb(b[0],c[0].row,c[0].column,a);da(b[0],c[0].row,"data",c[0].column);return this});o("order()",function(a,b){var c=this.context;if(a===k)return 0!==c.length?c[0].aaSorting:k;"number"===typeof a?a=[[a,b]]:a.length&&!h.isArray(a[0])&&(a=Array.prototype.slice.call(arguments));return this.iterator("table",function(b){b.aaSorting=a.slice()})});o("order.listener()",function(a,b,c){return this.iterator("table",function(d){Ma(d,a,b,c)})});o("order.fixed()",function(a){if(!a){var b=
this.context,b=b.length?b[0].aaSortingFixed:k;return h.isArray(b)?{pre:b}:b}return this.iterator("table",function(b){b.aaSortingFixed=h.extend(!0,{},a)})});o(["columns().order()","column().order()"],function(a){var b=this;return this.iterator("table",function(c,d){var e=[];h.each(b[d],function(b,c){e.push([c,a])});c.aaSorting=e})});o("search()",function(a,b,c,d){var e=this.context;return a===k?0!==e.length?e[0].oPreviousSearch.sSearch:k:this.iterator("table",function(e){e.oFeatures.bFilter&&ga(e,
h.extend({},e.oPreviousSearch,{sSearch:a+"",bRegex:null===b?!1:b,bSmart:null===c?!0:c,bCaseInsensitive:null===d?!0:d}),1)})});u("columns().search()","column().search()",function(a,b,c,d){return this.iterator("column",function(e,f){var g=e.aoPreSearchCols;if(a===k)return g[f].sSearch;e.oFeatures.bFilter&&(h.extend(g[f],{sSearch:a+"",bRegex:null===b?!1:b,bSmart:null===c?!0:c,bCaseInsensitive:null===d?!0:d}),ga(e,e.oPreviousSearch,1))})});o("state()",function(){return this.context.length?this.context[0].oSavedState:
null});o("state.clear()",function(){return this.iterator("table",function(a){a.fnStateSaveCallback.call(a.oInstance,a,{})})});o("state.loaded()",function(){return this.context.length?this.context[0].oLoadedState:null});o("state.save()",function(){return this.iterator("table",function(a){xa(a)})});n.versionCheck=n.fnVersionCheck=function(a){for(var b=n.version.split("."),a=a.split("."),c,d,e=0,f=a.length;e<f;e++)if(c=parseInt(b[e],10)||0,d=parseInt(a[e],10)||0,c!==d)return c>d;return!0};n.isDataTable=
n.fnIsDataTable=function(a){var b=h(a).get(0),c=!1;if(a instanceof n.Api)return!0;h.each(n.settings,function(a,e){var f=e.nScrollHead?h("table",e.nScrollHead)[0]:null,g=e.nScrollFoot?h("table",e.nScrollFoot)[0]:null;if(e.nTable===b||f===b||g===b)c=!0});return c};n.tables=n.fnTables=function(a){var b=!1;h.isPlainObject(a)&&(b=a.api,a=a.visible);var c=h.map(n.settings,function(b){if(!a||a&&h(b.nTable).is(":visible"))return b.nTable});return b?new s(c):c};n.camelToHungarian=J;o("$()",function(a,b){var c=
this.rows(b).nodes(),c=h(c);return h([].concat(c.filter(a).toArray(),c.find(a).toArray()))});h.each(["on","one","off"],function(a,b){o(b+"()",function(){var a=Array.prototype.slice.call(arguments);a[0]=h.map(a[0].split(/\s/),function(a){return!a.match(/\.dt\b/)?a+".dt":a}).join(" ");var d=h(this.tables().nodes());d[b].apply(d,a);return this})});o("clear()",function(){return this.iterator("table",function(a){oa(a)})});o("settings()",function(){return new s(this.context,this.context)});o("init()",function(){var a=
this.context;return a.length?a[0].oInit:null});o("data()",function(){return this.iterator("table",function(a){return D(a.aoData,"_aData")}).flatten()});o("destroy()",function(a){a=a||!1;return this.iterator("table",function(b){var c=b.nTableWrapper.parentNode,d=b.oClasses,e=b.nTable,f=b.nTBody,g=b.nTHead,j=b.nTFoot,i=h(e),f=h(f),k=h(b.nTableWrapper),l=h.map(b.aoData,function(a){return a.nTr}),o;b.bDestroying=!0;r(b,"aoDestroyCallback","destroy",[b]);a||(new s(b)).columns().visible(!0);k.off(".DT").find(":not(tbody *)").off(".DT");
h(E).off(".DT-"+b.sInstance);e!=g.parentNode&&(i.children("thead").detach(),i.append(g));j&&e!=j.parentNode&&(i.children("tfoot").detach(),i.append(j));b.aaSorting=[];b.aaSortingFixed=[];wa(b);h(l).removeClass(b.asStripeClasses.join(" "));h("th, td",g).removeClass(d.sSortable+" "+d.sSortableAsc+" "+d.sSortableDesc+" "+d.sSortableNone);f.children().detach();f.append(l);g=a?"remove":"detach";i[g]();k[g]();!a&&c&&(c.insertBefore(e,b.nTableReinsertBefore),i.css("width",b.sDestroyWidth).removeClass(d.sTable),
(o=b.asDestroyStripes.length)&&f.children().each(function(a){h(this).addClass(b.asDestroyStripes[a%o])}));c=h.inArray(b,n.settings);-1!==c&&n.settings.splice(c,1)})});h.each(["column","row","cell"],function(a,b){o(b+"s().every()",function(a){var d=this.selector.opts,e=this;return this.iterator(b,function(f,g,h,i,m){a.call(e[b](g,"cell"===b?h:d,"cell"===b?d:k),g,h,i,m)})})});o("i18n()",function(a,b,c){var d=this.context[0],a=S(a)(d.oLanguage);a===k&&(a=b);c!==k&&h.isPlainObject(a)&&(a=a[c]!==k?a[c]:
a._);return a.replace("%d",c)});n.version="1.10.18";n.settings=[];n.models={};n.models.oSearch={bCaseInsensitive:!0,sSearch:"",bRegex:!1,bSmart:!0};n.models.oRow={nTr:null,anCells:null,_aData:[],_aSortData:null,_aFilterData:null,_sFilterRow:null,_sRowStripe:"",src:null,idx:-1};n.models.oColumn={idx:null,aDataSort:null,asSorting:null,bSearchable:null,bSortable:null,bVisible:null,_sManualType:null,_bAttrSrc:!1,fnCreatedCell:null,fnGetData:null,fnSetData:null,mData:null,mRender:null,nTh:null,nTf:null,
sClass:null,sContentPadding:null,sDefaultContent:null,sName:null,sSortDataType:"std",sSortingClass:null,sSortingClassJUI:null,sTitle:null,sType:null,sWidth:null,sWidthOrig:null};n.defaults={aaData:null,aaSorting:[[0,"asc"]],aaSortingFixed:[],ajax:null,aLengthMenu:[10,25,50,100],aoColumns:null,aoColumnDefs:null,aoSearchCols:[],asStripeClasses:null,bAutoWidth:!0,bDeferRender:!1,bDestroy:!1,bFilter:!0,bInfo:!0,bLengthChange:!0,bPaginate:!0,bProcessing:!1,bRetrieve:!1,bScrollCollapse:!1,bServerSide:!1,
bSort:!0,bSortMulti:!0,bSortCellsTop:!1,bSortClasses:!0,bStateSave:!1,fnCreatedRow:null,fnDrawCallback:null,fnFooterCallback:null,fnFormatNumber:function(a){return a.toString().replace(/\B(?=(\d{3})+(?!\d))/g,this.oLanguage.sThousands)},fnHeaderCallback:null,fnInfoCallback:null,fnInitComplete:null,fnPreDrawCallback:null,fnRowCallback:null,fnServerData:null,fnServerParams:null,fnStateLoadCallback:function(a){try{return JSON.parse((-1===a.iStateDuration?sessionStorage:localStorage).getItem("DataTables_"+
a.sInstance+"_"+location.pathname))}catch(b){}},fnStateLoadParams:null,fnStateLoaded:null,fnStateSaveCallback:function(a,b){try{(-1===a.iStateDuration?sessionStorage:localStorage).setItem("DataTables_"+a.sInstance+"_"+location.pathname,JSON.stringify(b))}catch(c){}},fnStateSaveParams:null,iStateDuration:7200,iDeferLoading:null,iDisplayLength:10,iDisplayStart:0,iTabIndex:0,oClasses:{},oLanguage:{oAria:{sSortAscending:": activate to sort column ascending",sSortDescending:": activate to sort column descending"},
oPaginate:{sFirst:"First",sLast:"Last",sNext:"Next",sPrevious:"Previous"},sEmptyTable:"No data available in table",sInfo:"Showing _START_ to _END_ of _TOTAL_ entries",sInfoEmpty:"Showing 0 to 0 of 0 entries",sInfoFiltered:"(filtered from _MAX_ total entries)",sInfoPostFix:"",sDecimal:"",sThousands:",",sLengthMenu:"Show: _MENU_",sLoadingRecords:"Loading...",sProcessing:"Processing...",sSearch:"Search:",sSearchPlaceholder:"",sUrl:"",sZeroRecords:"No matching records found"},oSearch:h.extend({},
n.models.oSearch),sAjaxDataProp:"data",sAjaxSource:null,sDom:"lfrtip",searchDelay:null,sPaginationType:"simple_numbers",sScrollX:"",sScrollXInner:"",sScrollY:"",sServerMethod:"GET",renderer:null,rowId:"DT_RowId"};Z(n.defaults);n.defaults.column={aDataSort:null,iDataSort:-1,asSorting:["asc","desc"],bSearchable:!0,bSortable:!0,bVisible:!0,fnCreatedCell:null,mData:null,mRender:null,sCellType:"td",sClass:"",sContentPadding:"",sDefaultContent:null,sName:"",sSortDataType:"std",sTitle:null,sType:null,sWidth:null};
Z(n.defaults.column);n.models.oSettings={oFeatures:{bAutoWidth:null,bDeferRender:null,bFilter:null,bInfo:null,bLengthChange:null,bPaginate:null,bProcessing:null,bServerSide:null,bSort:null,bSortMulti:null,bSortClasses:null,bStateSave:null},oScroll:{bCollapse:null,iBarWidth:0,sX:null,sXInner:null,sY:null},oLanguage:{fnInfoCallback:null},oBrowser:{bScrollOversize:!1,bScrollbarLeft:!1,bBounding:!1,barWidth:0},ajax:null,aanFeatures:[],aoData:[],aiDisplay:[],aiDisplayMaster:[],aIds:{},aoColumns:[],aoHeader:[],
aoFooter:[],oPreviousSearch:{},aoPreSearchCols:[],aaSorting:null,aaSortingFixed:[],asStripeClasses:null,asDestroyStripes:[],sDestroyWidth:0,aoRowCallback:[],aoHeaderCallback:[],aoFooterCallback:[],aoDrawCallback:[],aoRowCreatedCallback:[],aoPreDrawCallback:[],aoInitComplete:[],aoStateSaveParams:[],aoStateLoadParams:[],aoStateLoaded:[],sTableId:"",nTable:null,nTHead:null,nTFoot:null,nTBody:null,nTableWrapper:null,bDeferLoading:!1,bInitialised:!1,aoOpenRows:[],sDom:null,searchDelay:null,sPaginationType:"two_button",
iStateDuration:0,aoStateSave:[],aoStateLoad:[],oSavedState:null,oLoadedState:null,sAjaxSource:null,sAjaxDataProp:null,bAjaxDataGet:!0,jqXHR:null,json:k,oAjaxData:k,fnServerData:null,aoServerParams:[],sServerMethod:null,fnFormatNumber:null,aLengthMenu:null,iDraw:0,bDrawing:!1,iDrawError:-1,_iDisplayLength:10,_iDisplayStart:0,_iRecordsTotal:0,_iRecordsDisplay:0,oClasses:{},bFiltered:!1,bSorted:!1,bSortCellsTop:null,oInit:null,aoDestroyCallback:[],fnRecordsTotal:function(){return"ssp"==y(this)?1*this._iRecordsTotal:
this.aiDisplayMaster.length},fnRecordsDisplay:function(){return"ssp"==y(this)?1*this._iRecordsDisplay:this.aiDisplay.length},fnDisplayEnd:function(){var a=this._iDisplayLength,b=this._iDisplayStart,c=b+a,d=this.aiDisplay.length,e=this.oFeatures,f=e.bPaginate;return e.bServerSide?!1===f||-1===a?b+d:Math.min(b+a,this._iRecordsDisplay):!f||c>d||-1===a?d:c},oInstance:null,sInstance:null,iTabIndex:0,nScrollHead:null,nScrollFoot:null,aLastSort:[],oPlugins:{},rowIdFn:null,rowId:null};n.ext=x={buttons:{},
classes:{},build:"dt/dt-1.10.18/b-1.5.4/b-html5-1.5.4/b-print-1.5.4/fc-3.2.5/r-2.2.2",errMode:"alert",feature:[],search:[],selector:{cell:[],column:[],row:[]},internal:{},legacy:{ajax:null},pager:{},renderer:{pageButton:{},header:{}},order:{},type:{detect:[],search:{},order:{}},_unique:0,fnVersionCheck:n.fnVersionCheck,iApiIndex:0,oJUIClasses:{},sVersion:n.version};h.extend(x,{afnFiltering:x.search,aTypes:x.type.detect,ofnSearch:x.type.search,oSort:x.type.order,afnSortData:x.order,aoFeatures:x.feature,oApi:x.internal,oStdClasses:x.classes,oPagination:x.pager});
h.extend(n.ext.classes,{sTable:"dataTable",sNoFooter:"no-footer",sPageButton:"paginate_button",sPageButtonActive:"current",sPageButtonDisabled:"disabled",sStripeOdd:"odd",sStripeEven:"even",sRowEmpty:"dataTables_empty",sWrapper:"dataTables_wrapper",sFilter:"dataTables_filter",sInfo:"dataTables_info",sPaging:"dataTables_paginate paging_",sLength:"dataTables_length pl-2",sProcessing:"dataTables_processing",sSortAsc:"sorting_asc",sSortDesc:"sorting_desc",sSortable:"sorting",sSortableAsc:"sorting_asc_disabled",
sSortableDesc:"sorting_desc_disabled",sSortableNone:"sorting_disabled",sSortColumn:"sorting_",sFilterInput:"",sLengthSelect:"",sScrollWrapper:"dataTables_scroll",sScrollHead:"dataTables_scrollHead",sScrollHeadInner:"dataTables_scrollHeadInner",sScrollBody:"dataTables_scrollBody",sScrollFoot:"dataTables_scrollFoot",sScrollFootInner:"dataTables_scrollFootInner",sHeaderTH:"",sFooterTH:"",sSortJUIAsc:"",sSortJUIDesc:"",sSortJUI:"",sSortJUIAscAllowed:"",sSortJUIDescAllowed:"",sSortJUIWrapper:"",sSortIcon:"",
sJUIHeader:"",sJUIFooter:""});var Kb=n.ext.pager;h.extend(Kb,{simple:function(){return["previous","next"]},full:function(){return["first","previous","next","last"]},numbers:function(a,b){return[ia(a,b)]},simple_numbers:function(a,b){return["previous",ia(a,b),"next"]},full_numbers:function(a,b){return["first","previous",ia(a,b),"next","last"]},first_last_numbers:function(a,b){return["first",ia(a,b),"last"]},_numbers:ia,numbers_length:7});h.extend(!0,n.ext.renderer,{pageButton:{_:function(a,b,c,d,e,
f){var g=a.oClasses,j=a.oLanguage.oPaginate,i=a.oLanguage.oAria.paginate||{},m,l,n=0,o=function(b,d){var k,s,u,r,v=function(b){Ta(a,b.data.action,true)};k=0;for(s=d.length;k<s;k++){r=d[k];if(h.isArray(r)){u=h("<"+(r.DT_el||"div")+"/>").appendTo(b);o(u,r)}else{m=null;l="";switch(r){case "ellipsis":b.append('<span class="ellipsis">&#x2026;</span>');break;case "first":m=j.sFirst;l=r+(e>0?"":" "+g.sPageButtonDisabled);break;case "previous":m=j.sPrevious;l=r+(e>0?"":" "+g.sPageButtonDisabled);break;case "next":m=
j.sNext;l=r+(e<f-1?"":" "+g.sPageButtonDisabled);break;case "last":m=j.sLast;l=r+(e<f-1?"":" "+g.sPageButtonDisabled);break;default:m=r+1;l=e===r?g.sPageButtonActive:""}if(m!==null){u=h("<a>",{"class":g.sPageButton+" "+l,"aria-controls":a.sTableId,"aria-label":i[r],"data-dt-idx":n,tabindex:a.iTabIndex,id:c===0&&typeof r==="string"?a.sTableId+"_"+r:null}).html(m).appendTo(b);Wa(u,{action:r},v);n++}}}},s;try{s=h(b).find(H.activeElement).data("dt-idx")}catch(u){}o(h(b).empty(),d);s!==k&&h(b).find("[data-dt-idx="+
s+"]").focus()}}});h.extend(n.ext.type.detect,[function(a,b){var c=b.oLanguage.sDecimal;return $a(a,c)?"num"+c:null},function(a){if(a&&!(a instanceof Date)&&!Zb.test(a))return null;var b=Date.parse(a);return null!==b&&!isNaN(b)||M(a)?"date":null},function(a,b){var c=b.oLanguage.sDecimal;return $a(a,c,!0)?"num-fmt"+c:null},function(a,b){var c=b.oLanguage.sDecimal;return Pb(a,c)?"html-num"+c:null},function(a,b){var c=b.oLanguage.sDecimal;return Pb(a,c,!0)?"html-num-fmt"+c:null},function(a){return M(a)||
"string"===typeof a&&-1!==a.indexOf("<")?"html":null}]);h.extend(n.ext.type.search,{html:function(a){return M(a)?a:"string"===typeof a?a.replace(Mb," ").replace(Aa,""):""},string:function(a){return M(a)?a:"string"===typeof a?a.replace(Mb," "):a}});var za=function(a,b,c,d){if(0!==a&&(!a||"-"===a))return-Infinity;b&&(a=Ob(a,b));a.replace&&(c&&(a=a.replace(c,"")),d&&(a=a.replace(d,"")));return 1*a};h.extend(x.type.order,{"date-pre":function(a){a=Date.parse(a);return isNaN(a)?-Infinity:a},"html-pre":function(a){return M(a)?
"":a.replace?a.replace(/<.*?>/g,"").toLowerCase():a+""},"string-pre":function(a){return M(a)?"":"string"===typeof a?a.toLowerCase():!a.toString?"":a.toString()},"string-asc":function(a,b){return a<b?-1:a>b?1:0},"string-desc":function(a,b){return a<b?1:a>b?-1:0}});Da("");h.extend(!0,n.ext.renderer,{header:{_:function(a,b,c,d){h(a.nTable).on("order.dt.DT",function(e,f,g,h){if(a===f){e=c.idx;b.removeClass(c.sSortingClass+" "+d.sSortAsc+" "+d.sSortDesc).addClass(h[e]=="asc"?d.sSortAsc:h[e]=="desc"?d.sSortDesc:
c.sSortingClass)}})},jqueryui:function(a,b,c,d){h("<div/>").addClass(d.sSortJUIWrapper).append(b.contents()).append(h("<span/>").addClass(d.sSortIcon+" "+c.sSortingClassJUI)).appendTo(b);h(a.nTable).on("order.dt.DT",function(e,f,g,h){if(a===f){e=c.idx;b.removeClass(d.sSortAsc+" "+d.sSortDesc).addClass(h[e]=="asc"?d.sSortAsc:h[e]=="desc"?d.sSortDesc:c.sSortingClass);b.find("span."+d.sSortIcon).removeClass(d.sSortJUIAsc+" "+d.sSortJUIDesc+" "+d.sSortJUI+" "+d.sSortJUIAscAllowed+" "+d.sSortJUIDescAllowed).addClass(h[e]==
"asc"?d.sSortJUIAsc:h[e]=="desc"?d.sSortJUIDesc:c.sSortingClassJUI)}})}}});var Vb=function(a){return"string"===typeof a?a.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;"):a};n.render={number:function(a,b,c,d,e){return{display:function(f){if("number"!==typeof f&&"string"!==typeof f)return f;var g=0>f?"-":"",h=parseFloat(f);if(isNaN(h))return Vb(f);h=h.toFixed(c);f=Math.abs(h);h=parseInt(f,10);f=c?b+(f-h).toFixed(c).substring(2):"";return g+(d||"")+h.toString().replace(/\B(?=(\d{3})+(?!\d))/g,
a)+f+(e||"")}}},text:function(){return{display:Vb}}};h.extend(n.ext.internal,{_fnExternApiFunc:Lb,_fnBuildAjax:sa,_fnAjaxUpdate:lb,_fnAjaxParameters:ub,_fnAjaxUpdateDraw:vb,_fnAjaxDataSrc:ta,_fnAddColumn:Ea,_fnColumnOptions:ka,_fnAdjustColumnSizing:$,_fnVisibleToColumnIndex:aa,_fnColumnIndexToVisible:ba,_fnVisbleColumns:V,_fnGetColumns:ma,_fnColumnTypes:Ga,_fnApplyColumnDefs:ib,_fnHungarianMap:Z,_fnCamelToHungarian:J,_fnLanguageCompat:Ca,_fnBrowserDetect:gb,_fnAddData:O,_fnAddTr:na,_fnNodeToDataIndex:function(a,
b){return b._DT_RowIndex!==k?b._DT_RowIndex:null},_fnNodeToColumnIndex:function(a,b,c){return h.inArray(c,a.aoData[b].anCells)},_fnGetCellData:B,_fnSetCellData:jb,_fnSplitObjNotation:Ja,_fnGetObjectDataFn:S,_fnSetObjectDataFn:N,_fnGetDataMaster:Ka,_fnClearTable:oa,_fnDeleteIndex:pa,_fnInvalidate:da,_fnGetRowElements:Ia,_fnCreateTr:Ha,_fnBuildHead:kb,_fnDrawHead:fa,_fnDraw:P,_fnReDraw:T,_fnAddOptionsHtml:nb,_fnDetectHeader:ea,_fnGetUniqueThs:ra,_fnFeatureHtmlFilter:pb,_fnFilterComplete:ga,_fnFilterCustom:yb,
_fnFilterColumn:xb,_fnFilter:wb,_fnFilterCreateSearch:Pa,_fnEscapeRegex:Qa,_fnFilterData:zb,_fnFeatureHtmlInfo:sb,_fnUpdateInfo:Cb,_fnInfoMacros:Db,_fnInitialise:ha,_fnInitComplete:ua,_fnLengthChange:Ra,_fnFeatureHtmlLength:ob,_fnFeatureHtmlPaginate:tb,_fnPageChange:Ta,_fnFeatureHtmlProcessing:qb,_fnProcessingDisplay:C,_fnFeatureHtmlTable:rb,_fnScrollDraw:la,_fnApplyToChildren:I,_fnCalculateColumnWidths:Fa,_fnThrottle:Oa,_fnConvertToWidth:Eb,_fnGetWidestNode:Fb,_fnGetMaxLenString:Gb,_fnStringToCss:v,
_fnSortFlatten:X,_fnSort:mb,_fnSortAria:Ib,_fnSortListener:Va,_fnSortAttachListener:Ma,_fnSortingClasses:wa,_fnSortData:Hb,_fnSaveState:xa,_fnLoadState:Jb,_fnSettingsFromNode:ya,_fnLog:K,_fnMap:F,_fnBindAction:Wa,_fnCallbackReg:z,_fnCallbackFire:r,_fnLengthOverflow:Sa,_fnRenderer:Na,_fnDataSource:y,_fnRowAttributes:La,_fnExtend:Xa,_fnCalculateEnd:function(){}});h.fn.dataTable=n;n.$=h;h.fn.dataTableSettings=n.settings;h.fn.dataTableExt=n.ext;h.fn.DataTable=function(a){return h(this).dataTable(a).api()};
h.each(n,function(a,b){h.fn.DataTable[a]=b});return h.fn.dataTable});


/*!
 Buttons for DataTables 1.5.4
 ©2016-2018 SpryMedia Ltd - datatables.net/license
*/
var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.findInternal=function(d,p,m){d instanceof String&&(d=String(d));for(var l=d.length,g=0;g<l;g++){var u=d[g];if(p.call(m,u,g,d))return{i:g,v:u}}return{i:-1,v:void 0}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(d,p,m){d!=Array.prototype&&d!=Object.prototype&&(d[p]=m.value)};
$jscomp.getGlobal=function(d){return"undefined"!=typeof window&&window===d?d:"undefined"!=typeof global&&null!=global?global:d};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(d,p,m,l){if(p){m=$jscomp.global;d=d.split(".");for(l=0;l<d.length-1;l++){var g=d[l];g in m||(m[g]={});m=m[g]}d=d[d.length-1];l=m[d];p=p(l);p!=l&&null!=p&&$jscomp.defineProperty(m,d,{configurable:!0,writable:!0,value:p})}};
$jscomp.polyfill("Array.prototype.find",function(d){return d?d:function(d,m){return $jscomp.findInternal(this,d,m).v}},"es6","es3");
(function(d){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(p){return d(p,window,document)}):"object"===typeof exports?module.exports=function(p,m){p||(p=window);m&&m.fn.dataTable||(m=require("datatables.net")(p,m).$);return d(m,p,p.document)}:d(jQuery,window,document)})(function(d,p,m,l){var g=d.fn.dataTable,u=0,B=0,q=g.ext.buttons,r=function(a,b){"undefined"===typeof b&&(b={});!0===b&&(b={});d.isArray(b)&&(b={buttons:b});this.c=d.extend(!0,{},r.defaults,b);b.buttons&&
(this.c.buttons=b.buttons);this.s={dt:new g.Api(a),buttons:[],listenKeys:"",namespace:"dtb"+u++};this.dom={container:d("<"+this.c.dom.container.tag+"/>").addClass(this.c.dom.container.className)};this._constructor()};d.extend(r.prototype,{action:function(a,b){a=this._nodeToButton(a);if(b===l)return a.conf.action;a.conf.action=b;return this},active:function(a,b){var c=this._nodeToButton(a);a=this.c.dom.button.active;c=d(c.node);if(b===l)return c.hasClass(a);c.toggleClass(a,b===l?!0:b);return this},
add:function(a,b){var c=this.s.buttons;if("string"===typeof b){b=b.split("-");c=this.s;for(var d=0,f=b.length-1;d<f;d++)c=c.buttons[1*b[d]];c=c.buttons;b=1*b[b.length-1]}this._expandButton(c,a,!1,b);this._draw();return this},container:function(){return this.dom.container},disable:function(a){a=this._nodeToButton(a);d(a.node).addClass(this.c.dom.button.disabled);return this},destroy:function(){d("body").off("keyup."+this.s.namespace);var a=this.s.buttons.slice(),b;var c=0;for(b=a.length;c<b;c++)this.remove(a[c].node);
this.dom.container.remove();a=this.s.dt.settings()[0];c=0;for(b=a.length;c<b;c++)if(a.inst===this){a.splice(c,1);break}return this},enable:function(a,b){if(!1===b)return this.disable(a);a=this._nodeToButton(a);d(a.node).removeClass(this.c.dom.button.disabled);return this},name:function(){return this.c.name},node:function(a){a=this._nodeToButton(a);return d(a.node)},processing:function(a,b){a=this._nodeToButton(a);if(b===l)return d(a.node).hasClass("processing");d(a.node).toggleClass("processing",
b);return this},remove:function(a){var b=this._nodeToButton(a),c=this._nodeToHost(a),e=this.s.dt;if(b.buttons.length)for(var f=b.buttons.length-1;0<=f;f--)this.remove(b.buttons[f].node);b.conf.destroy&&b.conf.destroy.call(e.button(a),e,d(a),b.conf);this._removeKey(b.conf);d(b.node).remove();a=d.inArray(b,c);c.splice(a,1);return this},text:function(a,b){var c=this._nodeToButton(a);a=this.c.dom.collection.buttonLiner;a=c.inCollection&&a&&a.tag?a.tag:this.c.dom.buttonLiner.tag;var e=this.s.dt,f=d(c.node),
h=function(a){return"function"===typeof a?a(e,f,c.conf):a};if(b===l)return h(c.conf.text);c.conf.text=b;a?f.children(a).html(h(b)):f.html(h(b));return this},_constructor:function(){var a=this,b=this.s.dt,c=b.settings()[0],e=this.c.buttons;c._buttons||(c._buttons=[]);c._buttons.push({inst:this,name:this.c.name});for(var f=0,h=e.length;f<h;f++)this.add(e[f]);b.on("destroy",function(b,d){d===c&&a.destroy()});d("body").on("keyup."+this.s.namespace,function(b){if(!m.activeElement||m.activeElement===m.body){var c=
String.fromCharCode(b.keyCode).toLowerCase();-1!==a.s.listenKeys.toLowerCase().indexOf(c)&&a._keypress(c,b)}})},_addKey:function(a){a.key&&(this.s.listenKeys+=d.isPlainObject(a.key)?a.key.key:a.key)},_draw:function(a,b){a||(a=this.dom.container,b=this.s.buttons);a.children().detach();for(var c=0,d=b.length;c<d;c++)a.append(b[c].inserter),a.append(" "),b[c].buttons&&b[c].buttons.length&&this._draw(b[c].collection,b[c].buttons)},_expandButton:function(a,b,c,e){var f=this.s.dt,h=0;b=d.isArray(b)?b:[b];
for(var k=0,v=b.length;k<v;k++){var n=this._resolveExtends(b[k]);if(n)if(d.isArray(n))this._expandButton(a,n,c,e);else{var t=this._buildButton(n,c);if(t){e!==l?(a.splice(e,0,t),e++):a.push(t);if(t.conf.buttons){var y=this.c.dom.collection;t.collection=d("<"+y.tag+"/>").addClass(y.className).attr("role","menu");t.conf._collection=t.collection;this._expandButton(t.buttons,t.conf.buttons,!0,e)}n.init&&n.init.call(f.button(t.node),f,d(t.node),n);h++}}}},_buildButton:function(a,b){var c=this.c.dom.button,
e=this.c.dom.buttonLiner,f=this.c.dom.collection,h=this.s.dt,k=function(b){return"function"===typeof b?b(h,n,a):b};b&&f.button&&(c=f.button);b&&f.buttonLiner&&(e=f.buttonLiner);if(a.available&&!a.available(h,a))return!1;var v=function(a,b,c,e){e.action.call(b.button(c),a,b,c,e);d(b.table().node()).triggerHandler("buttons-action.dt",[b.button(c),b,c,e])};f=a.tag||c.tag;var n=d("<"+f+"/>").addClass(c.className).attr("tabindex",this.s.dt.settings()[0].iTabIndex).attr("aria-controls",this.s.dt.table().node().id).on("click.dtb",
function(b){b.preventDefault();!n.hasClass(c.disabled)&&a.action&&v(b,h,n,a);n.blur()}).on("keyup.dtb",function(b){13===b.keyCode&&!n.hasClass(c.disabled)&&a.action&&v(b,h,n,a)});"a"===f.toLowerCase()&&n.attr("href","#");"button"===f.toLowerCase()&&n.attr("type","button");e.tag?(f=d("<"+e.tag+"/>").html(k(a.text)).addClass(e.className),"a"===e.tag.toLowerCase()&&f.attr("href","#"),n.append(f)):n.html(k(a.text));!1===a.enabled&&n.addClass(c.disabled);a.className&&n.addClass(a.className);a.titleAttr&&
n.attr("title",k(a.titleAttr));a.attr&&n.attr(a.attr);a.namespace||(a.namespace=".dt-button-"+B++);e=(e=this.c.dom.buttonContainer)&&e.tag?d("<"+e.tag+"/>").addClass(e.className).append(n):n;this._addKey(a);return{conf:a,node:n.get(0),inserter:e,buttons:[],inCollection:b,collection:null}},_nodeToButton:function(a,b){b||(b=this.s.buttons);for(var c=0,d=b.length;c<d;c++){if(b[c].node===a)return b[c];if(b[c].buttons.length){var f=this._nodeToButton(a,b[c].buttons);if(f)return f}}},_nodeToHost:function(a,
b){b||(b=this.s.buttons);for(var c=0,d=b.length;c<d;c++){if(b[c].node===a)return b;if(b[c].buttons.length){var f=this._nodeToHost(a,b[c].buttons);if(f)return f}}},_keypress:function(a,b){if(!b._buttonsHandled){var c=function(e){for(var f=0,h=e.length;f<h;f++){var k=e[f].conf,v=e[f].node;k.key&&(k.key===a?(b._buttonsHandled=!0,d(v).click()):!d.isPlainObject(k.key)||k.key.key!==a||k.key.shiftKey&&!b.shiftKey||k.key.altKey&&!b.altKey||k.key.ctrlKey&&!b.ctrlKey||k.key.metaKey&&!b.metaKey||(b._buttonsHandled=
!0,d(v).click()));e[f].buttons.length&&c(e[f].buttons)}};c(this.s.buttons)}},_removeKey:function(a){if(a.key){var b=d.isPlainObject(a.key)?a.key.key:a.key;a=this.s.listenKeys.split("");b=d.inArray(b,a);a.splice(b,1);this.s.listenKeys=a.join("")}},_resolveExtends:function(a){var b=this.s.dt,c,e=function(c){for(var e=0;!d.isPlainObject(c)&&!d.isArray(c);){if(c===l)return;if("function"===typeof c){if(c=c(b,a),!c)return!1}else if("string"===typeof c){if(!q[c])throw"Unknown button type: "+c;c=q[c]}e++;
if(30<e)throw"Buttons: Too many iterations";}return d.isArray(c)?c:d.extend({},c)};for(a=e(a);a&&a.extend;){if(!q[a.extend])throw"Cannot extend unknown button type: "+a.extend;var f=e(q[a.extend]);if(d.isArray(f))return f;if(!f)return!1;var h=f.className;a=d.extend({},f,a);h&&a.className!==h&&(a.className=h+" "+a.className);var k=a.postfixButtons;if(k){a.buttons||(a.buttons=[]);h=0;for(c=k.length;h<c;h++)a.buttons.push(k[h]);a.postfixButtons=null}if(k=a.prefixButtons){a.buttons||(a.buttons=[]);h=
0;for(c=k.length;h<c;h++)a.buttons.splice(h,0,k[h]);a.prefixButtons=null}a.extend=f.extend}return a}});r.background=function(a,b,c,e){c===l&&(c=400);e||(e=m.body);a?d("<div/>").addClass(b).css("display","none").insertAfter(e).fadeIn(c):d("div."+b).fadeOut(c,function(){d(this).removeClass(b).remove()})};r.instanceSelector=function(a,b){if(!a)return d.map(b,function(a){return a.inst});var c=[],e=d.map(b,function(a){return a.name}),f=function(a){if(d.isArray(a))for(var k=0,v=a.length;k<v;k++)f(a[k]);
else"string"===typeof a?-1!==a.indexOf(",")?f(a.split(",")):(a=d.inArray(d.trim(a),e),-1!==a&&c.push(b[a].inst)):"number"===typeof a&&c.push(b[a].inst)};f(a);return c};r.buttonSelector=function(a,b){for(var c=[],e=function(a,b,c){for(var d,f,k=0,h=b.length;k<h;k++)if(d=b[k])f=c!==l?c+k:k+"",a.push({node:d.node,name:d.conf.name,idx:f}),d.buttons&&e(a,d.buttons,f+"-")},f=function(a,b){var k,h=[];e(h,b.s.buttons);var g=d.map(h,function(a){return a.node});if(d.isArray(a)||a instanceof d)for(g=0,k=a.length;g<
k;g++)f(a[g],b);else if(null===a||a===l||"*"===a)for(g=0,k=h.length;g<k;g++)c.push({inst:b,node:h[g].node});else if("number"===typeof a)c.push({inst:b,node:b.s.buttons[a].node});else if("string"===typeof a)if(-1!==a.indexOf(","))for(h=a.split(","),g=0,k=h.length;g<k;g++)f(d.trim(h[g]),b);else if(a.match(/^\d+(\-\d+)*$/))g=d.map(h,function(a){return a.idx}),c.push({inst:b,node:h[d.inArray(a,g)].node});else if(-1!==a.indexOf(":name"))for(a=a.replace(":name",""),g=0,k=h.length;g<k;g++)h[g].name===a&&
c.push({inst:b,node:h[g].node});else d(g).filter(a).each(function(){c.push({inst:b,node:this})});else"object"===typeof a&&a.nodeName&&(h=d.inArray(a,g),-1!==h&&c.push({inst:b,node:g[h]}))},h=0,k=a.length;h<k;h++)f(b,a[h]);return c};r.defaults={buttons:["copy","excel","csv","pdf","print"],name:"main",tabIndex:0,dom:{container:{tag:"div",className:"dt-buttons"},collection:{tag:"div",className:"dt-button-collection"},button:{tag:"ActiveXObject"in p?"a":"button",className:"dt-button",active:"active",
disabled:"disabled"},buttonLiner:{tag:"span",className:""}}};r.version="1.5.4";d.extend(q,{collection:{text:function(a){return a.i18n("buttons.collection","Collection")},className:"buttons-collection",action:function(a,b,c,e){var f=d(c).parents("div.dt-button-collection");a=c.position();var h=d(b.table().container()),k=!1,g=c;f.length&&(k=d(".dt-button-collection").position(),g=f,d("body").trigger("click.dtb-collection"));g.parents("body")[0]!==m.body&&(g=m.body.lastChild);e._collection.find(".dt-button-collection-title").remove();
e._collection.prepend('<div class="dt-button-collection-title">'+e.collectionTitle+"</div>");e._collection.addClass(e.collectionLayout).css("display","none").insertAfter(g).fadeIn(e.fade);f=e._collection.css("position");if(k&&"absolute"===f)e._collection.css({top:k.top,left:k.left});else if("absolute"===f){e._collection.css({top:a.top+c.outerHeight(),left:a.left});k=h.offset().top+h.height();k=a.top+c.outerHeight()+e._collection.outerHeight()-k;f=a.top-e._collection.outerHeight();var n=h.offset().top;
(k>n-f||e.dropup)&&e._collection.css("top",a.top-e._collection.outerHeight()-5);e._collection.hasClass(e.rightAlignClassName)&&e._collection.css("left",a.left+c.outerWidth()-e._collection.outerWidth());k=a.left+e._collection.outerWidth();h=h.offset().left+h.width();k>h&&e._collection.css("left",a.left-(k-h));c=c.offset().left+e._collection.outerWidth();c>d(p).width()&&e._collection.css("left",a.left-(c-d(p).width()))}else c=e._collection.height()/2,c>d(p).height()/2&&(c=d(p).height()/2),e._collection.css("marginTop",
-1*c);e.background&&r.background(!0,e.backgroundClassName,e.fade,g);var l=function(){e._collection.fadeOut(e.fade,function(){e._collection.detach()});d("div.dt-button-background").off("click.dtb-collection");r.background(!1,e.backgroundClassName,e.fade,g);d("body").off(".dtb-collection");b.off("buttons-action.b-internal")};setTimeout(function(){d("div.dt-button-background").on("click.dtb-collection",function(){});d("body").on("click.dtb-collection",function(a){var b=d.fn.addBack?"addBack":"andSelf";
d(a.target).parents()[b]().filter(e._collection).length||l()}).on("keyup.dtb-collection",function(a){27===a.keyCode&&l()});if(e.autoClose)b.on("buttons-action.b-internal",function(){l()})},10)},background:!0,collectionLayout:"",collectionTitle:"",backgroundClassName:"dt-button-background",rightAlignClassName:"dt-button-right",autoClose:!1,fade:400,attr:{"aria-haspopup":!0}},copy:function(a,b){if(q.copyHtml5)return"copyHtml5";if(q.copyFlash&&q.copyFlash.available(a,b))return"copyFlash"},csv:function(a,
b){if(q.csvHtml5&&q.csvHtml5.available(a,b))return"csvHtml5";if(q.csvFlash&&q.csvFlash.available(a,b))return"csvFlash"},excel:function(a,b){if(q.excelHtml5&&q.excelHtml5.available(a,b))return"excelHtml5";if(q.excelFlash&&q.excelFlash.available(a,b))return"excelFlash"},pdf:function(a,b){if(q.pdfHtml5&&q.pdfHtml5.available(a,b))return"pdfHtml5";if(q.pdfFlash&&q.pdfFlash.available(a,b))return"pdfFlash"},pageLength:function(a){a=a.settings()[0].aLengthMenu;var b=d.isArray(a[0])?a[0]:a,c=d.isArray(a[0])?
a[1]:a,e=function(a){return a.i18n("buttons.pageLength",{"-1":"Show all rows",_:"Show %d rows"},a.page.len())};return{extend:"collection",text:e,className:"buttons-page-length",autoClose:!0,buttons:d.map(b,function(a,b){return{text:c[b],className:"button-page-length",action:function(b,c){c.page.len(a).draw()},init:function(b,c,d){var e=this;c=function(){e.active(b.page.len()===a)};b.on("length.dt"+d.namespace,c);c()},destroy:function(a,b,c){a.off("length.dt"+c.namespace)}}}),init:function(a,b,c){var d=
this;a.on("length.dt"+c.namespace,function(){d.text(e(a))})},destroy:function(a,b,c){a.off("length.dt"+c.namespace)}}}});g.Api.register("buttons()",function(a,b){b===l&&(b=a,a=l);this.selector.buttonGroup=a;var c=this.iterator(!0,"table",function(c){if(c._buttons)return r.buttonSelector(r.instanceSelector(a,c._buttons),b)},!0);c._groupSelector=a;return c});g.Api.register("button()",function(a,b){a=this.buttons(a,b);1<a.length&&a.splice(1,a.length);return a});g.Api.registerPlural("buttons().active()",
"button().active()",function(a){return a===l?this.map(function(a){return a.inst.active(a.node)}):this.each(function(b){b.inst.active(b.node,a)})});g.Api.registerPlural("buttons().action()","button().action()",function(a){return a===l?this.map(function(a){return a.inst.action(a.node)}):this.each(function(b){b.inst.action(b.node,a)})});g.Api.register(["buttons().enable()","button().enable()"],function(a){return this.each(function(b){b.inst.enable(b.node,a)})});g.Api.register(["buttons().disable()",
"button().disable()"],function(){return this.each(function(a){a.inst.disable(a.node)})});g.Api.registerPlural("buttons().nodes()","button().node()",function(){var a=d();d(this.each(function(b){a=a.add(b.inst.node(b.node))}));return a});g.Api.registerPlural("buttons().processing()","button().processing()",function(a){return a===l?this.map(function(a){return a.inst.processing(a.node)}):this.each(function(b){b.inst.processing(b.node,a)})});g.Api.registerPlural("buttons().text()","button().text()",function(a){return a===
l?this.map(function(a){return a.inst.text(a.node)}):this.each(function(b){b.inst.text(b.node,a)})});g.Api.registerPlural("buttons().trigger()","button().trigger()",function(){return this.each(function(a){a.inst.node(a.node).trigger("click")})});g.Api.registerPlural("buttons().containers()","buttons().container()",function(){var a=d(),b=this._groupSelector;this.iterator(!0,"table",function(c){if(c._buttons){c=r.instanceSelector(b,c._buttons);for(var d=0,f=c.length;d<f;d++)a=a.add(c[d].container())}});
return a});g.Api.register("button().add()",function(a,b){var c=this.context;c.length&&(c=r.instanceSelector(this._groupSelector,c[0]._buttons),c.length&&c[0].add(b,a));return this.button(this._groupSelector,a)});g.Api.register("buttons().destroy()",function(){this.pluck("inst").unique().each(function(a){a.destroy()});return this});g.Api.registerPlural("buttons().remove()","buttons().remove()",function(){this.each(function(a){a.inst.remove(a.node)});return this});var w;g.Api.register("buttons.info()",
function(a,b,c){var e=this;if(!1===a)return d("#datatables_buttons_info").fadeOut(function(){d(this).remove()}),clearTimeout(w),w=null,this;w&&clearTimeout(w);d("#datatables_buttons_info").length&&d("#datatables_buttons_info").remove();a=a?"<h2>"+a+"</h2>":"";d('<div id="datatables_buttons_info" class="dt-button-info"/>').html(a).append(d("<div/>")["string"===typeof b?"html":"append"](b)).css("display","none").appendTo("body").fadeIn();c!==l&&0!==c&&(w=setTimeout(function(){e.buttons.info(!1)},c));
return this});g.Api.register("buttons.exportData()",function(a){if(this.context.length)return C(new g.Api(this.context[0]),a)});g.Api.register("buttons.exportInfo()",function(a){a||(a={});var b=a;var c="*"===b.filename&&"*"!==b.title&&b.title!==l&&null!==b.title&&""!==b.title?b.title:b.filename;"function"===typeof c&&(c=c());c===l||null===c?c=null:(-1!==c.indexOf("*")&&(c=d.trim(c.replace("*",d("head > title").text()))),c=c.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g,""),(b=x(b.extension))||
(b=""),c+=b);b=x(a.title);b=null===b?null:-1!==b.indexOf("*")?b.replace("*",d("head > title").text()||"Exported data"):b;return{filename:c,title:b,messageTop:z(this,a.message||a.messageTop,"top"),messageBottom:z(this,a.messageBottom,"bottom")}});var x=function(a){return null===a||a===l?null:"function"===typeof a?a():a},z=function(a,b,c){b=x(b);if(null===b)return null;a=d("caption",a.table().container()).eq(0);return"*"===b?a.css("caption-side")!==c?null:a.length?a.text():"":b},A=d("<textarea/>")[0],
C=function(a,b){var c=d.extend(!0,{},{rows:null,columns:"",modifier:{search:"applied",order:"applied"},orthogonal:"display",stripHtml:!0,stripNewlines:!0,decodeEntities:!0,trim:!0,format:{header:function(a){return e(a)},footer:function(a){return e(a)},body:function(a){return e(a)}},customizeData:null},b),e=function(a){if("string"!==typeof a)return a;a=a.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,"");a=a.replace(/<!\-\-.*?\-\->/g,"");c.stripHtml&&(a=a.replace(/<[^>]*>/g,""));c.trim&&
(a=a.replace(/^\s+|\s+$/g,""));c.stripNewlines&&(a=a.replace(/\n/g," "));c.decodeEntities&&(A.innerHTML=a,a=A.value);return a};b=a.columns(c.columns).indexes().map(function(b){var d=a.column(b).header();return c.format.header(d.innerHTML,b,d)}).toArray();var f=a.table().footer()?a.columns(c.columns).indexes().map(function(b){var d=a.column(b).footer();return c.format.footer(d?d.innerHTML:"",b,d)}).toArray():null,h=d.extend({},c.modifier);a.select&&"function"===typeof a.select.info&&h.selected===l&&
a.rows(c.rows,d.extend({selected:!0},h)).any()&&d.extend(h,{selected:!0});h=a.rows(c.rows,h).indexes().toArray();var g=a.cells(h,c.columns);h=g.render(c.orthogonal).toArray();g=g.nodes().toArray();for(var m=b.length,n=[],p=0,q=0,r=0<m?h.length/m:0;q<r;q++){for(var w=[m],u=0;u<m;u++)w[u]=c.format.body(h[p],q,u,g[p]),p++;n[q]=w}b={header:b,footer:f,body:n};c.customizeData&&c.customizeData(b);return b};d.fn.dataTable.Buttons=r;d.fn.DataTable.Buttons=r;d(m).on("init.dt plugin-init.dt",function(a,b){"dt"===
a.namespace&&(a=b.oInit.buttons||g.defaults.buttons)&&!b._buttons&&(new r(b,a)).container()});g.ext.feature.push({fnInit:function(a){a=new g.Api(a);var b=a.init().buttons||g.defaults.buttons;return(new r(a,b)).container()},cFeature:"B"});return r});


/*!
 HTML5 export buttons for Buttons and DataTables.
 2016 SpryMedia Ltd - datatables.net/license

 FileSaver.js (1.3.3) - MIT license
 Copyright © 2016 Eli Grey - http://eligrey.com
*/
(function(f){"function"===typeof define&&define.amd?define(["jquery","datatables.net","datatables.net-buttons"],function(g){return f(g,window,document)}):"object"===typeof exports?module.exports=function(g,p,z,t){g||(g=window);p&&p.fn.dataTable||(p=require("datatables.net")(g,p).$);p.fn.dataTable.Buttons||require("datatables.net-buttons")(g,p);return f(p,g,g.document,z,t)}:f(jQuery,window,document)})(function(f,g,p,z,t,w){function A(a){for(var b="";0<=a;)b=String.fromCharCode(a%26+65)+b,a=Math.floor(a/
26)-1;return b}function E(a,b){y===w&&(y=-1===C.serializeToString(f.parseXML(F["xl/worksheets/sheet1.xml"])).indexOf("xmlns:r"));f.each(b,function(b,c){if(f.isPlainObject(c))b=a.folder(b),E(b,c);else{if(y){var d=c.childNodes[0],e,h=[];for(e=d.attributes.length-1;0<=e;e--){var m=d.attributes[e].nodeName;var k=d.attributes[e].nodeValue;-1!==m.indexOf(":")&&(h.push({name:m,value:k}),d.removeAttribute(m))}e=0;for(m=h.length;e<m;e++)k=c.createAttribute(h[e].name.replace(":","_dt_b_namespace_token_")),
k.value=h[e].value,d.setAttributeNode(k)}c=C.serializeToString(c);y&&(-1===c.indexOf("<?xml")&&(c='<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+c),c=c.replace(/_dt_b_namespace_token_/g,":"),c=c.replace(/xmlns:NS[\d]+="" NS[\d]+:/g,""));c=c.replace(/<([^<>]*?) xmlns=""([^<>]*?)>/g,"<$1 $2>");a.file(b,c)}})}function r(a,b,d){var c=a.createElement(b);d&&(d.attr&&f(c).attr(d.attr),d.children&&f.each(d.children,function(a,b){c.appendChild(b)}),null!==d.text&&d.text!==w&&c.appendChild(a.createTextNode(d.text)));
return c}function L(a,b){var d=a.header[b].length;a.footer&&a.footer[b].length>d&&(d=a.footer[b].length);for(var c=0,f=a.body.length;c<f;c++){var e=a.body[c][b];e=null!==e&&e!==w?e.toString():"";-1!==e.indexOf("\n")?(e=e.split("\n"),e.sort(function(a,c){return c.length-a.length}),e=e[0].length):e=e.length;e>d&&(d=e);if(40<d)return 54}d*=1.35;return 6<d?d:6}var v=f.fn.dataTable;v.Buttons.pdfMake=function(a){if(!a)return t||g.pdfMake;t=m_ake};v.Buttons.jszip=function(a){if(!a)return z||g.JSZip;z=a};
var B=function(a){if(!("undefined"===typeof a||"undefined"!==typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var b=a.document.createElementNS("http://www.w3.org/1999/xhtml","a"),d="download"in b,c=/constructor/i.test(a.HTMLElement)||a.safari,f=/CriOS\/[\d]+/.test(navigator.userAgent),e=function(c){(a.setImmediate||a.setTimeout)(function(){throw c;},0)},h=function(c){setTimeout(function(){"string"===typeof c?(a.URL||a.webkitURL||a).revokeObjectURL(c):c.remove()},4E4)},m=function(a){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(a.type)?
new Blob([String.fromCharCode(65279),a],{type:a.type}):a},k=function(k,q,n){n||(k=m(k));var l=this,g="application/octet-stream"===k.type,D=function(){var a=["writestart","progress","write","writeend"];a=[].concat(a);for(var c=a.length;c--;){var b=l["on"+a[c]];if("function"===typeof b)try{b.call(l,l)}catch(M){e(M)}}};l.readyState=l.INIT;if(d){var u=(a.URL||a.webkitURL||a).createObjectURL(k);setTimeout(function(){b.href=u;b.download=q;var a=new MouseEvent("click");b.dispatchEvent(a);D();h(u);l.readyState=
l.DONE})}else(function(){if((f||g&&c)&&a.FileReader){var b=new FileReader;b.onloadend=function(){var c=f?b.result:b.result.replace(/^data:[^;]*;/,"data:attachment/file;");a.open(c,"_blank")||(a.location.href=c);l.readyState=l.DONE;D()};b.readAsDataURL(k);l.readyState=l.INIT}else u||(u=(a.URL||a.webkitURL||a).createObjectURL(k)),g?a.location.href=u:a.open(u,"_blank")||(a.location.href=u),l.readyState=l.DONE,D(),h(u)})()},n=k.prototype;if("undefined"!==typeof navigator&&navigator.msSaveOrOpenBlob)return function(a,
c,b){c=c||a.name||"download";b||(a=m(a));return navigator.msSaveOrOpenBlob(a,c)};n.abort=function(){};n.readyState=n.INIT=0;n.WRITING=1;n.DONE=2;n.error=n.onwritestart=n.onprogress=n.onwrite=n.onabort=n.onerror=n.onwriteend=null;return function(a,c,b){return new k(a,c||a.name||"download",b)}}}("undefined"!==typeof self&&self||"undefined"!==typeof g&&g||this.content);v.fileSave=B;var G=function(a){var b="Sheet1";a.sheetName&&(b=a.sheetName.replace(/[\[\]\*\/\\\?:]/g,""));return b},H=function(a){return a.newline?
a.newline:navigator.userAgent.match(/Windows/)?"\r\n":"\n"},I=function(a,b){var d=H(b);a=a.buttons.exportData(b.exportOptions);var c=b.fieldBoundary,f=b.fieldSeparator,e=new RegExp(c,"g"),h=b.escapeChar!==w?b.escapeChar:"\\",m=function(a){for(var b="",d=0,m=a.length;d<m;d++)0<d&&(b+=f),b+=c?c+(""+a[d]).replace(e,h+c)+c:a[d];return b},k=b.header?m(a.header)+d:"";b=b.footer&&a.footer?d+m(a.footer):"";for(var n=[],g=0,q=a.body.length;g<q;g++)n.push(m(a.body[g]));return{str:k+n.join(d)+b,rows:n.length}},
J=function(){if(-1===navigator.userAgent.indexOf("Safari")||-1!==navigator.userAgent.indexOf("Chrome")||-1!==navigator.userAgent.indexOf("Opera"))return!1;var a=navigator.userAgent.match(/AppleWebKit\/(\d+\.\d+)/);return a&&1<a.length&&603.1>1*a[1]?!0:!1};try{var C=new XMLSerializer,y}catch(a){}var F={"_rels/.rels":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/></Relationships>',
"xl/_rels/workbook.xml.rels":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/><Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/></Relationships>',"[Content_Types].xml":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types"><Default Extension="xml" ContentType="application/xml" /><Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" /><Default Extension="jpeg" ContentType="image/jpeg" /><Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" /><Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" /><Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" /></Types>',
"xl/workbook.xml":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"><fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/><workbookPr showInkAnnotation="0" autoCompressPictures="0"/><bookViews><workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/></bookViews><sheets><sheet name="Sheet1" sheetId="1" r:id="rId1"/></sheets><definedNames/></workbook>',
"xl/worksheets/sheet1.xml":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><sheetData/><mergeCells count="0"/></worksheet>',"xl/styles.xml":'<?xml version="1.0" encoding="UTF-8"?><styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><numFmts count="6"><numFmt numFmtId="164" formatCode="#,##0.00_- [$$-45C]"/><numFmt numFmtId="165" formatCode="&quot;£&quot;#,##0.00"/><numFmt numFmtId="166" formatCode="[$€-2] #,##0.00"/><numFmt numFmtId="167" formatCode="0.0%"/><numFmt numFmtId="168" formatCode="#,##0;(#,##0)"/><numFmt numFmtId="169" formatCode="#,##0.00;(#,##0.00)"/></numFmts><fonts count="5" x14ac:knownFonts="1"><font><sz val="11" /><name val="Calibri" /></font><font><sz val="11" /><name val="Calibri" /><color rgb="FFFFFFFF" /></font><font><sz val="11" /><name val="Calibri" /><b /></font><font><sz val="11" /><name val="Calibri" /><i /></font><font><sz val="11" /><name val="Calibri" /><u /></font></fonts><fills count="6"><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD9D9D9" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD99795" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6efce" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6cfef" /><bgColor indexed="64" /></patternFill></fill></fills><borders count="2"><border><left /><right /><top /><bottom /><diagonal /></border><border diagonalUp="false" diagonalDown="false"><left style="thin"><color auto="1" /></left><right style="thin"><color auto="1" /></right><top style="thin"><color auto="1" /></top><bottom style="thin"><color auto="1" /></bottom><diagonal /></border></borders><cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" /></cellStyleXfs><cellXfs count="67"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="left"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="center"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="right"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="fill"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment textRotation="90"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment wrapText="1"/></xf><xf numFmtId="9"   fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="164" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="165" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="166" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="167" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="168" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="169" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="3" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="4" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="1" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="2" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/></cellXfs><cellStyles count="1"><cellStyle name="Normal" xfId="0" builtinId="0" /></cellStyles><dxfs count="0" /><tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4" /></styleSheet>'},
K=[{match:/^\-?\d+\.\d%$/,style:60,fmt:function(a){return a/100}},{match:/^\-?\d+\.?\d*%$/,style:56,fmt:function(a){return a/100}},{match:/^\-?\$[\d,]+.?\d*$/,style:57},{match:/^\-?£[\d,]+.?\d*$/,style:58},{match:/^\-?€[\d,]+.?\d*$/,style:59},{match:/^\-?\d+$/,style:65},{match:/^\-?\d+\.\d{2}$/,style:66},{match:/^\([\d,]+\)$/,style:61,fmt:function(a){return-1*a.replace(/[\(\)]/g,"")}},{match:/^\([\d,]+\.\d{2}\)$/,style:62,fmt:function(a){return-1*a.replace(/[\(\)]/g,"")}},{match:/^\-?[\d,]+$/,style:63},
{match:/^\-?[\d,]+\.\d{2}$/,style:64}];v.ext.buttons.copyHtml5={className:"buttons-copy buttons-html5",text:function(a){return a.i18n("buttons.copy","Copy")},action:function(a,b,d,c){this.processing(!0);var g=this;a=I(b,c);var e=b.buttons.exportInfo(c),h=H(c),m=a.str;d=f("<div/>").css({height:1,width:1,overflow:"hidden",position:"fixed",top:0,left:0});e.title&&(m=e.title+h+h+m);e.messageTop&&(m=e.messageTop+h+h+m);e.messageBottom&&(m=m+h+h+e.messageBottom);c.customize&&(m=c.customize(m,c,b));c=f("<textarea readonly/>").val(m).appendTo(d);
if(p.queryCommandSupported("copy")){d.appendTo(b.table().container());c[0].focus();c[0].select();try{var k=p.execCommand("copy");d.remove();if(k){b.buttons.info(b.i18n("buttons.copyTitle","Copy to clipboard"),b.i18n("buttons.copySuccess",{1:"Copied one row to clipboard",_:"Copied %d rows to clipboard"},a.rows),2E3);this.processing(!1);return}}catch(q){}}k=f("<span>"+b.i18n("buttons.copyKeys","Press <i>ctrl</i> or <i>⌘</i> + <i>C</i> to copy the table data<br>to your system clipboard.<br><br>To cancel, click this message or press escape.")+
"</span>").append(d);b.buttons.info(b.i18n("buttons.copyTitle","Copy to clipboard"),k,0);c[0].focus();c[0].select();var n=f(k).closest(".dt-button-info"),r=function(){n.off("click.buttons-copy");f(p).off(".buttons-copy");b.buttons.info(!1)};n.on("click.buttons-copy",r);f(p).on("keydown.buttons-copy",function(a){27===a.keyCode&&(r(),g.processing(!1))}).on("copy.buttons-copy cut.buttons-copy",function(){r();g.processing(!1)})},exportOptions:{},fieldSeparator:"\t",fieldBoundary:"",header:!0,footer:!1,
title:"*",messageTop:"*",messageBottom:"*"};v.ext.buttons.csvHtml5={bom:!1,className:"buttons-csv buttons-html5",available:function(){return g.FileReader!==w&&g.Blob},text:function(a){return a.i18n("buttons.csv","CSV")},action:function(a,b,d,c){this.processing(!0);a=I(b,c).str;d=b.buttons.exportInfo(c);var f=c.charset;c.customize&&(a=c.customize(a,c,b));!1!==f?(f||(f=p.characterSet||p.charset),f&&(f=";charset="+f)):f="";c.bom&&(a="﻿"+a);B(new Blob([a],{type:"text/csv"+f}),d.filename,!0);this.processing(!1)},
filename:"*",extension:".csv",exportOptions:{},fieldSeparator:",",fieldBoundary:'"',escapeChar:'"',charset:null,header:!0,footer:!1};v.ext.buttons.excelHtml5={className:"buttons-excel buttons-html5",available:function(){return g.FileReader!==w&&(z||g.JSZip)!==w&&!J()&&C},text:function(a){return a.i18n("buttons.excel","Excel")},action:function(a,b,d,c){this.processing(!0);var p=this,e=0;a=function(a){return f.parseXML(F[a])};var h=a("xl/worksheets/sheet1.xml"),m=h.getElementsByTagName("sheetData")[0];
a={_rels:{".rels":a("_rels/.rels")},xl:{_rels:{"workbook.xml.rels":a("xl/_rels/workbook.xml.rels")},"workbook.xml":a("xl/workbook.xml"),"styles.xml":a("xl/styles.xml"),worksheets:{"sheet1.xml":h}},"[Content_Types].xml":a("[Content_Types].xml")};var k=b.buttons.exportData(c.exportOptions),n,v,q=function(a){n=e+1;v=r(h,"row",{attr:{r:n}});for(var b=0,d=a.length;b<d;b++){var k=A(b)+""+n,g=null;if(null===a[b]||a[b]===w||""===a[b])if(!0===c.createEmptyCells)a[b]="";else continue;var l=a[b];a[b]=f.trim(a[b]);
for(var q=0,p=K.length;q<p;q++){var u=K[q];if(a[b].match&&!a[b].match(/^0\d+/)&&a[b].match(u.match)){g=a[b].replace(/[^\d\.\-]/g,"");u.fmt&&(g=u.fmt(g));g=r(h,"c",{attr:{r:k,s:u.style},children:[r(h,"v",{text:g})]});break}}g||("number"===typeof a[b]||a[b].match&&a[b].match(/^-?\d+(\.\d+)?$/)&&!a[b].match(/^0\d+/)?g=r(h,"c",{attr:{t:"n",r:k},children:[r(h,"v",{text:a[b]})]}):(l=l.replace?l.replace(/[\x00-\x09\x0B\x0C\x0E-\x1F\x7F-\x9F]/g,""):l,g=r(h,"c",{attr:{t:"inlineStr",r:k},children:{row:r(h,
"is",{children:{row:r(h,"t",{text:l,attr:{"xml:space":"preserve"}})}})}})));v.appendChild(g)}m.appendChild(v);e++};c.customizeData&&c.customizeData(k);var x=function(a,b){var c=f("mergeCells",h);c[0].appendChild(r(h,"mergeCell",{attr:{ref:"A"+a+":"+A(b)+a}}));c.attr("count",parseFloat(c.attr("count"))+1);f("row:eq("+(a-1)+") c",h).attr("s","51")},l=b.buttons.exportInfo(c);l.title&&(q([l.title],e),x(e,k.header.length-1));l.messageTop&&(q([l.messageTop],e),x(e,k.header.length-1));c.header&&(q(k.header,
e),f("row:last c",h).attr("s","2"));d=e;var t=0;for(var y=k.body.length;t<y;t++)q(k.body[t],e);t=e;c.footer&&k.footer&&(q(k.footer,e),f("row:last c",h).attr("s","2"));l.messageBottom&&(q([l.messageBottom],e),x(e,k.header.length-1));q=r(h,"cols");f("worksheet",h).prepend(q);x=0;for(y=k.header.length;x<y;x++)q.appendChild(r(h,"col",{attr:{min:x+1,max:x+1,width:L(k,x),customWidth:1}}));f("mergeCells",h).before(r(h,"autoFilter",{attr:{ref:"A"+d+":"+A(k.header.length-1)+t}}));q=a.xl["workbook.xml"];f("sheets sheet",
q).attr("name",G(c));c.autoFilter&&f("definedNames",q).append(r(q,"definedName",{attr:{name:"_xlnm._FilterDatabase",localSheetId:"0",hidden:1},text:G(c)+"!$A$"+d+":"+A(k.header.length-1)+t}));c.customize&&c.customize(a,c,b);0===f("mergeCells",h).children().length&&f("mergeCells",h).remove();b=new (z||g.JSZip);d={type:"blob",mimeType:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"};E(b,a);b.generateAsync?b.generateAsync(d).then(function(a){B(a,l.filename);p.processing(!1)}):(B(b.generate(d),
l.filename),this.processing(!1))},filename:"*",extension:".xlsx",exportOptions:{},header:!0,footer:!1,title:"*",messageTop:"*",messageBottom:"*",createEmptyCells:!1,autoFilter:!1,sheetName:""};v.ext.buttons.pdfHtml5={className:"buttons-pdf buttons-html5",available:function(){return g.FileReader!==w&&(t||g.pdfMake)},text:function(a){return a.i18n("buttons.pdf","PDF")},action:function(a,b,d,c){this.processing(!0);d=b.buttons.exportData(c.exportOptions);a=b.buttons.exportInfo(c);var p=[];c.header&&p.push(f.map(d.header,
function(a){return{text:"string"===typeof a?a:a+"",style:"tableHeader"}}));for(var e=0,h=d.body.length;e<h;e++)p.push(f.map(d.body[e],function(a){if(null===a||a===w)a="";return{text:"string"===typeof a?a:a+"",style:e%2?"tableBodyEven":"tableBodyOdd"}}));c.footer&&d.footer&&p.push(f.map(d.footer,function(a){return{text:"string"===typeof a?a:a+"",style:"tableFooter"}}));d={pageSize:c.pageSize,pageOrientation:c.orientation,content:[{table:{headerRows:1,body:p},layout:"noBorders"}],styles:{tableHeader:{bold:!0,
fontSize:11,color:"white",fillColor:"#2d4154",alignment:"center"},tableBodyEven:{},tableBodyOdd:{fillColor:"#f3f3f3"},tableFooter:{bold:!0,fontSize:11,color:"white",fillColor:"#2d4154"},title:{alignment:"center",fontSize:15},message:{}},defaultStyle:{fontSize:10}};a.messageTop&&d.content.unshift({text:a.messageTop,style:"message",margin:[0,0,0,12]});a.messageBottom&&d.content.push({text:a.messageBottom,style:"message",margin:[0,0,0,12]});a.title&&d.content.unshift({text:a.title,style:"title",margin:[0,
0,0,12]});c.customize&&c.customize(d,c,b);b=(t||g.pdfMake).createPdf(d);"open"!==c.download||J()?b.download(a.filename):b.open();this.processing(!1)},title:"*",filename:"*",extension:".pdf",exportOptions:{},orientation:"portrait",pageSize:"A4",header:!0,footer:!1,messageTop:"*",messageBottom:"*",customize:null,download:"download"};return v.Buttons});


/*!
 Print button for Buttons and DataTables.
 2016 SpryMedia Ltd - datatables.net/license
*/
(function(c){"function"===typeof define&&define.amd?define(["jquery","datatables.net","datatables.net-buttons"],function(e){return c(e,window,document)}):"object"===typeof exports?module.exports=function(e,a){e||(e=window);a&&a.fn.dataTable||(a=require("datatables.net")(e,a).$);a.fn.dataTable.Buttons||require("datatables.net-buttons")(e,a);return c(a,e,e.document)}:c(jQuery,window,document)})(function(c,e,a,q){var k=c.fn.dataTable,d=a.createElement("a"),p=function(b){d.href=b;b=d.host;-1===b.indexOf("/")&&
0!==d.pathname.indexOf("/")&&(b+="/");return d.protocol+"//"+b+d.pathname+d.search};k.ext.buttons.print={className:"buttons-print",text:function(b){return b.i18n("buttons.print","Print")},action:function(b,a,d,g){b=a.buttons.exportData(c.extend({decodeEntities:!1},g.exportOptions));d=a.buttons.exportInfo(g);var k=a.columns(g.exportOptions.columns).flatten().map(function(b){return a.settings()[0].aoColumns[a.column(b).index()].sClass}).toArray(),m=function(b,a){for(var d="<tr>",c=0,e=b.length;c<e;c++)d+=
"<"+a+" "+(k[c]?'class="'+k[c]+'"':"")+">"+(null===b[c]||b[c]===q?"":b[c])+"</"+a+">";return d+"</tr>"},h='<table class="'+a.table().node().className+'">';g.header&&(h+="<thead>"+m(b.header,"th")+"</thead>");h+="<tbody>";for(var n=0,r=b.body.length;n<r;n++)h+=m(b.body[n],"td");h+="</tbody>";g.footer&&b.footer&&(h+="<tfoot>"+m(b.footer,"th")+"</tfoot>");h+="</table>";var f=e.open("","");f.document.close();var l="<title>"+d.title+"</title>";c("style, link").each(function(){var b=l,a=c(this).clone()[0];
"link"===a.nodeName.toLowerCase()&&(a.href=p(a.href));l=b+a.outerHTML});try{f.document.head.innerHTML=l}catch(t){c(f.document.head).html(l)}f.document.body.innerHTML="<h1>"+d.title+"</h1><div>"+(d.messageTop||"")+"</div>"+h+"<div>"+(d.messageBottom||"")+"</div>";c(f.document.body).addClass("dt-print-view");c("img",f.document.body).each(function(b,a){a.setAttribute("src",p(a.getAttribute("src")))});g.customize&&g.customize(f,g,a);b=function(){g.autoPrint&&(f.print(),f.close())};navigator.userAgent.match(/Trident\/\d.\d/)?
b():f.setTimeout(b,1E3)},title:"*",messageTop:"*",messageBottom:"*",exportOptions:{},header:!0,footer:!1,autoPrint:!0,customize:null};return k.Buttons});


/*!
 FixedColumns 3.2.5
 ©2010-2018 SpryMedia Ltd - datatables.net/license
*/
(function(d){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(p){return d(p,window,document)}):"object"===typeof exports?module.exports=function(p,r){p||(p=window);if(!r||!r.fn.dataTable)r=require("datatables.net")(p,r).$;return d(r,p,p.document)}:d(jQuery,window,document)})(function(d,p,r,t){var s=d.fn.dataTable,u,m=function(a,b){var c=this;if(this instanceof m){if(b===t||!0===b)b={};var e=d.fn.dataTable.camelToHungarian;e&&(e(m.defaults,m.defaults,!0),e(m.defaults,
b));e=(new d.fn.dataTable.Api(a)).settings()[0];this.s={dt:e,iTableColumns:e.aoColumns.length,aiOuterWidths:[],aiInnerWidths:[],rtl:"rtl"===d(e.nTable).css("direction")};this.dom={scroller:null,header:null,body:null,footer:null,grid:{wrapper:null,dt:null,left:{wrapper:null,head:null,body:null,foot:null},right:{wrapper:null,head:null,body:null,foot:null}},clone:{left:{header:null,body:null,footer:null},right:{header:null,body:null,footer:null}}};if(e._oFixedColumns)throw"FixedColumns already initialised on this table";
e._oFixedColumns=this;e._bInitComplete?this._fnConstruct(b):e.oApi._fnCallbackReg(e,"aoInitComplete",function(){c._fnConstruct(b)},"FixedColumns")}else alert("FixedColumns warning: FixedColumns must be initialised with the 'new' keyword.")};d.extend(m.prototype,{fnUpdate:function(){this._fnDraw(!0)},fnRedrawLayout:function(){this._fnColCalc();this._fnGridLayout();this.fnUpdate()},fnRecalculateHeight:function(a){delete a._DTTC_iHeight;a.style.height="auto"},fnSetRowHeight:function(a,b){a.style.height=
b+"px"},fnGetPosition:function(a){var b=this.s.dt.oInstance;if(d(a).parents(".DTFC_Cloned").length){if("tr"===a.nodeName.toLowerCase())return a=d(a).index(),b.fnGetPosition(d("tr",this.s.dt.nTBody)[a]);var c=d(a).index(),a=d(a.parentNode).index();return[b.fnGetPosition(d("tr",this.s.dt.nTBody)[a]),c,b.oApi._fnVisibleToColumnIndex(this.s.dt,c)]}return b.fnGetPosition(a)},_fnConstruct:function(a){var b=this;if("function"!=typeof this.s.dt.oInstance.fnVersionCheck||!0!==this.s.dt.oInstance.fnVersionCheck("1.8.0"))alert("FixedColumns "+
m.VERSION+" required DataTables 1.8.0 or later. Please upgrade your DataTables installation");else if(""===this.s.dt.oScroll.sX)this.s.dt.oInstance.oApi._fnLog(this.s.dt,1,"FixedColumns is not needed (no x-scrolling in DataTables enabled), so no action will be taken. Use 'FixedHeader' for column fixing when scrolling is not enabled");else{this.s=d.extend(!0,this.s,m.defaults,a);a=this.s.dt.oClasses;this.dom.grid.dt=d(this.s.dt.nTable).parents("div."+a.sScrollWrapper)[0];this.dom.scroller=d("div."+
a.sScrollBody,this.dom.grid.dt)[0];this._fnColCalc();this._fnGridSetup();var c,e=!1;d(this.s.dt.nTableWrapper).on("mousedown.DTFC",function(a){0===a.button&&(e=!0,d(r).one("mouseup",function(){e=!1}))});d(this.dom.scroller).on("mouseover.DTFC touchstart.DTFC",function(){e||(c="main")}).on("scroll.DTFC",function(a){!c&&a.originalEvent&&(c="main");if("main"===c&&(0<b.s.iLeftColumns&&(b.dom.grid.left.liner.scrollTop=b.dom.scroller.scrollTop),0<b.s.iRightColumns))b.dom.grid.right.liner.scrollTop=b.dom.scroller.scrollTop});
var f="onwheel"in r.createElement("div")?"wheel.DTFC":"mousewheel.DTFC";if(0<b.s.iLeftColumns)d(b.dom.grid.left.liner).on("mouseover.DTFC touchstart.DTFC",function(){e||(c="left")}).on("scroll.DTFC",function(a){!c&&a.originalEvent&&(c="left");"left"===c&&(b.dom.scroller.scrollTop=b.dom.grid.left.liner.scrollTop,0<b.s.iRightColumns&&(b.dom.grid.right.liner.scrollTop=b.dom.grid.left.liner.scrollTop))}).on(f,function(a){b.dom.scroller.scrollLeft-="wheel"===a.type?-a.originalEvent.deltaX:a.originalEvent.wheelDeltaX});
if(0<b.s.iRightColumns)d(b.dom.grid.right.liner).on("mouseover.DTFC touchstart.DTFC",function(){e||(c="right")}).on("scroll.DTFC",function(a){!c&&a.originalEvent&&(c="right");"right"===c&&(b.dom.scroller.scrollTop=b.dom.grid.right.liner.scrollTop,0<b.s.iLeftColumns&&(b.dom.grid.left.liner.scrollTop=b.dom.grid.right.liner.scrollTop))}).on(f,function(a){b.dom.scroller.scrollLeft-="wheel"===a.type?-a.originalEvent.deltaX:a.originalEvent.wheelDeltaX});d(p).on("resize.DTFC",function(){b._fnGridLayout.call(b)});
var g=!0,h=d(this.s.dt.nTable);h.on("draw.dt.DTFC",function(){b._fnColCalc();b._fnDraw.call(b,g);g=!1}).on("column-sizing.dt.DTFC",function(){b._fnColCalc();b._fnGridLayout(b)}).on("column-visibility.dt.DTFC",function(a,c,d,e,f){if(f===t||f)b._fnColCalc(),b._fnGridLayout(b),b._fnDraw(!0)}).on("select.dt.DTFC deselect.dt.DTFC",function(a){"dt"===a.namespace&&b._fnDraw(!1)}).on("destroy.dt.DTFC",function(){h.off(".DTFC");d(b.dom.scroller).off(".DTFC");d(p).off(".DTFC");d(b.s.dt.nTableWrapper).off(".DTFC");
d(b.dom.grid.left.liner).off(".DTFC "+f);d(b.dom.grid.left.wrapper).remove();d(b.dom.grid.right.liner).off(".DTFC "+f);d(b.dom.grid.right.wrapper).remove()});this._fnGridLayout();this.s.dt.oInstance.fnDraw(!1)}},_fnColCalc:function(){var a=this,b=0,c=0;this.s.aiInnerWidths=[];this.s.aiOuterWidths=[];d.each(this.s.dt.aoColumns,function(e,f){var g=d(f.nTh),h;if(g.filter(":visible").length){var i=g.outerWidth();0===a.s.aiOuterWidths.length&&(h=d(a.s.dt.nTable).css("border-left-width"),i+="string"===
typeof h&&-1===h.indexOf("px")?1:parseInt(h,10));a.s.aiOuterWidths.length===a.s.dt.aoColumns.length-1&&(h=d(a.s.dt.nTable).css("border-right-width"),i+="string"===typeof h&&-1===h.indexOf("px")?1:parseInt(h,10));a.s.aiOuterWidths.push(i);a.s.aiInnerWidths.push(g.width());e<a.s.iLeftColumns&&(b+=i);a.s.iTableColumns-a.s.iRightColumns<=e&&(c+=i)}else a.s.aiInnerWidths.push(0),a.s.aiOuterWidths.push(0)});this.s.iLeftWidth=b;this.s.iRightWidth=c},_fnGridSetup:function(){var a=this._fnDTOverflow(),b;this.dom.body=
this.s.dt.nTable;this.dom.header=this.s.dt.nTHead.parentNode;this.dom.header.parentNode.parentNode.style.position="relative";var c=d('<div class="DTFC_ScrollWrapper" style="position:relative; clear:both;"><div class="DTFC_LeftWrapper" style="position:absolute; top:0; left:0;" aria-hidden="true"><div class="DTFC_LeftHeadWrapper" style="position:relative; top:0; left:0; overflow:hidden;"></div><div class="DTFC_LeftBodyWrapper" style="position:relative; top:0; left:0; overflow:hidden;"><div class="DTFC_LeftBodyLiner" style="position:relative; top:0; left:0; overflow-y:scroll;"></div></div><div class="DTFC_LeftFootWrapper" style="position:relative; top:0; left:0; overflow:hidden;"></div></div><div class="DTFC_RightWrapper" style="position:absolute; top:0; right:0;" aria-hidden="true"><div class="DTFC_RightHeadWrapper" style="position:relative; top:0; left:0;"><div class="DTFC_RightHeadBlocker DTFC_Blocker" style="position:absolute; top:0; bottom:0;"></div></div><div class="DTFC_RightBodyWrapper" style="position:relative; top:0; left:0; overflow:hidden;"><div class="DTFC_RightBodyLiner" style="position:relative; top:0; left:0; overflow-y:scroll;"></div></div><div class="DTFC_RightFootWrapper" style="position:relative; top:0; left:0;"><div class="DTFC_RightFootBlocker DTFC_Blocker" style="position:absolute; top:0; bottom:0;"></div></div></div></div>')[0],
e=c.childNodes[0],f=c.childNodes[1];this.dom.grid.dt.parentNode.insertBefore(c,this.dom.grid.dt);c.appendChild(this.dom.grid.dt);this.dom.grid.wrapper=c;0<this.s.iLeftColumns&&(this.dom.grid.left.wrapper=e,this.dom.grid.left.head=e.childNodes[0],this.dom.grid.left.body=e.childNodes[1],this.dom.grid.left.liner=d("div.DTFC_LeftBodyLiner",c)[0],c.appendChild(e));0<this.s.iRightColumns&&(this.dom.grid.right.wrapper=f,this.dom.grid.right.head=f.childNodes[0],this.dom.grid.right.body=f.childNodes[1],this.dom.grid.right.liner=
d("div.DTFC_RightBodyLiner",c)[0],f.style.right=a.bar+"px",b=d("div.DTFC_RightHeadBlocker",c)[0],b.style.width=a.bar+"px",b.style.right=-a.bar+"px",this.dom.grid.right.headBlock=b,b=d("div.DTFC_RightFootBlocker",c)[0],b.style.width=a.bar+"px",b.style.right=-a.bar+"px",this.dom.grid.right.footBlock=b,c.appendChild(f));if(this.s.dt.nTFoot&&(this.dom.footer=this.s.dt.nTFoot.parentNode,0<this.s.iLeftColumns&&(this.dom.grid.left.foot=e.childNodes[2]),0<this.s.iRightColumns))this.dom.grid.right.foot=f.childNodes[2];
this.s.rtl&&d("div.DTFC_RightHeadBlocker",c).css({left:-a.bar+"px",right:""})},_fnGridLayout:function(){var a=this,b=this.dom.grid;d(b.wrapper).width();var c=this.s.dt.nTable.parentNode.offsetHeight,e=this.s.dt.nTable.parentNode.parentNode.offsetHeight,f=this._fnDTOverflow(),g=this.s.iLeftWidth,h=this.s.iRightWidth,i="rtl"===d(this.dom.body).css("direction"),j=function(b,c){f.bar?a._firefoxScrollError()?34<d(b).height()&&(b.style.width=c+f.bar+"px"):b.style.width=c+f.bar+"px":(b.style.width=c+20+
"px",b.style.paddingRight="20px",b.style.boxSizing="border-box")};f.x&&(c-=f.bar);b.wrapper.style.height=e+"px";0<this.s.iLeftColumns&&(e=b.left.wrapper,e.style.width=g+"px",e.style.height="1px",i?(e.style.left="",e.style.right=0):(e.style.left=0,e.style.right=""),b.left.body.style.height=c+"px",b.left.foot&&(b.left.foot.style.top=(f.x?f.bar:0)+"px"),j(b.left.liner,g),b.left.liner.style.height=c+"px",b.left.liner.style.maxHeight=c+"px");0<this.s.iRightColumns&&(e=b.right.wrapper,e.style.width=h+"px",
e.style.height="1px",this.s.rtl?(e.style.left=f.y?f.bar+"px":0,e.style.right=""):(e.style.left="",e.style.right=f.y?f.bar+"px":0),b.right.body.style.height=c+"px",b.right.foot&&(b.right.foot.style.top=(f.x?f.bar:0)+"px"),j(b.right.liner,h),b.right.liner.style.height=c+"px",b.right.liner.style.maxHeight=c+"px",b.right.headBlock.style.display=f.y?"block":"none",b.right.footBlock.style.display=f.y?"block":"none")},_fnDTOverflow:function(){var a=this.s.dt.nTable,b=a.parentNode,c={x:!1,y:!1,bar:this.s.dt.oScroll.iBarWidth};
a.offsetWidth>b.clientWidth&&(c.x=!0);a.offsetHeight>b.clientHeight&&(c.y=!0);return c},_fnDraw:function(a){this._fnGridLayout();this._fnCloneLeft(a);this._fnCloneRight(a);null!==this.s.fnDrawCallback&&this.s.fnDrawCallback.call(this,this.dom.clone.left,this.dom.clone.right);d(this).trigger("draw.dtfc",{leftClone:this.dom.clone.left,rightClone:this.dom.clone.right})},_fnCloneRight:function(a){if(!(0>=this.s.iRightColumns)){var b,c=[];for(b=this.s.iTableColumns-this.s.iRightColumns;b<this.s.iTableColumns;b++)this.s.dt.aoColumns[b].bVisible&&
c.push(b);this._fnClone(this.dom.clone.right,this.dom.grid.right,c,a)}},_fnCloneLeft:function(a){if(!(0>=this.s.iLeftColumns)){var b,c=[];for(b=0;b<this.s.iLeftColumns;b++)this.s.dt.aoColumns[b].bVisible&&c.push(b);this._fnClone(this.dom.clone.left,this.dom.grid.left,c,a)}},_fnCopyLayout:function(a,b,c){for(var e=[],f=[],g=[],h=0,i=a.length;h<i;h++){var j=[];j.nTr=d(a[h].nTr).clone(c,!1)[0];for(var l=0,o=this.s.iTableColumns;l<o;l++)if(-1!==d.inArray(l,b)){var q=d.inArray(a[h][l].cell,g);-1===q?(q=
d(a[h][l].cell).clone(c,!1)[0],f.push(q),g.push(a[h][l].cell),j.push({cell:q,unique:a[h][l].unique})):j.push({cell:f[q],unique:a[h][l].unique})}e.push(j)}return e},_fnClone:function(a,b,c,e){var f=this,g,h,i,j,l,o,q,n,m,k=this.s.dt;if(e){d(a.header).remove();a.header=d(this.dom.header).clone(!0,!1)[0];a.header.className+=" DTFC_Cloned";a.header.style.width="100%";b.head.appendChild(a.header);n=this._fnCopyLayout(k.aoHeader,c,!0);j=d(">thead",a.header);j.empty();g=0;for(h=n.length;g<h;g++)j[0].appendChild(n[g].nTr);
k.oApi._fnDrawHead(k,n,!0)}else{n=this._fnCopyLayout(k.aoHeader,c,!1);m=[];k.oApi._fnDetectHeader(m,d(">thead",a.header)[0]);g=0;for(h=n.length;g<h;g++){i=0;for(j=n[g].length;i<j;i++)m[g][i].cell.className=n[g][i].cell.className,d("span.DataTables_sort_icon",m[g][i].cell).each(function(){this.className=d("span.DataTables_sort_icon",n[g][i].cell)[0].className})}}this._fnEqualiseHeights("thead",this.dom.header,a.header);"auto"==this.s.sHeightMatch&&d(">tbody>tr",f.dom.body).css("height","auto");null!==
a.body&&(d(a.body).remove(),a.body=null);a.body=d(this.dom.body).clone(!0)[0];a.body.className+=" DTFC_Cloned";a.body.style.paddingBottom=k.oScroll.iBarWidth+"px";a.body.style.marginBottom=2*k.oScroll.iBarWidth+"px";null!==a.body.getAttribute("id")&&a.body.removeAttribute("id");d(">thead>tr",a.body).empty();d(">tfoot",a.body).remove();var p=d("tbody",a.body)[0];d(p).empty();if(0<k.aiDisplay.length){h=d(">thead>tr",a.body)[0];for(q=0;q<c.length;q++)l=c[q],o=d(k.aoColumns[l].nTh).clone(!0)[0],o.innerHTML=
"",j=o.style,j.paddingTop="0",j.paddingBottom="0",j.borderTopWidth="0",j.borderBottomWidth="0",j.height=0,j.width=f.s.aiInnerWidths[l]+"px",h.appendChild(o);d(">tbody>tr",f.dom.body).each(function(a){var a=f.s.dt.oFeatures.bServerSide===false?f.s.dt.aiDisplay[f.s.dt._iDisplayStart+a]:a,b=f.s.dt.aoData[a].anCells||d(this).children("td, th"),e=this.cloneNode(false);e.removeAttribute("id");e.setAttribute("data-dt-row",a);for(q=0;q<c.length;q++){l=c[q];if(b.length>0){o=d(b[l]).clone(true,true)[0];o.removeAttribute("id");
o.setAttribute("data-dt-row",a);o.setAttribute("data-dt-column",l);e.appendChild(o)}}p.appendChild(e)})}else d(">tbody>tr",f.dom.body).each(function(){o=this.cloneNode(true);o.className=o.className+" DTFC_NoData";d("td",o).html("");p.appendChild(o)});a.body.style.width="100%";a.body.style.margin="0";a.body.style.padding="0";k.oScroller!==t&&(h=k.oScroller.dom.force,b.forcer?b.forcer.style.height=h.style.height:(b.forcer=h.cloneNode(!0),b.liner.appendChild(b.forcer)));b.liner.appendChild(a.body);this._fnEqualiseHeights("tbody",
f.dom.body,a.body);if(null!==k.nTFoot){if(e){null!==a.footer&&a.footer.parentNode.removeChild(a.footer);a.footer=d(this.dom.footer).clone(!0,!0)[0];a.footer.className+=" DTFC_Cloned";a.footer.style.width="100%";b.foot.appendChild(a.footer);n=this._fnCopyLayout(k.aoFooter,c,!0);b=d(">tfoot",a.footer);b.empty();g=0;for(h=n.length;g<h;g++)b[0].appendChild(n[g].nTr);k.oApi._fnDrawHead(k,n,!0)}else{n=this._fnCopyLayout(k.aoFooter,c,!1);b=[];k.oApi._fnDetectHeader(b,d(">tfoot",a.footer)[0]);g=0;for(h=n.length;g<
h;g++){i=0;for(j=n[g].length;i<j;i++)b[g][i].cell.className=n[g][i].cell.className}}this._fnEqualiseHeights("tfoot",this.dom.footer,a.footer)}b=k.oApi._fnGetUniqueThs(k,d(">thead",a.header)[0]);d(b).each(function(a){l=c[a];this.style.width=f.s.aiInnerWidths[l]+"px"});null!==f.s.dt.nTFoot&&(b=k.oApi._fnGetUniqueThs(k,d(">tfoot",a.footer)[0]),d(b).each(function(a){l=c[a];this.style.width=f.s.aiInnerWidths[l]+"px"}))},_fnGetTrNodes:function(a){for(var b=[],c=0,d=a.childNodes.length;c<d;c++)"TR"==a.childNodes[c].nodeName.toUpperCase()&&
b.push(a.childNodes[c]);return b},_fnEqualiseHeights:function(a,b,c){if(!("none"==this.s.sHeightMatch&&"thead"!==a&&"tfoot"!==a)){var e,f,g=b.getElementsByTagName(a)[0],c=c.getElementsByTagName(a)[0],a=d(">"+a+">tr:eq(0)",b).children(":first");a.outerHeight();a.height();for(var g=this._fnGetTrNodes(g),b=this._fnGetTrNodes(c),h=[],c=0,a=b.length;c<a;c++)e=g[c].offsetHeight,f=b[c].offsetHeight,e=f>e?f:e,"semiauto"==this.s.sHeightMatch&&(g[c]._DTTC_iHeight=e),h.push(e);c=0;for(a=b.length;c<a;c++)b[c].style.height=
h[c]+"px",g[c].style.height=h[c]+"px"}},_firefoxScrollError:function(){if(u===t){var a=d("<div/>").css({position:"absolute",top:0,left:0,height:10,width:50,overflow:"scroll"}).appendTo("body");u=a[0].clientWidth===a[0].offsetWidth&&0!==this._fnDTOverflow().bar;a.remove()}return u}});m.defaults={iLeftColumns:1,iRightColumns:0,fnDrawCallback:null,sHeightMatch:"semiauto"};m.version="3.2.5";s.Api.register("fixedColumns()",function(){return this});s.Api.register("fixedColumns().update()",function(){return this.iterator("table",
function(a){a._oFixedColumns&&a._oFixedColumns.fnUpdate()})});s.Api.register("fixedColumns().relayout()",function(){return this.iterator("table",function(a){a._oFixedColumns&&a._oFixedColumns.fnRedrawLayout()})});s.Api.register("rows().recalcHeight()",function(){return this.iterator("row",function(a,b){a._oFixedColumns&&a._oFixedColumns.fnRecalculateHeight(this.row(b).node())})});s.Api.register("fixedColumns().rowIndex()",function(a){a=d(a);return a.parents(".DTFC_Cloned").length?this.rows({page:"current"}).indexes()[a.index()]:
this.row(a).index()});s.Api.register("fixedColumns().cellIndex()",function(a){a=d(a);if(a.parents(".DTFC_Cloned").length){var b=a.parent().index(),b=this.rows({page:"current"}).indexes()[b],a=a.parents(".DTFC_LeftWrapper").length?a.index():this.columns().flatten().length-this.context[0]._oFixedColumns.s.iRightColumns+a.index();return{row:b,column:this.column.index("toData",a),columnVisible:a}}return this.cell(a).index()});d(r).on("init.dt.fixedColumns",function(a,b){if("dt"===a.namespace){var c=b.oInit.fixedColumns,
e=s.defaults.fixedColumns;if(c||e)e=d.extend({},c,e),!1!==c&&new m(b,e)}});d.fn.dataTable.FixedColumns=m;return d.fn.DataTable.FixedColumns=m});


/*!
 Responsive 2.2.2
 2014-2018 SpryMedia Ltd - datatables.net/license
*/
(function(d){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(l){return d(l,window,document)}):"object"===typeof exports?module.exports=function(l,j){l||(l=window);if(!j||!j.fn.dataTable)j=require("datatables.net")(l,j).$;return d(j,l,l.document)}:d(jQuery,window,document)})(function(d,l,j,q){function t(a,b,c){var e=b+"-"+c;if(n[e])return n[e];for(var d=[],a=a.cell(b,c).node().childNodes,b=0,c=a.length;b<c;b++)d.push(a[b]);return n[e]=d}function r(a,b,d){var e=b+
"-"+d;if(n[e]){for(var a=a.cell(b,d).node(),d=n[e][0].parentNode.childNodes,b=[],f=0,g=d.length;f<g;f++)b.push(d[f]);d=0;for(f=b.length;d<f;d++)a.appendChild(b[d]);n[e]=q}}var o=d.fn.dataTable,i=function(a,b){if(!o.versionCheck||!o.versionCheck("1.10.10"))throw"DataTables Responsive requires DataTables 1.10.10 or newer";this.s={dt:new o.Api(a),columns:[],current:[]};this.s.dt.settings()[0].responsive||(b&&"string"===typeof b.details?b.details={type:b.details}:b&&!1===b.details?b.details={type:!1}:
b&&!0===b.details&&(b.details={type:"inline"}),this.c=d.extend(!0,{},i.defaults,o.defaults.responsive,b),a.responsive=this,this._constructor())};d.extend(i.prototype,{_constructor:function(){var a=this,b=this.s.dt,c=b.settings()[0],e=d(l).width();b.settings()[0]._responsive=this;d(l).on("resize.dtr orientationchange.dtr",o.util.throttle(function(){var b=d(l).width();b!==e&&(a._resize(),e=b)}));c.oApi._fnCallbackReg(c,"aoRowCreatedCallback",function(e){-1!==d.inArray(!1,a.s.current)&&d(">td, >th",
e).each(function(e){e=b.column.index("toData",e);!1===a.s.current[e]&&d(this).css("display","none")})});b.on("destroy.dtr",function(){b.off(".dtr");d(b.table().body()).off(".dtr");d(l).off("resize.dtr orientationchange.dtr");d.each(a.s.current,function(b,e){!1===e&&a._setColumnVis(b,!0)})});this.c.breakpoints.sort(function(a,b){return a.width<b.width?1:a.width>b.width?-1:0});this._classLogic();this._resizeAuto();c=this.c.details;!1!==c.type&&(a._detailsInit(),b.on("column-visibility.dtr",function(){a._timer&&
clearTimeout(a._timer);a._timer=setTimeout(function(){a._timer=null;a._classLogic();a._resizeAuto();a._resize();a._redrawChildren()},100)}),b.on("draw.dtr",function(){a._redrawChildren()}),d(b.table().node()).addClass("dtr-"+c.type));b.on("column-reorder.dtr",function(){a._classLogic();a._resizeAuto();a._resize()});b.on("column-sizing.dtr",function(){a._resizeAuto();a._resize()});b.on("preXhr.dtr",function(){var e=[];b.rows().every(function(){this.child.isShown()&&e.push(this.id(true))});b.one("draw.dtr",
function(){a._resizeAuto();a._resize();b.rows(e).every(function(){a._detailsDisplay(this,false)})})});b.on("init.dtr",function(){a._resizeAuto();a._resize();d.inArray(false,a.s.current)&&b.columns.adjust()});this._resize()},_columnsVisiblity:function(a){var b=this.s.dt,c=this.s.columns,e,f,g=c.map(function(a,b){return{columnIdx:b,priority:a.priority}}).sort(function(a,b){return a.priority!==b.priority?a.priority-b.priority:a.columnIdx-b.columnIdx}),h=d.map(c,function(e,c){return!1===b.column(c).visible()?
"not-visible":e.auto&&null===e.minWidth?!1:!0===e.auto?"-":-1!==d.inArray(a,e.includeIn)}),m=0;e=0;for(f=h.length;e<f;e++)!0===h[e]&&(m+=c[e].minWidth);e=b.settings()[0].oScroll;e=e.sY||e.sX?e.iBarWidth:0;m=b.table().container().offsetWidth-e-m;e=0;for(f=h.length;e<f;e++)c[e].control&&(m-=c[e].minWidth);var s=!1;e=0;for(f=g.length;e<f;e++){var k=g[e].columnIdx;"-"===h[k]&&(!c[k].control&&c[k].minWidth)&&(s||0>m-c[k].minWidth?(s=!0,h[k]=!1):h[k]=!0,m-=c[k].minWidth)}g=!1;e=0;for(f=c.length;e<f;e++)if(!c[e].control&&
!c[e].never&&!1===h[e]){g=!0;break}e=0;for(f=c.length;e<f;e++)c[e].control&&(h[e]=g),"not-visible"===h[e]&&(h[e]=!1);-1===d.inArray(!0,h)&&(h[0]=!0);return h},_classLogic:function(){var a=this,b=this.c.breakpoints,c=this.s.dt,e=c.columns().eq(0).map(function(a){var b=this.column(a),e=b.header().className,a=c.settings()[0].aoColumns[a].responsivePriority;a===q&&(b=d(b.header()).data("priority"),a=b!==q?1*b:1E4);return{className:e,includeIn:[],auto:!1,control:!1,never:e.match(/\bnever\b/)?!0:!1,priority:a}}),
f=function(a,b){var c=e[a].includeIn;-1===d.inArray(b,c)&&c.push(b)},g=function(d,c,g,k){if(g)if("max-"===g){k=a._find(c).width;c=0;for(g=b.length;c<g;c++)b[c].width<=k&&f(d,b[c].name)}else if("min-"===g){k=a._find(c).width;c=0;for(g=b.length;c<g;c++)b[c].width>=k&&f(d,b[c].name)}else{if("not-"===g){c=0;for(g=b.length;c<g;c++)-1===b[c].name.indexOf(k)&&f(d,b[c].name)}}else e[d].includeIn.push(c)};e.each(function(a,e){for(var c=a.className.split(" "),f=!1,i=0,l=c.length;i<l;i++){var j=d.trim(c[i]);
if("all"===j){f=!0;a.includeIn=d.map(b,function(a){return a.name});return}if("none"===j||a.never){f=!0;return}if("control"===j){f=!0;a.control=!0;return}d.each(b,function(a,b){var d=b.name.split("-"),c=j.match(RegExp("(min\\-|max\\-|not\\-)?("+d[0]+")(\\-[_a-zA-Z0-9])?"));c&&(f=!0,c[2]===d[0]&&c[3]==="-"+d[1]?g(e,b.name,c[1],c[2]+c[3]):c[2]===d[0]&&!c[3]&&g(e,b.name,c[1],c[2]))})}f||(a.auto=!0)});this.s.columns=e},_detailsDisplay:function(a,b){var c=this,e=this.s.dt,f=this.c.details;if(f&&!1!==f.type){var g=
f.display(a,b,function(){return f.renderer(e,a[0],c._detailsObj(a[0]))});(!0===g||!1===g)&&d(e.table().node()).triggerHandler("responsive-display.dt",[e,a,g,b])}},_detailsInit:function(){var a=this,b=this.s.dt,c=this.c.details;"inline"===c.type&&(c.target="td:first-child, th:first-child");b.on("draw.dtr",function(){a._tabIndexes()});a._tabIndexes();d(b.table().body()).on("keyup.dtr","td, th",function(a){a.keyCode===13&&d(this).data("dtr-keyboard")&&d(this).click()});var e=c.target;d(b.table().body()).on("click.dtr mousedown.dtr mouseup.dtr",
"string"===typeof e?e:"td, th",function(c){if(d(b.table().node()).hasClass("collapsed")&&d.inArray(d(this).closest("tr").get(0),b.rows().nodes().toArray())!==-1){if(typeof e==="number"){var g=e<0?b.columns().eq(0).length+e:e;if(b.cell(this).index().column!==g)return}g=b.row(d(this).closest("tr"));c.type==="click"?a._detailsDisplay(g,false):c.type==="mousedown"?d(this).css("outline","none"):c.type==="mouseup"&&d(this).blur().css("outline","")}})},_detailsObj:function(a){var b=this,c=this.s.dt;return d.map(this.s.columns,
function(e,d){if(!e.never&&!e.control)return{title:c.settings()[0].aoColumns[d].sTitle,data:c.cell(a,d).render(b.c.orthogonal),hidden:c.column(d).visible()&&!b.s.current[d],columnIndex:d,rowIndex:a}})},_find:function(a){for(var b=this.c.breakpoints,c=0,e=b.length;c<e;c++)if(b[c].name===a)return b[c]},_redrawChildren:function(){var a=this,b=this.s.dt;b.rows({page:"current"}).iterator("row",function(c,e){b.row(e);a._detailsDisplay(b.row(e),!0)})},_resize:function(){var a=this,b=this.s.dt,c=d(l).width(),
e=this.c.breakpoints,f=e[0].name,g=this.s.columns,h,m=this.s.current.slice();for(h=e.length-1;0<=h;h--)if(c<=e[h].width){f=e[h].name;break}var i=this._columnsVisiblity(f);this.s.current=i;e=!1;h=0;for(c=g.length;h<c;h++)if(!1===i[h]&&!g[h].never&&!g[h].control&&!1===!b.column(h).visible()){e=!0;break}d(b.table().node()).toggleClass("collapsed",e);var k=!1,j=0;b.columns().eq(0).each(function(b,c){!0===i[c]&&j++;i[c]!==m[c]&&(k=!0,a._setColumnVis(b,i[c]))});k&&(this._redrawChildren(),d(b.table().node()).trigger("responsive-resize.dt",
[b,this.s.current]),0===b.page.info().recordsDisplay&&d("td",b.table().body()).eq(0).attr("colspan",j))},_resizeAuto:function(){var a=this.s.dt,b=this.s.columns;if(this.c.auto&&-1!==d.inArray(!0,d.map(b,function(a){return a.auto}))){d.isEmptyObject(n)||d.each(n,function(b){b=b.split("-");r(a,1*b[0],1*b[1])});a.table().node();var c=a.table().node().cloneNode(!1),e=d(a.table().header().cloneNode(!1)).appendTo(c),f=d(a.table().body()).clone(!1,!1).empty().appendTo(c),g=a.columns().header().filter(function(b){return a.column(b).visible()}).to$().clone(!1).css("display",
"table-cell").css("min-width",0);d(f).append(d(a.rows({page:"current"}).nodes()).clone(!1)).find("th, td").css("display","");if(f=a.table().footer()){var f=d(f.cloneNode(!1)).appendTo(c),h=a.columns().footer().filter(function(b){return a.column(b).visible()}).to$().clone(!1).css("display","table-cell");d("<tr/>").append(h).appendTo(f)}d("<tr/>").append(g).appendTo(e);"inline"===this.c.details.type&&d(c).addClass("dtr-inline collapsed");d(c).find("[name]").removeAttr("name");d(c).css("position","relative");
c=d("<div/>").css({width:1,height:1,overflow:"hidden",clear:"both"}).append(c);c.insertBefore(a.table().node());g.each(function(c){c=a.column.index("fromVisible",c);b[c].minWidth=this.offsetWidth||0});c.remove()}},_setColumnVis:function(a,b){var c=this.s.dt,e=b?"":"none";d(c.column(a).header()).css("display",e);d(c.column(a).footer()).css("display",e);c.column(a).nodes().to$().css("display",e);d.isEmptyObject(n)||c.cells(null,a).indexes().each(function(a){r(c,a.row,a.column)})},_tabIndexes:function(){var a=
this.s.dt,b=a.cells({page:"current"}).nodes().to$(),c=a.settings()[0],e=this.c.details.target;b.filter("[data-dtr-keyboard]").removeData("[data-dtr-keyboard]");"number"===typeof e?a.cells(null,e,{page:"current"}).nodes().to$().attr("tabIndex",c.iTabIndex).data("dtr-keyboard",1):("td:first-child, th:first-child"===e&&(e=">td:first-child, >th:first-child"),d(e,a.rows({page:"current"}).nodes()).attr("tabIndex",c.iTabIndex).data("dtr-keyboard",1))}});i.breakpoints=[{name:"desktop",width:Infinity},{name:"tablet-l",
width:1024},{name:"tablet-p",width:768},{name:"mobile-l",width:480},{name:"mobile-p",width:320}];i.display={childRow:function(a,b,c){if(b){if(d(a.node()).hasClass("parent"))return a.child(c(),"child").show(),!0}else{if(a.child.isShown())return a.child(!1),d(a.node()).removeClass("parent"),!1;a.child(c(),"child").show();d(a.node()).addClass("parent");return!0}},childRowImmediate:function(a,b,c){if(!b&&a.child.isShown()||!a.responsive.hasHidden())return a.child(!1),d(a.node()).removeClass("parent"),
!1;a.child(c(),"child").show();d(a.node()).addClass("parent");return!0},modal:function(a){return function(b,c,e){if(c)d("div.dtr-modal-content").empty().append(e());else{var f=function(){g.remove();d(j).off("keypress.dtr")},g=d('<div class="dtr-modal"/>').append(d('<div class="dtr-modal-display"/>').append(d('<div class="dtr-modal-content"/>').append(e())).append(d('<div class="dtr-modal-close">&times;</div>').click(function(){f()}))).append(d('<div class="dtr-modal-background"/>').click(function(){f()})).appendTo("body");
d(j).on("keyup.dtr",function(a){27===a.keyCode&&(a.stopPropagation(),f())})}a&&a.header&&d("div.dtr-modal-content").prepend("<h2>"+a.header(b)+"</h2>")}}};var n={};i.renderer={listHiddenNodes:function(){return function(a,b,c){var e=d('<ul data-dtr-index="'+b+'" class="dtr-details"/>'),f=!1;d.each(c,function(b,c){c.hidden&&(d('<li data-dtr-index="'+c.columnIndex+'" data-dt-row="'+c.rowIndex+'" data-dt-column="'+c.columnIndex+'"><span class="dtr-title">'+c.title+"</span> </li>").append(d('<span class="dtr-data"/>').append(t(a,
c.rowIndex,c.columnIndex))).appendTo(e),f=!0)});return f?e:!1}},listHidden:function(){return function(a,b,c){return(a=d.map(c,function(a){return a.hidden?'<li data-dtr-index="'+a.columnIndex+'" data-dt-row="'+a.rowIndex+'" data-dt-column="'+a.columnIndex+'"><span class="dtr-title">'+a.title+'</span> <span class="dtr-data">'+a.data+"</span></li>":""}).join(""))?d('<ul data-dtr-index="'+b+'" class="dtr-details"/>').append(a):!1}},tableAll:function(a){a=d.extend({tableClass:""},a);return function(b,
c,e){b=d.map(e,function(a){return'<tr data-dt-row="'+a.rowIndex+'" data-dt-column="'+a.columnIndex+'"><td>'+a.title+":</td> <td>"+a.data+"</td></tr>"}).join("");return d('<table class="'+a.tableClass+' dtr-details" width="100%"/>').append(b)}}};i.defaults={breakpoints:i.breakpoints,auto:!0,details:{display:i.display.childRow,renderer:i.renderer.listHidden(),target:0,type:"inline"},orthogonal:"display"};var p=d.fn.dataTable.Api;p.register("responsive()",function(){return this});p.register("responsive.index()",
function(a){a=d(a);return{column:a.data("dtr-index"),row:a.parent().data("dtr-index")}});p.register("responsive.rebuild()",function(){return this.iterator("table",function(a){a._responsive&&a._responsive._classLogic()})});p.register("responsive.recalc()",function(){return this.iterator("table",function(a){a._responsive&&(a._responsive._resizeAuto(),a._responsive._resize())})});p.register("responsive.hasHidden()",function(){var a=this.context[0];return a._responsive?-1!==d.inArray(!1,a._responsive.s.current):
!1});p.registerPlural("columns().responsiveHidden()","column().responsiveHidden()",function(){return this.iterator("column",function(a,b){return a._responsive?a._responsive.s.current[b]:!1},1)});i.version="2.2.2";d.fn.dataTable.Responsive=i;d.fn.DataTable.Responsive=i;d(j).on("preInit.dt.dtr",function(a,b){if("dt"===a.namespace&&(d(b.nTable).hasClass("responsive")||d(b.nTable).hasClass("dt-responsive")||b.oInit.responsive||o.defaults.responsive)){var c=b.oInit.responsive;!1!==c&&new i(b,d.isPlainObject(c)?
c:{})}});return i});


/* @license
Papa Parse
v4.6.1
https://github.com/mholt/PapaParse
License: MIT
*/

// Polyfills
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray#Polyfill
if (!Array.isArray)
{
	Array.isArray = function(arg) {
		return Object.prototype.toString.call(arg) === '[object Array]';
	};
}

(function(root, factory)
{
	/* globals define */
	if (typeof define === 'function' && define.amd)
	{
		// AMD. Register as an anonymous module.
		define([], factory);
	}
	else if (typeof module === 'object' && typeof exports !== 'undefined')
	{
		// Node. Does not work with strict CommonJS, but
		// only CommonJS-like environments that support module.exports,
		// like Node.
		module.exports = factory();
	}
	else
	{
		// Browser globals (root is window)
		root.Papa = factory();
	}
}(this, function()
{
	'use strict';

	var global = (function() {
		// alternative method, similar to `Function('return this')()`
		// but without using `eval` (which is disabled when
		// using Content Security Policy).

		if (typeof self !== 'undefined') { return self; }
		if (typeof window !== 'undefined') { return window; }
		if (typeof global !== 'undefined') { return global; }

		// When running tests none of the above have been defined
		return {};
	})();

	var IS_WORKER = !global.document && !!global.postMessage,
		IS_PAPA_WORKER = IS_WORKER && /(\?|&)papaworker(=|&|$)/.test(global.location.search),
		LOADED_SYNC = false, AUTO_SCRIPT_PATH;
	var workers = {}, workerIdCounter = 0;

	var Papa = {};

	Papa.parse = CsvToJson;
	Papa.unparse = JsonToCsv;

	Papa.RECORD_SEP = String.fromCharCode(30);
	Papa.UNIT_SEP = String.fromCharCode(31);
	Papa.BYTE_ORDER_MARK = '\ufeff';
	Papa.BAD_DELIMITERS = ['\r', '\n', '"', Papa.BYTE_ORDER_MARK];
	Papa.WORKERS_SUPPORTED = !IS_WORKER && !!global.Worker;
	Papa.SCRIPT_PATH = null;	// Must be set by your code if you use workers and this lib is loaded asynchronously
	Papa.NODE_STREAM_INPUT = 1;

	// Configurable chunk sizes for local and remote files, respectively
	Papa.LocalChunkSize = 1024 * 1024 * 10;	// 10 MB
	Papa.RemoteChunkSize = 1024 * 1024 * 5;	// 5 MB
	Papa.DefaultDelimiter = ',';			// Used if not specified and detection fails

	// Exposed for testing and development only
	Papa.Parser = Parser;
	Papa.ParserHandle = ParserHandle;
	Papa.NetworkStreamer = NetworkStreamer;
	Papa.FileStreamer = FileStreamer;
	Papa.StringStreamer = StringStreamer;
	Papa.ReadableStreamStreamer = ReadableStreamStreamer;
	Papa.DuplexStreamStreamer = DuplexStreamStreamer;

	if (global.jQuery)
	{
		var $ = global.jQuery;
		$.fn.parse = function(options)
		{
			var config = options.config || {};
			var queue = [];

			this.each(function(idx)
			{
				var supported = $(this).prop('tagName').toUpperCase() === 'INPUT'
								&& $(this).attr('type').toLowerCase() === 'file'
								&& global.FileReader;

				if (!supported || !this.files || this.files.length === 0)
					return true;	// continue to next input element

				for (var i = 0; i < this.files.length; i++)
				{
					queue.push({
						file: this.files[i],
						inputElem: this,
						instanceConfig: $.extend({}, config)
					});
				}
			});

			parseNextFile();	// begin parsing
			return this;		// maintains chainability


			function parseNextFile()
			{
				if (queue.length === 0)
				{
					if (isFunction(options.complete))
						options.complete();
					return;
				}

				var f = queue[0];

				if (isFunction(options.before))
				{
					var returned = options.before(f.file, f.inputElem);

					if (typeof returned === 'object')
					{
						if (returned.action === 'abort')
						{
							error('AbortError', f.file, f.inputElem, returned.reason);
							return;	// Aborts all queued files immediately
						}
						else if (returned.action === 'skip')
						{
							fileComplete();	// parse the next file in the queue, if any
							return;
						}
						else if (typeof returned.config === 'object')
							f.instanceConfig = $.extend(f.instanceConfig, returned.config);
					}
					else if (returned === 'skip')
					{
						fileComplete();	// parse the next file in the queue, if any
						return;
					}
				}

				// Wrap up the user's complete callback, if any, so that ours also gets executed
				var userCompleteFunc = f.instanceConfig.complete;
				f.instanceConfig.complete = function(results)
				{
					if (isFunction(userCompleteFunc))
						userCompleteFunc(results, f.file, f.inputElem);
					fileComplete();
				};

				Papa.parse(f.file, f.instanceConfig);
			}

			function error(name, file, elem, reason)
			{
				if (isFunction(options.error))
					options.error({name: name}, file, elem, reason);
			}

			function fileComplete()
			{
				queue.splice(0, 1);
				parseNextFile();
			}
		};
	}


	if (IS_PAPA_WORKER)
	{
		global.onmessage = workerThreadReceivedMessage;
	}
	else if (Papa.WORKERS_SUPPORTED)
	{
		AUTO_SCRIPT_PATH = getScriptPath();

		// Check if the script was loaded synchronously
		if (!document.body)
		{
			// Body doesn't exist yet, must be synchronous
			LOADED_SYNC = true;
		}
		else
		{
			document.addEventListener('DOMContentLoaded', function() {
				LOADED_SYNC = true;
			}, true);
		}
	}




	function CsvToJson(_input, _config)
	{
		_config = _config || {};
		var dynamicTyping = _config.dynamicTyping || false;
		if (isFunction(dynamicTyping)) {
			_config.dynamicTypingFunction = dynamicTyping;
			// Will be filled on first row call
			dynamicTyping = {};
		}
		_config.dynamicTyping = dynamicTyping;

		_config.transform = isFunction(_config.transform) ? _config.transform : false;

		if (_config.worker && Papa.WORKERS_SUPPORTED)
		{
			var w = newWorker();

			w.userStep = _config.step;
			w.userChunk = _config.chunk;
			w.userComplete = _config.complete;
			w.userError = _config.error;

			_config.step = isFunction(_config.step);
			_config.chunk = isFunction(_config.chunk);
			_config.complete = isFunction(_config.complete);
			_config.error = isFunction(_config.error);
			delete _config.worker;	// prevent infinite loop

			w.postMessage({
				input: _input,
				config: _config,
				workerId: w.id
			});

			return;
		}

		var streamer = null;
		if (_input === Papa.NODE_STREAM_INPUT)
		{
			// create a node Duplex stream for use
			// with .pipe
			streamer = new DuplexStreamStreamer(_config);
			return streamer.getStream();
		}
		else if (typeof _input === 'string')
		{
			if (_config.download)
				streamer = new NetworkStreamer(_config);
			else
				streamer = new StringStreamer(_config);
		}
		else if (_input.readable === true && isFunction(_input.read) && isFunction(_input.on))
		{
			streamer = new ReadableStreamStreamer(_config);
		}
		else if ((global.File && _input instanceof File) || _input instanceof Object)	// ...Safari. (see issue #106)
			streamer = new FileStreamer(_config);

		return streamer.stream(_input);
	}






	function JsonToCsv(_input, _config)
	{
		// Default configuration

		/** whether to surround every datum with quotes */
		var _quotes = false;

		/** whether to write headers */
		var _writeHeader = true;

		/** delimiting character(s) */
		var _delimiter = ',';

		/** newline character(s) */
		var _newline = '\r\n';

		/** quote character */
		var _quoteChar = '"';

		/** whether to skip empty lines */
		var _skipEmptyLines = false;

		unpackConfig();

		var quoteCharRegex = new RegExp(_quoteChar, 'g');

		if (typeof _input === 'string')
			_input = JSON.parse(_input);

		if (Array.isArray(_input))
		{
			if (!_input.length || Array.isArray(_input[0]))
				return serialize(null, _input, _skipEmptyLines);
			else if (typeof _input[0] === 'object')
				return serialize(objectKeys(_input[0]), _input, _skipEmptyLines);
		}
		else if (typeof _input === 'object')
		{
			if (typeof _input.data === 'string')
				_input.data = JSON.parse(_input.data);

			if (Array.isArray(_input.data))
			{
				if (!_input.fields)
					_input.fields =  _input.meta && _input.meta.fields;

				if (!_input.fields)
					_input.fields =  Array.isArray(_input.data[0])
						? _input.fields
						: objectKeys(_input.data[0]);

				if (!(Array.isArray(_input.data[0])) && typeof _input.data[0] !== 'object')
					_input.data = [_input.data];	// handles input like [1,2,3] or ['asdf']
			}

			return serialize(_input.fields || [], _input.data || [], _skipEmptyLines);
		}

		// Default (any valid paths should return before this)
		throw 'exception: Unable to serialize unrecognized input';


		function unpackConfig()
		{
			if (typeof _config !== 'object')
				return;

			if (typeof _config.delimiter === 'string'
                && !Papa.BAD_DELIMITERS.filter(function(value) { return _config.delimiter.indexOf(value) !== -1; }).length)
			{
				_delimiter = _config.delimiter;
			}

			if (typeof _config.quotes === 'boolean'
				|| Array.isArray(_config.quotes))
				_quotes = _config.quotes;

			if (typeof _config.skipEmptyLines === 'boolean'
				|| typeof _config.skipEmptyLines === 'string')
				_skipEmptyLines = _config.skipEmptyLines;

			if (typeof _config.newline === 'string')
				_newline = _config.newline;

			if (typeof _config.quoteChar === 'string')
				_quoteChar = _config.quoteChar;

			if (typeof _config.header === 'boolean')
				_writeHeader = _config.header;
		}


		/** Turns an object's keys into an array */
		function objectKeys(obj)
		{
			if (typeof obj !== 'object')
				return [];
			var keys = [];
			for (var key in obj)
				keys.push(key);
			return keys;
		}

		/** The double for loop that iterates the data and writes out a CSV string including header row */
		function serialize(fields, data, skipEmptyLines)
		{
			var csv = '';

			if (typeof fields === 'string')
				fields = JSON.parse(fields);
			if (typeof data === 'string')
				data = JSON.parse(data);

			var hasHeader = Array.isArray(fields) && fields.length > 0;
			var dataKeyedByField = !(Array.isArray(data[0]));

			// If there a header row, write it first
			if (hasHeader && _writeHeader)
			{
				for (var i = 0; i < fields.length; i++)
				{
					if (i > 0)
						csv += _delimiter;
					csv += safe(fields[i], i);
				}
				if (data.length > 0)
					csv += _newline;
			}

			// Then write out the data
			for (var row = 0; row < data.length; row++)
			{
				var maxCol = hasHeader ? fields.length : data[row].length;
				var r = hasHeader ? fields : data[row];

				if (skipEmptyLines !== 'greedy' || r.join('').trim() !== '')
				{
					for (var col = 0; col < maxCol; col++)
					{
						if (col > 0)
							csv += _delimiter;
						var colIdx = hasHeader && dataKeyedByField ? fields[col] : col;
						csv += safe(data[row][colIdx], col);
					}
					if (row < data.length - 1 && (!skipEmptyLines || maxCol > 0))
						csv += _newline;
				}
			}
			return csv;
		}

		/** Encloses a value around quotes if needed (makes a value safe for CSV insertion) */
		function safe(str, col)
		{
			if (typeof str === 'undefined' || str === null)
				return '';

			if (str.constructor === Date)
				return JSON.stringify(str).slice(1, 25);

			str = str.toString().replace(quoteCharRegex, _quoteChar + _quoteChar);

			var needsQuotes = (typeof _quotes === 'boolean' && _quotes)
							|| (Array.isArray(_quotes) && _quotes[col])
							|| hasAny(str, Papa.BAD_DELIMITERS)
							|| str.indexOf(_delimiter) > -1
							|| str.charAt(0) === ' '
							|| str.charAt(str.length - 1) === ' ';

			return needsQuotes ? _quoteChar + str + _quoteChar : str;
		}

		function hasAny(str, substrings)
		{
			for (var i = 0; i < substrings.length; i++)
				if (str.indexOf(substrings[i]) > -1)
					return true;
			return false;
		}
	}

	/** ChunkStreamer is the base prototype for various streamer implementations. */
	function ChunkStreamer(config)
	{
		this._handle = null;
		this._finished = false;
		this._completed = false;
		this._input = null;
		this._baseIndex = 0;
		this._partialLine = '';
		this._rowCount = 0;
		this._start = 0;
		this._nextChunk = null;
		this.isFirstChunk = true;
		this._completeResults = {
			data: [],
			errors: [],
			meta: {}
		};
		replaceConfig.call(this, config);

		this.parseChunk = function(chunk, isFakeChunk)
		{
			// First chunk pre-processing
			if (this.isFirstChunk && isFunction(this._config.beforeFirstChunk))
			{
				var modifiedChunk = this._config.beforeFirstChunk(chunk);
				if (modifiedChunk !== undefined)
					chunk = modifiedChunk;
			}
			this.isFirstChunk = false;

			// Rejoin the line we likely just split in two by chunking the file
			var aggregate = this._partialLine + chunk;
			this._partialLine = '';

			var results = this._handle.parse(aggregate, this._baseIndex, !this._finished);

			if (this._handle.paused() || this._handle.aborted())
				return;

			var lastIndex = results.meta.cursor;

			if (!this._finished)
			{
				this._partialLine = aggregate.substring(lastIndex - this._baseIndex);
				this._baseIndex = lastIndex;
			}

			if (results && results.data)
				this._rowCount += results.data.length;

			var finishedIncludingPreview = this._finished || (this._config.preview && this._rowCount >= this._config.preview);

			if (IS_PAPA_WORKER)
			{
				global.postMessage({
					results: results,
					workerId: Papa.WORKER_ID,
					finished: finishedIncludingPreview
				});
			}
			else if (isFunction(this._config.chunk) && !isFakeChunk)
			{
				this._config.chunk(results, this._handle);
				if (this._handle.paused() || this._handle.aborted())
					return;
				results = undefined;
				this._completeResults = undefined;
			}

			if (!this._config.step && !this._config.chunk) {
				this._completeResults.data = this._completeResults.data.concat(results.data);
				this._completeResults.errors = this._completeResults.errors.concat(results.errors);
				this._completeResults.meta = results.meta;
			}

			if (!this._completed && finishedIncludingPreview && isFunction(this._config.complete) && (!results || !results.meta.aborted)) {
				this._config.complete(this._completeResults, this._input);
				this._completed = true;
			}

			if (!finishedIncludingPreview && (!results || !results.meta.paused))
				this._nextChunk();

			return results;
		};

		this._sendError = function(error)
		{
			if (isFunction(this._config.error))
				this._config.error(error);
			else if (IS_PAPA_WORKER && this._config.error)
			{
				global.postMessage({
					workerId: Papa.WORKER_ID,
					error: error,
					finished: false
				});
			}
		};

		function replaceConfig(config)
		{
			// Deep-copy the config so we can edit it
			var configCopy = copy(config);
			configCopy.chunkSize = parseInt(configCopy.chunkSize);	// parseInt VERY important so we don't concatenate strings!
			if (!config.step && !config.chunk)
				configCopy.chunkSize = null;  // disable Range header if not streaming; bad values break IIS - see issue #196
			this._handle = new ParserHandle(configCopy);
			this._handle.streamer = this;
			this._config = configCopy;	// persist the copy to the caller
		}
	}


	function NetworkStreamer(config)
	{
		config = config || {};
		if (!config.chunkSize)
			config.chunkSize = Papa.RemoteChunkSize;
		ChunkStreamer.call(this, config);

		var xhr;

		if (IS_WORKER)
		{
			this._nextChunk = function()
			{
				this._readChunk();
				this._chunkLoaded();
			};
		}
		else
		{
			this._nextChunk = function()
			{
				this._readChunk();
			};
		}

		this.stream = function(url)
		{
			this._input = url;
			this._nextChunk();	// Starts streaming
		};

		this._readChunk = function()
		{
			if (this._finished)
			{
				this._chunkLoaded();
				return;
			}

			xhr = new XMLHttpRequest();

			if (this._config.withCredentials)
			{
				xhr.withCredentials = this._config.withCredentials;
			}

			if (!IS_WORKER)
			{
				xhr.onload = bindFunction(this._chunkLoaded, this);
				xhr.onerror = bindFunction(this._chunkError, this);
			}

			xhr.open('GET', this._input, !IS_WORKER);
			// Headers can only be set when once the request state is OPENED
			if (this._config.downloadRequestHeaders)
			{
				var headers = this._config.downloadRequestHeaders;

				for (var headerName in headers)
				{
					xhr.setRequestHeader(headerName, headers[headerName]);
				}
			}

			if (this._config.chunkSize)
			{
				var end = this._start + this._config.chunkSize - 1;	// minus one because byte range is inclusive
				xhr.setRequestHeader('Range', 'bytes=' + this._start + '-' + end);
				xhr.setRequestHeader('If-None-Match', 'webkit-no-cache'); // https://bugs.webkit.org/show_bug.cgi?id=82672
			}

			try {
				xhr.send();
			}
			catch (err) {
				this._chunkError(err.message);
			}

			if (IS_WORKER && xhr.status === 0)
				this._chunkError();
			else
				this._start += this._config.chunkSize;
		};

		this._chunkLoaded = function()
		{
			if (xhr.readyState !== 4)
				return;

			if (xhr.status < 200 || xhr.status >= 400)
			{
				this._chunkError();
				return;
			}

			this._finished = !this._config.chunkSize || this._start > getFileSize(xhr);
			this.parseChunk(xhr.responseText);
		};

		this._chunkError = function(errorMessage)
		{
			var errorText = xhr.statusText || errorMessage;
			this._sendError(new Error(errorText));
		};

		function getFileSize(xhr)
		{
			var contentRange = xhr.getResponseHeader('Content-Range');
			if (contentRange === null) { // no content range, then finish!
				return -1;
			}
			return parseInt(contentRange.substr(contentRange.lastIndexOf('/') + 1));
		}
	}
	NetworkStreamer.prototype = Object.create(ChunkStreamer.prototype);
	NetworkStreamer.prototype.constructor = NetworkStreamer;


	function FileStreamer(config)
	{
		config = config || {};
		if (!config.chunkSize)
			config.chunkSize = Papa.LocalChunkSize;
		ChunkStreamer.call(this, config);

		var reader, slice;

		// FileReader is better than FileReaderSync (even in worker) - see http://stackoverflow.com/q/24708649/1048862
		// But Firefox is a pill, too - see issue #76: https://github.com/mholt/PapaParse/issues/76
		var usingAsyncReader = typeof FileReader !== 'undefined';	// Safari doesn't consider it a function - see issue #105

		this.stream = function(file)
		{
			this._input = file;
			slice = file.slice || file.webkitSlice || file.mozSlice;

			if (usingAsyncReader)
			{
				reader = new FileReader();		// Preferred method of reading files, even in workers
				reader.onload = bindFunction(this._chunkLoaded, this);
				reader.onerror = bindFunction(this._chunkError, this);
			}
			else
				reader = new FileReaderSync();	// Hack for running in a web worker in Firefox

			this._nextChunk();	// Starts streaming
		};

		this._nextChunk = function()
		{
			if (!this._finished && (!this._config.preview || this._rowCount < this._config.preview))
				this._readChunk();
		};

		this._readChunk = function()
		{
			var input = this._input;
			if (this._config.chunkSize)
			{
				var end = Math.min(this._start + this._config.chunkSize, this._input.size);
				input = slice.call(input, this._start, end);
			}
			var txt = reader.readAsText(input, this._config.encoding);
			if (!usingAsyncReader)
				this._chunkLoaded({ target: { result: txt } });	// mimic the async signature
		};

		this._chunkLoaded = function(event)
		{
			// Very important to increment start each time before handling results
			this._start += this._config.chunkSize;
			this._finished = !this._config.chunkSize || this._start >= this._input.size;
			this.parseChunk(event.target.result);
		};

		this._chunkError = function()
		{
			this._sendError(reader.error);
		};

	}
	FileStreamer.prototype = Object.create(ChunkStreamer.prototype);
	FileStreamer.prototype.constructor = FileStreamer;


	function StringStreamer(config)
	{
		config = config || {};
		ChunkStreamer.call(this, config);

		var remaining;
		this.stream = function(s)
		{
			remaining = s;
			return this._nextChunk();
		};
		this._nextChunk = function()
		{
			if (this._finished) return;
			var size = this._config.chunkSize;
			var chunk = size ? remaining.substr(0, size) : remaining;
			remaining = size ? remaining.substr(size) : '';
			this._finished = !remaining;
			return this.parseChunk(chunk);
		};
	}
	StringStreamer.prototype = Object.create(StringStreamer.prototype);
	StringStreamer.prototype.constructor = StringStreamer;


	function ReadableStreamStreamer(config)
	{
		config = config || {};

		ChunkStreamer.call(this, config);

		var queue = [];
		var parseOnData = true;
		var streamHasEnded = false;

		this.pause = function()
		{
			ChunkStreamer.prototype.pause.apply(this, arguments);
			this._input.pause();
		};

		this.resume = function()
		{
			ChunkStreamer.prototype.resume.apply(this, arguments);
			this._input.resume();
		};

		this.stream = function(stream)
		{
			this._input = stream;

			this._input.on('data', this._streamData);
			this._input.on('end', this._streamEnd);
			this._input.on('error', this._streamError);
		};

		this._checkIsFinished = function()
		{
			if (streamHasEnded && queue.length === 1) {
				this._finished = true;
			}
		};

		this._nextChunk = function()
		{
			this._checkIsFinished();
			if (queue.length)
			{
				this.parseChunk(queue.shift());
			}
			else
			{
				parseOnData = true;
			}
		};

		this._streamData = bindFunction(function(chunk)
		{
			try
			{
				queue.push(typeof chunk === 'string' ? chunk : chunk.toString(this._config.encoding));

				if (parseOnData)
				{
					parseOnData = false;
					this._checkIsFinished();
					this.parseChunk(queue.shift());
				}
			}
			catch (error)
			{
				this._streamError(error);
			}
		}, this);

		this._streamError = bindFunction(function(error)
		{
			this._streamCleanUp();
			this._sendError(error);
		}, this);

		this._streamEnd = bindFunction(function()
		{
			this._streamCleanUp();
			streamHasEnded = true;
			this._streamData('');
		}, this);

		this._streamCleanUp = bindFunction(function()
		{
			this._input.removeListener('data', this._streamData);
			this._input.removeListener('end', this._streamEnd);
			this._input.removeListener('error', this._streamError);
		}, this);
	}
	ReadableStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);
	ReadableStreamStreamer.prototype.constructor = ReadableStreamStreamer;


	function DuplexStreamStreamer(_config) {
		var Duplex = require('stream').Duplex;
		var config = copy(_config);
		var parseOnWrite = true;
		var writeStreamHasFinished = false;
		var parseCallbackQueue = [];
		var stream = null;

		this._onCsvData = function(results)
		{
			var data = results.data;
			for (var i = 0; i < data.length; i++) {
				if (!stream.push(data[i]) && !this._handle.paused()) {
					// the writeable consumer buffer has filled up
					// so we need to pause until more items
					// can be processed
					this._handle.pause();
				}
			}
		};

		this._onCsvComplete = function()
		{
			// node will finish the read stream when
			// null is pushed
			stream.push(null);
		};

		config.step = bindFunction(this._onCsvData, this);
		config.complete = bindFunction(this._onCsvComplete, this);
		ChunkStreamer.call(this, config);

		this._nextChunk = function()
		{
			if (writeStreamHasFinished && parseCallbackQueue.length === 1) {
				this._finished = true;
			}
			if (parseCallbackQueue.length) {
				parseCallbackQueue.shift()();
			} else {
				parseOnWrite = true;
			}
		};

		this._addToParseQueue = function(chunk, callback)
		{
			// add to queue so that we can indicate
			// completion via callback
			// node will automatically pause the incoming stream
			// when too many items have been added without their
			// callback being invoked
			parseCallbackQueue.push(bindFunction(function() {
				this.parseChunk(typeof chunk === 'string' ? chunk : chunk.toString(config.encoding));
				if (isFunction(callback)) {
					return callback();
				}
			}, this));
			if (parseOnWrite) {
				parseOnWrite = false;
				this._nextChunk();
			}
		};

		this._onRead = function()
		{
			if (this._handle.paused()) {
				// the writeable consumer can handle more data
				// so resume the chunk parsing
				this._handle.resume();
			}
		};

		this._onWrite = function(chunk, encoding, callback)
		{
			this._addToParseQueue(chunk, callback);
		};

		this._onWriteComplete = function()
		{
			writeStreamHasFinished = true;
			// have to write empty string
			// so parser knows its done
			this._addToParseQueue('');
		};

		this.getStream = function()
		{
			return stream;
		};
		stream = new Duplex({
			readableObjectMode: true,
			decodeStrings: false,
			read: bindFunction(this._onRead, this),
			write: bindFunction(this._onWrite, this)
		});
		stream.once('finish', bindFunction(this._onWriteComplete, this));
	}
	DuplexStreamStreamer.prototype = Object.create(ChunkStreamer.prototype);
	DuplexStreamStreamer.prototype.constructor = DuplexStreamStreamer;


	// Use one ParserHandle per entire CSV file or string
	function ParserHandle(_config)
	{
		// One goal is to minimize the use of regular expressions...
		var FLOAT = /^\s*-?(\d*\.?\d+|\d+\.?\d*)(e[-+]?\d+)?\s*$/i;
		var ISO_DATE = /(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))/;

		var self = this;
		var _stepCounter = 0;	// Number of times step was called (number of rows parsed)
		var _rowCounter = 0;	// Number of rows that have been parsed so far
		var _input;				// The input being parsed
		var _parser;			// The core parser being used
		var _paused = false;	// Whether we are paused or not
		var _aborted = false;	// Whether the parser has aborted or not
		var _delimiterError;	// Temporary state between delimiter detection and processing results
		var _fields = [];		// Fields are from the header row of the input, if there is one
		var _results = {		// The last results returned from the parser
			data: [],
			errors: [],
			meta: {}
		};

		if (isFunction(_config.step))
		{
			var userStep = _config.step;
			_config.step = function(results)
			{
				_results = results;

				if (needsHeaderRow())
					processResults();
				else	// only call user's step function after header row
				{
					processResults();

					// It's possbile that this line was empty and there's no row here after all
					if (_results.data.length === 0)
						return;

					_stepCounter += results.data.length;
					if (_config.preview && _stepCounter > _config.preview)
						_parser.abort();
					else
						userStep(_results, self);
				}
			};
		}

		/**
		 * Parses input. Most users won't need, and shouldn't mess with, the baseIndex
		 * and ignoreLastRow parameters. They are used by streamers (wrapper functions)
		 * when an input comes in multiple chunks, like from a file.
		 */
		this.parse = function(input, baseIndex, ignoreLastRow)
		{
			var quoteChar = _config.quoteChar || '"';
			if (!_config.newline)
				_config.newline = guessLineEndings(input, quoteChar);

			_delimiterError = false;
			if (!_config.delimiter)
			{
				var delimGuess = guessDelimiter(input, _config.newline, _config.skipEmptyLines, _config.comments);
				if (delimGuess.successful)
					_config.delimiter = delimGuess.bestDelimiter;
				else
				{
					_delimiterError = true;	// add error after parsing (otherwise it would be overwritten)
					_config.delimiter = Papa.DefaultDelimiter;
				}
				_results.meta.delimiter = _config.delimiter;
			}
			else if(isFunction(_config.delimiter))
			{
				_config.delimiter = _config.delimiter(input);
				_results.meta.delimiter = _config.delimiter;
			}

			var parserConfig = copy(_config);
			if (_config.preview && _config.header)
				parserConfig.preview++;	// to compensate for header row

			_input = input;
			_parser = new Parser(parserConfig);
			_results = _parser.parse(_input, baseIndex, ignoreLastRow);
			processResults();
			return _paused ? { meta: { paused: true } } : (_results || { meta: { paused: false } });
		};

		this.paused = function()
		{
			return _paused;
		};

		this.pause = function()
		{
			_paused = true;
			_parser.abort();
			_input = _input.substr(_parser.getCharIndex());
		};

		this.resume = function()
		{
			_paused = false;
			self.streamer.parseChunk(_input, true);
		};

		this.aborted = function()
		{
			return _aborted;
		};

		this.abort = function()
		{
			_aborted = true;
			_parser.abort();
			_results.meta.aborted = true;
			if (isFunction(_config.complete))
				_config.complete(_results);
			_input = '';
		};

		function testEmptyLine(s) {
			return _config.skipEmptyLines === 'greedy' ? s.join('').trim() === '' : s.length === 1 && s[0].length === 0;
		}

		function processResults()
		{
			if (_results && _delimiterError)
			{
				addError('Delimiter', 'UndetectableDelimiter', 'Unable to auto-detect delimiting character; defaulted to \'' + Papa.DefaultDelimiter + '\'');
				_delimiterError = false;
			}

			if (_config.skipEmptyLines)
			{
				for (var i = 0; i < _results.data.length; i++)
					if (testEmptyLine(_results.data[i]))
						_results.data.splice(i--, 1);
			}

			if (needsHeaderRow())
				fillHeaderFields();

			return applyHeaderAndDynamicTypingAndTransformation();
		}

		function needsHeaderRow()
		{
			return _config.header && _fields.length === 0;
		}

		function fillHeaderFields()
		{
			if (!_results)
				return;
			for (var i = 0; needsHeaderRow() && i < _results.data.length; i++)
				for (var j = 0; j < _results.data[i].length; j++)
				{
					var header = _results.data[i][j];

					if (_config.trimHeaders) {
						header = header.trim();
					}

					_fields.push(header);
				}
			_results.data.splice(0, 1);
		}

		function shouldApplyDynamicTyping(field) {
			// Cache function values to avoid calling it for each row
			if (_config.dynamicTypingFunction && _config.dynamicTyping[field] === undefined) {
				_config.dynamicTyping[field] = _config.dynamicTypingFunction(field);
			}
			return (_config.dynamicTyping[field] || _config.dynamicTyping) === true;
		}

		function parseDynamic(field, value)
		{
			if (shouldApplyDynamicTyping(field))
			{
				if (value === 'true' || value === 'TRUE')
					return true;
				else if (value === 'false' || value === 'FALSE')
					return false;
				else if (FLOAT.test(value))
					return parseFloat(value);
				else if (ISO_DATE.test(value))
					return new Date(value);
				else
					return (value === '' ? null : value);
			}
			return value;
		}

		function applyHeaderAndDynamicTypingAndTransformation()
		{
			if (!_results || (!_config.header && !_config.dynamicTyping && !_config.transform))
				return _results;

			for (var i = 0; i < _results.data.length; i++)
			{
				var row = _config.header ? {} : [];

				var j;
				for (j = 0; j < _results.data[i].length; j++)
				{
					var field = j;
					var value = _results.data[i][j];

					if (_config.header)
						field = j >= _fields.length ? '__parsed_extra' : _fields[j];

					if (_config.transform)
						value = _config.transform(value,field);

					value = parseDynamic(field, value);

					if (field === '__parsed_extra')
					{
						row[field] = row[field] || [];
						row[field].push(value);
					}
					else
						row[field] = value;
				}

				_results.data[i] = row;

				if (_config.header)
				{
					if (j > _fields.length)
						addError('FieldMismatch', 'TooManyFields', 'Too many fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);
					else if (j < _fields.length)
						addError('FieldMismatch', 'TooFewFields', 'Too few fields: expected ' + _fields.length + ' fields but parsed ' + j, _rowCounter + i);
				}
			}

			if (_config.header && _results.meta)
				_results.meta.fields = _fields;

			_rowCounter += _results.data.length;
			return _results;
		}

		function guessDelimiter(input, newline, skipEmptyLines, comments)
		{
			var delimChoices = [',', '\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP];
			var bestDelim, bestDelta, fieldCountPrevRow;

			for (var i = 0; i < delimChoices.length; i++)
			{
				var delim = delimChoices[i];
				var delta = 0, avgFieldCount = 0, emptyLinesCount = 0;
				fieldCountPrevRow = undefined;

				var preview = new Parser({
					comments: comments,
					delimiter: delim,
					newline: newline,
					preview: 10
				}).parse(input);

				for (var j = 0; j < preview.data.length; j++)
				{
					if (skipEmptyLines && testEmptyLine(preview.data[j]))
					{
						emptyLinesCount++;
						continue;
					}
					var fieldCount = preview.data[j].length;
					avgFieldCount += fieldCount;

					if (typeof fieldCountPrevRow === 'undefined')
					{
						fieldCountPrevRow = fieldCount;
						continue;
					}
					else if (fieldCount > 1)
					{
						delta += Math.abs(fieldCount - fieldCountPrevRow);
						fieldCountPrevRow = fieldCount;
					}
				}

				if (preview.data.length > 0)
					avgFieldCount /= (preview.data.length - emptyLinesCount);

				if ((typeof bestDelta === 'undefined' || delta < bestDelta)
					&& avgFieldCount > 1.99)
				{
					bestDelta = delta;
					bestDelim = delim;
				}
			}

			_config.delimiter = bestDelim;

			return {
				successful: !!bestDelim,
				bestDelimiter: bestDelim
			};
		}

		function guessLineEndings(input, quoteChar)
		{
			input = input.substr(0, 1024 * 1024);	// max length 1 MB
			// Replace all the text inside quotes
			var re = new RegExp(escapeRegExp(quoteChar) + '([^]*?)' + escapeRegExp(quoteChar), 'gm');
			input = input.replace(re, '');

			var r = input.split('\r');

			var n = input.split('\n');

			var nAppearsFirst = (n.length > 1 && n[0].length < r[0].length);

			if (r.length === 1 || nAppearsFirst)
				return '\n';

			var numWithN = 0;
			for (var i = 0; i < r.length; i++)
			{
				if (r[i][0] === '\n')
					numWithN++;
			}

			return numWithN >= r.length / 2 ? '\r\n' : '\r';
		}

		function addError(type, code, msg, row)
		{
			_results.errors.push({
				type: type,
				code: code,
				message: msg,
				row: row
			});
		}
	}

	/** https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions */
	function escapeRegExp(string)
	{
		return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'); // $& means the whole matched string
	}

	/** The core parser implements speedy and correct CSV parsing */
	function Parser(config)
	{
		// Unpack the config object
		config = config || {};
		var delim = config.delimiter;
		var newline = config.newline;
		var comments = config.comments;
		var step = config.step;
		var preview = config.preview;
		var fastMode = config.fastMode;
		var quoteChar;
		/** Allows for no quoteChar by setting quoteChar to undefined in config */
		if (config.quoteChar === undefined) {
			quoteChar = '"';
		} else {
			quoteChar = config.quoteChar;
		}
		var escapeChar = quoteChar;
		if (config.escapeChar !== undefined) {
			escapeChar = config.escapeChar;
		}

		// Delimiter must be valid
		if (typeof delim !== 'string'
			|| Papa.BAD_DELIMITERS.indexOf(delim) > -1)
			delim = ',';

		// Comment character must be valid
		if (comments === delim)
			throw 'Comment character same as delimiter';
		else if (comments === true)
			comments = '#';
		else if (typeof comments !== 'string'
			|| Papa.BAD_DELIMITERS.indexOf(comments) > -1)
			comments = false;

		// Newline must be valid: \r, \n, or \r\n
		if (newline !== '\n' && newline !== '\r' && newline !== '\r\n')
			newline = '\n';

		// We're gonna need these at the Parser scope
		var cursor = 0;
		var aborted = false;

		this.parse = function(input, baseIndex, ignoreLastRow)
		{
			// For some reason, in Chrome, this speeds things up (!?)
			if (typeof input !== 'string')
				throw 'Input must be a string';

			// We don't need to compute some of these every time parse() is called,
			// but having them in a more local scope seems to perform better
			var inputLen = input.length,
				delimLen = delim.length,
				newlineLen = newline.length,
				commentsLen = comments.length;
			var stepIsFunction = isFunction(step);

			// Establish starting state
			cursor = 0;
			var data = [], errors = [], row = [], lastCursor = 0;

			if (!input)
				return returnable();

			if (fastMode || (fastMode !== false && input.indexOf(quoteChar) === -1))
			{
				var rows = input.split(newline);
				for (var i = 0; i < rows.length; i++)
				{
					row = rows[i];
					cursor += row.length;
					if (i !== rows.length - 1)
						cursor += newline.length;
					else if (ignoreLastRow)
						return returnable();
					if (comments && row.substr(0, commentsLen) === comments)
						continue;
					if (stepIsFunction)
					{
						data = [];
						pushRow(row.split(delim));
						doStep();
						if (aborted)
							return returnable();
					}
					else
						pushRow(row.split(delim));
					if (preview && i >= preview)
					{
						data = data.slice(0, preview);
						return returnable(true);
					}
				}
				return returnable();
			}

			var nextDelim = input.indexOf(delim, cursor);
			var nextNewline = input.indexOf(newline, cursor);
			var quoteCharRegex = new RegExp(escapeChar.replace(/[-[\]/{}()*+?.\\^$|]/g, '\\$&') + quoteChar, 'g');
			var quoteSearch;

			// Parser loop
			for (;;)
			{
				// Field has opening quote
				if (input[cursor] === quoteChar)
				{
					// Start our search for the closing quote where the cursor is
					quoteSearch = cursor;

					// Skip the opening quote
					cursor++;

					for (;;)
					{
						// Find closing quote
						quoteSearch = input.indexOf(quoteChar, quoteSearch + 1);

						//No other quotes are found - no other delimiters
						if (quoteSearch === -1)
						{
							if (!ignoreLastRow) {
								// No closing quote... what a pity
								errors.push({
									type: 'Quotes',
									code: 'MissingQuotes',
									message: 'Quoted field unterminated',
									row: data.length,	// row has yet to be inserted
									index: cursor
								});
							}
							return finish();
						}

						// Closing quote at EOF
						if (quoteSearch === inputLen - 1)
						{
							var value = input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar);
							return finish(value);
						}

						// If this quote is escaped, it's part of the data; skip it
						// If the quote character is the escape character, then check if the next character is the escape character
						if (quoteChar === escapeChar &&  input[quoteSearch + 1] === escapeChar)
						{
							quoteSearch++;
							continue;
						}

						// If the quote character is not the escape character, then check if the previous character was the escape character
						if (quoteChar !== escapeChar && quoteSearch !== 0 && input[quoteSearch - 1] === escapeChar)
						{
							continue;
						}

						// Check up to nextDelim or nextNewline, whichever is closest
						var checkUpTo = nextNewline === -1 ? nextDelim : Math.min(nextDelim, nextNewline);
						var spacesBetweenQuoteAndDelimiter = extraSpaces(checkUpTo);

						// Closing quote followed by delimiter or 'unnecessary spaces + delimiter'
						if (input[quoteSearch + 1 + spacesBetweenQuoteAndDelimiter] === delim)
						{
							row.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));
							cursor = quoteSearch + 1 + spacesBetweenQuoteAndDelimiter + delimLen;
							nextDelim = input.indexOf(delim, cursor);
							nextNewline = input.indexOf(newline, cursor);
							break;
						}

						var spacesBetweenQuoteAndNewLine = extraSpaces(nextNewline);

						// Closing quote followed by newline or 'unnecessary spaces + newLine'
						if (input.substr(quoteSearch + 1 + spacesBetweenQuoteAndNewLine, newlineLen) === newline)
						{
							row.push(input.substring(cursor, quoteSearch).replace(quoteCharRegex, quoteChar));
							saveRow(quoteSearch + 1 + spacesBetweenQuoteAndNewLine + newlineLen);
							nextDelim = input.indexOf(delim, cursor);	// because we may have skipped the nextDelim in the quoted field

							if (stepIsFunction)
							{
								doStep();
								if (aborted)
									return returnable();
							}

							if (preview && data.length >= preview)
								return returnable(true);

							break;
						}


						// Checks for valid closing quotes are complete (escaped quotes or quote followed by EOF/delimiter/newline) -- assume these quotes are part of an invalid text string
						errors.push({
							type: 'Quotes',
							code: 'InvalidQuotes',
							message: 'Trailing quote on quoted field is malformed',
							row: data.length,	// row has yet to be inserted
							index: cursor
						});

						quoteSearch++;
						continue;

					}

					continue;
				}

				// Comment found at start of new line
				if (comments && row.length === 0 && input.substr(cursor, commentsLen) === comments)
				{
					if (nextNewline === -1)	// Comment ends at EOF
						return returnable();
					cursor = nextNewline + newlineLen;
					nextNewline = input.indexOf(newline, cursor);
					nextDelim = input.indexOf(delim, cursor);
					continue;
				}

				// Next delimiter comes before next newline, so we've reached end of field
				if (nextDelim !== -1 && (nextDelim < nextNewline || nextNewline === -1))
				{
					row.push(input.substring(cursor, nextDelim));
					cursor = nextDelim + delimLen;
					nextDelim = input.indexOf(delim, cursor);
					continue;
				}

				// End of row
				if (nextNewline !== -1)
				{
					row.push(input.substring(cursor, nextNewline));
					saveRow(nextNewline + newlineLen);

					if (stepIsFunction)
					{
						doStep();
						if (aborted)
							return returnable();
					}

					if (preview && data.length >= preview)
						return returnable(true);

					continue;
				}

				break;
			}


			return finish();


			function pushRow(row)
			{
				data.push(row);
				lastCursor = cursor;
			}

			/**
             * checks if there are extra spaces after closing quote and given index without any text
             * if Yes, returns the number of spaces
             */
			function extraSpaces(index) {
				var spaceLength = 0;
				if (index !== -1) {
					var textBetweenClosingQuoteAndIndex = input.substring(quoteSearch + 1, index);
					if (textBetweenClosingQuoteAndIndex && textBetweenClosingQuoteAndIndex.trim() === '') {
						spaceLength = textBetweenClosingQuoteAndIndex.length;
					}
				}
				return spaceLength;
			}

			/**
			 * Appends the remaining input from cursor to the end into
			 * row, saves the row, calls step, and returns the results.
			 */
			function finish(value)
			{
				if (ignoreLastRow)
					return returnable();
				if (typeof value === 'undefined')
					value = input.substr(cursor);
				row.push(value);
				cursor = inputLen;	// important in case parsing is paused
				pushRow(row);
				if (stepIsFunction)
					doStep();
				return returnable();
			}

			/**
			 * Appends the current row to the results. It sets the cursor
			 * to newCursor and finds the nextNewline. The caller should
			 * take care to execute user's step function and check for
			 * preview and end parsing if necessary.
			 */
			function saveRow(newCursor)
			{
				cursor = newCursor;
				pushRow(row);
				row = [];
				nextNewline = input.indexOf(newline, cursor);
			}

			/** Returns an object with the results, errors, and meta. */
			function returnable(stopped)
			{
				return {
					data: data,
					errors: errors,
					meta: {
						delimiter: delim,
						linebreak: newline,
						aborted: aborted,
						truncated: !!stopped,
						cursor: lastCursor + (baseIndex || 0)
					}
				};
			}

			/** Executes the user's step function and resets data & errors. */
			function doStep()
			{
				step(returnable());
				data = [];
				errors = [];
			}
		};

		/** Sets the abort flag */
		this.abort = function()
		{
			aborted = true;
		};

		/** Gets the cursor position */
		this.getCharIndex = function()
		{
			return cursor;
		};
	}


	// If you need to load Papa Parse asynchronously and you also need worker threads, hard-code
	// the script path here. See: https://github.com/mholt/PapaParse/issues/87#issuecomment-57885358
	function getScriptPath()
	{
		var scripts = document.getElementsByTagName('script');
		return scripts.length ? scripts[scripts.length - 1].src : '';
	}

	function newWorker()
	{
		if (!Papa.WORKERS_SUPPORTED)
			return false;
		if (!LOADED_SYNC && Papa.SCRIPT_PATH === null)
			throw new Error(
				'Script path cannot be determined automatically when Papa Parse is loaded asynchronously. ' +
				'You need to set Papa.SCRIPT_PATH manually.'
			);
		var workerUrl = Papa.SCRIPT_PATH || AUTO_SCRIPT_PATH;
		// Append 'papaworker' to the search string to tell papaparse that this is our worker.
		workerUrl += (workerUrl.indexOf('?') !== -1 ? '&' : '?') + 'papaworker';
		var w = new global.Worker(workerUrl);
		w.onmessage = mainThreadReceivedMessage;
		w.id = workerIdCounter++;
		workers[w.id] = w;
		return w;
	}

	/** Callback when main thread receives a message */
	function mainThreadReceivedMessage(e)
	{
		var msg = e.data;
		var worker = workers[msg.workerId];
		var aborted = false;

		if (msg.error)
			worker.userError(msg.error, msg.file);
		else if (msg.results && msg.results.data)
		{
			var abort = function() {
				aborted = true;
				completeWorker(msg.workerId, { data: [], errors: [], meta: { aborted: true } });
			};

			var handle = {
				abort: abort,
				pause: notImplemented,
				resume: notImplemented
			};

			if (isFunction(worker.userStep))
			{
				for (var i = 0; i < msg.results.data.length; i++)
				{
					worker.userStep({
						data: [msg.results.data[i]],
						errors: msg.results.errors,
						meta: msg.results.meta
					}, handle);
					if (aborted)
						break;
				}
				delete msg.results;	// free memory ASAP
			}
			else if (isFunction(worker.userChunk))
			{
				worker.userChunk(msg.results, handle, msg.file);
				delete msg.results;
			}
		}

		if (msg.finished && !aborted)
			completeWorker(msg.workerId, msg.results);
	}

	function completeWorker(workerId, results) {
		var worker = workers[workerId];
		if (isFunction(worker.userComplete))
			worker.userComplete(results);
		worker.terminate();
		delete workers[workerId];
	}

	function notImplemented() {
		throw 'Not implemented.';
	}

	/** Callback when worker thread receives a message */
	function workerThreadReceivedMessage(e)
	{
		var msg = e.data;

		if (typeof Papa.WORKER_ID === 'undefined' && msg)
			Papa.WORKER_ID = msg.workerId;

		if (typeof msg.input === 'string')
		{
			global.postMessage({
				workerId: Papa.WORKER_ID,
				results: Papa.parse(msg.input, msg.config),
				finished: true
			});
		}
		else if ((global.File && msg.input instanceof File) || msg.input instanceof Object)	// thank you, Safari (see issue #106)
		{
			var results = Papa.parse(msg.input, msg.config);
			if (results)
				global.postMessage({
					workerId: Papa.WORKER_ID,
					results: results,
					finished: true
				});
		}
	}

	/** Makes a deep copy of an array or object (mostly) */
	function copy(obj)
	{
		if (typeof obj !== 'object' || obj === null)
			return obj;
		var cpy = Array.isArray(obj) ? [] : {};
		for (var key in obj)
			cpy[key] = copy(obj[key]);
		return cpy;
	}

	function bindFunction(f, self)
	{
		return function() { f.apply(self, arguments); };
	}

	function isFunction(func)
	{
		return typeof func === 'function';
	}

	return Papa;
}));
(function() {
  var context = this;

  (function() {
    (function() {
      var slice = [].slice;

      this.ActionCable = {
        INTERNAL: {
          "message_types": {
            "welcome": "welcome",
            "ping": "ping",
            "confirmation": "confirm_subscription",
            "rejection": "reject_subscription"
          },
          "default_mount_path": "/cable",
          "protocols": ["actioncable-v1-json", "actioncable-unsupported"]
        },
        WebSocket: window.WebSocket,
        logger: window.console,
        createConsumer: function(url) {
          var ref;
          if (url == null) {
            url = (ref = this.getConfig("url")) != null ? ref : this.INTERNAL.default_mount_path;
          }
          return new ActionCable.Consumer(this.createWebSocketURL(url));
        },
        getConfig: function(name) {
          var element;
          element = document.head.querySelector("meta[name='action-cable-" + name + "']");
          return element != null ? element.getAttribute("content") : void 0;
        },
        createWebSocketURL: function(url) {
          var a;
          if (url && !/^wss?:/i.test(url)) {
            a = document.createElement("a");
            a.href = url;
            a.href = a.href;
            a.protocol = a.protocol.replace("http", "ws");
            return a.href;
          } else {
            return url;
          }
        },
        startDebugging: function() {
          return this.debugging = true;
        },
        stopDebugging: function() {
          return this.debugging = null;
        },
        log: function() {
          var messages, ref;
          messages = 1 <= arguments.length ? slice.call(arguments, 0) : [];
          if (this.debugging) {
            messages.push(Date.now());
            return (ref = this.logger).log.apply(ref, ["[ActionCable]"].concat(slice.call(messages)));
          }
        }
      };

    }).call(this);
  }).call(context);

  var ActionCable = context.ActionCable;

  (function() {
    (function() {
      var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

      ActionCable.ConnectionMonitor = (function() {
        var clamp, now, secondsSince;

        ConnectionMonitor.pollInterval = {
          min: 3,
          max: 30
        };

        ConnectionMonitor.staleThreshold = 6;

        function ConnectionMonitor(connection) {
          this.connection = connection;
          this.visibilityDidChange = bind(this.visibilityDidChange, this);
          this.reconnectAttempts = 0;
        }

        ConnectionMonitor.prototype.start = function() {
          if (!this.isRunning()) {
            this.startedAt = now();
            delete this.stoppedAt;
            this.startPolling();
            document.addEventListener("visibilitychange", this.visibilityDidChange);
            return ActionCable.log("ConnectionMonitor started. pollInterval = " + (this.getPollInterval()) + " ms");
          }
        };

        ConnectionMonitor.prototype.stop = function() {
          if (this.isRunning()) {
            this.stoppedAt = now();
            this.stopPolling();
            document.removeEventListener("visibilitychange", this.visibilityDidChange);
            return ActionCable.log("ConnectionMonitor stopped");
          }
        };

        ConnectionMonitor.prototype.isRunning = function() {
          return (this.startedAt != null) && (this.stoppedAt == null);
        };

        ConnectionMonitor.prototype.recordPing = function() {
          return this.pingedAt = now();
        };

        ConnectionMonitor.prototype.recordConnect = function() {
          this.reconnectAttempts = 0;
          this.recordPing();
          delete this.disconnectedAt;
          return ActionCable.log("ConnectionMonitor recorded connect");
        };

        ConnectionMonitor.prototype.recordDisconnect = function() {
          this.disconnectedAt = now();
          return ActionCable.log("ConnectionMonitor recorded disconnect");
        };

        ConnectionMonitor.prototype.startPolling = function() {
          this.stopPolling();
          return this.poll();
        };

        ConnectionMonitor.prototype.stopPolling = function() {
          return clearTimeout(this.pollTimeout);
        };

        ConnectionMonitor.prototype.poll = function() {
          return this.pollTimeout = setTimeout((function(_this) {
            return function() {
              _this.reconnectIfStale();
              return _this.poll();
            };
          })(this), this.getPollInterval());
        };

        ConnectionMonitor.prototype.getPollInterval = function() {
          var interval, max, min, ref;
          ref = this.constructor.pollInterval, min = ref.min, max = ref.max;
          interval = 5 * Math.log(this.reconnectAttempts + 1);
          return Math.round(clamp(interval, min, max) * 1000);
        };

        ConnectionMonitor.prototype.reconnectIfStale = function() {
          if (this.connectionIsStale()) {
            ActionCable.log("ConnectionMonitor detected stale connection. reconnectAttempts = " + this.reconnectAttempts + ", pollInterval = " + (this.getPollInterval()) + " ms, time disconnected = " + (secondsSince(this.disconnectedAt)) + " s, stale threshold = " + this.constructor.staleThreshold + " s");
            this.reconnectAttempts++;
            if (this.disconnectedRecently()) {
              return ActionCable.log("ConnectionMonitor skipping reopening recent disconnect");
            } else {
              ActionCable.log("ConnectionMonitor reopening");
              return this.connection.reopen();
            }
          }
        };

        ConnectionMonitor.prototype.connectionIsStale = function() {
          var ref;
          return secondsSince((ref = this.pingedAt) != null ? ref : this.startedAt) > this.constructor.staleThreshold;
        };

        ConnectionMonitor.prototype.disconnectedRecently = function() {
          return this.disconnectedAt && secondsSince(this.disconnectedAt) < this.constructor.staleThreshold;
        };

        ConnectionMonitor.prototype.visibilityDidChange = function() {
          if (document.visibilityState === "visible") {
            return setTimeout((function(_this) {
              return function() {
                if (_this.connectionIsStale() || !_this.connection.isOpen()) {
                  ActionCable.log("ConnectionMonitor reopening stale connection on visibilitychange. visbilityState = " + document.visibilityState);
                  return _this.connection.reopen();
                }
              };
            })(this), 200);
          }
        };

        now = function() {
          return new Date().getTime();
        };

        secondsSince = function(time) {
          return (now() - time) / 1000;
        };

        clamp = function(number, min, max) {
          return Math.max(min, Math.min(max, number));
        };

        return ConnectionMonitor;

      })();

    }).call(this);
    (function() {
      var i, message_types, protocols, ref, supportedProtocols, unsupportedProtocol,
        slice = [].slice,
        bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
        indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

      ref = ActionCable.INTERNAL, message_types = ref.message_types, protocols = ref.protocols;

      supportedProtocols = 2 <= protocols.length ? slice.call(protocols, 0, i = protocols.length - 1) : (i = 0, []), unsupportedProtocol = protocols[i++];

      ActionCable.Connection = (function() {
        Connection.reopenDelay = 500;

        function Connection(consumer) {
          this.consumer = consumer;
          this.open = bind(this.open, this);
          this.subscriptions = this.consumer.subscriptions;
          this.monitor = new ActionCable.ConnectionMonitor(this);
          this.disconnected = true;
        }

        Connection.prototype.send = function(data) {
          if (this.isOpen()) {
            this.webSocket.send(JSON.stringify(data));
            return true;
          } else {
            return false;
          }
        };

        Connection.prototype.open = function() {
          if (this.isActive()) {
            ActionCable.log("Attempted to open WebSocket, but existing socket is " + (this.getState()));
            return false;
          } else {
            ActionCable.log("Opening WebSocket, current state is " + (this.getState()) + ", subprotocols: " + protocols);
            if (this.webSocket != null) {
              this.uninstallEventHandlers();
            }
            this.webSocket = new ActionCable.WebSocket(this.consumer.url, protocols);
            this.installEventHandlers();
            this.monitor.start();
            return true;
          }
        };

        Connection.prototype.close = function(arg) {
          var allowReconnect, ref1;
          allowReconnect = (arg != null ? arg : {
            allowReconnect: true
          }).allowReconnect;
          if (!allowReconnect) {
            this.monitor.stop();
          }
          if (this.isActive()) {
            return (ref1 = this.webSocket) != null ? ref1.close() : void 0;
          }
        };

        Connection.prototype.reopen = function() {
          var error;
          ActionCable.log("Reopening WebSocket, current state is " + (this.getState()));
          if (this.isActive()) {
            try {
              return this.close();
            } catch (error1) {
              error = error1;
              return ActionCable.log("Failed to reopen WebSocket", error);
            } finally {
              ActionCable.log("Reopening WebSocket in " + this.constructor.reopenDelay + "ms");
              setTimeout(this.open, this.constructor.reopenDelay);
            }
          } else {
            return this.open();
          }
        };

        Connection.prototype.getProtocol = function() {
          var ref1;
          return (ref1 = this.webSocket) != null ? ref1.protocol : void 0;
        };

        Connection.prototype.isOpen = function() {
          return this.isState("open");
        };

        Connection.prototype.isActive = function() {
          return this.isState("open", "connecting");
        };

        Connection.prototype.isProtocolSupported = function() {
          var ref1;
          return ref1 = this.getProtocol(), indexOf.call(supportedProtocols, ref1) >= 0;
        };

        Connection.prototype.isState = function() {
          var ref1, states;
          states = 1 <= arguments.length ? slice.call(arguments, 0) : [];
          return ref1 = this.getState(), indexOf.call(states, ref1) >= 0;
        };

        Connection.prototype.getState = function() {
          var ref1, state, value;
          for (state in WebSocket) {
            value = WebSocket[state];
            if (value === ((ref1 = this.webSocket) != null ? ref1.readyState : void 0)) {
              return state.toLowerCase();
            }
          }
          return null;
        };

        Connection.prototype.installEventHandlers = function() {
          var eventName, handler;
          for (eventName in this.events) {
            handler = this.events[eventName].bind(this);
            this.webSocket["on" + eventName] = handler;
          }
        };

        Connection.prototype.uninstallEventHandlers = function() {
          var eventName;
          for (eventName in this.events) {
            this.webSocket["on" + eventName] = function() {};
          }
        };

        Connection.prototype.events = {
          message: function(event) {
            var identifier, message, ref1, type;
            if (!this.isProtocolSupported()) {
              return;
            }
            ref1 = JSON.parse(event.data), identifier = ref1.identifier, message = ref1.message, type = ref1.type;
            switch (type) {
              case message_types.welcome:
                this.monitor.recordConnect();
                return this.subscriptions.reload();
              case message_types.ping:
                return this.monitor.recordPing();
              case message_types.confirmation:
                return this.subscriptions.notify(identifier, "connected");
              case message_types.rejection:
                return this.subscriptions.reject(identifier);
              default:
                return this.subscriptions.notify(identifier, "received", message);
            }
          },
          open: function() {
            ActionCable.log("WebSocket onopen event, using '" + (this.getProtocol()) + "' subprotocol");
            this.disconnected = false;
            if (!this.isProtocolSupported()) {
              ActionCable.log("Protocol is unsupported. Stopping monitor and disconnecting.");
              return this.close({
                allowReconnect: false
              });
            }
          },
          close: function(event) {
            ActionCable.log("WebSocket onclose event");
            if (this.disconnected) {
              return;
            }
            this.disconnected = true;
            this.monitor.recordDisconnect();
            return this.subscriptions.notifyAll("disconnected", {
              willAttemptReconnect: this.monitor.isRunning()
            });
          },
          error: function() {
            return ActionCable.log("WebSocket onerror event");
          }
        };

        return Connection;

      })();

    }).call(this);
    (function() {
      var slice = [].slice;

      ActionCable.Subscriptions = (function() {
        function Subscriptions(consumer) {
          this.consumer = consumer;
          this.subscriptions = [];
        }

        Subscriptions.prototype.create = function(channelName, mixin) {
          var channel, params, subscription;
          channel = channelName;
          params = typeof channel === "object" ? channel : {
            channel: channel
          };
          subscription = new ActionCable.Subscription(this.consumer, params, mixin);
          return this.add(subscription);
        };

        Subscriptions.prototype.add = function(subscription) {
          this.subscriptions.push(subscription);
          this.consumer.ensureActiveConnection();
          this.notify(subscription, "initialized");
          this.sendCommand(subscription, "subscribe");
          return subscription;
        };

        Subscriptions.prototype.remove = function(subscription) {
          this.forget(subscription);
          if (!this.findAll(subscription.identifier).length) {
            this.sendCommand(subscription, "unsubscribe");
          }
          return subscription;
        };

        Subscriptions.prototype.reject = function(identifier) {
          var i, len, ref, results, subscription;
          ref = this.findAll(identifier);
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            subscription = ref[i];
            this.forget(subscription);
            this.notify(subscription, "rejected");
            results.push(subscription);
          }
          return results;
        };

        Subscriptions.prototype.forget = function(subscription) {
          var s;
          this.subscriptions = (function() {
            var i, len, ref, results;
            ref = this.subscriptions;
            results = [];
            for (i = 0, len = ref.length; i < len; i++) {
              s = ref[i];
              if (s !== subscription) {
                results.push(s);
              }
            }
            return results;
          }).call(this);
          return subscription;
        };

        Subscriptions.prototype.findAll = function(identifier) {
          var i, len, ref, results, s;
          ref = this.subscriptions;
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            s = ref[i];
            if (s.identifier === identifier) {
              results.push(s);
            }
          }
          return results;
        };

        Subscriptions.prototype.reload = function() {
          var i, len, ref, results, subscription;
          ref = this.subscriptions;
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            subscription = ref[i];
            results.push(this.sendCommand(subscription, "subscribe"));
          }
          return results;
        };

        Subscriptions.prototype.notifyAll = function() {
          var args, callbackName, i, len, ref, results, subscription;
          callbackName = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
          ref = this.subscriptions;
          results = [];
          for (i = 0, len = ref.length; i < len; i++) {
            subscription = ref[i];
            results.push(this.notify.apply(this, [subscription, callbackName].concat(slice.call(args))));
          }
          return results;
        };

        Subscriptions.prototype.notify = function() {
          var args, callbackName, i, len, results, subscription, subscriptions;
          subscription = arguments[0], callbackName = arguments[1], args = 3 <= arguments.length ? slice.call(arguments, 2) : [];
          if (typeof subscription === "string") {
            subscriptions = this.findAll(subscription);
          } else {
            subscriptions = [subscription];
          }
          results = [];
          for (i = 0, len = subscriptions.length; i < len; i++) {
            subscription = subscriptions[i];
            results.push(typeof subscription[callbackName] === "function" ? subscription[callbackName].apply(subscription, args) : void 0);
          }
          return results;
        };

        Subscriptions.prototype.sendCommand = function(subscription, command) {
          var identifier;
          identifier = subscription.identifier;
          return this.consumer.send({
            command: command,
            identifier: identifier
          });
        };

        return Subscriptions;

      })();

    }).call(this);
    (function() {
      ActionCable.Subscription = (function() {
        var extend;

        function Subscription(consumer, params, mixin) {
          this.consumer = consumer;
          if (params == null) {
            params = {};
          }
          this.identifier = JSON.stringify(params);
          extend(this, mixin);
        }

        Subscription.prototype.perform = function(action, data) {
          if (data == null) {
            data = {};
          }
          data.action = action;
          return this.send(data);
        };

        Subscription.prototype.send = function(data) {
          return this.consumer.send({
            command: "message",
            identifier: this.identifier,
            data: JSON.stringify(data)
          });
        };

        Subscription.prototype.unsubscribe = function() {
          return this.consumer.subscriptions.remove(this);
        };

        extend = function(object, properties) {
          var key, value;
          if (properties != null) {
            for (key in properties) {
              value = properties[key];
              object[key] = value;
            }
          }
          return object;
        };

        return Subscription;

      })();

    }).call(this);
    (function() {
      ActionCable.Consumer = (function() {
        function Consumer(url) {
          this.url = url;
          this.subscriptions = new ActionCable.Subscriptions(this);
          this.connection = new ActionCable.Connection(this);
        }

        Consumer.prototype.send = function(data) {
          return this.connection.send(data);
        };

        Consumer.prototype.connect = function() {
          return this.connection.open();
        };

        Consumer.prototype.disconnect = function() {
          return this.connection.close({
            allowReconnect: false
          });
        };

        Consumer.prototype.ensureActiveConnection = function() {
          if (!this.connection.isActive()) {
            return this.connection.open();
          }
        };

        return Consumer;

      })();

    }).call(this);
  }).call(this);

  if (typeof module === "object" && module.exports) {
    module.exports = ActionCable;
  } else if (typeof define === "function" && define.amd) {
    define(ActionCable);
  }
}).call(this);
// Action Cable provides the framework to deal with WebSockets in Rails.
// You can generate new channels where WebSocket features live using the `rails generate channel` command.
//




(function() {
  this.App || (this.App = {});

  App.cable = ActionCable.createConsumer();

}).call(this);
// app/assets/javascripts/channels/chatrooms.js





this.App = {};

App.cable = ActionCable.createConsumer();  
// app/assets/javascripts/channels/messages.js

App.messages = App.cable.subscriptions.create('MessagesChannel', {  
  received: function(data) {
    $("#messages").removeClass('hidden')
    return $('#messages').append(this.renderMessage(data));
  },

  renderMessage: function(data) {
    return "<p> <b>" + data.user + ": </b>" + data.message + "</p>";
  }
});
var webServiceUrl = "http://phonesrv-v.newleafsc.net:8098/";
var webServiceUrlSecure = "http://phonesrv-v.newleafsc.net:8498/";
(function() {


}).call(this);
(function() {


}).call(this);
/*!
 * Column visibility buttons for Buttons and DataTables.
 * 2016 SpryMedia Ltd - datatables.net/license
 */


(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


$.extend( DataTable.ext.buttons, {
	// A collection of column visibility buttons
	colvis: function ( dt, conf ) {
		return {
			extend: 'collection',
			text: function ( dt ) {
				return dt.i18n( 'buttons.colvis', 'Column visibility' );
			},
			className: 'buttons-colvis',
			buttons: [ {
				extend: 'columnsToggle',
				columns: conf.columns,
				columnText: conf.columnText
			} ]
		};
	},

	// Selected columns with individual buttons - toggle column visibility
	columnsToggle: function ( dt, conf ) {
		var columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {
			return {
				extend: 'columnToggle',
				columns: idx,
				columnText: conf.columnText
			};
		} ).toArray();

		return columns;
	},

	// Single button to toggle column visibility
	columnToggle: function ( dt, conf ) {
		return {
			extend: 'columnVisibility',
			columns: conf.columns,
			columnText: conf.columnText
		};
	},

	// Selected columns with individual buttons - set column visibility
	columnsVisibility: function ( dt, conf ) {
		var columns = dt.columns( conf.columns ).indexes().map( function ( idx ) {
			return {
				extend: 'columnVisibility',
				columns: idx,
				visibility: conf.visibility,
				columnText: conf.columnText
			};
		} ).toArray();

		return columns;
	},

	// Single button to set column visibility
	columnVisibility: {
		columns: undefined, // column selector
		text: function ( dt, button, conf ) {
			return conf._columnText( dt, conf );
		},
		className: 'buttons-columnVisibility',
		action: function ( e, dt, button, conf ) {
			var col = dt.columns( conf.columns );
			var curr = col.visible();

			col.visible( conf.visibility !== undefined ?
				conf.visibility :
				! (curr.length ? curr[0] : false )
			);
		},
		init: function ( dt, button, conf ) {
			var that = this;
			button.attr( 'data-cv-idx', conf.columns );

			dt
				.on( 'column-visibility.dt'+conf.namespace, function (e, settings) {
					if ( ! settings.bDestroying && settings.nTable == dt.settings()[0].nTable ) {
						that.active( dt.column( conf.columns ).visible() );
					}
				} )
				.on( 'column-reorder.dt'+conf.namespace, function (e, settings, details) {
					// Don't rename buttons based on column name if the button
					// controls more than one column!
					if ( dt.columns( conf.columns ).count() !== 1 ) {
						return;
					}

					conf.columns = $.inArray( conf.columns, details.mapping );
					button.attr( 'data-cv-idx', conf.columns );

					// Reorder buttons for new table order
					button
						.parent()
						.children('[data-cv-idx]')
						.sort( function (a, b) {
							return (a.getAttribute('data-cv-idx')*1) - (b.getAttribute('data-cv-idx')*1);
						} )
						.appendTo(button.parent());
				} );

			this.active( dt.column( conf.columns ).visible() );
		},
		destroy: function ( dt, button, conf ) {
			dt
				.off( 'column-visibility.dt'+conf.namespace )
				.off( 'column-reorder.dt'+conf.namespace );
		},

		_columnText: function ( dt, conf ) {
			// Use DataTables' internal data structure until this is presented
			// is a public API. The other option is to use
			// `$( column(col).node() ).text()` but the node might not have been
			// populated when Buttons is constructed.
			var idx = dt.column( conf.columns ).index();
			var title = dt.settings()[0].aoColumns[ idx ].sTitle
				.replace(/\n/g," ")        // remove new lines
				.replace(/<br\s*\/?>/gi, " ")  // replace line breaks with spaces
				.replace(/<select(.*?)<\/select>/g, "") // remove select tags, including options text
				.replace(/<!\-\-.*?\-\->/g, "") // strip HTML comments
				.replace(/<.*?>/g, "")   // strip HTML
				.replace(/^\s+|\s+$/g,""); // trim

			return conf.columnText ?
				conf.columnText( dt, idx, title ) :
				title;
		}
	},


	colvisRestore: {
		className: 'buttons-colvisRestore',

		text: function ( dt ) {
			return dt.i18n( 'buttons.colvisRestore', 'Restore visibility' );
		},

		init: function ( dt, button, conf ) {
			conf._visOriginal = dt.columns().indexes().map( function ( idx ) {
				return dt.column( idx ).visible();
			} ).toArray();
		},

		action: function ( e, dt, button, conf ) {
			dt.columns().every( function ( i ) {
				// Take into account that ColReorder might have disrupted our
				// indexes
				var idx = dt.colReorder && dt.colReorder.transpose ?
					dt.colReorder.transpose( i, 'toOriginal' ) :
					i;

				this.visible( conf._visOriginal[ idx ] );
			} );
		}
	},


	colvisGroup: {
		className: 'buttons-colvisGroup',

		action: function ( e, dt, button, conf ) {
			dt.columns( conf.show ).visible( true, false );
			dt.columns( conf.hide ).visible( false, false );

			dt.columns.adjust();
		},

		show: [],

		hide: []
	}
} );


return DataTable.Buttons;
}));
(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);
/*!
 Buttons for DataTables 1.5.4
 ©2016-2018 SpryMedia Ltd - datatables.net/license
*/

var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.findInternal=function(d,p,m){d instanceof String&&(d=String(d));for(var l=d.length,g=0;g<l;g++){var u=d[g];if(p.call(m,u,g,d))return{i:g,v:u}}return{i:-1,v:void 0}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(d,p,m){d!=Array.prototype&&d!=Object.prototype&&(d[p]=m.value)};
$jscomp.getGlobal=function(d){return"undefined"!=typeof window&&window===d?d:"undefined"!=typeof global&&null!=global?global:d};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(d,p,m,l){if(p){m=$jscomp.global;d=d.split(".");for(l=0;l<d.length-1;l++){var g=d[l];g in m||(m[g]={});m=m[g]}d=d[d.length-1];l=m[d];p=p(l);p!=l&&null!=p&&$jscomp.defineProperty(m,d,{configurable:!0,writable:!0,value:p})}};
$jscomp.polyfill("Array.prototype.find",function(d){return d?d:function(d,m){return $jscomp.findInternal(this,d,m).v}},"es6","es3");
(function(d){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(p){return d(p,window,document)}):"object"===typeof exports?module.exports=function(p,m){p||(p=window);m&&m.fn.dataTable||(m=require("datatables.net")(p,m).$);return d(m,p,p.document)}:d(jQuery,window,document)})(function(d,p,m,l){var g=d.fn.dataTable,u=0,B=0,q=g.ext.buttons,r=function(a,b){"undefined"===typeof b&&(b={});!0===b&&(b={});d.isArray(b)&&(b={buttons:b});this.c=d.extend(!0,{},r.defaults,b);b.buttons&&
(this.c.buttons=b.buttons);this.s={dt:new g.Api(a),buttons:[],listenKeys:"",namespace:"dtb"+u++};this.dom={container:d("<"+this.c.dom.container.tag+"/>").addClass(this.c.dom.container.className)};this._constructor()};d.extend(r.prototype,{action:function(a,b){a=this._nodeToButton(a);if(b===l)return a.conf.action;a.conf.action=b;return this},active:function(a,b){var c=this._nodeToButton(a);a=this.c.dom.button.active;c=d(c.node);if(b===l)return c.hasClass(a);c.toggleClass(a,b===l?!0:b);return this},
add:function(a,b){var c=this.s.buttons;if("string"===typeof b){b=b.split("-");c=this.s;for(var d=0,f=b.length-1;d<f;d++)c=c.buttons[1*b[d]];c=c.buttons;b=1*b[b.length-1]}this._expandButton(c,a,!1,b);this._draw();return this},container:function(){return this.dom.container},disable:function(a){a=this._nodeToButton(a);d(a.node).addClass(this.c.dom.button.disabled);return this},destroy:function(){d("body").off("keyup."+this.s.namespace);var a=this.s.buttons.slice(),b;var c=0;for(b=a.length;c<b;c++)this.remove(a[c].node);
this.dom.container.remove();a=this.s.dt.settings()[0];c=0;for(b=a.length;c<b;c++)if(a.inst===this){a.splice(c,1);break}return this},enable:function(a,b){if(!1===b)return this.disable(a);a=this._nodeToButton(a);d(a.node).removeClass(this.c.dom.button.disabled);return this},name:function(){return this.c.name},node:function(a){a=this._nodeToButton(a);return d(a.node)},processing:function(a,b){a=this._nodeToButton(a);if(b===l)return d(a.node).hasClass("processing");d(a.node).toggleClass("processing",
b);return this},remove:function(a){var b=this._nodeToButton(a),c=this._nodeToHost(a),e=this.s.dt;if(b.buttons.length)for(var f=b.buttons.length-1;0<=f;f--)this.remove(b.buttons[f].node);b.conf.destroy&&b.conf.destroy.call(e.button(a),e,d(a),b.conf);this._removeKey(b.conf);d(b.node).remove();a=d.inArray(b,c);c.splice(a,1);return this},text:function(a,b){var c=this._nodeToButton(a);a=this.c.dom.collection.buttonLiner;a=c.inCollection&&a&&a.tag?a.tag:this.c.dom.buttonLiner.tag;var e=this.s.dt,f=d(c.node),
h=function(a){return"function"===typeof a?a(e,f,c.conf):a};if(b===l)return h(c.conf.text);c.conf.text=b;a?f.children(a).html(h(b)):f.html(h(b));return this},_constructor:function(){var a=this,b=this.s.dt,c=b.settings()[0],e=this.c.buttons;c._buttons||(c._buttons=[]);c._buttons.push({inst:this,name:this.c.name});for(var f=0,h=e.length;f<h;f++)this.add(e[f]);b.on("destroy",function(b,d){d===c&&a.destroy()});d("body").on("keyup."+this.s.namespace,function(b){if(!m.activeElement||m.activeElement===m.body){var c=
String.fromCharCode(b.keyCode).toLowerCase();-1!==a.s.listenKeys.toLowerCase().indexOf(c)&&a._keypress(c,b)}})},_addKey:function(a){a.key&&(this.s.listenKeys+=d.isPlainObject(a.key)?a.key.key:a.key)},_draw:function(a,b){a||(a=this.dom.container,b=this.s.buttons);a.children().detach();for(var c=0,d=b.length;c<d;c++)a.append(b[c].inserter),a.append(" "),b[c].buttons&&b[c].buttons.length&&this._draw(b[c].collection,b[c].buttons)},_expandButton:function(a,b,c,e){var f=this.s.dt,h=0;b=d.isArray(b)?b:[b];
for(var k=0,v=b.length;k<v;k++){var n=this._resolveExtends(b[k]);if(n)if(d.isArray(n))this._expandButton(a,n,c,e);else{var t=this._buildButton(n,c);if(t){e!==l?(a.splice(e,0,t),e++):a.push(t);if(t.conf.buttons){var y=this.c.dom.collection;t.collection=d("<"+y.tag+"/>").addClass(y.className).attr("role","menu");t.conf._collection=t.collection;this._expandButton(t.buttons,t.conf.buttons,!0,e)}n.init&&n.init.call(f.button(t.node),f,d(t.node),n);h++}}}},_buildButton:function(a,b){var c=this.c.dom.button,
e=this.c.dom.buttonLiner,f=this.c.dom.collection,h=this.s.dt,k=function(b){return"function"===typeof b?b(h,n,a):b};b&&f.button&&(c=f.button);b&&f.buttonLiner&&(e=f.buttonLiner);if(a.available&&!a.available(h,a))return!1;var v=function(a,b,c,e){e.action.call(b.button(c),a,b,c,e);d(b.table().node()).triggerHandler("buttons-action.dt",[b.button(c),b,c,e])};f=a.tag||c.tag;var n=d("<"+f+"/>").addClass(c.className).attr("tabindex",this.s.dt.settings()[0].iTabIndex).attr("aria-controls",this.s.dt.table().node().id).on("click.dtb",
function(b){b.preventDefault();!n.hasClass(c.disabled)&&a.action&&v(b,h,n,a);n.blur()}).on("keyup.dtb",function(b){13===b.keyCode&&!n.hasClass(c.disabled)&&a.action&&v(b,h,n,a)});"a"===f.toLowerCase()&&n.attr("href","#");"button"===f.toLowerCase()&&n.attr("type","button");e.tag?(f=d("<"+e.tag+"/>").html(k(a.text)).addClass(e.className),"a"===e.tag.toLowerCase()&&f.attr("href","#"),n.append(f)):n.html(k(a.text));!1===a.enabled&&n.addClass(c.disabled);a.className&&n.addClass(a.className);a.titleAttr&&
n.attr("title",k(a.titleAttr));a.attr&&n.attr(a.attr);a.namespace||(a.namespace=".dt-button-"+B++);e=(e=this.c.dom.buttonContainer)&&e.tag?d("<"+e.tag+"/>").addClass(e.className).append(n):n;this._addKey(a);return{conf:a,node:n.get(0),inserter:e,buttons:[],inCollection:b,collection:null}},_nodeToButton:function(a,b){b||(b=this.s.buttons);for(var c=0,d=b.length;c<d;c++){if(b[c].node===a)return b[c];if(b[c].buttons.length){var f=this._nodeToButton(a,b[c].buttons);if(f)return f}}},_nodeToHost:function(a,
b){b||(b=this.s.buttons);for(var c=0,d=b.length;c<d;c++){if(b[c].node===a)return b;if(b[c].buttons.length){var f=this._nodeToHost(a,b[c].buttons);if(f)return f}}},_keypress:function(a,b){if(!b._buttonsHandled){var c=function(e){for(var f=0,h=e.length;f<h;f++){var k=e[f].conf,v=e[f].node;k.key&&(k.key===a?(b._buttonsHandled=!0,d(v).click()):!d.isPlainObject(k.key)||k.key.key!==a||k.key.shiftKey&&!b.shiftKey||k.key.altKey&&!b.altKey||k.key.ctrlKey&&!b.ctrlKey||k.key.metaKey&&!b.metaKey||(b._buttonsHandled=
!0,d(v).click()));e[f].buttons.length&&c(e[f].buttons)}};c(this.s.buttons)}},_removeKey:function(a){if(a.key){var b=d.isPlainObject(a.key)?a.key.key:a.key;a=this.s.listenKeys.split("");b=d.inArray(b,a);a.splice(b,1);this.s.listenKeys=a.join("")}},_resolveExtends:function(a){var b=this.s.dt,c,e=function(c){for(var e=0;!d.isPlainObject(c)&&!d.isArray(c);){if(c===l)return;if("function"===typeof c){if(c=c(b,a),!c)return!1}else if("string"===typeof c){if(!q[c])throw"Unknown button type: "+c;c=q[c]}e++;
if(30<e)throw"Buttons: Too many iterations";}return d.isArray(c)?c:d.extend({},c)};for(a=e(a);a&&a.extend;){if(!q[a.extend])throw"Cannot extend unknown button type: "+a.extend;var f=e(q[a.extend]);if(d.isArray(f))return f;if(!f)return!1;var h=f.className;a=d.extend({},f,a);h&&a.className!==h&&(a.className=h+" "+a.className);var k=a.postfixButtons;if(k){a.buttons||(a.buttons=[]);h=0;for(c=k.length;h<c;h++)a.buttons.push(k[h]);a.postfixButtons=null}if(k=a.prefixButtons){a.buttons||(a.buttons=[]);h=
0;for(c=k.length;h<c;h++)a.buttons.splice(h,0,k[h]);a.prefixButtons=null}a.extend=f.extend}return a}});r.background=function(a,b,c,e){c===l&&(c=400);e||(e=m.body);a?d("<div/>").addClass(b).css("display","none").insertAfter(e).fadeIn(c):d("div."+b).fadeOut(c,function(){d(this).removeClass(b).remove()})};r.instanceSelector=function(a,b){if(!a)return d.map(b,function(a){return a.inst});var c=[],e=d.map(b,function(a){return a.name}),f=function(a){if(d.isArray(a))for(var k=0,v=a.length;k<v;k++)f(a[k]);
else"string"===typeof a?-1!==a.indexOf(",")?f(a.split(",")):(a=d.inArray(d.trim(a),e),-1!==a&&c.push(b[a].inst)):"number"===typeof a&&c.push(b[a].inst)};f(a);return c};r.buttonSelector=function(a,b){for(var c=[],e=function(a,b,c){for(var d,f,k=0,h=b.length;k<h;k++)if(d=b[k])f=c!==l?c+k:k+"",a.push({node:d.node,name:d.conf.name,idx:f}),d.buttons&&e(a,d.buttons,f+"-")},f=function(a,b){var k,h=[];e(h,b.s.buttons);var g=d.map(h,function(a){return a.node});if(d.isArray(a)||a instanceof d)for(g=0,k=a.length;g<
k;g++)f(a[g],b);else if(null===a||a===l||"*"===a)for(g=0,k=h.length;g<k;g++)c.push({inst:b,node:h[g].node});else if("number"===typeof a)c.push({inst:b,node:b.s.buttons[a].node});else if("string"===typeof a)if(-1!==a.indexOf(","))for(h=a.split(","),g=0,k=h.length;g<k;g++)f(d.trim(h[g]),b);else if(a.match(/^\d+(\-\d+)*$/))g=d.map(h,function(a){return a.idx}),c.push({inst:b,node:h[d.inArray(a,g)].node});else if(-1!==a.indexOf(":name"))for(a=a.replace(":name",""),g=0,k=h.length;g<k;g++)h[g].name===a&&
c.push({inst:b,node:h[g].node});else d(g).filter(a).each(function(){c.push({inst:b,node:this})});else"object"===typeof a&&a.nodeName&&(h=d.inArray(a,g),-1!==h&&c.push({inst:b,node:g[h]}))},h=0,k=a.length;h<k;h++)f(b,a[h]);return c};r.defaults={buttons:["copy","excel","csv","pdf","print"],name:"main",tabIndex:0,dom:{container:{tag:"div",className:"dt-buttons"},collection:{tag:"div",className:"dt-button-collection"},button:{tag:"ActiveXObject"in p?"a":"button",className:"dt-button",active:"active",
disabled:"disabled"},buttonLiner:{tag:"span",className:""}}};r.version="1.5.4";d.extend(q,{collection:{text:function(a){return a.i18n("buttons.collection","Collection")},className:"buttons-collection",action:function(a,b,c,e){var f=d(c).parents("div.dt-button-collection");a=c.position();var h=d(b.table().container()),k=!1,g=c;f.length&&(k=d(".dt-button-collection").position(),g=f,d("body").trigger("click.dtb-collection"));g.parents("body")[0]!==m.body&&(g=m.body.lastChild);e._collection.find(".dt-button-collection-title").remove();
e._collection.prepend('<div class="dt-button-collection-title">'+e.collectionTitle+"</div>");e._collection.addClass(e.collectionLayout).css("display","none").insertAfter(g).fadeIn(e.fade);f=e._collection.css("position");if(k&&"absolute"===f)e._collection.css({top:k.top,left:k.left});else if("absolute"===f){e._collection.css({top:a.top+c.outerHeight(),left:a.left});k=h.offset().top+h.height();k=a.top+c.outerHeight()+e._collection.outerHeight()-k;f=a.top-e._collection.outerHeight();var n=h.offset().top;
(k>n-f||e.dropup)&&e._collection.css("top",a.top-e._collection.outerHeight()-5);e._collection.hasClass(e.rightAlignClassName)&&e._collection.css("left",a.left+c.outerWidth()-e._collection.outerWidth());k=a.left+e._collection.outerWidth();h=h.offset().left+h.width();k>h&&e._collection.css("left",a.left-(k-h));c=c.offset().left+e._collection.outerWidth();c>d(p).width()&&e._collection.css("left",a.left-(c-d(p).width()))}else c=e._collection.height()/2,c>d(p).height()/2&&(c=d(p).height()/2),e._collection.css("marginTop",
-1*c);e.background&&r.background(!0,e.backgroundClassName,e.fade,g);var l=function(){e._collection.fadeOut(e.fade,function(){e._collection.detach()});d("div.dt-button-background").off("click.dtb-collection");r.background(!1,e.backgroundClassName,e.fade,g);d("body").off(".dtb-collection");b.off("buttons-action.b-internal")};setTimeout(function(){d("div.dt-button-background").on("click.dtb-collection",function(){});d("body").on("click.dtb-collection",function(a){var b=d.fn.addBack?"addBack":"andSelf";
d(a.target).parents()[b]().filter(e._collection).length||l()}).on("keyup.dtb-collection",function(a){27===a.keyCode&&l()});if(e.autoClose)b.on("buttons-action.b-internal",function(){l()})},10)},background:!0,collectionLayout:"",collectionTitle:"",backgroundClassName:"dt-button-background",rightAlignClassName:"dt-button-right",autoClose:!1,fade:400,attr:{"aria-haspopup":!0}},copy:function(a,b){if(q.copyHtml5)return"copyHtml5";if(q.copyFlash&&q.copyFlash.available(a,b))return"copyFlash"},csv:function(a,
b){if(q.csvHtml5&&q.csvHtml5.available(a,b))return"csvHtml5";if(q.csvFlash&&q.csvFlash.available(a,b))return"csvFlash"},excel:function(a,b){if(q.excelHtml5&&q.excelHtml5.available(a,b))return"excelHtml5";if(q.excelFlash&&q.excelFlash.available(a,b))return"excelFlash"},pdf:function(a,b){if(q.pdfHtml5&&q.pdfHtml5.available(a,b))return"pdfHtml5";if(q.pdfFlash&&q.pdfFlash.available(a,b))return"pdfFlash"},pageLength:function(a){a=a.settings()[0].aLengthMenu;var b=d.isArray(a[0])?a[0]:a,c=d.isArray(a[0])?
a[1]:a,e=function(a){return a.i18n("buttons.pageLength",{"-1":"Show all rows",_:"Show %d rows"},a.page.len())};return{extend:"collection",text:e,className:"buttons-page-length",autoClose:!0,buttons:d.map(b,function(a,b){return{text:c[b],className:"button-page-length",action:function(b,c){c.page.len(a).draw()},init:function(b,c,d){var e=this;c=function(){e.active(b.page.len()===a)};b.on("length.dt"+d.namespace,c);c()},destroy:function(a,b,c){a.off("length.dt"+c.namespace)}}}),init:function(a,b,c){var d=
this;a.on("length.dt"+c.namespace,function(){d.text(e(a))})},destroy:function(a,b,c){a.off("length.dt"+c.namespace)}}}});g.Api.register("buttons()",function(a,b){b===l&&(b=a,a=l);this.selector.buttonGroup=a;var c=this.iterator(!0,"table",function(c){if(c._buttons)return r.buttonSelector(r.instanceSelector(a,c._buttons),b)},!0);c._groupSelector=a;return c});g.Api.register("button()",function(a,b){a=this.buttons(a,b);1<a.length&&a.splice(1,a.length);return a});g.Api.registerPlural("buttons().active()",
"button().active()",function(a){return a===l?this.map(function(a){return a.inst.active(a.node)}):this.each(function(b){b.inst.active(b.node,a)})});g.Api.registerPlural("buttons().action()","button().action()",function(a){return a===l?this.map(function(a){return a.inst.action(a.node)}):this.each(function(b){b.inst.action(b.node,a)})});g.Api.register(["buttons().enable()","button().enable()"],function(a){return this.each(function(b){b.inst.enable(b.node,a)})});g.Api.register(["buttons().disable()",
"button().disable()"],function(){return this.each(function(a){a.inst.disable(a.node)})});g.Api.registerPlural("buttons().nodes()","button().node()",function(){var a=d();d(this.each(function(b){a=a.add(b.inst.node(b.node))}));return a});g.Api.registerPlural("buttons().processing()","button().processing()",function(a){return a===l?this.map(function(a){return a.inst.processing(a.node)}):this.each(function(b){b.inst.processing(b.node,a)})});g.Api.registerPlural("buttons().text()","button().text()",function(a){return a===
l?this.map(function(a){return a.inst.text(a.node)}):this.each(function(b){b.inst.text(b.node,a)})});g.Api.registerPlural("buttons().trigger()","button().trigger()",function(){return this.each(function(a){a.inst.node(a.node).trigger("click")})});g.Api.registerPlural("buttons().containers()","buttons().container()",function(){var a=d(),b=this._groupSelector;this.iterator(!0,"table",function(c){if(c._buttons){c=r.instanceSelector(b,c._buttons);for(var d=0,f=c.length;d<f;d++)a=a.add(c[d].container())}});
return a});g.Api.register("button().add()",function(a,b){var c=this.context;c.length&&(c=r.instanceSelector(this._groupSelector,c[0]._buttons),c.length&&c[0].add(b,a));return this.button(this._groupSelector,a)});g.Api.register("buttons().destroy()",function(){this.pluck("inst").unique().each(function(a){a.destroy()});return this});g.Api.registerPlural("buttons().remove()","buttons().remove()",function(){this.each(function(a){a.inst.remove(a.node)});return this});var w;g.Api.register("buttons.info()",
function(a,b,c){var e=this;if(!1===a)return d("#datatables_buttons_info").fadeOut(function(){d(this).remove()}),clearTimeout(w),w=null,this;w&&clearTimeout(w);d("#datatables_buttons_info").length&&d("#datatables_buttons_info").remove();a=a?"<h2>"+a+"</h2>":"";d('<div id="datatables_buttons_info" class="dt-button-info"/>').html(a).append(d("<div/>")["string"===typeof b?"html":"append"](b)).css("display","none").appendTo("body").fadeIn();c!==l&&0!==c&&(w=setTimeout(function(){e.buttons.info(!1)},c));
return this});g.Api.register("buttons.exportData()",function(a){if(this.context.length)return C(new g.Api(this.context[0]),a)});g.Api.register("buttons.exportInfo()",function(a){a||(a={});var b=a;var c="*"===b.filename&&"*"!==b.title&&b.title!==l&&null!==b.title&&""!==b.title?b.title:b.filename;"function"===typeof c&&(c=c());c===l||null===c?c=null:(-1!==c.indexOf("*")&&(c=d.trim(c.replace("*",d("head > title").text()))),c=c.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g,""),(b=x(b.extension))||
(b=""),c+=b);b=x(a.title);b=null===b?null:-1!==b.indexOf("*")?b.replace("*",d("head > title").text()||"Exported data"):b;return{filename:c,title:b,messageTop:z(this,a.message||a.messageTop,"top"),messageBottom:z(this,a.messageBottom,"bottom")}});var x=function(a){return null===a||a===l?null:"function"===typeof a?a():a},z=function(a,b,c){b=x(b);if(null===b)return null;a=d("caption",a.table().container()).eq(0);return"*"===b?a.css("caption-side")!==c?null:a.length?a.text():"":b},A=d("<textarea/>")[0],
C=function(a,b){var c=d.extend(!0,{},{rows:null,columns:"",modifier:{search:"applied",order:"applied"},orthogonal:"display",stripHtml:!0,stripNewlines:!0,decodeEntities:!0,trim:!0,format:{header:function(a){return e(a)},footer:function(a){return e(a)},body:function(a){return e(a)}},customizeData:null},b),e=function(a){if("string"!==typeof a)return a;a=a.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,"");a=a.replace(/<!\-\-.*?\-\->/g,"");c.stripHtml&&(a=a.replace(/<[^>]*>/g,""));c.trim&&
(a=a.replace(/^\s+|\s+$/g,""));c.stripNewlines&&(a=a.replace(/\n/g," "));c.decodeEntities&&(A.innerHTML=a,a=A.value);return a};b=a.columns(c.columns).indexes().map(function(b){var d=a.column(b).header();return c.format.header(d.innerHTML,b,d)}).toArray();var f=a.table().footer()?a.columns(c.columns).indexes().map(function(b){var d=a.column(b).footer();return c.format.footer(d?d.innerHTML:"",b,d)}).toArray():null,h=d.extend({},c.modifier);a.select&&"function"===typeof a.select.info&&h.selected===l&&
a.rows(c.rows,d.extend({selected:!0},h)).any()&&d.extend(h,{selected:!0});h=a.rows(c.rows,h).indexes().toArray();var g=a.cells(h,c.columns);h=g.render(c.orthogonal).toArray();g=g.nodes().toArray();for(var m=b.length,n=[],p=0,q=0,r=0<m?h.length/m:0;q<r;q++){for(var w=[m],u=0;u<m;u++)w[u]=c.format.body(h[p],q,u,g[p]),p++;n[q]=w}b={header:b,footer:f,body:n};c.customizeData&&c.customizeData(b);return b};d.fn.dataTable.Buttons=r;d.fn.DataTable.Buttons=r;d(m).on("init.dt plugin-init.dt",function(a,b){"dt"===
a.namespace&&(a=b.oInit.buttons||g.defaults.buttons)&&!b._buttons&&(new r(b,a)).container()});g.ext.feature.push({fnInit:function(a){a=new g.Api(a);var b=a.init().buttons||g.defaults.buttons;return(new r(a,b)).container()},cFeature:"B"});return r});
/*
 * This combined file was created by the DataTables downloader builder:
 *   https://datatables.net/download
 *
 * To rebuild or modify this file with the latest versions of the included
 * software please visit:
 *   https://datatables.net/download/#dt/dt-1.10.18/b-1.5.4/b-html5-1.5.4/b-print-1.5.4/fc-3.2.5/r-2.2.2
 *
 * Included libraries:
 *   DataTables 1.10.18, Buttons 1.5.4, HTML5 export 1.5.4, Print view 1.5.4, FixedColumns 3.2.5, Responsive 2.2.2
 */

/*!
 DataTables 1.10.18
 ©2008-2018 SpryMedia Ltd - datatables.net/license
*/

(function(h){"function"===typeof define&&define.amd?define(["jquery"],function(E){return h(E,window,document)}):"object"===typeof exports?module.exports=function(E,H){E||(E=window);H||(H="undefined"!==typeof window?require("jquery"):require("jquery")(E));return h(H,E,E.document)}:h(jQuery,window,document)})(function(h,E,H,k){function Z(a){var b,c,d={};h.each(a,function(e){if((b=e.match(/^([^A-Z]+?)([A-Z])/))&&-1!=="a aa ai ao as b fn i m o s ".indexOf(b[1]+" "))c=e.replace(b[0],b[2].toLowerCase()),
d[c]=e,"o"===b[1]&&Z(a[e])});a._hungarianMap=d}function J(a,b,c){a._hungarianMap||Z(a);var d;h.each(b,function(e){d=a._hungarianMap[e];if(d!==k&&(c||b[d]===k))"o"===d.charAt(0)?(b[d]||(b[d]={}),h.extend(!0,b[d],b[e]),J(a[d],b[d],c)):b[d]=b[e]})}function Ca(a){var b=n.defaults.oLanguage,c=b.sDecimal;c&&Da(c);if(a){var d=a.sZeroRecords;!a.sEmptyTable&&(d&&"No data available in table"===b.sEmptyTable)&&F(a,a,"sZeroRecords","sEmptyTable");!a.sLoadingRecords&&(d&&"Loading..."===b.sLoadingRecords)&&F(a,
a,"sZeroRecords","sLoadingRecords");a.sInfoThousands&&(a.sThousands=a.sInfoThousands);(a=a.sDecimal)&&c!==a&&Da(a)}}function eb(a){A(a,"ordering","bSort");A(a,"orderMulti","bSortMulti");A(a,"orderClasses","bSortClasses");A(a,"orderCellsTop","bSortCellsTop");A(a,"order","aaSorting");A(a,"orderFixed","aaSortingFixed");A(a,"paging","bPaginate");A(a,"pagingType","sPaginationType");A(a,"pageLength","iDisplayLength");A(a,"searching","bFilter");"boolean"===typeof a.sScrollX&&(a.sScrollX=a.sScrollX?"100%":
"");"boolean"===typeof a.scrollX&&(a.scrollX=a.scrollX?"100%":"");if(a=a.aoSearchCols)for(var b=0,c=a.length;b<c;b++)a[b]&&J(n.models.oSearch,a[b])}function fb(a){A(a,"orderable","bSortable");A(a,"orderData","aDataSort");A(a,"orderSequence","asSorting");A(a,"orderDataType","sortDataType");var b=a.aDataSort;"number"===typeof b&&!h.isArray(b)&&(a.aDataSort=[b])}function gb(a){if(!n.__browser){var b={};n.__browser=b;var c=h("<div/>").css({position:"fixed",top:0,left:-1*h(E).scrollLeft(),height:1,width:1,
overflow:"hidden"}).append(h("<div/>").css({position:"absolute",top:1,left:1,width:100,overflow:"scroll"}).append(h("<div/>").css({width:"100%",height:10}))).appendTo("body"),d=c.children(),e=d.children();b.barWidth=d[0].offsetWidth-d[0].clientWidth;b.bScrollOversize=100===e[0].offsetWidth&&100!==d[0].clientWidth;b.bScrollbarLeft=1!==Math.round(e.offset().left);b.bBounding=c[0].getBoundingClientRect().width?!0:!1;c.remove()}h.extend(a.oBrowser,n.__browser);a.oScroll.iBarWidth=n.__browser.barWidth}
function hb(a,b,c,d,e,f){var g,j=!1;c!==k&&(g=c,j=!0);for(;d!==e;)a.hasOwnProperty(d)&&(g=j?b(g,a[d],d,a):a[d],j=!0,d+=f);return g}function Ea(a,b){var c=n.defaults.column,d=a.aoColumns.length,c=h.extend({},n.models.oColumn,c,{nTh:b?b:H.createElement("th"),sTitle:c.sTitle?c.sTitle:b?b.innerHTML:"",aDataSort:c.aDataSort?c.aDataSort:[d],mData:c.mData?c.mData:d,idx:d});a.aoColumns.push(c);c=a.aoPreSearchCols;c[d]=h.extend({},n.models.oSearch,c[d]);ka(a,d,h(b).data())}function ka(a,b,c){var b=a.aoColumns[b],
d=a.oClasses,e=h(b.nTh);if(!b.sWidthOrig){b.sWidthOrig=e.attr("width")||null;var f=(e.attr("style")||"").match(/width:\s*(\d+[pxem%]+)/);f&&(b.sWidthOrig=f[1])}c!==k&&null!==c&&(fb(c),J(n.defaults.column,c),c.mDataProp!==k&&!c.mData&&(c.mData=c.mDataProp),c.sType&&(b._sManualType=c.sType),c.className&&!c.sClass&&(c.sClass=c.className),c.sClass&&e.addClass(c.sClass),h.extend(b,c),F(b,c,"sWidth","sWidthOrig"),c.iDataSort!==k&&(b.aDataSort=[c.iDataSort]),F(b,c,"aDataSort"));var g=b.mData,j=S(g),i=b.mRender?
S(b.mRender):null,c=function(a){return"string"===typeof a&&-1!==a.indexOf("@")};b._bAttrSrc=h.isPlainObject(g)&&(c(g.sort)||c(g.type)||c(g.filter));b._setter=null;b.fnGetData=function(a,b,c){var d=j(a,b,k,c);return i&&b?i(d,b,a,c):d};b.fnSetData=function(a,b,c){return N(g)(a,b,c)};"number"!==typeof g&&(a._rowReadObject=!0);a.oFeatures.bSort||(b.bSortable=!1,e.addClass(d.sSortableNone));a=-1!==h.inArray("asc",b.asSorting);c=-1!==h.inArray("desc",b.asSorting);!b.bSortable||!a&&!c?(b.sSortingClass=d.sSortableNone,
b.sSortingClassJUI=""):a&&!c?(b.sSortingClass=d.sSortableAsc,b.sSortingClassJUI=d.sSortJUIAscAllowed):!a&&c?(b.sSortingClass=d.sSortableDesc,b.sSortingClassJUI=d.sSortJUIDescAllowed):(b.sSortingClass=d.sSortable,b.sSortingClassJUI=d.sSortJUI)}function $(a){if(!1!==a.oFeatures.bAutoWidth){var b=a.aoColumns;Fa(a);for(var c=0,d=b.length;c<d;c++)b[c].nTh.style.width=b[c].sWidth}b=a.oScroll;(""!==b.sY||""!==b.sX)&&la(a);r(a,null,"column-sizing",[a])}function aa(a,b){var c=ma(a,"bVisible");return"number"===
typeof c[b]?c[b]:null}function ba(a,b){var c=ma(a,"bVisible"),c=h.inArray(b,c);return-1!==c?c:null}function V(a){var b=0;h.each(a.aoColumns,function(a,d){d.bVisible&&"none"!==h(d.nTh).css("display")&&b++});return b}function ma(a,b){var c=[];h.map(a.aoColumns,function(a,e){a[b]&&c.push(e)});return c}function Ga(a){var b=a.aoColumns,c=a.aoData,d=n.ext.type.detect,e,f,g,j,i,h,l,q,t;e=0;for(f=b.length;e<f;e++)if(l=b[e],t=[],!l.sType&&l._sManualType)l.sType=l._sManualType;else if(!l.sType){g=0;for(j=d.length;g<
j;g++){i=0;for(h=c.length;i<h;i++){t[i]===k&&(t[i]=B(a,i,e,"type"));q=d[g](t[i],a);if(!q&&g!==d.length-1)break;if("html"===q)break}if(q){l.sType=q;break}}l.sType||(l.sType="string")}}function ib(a,b,c,d){var e,f,g,j,i,m,l=a.aoColumns;if(b)for(e=b.length-1;0<=e;e--){m=b[e];var q=m.targets!==k?m.targets:m.aTargets;h.isArray(q)||(q=[q]);f=0;for(g=q.length;f<g;f++)if("number"===typeof q[f]&&0<=q[f]){for(;l.length<=q[f];)Ea(a);d(q[f],m)}else if("number"===typeof q[f]&&0>q[f])d(l.length+q[f],m);else if("string"===
typeof q[f]){j=0;for(i=l.length;j<i;j++)("_all"==q[f]||h(l[j].nTh).hasClass(q[f]))&&d(j,m)}}if(c){e=0;for(a=c.length;e<a;e++)d(e,c[e])}}function O(a,b,c,d){var e=a.aoData.length,f=h.extend(!0,{},n.models.oRow,{src:c?"dom":"data",idx:e});f._aData=b;a.aoData.push(f);for(var g=a.aoColumns,j=0,i=g.length;j<i;j++)g[j].sType=null;a.aiDisplayMaster.push(e);b=a.rowIdFn(b);b!==k&&(a.aIds[b]=f);(c||!a.oFeatures.bDeferRender)&&Ha(a,e,c,d);return e}function na(a,b){var c;b instanceof h||(b=h(b));return b.map(function(b,
e){c=Ia(a,e);return O(a,c.data,e,c.cells)})}function B(a,b,c,d){var e=a.iDraw,f=a.aoColumns[c],g=a.aoData[b]._aData,j=f.sDefaultContent,i=f.fnGetData(g,d,{settings:a,row:b,col:c});if(i===k)return a.iDrawError!=e&&null===j&&(K(a,0,"Requested unknown parameter "+("function"==typeof f.mData?"{function}":"'"+f.mData+"'")+" for row "+b+", column "+c,4),a.iDrawError=e),j;if((i===g||null===i)&&null!==j&&d!==k)i=j;else if("function"===typeof i)return i.call(g);return null===i&&"display"==d?"":i}function jb(a,
b,c,d){a.aoColumns[c].fnSetData(a.aoData[b]._aData,d,{settings:a,row:b,col:c})}function Ja(a){return h.map(a.match(/(\\.|[^\.])+/g)||[""],function(a){return a.replace(/\\\./g,".")})}function S(a){if(h.isPlainObject(a)){var b={};h.each(a,function(a,c){c&&(b[a]=S(c))});return function(a,c,f,g){var j=b[c]||b._;return j!==k?j(a,c,f,g):a}}if(null===a)return function(a){return a};if("function"===typeof a)return function(b,c,f,g){return a(b,c,f,g)};if("string"===typeof a&&(-1!==a.indexOf(".")||-1!==a.indexOf("[")||
-1!==a.indexOf("("))){var c=function(a,b,f){var g,j;if(""!==f){j=Ja(f);for(var i=0,m=j.length;i<m;i++){f=j[i].match(ca);g=j[i].match(W);if(f){j[i]=j[i].replace(ca,"");""!==j[i]&&(a=a[j[i]]);g=[];j.splice(0,i+1);j=j.join(".");if(h.isArray(a)){i=0;for(m=a.length;i<m;i++)g.push(c(a[i],b,j))}a=f[0].substring(1,f[0].length-1);a=""===a?g:g.join(a);break}else if(g){j[i]=j[i].replace(W,"");a=a[j[i]]();continue}if(null===a||a[j[i]]===k)return k;a=a[j[i]]}}return a};return function(b,e){return c(b,e,a)}}return function(b){return b[a]}}
function N(a){if(h.isPlainObject(a))return N(a._);if(null===a)return function(){};if("function"===typeof a)return function(b,d,e){a(b,"set",d,e)};if("string"===typeof a&&(-1!==a.indexOf(".")||-1!==a.indexOf("[")||-1!==a.indexOf("("))){var b=function(a,d,e){var e=Ja(e),f;f=e[e.length-1];for(var g,j,i=0,m=e.length-1;i<m;i++){g=e[i].match(ca);j=e[i].match(W);if(g){e[i]=e[i].replace(ca,"");a[e[i]]=[];f=e.slice();f.splice(0,i+1);g=f.join(".");if(h.isArray(d)){j=0;for(m=d.length;j<m;j++)f={},b(f,d[j],g),
a[e[i]].push(f)}else a[e[i]]=d;return}j&&(e[i]=e[i].replace(W,""),a=a[e[i]](d));if(null===a[e[i]]||a[e[i]]===k)a[e[i]]={};a=a[e[i]]}if(f.match(W))a[f.replace(W,"")](d);else a[f.replace(ca,"")]=d};return function(c,d){return b(c,d,a)}}return function(b,d){b[a]=d}}function Ka(a){return D(a.aoData,"_aData")}function oa(a){a.aoData.length=0;a.aiDisplayMaster.length=0;a.aiDisplay.length=0;a.aIds={}}function pa(a,b,c){for(var d=-1,e=0,f=a.length;e<f;e++)a[e]==b?d=e:a[e]>b&&a[e]--; -1!=d&&c===k&&a.splice(d,
1)}function da(a,b,c,d){var e=a.aoData[b],f,g=function(c,d){for(;c.childNodes.length;)c.removeChild(c.firstChild);c.innerHTML=B(a,b,d,"display")};if("dom"===c||(!c||"auto"===c)&&"dom"===e.src)e._aData=Ia(a,e,d,d===k?k:e._aData).data;else{var j=e.anCells;if(j)if(d!==k)g(j[d],d);else{c=0;for(f=j.length;c<f;c++)g(j[c],c)}}e._aSortData=null;e._aFilterData=null;g=a.aoColumns;if(d!==k)g[d].sType=null;else{c=0;for(f=g.length;c<f;c++)g[c].sType=null;La(a,e)}}function Ia(a,b,c,d){var e=[],f=b.firstChild,g,
j,i=0,m,l=a.aoColumns,q=a._rowReadObject,d=d!==k?d:q?{}:[],t=function(a,b){if("string"===typeof a){var c=a.indexOf("@");-1!==c&&(c=a.substring(c+1),N(a)(d,b.getAttribute(c)))}},G=function(a){if(c===k||c===i)j=l[i],m=h.trim(a.innerHTML),j&&j._bAttrSrc?(N(j.mData._)(d,m),t(j.mData.sort,a),t(j.mData.type,a),t(j.mData.filter,a)):q?(j._setter||(j._setter=N(j.mData)),j._setter(d,m)):d[i]=m;i++};if(f)for(;f;){g=f.nodeName.toUpperCase();if("TD"==g||"TH"==g)G(f),e.push(f);f=f.nextSibling}else{e=b.anCells;
f=0;for(g=e.length;f<g;f++)G(e[f])}if(b=b.firstChild?b:b.nTr)(b=b.getAttribute("id"))&&N(a.rowId)(d,b);return{data:d,cells:e}}function Ha(a,b,c,d){var e=a.aoData[b],f=e._aData,g=[],j,i,m,l,q;if(null===e.nTr){j=c||H.createElement("tr");e.nTr=j;e.anCells=g;j._DT_RowIndex=b;La(a,e);l=0;for(q=a.aoColumns.length;l<q;l++){m=a.aoColumns[l];i=c?d[l]:H.createElement(m.sCellType);i._DT_CellIndex={row:b,column:l};g.push(i);if((!c||m.mRender||m.mData!==l)&&(!h.isPlainObject(m.mData)||m.mData._!==l+".display"))i.innerHTML=
B(a,b,l,"display");m.sClass&&(i.className+=" "+m.sClass);m.bVisible&&!c?j.appendChild(i):!m.bVisible&&c&&i.parentNode.removeChild(i);m.fnCreatedCell&&m.fnCreatedCell.call(a.oInstance,i,B(a,b,l),f,b,l)}r(a,"aoRowCreatedCallback",null,[j,f,b,g])}e.nTr.setAttribute("role","row")}function La(a,b){var c=b.nTr,d=b._aData;if(c){var e=a.rowIdFn(d);e&&(c.id=e);d.DT_RowClass&&(e=d.DT_RowClass.split(" "),b.__rowc=b.__rowc?qa(b.__rowc.concat(e)):e,h(c).removeClass(b.__rowc.join(" ")).addClass(d.DT_RowClass));
d.DT_RowAttr&&h(c).attr(d.DT_RowAttr);d.DT_RowData&&h(c).data(d.DT_RowData)}}function kb(a){var b,c,d,e,f,g=a.nTHead,j=a.nTFoot,i=0===h("th, td",g).length,m=a.oClasses,l=a.aoColumns;i&&(e=h("<tr/>").appendTo(g));b=0;for(c=l.length;b<c;b++)f=l[b],d=h(f.nTh).addClass(f.sClass),i&&d.appendTo(e),a.oFeatures.bSort&&(d.addClass(f.sSortingClass),!1!==f.bSortable&&(d.attr("tabindex",a.iTabIndex).attr("aria-controls",a.sTableId),Ma(a,f.nTh,b))),f.sTitle!=d[0].innerHTML&&d.html(f.sTitle),Na(a,"header")(a,d,
f,m);i&&ea(a.aoHeader,g);h(g).find(">tr").attr("role","row");h(g).find(">tr>th, >tr>td").addClass(m.sHeaderTH);h(j).find(">tr>th, >tr>td").addClass(m.sFooterTH);if(null!==j){a=a.aoFooter[0];b=0;for(c=a.length;b<c;b++)f=l[b],f.nTf=a[b].cell,f.sClass&&h(f.nTf).addClass(f.sClass)}}function fa(a,b,c){var d,e,f,g=[],j=[],i=a.aoColumns.length,m;if(b){c===k&&(c=!1);d=0;for(e=b.length;d<e;d++){g[d]=b[d].slice();g[d].nTr=b[d].nTr;for(f=i-1;0<=f;f--)!a.aoColumns[f].bVisible&&!c&&g[d].splice(f,1);j.push([])}d=
0;for(e=g.length;d<e;d++){if(a=g[d].nTr)for(;f=a.firstChild;)a.removeChild(f);f=0;for(b=g[d].length;f<b;f++)if(m=i=1,j[d][f]===k){a.appendChild(g[d][f].cell);for(j[d][f]=1;g[d+i]!==k&&g[d][f].cell==g[d+i][f].cell;)j[d+i][f]=1,i++;for(;g[d][f+m]!==k&&g[d][f].cell==g[d][f+m].cell;){for(c=0;c<i;c++)j[d+c][f+m]=1;m++}h(g[d][f].cell).attr("rowspan",i).attr("colspan",m)}}}}function P(a){var b=r(a,"aoPreDrawCallback","preDraw",[a]);if(-1!==h.inArray(!1,b))C(a,!1);else{var b=[],c=0,d=a.asStripeClasses,e=
d.length,f=a.oLanguage,g=a.iInitDisplayStart,j="ssp"==y(a),i=a.aiDisplay;a.bDrawing=!0;g!==k&&-1!==g&&(a._iDisplayStart=j?g:g>=a.fnRecordsDisplay()?0:g,a.iInitDisplayStart=-1);var g=a._iDisplayStart,m=a.fnDisplayEnd();if(a.bDeferLoading)a.bDeferLoading=!1,a.iDraw++,C(a,!1);else if(j){if(!a.bDestroying&&!lb(a))return}else a.iDraw++;if(0!==i.length){f=j?a.aoData.length:m;for(j=j?0:g;j<f;j++){var l=i[j],q=a.aoData[l];null===q.nTr&&Ha(a,l);var t=q.nTr;if(0!==e){var G=d[c%e];q._sRowStripe!=G&&(h(t).removeClass(q._sRowStripe).addClass(G),
q._sRowStripe=G)}r(a,"aoRowCallback",null,[t,q._aData,c,j,l]);b.push(t);c++}}else c=f.sZeroRecords,1==a.iDraw&&"ajax"==y(a)?c=f.sLoadingRecords:f.sEmptyTable&&0===a.fnRecordsTotal()&&(c=f.sEmptyTable),b[0]=h("<tr/>",{"class":e?d[0]:""}).append(h("<td />",{valign:"top",colSpan:V(a),"class":a.oClasses.sRowEmpty}).html(c))[0];r(a,"aoHeaderCallback","header",[h(a.nTHead).children("tr")[0],Ka(a),g,m,i]);r(a,"aoFooterCallback","footer",[h(a.nTFoot).children("tr")[0],Ka(a),g,m,i]);d=h(a.nTBody);d.children().detach();
d.append(h(b));r(a,"aoDrawCallback","draw",[a]);a.bSorted=!1;a.bFiltered=!1;a.bDrawing=!1}}function T(a,b){var c=a.oFeatures,d=c.bFilter;c.bSort&&mb(a);d?ga(a,a.oPreviousSearch):a.aiDisplay=a.aiDisplayMaster.slice();!0!==b&&(a._iDisplayStart=0);a._drawHold=b;P(a);a._drawHold=!1}function nb(a){var b=a.oClasses,c=h(a.nTable),c=h("<div/>").insertBefore(c),d=a.oFeatures,e=h("<div/>",{id:a.sTableId+"_wrapper","class":b.sWrapper+(a.nTFoot?"":" "+b.sNoFooter)});a.nHolding=c[0];a.nTableWrapper=e[0];a.nTableReinsertBefore=
a.nTable.nextSibling;for(var f=a.sDom.split(""),g,j,i,m,l,q,k=0;k<f.length;k++){g=null;j=f[k];if("<"==j){i=h("<div/>")[0];m=f[k+1];if("'"==m||'"'==m){l="";for(q=2;f[k+q]!=m;)l+=f[k+q],q++;"H"==l?l=b.sJUIHeader:"F"==l&&(l=b.sJUIFooter);-1!=l.indexOf(".")?(m=l.split("."),i.id=m[0].substr(1,m[0].length-1),i.className=m[1]):"#"==l.charAt(0)?i.id=l.substr(1,l.length-1):i.className=l;k+=q}e.append(i);e=h(i)}else if(">"==j)e=e.parent();else if("l"==j&&d.bPaginate&&d.bLengthChange)g=ob(a);else if("f"==j&&
d.bFilter)g=pb(a);else if("r"==j&&d.bProcessing)g=qb(a);else if("t"==j)g=rb(a);else if("i"==j&&d.bInfo)g=sb(a);else if("p"==j&&d.bPaginate)g=tb(a);else if(0!==n.ext.feature.length){i=n.ext.feature;q=0;for(m=i.length;q<m;q++)if(j==i[q].cFeature){g=i[q].fnInit(a);break}}g&&(i=a.aanFeatures,i[j]||(i[j]=[]),i[j].push(g),e.append(g))}c.replaceWith(e);a.nHolding=null}function ea(a,b){var c=h(b).children("tr"),d,e,f,g,j,i,m,l,q,k;a.splice(0,a.length);f=0;for(i=c.length;f<i;f++)a.push([]);f=0;for(i=c.length;f<
i;f++){d=c[f];for(e=d.firstChild;e;){if("TD"==e.nodeName.toUpperCase()||"TH"==e.nodeName.toUpperCase()){l=1*e.getAttribute("colspan");q=1*e.getAttribute("rowspan");l=!l||0===l||1===l?1:l;q=!q||0===q||1===q?1:q;g=0;for(j=a[f];j[g];)g++;m=g;k=1===l?!0:!1;for(j=0;j<l;j++)for(g=0;g<q;g++)a[f+g][m+j]={cell:e,unique:k},a[f+g].nTr=d}e=e.nextSibling}}}function ra(a,b,c){var d=[];c||(c=a.aoHeader,b&&(c=[],ea(c,b)));for(var b=0,e=c.length;b<e;b++)for(var f=0,g=c[b].length;f<g;f++)if(c[b][f].unique&&(!d[f]||
!a.bSortCellsTop))d[f]=c[b][f].cell;return d}function sa(a,b,c){r(a,"aoServerParams","serverParams",[b]);if(b&&h.isArray(b)){var d={},e=/(.*?)\[\]$/;h.each(b,function(a,b){var c=b.name.match(e);c?(c=c[0],d[c]||(d[c]=[]),d[c].push(b.value)):d[b.name]=b.value});b=d}var f,g=a.ajax,j=a.oInstance,i=function(b){r(a,null,"xhr",[a,b,a.jqXHR]);c(b)};if(h.isPlainObject(g)&&g.data){f=g.data;var m="function"===typeof f?f(b,a):f,b="function"===typeof f&&m?m:h.extend(!0,b,m);delete g.data}m={data:b,success:function(b){var c=
b.error||b.sError;c&&K(a,0,c);a.json=b;i(b)},dataType:"json",cache:!1,type:a.sServerMethod,error:function(b,c){var d=r(a,null,"xhr",[a,null,a.jqXHR]);-1===h.inArray(!0,d)&&("parsererror"==c?K(a,0,"Invalid JSON response",1):4===b.readyState&&K(a,0,"Ajax error",7));C(a,!1)}};a.oAjaxData=b;r(a,null,"preXhr",[a,b]);a.fnServerData?a.fnServerData.call(j,a.sAjaxSource,h.map(b,function(a,b){return{name:b,value:a}}),i,a):a.sAjaxSource||"string"===typeof g?a.jqXHR=h.ajax(h.extend(m,{url:g||a.sAjaxSource})):
"function"===typeof g?a.jqXHR=g.call(j,b,i,a):(a.jqXHR=h.ajax(h.extend(m,g)),g.data=f)}function lb(a){return a.bAjaxDataGet?(a.iDraw++,C(a,!0),sa(a,ub(a),function(b){vb(a,b)}),!1):!0}function ub(a){var b=a.aoColumns,c=b.length,d=a.oFeatures,e=a.oPreviousSearch,f=a.aoPreSearchCols,g,j=[],i,m,l,k=X(a);g=a._iDisplayStart;i=!1!==d.bPaginate?a._iDisplayLength:-1;var t=function(a,b){j.push({name:a,value:b})};t("sEcho",a.iDraw);t("iColumns",c);t("sColumns",D(b,"sName").join(","));t("iDisplayStart",g);t("iDisplayLength",
i);var G={draw:a.iDraw,columns:[],order:[],start:g,length:i,search:{value:e.sSearch,regex:e.bRegex}};for(g=0;g<c;g++)m=b[g],l=f[g],i="function"==typeof m.mData?"function":m.mData,G.columns.push({data:i,name:m.sName,searchable:m.bSearchable,orderable:m.bSortable,search:{value:l.sSearch,regex:l.bRegex}}),t("mDataProp_"+g,i),d.bFilter&&(t("sSearch_"+g,l.sSearch),t("bRegex_"+g,l.bRegex),t("bSearchable_"+g,m.bSearchable)),d.bSort&&t("bSortable_"+g,m.bSortable);d.bFilter&&(t("sSearch",e.sSearch),t("bRegex",
e.bRegex));d.bSort&&(h.each(k,function(a,b){G.order.push({column:b.col,dir:b.dir});t("iSortCol_"+a,b.col);t("sSortDir_"+a,b.dir)}),t("iSortingCols",k.length));b=n.ext.legacy.ajax;return null===b?a.sAjaxSource?j:G:b?j:G}function vb(a,b){var c=ta(a,b),d=b.sEcho!==k?b.sEcho:b.draw,e=b.iTotalRecords!==k?b.iTotalRecords:b.recordsTotal,f=b.iTotalDisplayRecords!==k?b.iTotalDisplayRecords:b.recordsFiltered;if(d){if(1*d<a.iDraw)return;a.iDraw=1*d}oa(a);a._iRecordsTotal=parseInt(e,10);a._iRecordsDisplay=parseInt(f,
10);d=0;for(e=c.length;d<e;d++)O(a,c[d]);a.aiDisplay=a.aiDisplayMaster.slice();a.bAjaxDataGet=!1;P(a);a._bInitComplete||ua(a,b);a.bAjaxDataGet=!0;C(a,!1)}function ta(a,b){var c=h.isPlainObject(a.ajax)&&a.ajax.dataSrc!==k?a.ajax.dataSrc:a.sAjaxDataProp;return"data"===c?b.aaData||b[c]:""!==c?S(c)(b):b}function pb(a){var b=a.oClasses,c=a.sTableId,d=a.oLanguage,e=a.oPreviousSearch,f=a.aanFeatures,g='<input type="search" class="form-control form-control-sm'+b.sFilterInput+'" id="pn_search" onblur="$(\'#pn_form\').val($(this).val());"/>',j=d.sSearch,j=j.match(/_INPUT_/)?j.replace("_INPUT_",
g):j+g,b=h("<div/>",{id:!f.f?c+"_filter":null,"class":b.sFilter+' mr-3'}).append(h("<label/>").append(j)),f=function(){var b=!this.value?"":this.value;b!=e.sSearch&&(ga(a,{sSearch:b,bRegex:e.bRegex,bSmart:e.bSmart,bCaseInsensitive:e.bCaseInsensitive}),a._iDisplayStart=0,P(a))},g=null!==a.searchDelay?a.searchDelay:"ssp"===y(a)?400:0,i=h("input",b).val(e.sSearch).attr("placeholder",d.sSearchPlaceholder).on("keyup.DT search.DT input.DT paste.DT cut.DT", g?Oa(f,g):f).on("keypress.DT",function(a){if(13==a.keyCode)return!1}).attr("aria-controls",
c);h(a.nTable).on("search.dt.DT",function(b,c){if(a===c)try{i[0]!==H.activeElement&&i.val(e.sSearch)}catch(d){}});return b[0]}function ga(a,b,c){var d=a.oPreviousSearch,e=a.aoPreSearchCols,f=function(a){d.sSearch=a.sSearch;d.bRegex=a.bRegex;d.bSmart=a.bSmart;d.bCaseInsensitive=a.bCaseInsensitive};Ga(a);if("ssp"!=y(a)){wb(a,b.sSearch,c,b.bEscapeRegex!==k?!b.bEscapeRegex:b.bRegex,b.bSmart,b.bCaseInsensitive);f(b);for(b=0;b<e.length;b++)xb(a,e[b].sSearch,b,e[b].bEscapeRegex!==k?!e[b].bEscapeRegex:e[b].bRegex,
e[b].bSmart,e[b].bCaseInsensitive);yb(a)}else f(b);a.bFiltered=!0;r(a,null,"search",[a])}function yb(a){for(var b=n.ext.search,c=a.aiDisplay,d,e,f=0,g=b.length;f<g;f++){for(var j=[],i=0,m=c.length;i<m;i++)e=c[i],d=a.aoData[e],b[f](a,d._aFilterData,e,d._aData,i)&&j.push(e);c.length=0;h.merge(c,j)}}function xb(a,b,c,d,e,f){if(""!==b){for(var g=[],j=a.aiDisplay,d=Pa(b,d,e,f),e=0;e<j.length;e++)b=a.aoData[j[e]]._aFilterData[c],d.test(b)&&g.push(j[e]);a.aiDisplay=g}}function wb(a,b,c,d,e,f){var d=Pa(b,
d,e,f),f=a.oPreviousSearch.sSearch,g=a.aiDisplayMaster,j,e=[];0!==n.ext.search.length&&(c=!0);j=zb(a);if(0>=b.length)a.aiDisplay=g.slice();else{if(j||c||f.length>b.length||0!==b.indexOf(f)||a.bSorted)a.aiDisplay=g.slice();b=a.aiDisplay;for(c=0;c<b.length;c++)d.test(a.aoData[b[c]]._sFilterRow)&&e.push(b[c]);a.aiDisplay=e}}function Pa(a,b,c,d){a=b?a:Qa(a);c&&(a="^(?=.*?"+h.map(a.match(/"[^"]+"|[^ ]+/g)||[""],function(a){if('"'===a.charAt(0))var b=a.match(/^"(.*)"$/),a=b?b[1]:a;return a.replace('"',
"")}).join(")(?=.*?")+").*$");return RegExp(a,d?"i":"")}function zb(a){var b=a.aoColumns,c,d,e,f,g,j,i,h,l=n.ext.type.search;c=!1;d=0;for(f=a.aoData.length;d<f;d++)if(h=a.aoData[d],!h._aFilterData){j=[];e=0;for(g=b.length;e<g;e++)c=b[e],c.bSearchable?(i=B(a,d,e,"filter"),l[c.sType]&&(i=l[c.sType](i)),null===i&&(i=""),"string"!==typeof i&&i.toString&&(i=i.toString())):i="",i.indexOf&&-1!==i.indexOf("&")&&(va.innerHTML=i,i=Wb?va.textContent:va.innerText),i.replace&&(i=i.replace(/[\r\n]/g,"")),j.push(i);
h._aFilterData=j;h._sFilterRow=j.join("  ");c=!0}return c}function Ab(a){return{search:a.sSearch,smart:a.bSmart,regex:a.bRegex,caseInsensitive:a.bCaseInsensitive}}function Bb(a){return{sSearch:a.search,bSmart:a.smart,bRegex:a.regex,bCaseInsensitive:a.caseInsensitive}}function sb(a){var b=a.sTableId,c=a.aanFeatures.i,d=h("<div/>",{"class":a.oClasses.sInfo,id:!c?b+"_info":null});c||(a.aoDrawCallback.push({fn:Cb,sName:"information"}),d.attr("role","status").attr("aria-live","polite"),h(a.nTable).attr("aria-describedby",
b+"_info"));return d[0]}function Cb(a){var b=a.aanFeatures.i;if(0!==b.length){var c=a.oLanguage,d=a._iDisplayStart+1,e=a.fnDisplayEnd(),f=a.fnRecordsTotal(),g=a.fnRecordsDisplay(),j=g?c.sInfo:c.sInfoEmpty;g!==f&&(j+=" "+c.sInfoFiltered);j+=c.sInfoPostFix;j=Db(a,j);c=c.fnInfoCallback;null!==c&&(j=c.call(a.oInstance,a,d,e,f,g,j));h(b).html(j)}}function Db(a,b){var c=a.fnFormatNumber,d=a._iDisplayStart+1,e=a._iDisplayLength,f=a.fnRecordsDisplay(),g=-1===e;return b.replace(/_START_/g,c.call(a,d)).replace(/_END_/g,
c.call(a,a.fnDisplayEnd())).replace(/_MAX_/g,c.call(a,a.fnRecordsTotal())).replace(/_TOTAL_/g,c.call(a,f)).replace(/_PAGE_/g,c.call(a,g?1:Math.ceil(d/e))).replace(/_PAGES_/g,c.call(a,g?1:Math.ceil(f/e)))}function ha(a){var b,c,d=a.iInitDisplayStart,e=a.aoColumns,f;c=a.oFeatures;var g=a.bDeferLoading;if(a.bInitialised){nb(a);kb(a);fa(a,a.aoHeader);fa(a,a.aoFooter);C(a,!0);c.bAutoWidth&&Fa(a);b=0;for(c=e.length;b<c;b++)f=e[b],f.sWidth&&(f.nTh.style.width=v(f.sWidth));r(a,null,"preInit",[a]);T(a);e=
y(a);if("ssp"!=e||g)"ajax"==e?sa(a,[],function(c){var f=ta(a,c);for(b=0;b<f.length;b++)O(a,f[b]);a.iInitDisplayStart=d;T(a);C(a,!1);ua(a,c)},a):(C(a,!1),ua(a))}else setTimeout(function(){ha(a)},200)}function ua(a,b){a._bInitComplete=!0;(b||a.oInit.aaData)&&$(a);r(a,null,"plugin-init",[a,b]);r(a,"aoInitComplete","init",[a,b])}function Ra(a,b){var c=parseInt(b,10);a._iDisplayLength=c;Sa(a);r(a,null,"length",[a,c])}function ob(a){for(var b=a.oClasses,c=a.sTableId,d=a.aLengthMenu,e=h.isArray(d[0]),f=
e?d[0]:d,d=e?d[1]:d,e=h("<select/>",{name:c+"_length","aria-controls":c,"class":b.sLengthSelect}),g=0,j=f.length;g<j;g++)e[0][g]=new Option("number"===typeof d[g]?a.fnFormatNumber(d[g]):d[g],f[g]);var i=h("<div><label/></div>").addClass(b.sLength);a.aanFeatures.l||(i[0].id=c+"_length");i.children().append(a.oLanguage.sLengthMenu.replace("_MENU_",e[0].outerHTML)).addClass("form-control form-control-sm");h("select",i).val(a._iDisplayLength).on("change.DT",function(){Ra(a,h(this).val());P(a)});h(a.nTable).on("length.dt.DT",function(b,c,d){a===
c&&h("select",i).val(d)});return i[0]}function tb(a){var b=a.sPaginationType,c=n.ext.pager[b],d="function"===typeof c,e=function(a){P(a)},b=h("<div/>").addClass(a.oClasses.sPaging+b)[0],f=a.aanFeatures;d||c.fnInit(a,b,e);f.p||(b.id=a.sTableId+"_paginate",a.aoDrawCallback.push({fn:function(a){if(d){var b=a._iDisplayStart,i=a._iDisplayLength,h=a.fnRecordsDisplay(),l=-1===i,b=l?0:Math.ceil(b/i),i=l?1:Math.ceil(h/i),h=c(b,i),k,l=0;for(k=f.p.length;l<k;l++)Na(a,"pageButton")(a,f.p[l],l,h,b,i)}else c.fnUpdate(a,
e)},sName:"pagination"}));return b}function Ta(a,b,c){var d=a._iDisplayStart,e=a._iDisplayLength,f=a.fnRecordsDisplay();0===f||-1===e?d=0:"number"===typeof b?(d=b*e,d>f&&(d=0)):"first"==b?d=0:"previous"==b?(d=0<=e?d-e:0,0>d&&(d=0)):"next"==b?d+e<f&&(d+=e):"last"==b?d=Math.floor((f-1)/e)*e:K(a,0,"Unknown paging action: "+b,5);b=a._iDisplayStart!==d;a._iDisplayStart=d;b&&(r(a,null,"page",[a]),c&&P(a));return b}function qb(a){return h("<div/>",{id:!a.aanFeatures.r?a.sTableId+"_processing":null,"class":a.oClasses.sProcessing}).html(a.oLanguage.sProcessing).insertBefore(a.nTable)[0]}
function C(a,b){a.oFeatures.bProcessing&&h(a.aanFeatures.r).css("display",b?"block":"none");r(a,null,"processing",[a,b])}function rb(a){var b=h(a.nTable);b.attr("role","grid");var c=a.oScroll;if(""===c.sX&&""===c.sY)return a.nTable;var d=c.sX,e=c.sY,f=a.oClasses,g=b.children("caption"),j=g.length?g[0]._captionSide:null,i=h(b[0].cloneNode(!1)),m=h(b[0].cloneNode(!1)),l=b.children("tfoot");l.length||(l=null);i=h("<div/>",{"class":f.sScrollWrapper}).append(h("<div/>",{"class":f.sScrollHead}).css({overflow:"hidden",
position:"relative",border:0,width:d?!d?null:v(d):"100%"}).append(h("<div/>",{"class":f.sScrollHeadInner}).css({"box-sizing":"content-box",width:c.sXInner||"100%"}).append(i.removeAttr("id").css("margin-left",0).append("top"===j?g:null).append(b.children("thead"))))).append(h("<div/>",{"class":f.sScrollBody}).css({position:"relative",overflow:"auto",width:!d?null:v(d)}).append(b));l&&i.append(h("<div/>",{"class":f.sScrollFoot}).css({overflow:"hidden",border:0,width:d?!d?null:v(d):"100%"}).append(h("<div/>",
{"class":f.sScrollFootInner}).append(m.removeAttr("id").css("margin-left",0).append("bottom"===j?g:null).append(b.children("tfoot")))));var b=i.children(),k=b[0],f=b[1],t=l?b[2]:null;if(d)h(f).on("scroll.DT",function(){var a=this.scrollLeft;k.scrollLeft=a;l&&(t.scrollLeft=a)});h(f).css(e&&c.bCollapse?"max-height":"height",e);a.nScrollHead=k;a.nScrollBody=f;a.nScrollFoot=t;a.aoDrawCallback.push({fn:la,sName:"scrolling"});return i[0]}function la(a){var b=a.oScroll,c=b.sX,d=b.sXInner,e=b.sY,b=b.iBarWidth,
f=h(a.nScrollHead),g=f[0].style,j=f.children("div"),i=j[0].style,m=j.children("table"),j=a.nScrollBody,l=h(j),q=j.style,t=h(a.nScrollFoot).children("div"),n=t.children("table"),o=h(a.nTHead),p=h(a.nTable),s=p[0],r=s.style,u=a.nTFoot?h(a.nTFoot):null,x=a.oBrowser,U=x.bScrollOversize,Xb=D(a.aoColumns,"nTh"),Q,L,R,w,Ua=[],y=[],z=[],A=[],B,C=function(a){a=a.style;a.paddingTop="0";a.paddingBottom="0";a.borderTopWidth="0";a.borderBottomWidth="0";a.height=0};L=j.scrollHeight>j.clientHeight;if(a.scrollBarVis!==
L&&a.scrollBarVis!==k)a.scrollBarVis=L,$(a);else{a.scrollBarVis=L;p.children("thead, tfoot").remove();u&&(R=u.clone().prependTo(p),Q=u.find("tr"),R=R.find("tr"));w=o.clone().prependTo(p);o=o.find("tr");L=w.find("tr");w.find("th, td").removeAttr("tabindex");c||(q.width="100%",f[0].style.width="100%");h.each(ra(a,w),function(b,c){B=aa(a,b);c.style.width=a.aoColumns[B].sWidth});u&&I(function(a){a.style.width=""},R);f=p.outerWidth();if(""===c){r.width="100%";if(U&&(p.find("tbody").height()>j.offsetHeight||
"scroll"==l.css("overflow-y")))r.width=v(p.outerWidth()-b);f=p.outerWidth()}else""!==d&&(r.width=v(d),f=p.outerWidth());I(C,L);I(function(a){z.push(a.innerHTML);Ua.push(v(h(a).css("width")))},L);I(function(a,b){if(h.inArray(a,Xb)!==-1)a.style.width=Ua[b]},o);h(L).height(0);u&&(I(C,R),I(function(a){A.push(a.innerHTML);y.push(v(h(a).css("width")))},R),I(function(a,b){a.style.width=y[b]},Q),h(R).height(0));I(function(a,b){a.innerHTML='<div class="dataTables_sizing">'+z[b]+"</div>";a.childNodes[0].style.height=
"0";a.childNodes[0].style.overflow="hidden";a.style.width=Ua[b]},L);u&&I(function(a,b){a.innerHTML='<div class="dataTables_sizing">'+A[b]+"</div>";a.childNodes[0].style.height="0";a.childNodes[0].style.overflow="hidden";a.style.width=y[b]},R);if(p.outerWidth()<f){Q=j.scrollHeight>j.offsetHeight||"scroll"==l.css("overflow-y")?f+b:f;if(U&&(j.scrollHeight>j.offsetHeight||"scroll"==l.css("overflow-y")))r.width=v(Q-b);(""===c||""!==d)&&K(a,1,"Possible column misalignment",6)}else Q="100%";q.width=v(Q);
g.width=v(Q);u&&(a.nScrollFoot.style.width=v(Q));!e&&U&&(q.height=v(s.offsetHeight+b));c=p.outerWidth();m[0].style.width=v(c);i.width=v(c);d=p.height()>j.clientHeight||"scroll"==l.css("overflow-y");e="padding"+(x.bScrollbarLeft?"Left":"Right");i[e]=d?b+"px":"0px";u&&(n[0].style.width=v(c),t[0].style.width=v(c),t[0].style[e]=d?b+"px":"0px");p.children("colgroup").insertBefore(p.children("thead"));l.scroll();if((a.bSorted||a.bFiltered)&&!a._drawHold)j.scrollTop=0}}function I(a,b,c){for(var d=0,e=0,
f=b.length,g,j;e<f;){g=b[e].firstChild;for(j=c?c[e].firstChild:null;g;)1===g.nodeType&&(c?a(g,j,d):a(g,d),d++),g=g.nextSibling,j=c?j.nextSibling:null;e++}}function Fa(a){var b=a.nTable,c=a.aoColumns,d=a.oScroll,e=d.sY,f=d.sX,g=d.sXInner,j=c.length,i=ma(a,"bVisible"),m=h("th",a.nTHead),l=b.getAttribute("width"),k=b.parentNode,t=!1,n,o,p=a.oBrowser,d=p.bScrollOversize;(n=b.style.width)&&-1!==n.indexOf("%")&&(l=n);for(n=0;n<i.length;n++)o=c[i[n]],null!==o.sWidth&&(o.sWidth=Eb(o.sWidthOrig,k),t=!0);if(d||
!t&&!f&&!e&&j==V(a)&&j==m.length)for(n=0;n<j;n++)i=aa(a,n),null!==i&&(c[i].sWidth=v(m.eq(n).width()));else{j=h(b).clone().css("visibility","hidden").removeAttr("id");j.find("tbody tr").remove();var s=h("<tr/>").appendTo(j.find("tbody"));j.find("thead, tfoot").remove();j.append(h(a.nTHead).clone()).append(h(a.nTFoot).clone());j.find("tfoot th, tfoot td").css("width","");m=ra(a,j.find("thead")[0]);for(n=0;n<i.length;n++)o=c[i[n]],m[n].style.width=null!==o.sWidthOrig&&""!==o.sWidthOrig?v(o.sWidthOrig):
"",o.sWidthOrig&&f&&h(m[n]).append(h("<div/>").css({width:o.sWidthOrig,margin:0,padding:0,border:0,height:1}));if(a.aoData.length)for(n=0;n<i.length;n++)t=i[n],o=c[t],h(Fb(a,t)).clone(!1).append(o.sContentPadding).appendTo(s);h("[name]",j).removeAttr("name");o=h("<div/>").css(f||e?{position:"absolute",top:0,left:0,height:1,right:0,overflow:"hidden"}:{}).append(j).appendTo(k);f&&g?j.width(g):f?(j.css("width","auto"),j.removeAttr("width"),j.width()<k.clientWidth&&l&&j.width(k.clientWidth)):e?j.width(k.clientWidth):
l&&j.width(l);for(n=e=0;n<i.length;n++)k=h(m[n]),g=k.outerWidth()-k.width(),k=p.bBounding?Math.ceil(m[n].getBoundingClientRect().width):k.outerWidth(),e+=k,c[i[n]].sWidth=v(k-g);b.style.width=v(e);o.remove()}l&&(b.style.width=v(l));if((l||f)&&!a._reszEvt)b=function(){h(E).on("resize.DT-"+a.sInstance,Oa(function(){$(a)}))},d?setTimeout(b,1E3):b(),a._reszEvt=!0}function Eb(a,b){if(!a)return 0;var c=h("<div/>").css("width",v(a)).appendTo(b||H.body),d=c[0].offsetWidth;c.remove();return d}function Fb(a,
b){var c=Gb(a,b);if(0>c)return null;var d=a.aoData[c];return!d.nTr?h("<td/>").html(B(a,c,b,"display"))[0]:d.anCells[b]}function Gb(a,b){for(var c,d=-1,e=-1,f=0,g=a.aoData.length;f<g;f++)c=B(a,f,b,"display")+"",c=c.replace(Yb,""),c=c.replace(/&nbsp;/g," "),c.length>d&&(d=c.length,e=f);return e}function v(a){return null===a?"0px":"number"==typeof a?0>a?"0px":a+"px":a.match(/\d$/)?a+"px":a}function X(a){var b,c,d=[],e=a.aoColumns,f,g,j,i;b=a.aaSortingFixed;c=h.isPlainObject(b);var m=[];f=function(a){a.length&&
!h.isArray(a[0])?m.push(a):h.merge(m,a)};h.isArray(b)&&f(b);c&&b.pre&&f(b.pre);f(a.aaSorting);c&&b.post&&f(b.post);for(a=0;a<m.length;a++){i=m[a][0];f=e[i].aDataSort;b=0;for(c=f.length;b<c;b++)g=f[b],j=e[g].sType||"string",m[a]._idx===k&&(m[a]._idx=h.inArray(m[a][1],e[g].asSorting)),d.push({src:i,col:g,dir:m[a][1],index:m[a]._idx,type:j,formatter:n.ext.type.order[j+"-pre"]})}return d}function mb(a){var b,c,d=[],e=n.ext.type.order,f=a.aoData,g=0,j,i=a.aiDisplayMaster,h;Ga(a);h=X(a);b=0;for(c=h.length;b<
c;b++)j=h[b],j.formatter&&g++,Hb(a,j.col);if("ssp"!=y(a)&&0!==h.length){b=0;for(c=i.length;b<c;b++)d[i[b]]=b;g===h.length?i.sort(function(a,b){var c,e,g,j,i=h.length,k=f[a]._aSortData,n=f[b]._aSortData;for(g=0;g<i;g++)if(j=h[g],c=k[j.col],e=n[j.col],c=c<e?-1:c>e?1:0,0!==c)return"asc"===j.dir?c:-c;c=d[a];e=d[b];return c<e?-1:c>e?1:0}):i.sort(function(a,b){var c,g,j,i,k=h.length,n=f[a]._aSortData,o=f[b]._aSortData;for(j=0;j<k;j++)if(i=h[j],c=n[i.col],g=o[i.col],i=e[i.type+"-"+i.dir]||e["string-"+i.dir],
c=i(c,g),0!==c)return c;c=d[a];g=d[b];return c<g?-1:c>g?1:0})}a.bSorted=!0}function Ib(a){for(var b,c,d=a.aoColumns,e=X(a),a=a.oLanguage.oAria,f=0,g=d.length;f<g;f++){c=d[f];var j=c.asSorting;b=c.sTitle.replace(/<.*?>/g,"");var i=c.nTh;i.removeAttribute("aria-sort");c.bSortable&&(0<e.length&&e[0].col==f?(i.setAttribute("aria-sort","asc"==e[0].dir?"ascending":"descending"),c=j[e[0].index+1]||j[0]):c=j[0],b+="asc"===c?a.sSortAscending:a.sSortDescending);i.setAttribute("aria-label",b)}}function Va(a,
b,c,d){var e=a.aaSorting,f=a.aoColumns[b].asSorting,g=function(a,b){var c=a._idx;c===k&&(c=h.inArray(a[1],f));return c+1<f.length?c+1:b?null:0};"number"===typeof e[0]&&(e=a.aaSorting=[e]);c&&a.oFeatures.bSortMulti?(c=h.inArray(b,D(e,"0")),-1!==c?(b=g(e[c],!0),null===b&&1===e.length&&(b=0),null===b?e.splice(c,1):(e[c][1]=f[b],e[c]._idx=b)):(e.push([b,f[0],0]),e[e.length-1]._idx=0)):e.length&&e[0][0]==b?(b=g(e[0]),e.length=1,e[0][1]=f[b],e[0]._idx=b):(e.length=0,e.push([b,f[0]]),e[0]._idx=0);T(a);"function"==
typeof d&&d(a)}function Ma(a,b,c,d){var e=a.aoColumns[c];Wa(b,{},function(b){!1!==e.bSortable&&(a.oFeatures.bProcessing?(C(a,!0),setTimeout(function(){Va(a,c,b.shiftKey,d);"ssp"!==y(a)&&C(a,!1)},0)):Va(a,c,b.shiftKey,d))})}function wa(a){var b=a.aLastSort,c=a.oClasses.sSortColumn,d=X(a),e=a.oFeatures,f,g;if(e.bSort&&e.bSortClasses){e=0;for(f=b.length;e<f;e++)g=b[e].src,h(D(a.aoData,"anCells",g)).removeClass(c+(2>e?e+1:3));e=0;for(f=d.length;e<f;e++)g=d[e].src,h(D(a.aoData,"anCells",g)).addClass(c+
(2>e?e+1:3))}a.aLastSort=d}function Hb(a,b){var c=a.aoColumns[b],d=n.ext.order[c.sSortDataType],e;d&&(e=d.call(a.oInstance,a,b,ba(a,b)));for(var f,g=n.ext.type.order[c.sType+"-pre"],j=0,i=a.aoData.length;j<i;j++)if(c=a.aoData[j],c._aSortData||(c._aSortData=[]),!c._aSortData[b]||d)f=d?e[j]:B(a,j,b,"sort"),c._aSortData[b]=g?g(f):f}function xa(a){if(a.oFeatures.bStateSave&&!a.bDestroying){var b={time:+new Date,start:a._iDisplayStart,length:a._iDisplayLength,order:h.extend(!0,[],a.aaSorting),search:Ab(a.oPreviousSearch),
columns:h.map(a.aoColumns,function(b,d){return{visible:b.bVisible,search:Ab(a.aoPreSearchCols[d])}})};r(a,"aoStateSaveParams","stateSaveParams",[a,b]);a.oSavedState=b;a.fnStateSaveCallback.call(a.oInstance,a,b)}}function Jb(a,b,c){var d,e,f=a.aoColumns,b=function(b){if(b&&b.time){var g=r(a,"aoStateLoadParams","stateLoadParams",[a,b]);if(-1===h.inArray(!1,g)&&(g=a.iStateDuration,!(0<g&&b.time<+new Date-1E3*g)&&!(b.columns&&f.length!==b.columns.length))){a.oLoadedState=h.extend(!0,{},b);b.start!==k&&
(a._iDisplayStart=b.start,a.iInitDisplayStart=b.start);b.length!==k&&(a._iDisplayLength=b.length);b.order!==k&&(a.aaSorting=[],h.each(b.order,function(b,c){a.aaSorting.push(c[0]>=f.length?[0,c[1]]:c)}));b.search!==k&&h.extend(a.oPreviousSearch,Bb(b.search));if(b.columns){d=0;for(e=b.columns.length;d<e;d++)g=b.columns[d],g.visible!==k&&(f[d].bVisible=g.visible),g.search!==k&&h.extend(a.aoPreSearchCols[d],Bb(g.search))}r(a,"aoStateLoaded","stateLoaded",[a,b])}}c()};if(a.oFeatures.bStateSave){var g=
a.fnStateLoadCallback.call(a.oInstance,a,b);g!==k&&b(g)}else c()}function ya(a){var b=n.settings,a=h.inArray(a,D(b,"nTable"));return-1!==a?b[a]:null}function K(a,b,c,d){c="DataTables warning: "+(a?"table id="+a.sTableId+" - ":"")+c;d&&(c+=". For more information about this error, please see http://datatables.net/tn/"+d);if(b)E.console&&console.log&&console.log(c);else if(b=n.ext,b=b.sErrMode||b.errMode,a&&r(a,null,"error",[a,d,c]),"alert"==b)alert(c);else{if("throw"==b)throw Error(c);"function"==
typeof b&&b(a,d,c)}}function F(a,b,c,d){h.isArray(c)?h.each(c,function(c,d){h.isArray(d)?F(a,b,d[0],d[1]):F(a,b,d)}):(d===k&&(d=c),b[c]!==k&&(a[d]=b[c]))}function Xa(a,b,c){var d,e;for(e in b)b.hasOwnProperty(e)&&(d=b[e],h.isPlainObject(d)?(h.isPlainObject(a[e])||(a[e]={}),h.extend(!0,a[e],d)):a[e]=c&&"data"!==e&&"aaData"!==e&&h.isArray(d)?d.slice():d);return a}function Wa(a,b,c){h(a).on("click.DT",b,function(b){h(a).blur();c(b)}).on("keypress.DT",b,function(a){13===a.which&&(a.preventDefault(),c(a))}).on("selectstart.DT",
function(){return!1})}function z(a,b,c,d){c&&a[b].push({fn:c,sName:d})}function r(a,b,c,d){var e=[];b&&(e=h.map(a[b].slice().reverse(),function(b){return b.fn.apply(a.oInstance,d)}));null!==c&&(b=h.Event(c+".dt"),h(a.nTable).trigger(b,d),e.push(b.result));return e}function Sa(a){var b=a._iDisplayStart,c=a.fnDisplayEnd(),d=a._iDisplayLength;b>=c&&(b=c-d);b-=b%d;if(-1===d||0>b)b=0;a._iDisplayStart=b}function Na(a,b){var c=a.renderer,d=n.ext.renderer[b];return h.isPlainObject(c)&&c[b]?d[c[b]]||d._:"string"===
typeof c?d[c]||d._:d._}function y(a){return a.oFeatures.bServerSide?"ssp":a.ajax||a.sAjaxSource?"ajax":"dom"}function ia(a,b){var c=[],c=Kb.numbers_length,d=Math.floor(c/2);b<=c?c=Y(0,b):a<=d?(c=Y(0,c-2),c.push("ellipsis"),c.push(b-1)):(a>=b-1-d?c=Y(b-(c-2),b):(c=Y(a-d+2,a+d-1),c.push("ellipsis"),c.push(b-1)),c.splice(0,0,"ellipsis"),c.splice(0,0,0));c.DT_el="span";return c}function Da(a){h.each({num:function(b){return za(b,a)},"num-fmt":function(b){return za(b,a,Ya)},"html-num":function(b){return za(b,
a,Aa)},"html-num-fmt":function(b){return za(b,a,Aa,Ya)}},function(b,c){x.type.order[b+a+"-pre"]=c;b.match(/^html\-/)&&(x.type.search[b+a]=x.type.search.html)})}function Lb(a){return function(){var b=[ya(this[n.ext.iApiIndex])].concat(Array.prototype.slice.call(arguments));return n.ext.internal[a].apply(this,b)}}var n=function(a){this.$=function(a,b){return this.api(!0).$(a,b)};this._=function(a,b){return this.api(!0).rows(a,b).data()};this.api=function(a){return a?new s(ya(this[x.iApiIndex])):new s(this)};
this.fnAddData=function(a,b){var c=this.api(!0),d=h.isArray(a)&&(h.isArray(a[0])||h.isPlainObject(a[0]))?c.rows.add(a):c.row.add(a);(b===k||b)&&c.draw();return d.flatten().toArray()};this.fnAdjustColumnSizing=function(a){var b=this.api(!0).columns.adjust(),c=b.settings()[0],d=c.oScroll;a===k||a?b.draw(!1):(""!==d.sX||""!==d.sY)&&la(c)};this.fnClearTable=function(a){var b=this.api(!0).clear();(a===k||a)&&b.draw()};this.fnClose=function(a){this.api(!0).row(a).child.hide()};this.fnDeleteRow=function(a,
b,c){var d=this.api(!0),a=d.rows(a),e=a.settings()[0],h=e.aoData[a[0][0]];a.remove();b&&b.call(this,e,h);(c===k||c)&&d.draw();return h};this.fnDestroy=function(a){this.api(!0).destroy(a)};this.fnDraw=function(a){this.api(!0).draw(a)};this.fnFilter=function(a,b,c,d,e,h){e=this.api(!0);null===b||b===k?e.search(a,c,d,h):e.column(b).search(a,c,d,h);e.draw()};this.fnGetData=function(a,b){var c=this.api(!0);if(a!==k){var d=a.nodeName?a.nodeName.toLowerCase():"";return b!==k||"td"==d||"th"==d?c.cell(a,b).data():
c.row(a).data()||null}return c.data().toArray()};this.fnGetNodes=function(a){var b=this.api(!0);return a!==k?b.row(a).node():b.rows().nodes().flatten().toArray()};this.fnGetPosition=function(a){var b=this.api(!0),c=a.nodeName.toUpperCase();return"TR"==c?b.row(a).index():"TD"==c||"TH"==c?(a=b.cell(a).index(),[a.row,a.columnVisible,a.column]):null};this.fnIsOpen=function(a){return this.api(!0).row(a).child.isShown()};this.fnOpen=function(a,b,c){return this.api(!0).row(a).child(b,c).show().child()[0]};
this.fnPageChange=function(a,b){var c=this.api(!0).page(a);(b===k||b)&&c.draw(!1)};this.fnSetColumnVis=function(a,b,c){a=this.api(!0).column(a).visible(b);(c===k||c)&&a.columns.adjust().draw()};this.fnSettings=function(){return ya(this[x.iApiIndex])};this.fnSort=function(a){this.api(!0).order(a).draw()};this.fnSortListener=function(a,b,c){this.api(!0).order.listener(a,b,c)};this.fnUpdate=function(a,b,c,d,e){var h=this.api(!0);c===k||null===c?h.row(b).data(a):h.cell(b,c).data(a);(e===k||e)&&h.columns.adjust();
(d===k||d)&&h.draw();return 0};this.fnVersionCheck=x.fnVersionCheck;var b=this,c=a===k,d=this.length;c&&(a={});this.oApi=this.internal=x.internal;for(var e in n.ext.internal)e&&(this[e]=Lb(e));this.each(function(){var e={},g=1<d?Xa(e,a,!0):a,j=0,i,e=this.getAttribute("id"),m=!1,l=n.defaults,q=h(this);if("table"!=this.nodeName.toLowerCase())K(null,0,"Non-table node initialisation ("+this.nodeName+")",2);else{eb(l);fb(l.column);J(l,l,!0);J(l.column,l.column,!0);J(l,h.extend(g,q.data()));var t=n.settings,
j=0;for(i=t.length;j<i;j++){var o=t[j];if(o.nTable==this||o.nTHead&&o.nTHead.parentNode==this||o.nTFoot&&o.nTFoot.parentNode==this){var s=g.bRetrieve!==k?g.bRetrieve:l.bRetrieve;if(c||s)return o.oInstance;if(g.bDestroy!==k?g.bDestroy:l.bDestroy){o.oInstance.fnDestroy();break}else{K(o,0,"Cannot reinitialise DataTable",3);return}}if(o.sTableId==this.id){t.splice(j,1);break}}if(null===e||""===e)this.id=e="DataTables_Table_"+n.ext._unique++;var p=h.extend(!0,{},n.models.oSettings,{sDestroyWidth:q[0].style.width,
sInstance:e,sTableId:e});p.nTable=this;p.oApi=b.internal;p.oInit=g;t.push(p);p.oInstance=1===b.length?b:q.dataTable();eb(g);Ca(g.oLanguage);g.aLengthMenu&&!g.iDisplayLength&&(g.iDisplayLength=h.isArray(g.aLengthMenu[0])?g.aLengthMenu[0][0]:g.aLengthMenu[0]);g=Xa(h.extend(!0,{},l),g);F(p.oFeatures,g,"bPaginate bLengthChange bFilter bSort bSortMulti bInfo bProcessing bAutoWidth bSortClasses bServerSide bDeferRender".split(" "));F(p,g,["asStripeClasses","ajax","fnServerData","fnFormatNumber","sServerMethod",
"aaSorting","aaSortingFixed","aLengthMenu","sPaginationType","sAjaxSource","sAjaxDataProp","iStateDuration","sDom","bSortCellsTop","iTabIndex","fnStateLoadCallback","fnStateSaveCallback","renderer","searchDelay","rowId",["iCookieDuration","iStateDuration"],["oSearch","oPreviousSearch"],["aoSearchCols","aoPreSearchCols"],["iDisplayLength","_iDisplayLength"]]);F(p.oScroll,g,[["sScrollX","sX"],["sScrollXInner","sXInner"],["sScrollY","sY"],["bScrollCollapse","bCollapse"]]);F(p.oLanguage,g,"fnInfoCallback");
z(p,"aoDrawCallback",g.fnDrawCallback,"user");z(p,"aoServerParams",g.fnServerParams,"user");z(p,"aoStateSaveParams",g.fnStateSaveParams,"user");z(p,"aoStateLoadParams",g.fnStateLoadParams,"user");z(p,"aoStateLoaded",g.fnStateLoaded,"user");z(p,"aoRowCallback",g.fnRowCallback,"user");z(p,"aoRowCreatedCallback",g.fnCreatedRow,"user");z(p,"aoHeaderCallback",g.fnHeaderCallback,"user");z(p,"aoFooterCallback",g.fnFooterCallback,"user");z(p,"aoInitComplete",g.fnInitComplete,"user");z(p,"aoPreDrawCallback",
g.fnPreDrawCallback,"user");p.rowIdFn=S(g.rowId);gb(p);var u=p.oClasses;h.extend(u,n.ext.classes,g.oClasses);q.addClass(u.sTable);p.iInitDisplayStart===k&&(p.iInitDisplayStart=g.iDisplayStart,p._iDisplayStart=g.iDisplayStart);null!==g.iDeferLoading&&(p.bDeferLoading=!0,e=h.isArray(g.iDeferLoading),p._iRecordsDisplay=e?g.iDeferLoading[0]:g.iDeferLoading,p._iRecordsTotal=e?g.iDeferLoading[1]:g.iDeferLoading);var v=p.oLanguage;h.extend(!0,v,g.oLanguage);v.sUrl&&(h.ajax({dataType:"json",url:v.sUrl,success:function(a){Ca(a);
J(l.oLanguage,a);h.extend(true,v,a);ha(p)},error:function(){ha(p)}}),m=!0);null===g.asStripeClasses&&(p.asStripeClasses=[u.sStripeOdd,u.sStripeEven]);var e=p.asStripeClasses,x=q.children("tbody").find("tr").eq(0);-1!==h.inArray(!0,h.map(e,function(a){return x.hasClass(a)}))&&(h("tbody tr",this).removeClass(e.join(" ")),p.asDestroyStripes=e.slice());e=[];t=this.getElementsByTagName("thead");0!==t.length&&(ea(p.aoHeader,t[0]),e=ra(p));if(null===g.aoColumns){t=[];j=0;for(i=e.length;j<i;j++)t.push(null)}else t=
g.aoColumns;j=0;for(i=t.length;j<i;j++)Ea(p,e?e[j]:null);ib(p,g.aoColumnDefs,t,function(a,b){ka(p,a,b)});if(x.length){var w=function(a,b){return a.getAttribute("data-"+b)!==null?b:null};h(x[0]).children("th, td").each(function(a,b){var c=p.aoColumns[a];if(c.mData===a){var d=w(b,"sort")||w(b,"order"),e=w(b,"filter")||w(b,"search");if(d!==null||e!==null){c.mData={_:a+".display",sort:d!==null?a+".@data-"+d:k,type:d!==null?a+".@data-"+d:k,filter:e!==null?a+".@data-"+e:k};ka(p,a)}}})}var U=p.oFeatures,
e=function(){if(g.aaSorting===k){var a=p.aaSorting;j=0;for(i=a.length;j<i;j++)a[j][1]=p.aoColumns[j].asSorting[0]}wa(p);U.bSort&&z(p,"aoDrawCallback",function(){if(p.bSorted){var a=X(p),b={};h.each(a,function(a,c){b[c.src]=c.dir});r(p,null,"order",[p,a,b]);Ib(p)}});z(p,"aoDrawCallback",function(){(p.bSorted||y(p)==="ssp"||U.bDeferRender)&&wa(p)},"sc");var a=q.children("caption").each(function(){this._captionSide=h(this).css("caption-side")}),b=q.children("thead");b.length===0&&(b=h("<thead/>").appendTo(q));
p.nTHead=b[0];b=q.children("tbody");b.length===0&&(b=h("<tbody/>").appendTo(q));p.nTBody=b[0];b=q.children("tfoot");if(b.length===0&&a.length>0&&(p.oScroll.sX!==""||p.oScroll.sY!==""))b=h("<tfoot/>").appendTo(q);if(b.length===0||b.children().length===0)q.addClass(u.sNoFooter);else if(b.length>0){p.nTFoot=b[0];ea(p.aoFooter,p.nTFoot)}if(g.aaData)for(j=0;j<g.aaData.length;j++)O(p,g.aaData[j]);else(p.bDeferLoading||y(p)=="dom")&&na(p,h(p.nTBody).children("tr"));p.aiDisplay=p.aiDisplayMaster.slice();
p.bInitialised=true;m===false&&ha(p)};g.bStateSave?(U.bStateSave=!0,z(p,"aoDrawCallback",xa,"state_save"),Jb(p,g,e)):e()}});b=null;return this},x,s,o,u,Za={},Mb=/[\r\n]/g,Aa=/<.*?>/g,Zb=/^\d{2,4}[\.\/\-]\d{1,2}[\.\/\-]\d{1,2}([T ]{1}\d{1,2}[:\.]\d{2}([\.:]\d{2})?)?$/,$b=RegExp("(\\/|\\.|\\*|\\+|\\?|\\||\\(|\\)|\\[|\\]|\\{|\\}|\\\\|\\$|\\^|\\-)","g"),Ya=/[',$£€¥%\u2009\u202F\u20BD\u20a9\u20BArfkɃΞ]/gi,M=function(a){return!a||!0===a||"-"===a?!0:!1},Nb=function(a){var b=parseInt(a,10);return!isNaN(b)&&
isFinite(a)?b:null},Ob=function(a,b){Za[b]||(Za[b]=RegExp(Qa(b),"g"));return"string"===typeof a&&"."!==b?a.replace(/\./g,"").replace(Za[b],"."):a},$a=function(a,b,c){var d="string"===typeof a;if(M(a))return!0;b&&d&&(a=Ob(a,b));c&&d&&(a=a.replace(Ya,""));return!isNaN(parseFloat(a))&&isFinite(a)},Pb=function(a,b,c){return M(a)?!0:!(M(a)||"string"===typeof a)?null:$a(a.replace(Aa,""),b,c)?!0:null},D=function(a,b,c){var d=[],e=0,f=a.length;if(c!==k)for(;e<f;e++)a[e]&&a[e][b]&&d.push(a[e][b][c]);else for(;e<
f;e++)a[e]&&d.push(a[e][b]);return d},ja=function(a,b,c,d){var e=[],f=0,g=b.length;if(d!==k)for(;f<g;f++)a[b[f]][c]&&e.push(a[b[f]][c][d]);else for(;f<g;f++)e.push(a[b[f]][c]);return e},Y=function(a,b){var c=[],d;b===k?(b=0,d=a):(d=b,b=a);for(var e=b;e<d;e++)c.push(e);return c},Qb=function(a){for(var b=[],c=0,d=a.length;c<d;c++)a[c]&&b.push(a[c]);return b},qa=function(a){var b;a:{if(!(2>a.length)){b=a.slice().sort();for(var c=b[0],d=1,e=b.length;d<e;d++){if(b[d]===c){b=!1;break a}c=b[d]}}b=!0}if(b)return a.slice();
b=[];var e=a.length,f,g=0,d=0;a:for(;d<e;d++){c=a[d];for(f=0;f<g;f++)if(b[f]===c)continue a;b.push(c);g++}return b};n.util={throttle:function(a,b){var c=b!==k?b:200,d,e;return function(){var b=this,g=+new Date,j=arguments;d&&g<d+c?(clearTimeout(e),e=setTimeout(function(){d=k;a.apply(b,j)},c)):(d=g,a.apply(b,j))}},escapeRegex:function(a){return a.replace($b,"\\$1")}};var A=function(a,b,c){a[b]!==k&&(a[c]=a[b])},ca=/\[.*?\]$/,W=/\(\)$/,Qa=n.util.escapeRegex,va=h("<div>")[0],Wb=va.textContent!==k,Yb=
/<.*?>/g,Oa=n.util.throttle,Rb=[],w=Array.prototype,ac=function(a){var b,c,d=n.settings,e=h.map(d,function(a){return a.nTable});if(a){if(a.nTable&&a.oApi)return[a];if(a.nodeName&&"table"===a.nodeName.toLowerCase())return b=h.inArray(a,e),-1!==b?[d[b]]:null;if(a&&"function"===typeof a.settings)return a.settings().toArray();"string"===typeof a?c=h(a):a instanceof h&&(c=a)}else return[];if(c)return c.map(function(){b=h.inArray(this,e);return-1!==b?d[b]:null}).toArray()};s=function(a,b){if(!(this instanceof
s))return new s(a,b);var c=[],d=function(a){(a=ac(a))&&(c=c.concat(a))};if(h.isArray(a))for(var e=0,f=a.length;e<f;e++)d(a[e]);else d(a);this.context=qa(c);b&&h.merge(this,b);this.selector={rows:null,cols:null,opts:null};s.extend(this,this,Rb)};n.Api=s;h.extend(s.prototype,{any:function(){return 0!==this.count()},concat:w.concat,context:[],count:function(){return this.flatten().length},each:function(a){for(var b=0,c=this.length;b<c;b++)a.call(this,this[b],b,this);return this},eq:function(a){var b=
this.context;return b.length>a?new s(b[a],this[a]):null},filter:function(a){var b=[];if(w.filter)b=w.filter.call(this,a,this);else for(var c=0,d=this.length;c<d;c++)a.call(this,this[c],c,this)&&b.push(this[c]);return new s(this.context,b)},flatten:function(){var a=[];return new s(this.context,a.concat.apply(a,this.toArray()))},join:w.join,indexOf:w.indexOf||function(a,b){for(var c=b||0,d=this.length;c<d;c++)if(this[c]===a)return c;return-1},iterator:function(a,b,c,d){var e=[],f,g,j,h,m,l=this.context,
n,o,u=this.selector;"string"===typeof a&&(d=c,c=b,b=a,a=!1);g=0;for(j=l.length;g<j;g++){var r=new s(l[g]);if("table"===b)f=c.call(r,l[g],g),f!==k&&e.push(f);else if("columns"===b||"rows"===b)f=c.call(r,l[g],this[g],g),f!==k&&e.push(f);else if("column"===b||"column-rows"===b||"row"===b||"cell"===b){o=this[g];"column-rows"===b&&(n=Ba(l[g],u.opts));h=0;for(m=o.length;h<m;h++)f=o[h],f="cell"===b?c.call(r,l[g],f.row,f.column,g,h):c.call(r,l[g],f,g,h,n),f!==k&&e.push(f)}}return e.length||d?(a=new s(l,a?
e.concat.apply([],e):e),b=a.selector,b.rows=u.rows,b.cols=u.cols,b.opts=u.opts,a):this},lastIndexOf:w.lastIndexOf||function(a,b){return this.indexOf.apply(this.toArray.reverse(),arguments)},length:0,map:function(a){var b=[];if(w.map)b=w.map.call(this,a,this);else for(var c=0,d=this.length;c<d;c++)b.push(a.call(this,this[c],c));return new s(this.context,b)},pluck:function(a){return this.map(function(b){return b[a]})},pop:w.pop,push:w.push,reduce:w.reduce||function(a,b){return hb(this,a,b,0,this.length,
1)},reduceRight:w.reduceRight||function(a,b){return hb(this,a,b,this.length-1,-1,-1)},reverse:w.reverse,selector:null,shift:w.shift,slice:function(){return new s(this.context,this)},sort:w.sort,splice:w.splice,toArray:function(){return w.slice.call(this)},to$:function(){return h(this)},toJQuery:function(){return h(this)},unique:function(){return new s(this.context,qa(this))},unshift:w.unshift});s.extend=function(a,b,c){if(c.length&&b&&(b instanceof s||b.__dt_wrapper)){var d,e,f,g=function(a,b,c){return function(){var d=
b.apply(a,arguments);s.extend(d,d,c.methodExt);return d}};d=0;for(e=c.length;d<e;d++)f=c[d],b[f.name]="function"===typeof f.val?g(a,f.val,f):h.isPlainObject(f.val)?{}:f.val,b[f.name].__dt_wrapper=!0,s.extend(a,b[f.name],f.propExt)}};s.register=o=function(a,b){if(h.isArray(a))for(var c=0,d=a.length;c<d;c++)s.register(a[c],b);else for(var e=a.split("."),f=Rb,g,j,c=0,d=e.length;c<d;c++){g=(j=-1!==e[c].indexOf("()"))?e[c].replace("()",""):e[c];var i;a:{i=0;for(var m=f.length;i<m;i++)if(f[i].name===g){i=
f[i];break a}i=null}i||(i={name:g,val:{},methodExt:[],propExt:[]},f.push(i));c===d-1?i.val=b:f=j?i.methodExt:i.propExt}};s.registerPlural=u=function(a,b,c){s.register(a,c);s.register(b,function(){var a=c.apply(this,arguments);return a===this?this:a instanceof s?a.length?h.isArray(a[0])?new s(a.context,a[0]):a[0]:k:a})};o("tables()",function(a){var b;if(a){b=s;var c=this.context;if("number"===typeof a)a=[c[a]];else var d=h.map(c,function(a){return a.nTable}),a=h(d).filter(a).map(function(){var a=h.inArray(this,
d);return c[a]}).toArray();b=new b(a)}else b=this;return b});o("table()",function(a){var a=this.tables(a),b=a.context;return b.length?new s(b[0]):a});u("tables().nodes()","table().node()",function(){return this.iterator("table",function(a){return a.nTable},1)});u("tables().body()","table().body()",function(){return this.iterator("table",function(a){return a.nTBody},1)});u("tables().header()","table().header()",function(){return this.iterator("table",function(a){return a.nTHead},1)});u("tables().footer()",
"table().footer()",function(){return this.iterator("table",function(a){return a.nTFoot},1)});u("tables().containers()","table().container()",function(){return this.iterator("table",function(a){return a.nTableWrapper},1)});o("draw()",function(a){return this.iterator("table",function(b){"page"===a?P(b):("string"===typeof a&&(a="full-hold"===a?!1:!0),T(b,!1===a))})});o("page()",function(a){return a===k?this.page.info().page:this.iterator("table",function(b){Ta(b,a)})});o("page.info()",function(){if(0===
this.context.length)return k;var a=this.context[0],b=a._iDisplayStart,c=a.oFeatures.bPaginate?a._iDisplayLength:-1,d=a.fnRecordsDisplay(),e=-1===c;return{page:e?0:Math.floor(b/c),pages:e?1:Math.ceil(d/c),start:b,end:a.fnDisplayEnd(),length:c,recordsTotal:a.fnRecordsTotal(),recordsDisplay:d,serverSide:"ssp"===y(a)}});o("page.len()",function(a){return a===k?0!==this.context.length?this.context[0]._iDisplayLength:k:this.iterator("table",function(b){Ra(b,a)})});var Sb=function(a,b,c){if(c){var d=new s(a);
d.one("draw",function(){c(d.ajax.json())})}if("ssp"==y(a))T(a,b);else{C(a,!0);var e=a.jqXHR;e&&4!==e.readyState&&e.abort();sa(a,[],function(c){oa(a);for(var c=ta(a,c),d=0,e=c.length;d<e;d++)O(a,c[d]);T(a,b);C(a,!1)})}};o("ajax.json()",function(){var a=this.context;if(0<a.length)return a[0].json});o("ajax.params()",function(){var a=this.context;if(0<a.length)return a[0].oAjaxData});o("ajax.reload()",function(a,b){return this.iterator("table",function(c){Sb(c,!1===b,a)})});o("ajax.url()",function(a){var b=
this.context;if(a===k){if(0===b.length)return k;b=b[0];return b.ajax?h.isPlainObject(b.ajax)?b.ajax.url:b.ajax:b.sAjaxSource}return this.iterator("table",function(b){h.isPlainObject(b.ajax)?b.ajax.url=a:b.ajax=a})});o("ajax.url().load()",function(a,b){return this.iterator("table",function(c){Sb(c,!1===b,a)})});var ab=function(a,b,c,d,e){var f=[],g,j,i,m,l,n;i=typeof b;if(!b||"string"===i||"function"===i||b.length===k)b=[b];i=0;for(m=b.length;i<m;i++){j=b[i]&&b[i].split&&!b[i].match(/[\[\(:]/)?b[i].split(","):
[b[i]];l=0;for(n=j.length;l<n;l++)(g=c("string"===typeof j[l]?h.trim(j[l]):j[l]))&&g.length&&(f=f.concat(g))}a=x.selector[a];if(a.length){i=0;for(m=a.length;i<m;i++)f=a[i](d,e,f)}return qa(f)},bb=function(a){a||(a={});a.filter&&a.search===k&&(a.search=a.filter);return h.extend({search:"none",order:"current",page:"all"},a)},cb=function(a){for(var b=0,c=a.length;b<c;b++)if(0<a[b].length)return a[0]=a[b],a[0].length=1,a.length=1,a.context=[a.context[b]],a;a.length=0;return a},Ba=function(a,b){var c,
d,e,f=[],g=a.aiDisplay;e=a.aiDisplayMaster;var j=b.search;c=b.order;d=b.page;if("ssp"==y(a))return"removed"===j?[]:Y(0,e.length);if("current"==d){c=a._iDisplayStart;for(d=a.fnDisplayEnd();c<d;c++)f.push(g[c])}else if("current"==c||"applied"==c)if("none"==j)f=e.slice();else if("applied"==j)f=g.slice();else{if("removed"==j){var i={};c=0;for(d=g.length;c<d;c++)i[g[c]]=null;f=h.map(e,function(a){return!i.hasOwnProperty(a)?a:null})}}else if("index"==c||"original"==c){c=0;for(d=a.aoData.length;c<d;c++)"none"==
j?f.push(c):(e=h.inArray(c,g),(-1===e&&"removed"==j||0<=e&&"applied"==j)&&f.push(c))}return f};o("rows()",function(a,b){a===k?a="":h.isPlainObject(a)&&(b=a,a="");var b=bb(b),c=this.iterator("table",function(c){var e=b,f;return ab("row",a,function(a){var b=Nb(a),i=c.aoData;if(b!==null&&!e)return[b];f||(f=Ba(c,e));if(b!==null&&h.inArray(b,f)!==-1)return[b];if(a===null||a===k||a==="")return f;if(typeof a==="function")return h.map(f,function(b){var c=i[b];return a(b,c._aData,c.nTr)?b:null});if(a.nodeName){var b=
a._DT_RowIndex,m=a._DT_CellIndex;if(b!==k)return i[b]&&i[b].nTr===a?[b]:[];if(m)return i[m.row]&&i[m.row].nTr===a?[m.row]:[];b=h(a).closest("*[data-dt-row]");return b.length?[b.data("dt-row")]:[]}if(typeof a==="string"&&a.charAt(0)==="#"){b=c.aIds[a.replace(/^#/,"")];if(b!==k)return[b.idx]}b=Qb(ja(c.aoData,f,"nTr"));return h(b).filter(a).map(function(){return this._DT_RowIndex}).toArray()},c,e)},1);c.selector.rows=a;c.selector.opts=b;return c});o("rows().nodes()",function(){return this.iterator("row",
function(a,b){return a.aoData[b].nTr||k},1)});o("rows().data()",function(){return this.iterator(!0,"rows",function(a,b){return ja(a.aoData,b,"_aData")},1)});u("rows().cache()","row().cache()",function(a){return this.iterator("row",function(b,c){var d=b.aoData[c];return"search"===a?d._aFilterData:d._aSortData},1)});u("rows().invalidate()","row().invalidate()",function(a){return this.iterator("row",function(b,c){da(b,c,a)})});u("rows().indexes()","row().index()",function(){return this.iterator("row",
function(a,b){return b},1)});u("rows().ids()","row().id()",function(a){for(var b=[],c=this.context,d=0,e=c.length;d<e;d++)for(var f=0,g=this[d].length;f<g;f++){var h=c[d].rowIdFn(c[d].aoData[this[d][f]]._aData);b.push((!0===a?"#":"")+h)}return new s(c,b)});u("rows().remove()","row().remove()",function(){var a=this;this.iterator("row",function(b,c,d){var e=b.aoData,f=e[c],g,h,i,m,l;e.splice(c,1);g=0;for(h=e.length;g<h;g++)if(i=e[g],l=i.anCells,null!==i.nTr&&(i.nTr._DT_RowIndex=g),null!==l){i=0;for(m=
l.length;i<m;i++)l[i]._DT_CellIndex.row=g}pa(b.aiDisplayMaster,c);pa(b.aiDisplay,c);pa(a[d],c,!1);0<b._iRecordsDisplay&&b._iRecordsDisplay--;Sa(b);c=b.rowIdFn(f._aData);c!==k&&delete b.aIds[c]});this.iterator("table",function(a){for(var c=0,d=a.aoData.length;c<d;c++)a.aoData[c].idx=c});return this});o("rows.add()",function(a){var b=this.iterator("table",function(b){var c,f,g,h=[];f=0;for(g=a.length;f<g;f++)c=a[f],c.nodeName&&"TR"===c.nodeName.toUpperCase()?h.push(na(b,c)[0]):h.push(O(b,c));return h},
1),c=this.rows(-1);c.pop();h.merge(c,b);return c});o("row()",function(a,b){return cb(this.rows(a,b))});o("row().data()",function(a){var b=this.context;if(a===k)return b.length&&this.length?b[0].aoData[this[0]]._aData:k;var c=b[0].aoData[this[0]];c._aData=a;h.isArray(a)&&c.nTr.id&&N(b[0].rowId)(a,c.nTr.id);da(b[0],this[0],"data");return this});o("row().node()",function(){var a=this.context;return a.length&&this.length?a[0].aoData[this[0]].nTr||null:null});o("row.add()",function(a){a instanceof h&&
a.length&&(a=a[0]);var b=this.iterator("table",function(b){return a.nodeName&&"TR"===a.nodeName.toUpperCase()?na(b,a)[0]:O(b,a)});return this.row(b[0])});var db=function(a,b){var c=a.context;if(c.length&&(c=c[0].aoData[b!==k?b:a[0]])&&c._details)c._details.remove(),c._detailsShow=k,c._details=k},Tb=function(a,b){var c=a.context;if(c.length&&a.length){var d=c[0].aoData[a[0]];if(d._details){(d._detailsShow=b)?d._details.insertAfter(d.nTr):d._details.detach();var e=c[0],f=new s(e),g=e.aoData;f.off("draw.dt.DT_details column-visibility.dt.DT_details destroy.dt.DT_details");
0<D(g,"_details").length&&(f.on("draw.dt.DT_details",function(a,b){e===b&&f.rows({page:"current"}).eq(0).each(function(a){a=g[a];a._detailsShow&&a._details.insertAfter(a.nTr)})}),f.on("column-visibility.dt.DT_details",function(a,b){if(e===b)for(var c,d=V(b),f=0,h=g.length;f<h;f++)c=g[f],c._details&&c._details.children("td[colspan]").attr("colspan",d)}),f.on("destroy.dt.DT_details",function(a,b){if(e===b)for(var c=0,d=g.length;c<d;c++)g[c]._details&&db(f,c)}))}}};o("row().child()",function(a,b){var c=
this.context;if(a===k)return c.length&&this.length?c[0].aoData[this[0]]._details:k;if(!0===a)this.child.show();else if(!1===a)db(this);else if(c.length&&this.length){var d=c[0],c=c[0].aoData[this[0]],e=[],f=function(a,b){if(h.isArray(a)||a instanceof h)for(var c=0,k=a.length;c<k;c++)f(a[c],b);else a.nodeName&&"tr"===a.nodeName.toLowerCase()?e.push(a):(c=h("<tr><td/></tr>").addClass(b),h("td",c).addClass(b).html(a)[0].colSpan=V(d),e.push(c[0]))};f(a,b);c._details&&c._details.detach();c._details=h(e);
c._detailsShow&&c._details.insertAfter(c.nTr)}return this});o(["row().child.show()","row().child().show()"],function(){Tb(this,!0);return this});o(["row().child.hide()","row().child().hide()"],function(){Tb(this,!1);return this});o(["row().child.remove()","row().child().remove()"],function(){db(this);return this});o("row().child.isShown()",function(){var a=this.context;return a.length&&this.length?a[0].aoData[this[0]]._detailsShow||!1:!1});var bc=/^([^:]+):(name|visIdx|visible)$/,Ub=function(a,b,
c,d,e){for(var c=[],d=0,f=e.length;d<f;d++)c.push(B(a,e[d],b));return c};o("columns()",function(a,b){a===k?a="":h.isPlainObject(a)&&(b=a,a="");var b=bb(b),c=this.iterator("table",function(c){var e=a,f=b,g=c.aoColumns,j=D(g,"sName"),i=D(g,"nTh");return ab("column",e,function(a){var b=Nb(a);if(a==="")return Y(g.length);if(b!==null)return[b>=0?b:g.length+b];if(typeof a==="function"){var e=Ba(c,f);return h.map(g,function(b,f){return a(f,Ub(c,f,0,0,e),i[f])?f:null})}var k=typeof a==="string"?a.match(bc):
"";if(k)switch(k[2]){case "visIdx":case "visible":b=parseInt(k[1],10);if(b<0){var n=h.map(g,function(a,b){return a.bVisible?b:null});return[n[n.length+b]]}return[aa(c,b)];case "name":return h.map(j,function(a,b){return a===k[1]?b:null});default:return[]}if(a.nodeName&&a._DT_CellIndex)return[a._DT_CellIndex.column];b=h(i).filter(a).map(function(){return h.inArray(this,i)}).toArray();if(b.length||!a.nodeName)return b;b=h(a).closest("*[data-dt-column]");return b.length?[b.data("dt-column")]:[]},c,f)},
1);c.selector.cols=a;c.selector.opts=b;return c});u("columns().header()","column().header()",function(){return this.iterator("column",function(a,b){return a.aoColumns[b].nTh},1)});u("columns().footer()","column().footer()",function(){return this.iterator("column",function(a,b){return a.aoColumns[b].nTf},1)});u("columns().data()","column().data()",function(){return this.iterator("column-rows",Ub,1)});u("columns().dataSrc()","column().dataSrc()",function(){return this.iterator("column",function(a,b){return a.aoColumns[b].mData},
1)});u("columns().cache()","column().cache()",function(a){return this.iterator("column-rows",function(b,c,d,e,f){return ja(b.aoData,f,"search"===a?"_aFilterData":"_aSortData",c)},1)});u("columns().nodes()","column().nodes()",function(){return this.iterator("column-rows",function(a,b,c,d,e){return ja(a.aoData,e,"anCells",b)},1)});u("columns().visible()","column().visible()",function(a,b){var c=this.iterator("column",function(b,c){if(a===k)return b.aoColumns[c].bVisible;var f=b.aoColumns,g=f[c],j=b.aoData,
i,m,l;if(a!==k&&g.bVisible!==a){if(a){var n=h.inArray(!0,D(f,"bVisible"),c+1);i=0;for(m=j.length;i<m;i++)l=j[i].nTr,f=j[i].anCells,l&&l.insertBefore(f[c],f[n]||null)}else h(D(b.aoData,"anCells",c)).detach();g.bVisible=a;fa(b,b.aoHeader);fa(b,b.aoFooter);b.aiDisplay.length||h(b.nTBody).find("td[colspan]").attr("colspan",V(b));xa(b)}});a!==k&&(this.iterator("column",function(c,e){r(c,null,"column-visibility",[c,e,a,b])}),(b===k||b)&&this.columns.adjust());return c});u("columns().indexes()","column().index()",
function(a){return this.iterator("column",function(b,c){return"visible"===a?ba(b,c):c},1)});o("columns.adjust()",function(){return this.iterator("table",function(a){$(a)},1)});o("column.index()",function(a,b){if(0!==this.context.length){var c=this.context[0];if("fromVisible"===a||"toData"===a)return aa(c,b);if("fromData"===a||"toVisible"===a)return ba(c,b)}});o("column()",function(a,b){return cb(this.columns(a,b))});o("cells()",function(a,b,c){h.isPlainObject(a)&&(a.row===k?(c=a,a=null):(c=b,b=null));
h.isPlainObject(b)&&(c=b,b=null);if(null===b||b===k)return this.iterator("table",function(b){var d=a,e=bb(c),f=b.aoData,g=Ba(b,e),j=Qb(ja(f,g,"anCells")),i=h([].concat.apply([],j)),l,m=b.aoColumns.length,n,o,u,s,r,v;return ab("cell",d,function(a){var c=typeof a==="function";if(a===null||a===k||c){n=[];o=0;for(u=g.length;o<u;o++){l=g[o];for(s=0;s<m;s++){r={row:l,column:s};if(c){v=f[l];a(r,B(b,l,s),v.anCells?v.anCells[s]:null)&&n.push(r)}else n.push(r)}}return n}if(h.isPlainObject(a))return a.column!==
k&&a.row!==k&&h.inArray(a.row,g)!==-1?[a]:[];c=i.filter(a).map(function(a,b){return{row:b._DT_CellIndex.row,column:b._DT_CellIndex.column}}).toArray();if(c.length||!a.nodeName)return c;v=h(a).closest("*[data-dt-row]");return v.length?[{row:v.data("dt-row"),column:v.data("dt-column")}]:[]},b,e)});var d=this.columns(b),e=this.rows(a),f,g,j,i,m;this.iterator("table",function(a,b){f=[];g=0;for(j=e[b].length;g<j;g++){i=0;for(m=d[b].length;i<m;i++)f.push({row:e[b][g],column:d[b][i]})}},1);var l=this.cells(f,
c);h.extend(l.selector,{cols:b,rows:a,opts:c});return l});u("cells().nodes()","cell().node()",function(){return this.iterator("cell",function(a,b,c){return(a=a.aoData[b])&&a.anCells?a.anCells[c]:k},1)});o("cells().data()",function(){return this.iterator("cell",function(a,b,c){return B(a,b,c)},1)});u("cells().cache()","cell().cache()",function(a){a="search"===a?"_aFilterData":"_aSortData";return this.iterator("cell",function(b,c,d){return b.aoData[c][a][d]},1)});u("cells().render()","cell().render()",
function(a){return this.iterator("cell",function(b,c,d){return B(b,c,d,a)},1)});u("cells().indexes()","cell().index()",function(){return this.iterator("cell",function(a,b,c){return{row:b,column:c,columnVisible:ba(a,c)}},1)});u("cells().invalidate()","cell().invalidate()",function(a){return this.iterator("cell",function(b,c,d){da(b,c,a,d)})});o("cell()",function(a,b,c){return cb(this.cells(a,b,c))});o("cell().data()",function(a){var b=this.context,c=this[0];if(a===k)return b.length&&c.length?B(b[0],
c[0].row,c[0].column):k;jb(b[0],c[0].row,c[0].column,a);da(b[0],c[0].row,"data",c[0].column);return this});o("order()",function(a,b){var c=this.context;if(a===k)return 0!==c.length?c[0].aaSorting:k;"number"===typeof a?a=[[a,b]]:a.length&&!h.isArray(a[0])&&(a=Array.prototype.slice.call(arguments));return this.iterator("table",function(b){b.aaSorting=a.slice()})});o("order.listener()",function(a,b,c){return this.iterator("table",function(d){Ma(d,a,b,c)})});o("order.fixed()",function(a){if(!a){var b=
this.context,b=b.length?b[0].aaSortingFixed:k;return h.isArray(b)?{pre:b}:b}return this.iterator("table",function(b){b.aaSortingFixed=h.extend(!0,{},a)})});o(["columns().order()","column().order()"],function(a){var b=this;return this.iterator("table",function(c,d){var e=[];h.each(b[d],function(b,c){e.push([c,a])});c.aaSorting=e})});o("search()",function(a,b,c,d){var e=this.context;return a===k?0!==e.length?e[0].oPreviousSearch.sSearch:k:this.iterator("table",function(e){e.oFeatures.bFilter&&ga(e,
h.extend({},e.oPreviousSearch,{sSearch:a+"",bRegex:null===b?!1:b,bSmart:null===c?!0:c,bCaseInsensitive:null===d?!0:d}),1)})});u("columns().search()","column().search()",function(a,b,c,d){return this.iterator("column",function(e,f){var g=e.aoPreSearchCols;if(a===k)return g[f].sSearch;e.oFeatures.bFilter&&(h.extend(g[f],{sSearch:a+"",bRegex:null===b?!1:b,bSmart:null===c?!0:c,bCaseInsensitive:null===d?!0:d}),ga(e,e.oPreviousSearch,1))})});o("state()",function(){return this.context.length?this.context[0].oSavedState:
null});o("state.clear()",function(){return this.iterator("table",function(a){a.fnStateSaveCallback.call(a.oInstance,a,{})})});o("state.loaded()",function(){return this.context.length?this.context[0].oLoadedState:null});o("state.save()",function(){return this.iterator("table",function(a){xa(a)})});n.versionCheck=n.fnVersionCheck=function(a){for(var b=n.version.split("."),a=a.split("."),c,d,e=0,f=a.length;e<f;e++)if(c=parseInt(b[e],10)||0,d=parseInt(a[e],10)||0,c!==d)return c>d;return!0};n.isDataTable=
n.fnIsDataTable=function(a){var b=h(a).get(0),c=!1;if(a instanceof n.Api)return!0;h.each(n.settings,function(a,e){var f=e.nScrollHead?h("table",e.nScrollHead)[0]:null,g=e.nScrollFoot?h("table",e.nScrollFoot)[0]:null;if(e.nTable===b||f===b||g===b)c=!0});return c};n.tables=n.fnTables=function(a){var b=!1;h.isPlainObject(a)&&(b=a.api,a=a.visible);var c=h.map(n.settings,function(b){if(!a||a&&h(b.nTable).is(":visible"))return b.nTable});return b?new s(c):c};n.camelToHungarian=J;o("$()",function(a,b){var c=
this.rows(b).nodes(),c=h(c);return h([].concat(c.filter(a).toArray(),c.find(a).toArray()))});h.each(["on","one","off"],function(a,b){o(b+"()",function(){var a=Array.prototype.slice.call(arguments);a[0]=h.map(a[0].split(/\s/),function(a){return!a.match(/\.dt\b/)?a+".dt":a}).join(" ");var d=h(this.tables().nodes());d[b].apply(d,a);return this})});o("clear()",function(){return this.iterator("table",function(a){oa(a)})});o("settings()",function(){return new s(this.context,this.context)});o("init()",function(){var a=
this.context;return a.length?a[0].oInit:null});o("data()",function(){return this.iterator("table",function(a){return D(a.aoData,"_aData")}).flatten()});o("destroy()",function(a){a=a||!1;return this.iterator("table",function(b){var c=b.nTableWrapper.parentNode,d=b.oClasses,e=b.nTable,f=b.nTBody,g=b.nTHead,j=b.nTFoot,i=h(e),f=h(f),k=h(b.nTableWrapper),l=h.map(b.aoData,function(a){return a.nTr}),o;b.bDestroying=!0;r(b,"aoDestroyCallback","destroy",[b]);a||(new s(b)).columns().visible(!0);k.off(".DT").find(":not(tbody *)").off(".DT");
h(E).off(".DT-"+b.sInstance);e!=g.parentNode&&(i.children("thead").detach(),i.append(g));j&&e!=j.parentNode&&(i.children("tfoot").detach(),i.append(j));b.aaSorting=[];b.aaSortingFixed=[];wa(b);h(l).removeClass(b.asStripeClasses.join(" "));h("th, td",g).removeClass(d.sSortable+" "+d.sSortableAsc+" "+d.sSortableDesc+" "+d.sSortableNone);f.children().detach();f.append(l);g=a?"remove":"detach";i[g]();k[g]();!a&&c&&(c.insertBefore(e,b.nTableReinsertBefore),i.css("width",b.sDestroyWidth).removeClass(d.sTable),
(o=b.asDestroyStripes.length)&&f.children().each(function(a){h(this).addClass(b.asDestroyStripes[a%o])}));c=h.inArray(b,n.settings);-1!==c&&n.settings.splice(c,1)})});h.each(["column","row","cell"],function(a,b){o(b+"s().every()",function(a){var d=this.selector.opts,e=this;return this.iterator(b,function(f,g,h,i,m){a.call(e[b](g,"cell"===b?h:d,"cell"===b?d:k),g,h,i,m)})})});o("i18n()",function(a,b,c){var d=this.context[0],a=S(a)(d.oLanguage);a===k&&(a=b);c!==k&&h.isPlainObject(a)&&(a=a[c]!==k?a[c]:
a._);return a.replace("%d",c)});n.version="1.10.18";n.settings=[];n.models={};n.models.oSearch={bCaseInsensitive:!0,sSearch:"",bRegex:!1,bSmart:!0};n.models.oRow={nTr:null,anCells:null,_aData:[],_aSortData:null,_aFilterData:null,_sFilterRow:null,_sRowStripe:"",src:null,idx:-1};n.models.oColumn={idx:null,aDataSort:null,asSorting:null,bSearchable:null,bSortable:null,bVisible:null,_sManualType:null,_bAttrSrc:!1,fnCreatedCell:null,fnGetData:null,fnSetData:null,mData:null,mRender:null,nTh:null,nTf:null,
sClass:null,sContentPadding:null,sDefaultContent:null,sName:null,sSortDataType:"std",sSortingClass:null,sSortingClassJUI:null,sTitle:null,sType:null,sWidth:null,sWidthOrig:null};n.defaults={aaData:null,aaSorting:[[0,"asc"]],aaSortingFixed:[],ajax:null,aLengthMenu:[10,25,50,100],aoColumns:null,aoColumnDefs:null,aoSearchCols:[],asStripeClasses:null,bAutoWidth:!0,bDeferRender:!1,bDestroy:!1,bFilter:!0,bInfo:!0,bLengthChange:!0,bPaginate:!0,bProcessing:!1,bRetrieve:!1,bScrollCollapse:!1,bServerSide:!1,
bSort:!0,bSortMulti:!0,bSortCellsTop:!1,bSortClasses:!0,bStateSave:!1,fnCreatedRow:null,fnDrawCallback:null,fnFooterCallback:null,fnFormatNumber:function(a){return a.toString().replace(/\B(?=(\d{3})+(?!\d))/g,this.oLanguage.sThousands)},fnHeaderCallback:null,fnInfoCallback:null,fnInitComplete:null,fnPreDrawCallback:null,fnRowCallback:null,fnServerData:null,fnServerParams:null,fnStateLoadCallback:function(a){try{return JSON.parse((-1===a.iStateDuration?sessionStorage:localStorage).getItem("DataTables_"+
a.sInstance+"_"+location.pathname))}catch(b){}},fnStateLoadParams:null,fnStateLoaded:null,fnStateSaveCallback:function(a,b){try{(-1===a.iStateDuration?sessionStorage:localStorage).setItem("DataTables_"+a.sInstance+"_"+location.pathname,JSON.stringify(b))}catch(c){}},fnStateSaveParams:null,iStateDuration:7200,iDeferLoading:null,iDisplayLength:10,iDisplayStart:0,iTabIndex:0,oClasses:{},oLanguage:{oAria:{sSortAscending:": activate to sort column ascending",sSortDescending:": activate to sort column descending"},
oPaginate:{sFirst:"First",sLast:"Last",sNext:"Next",sPrevious:"Previous"},sEmptyTable:"No data available in table",sInfo:"Showing _START_ to _END_ of _TOTAL_ entries",sInfoEmpty:"Showing 0 to 0 of 0 entries",sInfoFiltered:"(filtered from _MAX_ total entries)",sInfoPostFix:"",sDecimal:"",sThousands:",",sLengthMenu:"Show: _MENU_",sLoadingRecords:"Loading...",sProcessing:"Processing...",sSearch:"Search:",sSearchPlaceholder:"",sUrl:"",sZeroRecords:"No matching records found"},oSearch:h.extend({},
n.models.oSearch),sAjaxDataProp:"data",sAjaxSource:null,sDom:"lfrtip",searchDelay:null,sPaginationType:"simple_numbers",sScrollX:"",sScrollXInner:"",sScrollY:"",sServerMethod:"GET",renderer:null,rowId:"DT_RowId"};Z(n.defaults);n.defaults.column={aDataSort:null,iDataSort:-1,asSorting:["asc","desc"],bSearchable:!0,bSortable:!0,bVisible:!0,fnCreatedCell:null,mData:null,mRender:null,sCellType:"td",sClass:"",sContentPadding:"",sDefaultContent:null,sName:"",sSortDataType:"std",sTitle:null,sType:null,sWidth:null};
Z(n.defaults.column);n.models.oSettings={oFeatures:{bAutoWidth:null,bDeferRender:null,bFilter:null,bInfo:null,bLengthChange:null,bPaginate:null,bProcessing:null,bServerSide:null,bSort:null,bSortMulti:null,bSortClasses:null,bStateSave:null},oScroll:{bCollapse:null,iBarWidth:0,sX:null,sXInner:null,sY:null},oLanguage:{fnInfoCallback:null},oBrowser:{bScrollOversize:!1,bScrollbarLeft:!1,bBounding:!1,barWidth:0},ajax:null,aanFeatures:[],aoData:[],aiDisplay:[],aiDisplayMaster:[],aIds:{},aoColumns:[],aoHeader:[],
aoFooter:[],oPreviousSearch:{},aoPreSearchCols:[],aaSorting:null,aaSortingFixed:[],asStripeClasses:null,asDestroyStripes:[],sDestroyWidth:0,aoRowCallback:[],aoHeaderCallback:[],aoFooterCallback:[],aoDrawCallback:[],aoRowCreatedCallback:[],aoPreDrawCallback:[],aoInitComplete:[],aoStateSaveParams:[],aoStateLoadParams:[],aoStateLoaded:[],sTableId:"",nTable:null,nTHead:null,nTFoot:null,nTBody:null,nTableWrapper:null,bDeferLoading:!1,bInitialised:!1,aoOpenRows:[],sDom:null,searchDelay:null,sPaginationType:"two_button",
iStateDuration:0,aoStateSave:[],aoStateLoad:[],oSavedState:null,oLoadedState:null,sAjaxSource:null,sAjaxDataProp:null,bAjaxDataGet:!0,jqXHR:null,json:k,oAjaxData:k,fnServerData:null,aoServerParams:[],sServerMethod:null,fnFormatNumber:null,aLengthMenu:null,iDraw:0,bDrawing:!1,iDrawError:-1,_iDisplayLength:10,_iDisplayStart:0,_iRecordsTotal:0,_iRecordsDisplay:0,oClasses:{},bFiltered:!1,bSorted:!1,bSortCellsTop:null,oInit:null,aoDestroyCallback:[],fnRecordsTotal:function(){return"ssp"==y(this)?1*this._iRecordsTotal:
this.aiDisplayMaster.length},fnRecordsDisplay:function(){return"ssp"==y(this)?1*this._iRecordsDisplay:this.aiDisplay.length},fnDisplayEnd:function(){var a=this._iDisplayLength,b=this._iDisplayStart,c=b+a,d=this.aiDisplay.length,e=this.oFeatures,f=e.bPaginate;return e.bServerSide?!1===f||-1===a?b+d:Math.min(b+a,this._iRecordsDisplay):!f||c>d||-1===a?d:c},oInstance:null,sInstance:null,iTabIndex:0,nScrollHead:null,nScrollFoot:null,aLastSort:[],oPlugins:{},rowIdFn:null,rowId:null};n.ext=x={buttons:{},
classes:{},build:"dt/dt-1.10.18/b-1.5.4/b-html5-1.5.4/b-print-1.5.4/fc-3.2.5/r-2.2.2",errMode:"alert",feature:[],search:[],selector:{cell:[],column:[],row:[]},internal:{},legacy:{ajax:null},pager:{},renderer:{pageButton:{},header:{}},order:{},type:{detect:[],search:{},order:{}},_unique:0,fnVersionCheck:n.fnVersionCheck,iApiIndex:0,oJUIClasses:{},sVersion:n.version};h.extend(x,{afnFiltering:x.search,aTypes:x.type.detect,ofnSearch:x.type.search,oSort:x.type.order,afnSortData:x.order,aoFeatures:x.feature,oApi:x.internal,oStdClasses:x.classes,oPagination:x.pager});
h.extend(n.ext.classes,{sTable:"dataTable",sNoFooter:"no-footer",sPageButton:"paginate_button",sPageButtonActive:"current",sPageButtonDisabled:"disabled",sStripeOdd:"odd",sStripeEven:"even",sRowEmpty:"dataTables_empty",sWrapper:"dataTables_wrapper",sFilter:"dataTables_filter",sInfo:"dataTables_info",sPaging:"dataTables_paginate paging_",sLength:"dataTables_length pl-2",sProcessing:"dataTables_processing",sSortAsc:"sorting_asc",sSortDesc:"sorting_desc",sSortable:"sorting",sSortableAsc:"sorting_asc_disabled",
sSortableDesc:"sorting_desc_disabled",sSortableNone:"sorting_disabled",sSortColumn:"sorting_",sFilterInput:"",sLengthSelect:"",sScrollWrapper:"dataTables_scroll",sScrollHead:"dataTables_scrollHead",sScrollHeadInner:"dataTables_scrollHeadInner",sScrollBody:"dataTables_scrollBody",sScrollFoot:"dataTables_scrollFoot",sScrollFootInner:"dataTables_scrollFootInner",sHeaderTH:"",sFooterTH:"",sSortJUIAsc:"",sSortJUIDesc:"",sSortJUI:"",sSortJUIAscAllowed:"",sSortJUIDescAllowed:"",sSortJUIWrapper:"",sSortIcon:"",
sJUIHeader:"",sJUIFooter:""});var Kb=n.ext.pager;h.extend(Kb,{simple:function(){return["previous","next"]},full:function(){return["first","previous","next","last"]},numbers:function(a,b){return[ia(a,b)]},simple_numbers:function(a,b){return["previous",ia(a,b),"next"]},full_numbers:function(a,b){return["first","previous",ia(a,b),"next","last"]},first_last_numbers:function(a,b){return["first",ia(a,b),"last"]},_numbers:ia,numbers_length:7});h.extend(!0,n.ext.renderer,{pageButton:{_:function(a,b,c,d,e,
f){var g=a.oClasses,j=a.oLanguage.oPaginate,i=a.oLanguage.oAria.paginate||{},m,l,n=0,o=function(b,d){var k,s,u,r,v=function(b){Ta(a,b.data.action,true)};k=0;for(s=d.length;k<s;k++){r=d[k];if(h.isArray(r)){u=h("<"+(r.DT_el||"div")+"/>").appendTo(b);o(u,r)}else{m=null;l="";switch(r){case "ellipsis":b.append('<span class="ellipsis">&#x2026;</span>');break;case "first":m=j.sFirst;l=r+(e>0?"":" "+g.sPageButtonDisabled);break;case "previous":m=j.sPrevious;l=r+(e>0?"":" "+g.sPageButtonDisabled);break;case "next":m=
j.sNext;l=r+(e<f-1?"":" "+g.sPageButtonDisabled);break;case "last":m=j.sLast;l=r+(e<f-1?"":" "+g.sPageButtonDisabled);break;default:m=r+1;l=e===r?g.sPageButtonActive:""}if(m!==null){u=h("<a>",{"class":g.sPageButton+" "+l,"aria-controls":a.sTableId,"aria-label":i[r],"data-dt-idx":n,tabindex:a.iTabIndex,id:c===0&&typeof r==="string"?a.sTableId+"_"+r:null}).html(m).appendTo(b);Wa(u,{action:r},v);n++}}}},s;try{s=h(b).find(H.activeElement).data("dt-idx")}catch(u){}o(h(b).empty(),d);s!==k&&h(b).find("[data-dt-idx="+
s+"]").focus()}}});h.extend(n.ext.type.detect,[function(a,b){var c=b.oLanguage.sDecimal;return $a(a,c)?"num"+c:null},function(a){if(a&&!(a instanceof Date)&&!Zb.test(a))return null;var b=Date.parse(a);return null!==b&&!isNaN(b)||M(a)?"date":null},function(a,b){var c=b.oLanguage.sDecimal;return $a(a,c,!0)?"num-fmt"+c:null},function(a,b){var c=b.oLanguage.sDecimal;return Pb(a,c)?"html-num"+c:null},function(a,b){var c=b.oLanguage.sDecimal;return Pb(a,c,!0)?"html-num-fmt"+c:null},function(a){return M(a)||
"string"===typeof a&&-1!==a.indexOf("<")?"html":null}]);h.extend(n.ext.type.search,{html:function(a){return M(a)?a:"string"===typeof a?a.replace(Mb," ").replace(Aa,""):""},string:function(a){return M(a)?a:"string"===typeof a?a.replace(Mb," "):a}});var za=function(a,b,c,d){if(0!==a&&(!a||"-"===a))return-Infinity;b&&(a=Ob(a,b));a.replace&&(c&&(a=a.replace(c,"")),d&&(a=a.replace(d,"")));return 1*a};h.extend(x.type.order,{"date-pre":function(a){a=Date.parse(a);return isNaN(a)?-Infinity:a},"html-pre":function(a){return M(a)?
"":a.replace?a.replace(/<.*?>/g,"").toLowerCase():a+""},"string-pre":function(a){return M(a)?"":"string"===typeof a?a.toLowerCase():!a.toString?"":a.toString()},"string-asc":function(a,b){return a<b?-1:a>b?1:0},"string-desc":function(a,b){return a<b?1:a>b?-1:0}});Da("");h.extend(!0,n.ext.renderer,{header:{_:function(a,b,c,d){h(a.nTable).on("order.dt.DT",function(e,f,g,h){if(a===f){e=c.idx;b.removeClass(c.sSortingClass+" "+d.sSortAsc+" "+d.sSortDesc).addClass(h[e]=="asc"?d.sSortAsc:h[e]=="desc"?d.sSortDesc:
c.sSortingClass)}})},jqueryui:function(a,b,c,d){h("<div/>").addClass(d.sSortJUIWrapper).append(b.contents()).append(h("<span/>").addClass(d.sSortIcon+" "+c.sSortingClassJUI)).appendTo(b);h(a.nTable).on("order.dt.DT",function(e,f,g,h){if(a===f){e=c.idx;b.removeClass(d.sSortAsc+" "+d.sSortDesc).addClass(h[e]=="asc"?d.sSortAsc:h[e]=="desc"?d.sSortDesc:c.sSortingClass);b.find("span."+d.sSortIcon).removeClass(d.sSortJUIAsc+" "+d.sSortJUIDesc+" "+d.sSortJUI+" "+d.sSortJUIAscAllowed+" "+d.sSortJUIDescAllowed).addClass(h[e]==
"asc"?d.sSortJUIAsc:h[e]=="desc"?d.sSortJUIDesc:c.sSortingClassJUI)}})}}});var Vb=function(a){return"string"===typeof a?a.replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;"):a};n.render={number:function(a,b,c,d,e){return{display:function(f){if("number"!==typeof f&&"string"!==typeof f)return f;var g=0>f?"-":"",h=parseFloat(f);if(isNaN(h))return Vb(f);h=h.toFixed(c);f=Math.abs(h);h=parseInt(f,10);f=c?b+(f-h).toFixed(c).substring(2):"";return g+(d||"")+h.toString().replace(/\B(?=(\d{3})+(?!\d))/g,
a)+f+(e||"")}}},text:function(){return{display:Vb}}};h.extend(n.ext.internal,{_fnExternApiFunc:Lb,_fnBuildAjax:sa,_fnAjaxUpdate:lb,_fnAjaxParameters:ub,_fnAjaxUpdateDraw:vb,_fnAjaxDataSrc:ta,_fnAddColumn:Ea,_fnColumnOptions:ka,_fnAdjustColumnSizing:$,_fnVisibleToColumnIndex:aa,_fnColumnIndexToVisible:ba,_fnVisbleColumns:V,_fnGetColumns:ma,_fnColumnTypes:Ga,_fnApplyColumnDefs:ib,_fnHungarianMap:Z,_fnCamelToHungarian:J,_fnLanguageCompat:Ca,_fnBrowserDetect:gb,_fnAddData:O,_fnAddTr:na,_fnNodeToDataIndex:function(a,
b){return b._DT_RowIndex!==k?b._DT_RowIndex:null},_fnNodeToColumnIndex:function(a,b,c){return h.inArray(c,a.aoData[b].anCells)},_fnGetCellData:B,_fnSetCellData:jb,_fnSplitObjNotation:Ja,_fnGetObjectDataFn:S,_fnSetObjectDataFn:N,_fnGetDataMaster:Ka,_fnClearTable:oa,_fnDeleteIndex:pa,_fnInvalidate:da,_fnGetRowElements:Ia,_fnCreateTr:Ha,_fnBuildHead:kb,_fnDrawHead:fa,_fnDraw:P,_fnReDraw:T,_fnAddOptionsHtml:nb,_fnDetectHeader:ea,_fnGetUniqueThs:ra,_fnFeatureHtmlFilter:pb,_fnFilterComplete:ga,_fnFilterCustom:yb,
_fnFilterColumn:xb,_fnFilter:wb,_fnFilterCreateSearch:Pa,_fnEscapeRegex:Qa,_fnFilterData:zb,_fnFeatureHtmlInfo:sb,_fnUpdateInfo:Cb,_fnInfoMacros:Db,_fnInitialise:ha,_fnInitComplete:ua,_fnLengthChange:Ra,_fnFeatureHtmlLength:ob,_fnFeatureHtmlPaginate:tb,_fnPageChange:Ta,_fnFeatureHtmlProcessing:qb,_fnProcessingDisplay:C,_fnFeatureHtmlTable:rb,_fnScrollDraw:la,_fnApplyToChildren:I,_fnCalculateColumnWidths:Fa,_fnThrottle:Oa,_fnConvertToWidth:Eb,_fnGetWidestNode:Fb,_fnGetMaxLenString:Gb,_fnStringToCss:v,
_fnSortFlatten:X,_fnSort:mb,_fnSortAria:Ib,_fnSortListener:Va,_fnSortAttachListener:Ma,_fnSortingClasses:wa,_fnSortData:Hb,_fnSaveState:xa,_fnLoadState:Jb,_fnSettingsFromNode:ya,_fnLog:K,_fnMap:F,_fnBindAction:Wa,_fnCallbackReg:z,_fnCallbackFire:r,_fnLengthOverflow:Sa,_fnRenderer:Na,_fnDataSource:y,_fnRowAttributes:La,_fnExtend:Xa,_fnCalculateEnd:function(){}});h.fn.dataTable=n;n.$=h;h.fn.dataTableSettings=n.settings;h.fn.dataTableExt=n.ext;h.fn.DataTable=function(a){return h(this).dataTable(a).api()};
h.each(n,function(a,b){h.fn.DataTable[a]=b});return h.fn.dataTable});


/*!
 Buttons for DataTables 1.5.4
 ©2016-2018 SpryMedia Ltd - datatables.net/license
*/
var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.findInternal=function(d,p,m){d instanceof String&&(d=String(d));for(var l=d.length,g=0;g<l;g++){var u=d[g];if(p.call(m,u,g,d))return{i:g,v:u}}return{i:-1,v:void 0}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(d,p,m){d!=Array.prototype&&d!=Object.prototype&&(d[p]=m.value)};
$jscomp.getGlobal=function(d){return"undefined"!=typeof window&&window===d?d:"undefined"!=typeof global&&null!=global?global:d};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(d,p,m,l){if(p){m=$jscomp.global;d=d.split(".");for(l=0;l<d.length-1;l++){var g=d[l];g in m||(m[g]={});m=m[g]}d=d[d.length-1];l=m[d];p=p(l);p!=l&&null!=p&&$jscomp.defineProperty(m,d,{configurable:!0,writable:!0,value:p})}};
$jscomp.polyfill("Array.prototype.find",function(d){return d?d:function(d,m){return $jscomp.findInternal(this,d,m).v}},"es6","es3");
(function(d){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(p){return d(p,window,document)}):"object"===typeof exports?module.exports=function(p,m){p||(p=window);m&&m.fn.dataTable||(m=require("datatables.net")(p,m).$);return d(m,p,p.document)}:d(jQuery,window,document)})(function(d,p,m,l){var g=d.fn.dataTable,u=0,B=0,q=g.ext.buttons,r=function(a,b){"undefined"===typeof b&&(b={});!0===b&&(b={});d.isArray(b)&&(b={buttons:b});this.c=d.extend(!0,{},r.defaults,b);b.buttons&&
(this.c.buttons=b.buttons);this.s={dt:new g.Api(a),buttons:[],listenKeys:"",namespace:"dtb"+u++};this.dom={container:d("<"+this.c.dom.container.tag+"/>").addClass(this.c.dom.container.className)};this._constructor()};d.extend(r.prototype,{action:function(a,b){a=this._nodeToButton(a);if(b===l)return a.conf.action;a.conf.action=b;return this},active:function(a,b){var c=this._nodeToButton(a);a=this.c.dom.button.active;c=d(c.node);if(b===l)return c.hasClass(a);c.toggleClass(a,b===l?!0:b);return this},
add:function(a,b){var c=this.s.buttons;if("string"===typeof b){b=b.split("-");c=this.s;for(var d=0,f=b.length-1;d<f;d++)c=c.buttons[1*b[d]];c=c.buttons;b=1*b[b.length-1]}this._expandButton(c,a,!1,b);this._draw();return this},container:function(){return this.dom.container},disable:function(a){a=this._nodeToButton(a);d(a.node).addClass(this.c.dom.button.disabled);return this},destroy:function(){d("body").off("keyup."+this.s.namespace);var a=this.s.buttons.slice(),b;var c=0;for(b=a.length;c<b;c++)this.remove(a[c].node);
this.dom.container.remove();a=this.s.dt.settings()[0];c=0;for(b=a.length;c<b;c++)if(a.inst===this){a.splice(c,1);break}return this},enable:function(a,b){if(!1===b)return this.disable(a);a=this._nodeToButton(a);d(a.node).removeClass(this.c.dom.button.disabled);return this},name:function(){return this.c.name},node:function(a){a=this._nodeToButton(a);return d(a.node)},processing:function(a,b){a=this._nodeToButton(a);if(b===l)return d(a.node).hasClass("processing");d(a.node).toggleClass("processing",
b);return this},remove:function(a){var b=this._nodeToButton(a),c=this._nodeToHost(a),e=this.s.dt;if(b.buttons.length)for(var f=b.buttons.length-1;0<=f;f--)this.remove(b.buttons[f].node);b.conf.destroy&&b.conf.destroy.call(e.button(a),e,d(a),b.conf);this._removeKey(b.conf);d(b.node).remove();a=d.inArray(b,c);c.splice(a,1);return this},text:function(a,b){var c=this._nodeToButton(a);a=this.c.dom.collection.buttonLiner;a=c.inCollection&&a&&a.tag?a.tag:this.c.dom.buttonLiner.tag;var e=this.s.dt,f=d(c.node),
h=function(a){return"function"===typeof a?a(e,f,c.conf):a};if(b===l)return h(c.conf.text);c.conf.text=b;a?f.children(a).html(h(b)):f.html(h(b));return this},_constructor:function(){var a=this,b=this.s.dt,c=b.settings()[0],e=this.c.buttons;c._buttons||(c._buttons=[]);c._buttons.push({inst:this,name:this.c.name});for(var f=0,h=e.length;f<h;f++)this.add(e[f]);b.on("destroy",function(b,d){d===c&&a.destroy()});d("body").on("keyup."+this.s.namespace,function(b){if(!m.activeElement||m.activeElement===m.body){var c=
String.fromCharCode(b.keyCode).toLowerCase();-1!==a.s.listenKeys.toLowerCase().indexOf(c)&&a._keypress(c,b)}})},_addKey:function(a){a.key&&(this.s.listenKeys+=d.isPlainObject(a.key)?a.key.key:a.key)},_draw:function(a,b){a||(a=this.dom.container,b=this.s.buttons);a.children().detach();for(var c=0,d=b.length;c<d;c++)a.append(b[c].inserter),a.append(" "),b[c].buttons&&b[c].buttons.length&&this._draw(b[c].collection,b[c].buttons)},_expandButton:function(a,b,c,e){var f=this.s.dt,h=0;b=d.isArray(b)?b:[b];
for(var k=0,v=b.length;k<v;k++){var n=this._resolveExtends(b[k]);if(n)if(d.isArray(n))this._expandButton(a,n,c,e);else{var t=this._buildButton(n,c);if(t){e!==l?(a.splice(e,0,t),e++):a.push(t);if(t.conf.buttons){var y=this.c.dom.collection;t.collection=d("<"+y.tag+"/>").addClass(y.className).attr("role","menu");t.conf._collection=t.collection;this._expandButton(t.buttons,t.conf.buttons,!0,e)}n.init&&n.init.call(f.button(t.node),f,d(t.node),n);h++}}}},_buildButton:function(a,b){var c=this.c.dom.button,
e=this.c.dom.buttonLiner,f=this.c.dom.collection,h=this.s.dt,k=function(b){return"function"===typeof b?b(h,n,a):b};b&&f.button&&(c=f.button);b&&f.buttonLiner&&(e=f.buttonLiner);if(a.available&&!a.available(h,a))return!1;var v=function(a,b,c,e){e.action.call(b.button(c),a,b,c,e);d(b.table().node()).triggerHandler("buttons-action.dt",[b.button(c),b,c,e])};f=a.tag||c.tag;var n=d("<"+f+"/>").addClass(c.className).attr("tabindex",this.s.dt.settings()[0].iTabIndex).attr("aria-controls",this.s.dt.table().node().id).on("click.dtb",
function(b){b.preventDefault();!n.hasClass(c.disabled)&&a.action&&v(b,h,n,a);n.blur()}).on("keyup.dtb",function(b){13===b.keyCode&&!n.hasClass(c.disabled)&&a.action&&v(b,h,n,a)});"a"===f.toLowerCase()&&n.attr("href","#");"button"===f.toLowerCase()&&n.attr("type","button");e.tag?(f=d("<"+e.tag+"/>").html(k(a.text)).addClass(e.className),"a"===e.tag.toLowerCase()&&f.attr("href","#"),n.append(f)):n.html(k(a.text));!1===a.enabled&&n.addClass(c.disabled);a.className&&n.addClass(a.className);a.titleAttr&&
n.attr("title",k(a.titleAttr));a.attr&&n.attr(a.attr);a.namespace||(a.namespace=".dt-button-"+B++);e=(e=this.c.dom.buttonContainer)&&e.tag?d("<"+e.tag+"/>").addClass(e.className).append(n):n;this._addKey(a);return{conf:a,node:n.get(0),inserter:e,buttons:[],inCollection:b,collection:null}},_nodeToButton:function(a,b){b||(b=this.s.buttons);for(var c=0,d=b.length;c<d;c++){if(b[c].node===a)return b[c];if(b[c].buttons.length){var f=this._nodeToButton(a,b[c].buttons);if(f)return f}}},_nodeToHost:function(a,
b){b||(b=this.s.buttons);for(var c=0,d=b.length;c<d;c++){if(b[c].node===a)return b;if(b[c].buttons.length){var f=this._nodeToHost(a,b[c].buttons);if(f)return f}}},_keypress:function(a,b){if(!b._buttonsHandled){var c=function(e){for(var f=0,h=e.length;f<h;f++){var k=e[f].conf,v=e[f].node;k.key&&(k.key===a?(b._buttonsHandled=!0,d(v).click()):!d.isPlainObject(k.key)||k.key.key!==a||k.key.shiftKey&&!b.shiftKey||k.key.altKey&&!b.altKey||k.key.ctrlKey&&!b.ctrlKey||k.key.metaKey&&!b.metaKey||(b._buttonsHandled=
!0,d(v).click()));e[f].buttons.length&&c(e[f].buttons)}};c(this.s.buttons)}},_removeKey:function(a){if(a.key){var b=d.isPlainObject(a.key)?a.key.key:a.key;a=this.s.listenKeys.split("");b=d.inArray(b,a);a.splice(b,1);this.s.listenKeys=a.join("")}},_resolveExtends:function(a){var b=this.s.dt,c,e=function(c){for(var e=0;!d.isPlainObject(c)&&!d.isArray(c);){if(c===l)return;if("function"===typeof c){if(c=c(b,a),!c)return!1}else if("string"===typeof c){if(!q[c])throw"Unknown button type: "+c;c=q[c]}e++;
if(30<e)throw"Buttons: Too many iterations";}return d.isArray(c)?c:d.extend({},c)};for(a=e(a);a&&a.extend;){if(!q[a.extend])throw"Cannot extend unknown button type: "+a.extend;var f=e(q[a.extend]);if(d.isArray(f))return f;if(!f)return!1;var h=f.className;a=d.extend({},f,a);h&&a.className!==h&&(a.className=h+" "+a.className);var k=a.postfixButtons;if(k){a.buttons||(a.buttons=[]);h=0;for(c=k.length;h<c;h++)a.buttons.push(k[h]);a.postfixButtons=null}if(k=a.prefixButtons){a.buttons||(a.buttons=[]);h=
0;for(c=k.length;h<c;h++)a.buttons.splice(h,0,k[h]);a.prefixButtons=null}a.extend=f.extend}return a}});r.background=function(a,b,c,e){c===l&&(c=400);e||(e=m.body);a?d("<div/>").addClass(b).css("display","none").insertAfter(e).fadeIn(c):d("div."+b).fadeOut(c,function(){d(this).removeClass(b).remove()})};r.instanceSelector=function(a,b){if(!a)return d.map(b,function(a){return a.inst});var c=[],e=d.map(b,function(a){return a.name}),f=function(a){if(d.isArray(a))for(var k=0,v=a.length;k<v;k++)f(a[k]);
else"string"===typeof a?-1!==a.indexOf(",")?f(a.split(",")):(a=d.inArray(d.trim(a),e),-1!==a&&c.push(b[a].inst)):"number"===typeof a&&c.push(b[a].inst)};f(a);return c};r.buttonSelector=function(a,b){for(var c=[],e=function(a,b,c){for(var d,f,k=0,h=b.length;k<h;k++)if(d=b[k])f=c!==l?c+k:k+"",a.push({node:d.node,name:d.conf.name,idx:f}),d.buttons&&e(a,d.buttons,f+"-")},f=function(a,b){var k,h=[];e(h,b.s.buttons);var g=d.map(h,function(a){return a.node});if(d.isArray(a)||a instanceof d)for(g=0,k=a.length;g<
k;g++)f(a[g],b);else if(null===a||a===l||"*"===a)for(g=0,k=h.length;g<k;g++)c.push({inst:b,node:h[g].node});else if("number"===typeof a)c.push({inst:b,node:b.s.buttons[a].node});else if("string"===typeof a)if(-1!==a.indexOf(","))for(h=a.split(","),g=0,k=h.length;g<k;g++)f(d.trim(h[g]),b);else if(a.match(/^\d+(\-\d+)*$/))g=d.map(h,function(a){return a.idx}),c.push({inst:b,node:h[d.inArray(a,g)].node});else if(-1!==a.indexOf(":name"))for(a=a.replace(":name",""),g=0,k=h.length;g<k;g++)h[g].name===a&&
c.push({inst:b,node:h[g].node});else d(g).filter(a).each(function(){c.push({inst:b,node:this})});else"object"===typeof a&&a.nodeName&&(h=d.inArray(a,g),-1!==h&&c.push({inst:b,node:g[h]}))},h=0,k=a.length;h<k;h++)f(b,a[h]);return c};r.defaults={buttons:["copy","excel","csv","pdf","print"],name:"main",tabIndex:0,dom:{container:{tag:"div",className:"dt-buttons"},collection:{tag:"div",className:"dt-button-collection"},button:{tag:"ActiveXObject"in p?"a":"button",className:"dt-button",active:"active",
disabled:"disabled"},buttonLiner:{tag:"span",className:""}}};r.version="1.5.4";d.extend(q,{collection:{text:function(a){return a.i18n("buttons.collection","Collection")},className:"buttons-collection",action:function(a,b,c,e){var f=d(c).parents("div.dt-button-collection");a=c.position();var h=d(b.table().container()),k=!1,g=c;f.length&&(k=d(".dt-button-collection").position(),g=f,d("body").trigger("click.dtb-collection"));g.parents("body")[0]!==m.body&&(g=m.body.lastChild);e._collection.find(".dt-button-collection-title").remove();
e._collection.prepend('<div class="dt-button-collection-title">'+e.collectionTitle+"</div>");e._collection.addClass(e.collectionLayout).css("display","none").insertAfter(g).fadeIn(e.fade);f=e._collection.css("position");if(k&&"absolute"===f)e._collection.css({top:k.top,left:k.left});else if("absolute"===f){e._collection.css({top:a.top+c.outerHeight(),left:a.left});k=h.offset().top+h.height();k=a.top+c.outerHeight()+e._collection.outerHeight()-k;f=a.top-e._collection.outerHeight();var n=h.offset().top;
(k>n-f||e.dropup)&&e._collection.css("top",a.top-e._collection.outerHeight()-5);e._collection.hasClass(e.rightAlignClassName)&&e._collection.css("left",a.left+c.outerWidth()-e._collection.outerWidth());k=a.left+e._collection.outerWidth();h=h.offset().left+h.width();k>h&&e._collection.css("left",a.left-(k-h));c=c.offset().left+e._collection.outerWidth();c>d(p).width()&&e._collection.css("left",a.left-(c-d(p).width()))}else c=e._collection.height()/2,c>d(p).height()/2&&(c=d(p).height()/2),e._collection.css("marginTop",
-1*c);e.background&&r.background(!0,e.backgroundClassName,e.fade,g);var l=function(){e._collection.fadeOut(e.fade,function(){e._collection.detach()});d("div.dt-button-background").off("click.dtb-collection");r.background(!1,e.backgroundClassName,e.fade,g);d("body").off(".dtb-collection");b.off("buttons-action.b-internal")};setTimeout(function(){d("div.dt-button-background").on("click.dtb-collection",function(){});d("body").on("click.dtb-collection",function(a){var b=d.fn.addBack?"addBack":"andSelf";
d(a.target).parents()[b]().filter(e._collection).length||l()}).on("keyup.dtb-collection",function(a){27===a.keyCode&&l()});if(e.autoClose)b.on("buttons-action.b-internal",function(){l()})},10)},background:!0,collectionLayout:"",collectionTitle:"",backgroundClassName:"dt-button-background",rightAlignClassName:"dt-button-right",autoClose:!1,fade:400,attr:{"aria-haspopup":!0}},copy:function(a,b){if(q.copyHtml5)return"copyHtml5";if(q.copyFlash&&q.copyFlash.available(a,b))return"copyFlash"},csv:function(a,
b){if(q.csvHtml5&&q.csvHtml5.available(a,b))return"csvHtml5";if(q.csvFlash&&q.csvFlash.available(a,b))return"csvFlash"},excel:function(a,b){if(q.excelHtml5&&q.excelHtml5.available(a,b))return"excelHtml5";if(q.excelFlash&&q.excelFlash.available(a,b))return"excelFlash"},pdf:function(a,b){if(q.pdfHtml5&&q.pdfHtml5.available(a,b))return"pdfHtml5";if(q.pdfFlash&&q.pdfFlash.available(a,b))return"pdfFlash"},pageLength:function(a){a=a.settings()[0].aLengthMenu;var b=d.isArray(a[0])?a[0]:a,c=d.isArray(a[0])?
a[1]:a,e=function(a){return a.i18n("buttons.pageLength",{"-1":"Show all rows",_:"Show %d rows"},a.page.len())};return{extend:"collection",text:e,className:"buttons-page-length",autoClose:!0,buttons:d.map(b,function(a,b){return{text:c[b],className:"button-page-length",action:function(b,c){c.page.len(a).draw()},init:function(b,c,d){var e=this;c=function(){e.active(b.page.len()===a)};b.on("length.dt"+d.namespace,c);c()},destroy:function(a,b,c){a.off("length.dt"+c.namespace)}}}),init:function(a,b,c){var d=
this;a.on("length.dt"+c.namespace,function(){d.text(e(a))})},destroy:function(a,b,c){a.off("length.dt"+c.namespace)}}}});g.Api.register("buttons()",function(a,b){b===l&&(b=a,a=l);this.selector.buttonGroup=a;var c=this.iterator(!0,"table",function(c){if(c._buttons)return r.buttonSelector(r.instanceSelector(a,c._buttons),b)},!0);c._groupSelector=a;return c});g.Api.register("button()",function(a,b){a=this.buttons(a,b);1<a.length&&a.splice(1,a.length);return a});g.Api.registerPlural("buttons().active()",
"button().active()",function(a){return a===l?this.map(function(a){return a.inst.active(a.node)}):this.each(function(b){b.inst.active(b.node,a)})});g.Api.registerPlural("buttons().action()","button().action()",function(a){return a===l?this.map(function(a){return a.inst.action(a.node)}):this.each(function(b){b.inst.action(b.node,a)})});g.Api.register(["buttons().enable()","button().enable()"],function(a){return this.each(function(b){b.inst.enable(b.node,a)})});g.Api.register(["buttons().disable()",
"button().disable()"],function(){return this.each(function(a){a.inst.disable(a.node)})});g.Api.registerPlural("buttons().nodes()","button().node()",function(){var a=d();d(this.each(function(b){a=a.add(b.inst.node(b.node))}));return a});g.Api.registerPlural("buttons().processing()","button().processing()",function(a){return a===l?this.map(function(a){return a.inst.processing(a.node)}):this.each(function(b){b.inst.processing(b.node,a)})});g.Api.registerPlural("buttons().text()","button().text()",function(a){return a===
l?this.map(function(a){return a.inst.text(a.node)}):this.each(function(b){b.inst.text(b.node,a)})});g.Api.registerPlural("buttons().trigger()","button().trigger()",function(){return this.each(function(a){a.inst.node(a.node).trigger("click")})});g.Api.registerPlural("buttons().containers()","buttons().container()",function(){var a=d(),b=this._groupSelector;this.iterator(!0,"table",function(c){if(c._buttons){c=r.instanceSelector(b,c._buttons);for(var d=0,f=c.length;d<f;d++)a=a.add(c[d].container())}});
return a});g.Api.register("button().add()",function(a,b){var c=this.context;c.length&&(c=r.instanceSelector(this._groupSelector,c[0]._buttons),c.length&&c[0].add(b,a));return this.button(this._groupSelector,a)});g.Api.register("buttons().destroy()",function(){this.pluck("inst").unique().each(function(a){a.destroy()});return this});g.Api.registerPlural("buttons().remove()","buttons().remove()",function(){this.each(function(a){a.inst.remove(a.node)});return this});var w;g.Api.register("buttons.info()",
function(a,b,c){var e=this;if(!1===a)return d("#datatables_buttons_info").fadeOut(function(){d(this).remove()}),clearTimeout(w),w=null,this;w&&clearTimeout(w);d("#datatables_buttons_info").length&&d("#datatables_buttons_info").remove();a=a?"<h2>"+a+"</h2>":"";d('<div id="datatables_buttons_info" class="dt-button-info"/>').html(a).append(d("<div/>")["string"===typeof b?"html":"append"](b)).css("display","none").appendTo("body").fadeIn();c!==l&&0!==c&&(w=setTimeout(function(){e.buttons.info(!1)},c));
return this});g.Api.register("buttons.exportData()",function(a){if(this.context.length)return C(new g.Api(this.context[0]),a)});g.Api.register("buttons.exportInfo()",function(a){a||(a={});var b=a;var c="*"===b.filename&&"*"!==b.title&&b.title!==l&&null!==b.title&&""!==b.title?b.title:b.filename;"function"===typeof c&&(c=c());c===l||null===c?c=null:(-1!==c.indexOf("*")&&(c=d.trim(c.replace("*",d("head > title").text()))),c=c.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g,""),(b=x(b.extension))||
(b=""),c+=b);b=x(a.title);b=null===b?null:-1!==b.indexOf("*")?b.replace("*",d("head > title").text()||"Exported data"):b;return{filename:c,title:b,messageTop:z(this,a.message||a.messageTop,"top"),messageBottom:z(this,a.messageBottom,"bottom")}});var x=function(a){return null===a||a===l?null:"function"===typeof a?a():a},z=function(a,b,c){b=x(b);if(null===b)return null;a=d("caption",a.table().container()).eq(0);return"*"===b?a.css("caption-side")!==c?null:a.length?a.text():"":b},A=d("<textarea/>")[0],
C=function(a,b){var c=d.extend(!0,{},{rows:null,columns:"",modifier:{search:"applied",order:"applied"},orthogonal:"display",stripHtml:!0,stripNewlines:!0,decodeEntities:!0,trim:!0,format:{header:function(a){return e(a)},footer:function(a){return e(a)},body:function(a){return e(a)}},customizeData:null},b),e=function(a){if("string"!==typeof a)return a;a=a.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,"");a=a.replace(/<!\-\-.*?\-\->/g,"");c.stripHtml&&(a=a.replace(/<[^>]*>/g,""));c.trim&&
(a=a.replace(/^\s+|\s+$/g,""));c.stripNewlines&&(a=a.replace(/\n/g," "));c.decodeEntities&&(A.innerHTML=a,a=A.value);return a};b=a.columns(c.columns).indexes().map(function(b){var d=a.column(b).header();return c.format.header(d.innerHTML,b,d)}).toArray();var f=a.table().footer()?a.columns(c.columns).indexes().map(function(b){var d=a.column(b).footer();return c.format.footer(d?d.innerHTML:"",b,d)}).toArray():null,h=d.extend({},c.modifier);a.select&&"function"===typeof a.select.info&&h.selected===l&&
a.rows(c.rows,d.extend({selected:!0},h)).any()&&d.extend(h,{selected:!0});h=a.rows(c.rows,h).indexes().toArray();var g=a.cells(h,c.columns);h=g.render(c.orthogonal).toArray();g=g.nodes().toArray();for(var m=b.length,n=[],p=0,q=0,r=0<m?h.length/m:0;q<r;q++){for(var w=[m],u=0;u<m;u++)w[u]=c.format.body(h[p],q,u,g[p]),p++;n[q]=w}b={header:b,footer:f,body:n};c.customizeData&&c.customizeData(b);return b};d.fn.dataTable.Buttons=r;d.fn.DataTable.Buttons=r;d(m).on("init.dt plugin-init.dt",function(a,b){"dt"===
a.namespace&&(a=b.oInit.buttons||g.defaults.buttons)&&!b._buttons&&(new r(b,a)).container()});g.ext.feature.push({fnInit:function(a){a=new g.Api(a);var b=a.init().buttons||g.defaults.buttons;return(new r(a,b)).container()},cFeature:"B"});return r});


/*!
 HTML5 export buttons for Buttons and DataTables.
 2016 SpryMedia Ltd - datatables.net/license

 FileSaver.js (1.3.3) - MIT license
 Copyright © 2016 Eli Grey - http://eligrey.com
*/
(function(f){"function"===typeof define&&define.amd?define(["jquery","datatables.net","datatables.net-buttons"],function(g){return f(g,window,document)}):"object"===typeof exports?module.exports=function(g,p,z,t){g||(g=window);p&&p.fn.dataTable||(p=require("datatables.net")(g,p).$);p.fn.dataTable.Buttons||require("datatables.net-buttons")(g,p);return f(p,g,g.document,z,t)}:f(jQuery,window,document)})(function(f,g,p,z,t,w){function A(a){for(var b="";0<=a;)b=String.fromCharCode(a%26+65)+b,a=Math.floor(a/
26)-1;return b}function E(a,b){y===w&&(y=-1===C.serializeToString(f.parseXML(F["xl/worksheets/sheet1.xml"])).indexOf("xmlns:r"));f.each(b,function(b,c){if(f.isPlainObject(c))b=a.folder(b),E(b,c);else{if(y){var d=c.childNodes[0],e,h=[];for(e=d.attributes.length-1;0<=e;e--){var m=d.attributes[e].nodeName;var k=d.attributes[e].nodeValue;-1!==m.indexOf(":")&&(h.push({name:m,value:k}),d.removeAttribute(m))}e=0;for(m=h.length;e<m;e++)k=c.createAttribute(h[e].name.replace(":","_dt_b_namespace_token_")),
k.value=h[e].value,d.setAttributeNode(k)}c=C.serializeToString(c);y&&(-1===c.indexOf("<?xml")&&(c='<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+c),c=c.replace(/_dt_b_namespace_token_/g,":"),c=c.replace(/xmlns:NS[\d]+="" NS[\d]+:/g,""));c=c.replace(/<([^<>]*?) xmlns=""([^<>]*?)>/g,"<$1 $2>");a.file(b,c)}})}function r(a,b,d){var c=a.createElement(b);d&&(d.attr&&f(c).attr(d.attr),d.children&&f.each(d.children,function(a,b){c.appendChild(b)}),null!==d.text&&d.text!==w&&c.appendChild(a.createTextNode(d.text)));
return c}function L(a,b){var d=a.header[b].length;a.footer&&a.footer[b].length>d&&(d=a.footer[b].length);for(var c=0,f=a.body.length;c<f;c++){var e=a.body[c][b];e=null!==e&&e!==w?e.toString():"";-1!==e.indexOf("\n")?(e=e.split("\n"),e.sort(function(a,c){return c.length-a.length}),e=e[0].length):e=e.length;e>d&&(d=e);if(40<d)return 54}d*=1.35;return 6<d?d:6}var v=f.fn.dataTable;v.Buttons.pdfMake=function(a){if(!a)return t||g.pdfMake;t=m_ake};v.Buttons.jszip=function(a){if(!a)return z||g.JSZip;z=a};
var B=function(a){if(!("undefined"===typeof a||"undefined"!==typeof navigator&&/MSIE [1-9]\./.test(navigator.userAgent))){var b=a.document.createElementNS("http://www.w3.org/1999/xhtml","a"),d="download"in b,c=/constructor/i.test(a.HTMLElement)||a.safari,f=/CriOS\/[\d]+/.test(navigator.userAgent),e=function(c){(a.setImmediate||a.setTimeout)(function(){throw c;},0)},h=function(c){setTimeout(function(){"string"===typeof c?(a.URL||a.webkitURL||a).revokeObjectURL(c):c.remove()},4E4)},m=function(a){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(a.type)?
new Blob([String.fromCharCode(65279),a],{type:a.type}):a},k=function(k,q,n){n||(k=m(k));var l=this,g="application/octet-stream"===k.type,D=function(){var a=["writestart","progress","write","writeend"];a=[].concat(a);for(var c=a.length;c--;){var b=l["on"+a[c]];if("function"===typeof b)try{b.call(l,l)}catch(M){e(M)}}};l.readyState=l.INIT;if(d){var u=(a.URL||a.webkitURL||a).createObjectURL(k);setTimeout(function(){b.href=u;b.download=q;var a=new MouseEvent("click");b.dispatchEvent(a);D();h(u);l.readyState=
l.DONE})}else(function(){if((f||g&&c)&&a.FileReader){var b=new FileReader;b.onloadend=function(){var c=f?b.result:b.result.replace(/^data:[^;]*;/,"data:attachment/file;");a.open(c,"_blank")||(a.location.href=c);l.readyState=l.DONE;D()};b.readAsDataURL(k);l.readyState=l.INIT}else u||(u=(a.URL||a.webkitURL||a).createObjectURL(k)),g?a.location.href=u:a.open(u,"_blank")||(a.location.href=u),l.readyState=l.DONE,D(),h(u)})()},n=k.prototype;if("undefined"!==typeof navigator&&navigator.msSaveOrOpenBlob)return function(a,
c,b){c=c||a.name||"download";b||(a=m(a));return navigator.msSaveOrOpenBlob(a,c)};n.abort=function(){};n.readyState=n.INIT=0;n.WRITING=1;n.DONE=2;n.error=n.onwritestart=n.onprogress=n.onwrite=n.onabort=n.onerror=n.onwriteend=null;return function(a,c,b){return new k(a,c||a.name||"download",b)}}}("undefined"!==typeof self&&self||"undefined"!==typeof g&&g||this.content);v.fileSave=B;var G=function(a){var b="Sheet1";a.sheetName&&(b=a.sheetName.replace(/[\[\]\*\/\\\?:]/g,""));return b},H=function(a){return a.newline?
a.newline:navigator.userAgent.match(/Windows/)?"\r\n":"\n"},I=function(a,b){var d=H(b);a=a.buttons.exportData(b.exportOptions);var c=b.fieldBoundary,f=b.fieldSeparator,e=new RegExp(c,"g"),h=b.escapeChar!==w?b.escapeChar:"\\",m=function(a){for(var b="",d=0,m=a.length;d<m;d++)0<d&&(b+=f),b+=c?c+(""+a[d]).replace(e,h+c)+c:a[d];return b},k=b.header?m(a.header)+d:"";b=b.footer&&a.footer?d+m(a.footer):"";for(var n=[],g=0,q=a.body.length;g<q;g++)n.push(m(a.body[g]));return{str:k+n.join(d)+b,rows:n.length}},
J=function(){if(-1===navigator.userAgent.indexOf("Safari")||-1!==navigator.userAgent.indexOf("Chrome")||-1!==navigator.userAgent.indexOf("Opera"))return!1;var a=navigator.userAgent.match(/AppleWebKit\/(\d+\.\d+)/);return a&&1<a.length&&603.1>1*a[1]?!0:!1};try{var C=new XMLSerializer,y}catch(a){}var F={"_rels/.rels":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/></Relationships>',
"xl/_rels/workbook.xml.rels":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/><Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/></Relationships>',"[Content_Types].xml":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types"><Default Extension="xml" ContentType="application/xml" /><Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" /><Default Extension="jpeg" ContentType="image/jpeg" /><Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" /><Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" /><Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" /></Types>',
"xl/workbook.xml":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"><fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/><workbookPr showInkAnnotation="0" autoCompressPictures="0"/><bookViews><workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/></bookViews><sheets><sheet name="Sheet1" sheetId="1" r:id="rId1"/></sheets><definedNames/></workbook>',
"xl/worksheets/sheet1.xml":'<?xml version="1.0" encoding="UTF-8" standalone="yes"?><worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><sheetData/><mergeCells count="0"/></worksheet>',"xl/styles.xml":'<?xml version="1.0" encoding="UTF-8"?><styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><numFmts count="6"><numFmt numFmtId="164" formatCode="#,##0.00_- [$$-45C]"/><numFmt numFmtId="165" formatCode="&quot;£&quot;#,##0.00"/><numFmt numFmtId="166" formatCode="[$€-2] #,##0.00"/><numFmt numFmtId="167" formatCode="0.0%"/><numFmt numFmtId="168" formatCode="#,##0;(#,##0)"/><numFmt numFmtId="169" formatCode="#,##0.00;(#,##0.00)"/></numFmts><fonts count="5" x14ac:knownFonts="1"><font><sz val="11" /><name val="Calibri" /></font><font><sz val="11" /><name val="Calibri" /><color rgb="FFFFFFFF" /></font><font><sz val="11" /><name val="Calibri" /><b /></font><font><sz val="11" /><name val="Calibri" /><i /></font><font><sz val="11" /><name val="Calibri" /><u /></font></fonts><fills count="6"><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD9D9D9" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD99795" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6efce" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6cfef" /><bgColor indexed="64" /></patternFill></fill></fills><borders count="2"><border><left /><right /><top /><bottom /><diagonal /></border><border diagonalUp="false" diagonalDown="false"><left style="thin"><color auto="1" /></left><right style="thin"><color auto="1" /></right><top style="thin"><color auto="1" /></top><bottom style="thin"><color auto="1" /></bottom><diagonal /></border></borders><cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" /></cellStyleXfs><cellXfs count="67"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="left"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="center"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="right"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="fill"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment textRotation="90"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment wrapText="1"/></xf><xf numFmtId="9"   fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="164" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="165" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="166" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="167" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="168" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="169" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="3" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="4" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="1" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="2" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/></cellXfs><cellStyles count="1"><cellStyle name="Normal" xfId="0" builtinId="0" /></cellStyles><dxfs count="0" /><tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4" /></styleSheet>'},
K=[{match:/^\-?\d+\.\d%$/,style:60,fmt:function(a){return a/100}},{match:/^\-?\d+\.?\d*%$/,style:56,fmt:function(a){return a/100}},{match:/^\-?\$[\d,]+.?\d*$/,style:57},{match:/^\-?£[\d,]+.?\d*$/,style:58},{match:/^\-?€[\d,]+.?\d*$/,style:59},{match:/^\-?\d+$/,style:65},{match:/^\-?\d+\.\d{2}$/,style:66},{match:/^\([\d,]+\)$/,style:61,fmt:function(a){return-1*a.replace(/[\(\)]/g,"")}},{match:/^\([\d,]+\.\d{2}\)$/,style:62,fmt:function(a){return-1*a.replace(/[\(\)]/g,"")}},{match:/^\-?[\d,]+$/,style:63},
{match:/^\-?[\d,]+\.\d{2}$/,style:64}];v.ext.buttons.copyHtml5={className:"buttons-copy buttons-html5",text:function(a){return a.i18n("buttons.copy","Copy")},action:function(a,b,d,c){this.processing(!0);var g=this;a=I(b,c);var e=b.buttons.exportInfo(c),h=H(c),m=a.str;d=f("<div/>").css({height:1,width:1,overflow:"hidden",position:"fixed",top:0,left:0});e.title&&(m=e.title+h+h+m);e.messageTop&&(m=e.messageTop+h+h+m);e.messageBottom&&(m=m+h+h+e.messageBottom);c.customize&&(m=c.customize(m,c,b));c=f("<textarea readonly/>").val(m).appendTo(d);
if(p.queryCommandSupported("copy")){d.appendTo(b.table().container());c[0].focus();c[0].select();try{var k=p.execCommand("copy");d.remove();if(k){b.buttons.info(b.i18n("buttons.copyTitle","Copy to clipboard"),b.i18n("buttons.copySuccess",{1:"Copied one row to clipboard",_:"Copied %d rows to clipboard"},a.rows),2E3);this.processing(!1);return}}catch(q){}}k=f("<span>"+b.i18n("buttons.copyKeys","Press <i>ctrl</i> or <i>⌘</i> + <i>C</i> to copy the table data<br>to your system clipboard.<br><br>To cancel, click this message or press escape.")+
"</span>").append(d);b.buttons.info(b.i18n("buttons.copyTitle","Copy to clipboard"),k,0);c[0].focus();c[0].select();var n=f(k).closest(".dt-button-info"),r=function(){n.off("click.buttons-copy");f(p).off(".buttons-copy");b.buttons.info(!1)};n.on("click.buttons-copy",r);f(p).on("keydown.buttons-copy",function(a){27===a.keyCode&&(r(),g.processing(!1))}).on("copy.buttons-copy cut.buttons-copy",function(){r();g.processing(!1)})},exportOptions:{},fieldSeparator:"\t",fieldBoundary:"",header:!0,footer:!1,
title:"*",messageTop:"*",messageBottom:"*"};v.ext.buttons.csvHtml5={bom:!1,className:"buttons-csv buttons-html5",available:function(){return g.FileReader!==w&&g.Blob},text:function(a){return a.i18n("buttons.csv","CSV")},action:function(a,b,d,c){this.processing(!0);a=I(b,c).str;d=b.buttons.exportInfo(c);var f=c.charset;c.customize&&(a=c.customize(a,c,b));!1!==f?(f||(f=p.characterSet||p.charset),f&&(f=";charset="+f)):f="";c.bom&&(a="﻿"+a);B(new Blob([a],{type:"text/csv"+f}),d.filename,!0);this.processing(!1)},
filename:"*",extension:".csv",exportOptions:{},fieldSeparator:",",fieldBoundary:'"',escapeChar:'"',charset:null,header:!0,footer:!1};v.ext.buttons.excelHtml5={className:"buttons-excel buttons-html5",available:function(){return g.FileReader!==w&&(z||g.JSZip)!==w&&!J()&&C},text:function(a){return a.i18n("buttons.excel","Excel")},action:function(a,b,d,c){this.processing(!0);var p=this,e=0;a=function(a){return f.parseXML(F[a])};var h=a("xl/worksheets/sheet1.xml"),m=h.getElementsByTagName("sheetData")[0];
a={_rels:{".rels":a("_rels/.rels")},xl:{_rels:{"workbook.xml.rels":a("xl/_rels/workbook.xml.rels")},"workbook.xml":a("xl/workbook.xml"),"styles.xml":a("xl/styles.xml"),worksheets:{"sheet1.xml":h}},"[Content_Types].xml":a("[Content_Types].xml")};var k=b.buttons.exportData(c.exportOptions),n,v,q=function(a){n=e+1;v=r(h,"row",{attr:{r:n}});for(var b=0,d=a.length;b<d;b++){var k=A(b)+""+n,g=null;if(null===a[b]||a[b]===w||""===a[b])if(!0===c.createEmptyCells)a[b]="";else continue;var l=a[b];a[b]=f.trim(a[b]);
for(var q=0,p=K.length;q<p;q++){var u=K[q];if(a[b].match&&!a[b].match(/^0\d+/)&&a[b].match(u.match)){g=a[b].replace(/[^\d\.\-]/g,"");u.fmt&&(g=u.fmt(g));g=r(h,"c",{attr:{r:k,s:u.style},children:[r(h,"v",{text:g})]});break}}g||("number"===typeof a[b]||a[b].match&&a[b].match(/^-?\d+(\.\d+)?$/)&&!a[b].match(/^0\d+/)?g=r(h,"c",{attr:{t:"n",r:k},children:[r(h,"v",{text:a[b]})]}):(l=l.replace?l.replace(/[\x00-\x09\x0B\x0C\x0E-\x1F\x7F-\x9F]/g,""):l,g=r(h,"c",{attr:{t:"inlineStr",r:k},children:{row:r(h,
"is",{children:{row:r(h,"t",{text:l,attr:{"xml:space":"preserve"}})}})}})));v.appendChild(g)}m.appendChild(v);e++};c.customizeData&&c.customizeData(k);var x=function(a,b){var c=f("mergeCells",h);c[0].appendChild(r(h,"mergeCell",{attr:{ref:"A"+a+":"+A(b)+a}}));c.attr("count",parseFloat(c.attr("count"))+1);f("row:eq("+(a-1)+") c",h).attr("s","51")},l=b.buttons.exportInfo(c);l.title&&(q([l.title],e),x(e,k.header.length-1));l.messageTop&&(q([l.messageTop],e),x(e,k.header.length-1));c.header&&(q(k.header,
e),f("row:last c",h).attr("s","2"));d=e;var t=0;for(var y=k.body.length;t<y;t++)q(k.body[t],e);t=e;c.footer&&k.footer&&(q(k.footer,e),f("row:last c",h).attr("s","2"));l.messageBottom&&(q([l.messageBottom],e),x(e,k.header.length-1));q=r(h,"cols");f("worksheet",h).prepend(q);x=0;for(y=k.header.length;x<y;x++)q.appendChild(r(h,"col",{attr:{min:x+1,max:x+1,width:L(k,x),customWidth:1}}));f("mergeCells",h).before(r(h,"autoFilter",{attr:{ref:"A"+d+":"+A(k.header.length-1)+t}}));q=a.xl["workbook.xml"];f("sheets sheet",
q).attr("name",G(c));c.autoFilter&&f("definedNames",q).append(r(q,"definedName",{attr:{name:"_xlnm._FilterDatabase",localSheetId:"0",hidden:1},text:G(c)+"!$A$"+d+":"+A(k.header.length-1)+t}));c.customize&&c.customize(a,c,b);0===f("mergeCells",h).children().length&&f("mergeCells",h).remove();b=new (z||g.JSZip);d={type:"blob",mimeType:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"};E(b,a);b.generateAsync?b.generateAsync(d).then(function(a){B(a,l.filename);p.processing(!1)}):(B(b.generate(d),
l.filename),this.processing(!1))},filename:"*",extension:".xlsx",exportOptions:{},header:!0,footer:!1,title:"*",messageTop:"*",messageBottom:"*",createEmptyCells:!1,autoFilter:!1,sheetName:""};v.ext.buttons.pdfHtml5={className:"buttons-pdf buttons-html5",available:function(){return g.FileReader!==w&&(t||g.pdfMake)},text:function(a){return a.i18n("buttons.pdf","PDF")},action:function(a,b,d,c){this.processing(!0);d=b.buttons.exportData(c.exportOptions);a=b.buttons.exportInfo(c);var p=[];c.header&&p.push(f.map(d.header,
function(a){return{text:"string"===typeof a?a:a+"",style:"tableHeader"}}));for(var e=0,h=d.body.length;e<h;e++)p.push(f.map(d.body[e],function(a){if(null===a||a===w)a="";return{text:"string"===typeof a?a:a+"",style:e%2?"tableBodyEven":"tableBodyOdd"}}));c.footer&&d.footer&&p.push(f.map(d.footer,function(a){return{text:"string"===typeof a?a:a+"",style:"tableFooter"}}));d={pageSize:c.pageSize,pageOrientation:c.orientation,content:[{table:{headerRows:1,body:p},layout:"noBorders"}],styles:{tableHeader:{bold:!0,
fontSize:11,color:"white",fillColor:"#2d4154",alignment:"center"},tableBodyEven:{},tableBodyOdd:{fillColor:"#f3f3f3"},tableFooter:{bold:!0,fontSize:11,color:"white",fillColor:"#2d4154"},title:{alignment:"center",fontSize:15},message:{}},defaultStyle:{fontSize:10}};a.messageTop&&d.content.unshift({text:a.messageTop,style:"message",margin:[0,0,0,12]});a.messageBottom&&d.content.push({text:a.messageBottom,style:"message",margin:[0,0,0,12]});a.title&&d.content.unshift({text:a.title,style:"title",margin:[0,
0,0,12]});c.customize&&c.customize(d,c,b);b=(t||g.pdfMake).createPdf(d);"open"!==c.download||J()?b.download(a.filename):b.open();this.processing(!1)},title:"*",filename:"*",extension:".pdf",exportOptions:{},orientation:"portrait",pageSize:"A4",header:!0,footer:!1,messageTop:"*",messageBottom:"*",customize:null,download:"download"};return v.Buttons});


/*!
 Print button for Buttons and DataTables.
 2016 SpryMedia Ltd - datatables.net/license
*/
(function(c){"function"===typeof define&&define.amd?define(["jquery","datatables.net","datatables.net-buttons"],function(e){return c(e,window,document)}):"object"===typeof exports?module.exports=function(e,a){e||(e=window);a&&a.fn.dataTable||(a=require("datatables.net")(e,a).$);a.fn.dataTable.Buttons||require("datatables.net-buttons")(e,a);return c(a,e,e.document)}:c(jQuery,window,document)})(function(c,e,a,q){var k=c.fn.dataTable,d=a.createElement("a"),p=function(b){d.href=b;b=d.host;-1===b.indexOf("/")&&
0!==d.pathname.indexOf("/")&&(b+="/");return d.protocol+"//"+b+d.pathname+d.search};k.ext.buttons.print={className:"buttons-print",text:function(b){return b.i18n("buttons.print","Print")},action:function(b,a,d,g){b=a.buttons.exportData(c.extend({decodeEntities:!1},g.exportOptions));d=a.buttons.exportInfo(g);var k=a.columns(g.exportOptions.columns).flatten().map(function(b){return a.settings()[0].aoColumns[a.column(b).index()].sClass}).toArray(),m=function(b,a){for(var d="<tr>",c=0,e=b.length;c<e;c++)d+=
"<"+a+" "+(k[c]?'class="'+k[c]+'"':"")+">"+(null===b[c]||b[c]===q?"":b[c])+"</"+a+">";return d+"</tr>"},h='<table class="'+a.table().node().className+'">';g.header&&(h+="<thead>"+m(b.header,"th")+"</thead>");h+="<tbody>";for(var n=0,r=b.body.length;n<r;n++)h+=m(b.body[n],"td");h+="</tbody>";g.footer&&b.footer&&(h+="<tfoot>"+m(b.footer,"th")+"</tfoot>");h+="</table>";var f=e.open("","");f.document.close();var l="<title>"+d.title+"</title>";c("style, link").each(function(){var b=l,a=c(this).clone()[0];
"link"===a.nodeName.toLowerCase()&&(a.href=p(a.href));l=b+a.outerHTML});try{f.document.head.innerHTML=l}catch(t){c(f.document.head).html(l)}f.document.body.innerHTML="<h1>"+d.title+"</h1><div>"+(d.messageTop||"")+"</div>"+h+"<div>"+(d.messageBottom||"")+"</div>";c(f.document.body).addClass("dt-print-view");c("img",f.document.body).each(function(b,a){a.setAttribute("src",p(a.getAttribute("src")))});g.customize&&g.customize(f,g,a);b=function(){g.autoPrint&&(f.print(),f.close())};navigator.userAgent.match(/Trident\/\d.\d/)?
b():f.setTimeout(b,1E3)},title:"*",messageTop:"*",messageBottom:"*",exportOptions:{},header:!0,footer:!1,autoPrint:!0,customize:null};return k.Buttons});


/*!
 FixedColumns 3.2.5
 ©2010-2018 SpryMedia Ltd - datatables.net/license
*/
(function(d){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(p){return d(p,window,document)}):"object"===typeof exports?module.exports=function(p,r){p||(p=window);if(!r||!r.fn.dataTable)r=require("datatables.net")(p,r).$;return d(r,p,p.document)}:d(jQuery,window,document)})(function(d,p,r,t){var s=d.fn.dataTable,u,m=function(a,b){var c=this;if(this instanceof m){if(b===t||!0===b)b={};var e=d.fn.dataTable.camelToHungarian;e&&(e(m.defaults,m.defaults,!0),e(m.defaults,
b));e=(new d.fn.dataTable.Api(a)).settings()[0];this.s={dt:e,iTableColumns:e.aoColumns.length,aiOuterWidths:[],aiInnerWidths:[],rtl:"rtl"===d(e.nTable).css("direction")};this.dom={scroller:null,header:null,body:null,footer:null,grid:{wrapper:null,dt:null,left:{wrapper:null,head:null,body:null,foot:null},right:{wrapper:null,head:null,body:null,foot:null}},clone:{left:{header:null,body:null,footer:null},right:{header:null,body:null,footer:null}}};if(e._oFixedColumns)throw"FixedColumns already initialised on this table";
e._oFixedColumns=this;e._bInitComplete?this._fnConstruct(b):e.oApi._fnCallbackReg(e,"aoInitComplete",function(){c._fnConstruct(b)},"FixedColumns")}else alert("FixedColumns warning: FixedColumns must be initialised with the 'new' keyword.")};d.extend(m.prototype,{fnUpdate:function(){this._fnDraw(!0)},fnRedrawLayout:function(){this._fnColCalc();this._fnGridLayout();this.fnUpdate()},fnRecalculateHeight:function(a){delete a._DTTC_iHeight;a.style.height="auto"},fnSetRowHeight:function(a,b){a.style.height=
b+"px"},fnGetPosition:function(a){var b=this.s.dt.oInstance;if(d(a).parents(".DTFC_Cloned").length){if("tr"===a.nodeName.toLowerCase())return a=d(a).index(),b.fnGetPosition(d("tr",this.s.dt.nTBody)[a]);var c=d(a).index(),a=d(a.parentNode).index();return[b.fnGetPosition(d("tr",this.s.dt.nTBody)[a]),c,b.oApi._fnVisibleToColumnIndex(this.s.dt,c)]}return b.fnGetPosition(a)},_fnConstruct:function(a){var b=this;if("function"!=typeof this.s.dt.oInstance.fnVersionCheck||!0!==this.s.dt.oInstance.fnVersionCheck("1.8.0"))alert("FixedColumns "+
m.VERSION+" required DataTables 1.8.0 or later. Please upgrade your DataTables installation");else if(""===this.s.dt.oScroll.sX)this.s.dt.oInstance.oApi._fnLog(this.s.dt,1,"FixedColumns is not needed (no x-scrolling in DataTables enabled), so no action will be taken. Use 'FixedHeader' for column fixing when scrolling is not enabled");else{this.s=d.extend(!0,this.s,m.defaults,a);a=this.s.dt.oClasses;this.dom.grid.dt=d(this.s.dt.nTable).parents("div."+a.sScrollWrapper)[0];this.dom.scroller=d("div."+
a.sScrollBody,this.dom.grid.dt)[0];this._fnColCalc();this._fnGridSetup();var c,e=!1;d(this.s.dt.nTableWrapper).on("mousedown.DTFC",function(a){0===a.button&&(e=!0,d(r).one("mouseup",function(){e=!1}))});d(this.dom.scroller).on("mouseover.DTFC touchstart.DTFC",function(){e||(c="main")}).on("scroll.DTFC",function(a){!c&&a.originalEvent&&(c="main");if("main"===c&&(0<b.s.iLeftColumns&&(b.dom.grid.left.liner.scrollTop=b.dom.scroller.scrollTop),0<b.s.iRightColumns))b.dom.grid.right.liner.scrollTop=b.dom.scroller.scrollTop});
var f="onwheel"in r.createElement("div")?"wheel.DTFC":"mousewheel.DTFC";if(0<b.s.iLeftColumns)d(b.dom.grid.left.liner).on("mouseover.DTFC touchstart.DTFC",function(){e||(c="left")}).on("scroll.DTFC",function(a){!c&&a.originalEvent&&(c="left");"left"===c&&(b.dom.scroller.scrollTop=b.dom.grid.left.liner.scrollTop,0<b.s.iRightColumns&&(b.dom.grid.right.liner.scrollTop=b.dom.grid.left.liner.scrollTop))}).on(f,function(a){b.dom.scroller.scrollLeft-="wheel"===a.type?-a.originalEvent.deltaX:a.originalEvent.wheelDeltaX});
if(0<b.s.iRightColumns)d(b.dom.grid.right.liner).on("mouseover.DTFC touchstart.DTFC",function(){e||(c="right")}).on("scroll.DTFC",function(a){!c&&a.originalEvent&&(c="right");"right"===c&&(b.dom.scroller.scrollTop=b.dom.grid.right.liner.scrollTop,0<b.s.iLeftColumns&&(b.dom.grid.left.liner.scrollTop=b.dom.grid.right.liner.scrollTop))}).on(f,function(a){b.dom.scroller.scrollLeft-="wheel"===a.type?-a.originalEvent.deltaX:a.originalEvent.wheelDeltaX});d(p).on("resize.DTFC",function(){b._fnGridLayout.call(b)});
var g=!0,h=d(this.s.dt.nTable);h.on("draw.dt.DTFC",function(){b._fnColCalc();b._fnDraw.call(b,g);g=!1}).on("column-sizing.dt.DTFC",function(){b._fnColCalc();b._fnGridLayout(b)}).on("column-visibility.dt.DTFC",function(a,c,d,e,f){if(f===t||f)b._fnColCalc(),b._fnGridLayout(b),b._fnDraw(!0)}).on("select.dt.DTFC deselect.dt.DTFC",function(a){"dt"===a.namespace&&b._fnDraw(!1)}).on("destroy.dt.DTFC",function(){h.off(".DTFC");d(b.dom.scroller).off(".DTFC");d(p).off(".DTFC");d(b.s.dt.nTableWrapper).off(".DTFC");
d(b.dom.grid.left.liner).off(".DTFC "+f);d(b.dom.grid.left.wrapper).remove();d(b.dom.grid.right.liner).off(".DTFC "+f);d(b.dom.grid.right.wrapper).remove()});this._fnGridLayout();this.s.dt.oInstance.fnDraw(!1)}},_fnColCalc:function(){var a=this,b=0,c=0;this.s.aiInnerWidths=[];this.s.aiOuterWidths=[];d.each(this.s.dt.aoColumns,function(e,f){var g=d(f.nTh),h;if(g.filter(":visible").length){var i=g.outerWidth();0===a.s.aiOuterWidths.length&&(h=d(a.s.dt.nTable).css("border-left-width"),i+="string"===
typeof h&&-1===h.indexOf("px")?1:parseInt(h,10));a.s.aiOuterWidths.length===a.s.dt.aoColumns.length-1&&(h=d(a.s.dt.nTable).css("border-right-width"),i+="string"===typeof h&&-1===h.indexOf("px")?1:parseInt(h,10));a.s.aiOuterWidths.push(i);a.s.aiInnerWidths.push(g.width());e<a.s.iLeftColumns&&(b+=i);a.s.iTableColumns-a.s.iRightColumns<=e&&(c+=i)}else a.s.aiInnerWidths.push(0),a.s.aiOuterWidths.push(0)});this.s.iLeftWidth=b;this.s.iRightWidth=c},_fnGridSetup:function(){var a=this._fnDTOverflow(),b;this.dom.body=
this.s.dt.nTable;this.dom.header=this.s.dt.nTHead.parentNode;this.dom.header.parentNode.parentNode.style.position="relative";var c=d('<div class="DTFC_ScrollWrapper" style="position:relative; clear:both;"><div class="DTFC_LeftWrapper" style="position:absolute; top:0; left:0;" aria-hidden="true"><div class="DTFC_LeftHeadWrapper" style="position:relative; top:0; left:0; overflow:hidden;"></div><div class="DTFC_LeftBodyWrapper" style="position:relative; top:0; left:0; overflow:hidden;"><div class="DTFC_LeftBodyLiner" style="position:relative; top:0; left:0; overflow-y:scroll;"></div></div><div class="DTFC_LeftFootWrapper" style="position:relative; top:0; left:0; overflow:hidden;"></div></div><div class="DTFC_RightWrapper" style="position:absolute; top:0; right:0;" aria-hidden="true"><div class="DTFC_RightHeadWrapper" style="position:relative; top:0; left:0;"><div class="DTFC_RightHeadBlocker DTFC_Blocker" style="position:absolute; top:0; bottom:0;"></div></div><div class="DTFC_RightBodyWrapper" style="position:relative; top:0; left:0; overflow:hidden;"><div class="DTFC_RightBodyLiner" style="position:relative; top:0; left:0; overflow-y:scroll;"></div></div><div class="DTFC_RightFootWrapper" style="position:relative; top:0; left:0;"><div class="DTFC_RightFootBlocker DTFC_Blocker" style="position:absolute; top:0; bottom:0;"></div></div></div></div>')[0],
e=c.childNodes[0],f=c.childNodes[1];this.dom.grid.dt.parentNode.insertBefore(c,this.dom.grid.dt);c.appendChild(this.dom.grid.dt);this.dom.grid.wrapper=c;0<this.s.iLeftColumns&&(this.dom.grid.left.wrapper=e,this.dom.grid.left.head=e.childNodes[0],this.dom.grid.left.body=e.childNodes[1],this.dom.grid.left.liner=d("div.DTFC_LeftBodyLiner",c)[0],c.appendChild(e));0<this.s.iRightColumns&&(this.dom.grid.right.wrapper=f,this.dom.grid.right.head=f.childNodes[0],this.dom.grid.right.body=f.childNodes[1],this.dom.grid.right.liner=
d("div.DTFC_RightBodyLiner",c)[0],f.style.right=a.bar+"px",b=d("div.DTFC_RightHeadBlocker",c)[0],b.style.width=a.bar+"px",b.style.right=-a.bar+"px",this.dom.grid.right.headBlock=b,b=d("div.DTFC_RightFootBlocker",c)[0],b.style.width=a.bar+"px",b.style.right=-a.bar+"px",this.dom.grid.right.footBlock=b,c.appendChild(f));if(this.s.dt.nTFoot&&(this.dom.footer=this.s.dt.nTFoot.parentNode,0<this.s.iLeftColumns&&(this.dom.grid.left.foot=e.childNodes[2]),0<this.s.iRightColumns))this.dom.grid.right.foot=f.childNodes[2];
this.s.rtl&&d("div.DTFC_RightHeadBlocker",c).css({left:-a.bar+"px",right:""})},_fnGridLayout:function(){var a=this,b=this.dom.grid;d(b.wrapper).width();var c=this.s.dt.nTable.parentNode.offsetHeight,e=this.s.dt.nTable.parentNode.parentNode.offsetHeight,f=this._fnDTOverflow(),g=this.s.iLeftWidth,h=this.s.iRightWidth,i="rtl"===d(this.dom.body).css("direction"),j=function(b,c){f.bar?a._firefoxScrollError()?34<d(b).height()&&(b.style.width=c+f.bar+"px"):b.style.width=c+f.bar+"px":(b.style.width=c+20+
"px",b.style.paddingRight="20px",b.style.boxSizing="border-box")};f.x&&(c-=f.bar);b.wrapper.style.height=e+"px";0<this.s.iLeftColumns&&(e=b.left.wrapper,e.style.width=g+"px",e.style.height="1px",i?(e.style.left="",e.style.right=0):(e.style.left=0,e.style.right=""),b.left.body.style.height=c+"px",b.left.foot&&(b.left.foot.style.top=(f.x?f.bar:0)+"px"),j(b.left.liner,g),b.left.liner.style.height=c+"px",b.left.liner.style.maxHeight=c+"px");0<this.s.iRightColumns&&(e=b.right.wrapper,e.style.width=h+"px",
e.style.height="1px",this.s.rtl?(e.style.left=f.y?f.bar+"px":0,e.style.right=""):(e.style.left="",e.style.right=f.y?f.bar+"px":0),b.right.body.style.height=c+"px",b.right.foot&&(b.right.foot.style.top=(f.x?f.bar:0)+"px"),j(b.right.liner,h),b.right.liner.style.height=c+"px",b.right.liner.style.maxHeight=c+"px",b.right.headBlock.style.display=f.y?"block":"none",b.right.footBlock.style.display=f.y?"block":"none")},_fnDTOverflow:function(){var a=this.s.dt.nTable,b=a.parentNode,c={x:!1,y:!1,bar:this.s.dt.oScroll.iBarWidth};
a.offsetWidth>b.clientWidth&&(c.x=!0);a.offsetHeight>b.clientHeight&&(c.y=!0);return c},_fnDraw:function(a){this._fnGridLayout();this._fnCloneLeft(a);this._fnCloneRight(a);null!==this.s.fnDrawCallback&&this.s.fnDrawCallback.call(this,this.dom.clone.left,this.dom.clone.right);d(this).trigger("draw.dtfc",{leftClone:this.dom.clone.left,rightClone:this.dom.clone.right})},_fnCloneRight:function(a){if(!(0>=this.s.iRightColumns)){var b,c=[];for(b=this.s.iTableColumns-this.s.iRightColumns;b<this.s.iTableColumns;b++)this.s.dt.aoColumns[b].bVisible&&
c.push(b);this._fnClone(this.dom.clone.right,this.dom.grid.right,c,a)}},_fnCloneLeft:function(a){if(!(0>=this.s.iLeftColumns)){var b,c=[];for(b=0;b<this.s.iLeftColumns;b++)this.s.dt.aoColumns[b].bVisible&&c.push(b);this._fnClone(this.dom.clone.left,this.dom.grid.left,c,a)}},_fnCopyLayout:function(a,b,c){for(var e=[],f=[],g=[],h=0,i=a.length;h<i;h++){var j=[];j.nTr=d(a[h].nTr).clone(c,!1)[0];for(var l=0,o=this.s.iTableColumns;l<o;l++)if(-1!==d.inArray(l,b)){var q=d.inArray(a[h][l].cell,g);-1===q?(q=
d(a[h][l].cell).clone(c,!1)[0],f.push(q),g.push(a[h][l].cell),j.push({cell:q,unique:a[h][l].unique})):j.push({cell:f[q],unique:a[h][l].unique})}e.push(j)}return e},_fnClone:function(a,b,c,e){var f=this,g,h,i,j,l,o,q,n,m,k=this.s.dt;if(e){d(a.header).remove();a.header=d(this.dom.header).clone(!0,!1)[0];a.header.className+=" DTFC_Cloned";a.header.style.width="100%";b.head.appendChild(a.header);n=this._fnCopyLayout(k.aoHeader,c,!0);j=d(">thead",a.header);j.empty();g=0;for(h=n.length;g<h;g++)j[0].appendChild(n[g].nTr);
k.oApi._fnDrawHead(k,n,!0)}else{n=this._fnCopyLayout(k.aoHeader,c,!1);m=[];k.oApi._fnDetectHeader(m,d(">thead",a.header)[0]);g=0;for(h=n.length;g<h;g++){i=0;for(j=n[g].length;i<j;i++)m[g][i].cell.className=n[g][i].cell.className,d("span.DataTables_sort_icon",m[g][i].cell).each(function(){this.className=d("span.DataTables_sort_icon",n[g][i].cell)[0].className})}}this._fnEqualiseHeights("thead",this.dom.header,a.header);"auto"==this.s.sHeightMatch&&d(">tbody>tr",f.dom.body).css("height","auto");null!==
a.body&&(d(a.body).remove(),a.body=null);a.body=d(this.dom.body).clone(!0)[0];a.body.className+=" DTFC_Cloned";a.body.style.paddingBottom=k.oScroll.iBarWidth+"px";a.body.style.marginBottom=2*k.oScroll.iBarWidth+"px";null!==a.body.getAttribute("id")&&a.body.removeAttribute("id");d(">thead>tr",a.body).empty();d(">tfoot",a.body).remove();var p=d("tbody",a.body)[0];d(p).empty();if(0<k.aiDisplay.length){h=d(">thead>tr",a.body)[0];for(q=0;q<c.length;q++)l=c[q],o=d(k.aoColumns[l].nTh).clone(!0)[0],o.innerHTML=
"",j=o.style,j.paddingTop="0",j.paddingBottom="0",j.borderTopWidth="0",j.borderBottomWidth="0",j.height=0,j.width=f.s.aiInnerWidths[l]+"px",h.appendChild(o);d(">tbody>tr",f.dom.body).each(function(a){var a=f.s.dt.oFeatures.bServerSide===false?f.s.dt.aiDisplay[f.s.dt._iDisplayStart+a]:a,b=f.s.dt.aoData[a].anCells||d(this).children("td, th"),e=this.cloneNode(false);e.removeAttribute("id");e.setAttribute("data-dt-row",a);for(q=0;q<c.length;q++){l=c[q];if(b.length>0){o=d(b[l]).clone(true,true)[0];o.removeAttribute("id");
o.setAttribute("data-dt-row",a);o.setAttribute("data-dt-column",l);e.appendChild(o)}}p.appendChild(e)})}else d(">tbody>tr",f.dom.body).each(function(){o=this.cloneNode(true);o.className=o.className+" DTFC_NoData";d("td",o).html("");p.appendChild(o)});a.body.style.width="100%";a.body.style.margin="0";a.body.style.padding="0";k.oScroller!==t&&(h=k.oScroller.dom.force,b.forcer?b.forcer.style.height=h.style.height:(b.forcer=h.cloneNode(!0),b.liner.appendChild(b.forcer)));b.liner.appendChild(a.body);this._fnEqualiseHeights("tbody",
f.dom.body,a.body);if(null!==k.nTFoot){if(e){null!==a.footer&&a.footer.parentNode.removeChild(a.footer);a.footer=d(this.dom.footer).clone(!0,!0)[0];a.footer.className+=" DTFC_Cloned";a.footer.style.width="100%";b.foot.appendChild(a.footer);n=this._fnCopyLayout(k.aoFooter,c,!0);b=d(">tfoot",a.footer);b.empty();g=0;for(h=n.length;g<h;g++)b[0].appendChild(n[g].nTr);k.oApi._fnDrawHead(k,n,!0)}else{n=this._fnCopyLayout(k.aoFooter,c,!1);b=[];k.oApi._fnDetectHeader(b,d(">tfoot",a.footer)[0]);g=0;for(h=n.length;g<
h;g++){i=0;for(j=n[g].length;i<j;i++)b[g][i].cell.className=n[g][i].cell.className}}this._fnEqualiseHeights("tfoot",this.dom.footer,a.footer)}b=k.oApi._fnGetUniqueThs(k,d(">thead",a.header)[0]);d(b).each(function(a){l=c[a];this.style.width=f.s.aiInnerWidths[l]+"px"});null!==f.s.dt.nTFoot&&(b=k.oApi._fnGetUniqueThs(k,d(">tfoot",a.footer)[0]),d(b).each(function(a){l=c[a];this.style.width=f.s.aiInnerWidths[l]+"px"}))},_fnGetTrNodes:function(a){for(var b=[],c=0,d=a.childNodes.length;c<d;c++)"TR"==a.childNodes[c].nodeName.toUpperCase()&&
b.push(a.childNodes[c]);return b},_fnEqualiseHeights:function(a,b,c){if(!("none"==this.s.sHeightMatch&&"thead"!==a&&"tfoot"!==a)){var e,f,g=b.getElementsByTagName(a)[0],c=c.getElementsByTagName(a)[0],a=d(">"+a+">tr:eq(0)",b).children(":first");a.outerHeight();a.height();for(var g=this._fnGetTrNodes(g),b=this._fnGetTrNodes(c),h=[],c=0,a=b.length;c<a;c++)e=g[c].offsetHeight,f=b[c].offsetHeight,e=f>e?f:e,"semiauto"==this.s.sHeightMatch&&(g[c]._DTTC_iHeight=e),h.push(e);c=0;for(a=b.length;c<a;c++)b[c].style.height=
h[c]+"px",g[c].style.height=h[c]+"px"}},_firefoxScrollError:function(){if(u===t){var a=d("<div/>").css({position:"absolute",top:0,left:0,height:10,width:50,overflow:"scroll"}).appendTo("body");u=a[0].clientWidth===a[0].offsetWidth&&0!==this._fnDTOverflow().bar;a.remove()}return u}});m.defaults={iLeftColumns:1,iRightColumns:0,fnDrawCallback:null,sHeightMatch:"semiauto"};m.version="3.2.5";s.Api.register("fixedColumns()",function(){return this});s.Api.register("fixedColumns().update()",function(){return this.iterator("table",
function(a){a._oFixedColumns&&a._oFixedColumns.fnUpdate()})});s.Api.register("fixedColumns().relayout()",function(){return this.iterator("table",function(a){a._oFixedColumns&&a._oFixedColumns.fnRedrawLayout()})});s.Api.register("rows().recalcHeight()",function(){return this.iterator("row",function(a,b){a._oFixedColumns&&a._oFixedColumns.fnRecalculateHeight(this.row(b).node())})});s.Api.register("fixedColumns().rowIndex()",function(a){a=d(a);return a.parents(".DTFC_Cloned").length?this.rows({page:"current"}).indexes()[a.index()]:
this.row(a).index()});s.Api.register("fixedColumns().cellIndex()",function(a){a=d(a);if(a.parents(".DTFC_Cloned").length){var b=a.parent().index(),b=this.rows({page:"current"}).indexes()[b],a=a.parents(".DTFC_LeftWrapper").length?a.index():this.columns().flatten().length-this.context[0]._oFixedColumns.s.iRightColumns+a.index();return{row:b,column:this.column.index("toData",a),columnVisible:a}}return this.cell(a).index()});d(r).on("init.dt.fixedColumns",function(a,b){if("dt"===a.namespace){var c=b.oInit.fixedColumns,
e=s.defaults.fixedColumns;if(c||e)e=d.extend({},c,e),!1!==c&&new m(b,e)}});d.fn.dataTable.FixedColumns=m;return d.fn.DataTable.FixedColumns=m});


/*!
 Responsive 2.2.2
 2014-2018 SpryMedia Ltd - datatables.net/license
*/
(function(d){"function"===typeof define&&define.amd?define(["jquery","datatables.net"],function(l){return d(l,window,document)}):"object"===typeof exports?module.exports=function(l,j){l||(l=window);if(!j||!j.fn.dataTable)j=require("datatables.net")(l,j).$;return d(j,l,l.document)}:d(jQuery,window,document)})(function(d,l,j,q){function t(a,b,c){var e=b+"-"+c;if(n[e])return n[e];for(var d=[],a=a.cell(b,c).node().childNodes,b=0,c=a.length;b<c;b++)d.push(a[b]);return n[e]=d}function r(a,b,d){var e=b+
"-"+d;if(n[e]){for(var a=a.cell(b,d).node(),d=n[e][0].parentNode.childNodes,b=[],f=0,g=d.length;f<g;f++)b.push(d[f]);d=0;for(f=b.length;d<f;d++)a.appendChild(b[d]);n[e]=q}}var o=d.fn.dataTable,i=function(a,b){if(!o.versionCheck||!o.versionCheck("1.10.10"))throw"DataTables Responsive requires DataTables 1.10.10 or newer";this.s={dt:new o.Api(a),columns:[],current:[]};this.s.dt.settings()[0].responsive||(b&&"string"===typeof b.details?b.details={type:b.details}:b&&!1===b.details?b.details={type:!1}:
b&&!0===b.details&&(b.details={type:"inline"}),this.c=d.extend(!0,{},i.defaults,o.defaults.responsive,b),a.responsive=this,this._constructor())};d.extend(i.prototype,{_constructor:function(){var a=this,b=this.s.dt,c=b.settings()[0],e=d(l).width();b.settings()[0]._responsive=this;d(l).on("resize.dtr orientationchange.dtr",o.util.throttle(function(){var b=d(l).width();b!==e&&(a._resize(),e=b)}));c.oApi._fnCallbackReg(c,"aoRowCreatedCallback",function(e){-1!==d.inArray(!1,a.s.current)&&d(">td, >th",
e).each(function(e){e=b.column.index("toData",e);!1===a.s.current[e]&&d(this).css("display","none")})});b.on("destroy.dtr",function(){b.off(".dtr");d(b.table().body()).off(".dtr");d(l).off("resize.dtr orientationchange.dtr");d.each(a.s.current,function(b,e){!1===e&&a._setColumnVis(b,!0)})});this.c.breakpoints.sort(function(a,b){return a.width<b.width?1:a.width>b.width?-1:0});this._classLogic();this._resizeAuto();c=this.c.details;!1!==c.type&&(a._detailsInit(),b.on("column-visibility.dtr",function(){a._timer&&
clearTimeout(a._timer);a._timer=setTimeout(function(){a._timer=null;a._classLogic();a._resizeAuto();a._resize();a._redrawChildren()},100)}),b.on("draw.dtr",function(){a._redrawChildren()}),d(b.table().node()).addClass("dtr-"+c.type));b.on("column-reorder.dtr",function(){a._classLogic();a._resizeAuto();a._resize()});b.on("column-sizing.dtr",function(){a._resizeAuto();a._resize()});b.on("preXhr.dtr",function(){var e=[];b.rows().every(function(){this.child.isShown()&&e.push(this.id(true))});b.one("draw.dtr",
function(){a._resizeAuto();a._resize();b.rows(e).every(function(){a._detailsDisplay(this,false)})})});b.on("init.dtr",function(){a._resizeAuto();a._resize();d.inArray(false,a.s.current)&&b.columns.adjust()});this._resize()},_columnsVisiblity:function(a){var b=this.s.dt,c=this.s.columns,e,f,g=c.map(function(a,b){return{columnIdx:b,priority:a.priority}}).sort(function(a,b){return a.priority!==b.priority?a.priority-b.priority:a.columnIdx-b.columnIdx}),h=d.map(c,function(e,c){return!1===b.column(c).visible()?
"not-visible":e.auto&&null===e.minWidth?!1:!0===e.auto?"-":-1!==d.inArray(a,e.includeIn)}),m=0;e=0;for(f=h.length;e<f;e++)!0===h[e]&&(m+=c[e].minWidth);e=b.settings()[0].oScroll;e=e.sY||e.sX?e.iBarWidth:0;m=b.table().container().offsetWidth-e-m;e=0;for(f=h.length;e<f;e++)c[e].control&&(m-=c[e].minWidth);var s=!1;e=0;for(f=g.length;e<f;e++){var k=g[e].columnIdx;"-"===h[k]&&(!c[k].control&&c[k].minWidth)&&(s||0>m-c[k].minWidth?(s=!0,h[k]=!1):h[k]=!0,m-=c[k].minWidth)}g=!1;e=0;for(f=c.length;e<f;e++)if(!c[e].control&&
!c[e].never&&!1===h[e]){g=!0;break}e=0;for(f=c.length;e<f;e++)c[e].control&&(h[e]=g),"not-visible"===h[e]&&(h[e]=!1);-1===d.inArray(!0,h)&&(h[0]=!0);return h},_classLogic:function(){var a=this,b=this.c.breakpoints,c=this.s.dt,e=c.columns().eq(0).map(function(a){var b=this.column(a),e=b.header().className,a=c.settings()[0].aoColumns[a].responsivePriority;a===q&&(b=d(b.header()).data("priority"),a=b!==q?1*b:1E4);return{className:e,includeIn:[],auto:!1,control:!1,never:e.match(/\bnever\b/)?!0:!1,priority:a}}),
f=function(a,b){var c=e[a].includeIn;-1===d.inArray(b,c)&&c.push(b)},g=function(d,c,g,k){if(g)if("max-"===g){k=a._find(c).width;c=0;for(g=b.length;c<g;c++)b[c].width<=k&&f(d,b[c].name)}else if("min-"===g){k=a._find(c).width;c=0;for(g=b.length;c<g;c++)b[c].width>=k&&f(d,b[c].name)}else{if("not-"===g){c=0;for(g=b.length;c<g;c++)-1===b[c].name.indexOf(k)&&f(d,b[c].name)}}else e[d].includeIn.push(c)};e.each(function(a,e){for(var c=a.className.split(" "),f=!1,i=0,l=c.length;i<l;i++){var j=d.trim(c[i]);
if("all"===j){f=!0;a.includeIn=d.map(b,function(a){return a.name});return}if("none"===j||a.never){f=!0;return}if("control"===j){f=!0;a.control=!0;return}d.each(b,function(a,b){var d=b.name.split("-"),c=j.match(RegExp("(min\\-|max\\-|not\\-)?("+d[0]+")(\\-[_a-zA-Z0-9])?"));c&&(f=!0,c[2]===d[0]&&c[3]==="-"+d[1]?g(e,b.name,c[1],c[2]+c[3]):c[2]===d[0]&&!c[3]&&g(e,b.name,c[1],c[2]))})}f||(a.auto=!0)});this.s.columns=e},_detailsDisplay:function(a,b){var c=this,e=this.s.dt,f=this.c.details;if(f&&!1!==f.type){var g=
f.display(a,b,function(){return f.renderer(e,a[0],c._detailsObj(a[0]))});(!0===g||!1===g)&&d(e.table().node()).triggerHandler("responsive-display.dt",[e,a,g,b])}},_detailsInit:function(){var a=this,b=this.s.dt,c=this.c.details;"inline"===c.type&&(c.target="td:first-child, th:first-child");b.on("draw.dtr",function(){a._tabIndexes()});a._tabIndexes();d(b.table().body()).on("keyup.dtr","td, th",function(a){a.keyCode===13&&d(this).data("dtr-keyboard")&&d(this).click()});var e=c.target;d(b.table().body()).on("click.dtr mousedown.dtr mouseup.dtr",
"string"===typeof e?e:"td, th",function(c){if(d(b.table().node()).hasClass("collapsed")&&d.inArray(d(this).closest("tr").get(0),b.rows().nodes().toArray())!==-1){if(typeof e==="number"){var g=e<0?b.columns().eq(0).length+e:e;if(b.cell(this).index().column!==g)return}g=b.row(d(this).closest("tr"));c.type==="click"?a._detailsDisplay(g,false):c.type==="mousedown"?d(this).css("outline","none"):c.type==="mouseup"&&d(this).blur().css("outline","")}})},_detailsObj:function(a){var b=this,c=this.s.dt;return d.map(this.s.columns,
function(e,d){if(!e.never&&!e.control)return{title:c.settings()[0].aoColumns[d].sTitle,data:c.cell(a,d).render(b.c.orthogonal),hidden:c.column(d).visible()&&!b.s.current[d],columnIndex:d,rowIndex:a}})},_find:function(a){for(var b=this.c.breakpoints,c=0,e=b.length;c<e;c++)if(b[c].name===a)return b[c]},_redrawChildren:function(){var a=this,b=this.s.dt;b.rows({page:"current"}).iterator("row",function(c,e){b.row(e);a._detailsDisplay(b.row(e),!0)})},_resize:function(){var a=this,b=this.s.dt,c=d(l).width(),
e=this.c.breakpoints,f=e[0].name,g=this.s.columns,h,m=this.s.current.slice();for(h=e.length-1;0<=h;h--)if(c<=e[h].width){f=e[h].name;break}var i=this._columnsVisiblity(f);this.s.current=i;e=!1;h=0;for(c=g.length;h<c;h++)if(!1===i[h]&&!g[h].never&&!g[h].control&&!1===!b.column(h).visible()){e=!0;break}d(b.table().node()).toggleClass("collapsed",e);var k=!1,j=0;b.columns().eq(0).each(function(b,c){!0===i[c]&&j++;i[c]!==m[c]&&(k=!0,a._setColumnVis(b,i[c]))});k&&(this._redrawChildren(),d(b.table().node()).trigger("responsive-resize.dt",
[b,this.s.current]),0===b.page.info().recordsDisplay&&d("td",b.table().body()).eq(0).attr("colspan",j))},_resizeAuto:function(){var a=this.s.dt,b=this.s.columns;if(this.c.auto&&-1!==d.inArray(!0,d.map(b,function(a){return a.auto}))){d.isEmptyObject(n)||d.each(n,function(b){b=b.split("-");r(a,1*b[0],1*b[1])});a.table().node();var c=a.table().node().cloneNode(!1),e=d(a.table().header().cloneNode(!1)).appendTo(c),f=d(a.table().body()).clone(!1,!1).empty().appendTo(c),g=a.columns().header().filter(function(b){return a.column(b).visible()}).to$().clone(!1).css("display",
"table-cell").css("min-width",0);d(f).append(d(a.rows({page:"current"}).nodes()).clone(!1)).find("th, td").css("display","");if(f=a.table().footer()){var f=d(f.cloneNode(!1)).appendTo(c),h=a.columns().footer().filter(function(b){return a.column(b).visible()}).to$().clone(!1).css("display","table-cell");d("<tr/>").append(h).appendTo(f)}d("<tr/>").append(g).appendTo(e);"inline"===this.c.details.type&&d(c).addClass("dtr-inline collapsed");d(c).find("[name]").removeAttr("name");d(c).css("position","relative");
c=d("<div/>").css({width:1,height:1,overflow:"hidden",clear:"both"}).append(c);c.insertBefore(a.table().node());g.each(function(c){c=a.column.index("fromVisible",c);b[c].minWidth=this.offsetWidth||0});c.remove()}},_setColumnVis:function(a,b){var c=this.s.dt,e=b?"":"none";d(c.column(a).header()).css("display",e);d(c.column(a).footer()).css("display",e);c.column(a).nodes().to$().css("display",e);d.isEmptyObject(n)||c.cells(null,a).indexes().each(function(a){r(c,a.row,a.column)})},_tabIndexes:function(){var a=
this.s.dt,b=a.cells({page:"current"}).nodes().to$(),c=a.settings()[0],e=this.c.details.target;b.filter("[data-dtr-keyboard]").removeData("[data-dtr-keyboard]");"number"===typeof e?a.cells(null,e,{page:"current"}).nodes().to$().attr("tabIndex",c.iTabIndex).data("dtr-keyboard",1):("td:first-child, th:first-child"===e&&(e=">td:first-child, >th:first-child"),d(e,a.rows({page:"current"}).nodes()).attr("tabIndex",c.iTabIndex).data("dtr-keyboard",1))}});i.breakpoints=[{name:"desktop",width:Infinity},{name:"tablet-l",
width:1024},{name:"tablet-p",width:768},{name:"mobile-l",width:480},{name:"mobile-p",width:320}];i.display={childRow:function(a,b,c){if(b){if(d(a.node()).hasClass("parent"))return a.child(c(),"child").show(),!0}else{if(a.child.isShown())return a.child(!1),d(a.node()).removeClass("parent"),!1;a.child(c(),"child").show();d(a.node()).addClass("parent");return!0}},childRowImmediate:function(a,b,c){if(!b&&a.child.isShown()||!a.responsive.hasHidden())return a.child(!1),d(a.node()).removeClass("parent"),
!1;a.child(c(),"child").show();d(a.node()).addClass("parent");return!0},modal:function(a){return function(b,c,e){if(c)d("div.dtr-modal-content").empty().append(e());else{var f=function(){g.remove();d(j).off("keypress.dtr")},g=d('<div class="dtr-modal"/>').append(d('<div class="dtr-modal-display"/>').append(d('<div class="dtr-modal-content"/>').append(e())).append(d('<div class="dtr-modal-close">&times;</div>').click(function(){f()}))).append(d('<div class="dtr-modal-background"/>').click(function(){f()})).appendTo("body");
d(j).on("keyup.dtr",function(a){27===a.keyCode&&(a.stopPropagation(),f())})}a&&a.header&&d("div.dtr-modal-content").prepend("<h2>"+a.header(b)+"</h2>")}}};var n={};i.renderer={listHiddenNodes:function(){return function(a,b,c){var e=d('<ul data-dtr-index="'+b+'" class="dtr-details"/>'),f=!1;d.each(c,function(b,c){c.hidden&&(d('<li data-dtr-index="'+c.columnIndex+'" data-dt-row="'+c.rowIndex+'" data-dt-column="'+c.columnIndex+'"><span class="dtr-title">'+c.title+"</span> </li>").append(d('<span class="dtr-data"/>').append(t(a,
c.rowIndex,c.columnIndex))).appendTo(e),f=!0)});return f?e:!1}},listHidden:function(){return function(a,b,c){return(a=d.map(c,function(a){return a.hidden?'<li data-dtr-index="'+a.columnIndex+'" data-dt-row="'+a.rowIndex+'" data-dt-column="'+a.columnIndex+'"><span class="dtr-title">'+a.title+'</span> <span class="dtr-data">'+a.data+"</span></li>":""}).join(""))?d('<ul data-dtr-index="'+b+'" class="dtr-details"/>').append(a):!1}},tableAll:function(a){a=d.extend({tableClass:""},a);return function(b,
c,e){b=d.map(e,function(a){return'<tr data-dt-row="'+a.rowIndex+'" data-dt-column="'+a.columnIndex+'"><td>'+a.title+":</td> <td>"+a.data+"</td></tr>"}).join("");return d('<table class="'+a.tableClass+' dtr-details" width="100%"/>').append(b)}}};i.defaults={breakpoints:i.breakpoints,auto:!0,details:{display:i.display.childRow,renderer:i.renderer.listHidden(),target:0,type:"inline"},orthogonal:"display"};var p=d.fn.dataTable.Api;p.register("responsive()",function(){return this});p.register("responsive.index()",
function(a){a=d(a);return{column:a.data("dtr-index"),row:a.parent().data("dtr-index")}});p.register("responsive.rebuild()",function(){return this.iterator("table",function(a){a._responsive&&a._responsive._classLogic()})});p.register("responsive.recalc()",function(){return this.iterator("table",function(a){a._responsive&&(a._responsive._resizeAuto(),a._responsive._resize())})});p.register("responsive.hasHidden()",function(){var a=this.context[0];return a._responsive?-1!==d.inArray(!1,a._responsive.s.current):
!1});p.registerPlural("columns().responsiveHidden()","column().responsiveHidden()",function(){return this.iterator("column",function(a,b){return a._responsive?a._responsive.s.current[b]:!1},1)});i.version="2.2.2";d.fn.dataTable.Responsive=i;d.fn.DataTable.Responsive=i;d(j).on("preInit.dt.dtr",function(a,b){if("dt"===a.namespace&&(d(b.nTable).hasClass("responsive")||d(b.nTable).hasClass("dt-responsive")||b.oInit.responsive||o.defaults.responsive)){var c=b.oInit.responsive;!1!==c&&new i(b,d.isPlainObject(c)?
c:{})}});return i});


(function() {


}).call(this);
var inputType = "string";
var stepped = 0, rowCount = 0, errorCount = 0, firstError;
var start, end;
var firstRun = true;
var maxUnparseLength = 10000;

$(function()
{
	// Tabs
	$('#tab-string').click(function()
	{
		$('.tab').removeClass('active');
		$(this).addClass('active');
		$('.input-area').hide();
		$('#input-string').show();
		$('#submit').text("Parse");
		inputType = "string";
	});

	$('#tab-local').click(function()
	{
		$('.tab').removeClass('active');
		$(this).addClass('active');
		$('.input-area').hide();
		$('#input-local').show();
		$('#submit').text("Parse");
		inputType = "local";
	});

	$('#tab-remote').click(function()
	{
		$('.tab').removeClass('active');
		$(this).addClass('active');
		$('.input-area').hide();
		$('#input-remote').show();
		$('#submit').text("Parse");
		inputType = "remote";
	});

	$('#tab-unparse').click(function()
	{
		$('.tab').removeClass('active');
		$(this).addClass('active');
		$('.input-area').hide();
		$('#input-unparse').show();
		$('#submit').text("Unparse");
		inputType = "json";
	});



	// Sample files
	$('#remote-normal-file').click(function() {
		$('#url').val($('#local-normal-file').attr('href'));
	});
	$('#remote-large-file').click(function() {
		$('#url').val($('#local-large-file').attr('href'));
	});
	$('#remote-malformed-file').click(function() {
		$('#url').val($('#local-malformed-file').attr('href'));
	});




	// Demo invoked
	$('#submit').click(function()
	{
		if ($(this).prop('disabled') == "true")
			return;

		stepped = 0;
		rowCount = 0;
		errorCount = 0;
		firstError = undefined;

		var config = buildConfig();
		var input = $('#input').val();

		if (inputType == "remote")
			input = $('#url').val();
		else if (inputType == "json")
			input = $('#json').val();

		// Allow only one parse at a time
		$(this).prop('disabled', true);

		if (!firstRun)
			console.log("--------------------------------------------------");
		else
			firstRun = false;



		if (inputType == "local")
		{
			if (!$('#files')[0].files.length)
			{
				alert("Please choose at least one file to parse.");
				return enableButton();
			}
			
			$('#files').parse({
				config: config,
				before: function(file, inputElem)
				{
					start = now();
					console.log("Parsing file...", file);
				},
				error: function(err, file)
				{
					console.log("ERROR:", err, file);
					firstError = firstError || err;
					errorCount++;
				},
				complete: function()
				{
					end = now();
					printStats("Done with all files");
				}
			});
		}
		else if (inputType == "json")
		{
			if (!input)
			{
				alert("Please enter a valid JSON string to convert to CSV.");
				return enableButton();
			}

			start = now();
			var csv = Papa.unparse(input, config);
			end = now();

			console.log("Unparse complete");
			console.log("Time:", (end-start || "(Unknown; your browser does not support the Performance API)"), "ms");
			
			if (csv.length > maxUnparseLength)
			{
				csv = csv.substr(0, maxUnparseLength);
				console.log("(Results truncated for brevity)");
			}

			console.log(csv);

			setTimeout(enableButton, 100);	// hackity-hack
		}
		else if (inputType == "remote" && !input)
		{
			alert("Please enter the URL of a file to download and parse.");
			return enableButton();
		}
		else
		{
			start = now();
			var results = Papa.parse(input, config);

			console.log("Synchronous results:", results);
			



			if (config.worker || config.download)
				console.log("Running...");
			
			


		}
	});

	$('#insert-tab').click(function()
	{
		$('#delimiter').val('\t');
	});
});




function printStats(msg)
{
	if (msg)
		console.log(msg);
	console.log("       Time:", (end-start || "(Unknown; your browser does not support the Performance API)"), "ms");
	console.log("  Row count:", rowCount);
	if (stepped)
		console.log("    Stepped:", stepped);
	console.log("     Errors:", errorCount);
	if (errorCount)
		console.log("First error:", firstError);
}



function buildConfig()
{
	return {
		delimiter: $('#delimiter').val(),
		header: $('#header').prop('checked'),
		dynamicTyping: $('#dynamicTyping').prop('checked'),
		skipEmptyLines: $('#skipEmptyLines').prop('checked'),
		preview: parseInt($('#preview').val() || 0),
		step: $('#stream').prop('checked') ? stepFn : undefined,
		encoding: $('#encoding').val(),
		worker: $('#worker').prop('checked'),
		comments: $('#comments').val(),
		complete: completeFn,
		error: errorFn,
		download: inputType == "remote"
	};
}

function stepFn(results, parser)
{
	stepped++;
	if (results)
	{
		if (results.data)
			rowCount += results.data.length;
		if (results.errors)
		{
			errorCount += results.errors.length;
			firstError = firstError || results.errors[0];
		}
	}
}



function completeFn(results)
{
	end = now();

	if (results && results.errors)
	{
		if (results.errors)
		{
			errorCount = results.errors.length;
			firstError = results.errors[0];
		}
		if (results.data && results.data.length > 0)
			rowCount = results.data.length;
	}

	printStats("Parse complete");
	console.log("    Results:", results);

	for (var i = 0; i < results.data.length; i++) {
						$.ajax({
					beforeSend: function(){
					       $('.loader').show()
					   },
					url: 'csv_upload',
					type: 'put',
					data: { 
						acw: results.data[i]["ACW"],
						aht: results.data[i]["AHT"],
						abnd: results.data[i]["Abnd"],
						availability: results.data[i]["Availability"],
						callback_calls: results.data[i]["Callback Calls"],
						callback_talk: results.data[i]["Callback Talk"],
						date: results.data[i]["Date"],
						direct_calls: results.data[i]["Direct Calls"],
						direct_talk: results.data[i]["Direct Talk"],
						name: results.data[i]["Name"],
						net_login: results.data[i]["Net Login"],
						occupancy: results.data[i]["Occupancy"],
						outbound_calls: results.data[i]["Outb'nd Calls"],
						outbound_talk: results.data[i]["Outb'nd Talk"],
						picked: results.data[i]["Picked"],
						power_dial: results.data[i]["Power Dial"],
						queue_calls: results.data[i]["Queue Calls"],
						queue_talk: results.data[i]["Queue Talk"],
						recover: results.data[i]["Recover"],
						requested_worktime: results.data[i]["Requested Worktime"],
						shift: results.data[i]["Shift"],
						total_break: results.data[i]["Total Break"],
						total_calls: results.data[i]["Total Calls"],
						total_login: results.data[i]["Total Login"],
						total_talk: results.data[i]["Total Talk"],
						un_ans: results.data[i]["Un Ans"],
						extension: results.data[i]["User ID"],
						wrapup_time: results.data[i]["Wrapup Time"]
					 },
					 complete: function(){
						$('.loader').hide();
						location.reload();
					}
				})
	}


	// icky hack
	setTimeout(enableButton, 100);
}

function errorFn(err, file)
{
	end = now();
	console.log("ERROR:", err, file);
	enableButton();
}

function enableButton()
{
	$('#submit').prop('disabled', false);
}

function now()
{
	return typeof window.performance !== 'undefined'
			? window.performance.now()
			: 0;
}
;
(function() {


}).call(this);
/*!
 Bootstrap integration for DataTables' Buttons
 ©2016 SpryMedia Ltd - datatables.net/license
*/

(function(c){"function"===typeof define&&define.amd?define(["jquery","datatables.net-bs4","datatables.net-buttons"],function(a){return c(a,window,document)}):"object"===typeof exports?module.exports=function(a,b){a||(a=window);b&&b.fn.dataTable||(b=require("datatables.net-bs4")(a,b).$);b.fn.dataTable.Buttons||require("datatables.net-buttons")(a,b);return c(b,a,a.document)}:c(jQuery,window,document)})(function(c,a,b,d){a=c.fn.dataTable;c.extend(!0,a.Buttons.defaults,{dom:{container:{className:"list-group"},
button:{className:"list-group-item list-group-item-action bg-dark text-white font-weight-bold text-uppercase text-center"},collection:{tag:"div",className:"dt-button-collection dropdown-menu",button:{tag:"a",className:"dt-button dropdown-item",active:"active",disabled:"disabled"}}}});a.ext.buttons.collection.className+=" dropdown-toggle";a.ext.buttons.collection.rightAlignClassName="dropdown-menu-right";return a.Buttons});
  jQuery(function() {
  var users;
  users = $('#err_log_user_id').html();
  console.log(users);
  return $('#err_log_department_id').change(function() {
    var department, options;
    department = $('#err_log_department_id :selected').text();
    options = $(users).filter("optgroup[label=" + department + "]").html();
    console.log(options);
    if (options) {
      return $('#err_log_user_id').html(options);
    } else {
      return $('#err_log_user_id').empty();
    }
  });
});



(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);

/*!
 * JavaScript Cookie v2.2.0
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */

;(function (factory) {
	var registeredInModuleLoader = false;
	if (typeof define === 'function' && define.amd) {
		define(factory);
		registeredInModuleLoader = true;
	}
	if (typeof exports === 'object') {
		module.exports = factory();
		registeredInModuleLoader = true;
	}
	if (!registeredInModuleLoader) {
		var OldCookies = window.Cookies;
		var api = window.Cookies = factory();
		api.noConflict = function () {
			window.Cookies = OldCookies;
			return api;
		};
	}
}(function () {
	function extend () {
		var i = 0;
		var result = {};
		for (; i < arguments.length; i++) {
			var attributes = arguments[ i ];
			for (var key in attributes) {
				result[key] = attributes[key];
			}
		}
		return result;
	}

	function init (converter) {
		function api (key, value, attributes) {
			var result;
			if (typeof document === 'undefined') {
				return;
			}

			// Write

			if (arguments.length > 1) {
				attributes = extend({
					path: '/'
				}, api.defaults, attributes);

				if (typeof attributes.expires === 'number') {
					var expires = new Date();
					expires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);
					attributes.expires = expires;
				}

				// We're using "expires" because "max-age" is not supported by IE
				attributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';

				try {
					result = JSON.stringify(value);
					if (/^[\{\[]/.test(result)) {
						value = result;
					}
				} catch (e) {}

				if (!converter.write) {
					value = encodeURIComponent(String(value))
						.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
				} else {
					value = converter.write(value, key);
				}

				key = encodeURIComponent(String(key));
				key = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);
				key = key.replace(/[\(\)]/g, escape);

				var stringifiedAttributes = '';

				for (var attributeName in attributes) {
					if (!attributes[attributeName]) {
						continue;
					}
					stringifiedAttributes += '; ' + attributeName;
					if (attributes[attributeName] === true) {
						continue;
					}
					stringifiedAttributes += '=' + attributes[attributeName];
				}
				return (document.cookie = key + '=' + value + stringifiedAttributes);
			}

			// Read

			if (!key) {
				result = {};
			}

			// To prevent the for loop in the first place assign an empty array
			// in case there are no cookies at all. Also prevents odd result when
			// calling "get()"
			var cookies = document.cookie ? document.cookie.split('; ') : [];
			var rdecode = /(%[0-9A-Z]{2})+/g;
			var i = 0;

			for (; i < cookies.length; i++) {
				var parts = cookies[i].split('=');
				var cookie = parts.slice(1).join('=');

				if (!this.json && cookie.charAt(0) === '"') {
					cookie = cookie.slice(1, -1);
				}

				try {
					var name = parts[0].replace(rdecode, decodeURIComponent);
					cookie = converter.read ?
						converter.read(cookie, name) : converter(cookie, name) ||
						cookie.replace(rdecode, decodeURIComponent);

					if (this.json) {
						try {
							cookie = JSON.parse(cookie);
						} catch (e) {}
					}

					if (key === name) {
						result = cookie;
						break;
					}

					if (!key) {
						result[name] = cookie;
					}
				} catch (e) {}
			}

			return result;
		}

		api.set = api;
		api.get = function (key) {
			return api.call(api, key);
		};
		api.getJSON = function () {
			return api.apply({
				json: true
			}, [].slice.call(arguments));
		};
		api.defaults = {};

		api.remove = function (key, attributes) {
			api(key, '', extend(attributes, {
				expires: -1
			}));
		};

		api.withConverter = init;

		return api;
	}

	return init(function () {});
}));
/*
* Kendo UI DataViz v2013.2.716 (http://kendoui.com)
* Copyright 2013 Telerik AD. All rights reserved.
*
* Kendo UI DataViz commercial licenses may be obtained at
* https://www.kendoui.com/purchase/license-agreement/kendo-ui-dataviz-commercial.aspx
* If you do not own a commercial license, this file shall be governed by the trial license terms.
*/



(typeof define=="function"&&define.amd?define:function(deps,body){return body()})([],function(){!function(e,t,n){function r(){}function i(e,t){if(t)return"'"+e.split("'").join("\\'").split('\\"').join('\\\\\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")+"'";var n=e.charAt(0),r=e.substring(1);return"="===n?"+("+r+")+":":"===n?"+e("+r+")+":";"+e+";o+="}function o(e,t,n){return e+="",t=t||2,n=t-e.length,n?O[t].substring(0,n)+e:e}function a(t){var n,r,i,o,a,s,l,c,d,u,h,f,p,g=pt.browser,m="rtl"==t.css("direction");return t.parent().hasClass("k-animation-container")?(f=t.parent(".k-animation-container"),p=f[0].style,f.is(":hidden")&&f.show(),n=gt.test(p.width)||gt.test(p.height),n||f.css({width:t.outerWidth(),height:t.outerHeight()})):(r=t.css(ot.support.transitions.css+"box-shadow")||t.css("box-shadow"),i=r?r.match(vt)||[0,0,0,0,0]:[0,0,0,0,0],o=ht.max(+i[3],+(i[4]||0)),a=-i[1]+o,s=+i[1]+o,l=+i[2]+o,c=t[0].style.width,d=t[0].style.height,u=gt.test(c),h=gt.test(d),g.opera&&(a=s=l=5),n=u||h,u||(c=t.outerWidth()),h||(d=t.outerHeight()),t.wrap(e("<div/>").addClass("k-animation-container").css({width:c,height:d,marginLeft:a*(m?1:-1),paddingLeft:a,paddingRight:s,paddingBottom:l})),n&&t.css({width:"100%",height:"100%",boxSizing:"border-box",mozBoxSizing:"border-box",webkitBoxSizing:"border-box"})),g.msie&&ht.floor(g.version)<=7&&(t.css({zoom:1}),t.children(".k-menu").width(t.width())),t.parent()}function s(e){var t=1,n=arguments.length;for(t=1;n>t;t++)l(e,arguments[t]);return e}function l(e,t){var n,r,i,o,a=ot.data.ObservableArray,s=ot.data.DataSource;for(n in t)r=t[n],i=typeof r,i===_t&&null!==r&&r.constructor!==Array&&r.constructor!==a&&r.constructor!==s?r instanceof Date?e[n]=new Date(r.getTime()):(o=e[n],e[n]=typeof o===_t?o||{}:{},l(e[n],r)):i!==At&&(e[n]=r);return e}function c(e,t,r){for(var i in t)if(t.hasOwnProperty(i)&&t[i].test(e))return i;return r!==n?r:e}function d(t,n){var r,i={};return document.defaultView&&document.defaultView.getComputedStyle?(r=document.defaultView.getComputedStyle(t,""),n&&e.each(n,function(e,t){i[t]=r.getPropertyValue(t)})):(r=t.currentStyle,n&&e.each(n,function(e,t){i[t]=r[t.replace(/\-(\w)/g,function(e,t){return t.toUpperCase()})]})),ot.size(i)||(i=r),i}function u(e){var t,n=0;for(t in e)e.hasOwnProperty(t)&&"toJSON"!=t&&n++;return n}function h(e,t,n){var r,i,o,a;return t||(t="offset"),r=e[t](),i=pt.mobileOS,pt.touch&&i.ios&&i.flatVersion<410&&(o="offset"==t?r:e.offset(),a=r.left==o.left&&r.top==o.top)?{top:r.top-window.scrollY,left:r.left-window.scrollX}:(ot.support.pointers&&!n&&(r.top-=window.pageYOffset-document.documentElement.scrollTop,r.left-=window.pageXOffset-document.documentElement.scrollLeft),r)}function f(e){var t={};return st("string"==typeof e?e.split(" "):e,function(e){t[e]=this}),t}function p(e){return new ot.effects.Element(e)}function g(e,t,n,r){return typeof e===wt&&(ut(t)&&(r=t,t=400,n=!1),ut(n)&&(r=n,n=!1),typeof t===kt&&(n=t,t=400),e={effects:e,duration:t,reverse:n,complete:r}),at({effects:{},duration:400,reverse:!1,init:dt,teardown:dt,hide:!1},e,{completeCallback:e.complete,complete:dt})}function m(t,n,r,i,o){for(var a,s=0,l=t.length;l>s;s++)a=e(t[s]),a.queue(function(){R.promise(a,g(n,r,i,o))});return t}function v(e,t,n,r,i,o){return R.transitionPromise(e,t,g(n,r,i,o))}function x(e,t,n,r){return t&&(t=t.split(" "),st(t,function(t,n){e.toggleClass(n,r)})),e}function y(e){return(""+e).replace(z,"&amp;").replace(F,"&lt;").replace(U,"&gt;")}function w(e,r){var i;return 0===r.indexOf("data")&&(r=r.substring(4),r=r.charAt(0).toLowerCase()+r.substring(1)),r=r.replace(Y,"-$1"),i=e.getAttribute("data-"+ot.ns+r),null===i?i=n:"null"===i?i=null:"true"===i?i=!0:"false"===i?i=!1:xt.test(i)?i=parseFloat(i):q.test(i)&&!Q.test(i)&&(i=t("("+i+")")),i}function b(t,r){var i,o,a={};for(i in r)o=w(t,i),o!==n&&(W.test(i)&&(o=ot.template(e("#"+o).html())),a[i]=o);return a}function _(e,t){var n=e.nodeName.toLowerCase();return(/input|select|textarea|button|object/.test(n)?!e.disabled:"a"===n?e.href||t:t)&&C(e)}function C(t){return!e(t).parents().andSelf().filter(function(){return"hidden"===e.css(this,"visibility")||e.expr.filters.hidden(this)}).length}function k(e,t){return new k.fn.init(e,t)}var A,S,T,P,D,B,M,I,L,E,O,V,R,z,F,U,j,H,N,G,W,q,Q,Y,X,$,Z,J,K,et,tt,nt,rt,it,ot=window.kendo=window.kendo||{},at=e.extend,st=e.each,lt=e.proxy,ct=e.isArray,dt=e.noop,ut=e.isFunction,ht=Math,ft=window.JSON||{},pt={},gt=/%/,mt=/\{(\d+)(:[^\}]+)?\}/g,vt=/(\d+?)px\s*(\d+?)px\s*(\d+?)px\s*(\d+?)?/i,xt=/^(\+|-?)\d+(\.?)\d*$/,yt="function",wt="string",bt="number",_t="object",Ct="null",kt="boolean",At="undefined",St={},Tt={},Pt=[].slice,Dt=window.Globalize;ot.version="2013.2.716",r.extend=function(e){var t,n,r=function(){},i=this,o=e&&e.init?e.init:function(){i.apply(this,arguments)};r.prototype=i.prototype,n=o.fn=o.prototype=new r;for(t in e)n[t]=typeof e[t]!==_t||e[t]instanceof Array||null===e[t]?e[t]:at(!0,{},r.prototype[t],e[t]);return n.constructor=o,o.extend=i.extend,o},S=function(){this._defaultPrevented=!0},T=function(){return this._defaultPrevented===!0},P=r.extend({init:function(){this._events={}},bind:function(e,t,r){var i,o,a,s,l,c=this,d=typeof e===wt?[e]:e,u=typeof t===yt;if(t===n){for(i in e)c.bind(i,e[i]);return c}for(i=0,o=d.length;o>i;i++)e=d[i],s=u?t:t[e],s&&(r&&(a=s,s=function(){c.unbind(e,s),a.apply(c,arguments)}),l=c._events[e]=c._events[e]||[],l.push(s));return c},one:function(e,t){return this.bind(e,t,!0)},first:function(e,t){var n,r,i,o,a=this,s=typeof e===wt?[e]:e,l=typeof t===yt;for(n=0,r=s.length;r>n;n++)e=s[n],i=l?t:t[e],i&&(o=a._events[e]=a._events[e]||[],o.unshift(i));return a},trigger:function(e,t){var n,r,i=this,o=i._events[e];if(o){for(t=t||{},t.sender=i,t._defaultPrevented=!1,t.preventDefault=S,t.isDefaultPrevented=T,o=o.slice(),n=0,r=o.length;r>n;n++)o[n].call(i,t);return t._defaultPrevented===!0}return!1},unbind:function(e,t){var r,i=this,o=i._events[e];if(e===n)i._events={};else if(o)if(t)for(r=o.length-1;r>=0;r--)o[r]===t&&o.splice(r,1);else i._events[e]=[];return i}}),D=/^\w+/,B=/\$\{([^}]*)\}/g,M=/\\\}/g,I=/__CURLY__/g,L=/\\#/g,E=/__SHARP__/g,O=["","0","00","000","0000"],A={paramName:"data",useWithBlock:!0,render:function(e,t){var n,r,i="";for(n=0,r=t.length;r>n;n++)i+=e(t[n]);return i},compile:function(t,n){var r,o,a,s=at({},this,n),l=s.paramName,c=l.match(D)[0],d=s.useWithBlock,u="var o,e=kendo.htmlEncode;";if(ut(t))return 2===t.length?function(n){return t(e,{data:n}).join("")}:t;for(u+=d?"with("+l+"){":"",u+="o=",o=t.replace(M,"__CURLY__").replace(B,"#=e($1)#").replace(I,"}").replace(L,"__SHARP__").split("#"),a=0;a<o.length;a++)u+=i(o[a],0===a%2);u+=d?";}":";",u+="return o;",u=u.replace(E,"#");try{return r=Function(c,u),r._slotCount=Math.floor(o.length/2),r}catch(h){throw Error(ot.format("Invalid template:'{0}' Generated code:'{1}'",t,u))}}},function(){function e(e){return a.lastIndex=0,a.test(e)?'"'+e.replace(a,function(e){var t=s[e];return typeof t===wt?t:"\\u"+("0000"+e.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+e+'"'}function t(o,a){var s,c,d,u,h,f,p=n,g=a[o];if(g&&typeof g===_t&&typeof g.toJSON===yt&&(g=g.toJSON(o)),typeof i===yt&&(g=i.call(a,o,g)),f=typeof g,f===wt)return e(g);if(f===bt)return isFinite(g)?g+"":Ct;if(f===kt||f===Ct)return g+"";if(f===_t){if(!g)return Ct;if(n+=r,h=[],"[object Array]"===l.apply(g)){for(u=g.length,s=0;u>s;s++)h[s]=t(s,g)||Ct;return d=0===h.length?"[]":n?"[\n"+n+h.join(",\n"+n)+"\n"+p+"]":"["+h.join(",")+"]",n=p,d}if(i&&typeof i===_t)for(u=i.length,s=0;u>s;s++)typeof i[s]===wt&&(c=i[s],d=t(c,g),d&&h.push(e(c)+(n?": ":":")+d));else for(c in g)Object.hasOwnProperty.call(g,c)&&(d=t(c,g),d&&h.push(e(c)+(n?": ":":")+d));return d=0===h.length?"{}":n?"{\n"+n+h.join(",\n"+n)+"\n"+p+"}":"{"+h.join(",")+"}",n=p,d}}var n,r,i,a=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,s={"\b":"\\b","	":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},l={}.toString;typeof Date.prototype.toJSON!==yt&&(Date.prototype.toJSON=function(){var e=this;return isFinite(e.valueOf())?o(e.getUTCFullYear(),4)+"-"+o(e.getUTCMonth()+1)+"-"+o(e.getUTCDate())+"T"+o(e.getUTCHours())+":"+o(e.getUTCMinutes())+":"+o(e.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(){return this.valueOf()}),typeof ft.stringify!==yt&&(ft.stringify=function(e,o,a){var s;if(n="",r="",typeof a===bt)for(s=0;a>s;s+=1)r+=" ";else typeof a===wt&&(r=a);if(i=o,o&&typeof o!==yt&&(typeof o!==_t||typeof o.length!==bt))throw Error("JSON.stringify");return t("",{"":e})})}(),function(){function e(e){if(e){if(e.numberFormat)return e;if(typeof e===wt){var t=ot.cultures;return t[e]||t[e.split("-")[0]]||null}return null}return null}function t(t){return t&&(t=e(t)),t||ot.cultures.current}function r(e){e.groupSizes=e.groupSize,e.percent.groupSizes=e.percent.groupSize,e.currency.groupSizes=e.currency.groupSize}function i(e,r,i){i=t(i);var a=i.calendars.standard,s=a.days,l=a.months;return r=a.patterns[r]||r,r.replace(c,function(t){var r;return"d"===t?r=e.getDate():"dd"===t?r=o(e.getDate()):"ddd"===t?r=s.namesAbbr[e.getDay()]:"dddd"===t?r=s.names[e.getDay()]:"M"===t?r=e.getMonth()+1:"MM"===t?r=o(e.getMonth()+1):"MMM"===t?r=l.namesAbbr[e.getMonth()]:"MMMM"===t?r=l.names[e.getMonth()]:"yy"===t?r=o(e.getFullYear()%100):"yyyy"===t?r=o(e.getFullYear(),4):"h"===t?r=e.getHours()%12||12:"hh"===t?r=o(e.getHours()%12||12):"H"===t?r=e.getHours():"HH"===t?r=o(e.getHours()):"m"===t?r=e.getMinutes():"mm"===t?r=o(e.getMinutes()):"s"===t?r=e.getSeconds():"ss"===t?r=o(e.getSeconds()):"f"===t?r=ht.floor(e.getMilliseconds()/100):"ff"===t?r=ht.floor(e.getMilliseconds()/10):"fff"===t?r=e.getMilliseconds():"tt"===t&&(r=e.getHours()<12?a.AM[0]:a.PM[0]),r!==n?r:t.slice(1,t.length-1)})}function a(e,r,i){i=t(i);var o,a,l,c,y,w,b,_,C,k,A,S,T,P,D,B,M,I,L,E,O,V,R,z=i.numberFormat,F=z.groupSize[0],U=z[g],j=z[p],H=z.decimals,N=z.pattern[0],G=[],W=0>e,q=f,Q=f,Y=-1;if(e===n)return f;if(!isFinite(e))return e;if(!r)return i.name.length?e.toLocaleString():""+e;if(y=d.exec(r)){if(r=y[1].toLowerCase(),a="c"===r,l="p"===r,(a||l)&&(z=a?z.currency:z.percent,F=z.groupSize[0],U=z[g],j=z[p],H=z.decimals,o=z.symbol,N=z.pattern[W?0:1]),c=y[2],c&&(H=+c),"e"===r)return c?e.toExponential(H):e.toExponential();if(l&&(e*=100),e=s(e,H),e=e.split(p),w=e[0],b=e[1],W&&(w=w.substring(1)),Q=w,_=w.length,_>=F)for(Q=f,k=0;_>k;k++)k>0&&0===(_-k)%F&&(Q+=U),Q+=w.charAt(k);if(b&&(Q+=j+b),"n"===r&&!W)return Q;for(e=f,k=0,A=N.length;A>k;k++)S=N.charAt(k),e+="n"===S?Q:"$"===S||"%"===S?o:S;return e}if(W&&(e=-e),(r.indexOf("'")>-1||r.indexOf('"')>-1||r.indexOf("\\")>-1)&&(r=r.replace(u,function(e){var t=e.charAt(0).replace("\\",""),n=e.slice(1).replace(t,"");return G.push(n),x})),r=r.split(";"),W&&r[1])r=r[1],P=!0;else if(0===e){if(r=r[2]||r[0],-1==r.indexOf(m)&&-1==r.indexOf(v))return r}else r=r[0];if(E=r.indexOf("%"),O=r.indexOf("$"),l=-1!=E,a=-1!=O,l&&(e*=100),a&&"\\"===r[O-1]&&(r=r.split("\\").join(""),a=!1),(a||l)&&(z=a?z.currency:z.percent,F=z.groupSize[0],U=z[g],j=z[p],H=z.decimals,o=z.symbol),T=r.indexOf(g)>-1,T&&(r=r.replace(h,f)),D=r.indexOf(p),A=r.length,-1!=D?(b=(""+e).split("e"),b=b[1]?s(e,Math.abs(b[1])):b[0],b=b.split(p)[1]||f,M=r.lastIndexOf(v)-D,B=r.lastIndexOf(m)-D,I=M>-1,L=B>-1,k=b.length,I||L||(r=r.substring(0,D)+r.substring(D+1),A=r.length,D=-1,k=0),I&&M>B?k=M:B>M&&(L&&k>B?k=B:I&&M>k&&(k=M)),k>-1&&(e=s(e,k))):e=s(e),B=r.indexOf(m),V=M=r.indexOf(v),Y=-1==B&&-1!=M?M:-1!=B&&-1==M?B:B>M?M:B,B=r.lastIndexOf(m),M=r.lastIndexOf(v),R=-1==B&&-1!=M?M:-1!=B&&-1==M?B:B>M?B:M,Y==A&&(R=Y),-1!=Y){if(Q=(""+e).split(p),w=Q[0],b=Q[1]||f,_=w.length,C=b.length,T)if(_===F&&D-V>_)w=U+w;else if(_>F){for(Q=f,k=0;_>k;k++)k>0&&0===(_-k)%F&&(Q+=U),Q+=w.charAt(k);w=Q}for(e=r.substring(0,Y),W&&!P&&(e+="-"),k=Y;A>k;k++){if(S=r.charAt(k),-1==D){if(_>R-k){e+=w;break}}else if(-1!=M&&k>M&&(q=f),_>=D-k&&D-k>-1&&(e+=w,k=D),D===k){e+=(b?j:f)+b,k+=R-D+1;continue}S===v?(e+=S,q=S):S===m&&(e+=q)}if(R>=Y&&(e+=r.substring(R+1)),a||l){for(Q=f,k=0,A=e.length;A>k;k++)S=e.charAt(k),Q+="$"===S||"%"===S?o:S;e=Q}if(A=G.length)for(k=0;A>k;k++)e=e.replace(x,G[k])}return e}var s,l,c=/dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|HH|H|hh|h|mm|m|fff|ff|f|tt|ss|s|"[^"]*"|'[^']*'/g,d=/^(n|c|p|e)(\d*)$/i,u=/(\\.)|(['][^']*[']?)|(["][^"]*["]?)/g,h=/\,/g,f="",p=".",g=",",m="#",v="0",x="??",y="en-US",w={}.toString;ot.cultures={"en-US":{name:y,numberFormat:{pattern:["-n"],decimals:2,",":",",".":".",groupSize:[3],percent:{pattern:["-n %","n %"],decimals:2,",":",",".":".",groupSize:[3],symbol:"%"},currency:{pattern:["($n)","$n"],decimals:2,",":",",".":".",groupSize:[3],symbol:"$"}},calendars:{standard:{days:{names:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],namesAbbr:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],namesShort:["Su","Mo","Tu","We","Th","Fr","Sa"]},months:{names:["January","February","March","April","May","June","July","August","September","October","November","December"],namesAbbr:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]},AM:["AM","am","AM"],PM:["PM","pm","PM"],patterns:{d:"M/d/yyyy",D:"dddd, MMMM dd, yyyy",F:"dddd, MMMM dd, yyyy h:mm:ss tt",g:"M/d/yyyy h:mm tt",G:"M/d/yyyy h:mm:ss tt",m:"MMMM dd",M:"MMMM dd",s:"yyyy'-'MM'-'ddTHH':'mm':'ss",t:"h:mm tt",T:"h:mm:ss tt",u:"yyyy'-'MM'-'dd HH':'mm':'ss'Z'",y:"MMMM, yyyy",Y:"MMMM, yyyy"},"/":"/",":":":",firstDay:0,twoDigitYearMax:2029}}}},ot.culture=function(t){var i,o=ot.cultures;return t===n?o.current:(i=e(t)||o[y],i.calendar=i.calendars.standard,o.current=i,Dt&&r(i.numberFormat),n)},ot.findCulture=e,ot.getCulture=t,ot.culture(y),s=function(e,t){var n=Math.pow(10,t||0);return(Math.round(e*n)/n).toFixed(t)},l=function(e,t,r){if(t){if("[object Date]"===w.call(e))return i(e,t,r);if(typeof e===bt)return a(e,t,r)}return e!==n?e:""},Dt&&(l=lt(Dt.format,Dt)),ot.format=function(e){var t=arguments;return e.replace(mt,function(e,n,r){var i=t[parseInt(n,10)+1];return l(i,r?r.substring(1):"")})},ot._extractFormat=function(e){return"{0:"===e.slice(0,3)&&(e=e.slice(3,e.length-1)),e},ot._activeElement=function(){try{return document.activeElement}catch(e){return document.documentElement.activeElement}},ot._round=s,ot.toString=l}(),function(){function t(e,t,n){return!(e>=t&&n>=e)}function r(e){return e.charAt(0)}function i(t){return e.map(t,r)}function o(e,t){t||23!==e.getHours()||e.setHours(e.getHours()+2)}function a(e){for(var t=0,n=e.length,r=[];n>t;t++)r[t]=(e[t]+"").toLowerCase();return r}function s(e){var t,n={};for(t in e)n[t]=a(e[t]);return n}function l(e,r,a){if(!e)return null;var l,c,d,f,p,m,v,x,y,w,b,_,C=function(e){for(var t=0;r[O]===e;)t++,O++;return t>0&&(O-=1),t},k=function(t){var n=g[t]||RegExp("^\\d{1,"+t+"}"),r=e.substr(V,t).match(n);return r?(r=r[0],V+=r.length,parseInt(r,10)):null},A=function(t,n){for(var r,i,o,a=0,s=t.length;s>a;a++)if(r=t[a],i=r.length,o=e.substr(V,i),n&&(o=o.toLowerCase()),o==r)return V+=i,a+1;return null},S=function(){var t=!1;return e.charAt(V)===r[O]&&(V++,t=!0),t},T=a.calendars.standard,P=null,D=null,B=null,M=null,I=null,L=null,E=null,O=0,V=0,R=!1,z=new Date,F=T.twoDigitYearMax||2029,U=z.getFullYear();for(r||(r="d"),f=T.patterns[r],f&&(r=f),r=r.split(""),d=r.length;d>O;O++)if(l=r[O],R)"'"===l?R=!1:S();else if("d"===l){if(c=C("d"),T._lowerDays||(T._lowerDays=s(T.days)),B=3>c?k(2):A(T._lowerDays[3==c?"namesAbbr":"names"],!0),null===B||t(B,1,31))return null}else if("M"===l){if(c=C("M"),T._lowerMonths||(T._lowerMonths=s(T.months)),D=3>c?k(2):A(T._lowerMonths[3==c?"namesAbbr":"names"],!0),null===D||t(D,1,12))return null;D-=1}else if("y"===l){if(c=C("y"),P=k(c),null===P)return null;2==c&&("string"==typeof F&&(F=U+parseInt(F,10)),P=U-U%100+P,P>F&&(P-=100))}else if("h"===l){if(C("h"),M=k(2),12==M&&(M=0),null===M||t(M,0,11))return null}else if("H"===l){if(C("H"),M=k(2),null===M||t(M,0,23))return null}else if("m"===l){if(C("m"),I=k(2),null===I||t(I,0,59))return null}else if("s"===l){if(C("s"),L=k(2),null===L||t(L,0,59))return null}else if("f"===l){if(c=C("f"),E=k(c),null!==E&&c>3&&(E=parseInt((""+E).substring(0,3),10)),null===E||t(E,0,999))return null}else if("t"===l){if(c=C("t"),y=T.AM,w=T.PM,1===c&&(y=i(y),w=i(w)),p=A(w),!p&&!A(y))return null}else if("z"===l){if(m=!0,c=C("z"),"Z"===e.substr(V,1)){if(!v)return null;S();continue}if(x=e.substr(V,6).match(c>2?h:u),!x)return null;if(x=x[0],V=x.length,x=x.split(":"),b=parseInt(x[0],10),t(b,-12,13))return null;if(c>2&&(_=parseInt(x[1],10),isNaN(_)||t(_,0,59)))return null}else if("T"===l)v=S();else if("'"===l)R=!0,S();else if(!S())return null;return null===P&&(P=U),p&&12>M&&(M+=12),null===B&&(B=1),m?(b&&(M+=-b),_&&(I+=-_),e=new Date(Date.UTC(P,D,B,M,I,L,E))):(e=new Date(P,D,B,M,I,L,E),o(e,M)),100>P&&e.setFullYear(P),e.getDate()!==B&&m===n?null:e}var c=/\u00A0/g,d=/[eE][\-+]?[0-9]+/,u=/[+|\-]\d{1,2}/,h=/[+|\-]\d{1,2}:\d{2}/,f=/^\/Date\((.*?)\)\/$/,p=["G","g","d","F","D","y","m","T","t"],g={2:/^\d{1,2}/,4:/^\d{4}/},m={}.toString;ot.parseDate=function(e,t,n){if("[object Date]"===m.call(e))return e;var r,i,o=0,a=null;if(e&&0===e.indexOf("/D")&&(a=f.exec(e)))return new Date(parseInt(a[1],10));if(n=ot.getCulture(n),!t){for(t=[],i=n.calendar.patterns,r=p.length;r>o;o++)t[o]=i[p[o]];o=0,t.push("yyyy/MM/dd HH:mm:ss","yyyy/MM/dd HH:mm","yyyy/MM/dd","ddd MMM dd yyyy HH:mm:ss","yyyy-MM-ddTHH:mm:ss.fffffffzzz","yyyy-MM-ddTHH:mm:ss.fffzzz","yyyy-MM-ddTHH:mm:sszzz","yyyy-MM-ddTHH:mmzzz","yyyy-MM-ddTHH:mmzz","yyyy-MM-ddTHH:mm:ss","yyyy-MM-ddTHH:mm","yyyy-MM-dd HH:mm:ss","yyyy-MM-dd HH:mm","yyyy-MM-dd")}for(t=ct(t)?t:[t],r=t.length;r>o;o++)if(a=l(e,t[o],n))return a;return a},ot.parseInt=function(e,t){var n=ot.parseFloat(e,t);return n&&(n=0|n),n},ot.parseFloat=function(e,t,n){if(!e&&0!==e)return null;if(typeof e===bt)return e;e=""+e,t=ot.getCulture(t);var r,i,o=t.numberFormat,a=o.percent,s=o.currency,l=s.symbol,u=a.symbol,h=e.indexOf("-");return d.test(e)?(e=parseFloat(e),isNaN(e)&&(e=null),e):h>0?null:(h=h>-1,e.indexOf(l)>-1||n&&n.toLowerCase().indexOf("c")>-1?(o=s,r=o.pattern[0].replace("$",l).split("n"),e.indexOf(r[0])>-1&&e.indexOf(r[1])>-1&&(e=e.replace(r[0],"").replace(r[1],""),h=!0)):e.indexOf(u)>-1&&(i=!0,o=a,l=u),e=e.replace("-","").replace(l,"").replace(c," ").split(o[","].replace(c," ")).join("").replace(o["."],"."),e=parseFloat(e),isNaN(e)?e=null:h&&(e*=-1),e&&i&&(e/=100),e)},Dt&&(ot.parseDate=function(e,t,n){return"[object Date]"===m.call(e)?e:Dt.parseDate(e,t,n)},ot.parseFloat=function(e,t){return typeof e===bt?e:e===n||null===e?null:(e=Dt.parseFloat(e,t),isNaN(e)?null:e)})}(),function(){function t(e){var t,n=!1,r=[],i={webkit:/(chrome)[ \/]([\w.]+)/i,safari:/(webkit)[ \/]([\w.]+)/i,opera:/(opera)(?:.*version|)[ \/]([\w.]+)/i,msie:/(msie) ([\w.]+)/i,mozilla:/(mozilla)(?:.*? rv:([\w.]+)|)/i};for(t in i)if(i.hasOwnProperty(t)&&(r=e.match(i[t]))){n={},n[t]=!0,n[r[1].toLowerCase()]=!0,n.version=parseInt(document.documentMode||r[2],10);break}return n}var r,i,o,a,s,l;pt.scrollbar=function(){var e,t=document.createElement("div");return t.style.cssText="overflow:scroll;overflow-x:hidden;zoom:1;clear:both",t.innerHTML="&nbsp;",document.body.appendChild(t),e=t.offsetWidth-t.scrollWidth,document.body.removeChild(t),e},pt.isRtl=function(t){return e(t).closest(".k-rtl").length>0},r=document.createElement("table");try{r.innerHTML="<tr><td></td></tr>",pt.tbodyInnerHtml=!0}catch(d){pt.tbodyInnerHtml=!1}pt.touch="ontouchstart"in window,pt.pointers=navigator.msPointerEnabled,i=pt.transitions=!1,o=pt.transforms=!1,a="HTMLElement"in window?HTMLElement.prototype:[],pt.hasHW3D="WebKitCSSMatrix"in window&&"m11"in new window.WebKitCSSMatrix||"MozPerspective"in document.documentElement.style||"msPerspective"in document.documentElement.style,st(["Moz","webkit","O","ms"],function(){var e,t=""+this,a=typeof r.style[t+"Transition"]===wt;return a||typeof r.style[t+"Transform"]===wt?(e=t.toLowerCase(),o={css:"ms"!=e?"-"+e+"-":"",prefix:t,event:"o"===e||"webkit"===e?e:""},a&&(i=o,i.event=i.event?i.event+"TransitionEnd":"transitionend"),!1):n}),pt.transforms=o,pt.transitions=i,pt.devicePixelRatio=window.devicePixelRatio===n?1:window.devicePixelRatio;try{pt.screenWidth=window.outerWidth||window.screen?window.screen.availWidth:window.innerWidth,pt.screenHeight=window.outerHeight||window.screen?window.screen.availHeight:window.innerHeight,pt.zoomLevel=function(){return pt.touch?document.documentElement.clientWidth/window.innerWidth:pt.pointers?(top||window).outerWidth/(top||window).innerWidth:1}}catch(d){pt.screenWidth=window.screen.availWidth,pt.screenHeight=window.screen.availHeight,pt.zoomLevel=function(){return 1}}pt.detectOS=function(e){var t,n,r=!1,i=[],o=!/mobile safari/i.test(e),a={fire:/(Silk)\/(\d+)\.(\d+(\.\d+)?)/,android:/(Android|Android.*(?:Opera|Firefox).*?\/)\s*(\d+)\.(\d+(\.\d+)?)/,iphone:/(iPhone|iPod).*OS\s+(\d+)[\._]([\d\._]+)/,ipad:/(iPad).*OS\s+(\d+)[\._]([\d_]+)/,meego:/(MeeGo).+NokiaBrowser\/(\d+)\.([\d\._]+)/,webos:/(webOS)\/(\d+)\.(\d+(\.\d+)?)/,blackberry:/(BlackBerry|BB10).*?Version\/(\d+)\.(\d+(\.\d+)?)/,playbook:/(PlayBook).*?Tablet\s*OS\s*(\d+)\.(\d+(\.\d+)?)/,wp:/(Windows Phone(?: OS)?)\s(\d+)\.(\d+(\.\d+)?)/,windows:/(MSIE)\s+(\d+)\.(\d+(\.\d+)?)/,ffos:/(Mobile).*rv:(\d+)\.(\d+(\.\d+)?).*Firefox/},s={ios:/^i(phone|pad|pod)$/i,android:/^android|fire$/i,blackberry:/^blackberry|playbook/i,windows:/windows/,wp:/wp/,meego:/meego|ffos/},l={tablet:/playbook|ipad|fire/i},d={omini:/Opera\sMini/i,omobile:/Opera\sMobi/i,firefox:/Firefox|Fennec/i,mobilesafari:/version\/.*safari/i,chrome:/chrome/i,webkit:/webkit/i,ie:/MSIE|Windows\sPhone/i};for(n in a)if(a.hasOwnProperty(n)&&(i=e.match(a[n]))){if("windows"==n&&"plugins"in navigator)return!1;r={},r.device=n,r.tablet=c(n,l,!1),r.browser=c(e,d,"default"),r.name=c(n,s),r[r.name]=!0,r.majorVersion=i[2],r.minorVersion=i[3].replace("_","."),t=r.minorVersion.replace(".","").substr(0,2),r.flatVersion=r.majorVersion+t+Array(3-(t.length<3?t.length:2)).join("0"),r.appMode=window.navigator.standalone||/file|local|wmapp/.test(window.location.protocol)||typeof window.PhoneGap!==At||typeof window.cordova!==At,r.android&&(pt.devicePixelRatio<1.5&&r.flatVersion<400||o)&&(pt.screenWidth>800||pt.screenHeight>800)&&(r.tablet=n);break}return r},s=pt.mobileOS=pt.detectOS(navigator.userAgent),pt.wpDevicePixelRatio=s.wp?screen.width/320:0,pt.kineticScrollNeeded=s&&(pt.touch||pt.pointers),pt.hasNativeScrolling=!1,(s.ios&&s.majorVersion>4||s.android&&s.majorVersion>2||s.wp)&&(pt.hasNativeScrolling=s),pt.mouseAndTouchPresent=pt.touch&&!(pt.mobileOS.ios||pt.mobileOS.android),pt.browser=t(navigator.userAgent),pt.cssBorderSpacing=n!==document.documentElement.style.borderSpacing&&!(pt.browser.msie&&pt.browser.version<8),function(t){var n,r=parseInt(t.version,10);t.msie?n="ie":t.mozilla?n="ff":t.safari?n="safari":t.webkit?n="webkit":t.opera&&(n="opera"),n&&e(document.documentElement).addClass("k-"+n+" k-"+n+r)}(pt.browser),pt.eventCapture=document.documentElement.addEventListener,pt.placeholder="placeholder"in document.createElement("input"),pt.stableSort=function(){var e=[0,1,2,3,4,5,6,7,8,9,10,11,12].sort(function(){return 0});return 0===e[0]&&1===e[1]&&2===e[2]&&3===e[3]&&4===e[4]&&5===e[5]&&6===e[6]&&7===e[7]&&8===e[8]&&9===e[9]&&10===e[10]&&11===e[11]&&12===e[12]}(),pt.matchesSelector=a.webkitMatchesSelector||a.mozMatchesSelector||a.msMatchesSelector||a.oMatchesSelector||a.matchesSelector||function(t){for(var n=document.querySelectorAll?(this.parentNode||document).querySelectorAll(t)||[]:e(t),r=n.length;r--;)if(n[r]==this)return!0;return!1},pt.pushState=window.history&&window.history.pushState,l=document.documentMode,pt.hashChange="onhashchange"in window&&!(pt.browser.msie&&(!l||8>=l))}(),V={left:{reverse:"right"},right:{reverse:"left"},down:{reverse:"up"},up:{reverse:"down"},top:{reverse:"bottom"},bottom:{reverse:"top"},"in":{reverse:"out"},out:{reverse:"in"}},R={},e.extend(R,{Element:function(t){this.element=e(t)},promise:function(e,t){e.is(":visible")||e.css({display:e.data("olddisplay")||"block"}).css("display"),t.hide&&e.data("olddisplay",e.css("display")).hide(),t.init&&t.init(),t.completeCallback&&t.completeCallback(e),e.dequeue()},transitionPromise:function(e,t,n){var r=ot.wrap(e);return r.append(t),e.hide(),t.show(),n.completeCallback&&n.completeCallback(e),e}}),"kendoAnimate"in e.fn||at(e.fn,{kendoStop:function(e,t){return this.stop(e,t)},kendoAnimate:function(e,t,n,r){return m(this,e,t,n,r)},kendoAnimateTo:function(e,t,n,r,i){return v(this,e,t,n,r,i)},kendoAddClass:function(e,t){return ot.toggleClass(this,e,t,!0)},kendoRemoveClass:function(e,t){return ot.toggleClass(this,e,t,!1)},kendoToggleClass:function(e,t,n){return ot.toggleClass(this,e,t,n)}}),z=/&/g,F=/</g,U=/>/g,j=function(e){return e.target},pt.touch&&(j=function(e){var t="originalEvent"in e?e.originalEvent.changedTouches:"changedTouches"in e?e.changedTouches:null;return t?document.elementFromPoint(t[0].clientX,t[0].clientY):e.target},st(["swipe","swipeLeft","swipeRight","swipeUp","swipeDown","doubleTap","tap"],function(t,n){e.fn[n]=function(e){return this.bind(n,e)}})),pt.touch?pt.mobileOS?(pt.mousedown="touchstart",pt.mouseup="touchend",pt.mousemove="touchmove",pt.mousecancel="touchcancel",pt.click="touchend",pt.resize="orientationchange"):(pt.mousedown="mousedown touchstart",pt.mouseup="mouseup touchend",pt.mousemove="mousemove touchmove",pt.mousecancel="mouseleave touchcancel",pt.click="click",pt.resize="resize"):pt.pointers?(pt.mousemove="MSPointerMove",pt.mousedown="MSPointerDown",pt.mouseup="MSPointerUp",pt.mousecancel="MSPointerCancel",pt.click="MSPointerUp",pt.resize="orientationchange resize"):(pt.mousemove="mousemove",pt.mousedown="mousedown",pt.mouseup="mouseup",pt.mousecancel="mouseleave",pt.click="click",pt.resize="resize"),H=function(e,t){var n,r,i,o,a=t||"d",s=1;for(r=0,i=e.length;i>r;r++)o=e[r],""!==o&&(n=o.indexOf("["),0!==n&&(-1==n?o="."+o:(s++,o="."+o.substring(0,n)+" || {})"+o.substring(n))),s++,a+=o+(i-1>r?" || {})":")"));return Array(s).join("(")+a},N=/^([a-z]+:)?\/\//i,at(ot,{ui:ot.ui||{},fx:ot.fx||p,effects:ot.effects||R,mobile:ot.mobile||{},data:ot.data||{},dataviz:ot.dataviz||{ui:{roles:{}}},keys:{INSERT:45,DELETE:46,BACKSPACE:8,TAB:9,ENTER:13,ESC:27,LEFT:37,UP:38,RIGHT:39,DOWN:40,END:35,HOME:36,SPACEBAR:32,PAGEUP:33,PAGEDOWN:34,F2:113,F10:121,F12:123},support:ot.support||pt,animate:ot.animate||m,ns:"",attr:function(e){return"data-"+ot.ns+e},wrap:a,deepExtend:s,getComputedStyles:d,size:u,getOffset:ot.getOffset||h,parseEffects:ot.parseEffects||f,toggleClass:ot.toggleClass||x,directions:ot.directions||V,Observable:P,Class:r,Template:A,template:lt(A.compile,A),render:lt(A.render,A),stringify:lt(ft.stringify,ft),eventTarget:j,htmlEncode:y,isLocalUrl:function(e){return e&&!N.test(e)},expr:function(e,t,n){return e=e||"",typeof t==wt&&(n=t,t=!1),n=n||"d",e&&"["!==e.charAt(0)&&(e="."+e),e=t?H(e.split("."),n):n+e},getter:function(e,t){return St[e]=St[e]||Function("d","return "+ot.expr(e,t))},setter:function(e){return Tt[e]=Tt[e]||Function("d,value",ot.expr(e)+"=value")},accessor:function(e){return{get:ot.getter(e),set:ot.setter(e)}},guid:function(){var e,t,n="";for(e=0;32>e;e++)t=0|16*ht.random(),(8==e||12==e||16==e||20==e)&&(n+="-"),n+=(12==e?4:16==e?8|3&t:t).toString(16);return n},roleSelector:function(e){return e.replace(/(\S+)/g,"["+ot.attr("role")+"=$1],").slice(0,-1)},triggeredByInput:function(e){return/^(label|input|textarea|select)$/i.test(e.target.tagName)},logToConsole:function(e){var t=window.console;n!==t&&t.log&&t.log(e)}}),G=P.extend({init:function(e,t){var n=this;n.element=ot.jQuery(e).handler(n),P.fn.init.call(n),t=n.options=at(!0,{},n.options,t),n.element.attr(ot.attr("role"))||n.element.attr(ot.attr("role"),(t.name||"").toLowerCase()),n.element.data("kendo"+t.prefix+t.name,n),n.bind(n.events,t)},events:[],options:{prefix:""},_tabindex:function(e){e=e||this.wrapper;var t=this.element,n="tabindex",r=e.attr(n)||t.attr(n);t.removeAttr(n),e.attr(n,isNaN(r)?0:r)},setOptions:function(t){for(var n,r=this,i=0,o=r.events.length;o>i;i++)n=r.events[i],r.options[n]&&t[n]&&r.unbind(n,r.options[n]);e.extend(r.options,t),r.bind(r.events,t)},destroy:function(){var e=this;e.element.removeData("kendo"+e.options.prefix+e.options.name),e.element.removeData("handler"),e.unbind()}}),ot.notify=dt,W=/template$/i,q=/^\s*(?:\{(?:.|\r\n|\n)*\}|\[(?:.|\r\n|\n)*\])\s*$/,Q=/^\{(\d+)(:[^\}]+)?\}/,Y=/([A-Z])/g,ot.initWidget=function(t,r,i){var o,a,s,l,c,d,u,h;if(i?i.roles&&(i=i.roles):i=ot.ui.roles,t=t.nodeType?t:t[0],d=t.getAttribute("data-"+ot.ns+"role"),d&&(s=-1===d.indexOf(".")?i[d]:ot.getter(d)(window))){for(h=w(t,"dataSource"),r=e.extend({},b(t,s.fn.options),r),h&&(r.dataSource=typeof h===wt?ot.getter(h)(window):h),l=0,c=s.fn.events.length;c>l;l++)a=s.fn.events[l],u=w(t,a),u!==n&&(r[a]=ot.getter(u)(window));return o=e(t).data("kendo"+s.fn.options.prefix+s.fn.options.name),o?o.setOptions(r):o=new s(t,r),o}},ot.rolesFromNamespaces=function(e){var t,n,r=[];for(e[0]||(e=[ot.ui,ot.dataviz.ui]),t=0,n=e.length;n>t;t++)r[t]=e[t].roles;return at.apply(null,[{}].concat(r.reverse()))},ot.init=function(t){var n=ot.rolesFromNamespaces(Pt.call(arguments,1));e(t).find("[data-"+ot.ns+"role]").andSelf().each(function(){ot.initWidget(this,{},n)})},ot.destroy=function(t){e(t).find("[data-"+ot.ns+"role]").andSelf().each(function(){var t=e(this),n=ot.widgetInstance(t,ot.ui)||ot.widgetInstance(t,ot.mobile.ui)||ot.widgetInstance(t,ot.dataviz.ui);n&&n.destroy()})},ot.parseOptions=b,at(ot.ui,{Widget:G,roles:{},progress:function(t,n){var r,i,o,a,s=t.find(".k-loading-mask"),l=ot.support,c=l.browser;n?s.length||(r=l.isRtl(t),i=r?"right":"left",a=t.scrollLeft(),o=c.webkit?r?t[0].scrollWidth-t.width()-2*a:0:0,s=e("<div class='k-loading-mask'><span class='k-loading-text'>Loading...</span><div class='k-loading-image'/><div class='k-loading-color'/></div>").width("100%").height("100%").css("top",t.scrollTop()).css(i,Math.abs(a)+o).prependTo(t)):s&&s.remove()},plugin:function(t,r,i){var o,a=t.fn.options.name;r=r||ot.ui,i=i||"",r[a]=t,r.roles[a.toLowerCase()]=t,o="getKendo"+i+a,a="kendo"+i+a,e.fn[a]=function(r){var i,o=this;return typeof r===wt?(i=Pt.call(arguments,1),this.each(function(){var t,s,l=e.data(this,a);if(!l)throw Error(ot.format("Cannot call method '{0}' of {1} before it is initialized",r,a));if(t=l[r],typeof t!==yt)throw Error(ot.format("Cannot find method '{0}' of {1}",r,a));return s=t.apply(l,i),s!==n?(o=s,!1):n})):this.each(function(){new t(this,r)}),o},e.fn[o]=function(){return this.data(a)}}}),X={bind:function(){return this}},$=G.extend({init:function(e,t){G.fn.init.call(this,e,t),this.element.autoApplyNS(),this.wrapper=this.element},destroy:function(){G.fn.destroy.call(this),this.element.kendoDestroy()},options:{prefix:"Mobile"},events:[],view:function(){var e=this.element.closest(ot.roleSelector("view splitview modalview drawer"));return ot.widgetInstance(e,ot.mobile.ui)},container:function(){var e=this.element.closest(ot.roleSelector("view layout modalview drawer"));return ot.widgetInstance(e,ot.mobile.ui)||X}}),at(ot.mobile,{init:function(e){ot.init(e,ot.mobile.ui,ot.ui,ot.dataviz.ui)},ui:{Widget:$,roles:{},plugin:function(e){ot.ui.plugin(e,ot.mobile.ui,"Mobile")}}}),ot.touchScroller=function(t,n){return e(t).map(function(t,r){return r=e(r),pt.kineticScrollNeeded&&ot.mobile.ui.Scroller&&!r.data("kendoMobileScroller")?(r.kendoMobileScroller(n),r.data("kendoMobileScroller")):!1})[0]},ot.preventDefault=function(e){e.preventDefault()},ot.widgetInstance=function(e,t){var r=t.roles[e.data(ot.ns+"role")];return r?e.data("kendo"+r.fn.options.prefix+r.fn.options.name):n},ot.onResize=function(t){var n=t;return pt.mobileOS.android&&(n=function(){setTimeout(t,200)}),e(window).on(pt.resize,n),n},ot.unbindResize=function(t){e(window).off(pt.resize,t)},ot.attrValue=function(e,t){return e.data(ot.ns+t)},ot.days={Sunday:0,Monday:1,Tuesday:2,Wednesday:3,Thursday:4,Friday:5,Saturday:6},e.extend(e.expr[":"],{focusable:function(t){var n=e.attr(t,"tabindex");return _(t,!isNaN(n)&&n>-1)}}),Z=["mousedown","mousemove","mouseenter","mouseleave","mouseover","mouseout","mouseup","click"],J="label, input, [data-rel=external]",K={setupMouseMute:function(){var t,n=0,r=Z.length,i=document.documentElement;
if(!K.mouseTrap&&pt.eventCapture)for(K.mouseTrap=!0,K.bustClick=!1,K.captureMouse=!1,t=function(t){K.captureMouse&&("click"===t.type?K.bustClick&&!e(t.target).is(J)&&(t.preventDefault(),t.stopPropagation()):t.stopPropagation())};r>n;n++)i.addEventListener(Z[n],t,!0)},muteMouse:function(e){K.captureMouse=!0,e.data.bustClick&&(K.bustClick=!0),clearTimeout(K.mouseTrapTimeoutID)},unMuteMouse:function(){clearTimeout(K.mouseTrapTimeoutID),K.mouseTrapTimeoutID=setTimeout(function(){K.captureMouse=!1,K.bustClick=!1},400)}},et={down:"touchstart mousedown",move:"mousemove touchmove",up:"mouseup touchend touchcancel",cancel:"mouseleave touchcancel"},pt.touch&&(pt.mobileOS.ios||pt.mobileOS.android)&&(et={down:"touchstart",move:"touchmove",up:"touchend touchcancel",cancel:"touchcancel"}),pt.pointers&&(et={down:"MSPointerDown",move:"MSPointerMove",up:"MSPointerUp",cancel:"MSPointerCancel MSPointerLeave"},e.each({MSPointerEnter:"MSPointerOver",MSPointerLeave:"MSPointerOut"},function(t,n){e.event.special[t]={delegateType:n,bindType:n,handle:function(t){var r,i=this,o=t.relatedTarget,a=t.handleObj;return(!o||o!==i&&!e.contains(i,o))&&(t.type=a.origType,r=a.handler.apply(this,arguments),t.type=n),r}}})),tt=function(e){return et[e]||e},nt=/([^ ]+)/g,ot.applyEventMap=function(e,t){return e=e.replace(nt,tt),t&&(e=e.replace(nt,"$1."+t)),e},rt=e.fn.on,at(!0,k,e),k.fn=k.prototype=new e,k.fn.constructor=k,k.fn.init=function(t,n){return n&&n instanceof e&&!(n instanceof k)&&(n=k(n)),e.fn.init.call(this,t,n,it)},k.fn.init.prototype=k.fn,it=k(document),at(k.fn,{handler:function(e){return this.data("handler",e),this},autoApplyNS:function(e){return this.data("kendoNS",e||ot.guid()),this},on:function(){var e,t,n,r,i,o,a=this,s=a.data("kendoNS");return 1===arguments.length?rt.call(a,arguments[0]):(e=a,t=Pt.call(arguments),typeof t[t.length-1]===At&&t.pop(),n=t[t.length-1],r=ot.applyEventMap(t[0],s),pt.mouseAndTouchPresent&&r.search(/mouse|click/)>-1&&this[0]!==document.documentElement&&(K.setupMouseMute(),i=2===t.length?null:t[1],o=r.indexOf("click")>-1&&r.indexOf("touchend")>-1,rt.call(this,{touchstart:K.muteMouse,touchend:K.unMuteMouse},i,{bustClick:o})),typeof n===wt&&(e=a.data("handler"),n=e[n],t[t.length-1]=function(t){n.call(e,t)}),t[0]=r,rt.apply(a,t),a)},kendoDestroy:function(e){return e=e||this.data("kendoNS"),e&&this.off("."+e),this}}),ot.jQuery=k,ot.eventMap=et,ot.timezone=function(){function e(e,t){var n,r,i,o=t[3],a=t[4],s=t[5],l=t[8];return l||(t[8]=l={}),l[e]?l[e]:(isNaN(a)?0===a.indexOf("last")?(n=new Date(Date.UTC(e,c[o]+1,1,s[0]-24,s[1],s[2],0)),r=d[a.substr(4,3)],i=n.getUTCDay(),n.setUTCDate(n.getUTCDate()+r-i-(r>i?7:0))):a.indexOf(">=")>=0&&(n=new Date(Date.UTC(e,c[o],a.substr(5),s[0],s[1],s[2],0)),r=d[a.substr(0,3)],i=n.getUTCDay(),n.setUTCDate(n.getUTCDate()+r-i+(i>r?7:0))):n=new Date(Date.UTC(e,c[o],a,s[0],s[1],s[2],0)),l[e]=n)}function t(t,n,r){var i,o,a;return(n=n[r])?(a=new Date(t).getUTCFullYear(),n=jQuery.grep(n,function(e){var t=e[0],n=e[1];return a>=t&&(n>=a||t==a&&"only"==n||"max"==n)}),n.push(t),n.sort(function(t,n){return"number"!=typeof t&&(t=Number(e(a,t))),"number"!=typeof n&&(n=Number(e(a,n))),t-n}),n[jQuery.inArray(t,n)-1]):(i=r.split(":"),o=0,i.length>1&&(o=60*i[0]+Number(i[1])),[-1e6,"max","-","Jan",1,[0,0,0],o,"-"])}function n(e,t,n){var r,i,o;if(t=t[n],!t)throw Error('Timezone "'+n+'" is either incorrect, or kendo.timezones.min.js is not included.');for(r=t.length-1;r>=0&&(i=t[r][3],!(i&&e>i));r--);if(o=t[r+1],!o)throw Error('Timezone "'+n+'" not found on '+e+".");return o}function r(e,r,i,o){typeof e!=bt&&(e=Date.UTC(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours(),e.getMinutes(),e.getSeconds(),e.getMilliseconds()));var a=n(e,r,o);return{zone:a,rule:t(e,i,a[1])}}function i(e,t){var n,i,o;return"Etc/UTC"==t||"Etc/GMT"==t?0:(n=r(e,this.zones,this.rules,t),i=n.zone,o=n.rule,o?i[0]-o[6]:i[0])}function o(e,t){var n=r(e,this.zones,this.rules,t),i=n.zone,o=n.rule,a=i[2];return a.indexOf("/")>=0?a.split("/")[o&&o[6]?1:0]:a.indexOf("%s")>=0?a.replace("%s",o&&"-"!=o[7]?o[7]:""):a}function a(e,t,n){var r,i;return typeof t==wt&&(t=this.offset(e,t)),typeof n==wt&&(n=this.offset(e,n)),r=e.getTimezoneOffset(),e=new Date(e.getTime()+6e4*(t-n)),i=e.getTimezoneOffset(),new Date(e.getTime()+6e4*(i-r))}function s(e,t){return this.convert(e,e.getTimezoneOffset(),t)}function l(e,t){return this.convert(e,t,e.getTimezoneOffset())}var c={Jan:0,Feb:1,Mar:2,Apr:3,May:4,Jun:5,Jul:6,Aug:7,Sep:8,Oct:9,Nov:10,Dec:11},d={Sun:0,Mon:1,Tue:2,Wed:3,Thu:4,Fri:5,Sat:6};return{zones:{},rules:{},offset:i,convert:a,apply:s,remove:l,abbr:o}}(),ot.date=function(){function e(e,t){return 0===t&&23===e.getHours()?(e.setHours(e.getHours()+2),!0):!1}function t(t,n,r){var i=t.getHours();r=r||1,n=(n-t.getDay()+7*r)%7,t.setDate(t.getDate()+n),e(t,i)}function n(e,n,r){return e=new Date(e),t(e,n,r),e}function r(e){return new Date(e.getFullYear(),e.getMonth(),1)}function i(e){var t=new Date(e.getFullYear(),e.getMonth()+1,0),n=r(e),i=Math.abs(t.getTimezoneOffset()-n.getTimezoneOffset());return i&&t.setHours(n.getHours()+i/60),t}function o(t){return t=new Date(t.getFullYear(),t.getMonth(),t.getDate(),0,0,0),e(t,0),t}function a(e){return 60*e.getHours()*f+e.getMinutes()*f+1e3*e.getSeconds()+e.getMilliseconds()}function s(e,t,n){var r,i=a(t),o=a(n);return e&&i!=o?(t>=n&&(n+=p),r=a(e),i>r&&(r+=p),i>o&&(o+=p),r>=i&&o>=r):!0}function l(e,t,n){var r,i=t.getTime(),o=n.getTime();return i>=o&&(o+=p),r=e.getTime(),r>=i&&o>=r}function c(t,n){var r=t.getHours();return t=new Date(t),d(t,n*p),e(t,r),t}function d(e,t,n){var r,i=e.getTimezoneOffset();e.setTime(e.getTime()+t),n||(r=e.getTimezoneOffset()-i,e.setTime(e.getTime()+r*f))}function u(){return o(new Date)}function h(e){return o(e).getTime()==u().getTime()}var f=6e4,p=864e5;return{adjustDST:e,dayOfWeek:n,setDayOfWeek:t,getDate:o,isInDateRange:l,isInTimeRange:s,isToday:h,nextDay:function(e){return c(e,1)},previousDay:function(e){return c(e,-1)},MS_PER_DAY:p,MS_PER_MINUTE:f,setTime:d,addDays:c,today:u,firstDayOfMonth:r,lastDayOfMonth:i,getMilliseconds:a}}(),ot.stripWhitespace=function(e){for(var t=document.createNodeIterator(e,NodeFilter.SHOW_TEXT,function(t){return t.parentNode==e?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_REJECT},!1);t.nextNode();)t.referenceNode&&!t.referenceNode.textContent.trim()&&t.referenceNode.parentNode.removeChild(t.referenceNode)}}(jQuery,eval),"undefined"==typeof kendo_module&&(kendo_module=function(){}),function(e){var t=window.kendo,n=t.support,r=window.location,i=window.history,o=50,a=/^#*/,s=window.document,l=t.Observable.extend({start:function(e){var t=this;if(e=e||{},t.bind(["change"],e),!t._started){if(t._started=!0,t._pushStateRequested=!!e.pushState,t._pushState=n.pushState&&t._pushStateRequested,t.root=e.root||"/",t._interval=0,t._normalizeUrl())return!0;t.current=t._currentLocation(),t.locations=[t.current],t._listenToLocationChange()}},stop:function(){e(window).unbind(".kendo"),this.unbind("change"),clearInterval(this._interval),this._started=!1},change:function(e){this.bind("change",e)},navigate:function(e,t){var n=this;return"#:back"===e?(i.back(),undefined):(e=e.replace(a,""),n.current!==e&&n.current!==decodeURIComponent(e)&&(t||!n.trigger("change",{url:e}))&&(n._pushState?(i.pushState({},s.title,n._makePushStateUrl(e)),n.current=e):r.hash=n.current=e,n.locations.push(n.current)),undefined)},_normalizeUrl:function(){var e,t=this,o=t.root==r.pathname,l=t._pushStateRequested&&!n.pushState&&!o,c=t._pushState&&o&&r.hash;return l?(r.replace(t.root+"#"+t._stripRoot(r.pathname)),!0):c?(e=t._makePushStateUrl(r.hash.replace(a,"")),i.replaceState({},s.title,e),!1):!1},_listenToLocationChange:function(){var t=this,r=e.proxy(t._checkUrl,t);this._pushState?e(window).bind("popstate.kendo",r):n.hashChange?e(window).bind("hashchange.kendo",r):t._interval=setInterval(r,o)},_checkUrl:function(){var e=this,t=e._currentLocation().replace(a,""),n=t===e.locations[e.locations.length-2];if(e.current!==t&&e.current!==decodeURIComponent(t)){if(e.trigger("change",{url:t}))return n?i.forward():i.back(),undefined;e.current=t,n?e.locations.pop():e.locations.push(t)}},_stripRoot:function(e){var t=this;return 0===e.indexOf(t.root)?e.substr(t.root.length).replace(/\/\//g,"/"):e},_makePushStateUrl:function(e){var t=this,n=RegExp("^"+t.root,"i");return n.test(e)||(e=(t.root+e).replace(/\/\//g,"/")),r.protocol+"//"+r.host+e},_currentLocation:function(){var e,t=this;return t._pushState?(e=r.pathname,r.search&&(e+=r.search),t._stripRoot(e)):r.hash.replace(a,"")}});t.history=new l}(window.kendo.jQuery),function(){function e(e,t){return t?e:"([^/]+)"}function t(t){return RegExp("^"+t.replace(u,"\\$&").replace(l,"(?:$1)?").replace(c,e).replace(d,"(.*?)")+"$")}var n=window.kendo,r=n.history,i=n.Observable,o="init",a="routeMissing",s="change",l=/\((.*?)\)/g,c=/(\(\?)?:\w+/g,d=/\*\w+/g,u=/[\-{}\[\]+?.,\\\^$|#\s]/g,h=n.Class.extend({init:function(e,n){e instanceof RegExp||(e=t(e)),this.route=e,this._callback=n},callback:function(e){for(var t=this.route.exec(e).slice(1),n=0,r=t.length;r>n;n++)void 0!==t[n]&&(t[n]=decodeURIComponent(t[n]));this._callback.apply(null,t)},worksWith:function(e){return this.route.test(e)?(this.callback(e),!0):!1}}),f=i.extend({init:function(e){i.fn.init.call(this),this.routes=[],this.pushState=e?e.pushState:!1,e&&e.root&&(this.root=e.root),this.bind([o,a,s],e)},destroy:function(){r.unbind("change",this._urlChangedProxy),this.unbind()},start:function(){var e,t=this,n=function(e){t._urlChanged(e)};r.start({change:n,pushState:t.pushState,root:t.root}),e={url:r.current||"/"},t.trigger(o,e)||t._urlChanged(e),this._urlChangedProxy=n},route:function(e,t){this.routes.push(new h(e,t))},navigate:function(e,t){n.history.navigate(e,t)},_urlChanged:function(e){var t,n,r,i,o=e.url;if(o||(o="/"),this.trigger(s,{url:e.url}))return e.preventDefault(),void 0;for(n=0,r=this.routes,i=r.length;i>n;n++)if(t=r[n],t.worksWith(o))return;this.trigger(a,{url:o})&&e.preventDefault()}});n.Router=f}(),function(e){var t=window.kendo,n=t.Observable,r="SCRIPT",i="init",o="show",a="hide",s=n.extend({init:function(e,t){var r=this;t=t||{},n.fn.init.call(r),r.content=e,r.tagName=t.tagName||"div",r.model=t.model,r._wrap=t.wrap!==!1,r.bind([i,o,a],t)},render:function(n){var r=this,a=!r.element;return a&&(r.element=r._createElement()),n&&e(n).append(r.element),a&&(t.bind(r.element,r.model),r.trigger(i)),n&&r.trigger(o),r.element},hide:function(){this.element.detach(),this.trigger(a)},destroy:function(){var e=this.element;e&&(t.unbind(e),t.destroy(e),e.remove())},_createElement:function(){var t,n,i=this;return n=e(document.getElementById(i.content)||i.content),t=e("<"+i.tagName+" />").append(n[0].tagName===r?n.html():n),i._wrap||(t=t.contents()),t}}),l=s.extend({init:function(e,t){s.fn.init.call(this,e,t),this.regions={}},showIn:function(e,t){var n=this.regions[e];n&&n.hide(),t.render(this.render().find(e),n),this.regions[e]=t}});t.Layout=l,t.View=s}(window.kendo.jQuery),function(e,t){function n(i){var a,s,l,c,d,u,h,f,p=[],g=i.logic||"and",m=i.filters;for(a=0,s=m.length;s>a;a++)i=m[a],l=i.field,h=i.value,u=i.operator,i.filters?i=n(i):(f=i.ignoreCase,l=l.replace(/\./g,"/"),i=o[u],i&&h!==t&&(c=e.type(h),"string"===c?(d="'{1}'",h=h.replace(/'/g,"''"),f===!0&&(l="tolower("+l+")")):d="date"===c?"datetime'{1:yyyy-MM-ddTHH:mm:ss}'":"{1}",i.length>3?"substringof"!==i?d="{0}({2},"+d+")":(d="{0}("+d+",{2})","doesnotcontain"===u&&(d+=" eq false")):d="{2} {0} "+d,i=r.format(d,i,h,l))),p.push(i);return i=p.join(" "+g+" "),p.length>1&&(i="("+i+")"),i}var r=window.kendo,i=e.extend,o={eq:"eq",neq:"ne",gt:"gt",gte:"ge",lt:"lt",lte:"le",contains:"substringof",doesnotcontain:"substringof",endswith:"endswith",startswith:"startswith"},a={pageSize:e.noop,page:e.noop,filter:function(e,t){t&&(e.$filter=n(t))},sort:function(t,n){var r=e.map(n,function(e){var t=e.field.replace(/\./g,"/");return"desc"===e.dir&&(t+=" desc"),t}).join(",");r&&(t.$orderby=r)},skip:function(e,t){t&&(e.$skip=t)},take:function(e,t){t&&(e.$top=t)}},s={read:{dataType:"jsonp"}};i(!0,r.data,{schemas:{odata:{type:"json",data:function(e){return e.d.results||[e.d]},total:"d.__count"}},transports:{odata:{read:{cache:!0,dataType:"jsonp",jsonp:"$callback"},update:{cache:!0,dataType:"json",contentType:"application/json",type:"PUT"},create:{cache:!0,dataType:"json",contentType:"application/json",type:"POST"},destroy:{cache:!0,dataType:"json",type:"DELETE"},parameterMap:function(e,t){var n,i,o,l;if(e=e||{},t=t||"read",l=(this.options||s)[t],l=l?l.dataType:"json","read"===t){n={$inlinecount:"allpages"},"json"!=l&&(n.$format="json");for(o in e)a[o]?a[o](n,e[o]):n[o]=e[o]}else{if("json"!==l)throw Error("Only json dataType can be used for "+t+" operation.");if("destroy"!==t){for(o in e)i=e[o],"number"==typeof i&&(e[o]=i+"");n=r.stringify(e)}}return n}}}})}(window.kendo.jQuery),function(e,t){var n=window.kendo,r=e.isArray,i=e.isPlainObject,o=e.map,a=e.each,s=e.extend,l=n.getter,c=n.Class,d=c.extend({init:function(e){var t,l,c,d=this,u=e.total,h=e.model,f=e.parse,p=e.errors,g=e.serialize,m=e.data;h&&(i(h)&&(h.fields&&a(h.fields,function(e,t){t=i(t)&&t.field?s(t,{field:d.getter(t.field)}):{field:d.getter(t)},h.fields[e]=t}),t=h.id,t&&(l={},l[d.xpathToMember(t,!0)]={field:d.getter(t)},h.fields=s(l,h.fields),h.id=d.xpathToMember(t)),h=n.data.Model.define(h)),d.model=h),u&&("string"==typeof u?(u=d.getter(u),d.total=function(e){return parseInt(u(e),10)}):"function"==typeof u&&(d.total=u)),p&&("string"==typeof p?(p=d.getter(p),d.errors=function(e){return p(e)||null}):"function"==typeof p&&(d.errors=p)),m&&("string"==typeof m?(m=d.xpathToMember(m),d.data=function(e){var t,n=d.evaluate(e,m);return n=r(n)?n:[n],d.model&&h.fields?(t=new d.model,o(n,function(e){if(e){var n,r={};for(n in h.fields)r[n]=t._parse(n,h.fields[n].field(e));return r}})):n}):"function"==typeof m&&(d.data=m)),"function"==typeof f&&(c=d.parse,d.parse=function(e){var t=f.call(d,e);return c.call(d,t)}),"function"==typeof g&&(d.serialize=g)},total:function(e){return this.data(e).length},errors:function(e){return e?e.errors:null},serialize:function(e){return e},parseDOM:function(e){var n,i,o,a,s,l,c,d={},u=e.attributes,h=u.length;for(c=0;h>c;c++)l=u[c],d["@"+l.nodeName]=l.nodeValue;for(i=e.firstChild;i;i=i.nextSibling)o=i.nodeType,3===o||4===o?d["#text"]=i.nodeValue:1===o&&(n=this.parseDOM(i),a=i.nodeName,s=d[a],r(s)?s.push(n):s=s!==t?[s,n]:n,d[a]=s);return d},evaluate:function(e,t){for(var n,i,o,a,s,l=t.split(".");n=l.shift();)if(e=e[n],r(e)){for(i=[],t=l.join("."),s=0,o=e.length;o>s;s++)a=this.evaluate(e[s],t),a=r(a)?a:[a],i.push.apply(i,a);return i}return e},parse:function(t){var n,r,i={};return n=t.documentElement||e.parseXML(t).documentElement,r=this.parseDOM(n),i[n.nodeName]=r,i},xpathToMember:function(e,t){return e?(e=e.replace(/^\//,"").replace(/\//g,"."),e.indexOf("@")>=0?e.replace(/\.?(@.*)/,t?"$1":'["$1"]'):e.indexOf("text()")>=0?e.replace(/(\.?text\(\))/,t?"#text":'["#text"]'):e):""},getter:function(e){return l(this.xpathToMember(e),!0)}});e.extend(!0,n.data,{XmlDataReader:d,readers:{xml:d}})}(window.kendo.jQuery),function(e,t){function n(e,t,n,r){return function(i){var o,a={};for(o in i)a[o]=i[o];a.field=r?n+"."+i.field:n,e.trigger(t,a),t==mt&&e._notifyChange&&e._notifyChange(a)}}function r(t,n){if(t===n)return!0;var i,o=e.type(t),a=e.type(n);if(o!==a)return!1;if("date"===o)return t.getTime()===n.getTime();if("object"!==o&&"array"!==o)return!1;for(i in t)if(!r(t[i],n[i]))return!1;return!0}function i(e,t){var n,r;for(r in e){if(n=e[r],et(n)&&n.field&&n.field===t)return n;if(n===t)return n}return null}function o(e){this.data=e||[]}function a(e,n){if(e){var r=typeof e===dt?{field:e,dir:n}:e,i=nt(r)?r:r!==t?[r]:[];return rt(i,function(e){return!!e.dir})}}function s(e){var t,n,r,i,o=e.filters;if(o)for(t=0,n=o.length;n>t;t++)r=o[t],i=r.operator,i&&typeof i===dt&&(r.operator=F[i.toLowerCase()]||i),s(r)}function l(e){return e&&!tt(e)?((nt(e)||!e.filters)&&(e={logic:"and",filters:nt(e)?e:[e]}),s(e),e):t}function c(e){return nt(e)?e:[e]}function d(e,n){var r=typeof e===dt?{field:e,dir:n}:e,i=nt(r)?r:r!==t?[r]:[];return O(i,function(e){return{field:e.field,dir:e.dir||"asc",aggregates:e.aggregates}})}function u(e,t){return e&&e.getTime&&t&&t.getTime?e.getTime()===t.getTime():e===t}function h(e,t,n,r,i){var o,a,s,l,c;for(t=t||[],l=t.length,o=0;l>o;o++)a=t[o],s=a.aggregate,c=a.field,e[c]=e[c]||{},e[c][s]=U[s.toLowerCase()](e[c][s],n,st.accessor(c),r,i)}function f(e){var t,n=e.length,r=Array(n);for(t=0;n>t;t++)r[t]=e[t].toJSON();return r}function p(e,t){t=t||{};var n=new o(e),r=t.aggregate,i=t.filter;return i&&(n=n.filter(i)),n.aggregate(r)}function g(e,t,n,r,i){var o,a,s,l,c;for(l=0,c=e.length;c>l;l++){o=e[l];for(a in t)s=i[a],s&&s!==a&&(o[s]=t[a](o),delete o[a])}}function m(e,t,n,r,i){var o,a,s,l,c;for(l=0,c=e.length;c>l;l++){o=e[l];for(a in t)o[a]=n._parse(a,t[a](o)),s=i[a],s&&s!==a&&delete o[s]}}function v(e,t,n,r,i){var o,a,s,l;for(a=0,l=e.length;l>a;a++)o=e[a],s=r[o.field],s&&s!=o.field&&(o.field=s),o.value=n._parse(o.field,o.value),o.hasSubgroups?v(o.items,t,n,r,i):m(o.items,t,n,r,i)}function x(e,t,n,r,i,o){return function(a){return a=e(a),a&&!tt(r)&&("[object Array]"===Ot.call(a)||a instanceof Ut||(a=[a]),n(a,r,new t,i,o)),a||[]}}function y(e,t,n,r){for(var i,o,a=0;t.length&&r&&(i=t[a],o=i.items,e&&e.field===i.field&&e.value===i.value?(e.hasSubgroups&&e.items.length?y(e.items[e.items.length-1],i.items,n,r):(o=o.slice(n,r),r-=o.length,e.items=e.items.concat(o)),t.splice(a--,1)):(o=o.slice(n,r),r-=o.length,i.items=o,i.items.length||t.splice(a--,1)),n=0,!(++a>=t.length)););}function w(e){var t,n,r=[];for(t=0,n=e.length;n>t;t++)r=e[t].hasSubgroups?r.concat(w(e[t].items)):r.concat(e[t].items.slice());return r}function b(e,t){var n,r,i,o;if(t)for(n=0,r=e.length;r>n;n++)i=e[n],o=i.items,i.hasSubgroups?b(o,t):!o.length||o[0]instanceof t||(o.type=t,o.wrapAll(o,o))}function _(e,t){var n,r;for(n=0,r=e.length;r>n;n++)if(e[n].hasSubgroups){if(_(e[n].items,t))return!0}else if(t(e[n].items,e[n]))return!0}function C(e,t){var n,r;for(n=0,r=e.length;r>n;n++)if(e[n].uid==t.uid)return t=e[n],e.splice(n,1),t}function k(e,t){var n,r,i,o;for(i=e.length-1,o=0;i>=o;i--)r=e[i],n={value:t.get(r.field),field:r.field,items:n?[n]:[t],hasSubgroups:!!n,aggregates:{}};return n}function A(e,t){return t?T(e,function(e){return e[t.idField]===t.id}):-1}function S(e,t){return t?T(e,function(e){return e.uid==t.uid}):-1}function T(e,t){var n,r;for(n=0,r=e.length;r>n;n++)if(t(e[n]))return n;return-1}function P(e,t){if(e&&!tt(e)){var n=e[t];return et(n)?n.from||n.field||t:e[t]}return t}function D(e,t){var n,r,i,o={};for(i in e)"filters"!==i&&(o[i]=e[i]);if(e.filters&&e.filters.length)for(o.filters=[],n=0,r=e.filters.length;r>n;n++)o.filters[n]=D(e.filters[n],t);else o.field=P(t.fields,o.field);return o}function B(e,t){var n,r,i,o,a,s=[];for(n=0,r=e.length;r>n;n++){i={},o=e[n];for(a in o)i[a]=o[a];i.field=P(t.fields,i.field),i.aggregates&&nt(i.aggregates)&&(i.aggregates=B(i.aggregates,t)),s.push(i)}return s}function M(t,n){var r,i,o,a,s,l=e(t)[0].children,c=[],d=n[0],u=n[1];for(r=0,i=l.length;i>r;r++)o={},s=l[r],s.disabled||(o[d.field]=s.text,a=s.attributes.value,a=a&&a.specified?s.value:s.text,o[u.field]=a,c.push(o));return c}function I(t,n){var r,i,o,a,s,l,c,d=e(t)[0].tBodies[0],u=d?d.rows:[],h=n.length,f=[];for(r=0,i=u.length;i>r;r++){for(s={},c=!0,a=u[r].cells,o=0;h>o;o++)l=a[o],"th"!==l.nodeName.toLowerCase()&&(c=!1,s[n[o].field]=l.innerHTML);c||f.push(s)}return f}function L(e){return function(){var t=this._data,n=W.fn[e].apply(this,Lt.call(arguments));return this._data!=t&&this._attachBubbleHandlers(),n}}function E(t,n){var r,i,o,a,s,l,c,d,u=e(t).children(),h=[],f=n[0].field,p=n[1]&&n[1].field,g=n[2]&&n[2].field,m=n[3]&&n[3].field;for(r=0,i=u.length;i>r;r++)o={_loaded:!0},a=u.eq(r),l=a[0].firstChild,d=a.children(),t=d.filter("ul"),d=d.filter(":not(ul)"),s=a.attr("data-id"),s&&(o.id=s),l&&(o[f]=3==l.nodeType?l.nodeValue:d.text()),p&&(o[p]=d.find("a").attr("href")),m&&(o[m]=d.find("img").attr("src")),g&&(c=d.find(".k-sprite").prop("className"),o[g]=c&&e.trim(c.replace("k-sprite",""))),t.length&&(o.items=E(t.eq(0),n)),"true"==a.attr("data-hasChildren")&&(o.hasChildren=!0),h.push(o);return h}var O,V,R,z,F,U,j,H,N,G,W,q,Q,Y,X,$,Z=e.extend,J=e.proxy,K=e.isFunction,et=e.isPlainObject,tt=e.isEmptyObject,nt=e.isArray,rt=e.grep,it=e.ajax,ot=e.each,at=e.noop,st=window.kendo,lt=st.Observable,ct=st.Class,dt="string",ut="function",ht="create",ft="read",pt="update",gt="destroy",mt="change",vt="sync",xt="get",yt="error",wt="requestStart",bt="progress",_t="requestEnd",Ct=[ht,ft,pt,gt],kt=function(e){return e},At=st.getter,St=st.stringify,Tt=Math,Pt=[].push,Dt=[].join,Bt=[].pop,Mt=[].splice,It=[].shift,Lt=[].slice,Et=[].unshift,Ot={}.toString,Vt=st.support.stableSort,Rt=/^\/Date\((.*?)\)\/$/,zt=/(\r+|\n+)/g,Ft=/(?=['\\])/g,Ut=lt.extend({init:function(e,t){var n=this;n.type=t||jt,lt.fn.init.call(n),n.length=e.length,n.wrapAll(e,n)},toJSON:function(){var e,t,n=this.length,r=Array(n);for(e=0;n>e;e++)t=this[e],t instanceof jt&&(t=t.toJSON()),r[e]=t;return r},parent:at,wrapAll:function(e,t){var n,r,i=this,o=function(){return i};for(t=t||[],n=0,r=e.length;r>n;n++)t[n]=i.wrap(e[n],o);return t},wrap:function(e,t){var n,r=this;return null!==e&&"[object Object]"===Ot.call(e)&&(n=e instanceof r.type||e instanceof Gt,n||(e=e instanceof jt?e.toJSON():e,e=new r.type(e)),e.parent=t,e.bind(mt,function(e){r.trigger(mt,{field:e.field,node:e.node,index:e.index,items:e.items||[this],action:e.node?e.action||"itemchange":"itemchange"})})),e},push:function(){var e,t=this.length,n=this.wrapAll(arguments);return e=Pt.apply(this,n),this.trigger(mt,{action:"add",index:t,items:n}),e},slice:Lt,join:Dt,pop:function(){var e=this.length,t=Bt.apply(this);return e&&this.trigger(mt,{action:"remove",index:e-1,items:[t]}),t},splice:function(e,t,n){var r,i,o,a=this.wrapAll(Lt.call(arguments,2));if(r=Mt.apply(this,[e,t].concat(a)),r.length)for(this.trigger(mt,{action:"remove",index:e,items:r}),i=0,o=r.length;o>i;i++)r[i].children&&r[i].unbind(mt);return n&&this.trigger(mt,{action:"add",index:e,items:a}),r},shift:function(){var e=this.length,t=It.apply(this);return e&&this.trigger(mt,{action:"remove",index:0,items:[t]}),t},unshift:function(){var e,t=this.wrapAll(arguments);return e=Et.apply(this,t),this.trigger(mt,{action:"add",index:0,items:t}),e},indexOf:function(e){var t,n,r=this;for(t=0,n=r.length;n>t;t++)if(r[t]===e)return t;return-1},forEach:function(e){for(var t=0,n=this.length;n>t;t++)e(this[t],t,this)},map:function(e){for(var t=0,n=[],r=this.length;r>t;t++)n[t]=e(this[t],t,this);return n},filter:function(e){for(var t,n=0,r=[],i=this.length;i>n;n++)t=this[n],e(t,n,this)&&(r[r.length]=t);return r},find:function(e){for(var t,n=0,r=this.length;r>n;n++)if(t=this[n],e(t,n,this))return t},every:function(e){for(var t,n=0,r=this.length;r>n;n++)if(t=this[n],!e(t,n,this))return!1;return!0},some:function(e){for(var t,n=0,r=this.length;r>n;n++)if(t=this[n],e(t,n,this))return!0;return!1},remove:function(e){this.splice(this.indexOf(e),1)}}),jt=lt.extend({init:function(e){var t,n,r=this,i=function(){return r};lt.fn.init.call(this);for(n in e)t=e[n],"_"!=n.charAt(0)&&(t=r.wrap(t,n,i)),r[n]=t;r.uid=st.guid()},shouldSerialize:function(e){return this.hasOwnProperty(e)&&"_events"!==e&&typeof this[e]!==ut&&"uid"!==e},forEach:function(e){for(var t in this)this.shouldSerialize(t)&&e(this[t],t)},toJSON:function(){var e,t,n={};for(t in this)this.shouldSerialize(t)&&(e=this[t],(e instanceof jt||e instanceof Ut)&&(e=e.toJSON()),n[t]=e);return n},get:function(e){var t,n=this;return n.trigger(xt,{field:e}),t="this"===e?n:st.getter(e,!0)(n)},_set:function(e,t){var n,r,i,o=this,a=e.indexOf(".")>=0;if(a)for(n=e.split("."),r="";n.length>1;){if(r+=n.shift(),i=st.getter(r,!0)(o),i instanceof jt)return i.set(n.join("."),t),a;r+="."}return st.setter(e)(o,t),a},set:function(e,t){var n=this,r=st.getter(e,!0)(n);r!==t&&(n.trigger("set",{field:e,value:t})||(!n._set(e,n.wrap(t,e,function(){return n}))||e.indexOf("(")>=0||e.indexOf("[")>=0)&&n.trigger(mt,{field:e}))},parent:at,wrap:function(e,t,r){var i,o,a=this,s=Ot.call(e);return null==e||"[object Object]"!==s&&"[object Array]"!==s||(i=e instanceof Ut,o=e instanceof W,"[object Object]"!==s||o||i?("[object Array]"===s||i||o)&&(i||o||(e=new Ut(e)),e.parent()!=r()&&e.bind(mt,n(a,mt,t,!1))):(e instanceof jt||(e=new jt(e)),e.parent()!=r()&&(e.bind(xt,n(a,xt,t,!0)),e.bind(mt,n(a,mt,t,!0)))),e.parent=r),e}}),Ht={number:function(e){return st.parseFloat(e)},date:function(e){return st.parseDate(e)},"boolean":function(e){return typeof e===dt?"true"===e.toLowerCase():null!=e?!!e:e},string:function(e){return null!=e?e+"":e},"default":function(e){return e}},Nt={string:"",number:0,date:new Date,"boolean":!1,"default":""},Gt=jt.extend({init:function(n){var r=this;(!n||e.isEmptyObject(n))&&(n=e.extend({},r.defaults,n)),jt.fn.init.call(r,n),r.dirty=!1,r.idField&&(r.id=r.get(r.idField),r.id===t&&(r.id=r._defaultId))},shouldSerialize:function(e){return jt.fn.shouldSerialize.call(this,e)&&"uid"!==e&&!("id"!==this.idField&&"id"===e)&&"dirty"!==e&&"_accessors"!==e},_parse:function(e,t){var n,r=this,o=e,a=r.fields||{};return e=a[e],e||(e=i(a,o)),e&&(n=e.parse,!n&&e.type&&(n=Ht[e.type.toLowerCase()])),n?n(t):t},_notifyChange:function(e){var t=e.action;("add"==t||"remove"==t)&&(this.dirty=!0)},editable:function(e){return e=(this.fields||{})[e],e?e.editable!==!1:!0},set:function(e,t,n){var i=this;i.editable(e)&&(t=i._parse(e,t),r(t,i.get(e))||(i.dirty=!0,jt.fn.set.call(i,e,t,n)))},accept:function(e){var t,n=this,r=function(){return n};for(t in e)n._set(t,n.wrap(e[t],t,r));n.idField&&(n.id=n.get(n.idField)),n.dirty=!1},isNew:function(){return this.id===this._defaultId}});Gt.define=function(e,n){n===t&&(n=e,e=Gt);var r,i,o,a,s,l,c,d,u=Z({defaults:{}},n),h={},f=u.id;if(f&&(u.idField=f),u.id&&delete u.id,f&&(u.defaults[f]=u._defaultId=""),"[object Array]"===Ot.call(u.fields)){for(l=0,c=u.fields.length;c>l;l++)o=u.fields[l],typeof o===dt?h[o]={}:o.field&&(h[o.field]=o);u.fields=h}for(i in u.fields)o=u.fields[i],a=o.type||"default",s=null,d=i,i=typeof o.field===dt?o.field:i,o.nullable||(s=u.defaults[d!==i?d:i]=o.defaultValue!==t?o.defaultValue:Nt[a.toLowerCase()]),n.id===i&&(u._defaultId=s),u.defaults[d!==i?d:i]=s,o.parse=o.parse||Ht[a];return r=e.extend(u),r.define=function(e){return Gt.define(r,e)},u.fields&&(r.fields=u.fields,r.idField=u.idField),r},V={selector:function(e){return K(e)?e:At(e)},compare:function(e){var t=this.selector(e);return function(e,n){return e=t(e),n=t(n),null==e&&null==n?0:null==e?-1:null==n?1:e.localeCompare?e.localeCompare(n):e>n?1:n>e?-1:0}},create:function(e){var t=e.compare||this.compare(e.field);return"desc"==e.dir?function(e,n){return t(n,e,!0)}:t},combine:function(e){return function(t,n){var r,i,o=e[0](t,n);for(r=1,i=e.length;i>r;r++)o=o||e[r](t,n);return o}}},R=Z({},V,{asc:function(e){var t=this.selector(e);return function(e,n){var r=t(e),i=t(n);return r&&r.getTime&&i&&i.getTime&&(r=r.getTime(),i=i.getTime()),r===i?e.__position-n.__position:null==r?-1:null==i?1:r.localeCompare?r.localeCompare(i):r>i?1:-1}},desc:function(e){var t=this.selector(e);return function(e,n){var r=t(e),i=t(n);return r&&r.getTime&&i&&i.getTime&&(r=r.getTime(),i=i.getTime()),r===i?e.__position-n.__position:null==r?1:null==i?-1:i.localeCompare?i.localeCompare(r):i>r?1:-1}},create:function(e){return this[e.dir](e.field)}}),O=function(e,t){var n,r=e.length,i=Array(r);for(n=0;r>n;n++)i[n]=t(e[n],n,e);return i},z=function(){function e(e){return e.replace(Ft,"\\").replace(zt,"")}function t(t,n,r,i){var o;return null!=r&&(typeof r===dt&&(r=e(r),o=Rt.exec(r),o?r=new Date(+o[1]):i?(r="'"+r.toLowerCase()+"'",n="("+n+" || '').toLowerCase()"):r="'"+r+"'"),r.getTime&&(n="("+n+"?"+n+".getTime():"+n+")",r=r.getTime())),n+" "+t+" "+r}return{eq:function(e,n,r){return t("==",e,n,r)},neq:function(e,n,r){return t("!=",e,n,r)},gt:function(e,n,r){return t(">",e,n,r)},gte:function(e,n,r){return t(">=",e,n,r)},lt:function(e,n,r){return t("<",e,n,r)},lte:function(e,n,r){return t("<=",e,n,r)},startswith:function(t,n,r){return r&&(t="("+t+" || '').toLowerCase()",n&&(n=n.toLowerCase())),n&&(n=e(n)),t+".lastIndexOf('"+n+"', 0) == 0"},endswith:function(t,n,r){return r&&(t="("+t+" || '').toLowerCase()",n&&(n=n.toLowerCase())),n&&(n=e(n)),t+".indexOf('"+n+"', "+t+".length - "+(n||"").length+") >= 0"},contains:function(t,n,r){return r&&(t="("+t+" || '').toLowerCase()",n&&(n=n.toLowerCase())),n&&(n=e(n)),t+".indexOf('"+n+"') >= 0"},doesnotcontain:function(t,n,r){return r&&(t="("+t+" || '').toLowerCase()",n&&(n=n.toLowerCase())),n&&(n=e(n)),t+".indexOf('"+n+"') == -1"}}}(),o.filterExpr=function(e){var n,r,i,a,s,l,c=[],d={and:" && ",or:" || "},u=[],h=[],f=e.filters;for(n=0,r=f.length;r>n;n++)i=f[n],s=i.field,l=i.operator,i.filters?(a=o.filterExpr(i),i=a.expression.replace(/__o\[(\d+)\]/g,function(e,t){return t=+t,"__o["+(h.length+t)+"]"}).replace(/__f\[(\d+)\]/g,function(e,t){return t=+t,"__f["+(u.length+t)+"]"}),h.push.apply(h,a.operators),u.push.apply(u,a.fields)):(typeof s===ut?(a="__f["+u.length+"](d)",u.push(s)):a=st.expr(s),typeof l===ut?(i="__o["+h.length+"]("+a+", "+i.value+")",h.push(l)):i=z[(l||"eq").toLowerCase()](a,i.value,i.ignoreCase!==t?i.ignoreCase:!0)),c.push(i);return{expression:"("+c.join(d[e.logic])+")",fields:u,operators:h}},F={"==":"eq",equals:"eq",isequalto:"eq",equalto:"eq",equal:"eq","!=":"neq",ne:"neq",notequals:"neq",isnotequalto:"neq",notequalto:"neq",notequal:"neq","<":"lt",islessthan:"lt",lessthan:"lt",less:"lt","<=":"lte",le:"lte",islessthanorequalto:"lte",lessthanequal:"lte",">":"gt",isgreaterthan:"gt",greaterthan:"gt",greater:"gt",">=":"gte",isgreaterthanorequalto:"gte",greaterthanequal:"gte",ge:"gte",notsubstringof:"doesnotcontain"},o.normalizeFilter=l,o.prototype={toArray:function(){return this.data},range:function(e,t){return new o(this.data.slice(e,e+t))},skip:function(e){return new o(this.data.slice(e))},take:function(e){return new o(this.data.slice(0,e))},select:function(e){return new o(O(this.data,e))},order:function(e,t){var n={dir:t};return e&&(e.compare?n.compare=e.compare:n.field=e),new o(this.data.slice(0).sort(V.create(n)))},orderBy:function(e){return this.order(e,"asc")},orderByDescending:function(e){return this.order(e,"desc")},sort:function(e,t,n){var r,i,o=a(e,t),s=[];if(n=n||V,o.length){for(r=0,i=o.length;i>r;r++)s.push(n.create(o[r]));return this.orderBy({compare:n.combine(s)})}return this},filter:function(e){var t,n,r,i,a,s,c,d,u=this.data,h=[];if(e=l(e),!e||0===e.filters.length)return this;for(i=o.filterExpr(e),s=i.fields,c=i.operators,a=d=Function("d, __f, __o","return "+i.expression),(s.length||c.length)&&(d=function(e){return a(e,s,c)}),t=0,r=u.length;r>t;t++)n=u[t],d(n)&&h.push(n);return new o(h)},group:function(e,t){e=d(e||[]),t=t||this.data;var n,r=this,i=new o(r.data);return e.length>0&&(n=e[0],i=i.groupBy(n).select(function(r){var i=new o(t).filter([{field:r.field,operator:"eq",value:r.value}]);return{field:r.field,value:r.value,items:e.length>1?new o(r.items).group(e.slice(1),i.toArray()).toArray():r.items,hasSubgroups:e.length>1,aggregates:i.aggregate(n.aggregates)}})),i},groupBy:function(e){if(tt(e)||!this.data.length)return new o([]);var t,n,r,i,a=e.field,s=this._sortForGrouping(a,e.dir||"asc"),l=st.accessor(a),c=l.get(s[0],a),d={field:a,value:c,items:[]},h=[d];for(r=0,i=s.length;i>r;r++)t=s[r],n=l.get(t,a),u(c,n)||(c=n,d={field:a,value:c,items:[]},h.push(d)),d.items.push(t);return new o(h)},_sortForGrouping:function(e,t){var n,r,i=this.data;if(!Vt){for(n=0,r=i.length;r>n;n++)i[n].__position=n;for(i=new o(i).sort(e,t,R).toArray(),n=0,r=i.length;r>n;n++)delete i[n].__position;return i}return this.sort(e,t).toArray()},aggregate:function(e){var t,n,r={};if(e&&e.length)for(t=0,n=this.data.length;n>t;t++)h(r,e,this.data[t],t,n);return r}},U={sum:function(e,t,n){return(e||0)+n.get(t)},count:function(e){return(e||0)+1},average:function(e,t,n,r,i){return e=(e||0)+n.get(t),r==i-1&&(e/=i),e
},max:function(e,t,n){var r=n.get(t);return e=e||0,r>e&&(e=r),e},min:function(e,t,n){var r=n.get(t);return e=e||r,e>r&&(e=r),e}},o.process=function(e,n){n=n||{};var r,i=new o(e),s=n.group,l=d(s||[]).concat(a(n.sort||[])),c=n.filter,u=n.skip,h=n.take;return c&&(i=i.filter(c),r=i.toArray().length),l&&(i=i.sort(l),s&&(e=i.toArray())),u!==t&&h!==t&&(i=i.range(u,h)),s&&(i=i.group(s,e)),{total:r,data:i.toArray()}},j=ct.extend({init:function(e){this.data=e.data},read:function(e){e.success(this.data)},update:function(e){e.success(e.data)},create:function(e){e.success(e.data)},destroy:function(e){e.success(e.data)}}),H=ct.extend({init:function(e){var t,n=this;e=n.options=Z({},n.options,e),ot(Ct,function(t,n){typeof e[n]===dt&&(e[n]={url:e[n]})}),n.cache=e.cache?N.create(e.cache):{find:at,add:at},t=e.parameterMap,n.parameterMap=K(t)?t:function(e){var n={};return ot(e,function(e,r){e in t&&(e=t[e],et(e)&&(r=e.value(r),e=e.key)),n[e]=r}),n}},options:{parameterMap:kt},create:function(e){return it(this.setup(e,ht))},read:function(n){var r,i,o,a=this,s=a.cache;n=a.setup(n,ft),r=n.success||at,i=n.error||at,o=s.find(n.data),o!==t?r(o):(n.success=function(e){s.add(n.data,e),r(e)},e.ajax(n))},update:function(e){return it(this.setup(e,pt))},destroy:function(e){return it(this.setup(e,gt))},setup:function(e,t){e=e||{};var n,r=this,i=r.options[t],o=K(i.data)?i.data(e.data):i.data;return e=Z(!0,{},i,e),n=Z(!0,{},o,e.data),e.data=r.parameterMap(n,t),K(e.url)&&(e.url=e.url(n)),e}}),N=ct.extend({init:function(){this._store={}},add:function(e,n){e!==t&&(this._store[St(e)]=n)},find:function(e){return this._store[St(e)]},clear:function(){this._store={}},remove:function(e){delete this._store[St(e)]}}),N.create=function(e){var t={inmemory:function(){return new N}};return et(e)&&K(e.find)?e:e===!0?new N:t[e]()},G=ct.extend({init:function(e){var t,n,r,i,o,a,s,l,c,d,u,h,f,p=this;e=e||{};for(t in e)n=e[t],p[t]=typeof n===dt?At(n):n;i=e.modelBase||Gt,et(p.model)&&(p.model=r=i.define(p.model)),p.model&&(a=J(p.data,p),s=J(p.groups,p),l=J(p.serialize,p),c={},d={},u={},h={},f=!1,r=p.model,r.fields&&(ot(r.fields,function(e,t){var n;o=e,et(t)&&t.field?o=t.field:typeof t===dt&&(o=t),et(t)&&t.from&&(n=t.from),f=f||n&&n!==e||o!==e,d[e]=At(n||o),u[e]=At(e),c[n||o]=e,h[e]=n||o}),!e.serialize&&f&&(p.serialize=x(l,r,g,u,c,h))),p.data=x(a,r,m,d,c,h),p.groups=x(s,r,v,d,c,h))},errors:function(e){return e?e.errors:null},parse:kt,data:kt,total:function(e){return e.length},groups:kt,aggregates:function(){return{}},serialize:function(e){return e}}),W=lt.extend({init:function(e){var n,r,i=this;e&&(r=e.data),e=i.options=Z({},i.options,e),i._map={},i._prefetch={},i._data=[],i._pristineData=[],i._ranges=[],i._view=[],i._pristine=[],i._destroyed=[],i._pageSize=e.pageSize,i._page=e.page||(e.pageSize?1:t),i._sort=a(e.sort),i._filter=l(e.filter),i._group=d(e.group),i._aggregate=e.aggregate,i._total=e.total,lt.fn.init.call(i),i.transport=q.create(e,r),i.reader=new st.data.readers[e.schema.type||"json"](e.schema),n=i.reader.model||{},i._data=i._observe(i._data),i.bind([yt,mt,wt,vt,_t,bt],e)},options:{data:[],schema:{modelBase:Gt},serverSorting:!1,serverPaging:!1,serverFiltering:!1,serverGrouping:!1,serverAggregates:!1,batch:!1},_isServerGrouped:function(){var e=this.group()||[];return this.options.serverGrouping&&e.length},_flatData:function(e){return this._isServerGrouped()?w(e):e},parent:at,get:function(e){var t,n,r=this._flatData(this._data);for(t=0,n=r.length;n>t;t++)if(r[t].id==e)return r[t]},getByUid:function(e){var t,n,r=this._flatData(this._data);if(r)for(t=0,n=r.length;n>t;t++)if(r[t].uid==e)return r[t]},indexOf:function(e){return S(this._data,e)},at:function(e){return this._data[e]},data:function(e){var n=this;return e===t?n._data:(n._data=this._observe(e),n._ranges=[],n._addRange(n._data),n._total=n._data.length,n._process(n._data),t)},view:function(){return this._view},add:function(e){return this.insert(this._data.length,e)},_createNewModel:function(e){return this.reader.model?new this.reader.model(e):new jt(e)},insert:function(e,t){return t||(t=e,e=0),t instanceof Gt||(t=this._createNewModel(t)),this._isServerGrouped()?this._data.splice(e,0,k(this.group(),t)):this._data.splice(e,0,t),t},remove:function(e){var n,r=this,i=r._isServerGrouped();return this._eachItem(r._data,function(o){return n=C(o,e),n&&i?(n.isNew&&n.isNew()||r._destroyed.push(n),!0):t}),e},sync:function(){var t,n,r,i=this,o=[],a=[],s=i._destroyed,l=i._flatData(i._data);if(i.reader.model){for(t=0,n=l.length;n>t;t++)l[t].isNew()?o.push(l[t]):l[t].dirty&&a.push(l[t]);r=i._send("create",o),r.push.apply(r,i._send("update",a)),r.push.apply(r,i._send("destroy",s)),e.when.apply(null,r).then(function(){var e,t;for(e=0,t=arguments.length;t>e;e++)i._accept(arguments[e]);i._change({action:"sync"}),i.trigger(vt)})}},cancelChanges:function(e){var t=this;e instanceof st.data.Model?t._cancelModel(e):(t._destroyed=[],t._data=t._observe(t._pristineData),t.options.serverPaging&&(t._total=t.reader.total(t._pristine)),t._change())},hasChanges:function(){var e,t,n=this._data;if(this._destroyed.length)return!0;for(e=0,t=n.length;t>e;e++)if(n[e].isNew()||n[e].dirty)return!0;return!1},_accept:function(t){var n,r=this,i=t.models,o=t.response,a=0,s=r._isServerGrouped(),l=r._pristineData,c=t.type;if(r.trigger(_t,{response:o,type:c}),o&&!tt(o)){if(o=r.reader.parse(o),r._handleCustomErrors(o))return;o=r.reader.data(o),e.isArray(o)||(o=[o])}else o=e.map(i,function(e){return e.toJSON()});for("destroy"===c&&(r._destroyed=[]),a=0,n=i.length;n>a;a++)"destroy"!==c?(i[a].accept(o[a]),"create"===c?l.push(s?k(r.group(),i[a]):o[a]):"update"===c&&r._updatePristineForModel(i[a],o[a])):r._removePristineForModel(i[a])},_updatePristineForModel:function(e,t){this._executeOnPristineForModel(e,function(e,n){st.deepExtend(n[e],t)})},_executeOnPristineForModel:function(e,n){this._eachPristineItem(function(r){var i=A(r,e);return i>-1?(n(i,r),!0):t})},_removePristineForModel:function(e){this._executeOnPristineForModel(e,function(e,t){t.splice(e,1)})},_readData:function(e){var t=this._isServerGrouped()?this.reader.groups:this.reader.data;return t(e)},_eachPristineItem:function(e){this._eachItem(this._pristineData,e)},_eachItem:function(e,t){e&&e.length&&(this._isServerGrouped()?_(e,t):t(e))},_pristineForModel:function(e){var n,r,i=function(i){return r=A(i,e),r>-1?(n=i[r],!0):t};return this._eachPristineItem(i),n},_cancelModel:function(e){var t,n=this._pristineForModel(e);this._eachItem(this._data,function(r){t=S(r,e),-1!=t&&(!e.isNew()&&n?r[t].accept(n):r.splice(t,1))})},_promise:function(t,n,r){var i=this,o=i.transport;return e.Deferred(function(e){i.trigger(wt),o[r].call(o,Z({success:function(t){e.resolve({response:t,models:n,type:r})},error:function(t,n,r){e.reject(t),i.error(t,n,r)}},t))}).promise()},_send:function(e,t){var n,r,i=this,o=[],a=i.reader.serialize(f(t));if(i.options.batch)t.length&&o.push(i._promise({data:{models:a}},t,e));else for(n=0,r=t.length;r>n;n++)o.push(i._promise({data:a[n]},[t[n]],e));return o},read:function(e){var t=this,n=t._params(e);t._queueRequest(n,function(){t.trigger(wt)?t._dequeueRequest():(t.trigger(bt),t._ranges=[],t.transport.read({data:n,success:J(t.success,t),error:J(t.error,t)}))})},success:function(n){var r=this,i=r.options;return r.trigger(_t,{response:n,type:"read"}),n=r.reader.parse(n),r._handleCustomErrors(n)?(r._dequeueRequest(),t):(r._pristine=et(n)?e.extend(!0,{},n):n.slice?n.slice(0):n,r._total=r.reader.total(n),r._aggregate&&i.serverAggregates&&(r._aggregateResult=r.reader.aggregates(n)),n=r._readData(n),r._pristineData=n.slice(0),r._data=r._observe(n),r._addRange(r._data),r._process(r._data),r._dequeueRequest(),t)},_addRange:function(e){var t=this,n=t._skip||0,r=n+t._flatData(e).length;t._ranges.push({start:n,end:r,data:e}),t._ranges.sort(function(e,t){return e.start-t.start})},error:function(e,t,n){this._dequeueRequest(),this.trigger(_t,{}),this.trigger(yt,{xhr:e,status:t,errorThrown:n})},_params:function(e){var t=this,n=Z({take:t.take(),skip:t.skip(),page:t.page(),pageSize:t.pageSize(),sort:t._sort,filter:t._filter,group:t._group,aggregate:t._aggregate},e);return t.options.serverPaging||(delete n.take,delete n.skip,delete n.page,delete n.pageSize),t.options.serverGrouping?t.reader.model&&n.group&&(n.group=B(n.group,t.reader.model)):delete n.group,t.options.serverFiltering?t.reader.model&&n.filter&&(n.filter=D(n.filter,t.reader.model)):delete n.filter,t.options.serverSorting?t.reader.model&&n.sort&&(n.sort=B(n.sort,t.reader.model)):delete n.sort,t.options.serverAggregates?t.reader.model&&n.aggregate&&(n.aggregate=B(n.aggregate,t.reader.model)):delete n.aggregate,n},_queueRequest:function(e,n){var r=this;r._requestInProgress?r._pending={callback:J(n,r),options:e}:(r._requestInProgress=!0,r._pending=t,n())},_dequeueRequest:function(){var e=this;e._requestInProgress=!1,e._pending&&e._queueRequest(e._pending.options,e._pending.callback)},_handleCustomErrors:function(e){if(this.reader.errors){var t=this.reader.errors(e);if(t)return this.trigger(yt,{xhr:null,status:"customerror",errorThrown:"custom error",errors:t}),!0}return!1},_observe:function(e){var t=this,n=t.reader.model,r=!1;return n&&e.length&&(r=!(e[0]instanceof n)),e instanceof Ut?r&&(e.type=t.reader.model,e.wrapAll(e,e)):(e=new Ut(e,t.reader.model),e.parent=function(){return t.parent()}),t._isServerGrouped()&&b(e,n),t._changeHandler&&t._data&&t._data instanceof Ut?t._data.unbind(mt,t._changeHandler):t._changeHandler=J(t._change,t),e.bind(mt,t._changeHandler)},_change:function(e){var t,n,r,i=this,o=e?e.action:"";if("remove"===o)for(t=0,n=e.items.length;n>t;t++)e.items[t].isNew&&e.items[t].isNew()||i._destroyed.push(e.items[t]);!i.options.autoSync||"add"!==o&&"remove"!==o&&"itemchange"!==o?(r=i._total||i.reader.total(i._pristine),"add"===o?r+=e.items.length:"remove"===o?r-=e.items.length:"itemchange"===o||"sync"===o||i.options.serverPaging||(r=i.reader.total(i._pristine)),i._total=r,i._process(i._data,e)):i.sync()},_process:function(e,n){var r,i=this,a={};i.options.serverPaging!==!0&&(a.skip=i._skip,a.take=i._take||i._pageSize,a.skip===t&&i._page!==t&&i._pageSize!==t&&(a.skip=(i._page-1)*i._pageSize)),i.options.serverSorting!==!0&&(a.sort=i._sort),i.options.serverFiltering!==!0&&(a.filter=i._filter),i.options.serverGrouping!==!0&&(a.group=i._group),i.options.serverAggregates!==!0&&(a.aggregate=i._aggregate,i._aggregateResult=p(e,a)),r=o.process(e,a),i._view=r.data,r.total===t||i.options.serverFiltering||(i._total=r.total),n=n||{},n.items=n.items||i._view,i.trigger(mt,n)},_mergeState:function(e){var n=this;return e!==t&&(n._pageSize=e.pageSize,n._page=e.page,n._sort=e.sort,n._filter=e.filter,n._group=e.group,n._aggregate=e.aggregate,n._skip=e.skip,n._take=e.take,n._skip===t&&(n._skip=n.skip(),e.skip=n.skip()),n._take===t&&n._pageSize!==t&&(n._take=n._pageSize,e.take=n._take),e.sort&&(n._sort=e.sort=a(e.sort)),e.filter&&(n._filter=e.filter=l(e.filter)),e.group&&(n._group=e.group=d(e.group)),e.aggregate&&(n._aggregate=e.aggregate=c(e.aggregate))),e},query:function(e){var n,r=this,i=r.options.serverSorting||r.options.serverPaging||r.options.serverFiltering||r.options.serverGrouping||r.options.serverAggregates;i||(r._data===t||0===r._data.length)&&!r._destroyed.length?r.read(r._mergeState(e)):r.trigger(wt)||(r.trigger(bt),n=o.process(r._data,r._mergeState(e)),r.options.serverFiltering||(r._total=n.total!==t?n.total:r._data.length),r._view=n.data,r._aggregateResult=p(r._data,e),r.trigger(_t,{}),r.trigger(mt,{items:n.data}))},fetch:function(t){var n=this;return e.Deferred(function(e){var r=function(r){n.unbind(yt,i),e.resolve(),t&&t.call(n,r)},i=function(t){e.reject(t)};n.one(mt,r),n.one(yt,i),n._query()}).promise()},_query:function(e){var t=this;t.query(Z({},{page:t.page(),pageSize:t.pageSize(),sort:t.sort(),filter:t.filter(),group:t.group(),aggregate:t.aggregate()},e))},next:function(e){var n=this,r=n.page(),i=n.total();return e=e||{},!r||i&&r+1>n.totalPages()?t:(n._skip=r*n.take(),r+=1,e.page=r,n._query(e),r)},prev:function(e){var n=this,r=n.page();return e=e||{},r&&1!==r?(n._skip=n._skip-n.take(),r-=1,e.page=r,n._query(e),r):t},page:function(e){var n,r=this;return e!==t?(e=Tt.max(Tt.min(Tt.max(e,1),r.totalPages()),1),r._query({page:e}),t):(n=r.skip(),n!==t?Tt.round((n||0)/(r.take()||1))+1:t)},pageSize:function(e){var n=this;return e!==t?(n._query({pageSize:e,page:1}),t):n.take()},sort:function(e){var n=this;return e!==t?(n._query({sort:e}),t):n._sort},filter:function(e){var n=this;return e===t?n._filter:(n._query({filter:e,page:1}),t)},group:function(e){var n=this;return e!==t?(n._query({group:e}),t):n._group},total:function(){return this._total||0},aggregate:function(e){var n=this;return e!==t?(n._query({aggregate:e}),t):n._aggregate},aggregates:function(){return this._aggregateResult},totalPages:function(){var e=this,t=e.pageSize()||e.total();return Tt.ceil((e.total()||0)/t)},inRange:function(e,t){var n=this,r=Tt.min(e+t,n.total());return!n.options.serverPaging&&n.data.length>0?!0:n._findRange(e,r).length>0},lastRange:function(){var e=this._ranges;return e[e.length-1]||{start:0,end:0,data:[]}},firstItemUid:function(){var e=this._ranges;return e.length&&e[0].data.length&&e[0].data[0].uid},range:function(e,n){var r,i,o,a,s,l,c;if(e=Tt.min(e||0,this.total()),i=this,o=Tt.max(Tt.floor(e/n),0)*n,a=Tt.min(o+n,i.total()),r=i._findRange(e,Tt.min(e+n,i.total())),r.length){i._skip=e>i.skip()?Tt.min(a,(i.totalPages()-1)*i.take()):o,i._take=n,s=i.options.serverPaging,l=i.options.serverSorting,c=i.options.serverFiltering;try{i.options.serverPaging=!0,i.options.serverSorting=!0,i.options.serverFiltering=!0,s&&(i._data=r=i._observe(r)),i._process(r)}finally{i.options.serverPaging=s,i.options.serverSorting=l,i.options.serverFiltering=c}}else n!==t&&(i._rangeExists(o,a)?e>o&&i.prefetch(a,n,function(){i.range(e,n)}):i.prefetch(o,n,function(){e>o&&a<i.total()&&!i._rangeExists(a,Tt.min(a+n,i.total()))?i.prefetch(a,n,function(){i.range(e,n)}):i.range(e,n)}))},_findRange:function(e,n){var r,i,s,l,c,u,h,f,p,g,m,v,x=this,y=x._ranges,w=[],b=x.options,_=b.serverSorting||b.serverPaging||b.serverFiltering||b.serverGrouping||b.serverAggregates;for(i=0,m=y.length;m>i;i++)if(r=y[i],e>=r.start&&e<=r.end){for(g=0,s=i;m>s;s++)if(r=y[s],p=x._flatData(r.data),p.length&&e+g>=r.start&&(u=r.data,h=r.end,_||(v=d(x.group()||[]).concat(a(x.sort()||[])),f=o.process(r.data,{sort:v,filter:x.filter()}),p=u=f.data,f.total!==t&&(h=f.total)),l=0,e+g>r.start&&(l=e+g-r.start),c=p.length,h>n&&(c-=h-n),g+=c-l,w=x._mergeGroups(w,u,l,c),n<=r.end&&g==n-e))return w;break}return[]},_mergeGroups:function(e,t,n,r){if(this._isServerGrouped()){var i,o=t.toJSON();return e.length&&(i=e[e.length-1]),y(i,o,n,r),e.concat(o)}return e.concat(t.slice(n,r))},skip:function(){var e=this;return e._skip===t?e._page!==t?(e._page-1)*(e.take()||1):t:e._skip},take:function(){return this._take||this._pageSize},_prefetchSuccessHandler:function(e,t,n){var r=this;return function(i){var o,a,s=!1,l={start:e,end:t,data:[]};for(r._dequeueRequest(),o=0,a=r._ranges.length;a>o;o++)if(r._ranges[o].start===e){s=!0,l=r._ranges[o];break}s||r._ranges.push(l),r.trigger(_t,{response:i,type:"read"}),i=r.reader.parse(i),l.data=r._observe(r._readData(i)),l.end=l.start+r._flatData(l.data).length,r._ranges.sort(function(e,t){return e.start-t.start}),r._total=r.reader.total(i),n&&n()}},prefetch:function(e,t,n){var r=this,i=Tt.min(e+t,r.total()),o={take:t,skip:e,page:e/t+1,pageSize:t,sort:r._sort,filter:r._filter,group:r._group,aggregate:r._aggregate};r._rangeExists(e,i)?n&&n():(clearTimeout(r._timeout),r._timeout=setTimeout(function(){r._queueRequest(o,function(){r.trigger(wt)?r._dequeueRequest():r.transport.read({data:o,success:r._prefetchSuccessHandler(e,i,n)})})},100))},_rangeExists:function(e,t){var n,r,i=this,o=i._ranges;for(n=0,r=o.length;r>n;n++)if(o[n].start<=e&&o[n].end>=t)return!0;return!1}}),q={},q.create=function(e,t){var n,r=e.transport;return r?(r.read=typeof r.read===dt?{url:r.read}:r.read,e.type&&(st.data.transports[e.type]&&!et(st.data.transports[e.type])?n=new st.data.transports[e.type](Z(r,{data:t})):r=Z(!0,{},st.data.transports[e.type],r),e.schema=Z(!0,{},st.data.schemas[e.type],e.schema)),n||(n=K(r.read)?r:new H(r))):n=new j({data:e.data}),n},W.create=function(e){e=e&&e.push?{data:e}:e;var t,n,r,i=e||{},o=i.data,a=i.fields,s=i.table,l=i.select,c={};if(o||!a||i.transport||(s?o=I(s,a):l&&(o=M(l,a))),st.data.Model&&a&&(!i.schema||!i.schema.model)){for(t=0,n=a.length;n>t;t++)r=a[t],r.type&&(c[r.field]=r);tt(c)||(i.schema=Z(!0,i.schema,{model:{fields:c}}))}return i.data=o,i instanceof W?i:new W(i)},Q=Gt.define({init:function(e){var t,n=this,r=n.hasChildren||e&&e.hasChildren,i="items",o={};st.data.Model.fn.init.call(n,e),typeof n.children===dt&&(i=n.children),o={schema:{data:i,model:{hasChildren:r,id:n.idField}}},typeof n.children!==dt&&Z(o,n.children),t=o.transport,t&&(t.parameterMap=function(e){return n.parentParameterMap&&(e=n.parentParameterMap.call(this,e)),e[n.idField||"id"]=n.id,e}),o.data=e,r||(r=o.schema.data),typeof r===dt&&(r=st.getter(r)),K(r)&&(n.hasChildren=!!r.call(n,n)),n._childrenOptions=o,n.hasChildren&&n._initChildren(),n._loaded=!(!e||!e[i]&&!e._loaded)},_initChildren:function(){var e=this;e.children instanceof Y||(e.children=new Y(e._childrenOptions),e.children.parent=function(){return e},e.children.bind(mt,function(t){t.node=t.node||e,e.trigger(mt,t)}),e.children.bind(yt,function(t){var n=e.parent();n&&(t.node=t.node||e,n.trigger(yt,t))}),e._updateChildrenField())},append:function(e){this._initChildren(),this.loaded(!0),this.children.add(e)},hasChildren:!1,level:function(){for(var e=this.parentNode(),t=0;e&&e.parentNode;)t++,e=e.parentNode?e.parentNode():null;return t},_updateChildrenField:function(){var e=this._childrenOptions.schema.data;this[e||"items"]=this.children.data()},load:function(){var e=this,n={};e.hasChildren&&(e._initChildren(),n[e.idField||"id"]=e.id,e._loaded||(e.children._data=t),e.children.one(mt,function(){e._loaded=!0,e._updateChildrenField()})._query(n))},parentNode:function(){var e=this.parent();return e.parent()},loaded:function(e){return e===t?this._loaded:(this._loaded=e,t)},shouldSerialize:function(e){return Gt.fn.shouldSerialize.call(this,e)&&"children"!==e&&"_loaded"!==e&&"hasChildren"!==e&&"_childrenOptions"!==e}}),Y=W.extend({init:function(e){var t=Q.define({children:e});W.fn.init.call(this,Z(!0,{},{schema:{modelBase:t,model:t}},e)),this.transport&&(t.fn.parentParameterMap=this.transport.parameterMap),this._attachBubbleHandlers()},_attachBubbleHandlers:function(){var e=this;e._data.bind(yt,function(t){e.trigger(yt,t)})},remove:function(e){var t,n=e.parentNode(),r=this;return n&&n._initChildren&&(r=n.children),t=W.fn.remove.call(r,e),n&&!r.data().length&&(n.hasChildren=!1),t},success:L("success"),data:L("data"),insert:function(e,t){var n=this.parent();return n&&n._initChildren&&(n.hasChildren=!0,n._initChildren()),W.fn.insert.call(this,e,t)},_find:function(e,t){var n,r,i,o,a;if(i=W.fn[e].call(this,t))return i;if(o=this._flatData(this.data()))for(n=0,r=o.length;r>n;n++)if(a=o[n].children,a instanceof Y&&(i=a[e](t)))return i},get:function(e){return this._find("get",e)},getByUid:function(e){return this._find("getByUid",e)}}),Y.create=function(e){e=e&&e.push?{data:e}:e;var t=e||{},n=t.data,r=t.fields,i=t.list;return n&&n._dataSource?n._dataSource:(n||!r||t.transport||i&&(n=E(i,r)),t.data=n,t instanceof Y?t:new Y(t))},X=st.Observable.extend({init:function(e,t,n){st.Observable.fn.init.call(this),this._prefetching=!1,this.dataSource=e,this.prefetch=!n;var r=this;e.bind("change",function(){r._change()}),this._syncWithDataSource(),this.setViewSize(t)},setViewSize:function(e){this.viewSize=e,this._recalculate()},at:function(e){var n,r,i=this.pageSize;return e>=this.total()?(this.trigger("endreached",{index:e}),t):((e<this.dataOffset||e>this.skip+i)&&(n=Math.floor(e/i)*i,this.range(n)),e===this.prefetchThreshold&&this._prefetch(),e===this.midPageThreshold?this.range(this.nextMidRange):e===this.nextPageThreshold?this.range(this.nextFullRange):e===this.pullBackThreshold&&(this.offset===this.skip?this.range(this.previousMidRange):this.range(this.previousFullRange)),r=this.dataSource.at(e-this.dataOffset),r===t&&this.trigger("endreached",{index:e}),r)},indexOf:function(e){return this.dataSource.data().indexOf(e)+this.dataOffset},_prefetch:function(){var e=this,t=this.pageSize,n=this.skip+t,r=this.dataSource;r.inRange(n,t)||this._prefetching||!this.prefetch||(this._prefetching=!0,this.trigger("prefetching",{skip:n,take:t}),r.prefetch(n,t,function(){e._prefetching=!1,e.trigger("prefetched",{skip:n,take:t})}))},total:function(){return parseInt(this.dataSource.total(),10)},next:function(){var e=this,t=e.pageSize,n=e.skip-e.viewSize,r=Tt.max(Tt.floor(n/t),0)*t+t;this.offset=n,this.dataSource.prefetch(r,t,function(){e._goToRange(n,!0)})},range:function(e){if(this.offset!==e){var t=this,n=this.pageSize,r=Tt.max(Tt.floor(e/n),0)*n+n,i=this.dataSource;this.offset=e,this._recalculate(),i.inRange(e,n)?this._goToRange(e):this.prefetch&&i.prefetch(r,n,function(){t._goToRange(e,!0)})}},syncDataSource:function(){var e=this.offset;this.offset=null,this.range(e)},_goToRange:function(e,t){this.offset===e&&(this.dataOffset=e,this._expanding=t,this.dataSource.range(e,this.pageSize))},_change:function(){var e=this.dataSource,t=e.firstItemUid();this.length=e.lastRange().end,this._firstItemUid!==t&&(this._syncWithDataSource(),this._recalculate(),this.trigger("reset",{offset:this.offset})),this.trigger("resize"),this._expanding&&this.trigger("expand"),delete this._expanding},_syncWithDataSource:function(){var e=this.dataSource;this._firstItemUid=e.firstItemUid(),this.dataOffset=this.offset=e.skip(),this.pageSize=e.pageSize()},_recalculate:function(){var e=this.pageSize,t=this.offset,n=this.viewSize,r=Math.ceil(t/e)*e;this.skip=r,this.midPageThreshold=r+e-1,this.nextPageThreshold=r+n-1,this.prefetchThreshold=r+Math.floor(2*(e/3)),this.pullBackThreshold=this.offset-1,this.nextMidRange=r+e-n,this.nextFullRange=r,this.previousMidRange=t-n,this.previousFullRange=r-e}}),$=st.Observable.extend({init:function(e,t){var n=this;st.Observable.fn.init.call(n),this.dataSource=e,this.batchSize=t,this._total=0,this.buffer=new X(e,3*t),this.buffer.bind({endreached:function(e){n.trigger("endreached",{index:e.index})},prefetching:function(e){n.trigger("prefetching",{skip:e.skip,take:e.take})},prefetched:function(e){n.trigger("prefetched",{skip:e.skip,take:e.take})},reset:function(){n._total=0,n.trigger("reset")},resize:function(){n._total=this.length/n.batchSize,n.trigger("resize",{total:n.total(),offset:this.offset})}})},syncDataSource:function(){this.buffer.syncDataSource()},at:function(e){var n,r,i=this.buffer,o=e*this.batchSize,a=this.batchSize,s=[];for(i.offset>o&&i.at(i.offset-1),r=0;a>r;r++){if(n=i.at(o+r),n===t)return;s.push(n)}return s},total:function(){return this._total}}),Z(!0,st.data,{readers:{json:G},Query:o,DataSource:W,HierarchicalDataSource:Y,Node:Q,ObservableObject:jt,ObservableArray:Ut,LocalTransport:j,RemoteTransport:H,Cache:N,DataReader:G,Model:Gt,Buffer:X,BatchBuffer:$})}(window.kendo.jQuery),function(e,t){function n(e){var t,r,i=[];for(t=0,r=e.length;r>t;t++)i=e[t].hasSubgroups?i.concat(n(e[t].items)):i.concat(e[t].items);return i}function r(e,n,r){var i=r[e];return i?new y(_.initWidget(n,i.options,r)):t}function i(e){var t,n,r,o,a,s,l,c={};for(l=e.match(w),t=0,n=l.length;n>t;t++)r=l[t],o=r.indexOf(":"),a=r.substring(0,o),s=r.substring(o+1),"{"==s.charAt(0)&&(s=i(s)),c[a]=s;return c}function o(e,t,n){var r,i={};for(r in e)i[r]=new n(t,e[r]);return i}function a(e,t,n,s){var c,d,u,h=e.getAttribute("data-"+_.ns+"role"),f=e.getAttribute("data-"+_.ns+"bind"),v=e.children,y=[],w=!0,C={};if(s=s||[t],(h||f)&&l(e),h&&(u=r(h,e,n)),f&&(f=i(f.replace(b,"")),u||(C=_.parseOptions(e,{textField:"",valueField:"",template:"",valueUpdate:E,valuePrimitive:!1}),C.roles=n,u=new x(e,C)),u.source=t,d=o(f,s,p),C.template&&(d.template=new m(s,"",C.template)),d.click&&(f.events=f.events||{},f.events.click=f.click,delete d.click),d.source&&(w=!1),f.attr&&(d.attr=o(f.attr,s,p)),f.style&&(d.style=o(f.style,s,p)),f.events&&(d.events=o(f.events,s,g)),u.bind(d)),u&&(e.kendoBindingTarget=u),w&&v){for(c=0;c<v.length;c++)y[c]=v[c];for(c=0;c<y.length;c++)a(y[c],t,n,s)}}function s(t,n){var r,i,o,s=_.rolesFromNamespaces([].slice.call(arguments,2));for(n=_.observable(n),t=e(t),r=0,i=t.length;i>r;r++)o=t[r],1===o.nodeType&&a(o,n,s)}function l(t){var n=t.kendoBindingTarget;n&&(n.destroy(),e.support.deleteExpando?delete t.kendoBindingTarget:t.removeAttribute?t.removeAttribute("kendoBindingTarget"):t.kendoBindingTarget=null)}function c(e){l(e),d(e)}function d(e){var t,n,r=e.children;if(r)for(t=0,n=r.length;n>t;t++)c(r[t])}function u(t){var n,r;for(t=e(t),n=0,r=t.length;r>n;n++)c(t[n])}function h(e,t){var n=e.element,r=n[0].kendoBindingTarget;r&&s(n,r.source,t)}var f,p,g,m,v,x,y,w,b,_=window.kendo,C=_.Observable,k=_.data.ObservableObject,A=_.data.ObservableArray,S={}.toString,T={},P=_.Class,D=e.proxy,B="value",M="source",I="events",L="checked",E="change";!function(){var e=document.createElement("a");e.innerText!==t?f="innerText":e.textContent!==t&&(f="textContent")}(),p=C.extend({init:function(e,t){var n=this;C.fn.init.call(n),n.source=e[0],n.parents=e,n.path=t,n.dependencies={},n.dependencies[t]=!0,n.observable=n.source instanceof C,n._access=function(e){n.dependencies[e.field]=!0},n.observable&&(n._change=function(e){n.change(e)},n.source.bind(E,n._change))},_parents:function(){var t,n=this.parents,r=this.get();return r&&"function"==typeof r.parent&&(t=r.parent(),e.inArray(t,n)<0&&(n=[t].concat(n))),n},change:function(e){var t,n,r=e.field,i=this;if("this"===i.path)i.trigger(E,e);else for(t in i.dependencies)if(0===t.indexOf(r)&&(n=t.charAt(r.length),!n||"."===n||"["===n)){i.trigger(E,e);break}},start:function(e){e.bind("get",this._access)},stop:function(e){e.unbind("get",this._access)},get:function(){var e=this,n=e.source,r=0,i=e.path,o=n;if(!e.observable)return o;for(e.start(e.source),o=n.get(i);o===t&&n;)n=e.parents[++r],n instanceof k&&(o=n.get(i));if(o===t)for(n=e.source;o===t&&n;)n=n.parent(),n instanceof k&&(o=n.get(i));return"function"==typeof o&&(r=i.lastIndexOf("."),r>0&&(n=n.get(i.substring(0,r))),e.start(n),o=o.call(n,e.source),e.stop(n)),n&&n!==e.source&&(e.currentSource=n,n.unbind(E,e._change).bind(E,e._change)),e.stop(e.source),o},set:function(e){var t=this,n=t.currentSource||t.source;n.set(t.path,e)},destroy:function(){this.observable&&this.source.unbind(E,this._change)}}),g=p.extend({get:function(){var e,t=this.source,n=this.path,r=0;for(e=t.get(n);!e&&t;)t=this.parents[++r],t instanceof k&&(e=t.get(n));return D(e,t)}}),m=p.extend({init:function(e,t,n){var r=this;p.fn.init.call(r,e,t),r.template=n},render:function(e){var t;return this.start(this.source),t=_.render(this.template,e),this.stop(this.source),t}}),v=P.extend({init:function(e,t,n){this.element=e,this.bindings=t,this.options=n},bind:function(e,t){var n=this;e=t?e[t]:e,e.bind(E,function(e){n.refresh(t||e)}),n.refresh(t)},destroy:function(){}}),T.attr=v.extend({refresh:function(e){this.element.setAttribute(e,this.bindings.attr[e].get())}}),T.style=v.extend({refresh:function(e){this.element.style[e]=this.bindings.style[e].get()||""}}),T.enabled=v.extend({refresh:function(){this.bindings.enabled.get()?this.element.removeAttribute("disabled"):this.element.setAttribute("disabled","disabled")}}),T.readonly=v.extend({refresh:function(){this.bindings.readonly.get()?this.element.setAttribute("readonly","readonly"):this.element.removeAttribute("readonly")}}),T.disabled=v.extend({refresh:function(){this.bindings.disabled.get()?this.element.setAttribute("disabled","disabled"):this.element.removeAttribute("disabled")}}),T.events=v.extend({init:function(e,t,n){v.fn.init.call(this,e,t,n),this.handlers={}},refresh:function(t){var n=e(this.element),r=this.bindings.events[t],i=this.handlers[t];i&&n.off(t,i),i=this.handlers[t]=r.get(),n.on(t,r.source,i)},destroy:function(){var t,n=e(this.element);for(t in this.handlers)n.off(t,this.handlers[t])}}),T.text=v.extend({refresh:function(){var e=this.bindings.text.get();null==e&&(e=""),this.element[f]=e}}),T.visible=v.extend({refresh:function(){this.element.style.display=this.bindings.visible.get()?"":"none"}}),T.invisible=v.extend({refresh:function(){this.element.style.display=this.bindings.invisible.get()?"none":""}}),T.html=v.extend({refresh:function(){this.element.innerHTML=this.bindings.html.get()}}),T.value=v.extend({init:function(t,n,r){v.fn.init.call(this,t,n,r),this._change=D(this.change,this),this.eventName=r.valueUpdate||E,e(this.element).on(this.eventName,this._change),this._initChange=!1},change:function(){this._initChange=this.eventName!=E,this.bindings[B].set(this.element.value),this._initChange=!1},refresh:function(){if(!this._initChange){var e=this.bindings[B].get();null==e&&(e=""),this.element.value=e}this._initChange=!1},destroy:function(){e(this.element).off(this.eventName,this._change)}}),T.source=v.extend({init:function(e,t,n){v.fn.init.call(this,e,t,n)},refresh:function(e){var t=this,n=t.bindings.source.get();n instanceof A?(e=e||{},"add"==e.action?t.add(e.index,e.items):"remove"==e.action?t.remove(e.index,e.items):"itemchange"!=e.action&&t.render()):t.render()},container:function(){var e=this.element;return"table"==e.nodeName.toLowerCase()&&(e.tBodies[0]||e.appendChild(document.createElement("tbody")),e=e.tBodies[0]),e},template:function(){var e=this.options,t=e.template,n=this.container().nodeName.toLowerCase();return t||(t="select"==n?e.valueField||e.textField?_.format('<option value="#:{0}#">#:{1}#</option>',e.valueField||e.textField,e.textField||e.valueField):"<option>#:data#</option>":"tbody"==n?"<tr><td>#:data#</td></tr>":"ul"==n||"ol"==n?"<li>#:data#</li>":"#:data#",t=_.template(t)),t},destroy:function(){var e=this.bindings.source.get();e.unbind(E,this._change)},add:function(t,n){var r,i,o,s,l=this.container(),c=l.cloneNode(!1),d=l.children[t];if(e(c).html(_.render(this.template(),n)),c.children.length)for(r=this.bindings.source._parents(),i=0,o=n.length;o>i;i++)s=c.children[0],l.insertBefore(s,d||null),a(s,n[i],this.options.roles,[n[i]].concat(r))},remove:function(e,t){var n,r,i=this.container();for(n=0;n<t.length;n++)r=i.children[e],c(r),i.removeChild(r)},render:function(){var t,n,r,i,o=this.bindings.source.get(),s=this.container(),l=this.template();if(o instanceof A||"[object Array]"===S.call(o)||(o.parent&&(i=o.parent),o=new A([o]),o.parent&&(o.parent=i)),this.bindings.template){if(d(s),e(s).html(this.bindings.template.render(o)),s.children.length)for(t=this.bindings.source._parents(),n=0,r=o.length;r>n;n++)a(s.children[n],o[n],this.options.roles,[o[n]].concat(t))}else e(s).html(_.render(l,o))}}),T.input={checked:v.extend({init:function(t,n,r){v.fn.init.call(this,t,n,r),this._change=D(this.change,this),e(this.element).change(this._change)},change:function(){var e,t,n=this.element,r=this.value();"radio"==n.type?this.bindings[L].set(r):"checkbox"==n.type&&(e=this.bindings[L].get(),e instanceof A?(r=this.element.value,"on"!==r&&"off"!==r&&(t=e.indexOf(r),t>-1?e.splice(t,1):e.push(r))):this.bindings[L].set(r))},refresh:function(){var e=this.bindings[L].get(),t=e,n=this.element;"checkbox"==n.type?(t instanceof A&&(e=this.element.value,t.indexOf(e)>=0&&(e=!0)),n.checked=e===!0):"radio"==n.type&&null!=e&&n.value===""+e&&(n.checked=!0)},value:function(){var e=this.element,t=e.value;return"checkbox"==e.type&&(t=e.checked),t},destroy:function(){e(this.element).off(E,this._change)}})},T.select={value:v.extend({init:function(t,n,r){v.fn.init.call(this,t,n,r),this._change=D(this.change,this),e(this.element).change(this._change)},change:function(){var e,t,n,r,i,o,a=[],s=this.element,l=this.options.valueField||this.options.textField,c=this.options.valuePrimitive;for(i=0,o=s.options.length;o>i;i++)t=s.options[i],t.selected&&(r=t.attributes.value,r=r&&r.specified?t.value:t.text,a.push(r));if(l)for(e=this.bindings.source.get(),n=0;n<a.length;n++)for(i=0,o=e.length;o>i;i++)if(e[i].get(l)==a[n]){a[n]=e[i];
break}r=this.bindings[B].get(),r instanceof A?r.splice.apply(r,[0,r.length].concat(a)):c||!(r instanceof k)&&l?this.bindings[B].set(a[0].get(l)):this.bindings[B].set(a[0])},refresh:function(){var e,t,n,r=this.element,i=r.options,o=this.bindings[B].get(),a=o,s=this.options.valueField||this.options.textField,l=!1;for(a instanceof A||(a=new A([o])),r.selectedIndex=-1,n=0;n<a.length;n++)for(o=a[n],s&&o instanceof k&&(o=o.get(s)),e=0;e<i.length;e++)t=i[e].value,""===t&&""!==o&&(t=i[e].text),t==o&&(i[e].selected=!0,l=!0)},destroy:function(){e(this.element).off(E,this._change)}})},T.widget={events:v.extend({init:function(e,t,n){v.fn.init.call(this,e.element[0],t,n),this.widget=e,this.handlers={}},refresh:function(e){var t=this.bindings.events[e],n=this.handlers[e];n&&this.widget.unbind(e,n),n=t.get(),this.handlers[e]=function(e){e.data=t.source,n(e),e.data===t.source&&delete e.data},this.widget.bind(e,this.handlers[e])},destroy:function(){var e;for(e in this.handlers)this.widget.unbind(e,this.handlers[e])}}),checked:v.extend({init:function(e,t,n){v.fn.init.call(this,e.element[0],t,n),this.widget=e,this._change=D(this.change,this),this.widget.bind(E,this._change)},change:function(){this.bindings[L].set(this.value())},refresh:function(){this.widget.check(this.bindings[L].get()===!0)},value:function(){var e=this.element,t=e.value;return("on"==t||"off"==t)&&(t=e.checked),t},destroy:function(){this.widget.unbind(E,this._change)}}),visible:v.extend({init:function(e,t,n){v.fn.init.call(this,e.element[0],t,n),this.widget=e},refresh:function(){var e=this.bindings.visible.get();this.widget.wrapper[0].style.display=e?"":"none"}}),invisible:v.extend({init:function(e,t,n){v.fn.init.call(this,e.element[0],t,n),this.widget=e},refresh:function(){var e=this.bindings.invisible.get();this.widget.wrapper[0].style.display=e?"none":""}}),enabled:v.extend({init:function(e,t,n){v.fn.init.call(this,e.element[0],t,n),this.widget=e},refresh:function(){this.widget.enable&&this.widget.enable(this.bindings.enabled.get())}}),disabled:v.extend({init:function(e,t,n){v.fn.init.call(this,e.element[0],t,n),this.widget=e},refresh:function(){this.widget.enable&&this.widget.enable(!this.bindings.disabled.get())}}),source:v.extend({init:function(e,t,n){var r=this;v.fn.init.call(r,e.element[0],t,n),r.widget=e,r._dataBinding=D(r.dataBinding,r),r._dataBound=D(r.dataBound,r),r._itemChange=D(r.itemChange,r)},itemChange:function(e){a(e.item[0],e.data,this._ns(e.ns),[e.data].concat(this.bindings.source._parents()))},dataBinding:function(){var e,t,n=this.widget,r=n.items();for(e=0,t=r.length;t>e;e++)c(r[e])},_ns:function(t){t=t||_.ui;var n=[_.ui,_.dataviz.ui,_.mobile.ui];return n.splice(e.inArray(t,n),1),n.unshift(t),_.rolesFromNamespaces(n)},dataBound:function(e){var t,r,i,o=this.widget,s=o.items(),l=o.dataSource,c=l.view(),d=l.group()||[];if(s.length)for(d.length&&(c=n(c)),i=this.bindings.source._parents(),t=0,r=c.length;r>t;t++)a(s[t],c[t],this._ns(e.ns),[c[t]].concat(i))},refresh:function(e){var t,n=this,r=n.widget;e=e||{},e.action||(n.destroy(),r.bind("dataBinding",n._dataBinding),r.bind("dataBound",n._dataBound),r.bind("itemChange",n._itemChange),t=n.bindings.source.get(),r.dataSource instanceof _.data.DataSource&&r.dataSource!=t&&(t instanceof _.data.DataSource?r.setDataSource(t):t&&t._dataSource?r.setDataSource(t._dataSource):r.dataSource.data(t)))},destroy:function(){var e=this.widget;e.unbind("dataBinding",this._dataBinding),e.unbind("dataBound",this._dataBound),e.unbind("itemChange",this._itemChange)}}),value:v.extend({init:function(t,n,r){v.fn.init.call(this,t.element[0],n,r),this.widget=t,this._change=e.proxy(this.change,this),this.widget.first(E,this._change);var i=this.bindings.value.get();this._valueIsObservableObject=!r.valuePrimitive&&(null==i||i instanceof k),this._valueIsObservableArray=i instanceof A,this._initChange=!1},change:function(){var e,t,n,r,i,o,a,s=this.widget.value(),l=this.options.dataValueField||this.options.dataTextField,c="[object Array]"===S.call(s),d=this._valueIsObservableObject,u=[];if(this._initChange=!0,l)if(this.bindings.source&&(a=this.bindings.source.get()),""===s&&(d||this.options.valuePrimitive))s=null;else{for((!a||a instanceof _.data.DataSource)&&(a=this.widget.dataSource.view()),c&&(t=s.length,u=s.slice(0)),i=0,o=a.length;o>i;i++)if(n=a[i],r=n.get(l),c){for(e=0;t>e;e++)if(r==u[e]){u[e]=n;break}}else if(r==s){s=d?n:r;break}u[0]&&(s=this._valueIsObservableArray?u:d||!l?u[0]:u[0].get(l))}this.bindings.value.set(s),this._initChange=!1},refresh:function(){if(!this._initChange){var e,t=this.options.dataValueField||this.options.dataTextField,n=this.bindings.value.get(),r=0,i=[];if(t)if(n instanceof A){for(e=n.length;e>r;r++)i[r]=n[r].get(t);n=i}else n instanceof k&&(n=n.get(t));this.widget.value(n)}this._initChange=!1},destroy:function(){this.widget.unbind(E,this._change)}}),multiselect:{value:v.extend({init:function(t,n,r){v.fn.init.call(this,t.element[0],n,r),this.widget=t,this._change=e.proxy(this.change,this),this.widget.first(E,this._change),this._initChange=!1},change:function(){var e=this,t=e.bindings[B].get(),n=e.options.valuePrimitive,r=n?e.widget.value():e.widget.dataItems();e._initChange=!0,t instanceof A?t.splice.apply(t,[0,t.length].concat(r)):e.bindings[B].set(r),e._initChange=!1},refresh:function(){if(!this._initChange){var e,t,n=this.options.dataValueField||this.options.dataTextField,r=this.bindings.value.get(),i=0,o=[];if(n)if(r instanceof A){for(e=r.length;e>i;i++)t=r[i],o[i]=t.get?t.get(n):t;r=o}else r instanceof k&&(r=r.get(n));this.widget.value(r)}},destroy:function(){this.widget.unbind(E,this._change)}})}},x=P.extend({init:function(e,t){this.target=e,this.options=t,this.toDestroy=[]},bind:function(e){var t,n,r,i,o=this.target.nodeName.toLowerCase(),a=T[o]||{};for(t in e)t==B?n=!0:t==M?r=!0:t==I?i=!0:this.applyBinding(t,e,a);r&&this.applyBinding(M,e,a),n&&this.applyBinding(B,e,a),i&&this.applyBinding(I,e,a)},applyBinding:function(e,t,n){var r,i=n[e]||T[e],o=this.toDestroy,a=t[e];if(i)if(i=new i(this.target,t,this.options),o.push(i),a instanceof p)i.bind(a),o.push(a);else for(r in a)i.bind(a,r),o.push(a[r]);else if("template"!==e)throw Error("The "+e+" binding is not supported by the "+this.target.nodeName.toLowerCase()+" element")},destroy:function(){var e,t,n=this.toDestroy;for(e=0,t=n.length;t>e;e++)n[e].destroy()}}),y=x.extend({bind:function(e){var t,n=this,r=!1,i=!1,o=T.widget[n.target.options.name.toLowerCase()]||{};for(t in e)t==B?r=!0:t==M?i=!0:n.applyBinding(t,e);i&&n.applyBinding(M,e),r&&n.applyBinding(B,e,o[B])},applyBinding:function(e,t,n){var r,i=n||T.widget[e],o=this.toDestroy,a=t[e];if(!i)throw Error("The "+e+" binding is not supported by the "+this.target.options.name+" widget");if(i=new i(this.target,t,this.target.options),o.push(i),a instanceof p)i.bind(a),o.push(a);else for(r in a)i.bind(a,r),o.push(a[r])}}),w=/[A-Za-z0-9_\-]+:(\{([^}]*)\}|[^,}]+)/g,b=/\s/g,_.unbind=u,_.bind=s,_.data.binders=T,_.data.Binder=v,_.notify=h,_.observable=function(e){return e instanceof k||(e=new k(e)),e},_.observableHierarchy=function(e){function t(e){var n,r;for(n=0;n<e.length;n++)e[n]._initChildren(),r=e[n].children,r.fetch(),e[n].items=r.data(),t(e[n].items)}var n=_.data.HierarchicalDataSource.create(e);return n.fetch(),t(n.data()),n._data._dataSource=n,n._data}}(window.kendo.jQuery),function(e){function t(e,t){var n=e.x.location,r=e.y.location,i=t.x.location,o=t.y.location,a=n-i,s=r-o;return{center:{x:(n+i)/2,y:(r+o)/2},distance:Math.sqrt(a*a+s*s)}}function n(e){var t,n,r,i=[],o=e.originalEvent,s=e.currentTarget,l=0;if(e.api)i.push({id:2,event:e,target:e.target,currentTarget:e.target,location:e});else if(e.type.match(/touch/))for(n=o?o.changedTouches:[],t=n.length;t>l;l++)r=n[l],i.push({location:r,event:e,target:r.target,currentTarget:s,id:r.identifier});else a.pointers?i.push({location:o,event:e,target:e.target,currentTarget:s,id:o.pointerId}):i.push({id:1,event:e,target:e.target,currentTarget:s,location:e});return i}function r(t){var n,r,i;t.preventDefault(),n=e(t.data.root),r=n.closest(".k-widget").parent(),r[0]||(r=n.parent()),i=e.extend(!0,{},t,{target:n[0]}),r.trigger(e.Event(t.type,i))}function i(e){for(var t=o.eventMap.up.split(" "),n=0,r=t.length;r>n;n++)e(t[n])}var o=window.kendo,a=o.support,s=window.document,l=o.Class,c=o.Observable,d=e.now,u=e.extend,h=a.mobileOS,f=h&&h.android,p=a.browser.ie?5:0,g="press",m="select",v="start",x="move",y="end",w="cancel",b="tap",_="release",C="gesturestart",k="gesturechange",A="gestureend",S="gesturetap",T=l.extend({init:function(e,t){var n=this;n.axis=e,n._updateLocationData(t),n.startLocation=n.location,n.velocity=n.delta=0,n.timeStamp=d()},move:function(e){var t=this,n=e["page"+t.axis],r=d(),i=r-t.timeStamp||1;(n||!f)&&(t.delta=n-t.location,t._updateLocationData(e),t.initialDelta=n-t.startLocation,t.velocity=t.delta/i,t.timeStamp=r)},_updateLocationData:function(e){var t=this,n=t.axis;t.location=e["page"+n],t.client=e["client"+n],t.screen=e["screen"+n]}}),P=l.extend({init:function(e,t,n){var r=this;u(r,{x:new T("X",n.location),y:new T("Y",n.location),userEvents:e,target:t,currentTarget:n.currentTarget,initialTouch:n.target,id:n.id,_moved:!1,_finished:!1}),r.notifyInit=function(){r._trigger(g,n)}},move:function(e){var t=this;if(!t._finished){if(t.x.move(e.location),t.y.move(e.location),!t._moved){if(t._withinIgnoreThreshold())return;if(D.current&&D.current!==t.userEvents)return t.dispose();t._start(e)}t._finished||t._trigger(x,e)}},end:function(e){var t=this;t.endTime=d(),t._finished||(t._moved?t._trigger(y,e):t._trigger(b,e),t._trigger(_,e),t.dispose())},dispose:function(){var t=this,n=t.userEvents,r=n.touches;t._finished=!0,r.splice(e.inArray(t,r),1)},skip:function(){this.dispose()},cancel:function(){this.dispose()},isMoved:function(){return this._moved},_start:function(e){this.startTime=d(),this._moved=!0,this._trigger(v,e)},_trigger:function(e,t){var n=this,r=t.event,i={touch:n,x:n.x,y:n.y,target:n.target,event:r};n.userEvents.notify(e,i)&&r.preventDefault()},_withinIgnoreThreshold:function(){var e=this.x.initialDelta,t=this.y.initialDelta;return Math.sqrt(e*e+t*t)<=this.userEvents.threshold}}),D=c.extend({init:function(t,n){var r,l,d,h=this,f=o.guid();n=n||{},r=h.filter=n.filter,h.threshold=n.threshold||p,h.touches=[],h._maxTouches=n.multiTouch?2:1,h.allowSelection=n.allowSelection,h.captureUpIfMoved=n.captureUpIfMoved,h.eventNS=f,t=e(t).handler(h),c.fn.init.call(h),u(h,{element:t,surface:n.global?e(s.documentElement):e(n.surface||t),stopPropagation:n.stopPropagation,pressed:!1}),h.surface.handler(h).on(o.applyEventMap("move",f),"_move").on(o.applyEventMap("up cancel",f),"_end"),t.on(o.applyEventMap("down",f),r,"_start"),a.pointers&&t.css("-ms-touch-action","pinch-zoom double-tap-zoom"),n.preventDragEvent&&t.on(o.applyEventMap("dragstart",f),o.preventDefault),t.on(o.applyEventMap("mousedown selectstart",f),r,{root:t},"_select"),h.captureUpIfMoved&&a.eventCapture&&(l=h.surface[0],d=e.proxy(h.preventIfMoving,h),i(function(e){l.addEventListener(e,d,!0)})),h.bind([g,b,v,x,y,_,w,C,k,A,S,m],n)},preventIfMoving:function(e){this._isMoved()&&e.preventDefault()},destroy:function(){var e,t=this;t._destroyed||(t._destroyed=!0,t.captureUpIfMoved&&a.eventCapture&&(e=t.surface[0],i(function(n){e.removeEventListener(n,t.preventIfMoving)})),t.element.kendoDestroy(t.eventNS),t.surface.kendoDestroy(t.eventNS),t.element.removeData("handler"),t.surface.removeData("handler"),t._disposeAll(),t.unbind(),delete t.surface,delete t.element)},capture:function(){D.current=this},cancel:function(){this._disposeAll(),this.trigger(w)},notify:function(e,n){var r=this,i=r.touches;if(this._isMultiTouch()){switch(e){case x:e=k;break;case y:e=A;break;case b:e=S}u(n,{touches:i},t(i[0],i[1]))}return this.trigger(e,n)},press:function(e,t,n){this._apiCall("_start",e,t,n)},move:function(e,t){this._apiCall("_move",e,t)},end:function(e,t){this._apiCall("_end",e,t)},_isMultiTouch:function(){return this.touches.length>1},_maxTouchesReached:function(){return this.touches.length>=this._maxTouches},_disposeAll:function(){e.each(this.touches,function(){this.dispose()})},_isMoved:function(){return e.grep(this.touches,function(e){return e.isMoved()}).length},_select:function(e){(!this.allowSelection||this.trigger(m,{event:e}))&&r(e)},_start:function(t){var r,i,o=this,a=0,s=o.filter,l=n(t),c=l.length;if(!o._maxTouchesReached())for(D.current=null,o.currentTarget=t.currentTarget,o.stopPropagation&&t.stopPropagation();c>a&&!o._maxTouchesReached();a++)i=l[a],r=s?e(i.currentTarget):o.element,r.length&&(i=new P(o,r,i),o.touches.push(i),i.notifyInit(),o._isMultiTouch()&&o.notify("gesturestart",{}))},_move:function(e){this._eachTouch("move",e)},_end:function(e){this._eachTouch("end",e)},_eachTouch:function(e,t){var r,i,o,a,s=this,l={},c=n(t),d=s.touches;for(r=0;r<d.length;r++)i=d[r],l[i.id]=i;for(r=0;r<c.length;r++)o=c[r],a=l[o.id],a&&a[e](o)},_apiCall:function(t,n,r,i){this[t]({api:!0,pageX:n,pageY:r,target:i||this.element,stopPropagation:e.noop,preventDefault:e.noop})}});o.getTouches=n,o.touchDelta=t,o.UserEvents=D}(window.kendo.jQuery),function(e,t){function n(e,t){var n={top:0,right:0,bottom:0,left:0};return t=t||0,"number"==typeof e?n[Kt]=n[Zt]=n[kt]=n[Ht]=e:(n[Kt]=e[Kt]||t,n[Zt]=e[Zt]||t,n[kt]=e[kt]||t,n[Ht]=e[Ht]||t),n}function r(e,t){return ut.extend({init:function(e){this.view=e},decorate:function(n){var r,i=this,o=i.view,a=n.options.animation;return a&&a.type===e&&o.options.transitions&&(r=n._animation=new t(n,a),o.animations.push(r)),n}})}function i(t,n,r){var o,s,c,d,u,h,f,p,g,m,v,x=a(n),y=t+x+r,w=i.cache.get(y),b={width:0,height:0,baseline:0};if(w)return w;o=i.measureBox,s=i.baselineMarker.cloneNode(!1),o&&o.parentNode||(o=i.measureBox=e("<div style='position: absolute; top: -4000px; left: -4000px;line-height: normal; visibility: hidden;' />").appendTo(lt.body)[0]);for(c in n)o.style[c]=n[c];return o.innerHTML=t,o.appendChild(s),(t+"").length&&(b={width:o.offsetWidth-_t,height:o.offsetHeight,baseline:s.offsetTop+_t}),r&&(d=b.width,u=b.height,h=d/2,f=u/2,p=l(0,0,h,f,r),g=l(d,0,h,f,r),m=l(d,u,h,f,r),v=l(0,u,h,f,r),b.normalWidth=d,b.normalHeight=u,b.width=mt.max(p.x,g.x,m.x,v.x)-mt.min(p.x,g.x,m.x,v.x),b.height=mt.max(p.y,g.y,m.y,v.y)-mt.min(p.y,g.y,m.y,v.y)),i.cache.put(y,b),b}function o(e,t){var n,r,i,o=t-e;if(0===o){if(0===t)return.1;o=mt.abs(t)}return n=mt.pow(10,mt.floor(mt.log(o)/mt.log(10))),r=v(o/n,Mt),i=1,i=1.904762>r?.2:4.761904>r?.5:9.523809>r?1:2,v(n*i,Mt)}function a(e){var t,n=[];for(t in e)n.push(t+e[t]);return n.sort().join(" ")}function s(){return rt.current.alloc()}function l(e,t,n,r,i){var o=i*Lt;return new cn(n+(e-n)*mt.cos(o)+(t-r)*mt.sin(o),r-(e-n)*mt.sin(o)+(t-r)*mt.cos(o))}function c(t,n){if(t.x1==n.x1&&t.y1==n.y1&&t.x2==n.x2&&t.y2==n.y2)return n;var r=mt.min(t.x1,n.x1),i=mt.max(t.x1,n.x1),o=mt.min(t.x2,n.x2),a=mt.max(t.x2,n.x2),s=mt.min(t.y1,n.y1),l=mt.max(t.y1,n.y1),c=mt.min(t.y2,n.y2),d=mt.max(t.y2,n.y2),u=[];return u[0]=B(i,s,o,l),u[1]=B(r,l,i,c),u[2]=B(o,l,a,c),u[3]=B(i,c,o,d),t.x1==r&&t.y1==s||n.x1==r&&n.y1==s?(u[4]=B(r,s,i,l),u[5]=B(o,c,a,d)):(u[4]=B(o,s,a,l),u[5]=B(r,c,i,d)),e.grep(u,function(e){return e.height()>0&&e.width()>0})[0]}function d(){return lt.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure","1.1")}function u(){return!!lt.createElement("canvas").getContext}function h(e,t){return-1!=gt(e,t)}function f(e){return e[e.length-1]}function p(e,t){[].push.apply(e,t)}function g(e,t){return v(mt.ceil(e/t)*t,Mt)}function m(e,t){return v(mt.floor(e/t)*t,Mt)}function v(e,t){var n=mt.pow(10,t||0);return mt.round(e*n)/n}function x(e,t,n){var r=v(mt.abs(e%t),Mt),i=t*(1-n);return 0===r||r>i}function y(e,t,n){return v(e+(t-e)*n,St)}function w(e){return typeof e!==tn}function b(e,t){return w(e)?e:t}function _(e,t){return e-t}function C(e,t,n){var r,i=e.length;for(r=0;i>r;r++)e[r][t]=n}function k(e,t){return e.match(Ot)?ct.format.apply(this,arguments):ct.toString(t,e)}function A(e){return lt.getElementById(e)}function S(e){for(var t=e.parentNode;t&&t.parentNode;)t=t.parentNode;return t!==lt}function T(e,t){return-e.x*t.y+e.y*t.x<0}function P(e){if(!e||!e.indexOf||e.indexOf("&")<0)return e;var t=P._element;return t.innerHTML=e,t.textContent||t.innerText}function D(e,t){return e&&t?e.getTime()-t.getTime():0}var B,M,I,L,E,O,V,R,z,F,U,j,H,N,G,W,q,Q,Y,X,$,Z,J,K,et,tt,nt,rt,it,ot,at,st,lt=document,ct=window.kendo,dt=ct.dataviz={},ut=ct.Class,ht=ct.template,ft=e.map,pt=e.noop,gt=e.inArray,mt=Math,vt=ct.deepExtend,xt=function(e){return ht(e,{useWithBlock:!1,paramName:"d"})},yt="k-",wt=10,bt="axisLabelClick",_t=1,Ct="#000",kt="bottom",At="center",St=3,Tt="clip",Pt="circle",Dt="12px sans-serif",Bt=400,Mt=6,It=600,Lt=mt.PI/180,Et="fadeIn",Ot=/\{\d+:?/,Vt="height",Rt="k",zt=1e3,Ft=1e4,Ut=600,jt="inside",Ht="left",Nt="linear",Gt=Number.MAX_VALUE,Wt=-Number.MAX_VALUE,qt="none",Qt="noteClick",Yt="noteHover",Xt="outside",$t="radial",Zt="right",Jt="swing",Kt="top",en="triangle",tn="undefined",nn=/([A-Z])/g,rn="width",on="#fff",an="x",sn="y",ln=.2,cn=function(e,n){var r=this;return r instanceof cn?(r.x=v(e||0,St),r.y=v(n||0,St),t):new cn(e,n)};cn.fn=cn.prototype={clone:function(){var e=this;return new cn(e.x,e.y)},equals:function(e){return e&&e.x===this.x&&e.y===this.y},rotate:function(e,t){var n=this,r=t*Lt,i=mt.cos(r),o=mt.sin(r),a=e.x,s=e.y,l=n.x,c=n.y;return n.x=v(a+(l-a)*i+(c-s)*o,St),n.y=v(s+(c-s)*i-(l-a)*o,St),n},distanceTo:function(e){var t=this.x-e.x,n=this.y-e.y;return mt.sqrt(t*t+n*n)}},cn.onCircle=function(e,t,n){return t*=Lt,new cn(e.x-n*mt.cos(t),e.y-n*mt.sin(t))},B=function(e,n,r,i){var o=this;return o instanceof B?(o.x1=e||0,o.x2=r||0,o.y1=n||0,o.y2=i||0,t):new B(e,n,r,i)},B.fn=B.prototype={width:function(){return this.x2-this.x1},height:function(){return this.y2-this.y1},translate:function(e,t){var n=this;return n.x1+=e,n.x2+=e,n.y1+=t,n.y2+=t,n},move:function(e,t){var n=this,r=n.height(),i=n.width();return n.x1=e,n.y1=t,n.x2=n.x1+i,n.y2=n.y1+r,n},wrap:function(e){var t=this;return t.x1=mt.min(t.x1,e.x1),t.y1=mt.min(t.y1,e.y1),t.x2=mt.max(t.x2,e.x2),t.y2=mt.max(t.y2,e.y2),t},wrapPoint:function(e){return this.wrap(new B(e.x,e.y,e.x,e.y)),this},snapTo:function(e,t){var n=this;return t!=an&&t||(n.x1=e.x1,n.x2=e.x2),t!=sn&&t||(n.y1=e.y1,n.y2=e.y2),n},alignTo:function(e,t){var n,r,i=this,o=i.height(),a=i.width(),s=t==Kt||t==kt?sn:an,l=s==sn?o:a;return t===At?(n=e.center(),r=i.center(),i.x1+=n.x-r.x,i.y1+=n.y-r.y):i[s+1]=t===Kt||t===Ht?e[s+1]-l:e[s+2],i.x2=i.x1+a,i.y2=i.y1+o,i},shrink:function(e,t){var n=this;return n.x2-=e,n.y2-=t,n},expand:function(e,t){return this.shrink(-e,-t),this},pad:function(e){var t=this,r=n(e);return t.x1-=r.left,t.x2+=r.right,t.y1-=r.top,t.y2+=r.bottom,t},unpad:function(e){var t=this,r=n(e);return r.left=-r.left,r.top=-r.top,r.right=-r.right,r.bottom=-r.bottom,t.pad(r)},clone:function(){var e=this;return new B(e.x1,e.y1,e.x2,e.y2)},center:function(){var e=this;return new cn(e.x1+e.width()/2,e.y1+e.height()/2)},containsPoint:function(e){var t=this;return e.x>=t.x1&&e.x<=t.x2&&e.y>=t.y1&&e.y<=t.y2},points:function(){var e=this;return[new cn(e.x1,e.y1),new cn(e.x2,e.y1),new cn(e.x2,e.y2),new cn(e.x1,e.y2)]},getHash:function(){var e=this;return[e.x1,e.y1,e.x2,e.y2].join(",")}},M=ut.extend({init:function(e,t,n,r,i){var o=this;o.c=e,o.ir=t,o.r=n,o.startAngle=r,o.angle=i},clone:function(){var e=this;return new M(e.c,e.ir,e.r,e.startAngle,e.angle)},middle:function(){return this.startAngle+this.angle/2},radius:function(e,t){var n=this;return t?n.ir=e:n.r=e,n},point:function(e,t){var n=this,r=e*Lt,i=mt.cos(r),o=mt.sin(r),a=t?n.ir:n.r,s=n.c.x-i*a,l=n.c.y-o*a;return new cn(s,l)},adjacentBox:function(e,t,n){var r=this.clone().expand(e),i=r.middle(),o=r.point(i),a=t/2,s=n/2,l=o.x-a,c=o.y-s,d=mt.sin(i*Lt),u=mt.cos(i*Lt);return mt.abs(d)<.9&&(l+=a*-u/mt.abs(u)),mt.abs(u)<.9&&(c+=s*-d/mt.abs(d)),new B(l,c,l+t,c+n)},containsPoint:function(e){var t=this,n=t.c,r=t.ir,i=t.r,o=t.startAngle,a=t.startAngle+t.angle,s=e.x-n.x,l=e.y-n.y,c=new cn(s,l),d=t.point(o),u=new cn(d.x-n.x,d.y-n.y),h=t.point(a),f=new cn(h.x-n.x,h.y-n.y),p=s*s+l*l;return(u.equals(c)||T(u,c))&&!T(f,c)&&p>=r*r&&i*i>=p},getBBox:function(){var e,t,n,r=this,i=new B(Gt,Gt,Wt,Wt),o=v(r.startAngle%360),a=v((o+r.angle)%360),s=r.ir,l=[0,90,180,270,o,a].sort(_),c=gt(o,l),d=gt(a,l);for(e=o==a?l:d>c?l.slice(c,d+1):[].concat(l.slice(0,d+1),l.slice(c,l.length)),t=0;t<e.length;t++)n=r.point(e[t]),i.wrapPoint(n),i.wrapPoint(n,s);return s||i.wrapPoint(r.c),i},expand:function(e){return this.r+=e,this}}),I=M.extend({init:function(e,t,n,r){M.fn.init.call(this,e,0,t,n,r)},expand:function(e){return M.fn.expand.call(this,e)},clone:function(){var e=this;return new I(e.c,e.r,e.startAngle,e.angle)},radius:function(e){return M.fn.radius.call(this,e)},point:function(e){return M.fn.point.call(this,e)}}),L=ut.extend({init:function(e){vt(this,{height:40,rotation:90,radius:10,arcAngle:10},e)}}),E=ut.extend({init:function(e){var t=this;t.children=[],t.options=vt({},t.options,e)},reflow:function(e){var t,n,r,i=this,o=i.children;for(n=0;n<o.length;n++)r=o[n],r.reflow(e),t=t?t.wrap(r.box):r.box.clone();i.box=t||e},getViewElements:function(e){var t,n,r,i=this,o=i.options,a=o.modelId,s=[],l=i.children,c=l.length;for(n=0;c>n;n++)r=l[n],r.discoverable||(r.options=r.options||{},r.options.modelId=a),s.push.apply(s,r.getViewElements(e));return i.discoverable&&(t=i.getRoot(),t&&(t.modelMap[a]=i)),s},enableDiscovery:function(){var e=this,t=e.options;t.modelId=rt.current.alloc(),e.discoverable=!0},destroy:function(){var e,n=this,r=n.children,i=n.getRoot(),o=n.options.modelId;for(i&&o&&(i.modelMap[o]&&rt.current.free(o),i.modelMap[o]=t),e=0;e<r.length;e++)r[e].destroy()},getRoot:function(){var e=this.parent;return e?e.getRoot():null},translateChildren:function(e,t){var n,r=this,i=r.children,o=i.length;for(n=0;o>n;n++)i[n].box.translate(e,t)},append:function(){var e,t=this,n=arguments.length;for(p(t.children,arguments),e=0;n>e;e++)arguments[e].parent=t}}),O=E.extend({init:function(e){var t=this;t.modelMap={},E.fn.init.call(t,e)},options:{width:It,height:Bt,background:on,border:{color:Ct,width:0},margin:n(5),zIndex:-2},reflow:function(){var e,t=this,n=t.options,r=t.children,i=new B(0,0,n.width,n.height);for(t.box=i.unpad(n.margin),e=0;e<r.length;e++)r[e].reflow(i),i=c(i,r[e].box)},getViewElements:function(e){var t=this,n=t.options,r=n.border||{},i=t.box.clone().pad(n.margin).unpad(r.width),o=[e.createRect(i,{stroke:r.width?r.color:"",strokeWidth:r.width,dashType:r.dashType,fill:n.background,fillOpacity:n.opacity,zIndex:n.zIndex})];return o.concat(E.fn.getViewElements.call(t,e))},getRoot:function(){return this}}),V=E.extend({init:function(e){E.fn.init.call(this,e)},options:{align:Ht,vAlign:Kt,margin:{},padding:{},border:{color:Ct,width:0},background:"",shrinkToFit:!1,width:0,height:0,visible:!0},reflow:function(e){function t(){s.align(e,an,l.align),s.align(e,sn,l.vAlign),s.paddingBox=r.clone().unpad(c).unpad(u)}var r,i,o,a,s=this,l=s.options,c=n(l.margin),d=n(l.padding),u=l.border.width,h=s.children;for(E.fn.reflow.call(s,e),r=l.width&&l.height?s.box=new B(0,0,l.width,l.height):s.box,l.shrinkToFit?(t(),i=s.contentBox=s.paddingBox.clone().unpad(d)):(i=s.contentBox=r.clone(),r.pad(d).pad(u).pad(c),t()),s.translateChildren(r.x1-i.x1+c.left+u+d.left,r.y1-i.y1+c.top+u+d.top),o=0;o<h.length;o++)a=h[o],a.reflow(a.box)},align:function(e,t,n){var r=this,i=r.box,o=t+1,a=t+2,s=t===an?rn:Vt,l=i[s]();h(n,[Ht,Kt])?(i[o]=e[o],i[a]=i[o]+l):h(n,[Zt,kt])?(i[a]=e[a],i[o]=i[a]-l):n==At&&(i[o]=e[o]+(e[s]()-l)/2,i[a]=i[o]+l)},hasBox:function(){var e=this.options;return e.border.width||e.background},getViewElements:function(e,t){var n=this,r=n.options,i=[];return r.visible?(n.hasBox()&&i.push(e.createRect(n.paddingBox,vt(n.elementStyle(),t))),i.concat(E.fn.getViewElements.call(n,e))):[]},elementStyle:function(){var e=this,t=e.options,n=t.border||{};return{id:t.id,stroke:n.width?n.color:"",strokeWidth:n.width,dashType:n.dashType,strokeOpacity:t.opacity,fill:t.background,fillOpacity:t.opacity,animation:t.animation,zIndex:t.zIndex,data:{modelId:t.modelId}}}}),R=E.extend({init:function(e,t){var n=this;E.fn.init.call(n,t),n.content=P(e),n.reflow(B())},options:{font:Dt,color:Ct,align:Ht,vAlign:""},reflow:function(e){var t,n,r=this,o=r.options;t=o.size=i(r.content,{font:o.font},o.rotation),r.baseline=t.baseline,o.align==Ht?r.box=new B(e.x1,e.y1,e.x1+t.width,e.y1+t.height):o.align==Zt?r.box=new B(e.x2-t.width,e.y1,e.x2,e.y1+t.height):o.align==At&&(n=(e.width()-t.width)/2,r.box=new B(v(e.x1+n,St),e.y1,v(e.x2-n,St),e.y1+t.height)),o.vAlign==At?(n=(e.height()-t.height)/2,r.box=new B(r.box.x1,e.y1+n,r.box.x2,e.y2-n)):o.vAlign==kt?r.box=new B(r.box.x1,e.y2-t.height,r.box.x2,e.y2):o.vAlign==Kt&&(r.box=new B(r.box.x1,e.y1,r.box.x2,e.y1+t.height))},getViewElements:function(e){var t=this,n=t.options;return E.fn.getViewElements.call(this,e),[e.createText(t.content,vt({},n,{x:t.box.x1,y:t.box.y1,baseline:t.baseline,data:{modelId:n.modelId}}))]}}),z=V.extend({init:function(e,t){var n,r=this;V.fn.init.call(r,t),t=r.options,n=new R(e,vt({},t,{align:Ht,vAlign:Kt})),r.append(n),r.hasBox()&&(n.options.id=s()),r.reflow(new B)}}),F=E.extend({init:function(e){var t=this;E.fn.init.call(t,e),e=t.options,t.append(new z(e.text,vt({},e,{vAlign:e.position})))},options:{color:Ct,position:Kt,align:At,margin:n(5),padding:n(5)},reflow:function(e){var t=this;E.fn.reflow.call(t,e),t.box.snapTo(e,an)}}),F.buildTitle=function(e,t,n){var r;return"string"==typeof e&&(e={text:e}),e=vt({visible:!0},n,e),e&&e.visible&&e.text&&(r=new F(e),t.append(r)),r},U=z.extend({init:function(e,t,n,r){var i=this,o=e;r.template?(i.template=ht(r.template),o=i.template({value:e,dataItem:n})):r.format&&(o=i.formatValue(e,r)),i.text=o,i.value=e,i.index=t,i.dataItem=n,z.fn.init.call(i,o,vt({id:s()},r)),i.enableDiscovery()},formatValue:function(e,t){return k(t.format,e)},click:function(t,n){var r=this;t.trigger(bt,{element:e(n.target),value:r.value,text:r.text,index:r.index,dataItem:r.dataItem,axis:r.parent.options})}}),j=E.extend({init:function(e){var t=this;E.fn.init.call(t,e),t.options.visible||(t.options=vt({},t.options,{labels:{visible:!1},line:{visible:!1},margin:0,majorTickSize:0,minorTickSize:0})),t.options.minorTicks=vt({},{color:t.options.line.color,width:t.options.line.width,visible:t.options.minorTickType!=qt},t.options.minorTicks,{size:t.options.minorTickSize,align:t.options.minorTickType}),t.options.majorTicks=vt({},{color:t.options.line.color,width:t.options.line.width,visible:t.options.majorTickType!=qt},t.options.majorTicks,{size:t.options.majorTickSize,align:t.options.majorTickType}),t.createLabels(),t.createTitle(),t.createNotes()},options:{labels:{visible:!0,rotation:0,mirror:!1,step:1,skip:0},line:{width:1,color:Ct,visible:!0},title:{visible:!0,position:At},majorTicks:{align:Xt,size:4},minorTicks:{align:Xt,size:3},axisCrossingValue:0,majorTickType:Xt,minorTickType:qt,minorGridLines:{visible:!1,width:1,color:Ct},margin:5,visible:!0,reverse:!1,justified:!0,notes:{},_alignLines:!0},createLabels:function(){var e,t,n,r=this,i=r.options,o=i.vertical?Zt:At,a=vt({},i.labels,{align:o,zIndex:i.zIndex,modelId:i.modelId}),s=a.step;if(r.labels=[],a.visible)for(n=r.labelsCount(),t=a.skip;n>t;t+=s)e=r.createAxisLabel(t,a),r.append(e),r.labels.push(e)},destroy:function(){var e,t=this,n=t.labels;for(e=0;e<n.length;e++)n[e].destroy();E.fn.destroy.call(t)},lineBox:function(){var e=this,t=e.options,n=e.box,r=t.vertical,i=e.labels,o=r?Vt:rn,a=t.justified,s=t.labels.mirror,l=s?n.x1:n.x2,c=s?n.y2:n.y1,d=0,u=t.line.width;return a&&i.length>1&&(d=i[0].box[o]()/2,u=f(i).box[o]()/2),r?B(l,n.y1+d,l,n.y2-u):B(n.x1+d,c,n.x2-u,c)},createTitle:function(){var e,t=this,n=t.options,r=vt({rotation:n.vertical?-90:0,text:"",zIndex:1},n.title);r.visible&&r.text&&(e=new z(r.text,r),t.append(e),t.title=e)},createNotes:function(){var e,t,n,r,i,o=this,a=o.options,s=a.notes,l=s.data||[];for(o.notes=[],t=0;t<l.length;t++)r=vt({},s,l[t]),r.value=o.parseNoteValue(r.value),n=r.label.text||r.value,r.label.template?(e=ht(r.label.template),n=e({value:n})):r.label.format&&(n=k(r.label.format,n)),i=new H(vt({},r,{label:{text:n}})),i.options.visible&&(w(i.options.position)?a.vertical&&!h(i.options.position,[Ht,Zt])?i.options.position=a.reverse?Ht:Zt:a.vertical||h(i.options.position,[Kt,kt])||(i.options.position=a.reverse?kt:Kt):i.options.position=a.vertical?a.reverse?Ht:Zt:a.reverse?kt:Kt,o.append(i),o.notes.push(i))},parseNoteValue:function(e){return e},renderTicks:function(e){function t(t,a,u,h,f){var p,g=f/a,m=t.length;if(h)for(p=0;m>p;p++)0!==p%g&&(n=d?c.x2:c.x2-u.size,r=d?c.y1-u.size:c.y1,i=t[p],o={strokeWidth:u.width,stroke:u.color,align:l._alignLines},l.vertical?s.push(e.createLine(n,i,n+u.size,i,o)):s.push(e.createLine(i,r,i,r+u.size,o)))}var n,r,i,o,a=this,s=[],l=a.options,c=a.lineBox(),d=l.labels.mirror;return t(a.getMajorTickPositions(),l.majorUnit,l.majorTicks,l.majorTicks.visible),t(a.getMinorTickPositions(),l.minorUnit,l.minorTicks,l.minorTicks.visible,l.majorTicks.visible?l.majorUnit:0),s},renderLine:function(e){var t,n=this,r=n.options,i=r.line,o=n.lineBox(),a=[];return i.width>0&&i.visible&&(t={strokeWidth:i.width,stroke:i.color,dashType:i.dashType,zIndex:i.zIndex,align:r._alignLines},a.push(e.createLine(o.x1,o.y1,o.x2,o.y2,t)),p(a,n.renderTicks(e))),a},getViewElements:function(e){var t=this,n=E.fn.getViewElements.call(t,e);return p(n,t.renderLine(e)),p(n,t.renderPlotBands(e)),n},getActualTickSize:function(){var e=this,t=e.options,n=0;return t.majorTicks.visible&&t.minorTicks.visible?n=mt.max(t.majorTicks.size,t.minorTicks.size):t.majorTicks.visible?n=t.majorTicks.size:t.minorTicks.visible&&(n=t.minorTicks.size),n},renderPlotBands:function(e){var t,n,r,i,o=this,a=o.options,s=a.plotBands||[],l=a.vertical,c=[],d=o.plotArea;return s.length&&(c=ft(s,function(a){return r=b(a.from,Wt),i=b(a.to,Gt),l?(t=d.axisX.lineBox(),n=o.getSlot(a.from,a.to)):(t=o.getSlot(a.from,a.to),n=d.axisY.lineBox()),e.createRect(B(t.x1,n.y1,t.x2,n.y2),{fill:a.color,fillOpacity:a.opacity,zIndex:-1})})),c},renderGridLines:function(e,n){var r=this,i=r.plotArea.options.modelId,o=r.options,a=o.vertical,s=n.lineBox(),l=s[a?"x1":"y1"],c=s[a?"x2":"y2"],d=r.getMajorTickPositions(),u=[],f=function(e,t){return{pos:e,options:t}};return o.majorGridLines.visible&&(u=ft(d,function(e){return f(e,o.majorGridLines)})),o.minorGridLines.visible&&(u=u.concat(ft(r.getMinorTickPositions(),function(e){return o.majorGridLines.visible?h(e,d)?t:f(e,o.minorGridLines):f(e,o.minorGridLines)}))),ft(u,function(t){var r={data:{modelId:i},strokeWidth:t.options.width,stroke:t.options.color,dashType:t.options.dashType,zIndex:-1},o=v(t.pos),s=n.lineBox();if(a){if(!n.options.line.visible||s.y1!==o)return e.createLine(l,o,c,o,r)}else if(!n.options.line.visible||s.x1!==o)return e.createLine(o,l,o,c,r)})},reflow:function(e){var t,n,r=this,i=r.options,o=i.vertical,a=r.labels,s=a.length,l=r.getActualTickSize()+i.margin,c=0,d=0,u=r.title;for(n=0;s>n;n++)t=a[n],c=mt.max(c,t.box.height()),d=mt.max(d,t.box.width());u&&(o?d+=u.box.width():c+=u.box.height()),r.box=o?B(e.x1,e.y1,e.x1+d+l,e.y2):B(e.x1,e.y1,e.x2,e.y1+c+l),r.arrangeTitle(),r.arrangeLabels(),r.arrangeNotes()},arrangeLabels:function(){var e,t,n,r,i,o,a,s,l,c,d,u=this,h=u.options,f=h.labels,p=u.labels,g=!h.justified,m=h.vertical,v=u.lineBox(),x=h.labels.mirror,y=u.getMajorTickPositions(),w=u.getActualTickSize()+h.margin;for(n=0;n<p.length;n++)s=p[n],l=f.skip+f.step*n,c=m?s.box.height():s.box.width(),d=y[l]-c/2,m?(g&&(r=y[l],i=y[l+1],o=r+(i-r)/2,d=o-c/2),a=v.x2,x?a+=w:a-=w+s.box.width(),e=s.box.move(a,d)):(g?(r=y[l],i=y[l+1]):(r=d,i=d+c),t=v.y1,x?t-=w+s.box.height():t+=w,e=B(r,t,i,t+s.box.height())),s.reflow(e)},arrangeTitle:function(){var e=this,t=e.options,n=t.labels.mirror,r=t.vertical,i=e.title;i&&(r?(i.options.align=n?Zt:Ht,i.options.vAlign=i.options.position):(i.options.align=i.options.position,i.options.vAlign=n?Kt:kt),i.reflow(e.box))},arrangeNotes:function(){var e,t,n,r,i=this;for(e=0;e<i.notes.length;e++)t=i.notes[e],r=t.options.value,w(r)?(i.shouldRenderNote(r)?t.show():t.hide(),n=i.getSlot(r)):t.hide(),t.reflow(n||i.lineBox())
},alignTo:function(e){var t=this,n=e.lineBox(),r=t.options.vertical,i=r?sn:an;t.box.snapTo(n,i),r?t.box.shrink(0,t.lineBox().height()-n.height()):t.box.shrink(t.lineBox().width()-n.width(),0),t.box[i+1]-=t.lineBox()[i+1]-n[i+1],t.box[i+2]-=t.lineBox()[i+2]-n[i+2]}}),H=V.extend({init:function(e){var t=this;V.fn.init.call(t,e),t.enableDiscovery(),t.render()},options:{icon:{zIndex:1,visible:!0,type:Pt},label:{zIndex:2,position:jt,visible:!0,align:At,vAlign:At},line:{visible:!0,zIndex:2},visible:!0,position:Kt},hide:function(){this.options.visible=!1},show:function(){this.options.visible=!0},render:function(){var e,t,n,r=this,i=r.options,o=i.label,a=i.icon,s=a.size,l={data:{modelId:i.modelId}},c=B();i.visible&&(w(o)&&o.visible&&(r.label=new z(o.text||i.value,vt({},o,l)),r.append(r.label),o.position===jt&&(a.type===Pt?s=mt.max(r.label.box.width(),r.label.box.height()):(t=r.label.box.width(),n=r.label.box.height()),c.wrap(r.label.box))),a.width=t||s,a.height=n||s,e=new N(vt({},a,l)),r.marker=e,r.append(e),e.reflow(B()),r.wrapperBox=c.wrap(e.box))},reflow:function(e){var t,n,r,i=this,o=i.options,a=e.center(),s=i.wrapperBox,l=o.line.length,c=o.position,d=i.label,u=i.marker;o.visible&&(h(c,[Ht,Zt])?c===Ht?(r=s.alignTo(e,c).translate(-l,e.center().y-s.center().y),o.line.visible&&(t=cn(mt.floor(e.x1),a.y),i.linePoints=[t,cn(mt.floor(r.x2),a.y)],n=r.clone().wrapPoint(t))):(r=s.alignTo(e,c).translate(l,e.center().y-s.center().y),o.line.visible&&(t=cn(mt.floor(e.x2),a.y),i.linePoints=[t,cn(mt.floor(r.x1),a.y)],n=r.clone().wrapPoint(t))):c===kt?(r=s.alignTo(e,c).translate(e.center().x-s.center().x,l),o.line.visible&&(t=cn(mt.floor(a.x),mt.floor(e.y2)),i.linePoints=[t,cn(mt.floor(a.x),mt.floor(r.y1))],n=r.clone().wrapPoint(t))):(r=s.alignTo(e,c).translate(e.center().x-s.center().x,-l),o.line.visible&&(t=cn(mt.floor(a.x),mt.floor(e.y1)),i.linePoints=[t,cn(mt.floor(a.x),mt.floor(r.y2))],n=r.clone().wrapPoint(t))),u&&u.reflow(r),d&&(d.reflow(r),u&&(o.label.position===Xt&&d.box.alignTo(u.box,c),d.reflow(d.box))),i.contentBox=r,i.box=n||r)},getViewElements:function(e){var t=this,n=V.fn.getViewElements.call(t,e),r=e.createGroup({data:{modelId:t.options.modelId},zIndex:1});return t.options.visible&&p(n,t.createLine(e)),r.children=n,[r]},createLine:function(e){var t=this,n=t.options.line;return[e.createPolyline(t.linePoints,!1,{stroke:n.color,strokeWidth:n.width,dashType:n.dashType,zIndex:n.zIndex})]},click:function(e,t){var n=this.eventArgs(t);e.trigger(Qt,n)||t.preventDefault()},hover:function(e,t){var n=this.eventArgs(t);e.trigger(Yt,n)||t.preventDefault()},leave:function(e){e._unsetActivePoint()},eventArgs:function(t){var n=this.parent,r=n.options;return{element:e(t.target),text:w(r.label)?r.label.text:""}}}),N=V.extend({options:{type:Pt,align:At,vAlign:At},getViewElements:function(e,t){var n,r,i,o,a=this,s=a.options,l=s.type,c=s.rotation,d=a.paddingBox,u=d.center(),h=d.width()/2;if(E.fn.getViewElements.call(this,e),!s.visible||!a.hasBox())return[];if(r=vt(a.elementStyle(),t),l===Pt?n=e.createCircle(new cn(v(d.x1+h,St),v(d.y1+d.height()/2,St)),h,r):i=l===en?[new cn(d.x1+h,d.y1),new cn(d.x1,d.y2),new cn(d.x2,d.y2)]:d.points(),i){if(c)for(o=0;o<i.length;o++)i[o].rotate(u,c);n=e.createPolyline(i,!0,r)}return[n]}}),G=V.extend({init:function(e){var t=this;V.fn.init.call(t,e),t.createTextBox()},options:{arcAngle:300,border:{width:1,color:"red"},label:{zIndex:2,margin:n(2),border:{width:1,color:"green"}}},createTextBox:function(){var e=this,t=e.options,n=new z(t.code,t.label);e.append(n),e.textBox=n},reflow:function(e){var t=this,n=t.textBox;t.box=B(0,0,n.box.height(),1.5*n.box.height()),V.fn.reflow.call(t,e)},getViewElements:function(e){var t=this,n=t.options,r=t.box.center(),i=e.createPin(new L({origin:new cn(r.x,r.y),radius:t.textBox.box.height()/2,height:1.5*t.textBox.box.height(),rotation:0,arcAngle:n.arcAngle}),vt({},{fill:"red",zIndex:1,kur:1,id:"111"},n)),o=[i];return p(o,V.fn.getViewElements.call(t,e)),o}}),W=j.extend({init:function(e,t,n){var r=this,i=r.initDefaults(e,t,n);j.fn.init.call(r,i)},options:{type:"numeric",min:0,max:1,vertical:!0,majorGridLines:{visible:!0,width:1,color:Ct},zIndex:1},initDefaults:function(e,t,n){var r,i=this,a=n.narrowRange,s=i.autoAxisMin(e,t,a),l=i.autoAxisMax(e,t,a),c=o(s,l),d={majorUnit:c};return n.roundToMajorUnit!==!1&&(0>s&&x(s,c,1/3)&&(s-=c),l>0&&x(l,c,1/3)&&(l+=c)),d.min=m(s,c),d.max=g(l,c),n&&(r=w(n.min)||w(n.max),r&&n.min===n.max&&(n.min>0?n.min=0:n.max=1),n.majorUnit?(d.min=m(d.min,n.majorUnit),d.max=g(d.max,n.majorUnit)):r&&(n=vt(d,n),d.majorUnit=o(n.min,n.max))),d.minorUnit=(n.majorUnit||d.majorUnit)/5,vt(d,n)},range:function(){var e=this.options;return{min:e.min,max:e.max}},autoAxisMax:function(e,t,n){var r,i;if(!e&&!t)return 1;if(0>=e&&0>=t){if(t=e==t?0:t,i=mt.abs((t-e)/t),!n&&i>ln)return 0;r=mt.min(0,t-(e-t)/2)}else e=e==t?0:e,r=t;return r},autoAxisMin:function(e,t,n){var r,i;if(!e&&!t)return 0;if(e>=0&&t>=0){if(e=e==t?0:e,i=(t-e)/t,!n&&i>ln)return 0;r=mt.max(0,e-(t-e)/2)}else t=e==t?0:t,r=e;return r},getDivisions:function(e){var t=this.options,n=t.max-t.min;return mt.floor(v(n/e,St))+1},getTickPositions:function(e,t){var n,r=this,i=r.options,o=i.vertical,a=i.reverse,s=r.lineBox(),l=o?s.height():s.width(),c=i.max-i.min,d=l/c,u=e*d,h=0,f=r.getDivisions(e),p=(o?-1:1)*(a?-1:1),g=1===p?1:2,m=s[(o?sn:an)+g],x=[];for(t&&(h=t/e),n=0;f>n;n++)0!==n%h&&x.push(v(m,St)),m+=u*p;return x},getMajorTickPositions:function(){var e=this;return e.getTickPositions(e.options.majorUnit)},getMinorTickPositions:function(){var e=this;return e.getTickPositions(e.options.minorUnit)},getSlot:function(e,t){var n,r,i=this,o=i.options,a=o.reverse,s=o.vertical,l=s?sn:an,c=i.lineBox(),d=c[l+(a?2:1)],u=s?c.height():c.width(),h=a?-1:1,f=h*(u/(o.max-o.min)),p=new B(c.x1,c.y1,c.x1,c.y1);return w(e)||(e=t||0),w(t)||(t=e||0),e=mt.max(mt.min(e,o.max),o.min),t=mt.max(mt.min(t,o.max),o.min),s?(n=o.max-mt.max(e,t),r=o.max-mt.min(e,t)):(n=mt.min(e,t)-o.min,r=mt.max(e,t)-o.min),p[l+1]=d+f*(a?r:n),p[l+2]=d+f*(a?n:r),p},getValue:function(e){var t,n=this,r=n.options,i=r.reverse,o=r.vertical,a=1*r.max,s=1*r.min,l=o?sn:an,c=n.lineBox(),d=c[l+(i?2:1)],u=o?c.height():c.width(),h=i?-1:1,f=h*(e[l]-d),p=(a-s)/u,g=f*p;return 0>f||f>u?null:(t=o?a-g:s+g,v(t,Mt))},translateRange:function(e){var t=this,n=t.options,r=t.lineBox(),i=n.vertical,o=n.reverse,a=i?r.height():r.width(),s=n.max-n.min,l=a/s,c=v(e/l,Mt);return!i&&!o||i&&o||(c=-c),{min:n.min+c,max:n.max+c}},scaleRange:function(e){var t=this,n=t.options,r=-e*n.majorUnit;return{min:n.min-r,max:n.max+r}},labelsCount:function(){return this.getDivisions(this.options.majorUnit)},createAxisLabel:function(e,t){var n=this,r=n.options,i=v(r.min+e*r.majorUnit,Mt);return new U(i,e,null,t)},shouldRenderNote:function(e){var t=this.range();return t.min<=e&&e<=t.max}}),q=ut.extend({init:function(e){var t=this;t.children=[],t.options=vt({},t.options,e)},render:function(){return this.template(this)},renderContent:function(){var e,t=this,n="",r=t.sortChildren(),i=r.length;for(e=0;i>e;e++)n+=r[e].render();return n},sortChildren:function(){var e,t,n=this,r=n.children;for(t=0,e=r.length;e>t;t++)r[t]._childIndex=t;return r.slice(0).sort(n.compareChildren)},refresh:e.noop,traverse:function(e){var t,n,r=this,i=r.children;for(e(r),n=0,t=i.length;t>n;n++)i[n].traverse(e)},compareChildren:function(e,t){var n=e.options.zIndex||0,r=t.options.zIndex||0;return n!==r?n-r:e._childIndex-t._childIndex},renderId:function(){var e=this,t="";return e.options.id&&(t=e.renderAttr("id",e.options.id)),t},renderAttr:function(e,t){return w(t)?" "+e+"='"+t+"' ":""},renderDataAttributes:function(){var e,t,n=this,r=n.options.data,i="";for(e in r)t="data-"+e.replace(nn,"-$1").toLowerCase(),i+=n.renderAttr(t,r[e]);return i}}),Q=q.extend({init:function(e){var t=this;q.fn.init.call(t,e),t.definitions={},t.decorators=[],t.animations=[]},destroy:function(){for(var e=this.animations;e.length>0;)e.shift().destroy()},load:function(e){var t=this;t.children=e.getViewElements(t)},renderDefinitions:function(){var e,t=this.definitions,n="";for(e in t)t.hasOwnProperty(e)&&(n+=t[e].render());return n},decorate:function(e){var t,n,r=this.decorators,i=r.length;for(t=0;i>t;t++)n=r[t],this._decorateChildren(n,e),e=n.decorate.call(n,e);return e},_decorateChildren:function(e,t){var n,r=this,i=t.children,o=i.length;for(n=0;o>n;n++)r._decorateChildren(e,i[n]),i[n]=e.decorate.call(e,i[n])},setupAnimations:function(){for(var e=0;e<this.animations.length;e++)this.animations[e].setup()},playAnimations:function(){for(var e=0;e<this.animations.length;e++)this.animations[e].play()},buildGradient:function(e){var t,n,r,i=this,o=i._gradientCache;return o||(o=i._gradientCache=[]),e&&(t=a(e),n=o[t],r=dt.Gradients[e.gradient],!n&&r&&(n=vt({id:s()},r,e),o[t]=n)),n},setDefaults:function(e){var t=this.options;return e=e||{},w(e.inline)||(e.inline=t.inline),w(e.align)||(e.align=t.align),e}}),dt.Gradients={glass:{type:Nt,rotation:0,stops:[{offset:0,color:on,opacity:0},{offset:.25,color:on,opacity:.3},{offset:1,color:on,opacity:0}]},sharpBevel:{type:$t,stops:[{offset:0,color:on,opacity:.55},{offset:.65,color:on,opacity:0},{offset:.95,color:on,opacity:.25}]},roundedBevel:{type:$t,stops:[{offset:.33,color:on,opacity:.06},{offset:.83,color:on,opacity:.2},{offset:.95,color:on,opacity:0}]},roundedGlass:{type:$t,supportVML:!1,stops:[{offset:0,color:on,opacity:0},{offset:.5,color:on,opacity:.3},{offset:.99,color:on,opacity:0}]},sharpGlass:{type:$t,supportVML:!1,stops:[{offset:0,color:on,opacity:.2},{offset:.15,color:on,opacity:.15},{offset:.17,color:on,opacity:.35},{offset:.85,color:on,opacity:.05},{offset:.87,color:on,opacity:.15},{offset:.99,color:on,opacity:0}]}},Y=ut.extend({init:function(e,t){var n=this;n.options=vt({},n.options,t),n.element=e},options:{duration:Ut,easing:Jt},play:function(){var t,n,r,i,o,a=this,s=a.options,l=a.element,c=l.options.id,d=s.delay||0,u=+new Date+d,h=s.duration,f=u+h,p=e.easing[s.easing];setTimeout(function(){var e=function(){a._stopped||(n=+new Date,r=mt.min(n-u,h),i=r/h,o=p(i,r,0,1,h),a.step(o),(!t||S(t))&&(t=A(c)),l.refresh(t),f>n?dt.requestFrame(e):a.destroy())};e()},d)},abort:function(){this._stopped=!0},destroy:function(){this.abort()},setup:pt,step:pt}),X=Y.extend({options:{duration:200,easing:Nt},setup:function(){var e=this,t=e.element.options;e.targetFillOpacity=t.fillOpacity,e.targetStrokeOpacity=t.strokeOpacity,t.fillOpacity=t.strokeOpacity=0},step:function(e){var t=this,n=t.element.options;n.fillOpacity=e*t.targetFillOpacity,n.strokeOpacity=e*t.targetStrokeOpacity}}),$=Y.extend({options:{size:0,easing:Nt},setup:function(){var e=this.element.points;e[1].x=e[2].x=e[0].x},step:function(e){var t=this.options,n=y(0,t.size,e),r=this.element.points;r[1].x=r[2].x=r[0].x+n},destroy:function(){Y.fn.destroy.call(this),this.element.destroy()}}),Z=Y.extend({options:{easing:Nt,duration:900},setup:function(){var e,t,n=this,r=n.element,i=r.options,o=n.options,a=o.center;i.rotation&&(e=o.startAngle,t=i.rotation[0],o.duration=mt.max(1e3*(mt.abs(e-t)/o.speed),1),n.endState=t,i.rotation=[e,a.x,a.y])},step:function(e){var t=this,n=t.element;n.options.rotation&&(n.options.rotation[0]=y(t.options.startAngle,t.endState,e))}}),J=Y.extend({options:{easing:Jt},setup:function(){var e,t=this,n=t.element,r=n.points,i=n.options,o=i.vertical?sn:an,a=i.stackBase,s=i.aboveAxis,l=t.endState={top:r[0].y,right:r[1].x,bottom:r[3].y,left:r[0].x};e=o===sn?b(a,l[s?kt:Kt]):b(a,l[s?Ht:Zt]),t.startPosition=e,C(r,o,e)},step:function(e){var t=this,n=t.startPosition,r=t.endState,i=t.element,o=i.points;i.options.vertical?(o[0].y=o[1].y=y(n,r.top,e),o[2].y=o[3].y=y(n,r.bottom,e)):(o[0].x=o[3].x=y(n,r.left,e),o[1].x=o[2].x=y(n,r.right,e))}}),K=Y.extend({options:{easing:Jt,duration:1e3},setup:function(){var e,t,n,r=this,i=r.element,o=i.points,a=i.options.animation,s=a.vertical,l=a.reverse,c=r.axis=s?"y":"x",d=r.options.endPosition,u=r.initialState={top:o[0].y,right:o[1].x,bottom:o[3].y,left:o[0].x},h=!w(r.options.endPosition);s?(n=l?"y2":"y1",e=u[h&&!l?kt:Kt],t=h?u[l?kt:Kt]:d[n]):(n=l?"x1":"x2",e=u[h&&!l?Ht:Zt],t=h?u[l?Ht:Zt]:d[n]),r.start=e,r.end=t,h?C(o,c,r.start):a.speed&&(r.options.duration=mt.max(1e3*(mt.abs(r.start-r.end)/a.speed),1))},step:function(e){var t=this,n=t.start,r=t.end,i=t.element,o=i.points,a=t.axis;i.options.animation.vertical?o[0][a]=o[1][a]=y(n,r,e):o[1][a]=o[2][a]=y(n,r,e)}}),et=Y.extend({options:{easing:Jt,duration:1e3},setup:function(){var e,t,n,r=this,i=r.element,o=i.points,a=i.options.animation,s=a.vertical,l=a.reverse,c=s?"y":"x",d=c+(l?"1":"2"),u=c+(l?"2":"1"),h=a.startPosition[s?d:u],f=a.size/2,p=o.length,g=!w(r.options.endPosition),m=f;for(r.axis=c,r.endPositions=[],r.startPositions=[],g||(h=o[1][c],t=r.options.endPosition[s?u:d],a.speed&&(r.options.duration=mt.max(1e3*(mt.abs(h-t)/a.speed),1))),n=0;p>n;n++)e=vt({},o[n]),g?(r.endPositions[n]=e[c],o[n][c]=h-m):r.endPositions[n]=t-m,r.startPositions[n]=o[n][c],m-=f},step:function(e){var t,n=this,r=n.startPositions,i=n.endPositions,o=n.element,a=o.points,s=n.axis,l=a.length;for(t=0;l>t;t++)a[t][s]=y(r[t],i[t],e)}}),tt=r(Et,X),nt=function(e){var t,n,r,i,o,a=this,s=nt.formats;if(1===arguments.length)for(e=a.resolveColor(e),i=0;i<s.length;i++)t=s[i].re,n=s[i].process,r=t.exec(e),r&&(o=n(r),a.r=o[0],a.g=o[1],a.b=o[2]);else a.r=arguments[0],a.g=arguments[1],a.b=arguments[2];a.r=a.normalizeByte(a.r),a.g=a.normalizeByte(a.g),a.b=a.normalizeByte(a.b)},nt.prototype={toHex:function(){var e=this,t=e.padDigit,n=e.r.toString(16),r=e.g.toString(16),i=e.b.toString(16);return"#"+t(n)+t(r)+t(i)},resolveColor:function(e){return e=e||Ct,"#"==e.charAt(0)&&(e=e.substr(1,6)),e=e.replace(/ /g,""),e=e.toLowerCase(),e=nt.namedColors[e]||e},normalizeByte:function(e){return 0>e||isNaN(e)?0:e>255?255:e},padDigit:function(e){return 1===e.length?"0"+e:e},brightness:function(e){var t=this,n=mt.round;return t.r=n(t.normalizeByte(t.r*e)),t.g=n(t.normalizeByte(t.g*e)),t.b=n(t.normalizeByte(t.b*e)),t},percBrightness:function(){var e=this;return mt.sqrt(.241*e.r*e.r+.691*e.g*e.g+.068*e.b*e.b)}},nt.formats=[{re:/^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,process:function(e){return[parseInt(e[1],10),parseInt(e[2],10),parseInt(e[3],10)]}},{re:/^(\w{2})(\w{2})(\w{2})$/,process:function(e){return[parseInt(e[1],16),parseInt(e[2],16),parseInt(e[3],16)]}},{re:/^(\w{1})(\w{1})(\w{1})$/,process:function(e){return[parseInt(e[1]+e[1],16),parseInt(e[2]+e[2],16),parseInt(e[3]+e[3],16)]}}],nt.namedColors={aqua:"00ffff",azure:"f0ffff",beige:"f5f5dc",black:"000000",blue:"0000ff",brown:"a52a2a",coral:"ff7f50",cyan:"00ffff",darkblue:"00008b",darkcyan:"008b8b",darkgray:"a9a9a9",darkgreen:"006400",darkorange:"ff8c00",darkred:"8b0000",dimgray:"696969",fuchsia:"ff00ff",gold:"ffd700",goldenrod:"daa520",gray:"808080",green:"008000",greenyellow:"adff2f",indigo:"4b0082",ivory:"fffff0",khaki:"f0e68c",lightblue:"add8e6",lightgrey:"d3d3d3",lightgreen:"90ee90",lightpink:"ffb6c1",lightyellow:"ffffe0",lime:"00ff00",limegreen:"32cd32",linen:"faf0e6",magenta:"ff00ff",maroon:"800000",mediumblue:"0000cd",navy:"000080",olive:"808000",orange:"ffa500",orangered:"ff4500",orchid:"da70d6",pink:"ffc0cb",plum:"dda0dd",purple:"800080",red:"ff0000",royalblue:"4169e1",salmon:"fa8072",silver:"c0c0c0",skyblue:"87ceeb",slateblue:"6a5acd",slategray:"708090",snow:"fffafa",steelblue:"4682b4",tan:"d2b48c",teal:"008080",tomato:"ff6347",turquoise:"40e0d0",violet:"ee82ee",wheat:"f5deb3",white:"ffffff",whitesmoke:"f5f5f5",yellow:"ffff00",yellowgreen:"9acd32"},rt=ut.extend({init:function(e,t,n){this._pool=[],this._freed={},this._size=e,this._id=n,this._prefix=t},alloc:function(){var e,t=this,n=t._pool;return n.length>0?(e=n.pop(),t._freed[e]=!1):e=t._prefix+t._id++,e},free:function(e){var t=this,n=t._pool,r=t._freed;n.length<t._size&&!r[e]&&(n.push(e),r[e]=!0)}}),rt.current=new rt(zt,Rt,Ft),it=ut.extend({init:function(e){this._size=e,this._length=0,this._map={}},put:function(e,t){var n=this,r=n._map,i={key:e,value:t};r[e]=i,n._head?(n._tail.newer=i,i.older=n._tail,n._tail=i):n._head=n._tail=i,n._length>=n._size?(r[n._head.key]=null,n._head=n._head.newer,n._head.older=null):n._length++},get:function(e){var n=this,r=n._map[e];return r?(r===n._head&&r!==n._tail&&(n._head=r.newer,n._head.older=null),r!==n._tail&&(r.older&&(r.older.newer=r.newer,r.newer.older=r.older),r.older=n._tail,r.newer=null,n._tail.newer=r,n._tail=r),r.value):t}}),ot=function(){this._views=[]},ot.prototype={register:function(e,t,n){var r=this._views,i=r[0],o={name:e,type:t,order:n};!i||n<i.order?r.unshift(o):r.push(o)},create:function(e,n){var r,i=this._views,o=i[0];if(n)for(n=n.toLowerCase(),r=0;r<i.length;r++)if(i[r].name===n){o=i[r];break}return o?new o.type(e):(ct.logToConsole("Warning: KendoUI DataViz cannot render. Possible causes:\n- The browser does not support SVG, VML and Canvas. User agent: "+navigator.userAgent+"\n"+"- The kendo.dataviz.(svg|vml|canvas).js scripts are not loaded"),t)}},ot.current=new ot,at={svg:function(){if(dt.SVGView){var e=this._getModel(),t=new dt.SVGView(e.options);return t.load(e),t.render()}throw Error("Unable to create SVGView. Check that kendo.dataviz.svg.js is loaded.")},imageDataURL:function(){if(dt.CanvasView){if(dt.supportsCanvas()){var e=this._getModel(),t=document.createElement("div"),n=new dt.CanvasView(e.options);return n.load(e),n.renderTo(t).toDataURL()}return ct.logToConsole("Warning: Unable to generate image. The browser does not support Canvas.\nUser agent: "+navigator.userAgent),null}throw Error("Unable to create CanvasView. Check that kendo.dataviz.canvas.js is loaded.")}},i.cache=new it(1e3),i.baselineMarker=e("<div class='"+yt+"baseline-marker' "+"style='display: inline-block; vertical-align: baseline;"+"width: "+_t+"px; height: "+_t+"px;"+"overflow: hidden;' />")[0],st=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(e){setTimeout(e,wt)},dt.requestFrame=function(e,t){return st(e,t)},P._element=lt.createElement("span"),vt(ct.dataviz,{init:function(e){ct.init(e,ct.dataviz.ui)},ui:{roles:{},themes:{},views:[],plugin:function(e){ct.ui.plugin(e,dt.ui)}},AXIS_LABEL_CLICK:bt,COORD_PRECISION:St,DEFAULT_PRECISION:Mt,DEFAULT_WIDTH:It,DEFAULT_HEIGHT:Bt,DEFAULT_FONT:Dt,INITIAL_ANIMATION_DURATION:Ut,NOTE_CLICK:Qt,NOTE_HOVER:Yt,CLIP:Tt,DASH_ARRAYS:{dot:[1.5,3.5],dash:[4,3.5],longdash:[8,3.5],dashdot:[3.5,3.5,1.5,3.5],longdashdot:[8,3.5,1.5,3.5],longdashdotdot:[8,3.5,1.5,3.5,1.5,3.5]},Axis:j,AxisLabel:U,Box2D:B,BoxElement:V,ChartElement:E,Color:nt,ElementAnimation:Y,ExpandAnimation:$,ExportMixin:at,ArrowAnimation:et,BarAnimation:J,BarIndicatorAnimatin:K,FadeAnimation:X,FadeAnimationDecorator:tt,IDPool:rt,LRUCache:it,Note:H,NumericAxis:W,Point2D:cn,PinElement:G,Ring:M,Pin:L,RootElement:O,RotationAnimation:Z,Sector:I,ShapeElement:N,Text:R,TextBox:z,Title:F,ViewBase:Q,ViewElement:q,ViewFactory:ot,animationDecorator:r,append:p,autoFormat:k,autoMajorUnit:o,boxDiff:c,defined:w,decodeEntities:P,dateComparer:D,getElement:A,getSpacing:n,inArray:h,interpolateValue:y,last:f,measureText:i,rotatePoint:l,round:v,ceil:g,floor:m,supportsCanvas:u,supportsSVG:d,renderTemplate:xt,uniqueId:s,valueOrDefault:b})}(window.kendo.jQuery),function(){var e=window.kendo,t=e.dataviz.ui,n=e.deepExtend,r=1.5,i=.4,o="#000",a="Arial,Helvetica,sans-serif",s="11px "+a,l="12px "+a,c="16px "+a,d="#fff",u={title:{font:c},legend:{labels:{font:l}},seriesDefaults:{visible:!0,labels:{font:s},donut:{margin:1},line:{width:4,aggregate:{value:"max",noteText:"first"}},vericalLine:{width:4,aggregate:{value:"max",noteText:"first"}},scatterLine:{width:1},area:{opacity:.4,markers:{visible:!1,size:6},line:{opacity:1,width:0},aggregate:{value:"max",noteText:"first"}},verticalArea:{opacity:.4,markers:{visible:!1,size:6},line:{opacity:1,width:0},aggregate:{value:"max",noteText:"first"}},radarLine:{width:4,markers:{visible:!1}},radarArea:{opacity:.5,markers:{visible:!1,size:6},line:{opacity:1,width:0},aggregate:{value:"max",noteText:"first"}},candlestick:{line:{width:1,color:o},border:{width:1,_brightness:.8},gap:1,spacing:.3,downColor:d,aggregate:{open:"max",high:"max",low:"min",close:"max",noteText:"first"},highlight:{line:{width:2},border:{width:2,opacity:1}}},ohlc:{line:{width:1},gap:1,spacing:.3,aggregate:{open:"max",high:"max",low:"min",close:"max",noteText:"first"},highlight:{line:{width:3,opacity:1}}},bubble:{opacity:.6,border:{width:0},labels:{background:"transparent"}},bar:{gap:r,spacing:i,aggregate:{value:"max",noteText:"first"}},column:{gap:r,spacing:i,aggregate:{value:"max",noteText:"first"}},bullet:{gap:r,spacing:i,target:{color:"#ff0000"}},verticalBullet:{gap:r,spacing:i,target:{color:"#ff0000"}},notes:{icon:{size:7,border:{width:1}},label:{padding:3,font:l},line:{length:10,width:1},visible:!0}},categoryAxis:{majorGridLines:{visible:!0}},axisDefaults:{labels:{font:l},title:{font:c,margin:5},crosshair:{tooltip:{font:l}},notes:{icon:{size:7,border:{width:1}},label:{padding:3,font:l},line:{length:10,width:1},visible:!0}},tooltip:{font:l},navigator:{pane:{height:90,margin:{top:10}}}},h={scale:{labels:{font:l}}},f=t.themes,p=t.registerTheme=function(e,t){var r,i={};i.chart=n({},u,t.chart),i.gauge=n({},h,t.gauge),r=i.chart.seriesDefaults,r.verticalLine=n({},r.line),r.verticalArea=n({},r.area),r.polarArea=n({},r.radarArea),r.polarLine=n({},r.radarLine),f[e]=i};p("black",{chart:{title:{color:d},legend:{labels:{color:d},inactiveItems:{labels:{color:"#919191"},markers:{color:"#919191"}}},seriesDefaults:{labels:{color:d},notes:{icon:{background:"#3b3b3b",border:{color:"#8e8e8e"}},label:{color:d},line:{color:"#8e8e8e"}},pie:{overlay:{gradient:"sharpBevel"}},donut:{overlay:{gradient:"sharpGlass"}},line:{markers:{background:"#3d3d3d"}},scatter:{markers:{background:"#3d3d3d"}},scatterLine:{markers:{background:"#3d3d3d"}},candlestick:{downColor:"#555",line:{color:d},border:{_brightness:1.5,opacity:1},highlight:{border:{color:d,opacity:.2}}},ohlc:{line:{color:d}}},chartArea:{background:"#3d3d3d"},seriesColors:["#0081da","#3aafff","#99c900","#ffeb3d","#b20753","#ff4195"],axisDefaults:{line:{color:"#8e8e8e"},labels:{color:d},majorGridLines:{color:"#545454"},minorGridLines:{color:"#454545"},title:{color:d},crosshair:{color:"#8e8e8e"},notes:{icon:{background:"#3b3b3b",border:{color:"#8e8e8e"}},label:{color:d},line:{color:"#8e8e8e"}}}},gauge:{pointer:{color:"#0070e4"},scale:{rangePlaceholderColor:"#1d1d1d",labels:{color:d},minorTicks:{color:d},majorTicks:{color:d},line:{color:d}}}}),p("blueopal",{chart:{title:{color:"#293135"},legend:{labels:{color:"#293135"},inactiveItems:{labels:{color:"#27A5BA"},markers:{color:"#27A5BA"}}},seriesDefaults:{labels:{color:o,background:d,opacity:.5},candlestick:{downColor:"#c4d0d5",line:{color:"#9aabb2"}},notes:{icon:{background:"transparent",border:{color:"#9aabb2"}},label:{color:"#293135"},line:{color:"#9aabb2"}}},seriesColors:["#0069a5","#0098ee","#7bd2f6","#ffb800","#ff8517","#e34a00"],axisDefaults:{line:{color:"#9aabb2"},labels:{color:"#293135"},majorGridLines:{color:"#c4d0d5"},minorGridLines:{color:"#edf1f2"},title:{color:"#293135"},crosshair:{color:"#9aabb2"},notes:{icon:{background:"transparent",border:{color:"#9aabb2"}},label:{color:"#293135"},line:{color:"#9aabb2"}}}},gauge:{pointer:{color:"#005c83"},scale:{rangePlaceholderColor:"#daecf4",labels:{color:"#293135"},minorTicks:{color:"#293135"},majorTicks:{color:"#293135"},line:{color:"#293135"}}}}),p("highcontrast",{chart:{title:{color:"#ffffff"},legend:{labels:{color:"#ffffff"},inactiveItems:{labels:{color:"#66465B"},markers:{color:"#66465B"}}},seriesDefaults:{labels:{color:"#ffffff"},notes:{icon:{background:"transparent",border:{color:"#ffffff"}},label:{color:"#ffffff"},line:{color:"#ffffff"}},pie:{overlay:{gradient:"sharpGlass"}},donut:{overlay:{gradient:"sharpGlass"}},line:{markers:{background:"#2c232b"}},scatter:{markers:{background:"#2c232b"}},scatterLine:{markers:{background:"#2c232b"}},area:{opacity:.5},candlestick:{downColor:"#664e62",line:{color:"#ffffff"},border:{_brightness:1.5,opacity:1},highlight:{border:{color:"#ffffff",opacity:1}}},ohlc:{line:{color:"#ffffff"}}},chartArea:{background:"#2c232b"},seriesColors:["#a7008f","#ffb800","#3aafff","#99c900","#b20753","#ff4195"],axisDefaults:{line:{color:"#ffffff"},labels:{color:"#ffffff"},majorGridLines:{color:"#664e62"},minorGridLines:{color:"#4f394b"},title:{color:"#ffffff"},crosshair:{color:"#ffffff"},notes:{icon:{background:"transparent",border:{color:"#ffffff"}},label:{color:"#ffffff"},line:{color:"#ffffff"}}}},gauge:{pointer:{color:"#a7008f"},scale:{rangePlaceholderColor:"#2c232b",labels:{color:"#ffffff"},minorTicks:{color:"#2c232b"},majorTicks:{color:"#664e62"},line:{color:"#ffffff"}}}}),p("default",{chart:{title:{color:"#8e8e8e"},legend:{labels:{color:"#232323"},inactiveItems:{labels:{color:"#919191"},markers:{color:"#919191"}}},seriesDefaults:{labels:{color:o,background:d,opacity:.5},candlestick:{downColor:"#dedede",line:{color:"#8d8d8d"}},notes:{icon:{background:"transparent",border:{color:"#8e8e8e"}},label:{color:"#232323"},line:{color:"#8e8e8e"}}},seriesColors:["#ff6800","#a0a700","#ff8d00","#678900","#ffb53c","#396000"],axisDefaults:{line:{color:"#8e8e8e"},labels:{color:"#232323"},minorGridLines:{color:"#f0f0f0"},majorGridLines:{color:"#dfdfdf"},title:{color:"#232323"},crosshair:{color:"#8e8e8e"},notes:{icon:{background:"transparent",border:{color:"#8e8e8e"}},label:{color:"#232323"},line:{color:"#8e8e8e"}}}},gauge:{pointer:{color:"#ea7001"},scale:{rangePlaceholderColor:"#dedede",labels:{color:"#2e2e2e"},minorTicks:{color:"#2e2e2e"},majorTicks:{color:"#2e2e2e"},line:{color:"#2e2e2e"}}}}),p("silver",{chart:{title:{color:"#4e5968"},legend:{labels:{color:"#4e5968"},inactiveItems:{labels:{color:"#B1BCC8"},markers:{color:"#B1BCC8"}}},seriesDefaults:{labels:{color:"#293135",background:"#eaeaec",opacity:.5},notes:{icon:{background:"transparent",border:{color:"#4e5968"}},label:{color:"#4e5968"},line:{color:"#4e5968"}},line:{markers:{background:"#eaeaec"}},scatter:{markers:{background:"#eaeaec"}},scatterLine:{markers:{background:"#eaeaec"}},pie:{connectors:{color:"#A6B1C0"}},donut:{connectors:{color:"#A6B1C0"}},candlestick:{downColor:"#a6afbe"}},chartArea:{background:"#eaeaec"},seriesColors:["#007bc3","#76b800","#ffae00","#ef4c00","#a419b7","#430B62"],axisDefaults:{line:{color:"#a6b1c0"},labels:{color:"#4e5968"},majorGridLines:{color:"#dcdcdf"},minorGridLines:{color:"#eeeeef"},title:{color:"#4e5968"},crosshair:{color:"#a6b1c0"},notes:{icon:{background:"transparent",border:{color:"#4e5968"}},label:{color:"#4e5968"},line:{color:"#4e5968"}}}},gauge:{pointer:{color:"#0879c0"},scale:{rangePlaceholderColor:"#f3f3f4",labels:{color:"#515967"},minorTicks:{color:"#515967"},majorTicks:{color:"#515967"},line:{color:"#515967"}}}}),p("metro",{chart:{title:{color:"#777777"},legend:{labels:{color:"#777777"},inactiveItems:{labels:{color:"#CBCBCB"},markers:{color:"#CBCBCB"}}},seriesDefaults:{labels:{color:o},notes:{icon:{background:"transparent",border:{color:"#777777"}},label:{color:"#777777"},line:{color:"#777777"}},candlestick:{downColor:"#c7c7c7",line:{color:"#787878"}},overlay:{gradient:"none"},border:{_brightness:1}},seriesColors:["#8ebc00","#309b46","#25a0da","#ff6900","#e61e26","#d8e404","#16aba9","#7e51a1","#313131","#ed1691"],axisDefaults:{line:{color:"#c7c7c7"},labels:{color:"#777777"},minorGridLines:{color:"#c7c7c7"},majorGridLines:{color:"#c7c7c7"},title:{color:"#777777"},crosshair:{color:"#c7c7c7"},notes:{icon:{background:"transparent",border:{color:"#777777"}},label:{color:"#777777"},line:{color:"#777777"}}}},gauge:{pointer:{color:"#8ebc00"},scale:{rangePlaceholderColor:"#e6e6e6",labels:{color:"#777"},minorTicks:{color:"#777"},majorTicks:{color:"#777"},line:{color:"#777"}}}}),p("metroblack",{chart:{title:{color:"#ffffff"},legend:{labels:{color:"#ffffff"},inactiveItems:{labels:{color:"#797979"},markers:{color:"#797979"}}},seriesDefaults:{border:{_brightness:1},labels:{color:"#ffffff"},notes:{icon:{background:"transparent",border:{color:"#cecece"}},label:{color:"#ffffff"},line:{color:"#cecece"}},line:{markers:{background:"#0e0e0e"}},bubble:{opacity:.6},scatter:{markers:{background:"#0e0e0e"}},scatterLine:{markers:{background:"#0e0e0e"}},candlestick:{downColor:"#828282",line:{color:"#ffffff"}},overlay:{gradient:"none"}},chartArea:{background:"#0e0e0e"},seriesColors:["#00aba9","#309b46","#8ebc00","#ff6900","#e61e26","#d8e404","#25a0da","#7e51a1","#313131","#ed1691"],axisDefaults:{line:{color:"#cecece"},labels:{color:"#ffffff"},minorGridLines:{color:"#2d2d2d"},majorGridLines:{color:"#333333"},title:{color:"#ffffff"},crosshair:{color:"#cecece"},notes:{icon:{background:"transparent",border:{color:"#cecece"}},label:{color:"#ffffff"},line:{color:"#cecece"}}}},gauge:{pointer:{color:"#00aba9"},scale:{rangePlaceholderColor:"#2d2d2d",labels:{color:"#ffffff"},minorTicks:{color:"#333333"},majorTicks:{color:"#cecece"},line:{color:"#cecece"}}}}),p("moonlight",{chart:{title:{color:"#ffffff"},legend:{labels:{color:"#ffffff"},inactiveItems:{labels:{color:"#A1A7AB"},markers:{color:"#A1A7AB"}}},seriesDefaults:{labels:{color:"#ffffff"},notes:{icon:{background:"transparent",border:{color:"#8c909e"}},label:{color:"#ffffff"},line:{color:"#8c909e"}},pie:{overlay:{gradient:"sharpBevel"}},donut:{overlay:{gradient:"sharpGlass"}},line:{markers:{background:"#212a33"}},bubble:{opacity:.6},scatter:{markers:{background:"#212a33"}},scatterLine:{markers:{background:"#212a33"}},area:{opacity:.3},candlestick:{downColor:"#757d87",line:{color:"#ea9d06"},border:{_brightness:1.5,opacity:1},highlight:{border:{color:d,opacity:.2}}},ohlc:{line:{color:"#ea9d06"}}},chartArea:{background:"#212a33"},seriesColors:["#ffca08","#ff710f","#ed2e24","#ff9f03","#e13c02","#a00201"],axisDefaults:{line:{color:"#8c909e"},minorTicks:{color:"#8c909e"},majorTicks:{color:"#8c909e"},labels:{color:"#ffffff"},majorGridLines:{color:"#3e424d"},minorGridLines:{color:"#2f3640"},title:{color:"#ffffff"},crosshair:{color:"#8c909e"},notes:{icon:{background:"transparent",border:{color:"#8c909e"}},label:{color:"#ffffff"},line:{color:"#8c909e"}}}},gauge:{pointer:{color:"#f4af03"},scale:{rangePlaceholderColor:"#2f3640",labels:{color:d},minorTicks:{color:"#8c909e"},majorTicks:{color:"#8c909e"},line:{color:"#8c909e"}}}}),p("uniform",{chart:{title:{color:"#686868"},legend:{labels:{color:"#686868"},inactiveItems:{labels:{color:"#B6B6B6"},markers:{color:"#B6B6B6"}}},seriesDefaults:{labels:{color:"#686868"},notes:{icon:{background:"transparent",border:{color:"#9e9e9e"}},label:{color:"#686868"},line:{color:"#9e9e9e"}},pie:{overlay:{gradient:"sharpBevel"}},donut:{overlay:{gradient:"sharpGlass"}},line:{markers:{background:"#ffffff"}},bubble:{opacity:.6},scatter:{markers:{background:"#ffffff"}},scatterLine:{markers:{background:"#ffffff"}},area:{opacity:.3},candlestick:{downColor:"#cccccc",line:{color:"#cccccc"},border:{_brightness:1.5,opacity:1},highlight:{border:{color:"#cccccc",opacity:.2}}},ohlc:{line:{color:"#cccccc"}}},chartArea:{background:"#ffffff"},seriesColors:["#527aa3","#6f91b3","#8ca7c2","#a8bdd1","#c5d3e0","#e2e9f0"],axisDefaults:{line:{color:"#9e9e9e"},minorTicks:{color:"#aaaaaa"},majorTicks:{color:"#888888"},labels:{color:"#686868"},majorGridLines:{color:"#dadada"},minorGridLines:{color:"#e7e7e7"},title:{color:"#686868"},crosshair:{color:"#9e9e9e"},notes:{icon:{background:"transparent",border:{color:"#9e9e9e"}},label:{color:"#686868"},line:{color:"#9e9e9e"}}}},gauge:{pointer:{color:"#527aa3"},scale:{rangePlaceholderColor:"#e7e7e7",labels:{color:"#686868"},minorTicks:{color:"#aaaaaa"},majorTicks:{color:"#888888"},line:{color:"#9e9e9e"}}}}),p("bootstrap",{chart:{title:{color:"#343434"},legend:{labels:{color:"#343434"},inactiveItems:{labels:{color:"#9A9A9A"},markers:{color:"#9A9A9A"}}},seriesDefaults:{labels:{color:"#343434"},notes:{icon:{background:"transparent",border:{color:"#b8b8b8"}},label:{color:"#343434"},line:{color:"#b8b8b8"}},pie:{overlay:{gradient:"sharpBevel"}},donut:{overlay:{gradient:"sharpGlass"}},line:{markers:{background:"#ffffff"}},bubble:{opacity:.6},scatter:{markers:{background:"#ffffff"}},scatterLine:{markers:{background:"#ffffff"}},area:{opacity:.3},candlestick:{downColor:"#d0d0d0",line:{color:"#d0d0d0"},border:{_brightness:1.5,opacity:1},highlight:{border:{color:"#b8b8b8",opacity:.2}}},ohlc:{line:{color:"#d0d0d0"}}},chartArea:{background:"#ffffff"},seriesColors:["#006dcc","#49AFCD","#5BB75B","#FAA732","#DA4F49","#363636"],axisDefaults:{line:{color:"#b8b8b8"},minorTicks:{color:"#dddddd"},majorTicks:{color:"#b8b8b8"},labels:{color:"#343434"},majorGridLines:{color:"#b8b8b8"},minorGridLines:{color:"#dddddd"},title:{color:"#343434"},crosshair:{color:"#b8b8b8"},notes:{icon:{background:"transparent",border:{color:"#b8b8b8"}},label:{color:"#343434"},line:{color:"#b8b8b8"}}}},gauge:{pointer:{color:"#0044cc"},scale:{rangePlaceholderColor:"#b8b8b8",labels:{color:"#343434"},minorTicks:{color:"#dddddd"},majorTicks:{color:"#b8b8b8"},line:{color:"#b8b8b8"}}}}),p("flat",{chart:{title:{color:"#4c5356"},legend:{labels:{color:"#4c5356"},inactiveItems:{labels:{color:"#CBCBCB"},markers:{color:"#CBCBCB"}}},seriesDefaults:{labels:{color:"#4c5356"},notes:{icon:{background:"transparent",border:{color:"#cdcdcd"}},label:{color:"#4c5356"},line:{color:"#cdcdcd"}},candlestick:{downColor:"#c7c7c7",line:{color:"#787878"}},area:{opacity:.9},overlay:{gradient:"none"},border:{_brightness:1}},seriesColors:["#10c4b2","#ff7663","#ffb74f","#a2df53","#1c9ec4","#ff63a5","#1cc47b"],axisDefaults:{line:{color:"#cdcdcd"},labels:{color:"#4c5356"},minorGridLines:{color:"#cdcdcd"},majorGridLines:{color:"#cdcdcd"},title:{color:"#4c5356"},crosshair:{color:"#cdcdcd"},notes:{icon:{background:"transparent",border:{color:"#cdcdcd"}},label:{color:"#4c5356"},line:{color:"#cdcdcd"}}}},gauge:{pointer:{color:"#10c4b2"},scale:{rangePlaceholderColor:"#cdcdcd",labels:{color:"#4c5356"},minorTicks:{color:"#4c5356"},majorTicks:{color:"#4c5356"},line:{color:"#4c5356"}}}})
}(window.kendo.jQuery),function(e,t){function n(e,t,n,r,i){var o,a=typeof t;return o=a===bi?Xt[t](e):"function"===a?t(e,n,r,i):Xt.max(e)}function r(e,t,r,i,o){var a,s,l,c,d,u,h,f,p=$.current.valueFields(r),g=$.current.otherFields(r),m=e.length,v=[],x={};for(In(v,p),In(v,g),u=$.current._mapSeriesFields(r,v),a=0;m>a;a++)for(l=e[a],s=0;s<v.length;s++)d=v[s],null!==l&&En(l)&&(h=En(l.value)&&En(l.value[d])?l.value[d]:l.fields[d],"number"==typeof l.value&&"value"===d&&(h=l.value),c=u[d],En(h)&&(En(x[c])||(x[c]=[]),x[c].push(h)));for(s=0;s<v.length;s++)d=v[s],c=u[d],f=x[c],En(f)&&En(t[d])&&(x[c]=n(f,t[d],r,i,o));return x}function i(e,t,n,i){var o,a=t.aggregate;return typeof a===bi||"function"==typeof a?a={value:a}:En(a)||(a={value:"max"}),o=r(e,a,t,n,i)}function o(e){return s(e).min}function a(e){return s(e).max}function s(e){var n,r,i=jr,o=Hr,a=e.length;for(n=0;a>n;n++)r=e[n],null!==r&&isFinite(r)&&(i=en.min(i,r),o=en.max(o,r));return{min:i===jr?t:i,max:o===Hr?t:o}}function l(e){var t,n,r=e.length,i=0;for(t=0;r>t;t++)n=e[t],null!==n&&isFinite(n)&&i++;return i}function c(e,t,n,r){var i,o,a=(r.x-n.x)*(e.y-n.y)-(r.y-n.y)*(e.x-n.x),s=(r.y-n.y)*(t.x-e.x)-(r.x-n.x)*(t.y-e.y);return 0!==s&&(o=a/s,i=new kn(e.x+o*(t.x-e.x),e.y+o*(t.y-e.y))),i}function d(e,t){var n,r,i,o=e.series,a=o.length,s=e.seriesDefaults,l=un({},e.seriesDefaults),c=t?un({},t.seriesDefaults):{},d=un({},c);for(u(l),u(d),n=0;a>n;n++)r=o[n].type||e.seriesDefaults.type,i=un({},d,c[r],{tooltip:e.tooltip},l,s[r]),o[n]._defaults=i,o[n]=un({},i,o[n])}function u(e){delete e.bar,delete e.column,delete e.line,delete e.verticalLine,delete e.pie,delete e.donut,delete e.area,delete e.verticalArea,delete e.scatter,delete e.scatterLine,delete e.bubble,delete e.candlestick,delete e.ohlc,delete e.bullet,delete e.verticalBullet}function h(e){var t,n,r,i,o=e.series,a=e.seriesColors||[];for(t=0;t<o.length;t++)n=o[t],r=a[t%a.length],n.color=n.color||r,i=n._defaults,i&&(i.color=i.color||r)}function f(e){var t;Zt([ar,Ri,Ni,Gi],function(){t=this+"Axes",e[t]&&(e[this+"Axis"]=e[t],delete e[t])})}function p(t,n){var r=(n||{}).axisDefaults||{};Zt([ar,Ri,Ni,Gi],function(){var n=this+"Axis",i=[].concat(t[n]),o=t.axisDefaults||{};i=e.map(i,function(e){var t=(e||{}).color,i=un({},r,r[n],o,o[n],{line:{color:t},labels:{color:t},title:{color:t}},e);return delete i[n],i}),t[n]=i.length>1?i:i[0]})}function g(e,t,n){e[t]=(e[t]||0)+n}function m(e){var t,n=e.length,r=0;for(t=0;n>t;t++)r=en.max(r,e[t].data.length);return r}function v(e){return e*e}function x(e,t){if(null===t)return t;var n=hn(e,!0);return n(t)}function y(e,t){if(null===t)return t;var n="_date_"+e,r=t[n];return r||(r=w(hn(e,!0)(t)),t[n]=r),r}function w(e){var t,n;if(e instanceof Date)t=e;else if(typeof e===bi)t=new Date(e),isNaN(t.getTime())&&(t=on.parseDate(e));else if(e)if(Jt(e))for(t=[],n=0;n<e.length;n++)t.push(w(e[n]));else t=new Date(e);return t}function b(e){return Jt(e)?Kt(e,b):e?w(e).getTime():t}function _(e,t,n,r){var i=e;return e&&(e=w(e),n===Wi?i=new Date(e.getFullYear()+t,0,1):n===Gr?i=new Date(e.getFullYear(),e.getMonth()+t,1):n===ji?i=_(C(e,r),7*t,xr):n===xr?i=new Date(e.getFullYear(),e.getMonth(),e.getDate()+t):n===Br?(i=new Date(e.getFullYear(),e.getMonth(),e.getDate(),e.getHours()+t),t>0&&L(e,i)&&(i=_(e,t+1,n,r))):n===Nr?(i=new Date(e.getTime()+t*Ci),i.setSeconds(0)):n===gi&&(i=new Date(e.getTime()+t*_i)),i.setMilliseconds(0)),i}function C(e,t){var n=e.getDay(),r=0;if(!isNaN(n))for(t=t||0;n!==t;)0===n?n=6:n--,r++;return T(e,-r*Ai)}function k(e,t,n){return e=w(e),_(e,0,t,n)}function A(e,t,n){return e=w(e),e&&k(e,t,n).getTime()===e.getTime()?e:_(e,1,t,n)}function S(e,t){var n=e.getTime()-t,r=e.getTimezoneOffset()-t.getTimezoneOffset();return n-r*Ci}function T(e,t){var n=e.getTimezoneOffset(),r=new Date(e.getTime()+t),i=r.getTimezoneOffset()-n;return new Date(r.getTime()+i*Ci)}function P(e,t,n){var r;return r=n===Wi?t.getFullYear()-e.getFullYear():n===Gr?12*P(e,t,Wi)+t.getMonth()-e.getMonth():n===xr?en.floor(S(t,e)/Ai):en.floor((t-e)/Di[n])}function D(e){return 1===e.length?e[0]:e}function B(e,t,n){return en.max(en.min(e,n),t)}function M(e){var t,n,r,i=e.length;if(i>0)for(n=0;i>n;n++)r=e[n].box,t?t.wrap(r):t=r.clone();return t||vn()}function I(e,t){return e&&t?e.toLowerCase()===t.toLowerCase():e===t}function L(e,t){return e&&t?b(e)===b(t):e===t}function E(e){for(var t,n=e.length;n--;)if(t=e[n],En(t)&&null!==t)return t}function O(e,t){null!==t&&e.push(t)}function V(e,t){for(var n,r,i=0,o=t.length-1;o>=i;)if(n=en.floor((i+o)/2),r=t[n],e>r)i=n+1;else{if(!(r>e)){for(;L(t[n-1],e);)n--;return n}o=n-1}return t[n]<=e?n:n-1}function R(e){var t,n=e.length;for(t=0;n>t;t++)if(!z(e[t]))return!1;return!0}function z(e){return"number"==typeof e&&!isNaN(e)}function F(e){var t,n,r,i={};for(t=0;t<e.length;t++)n=e[t],r=n.options.name,r&&(i[r]=n.range());return i}function U(e){var t=e.originalEvent,n=0;return t.wheelDelta&&(n=-t.wheelDelta/120,n=n>0?en.ceil(n):en.floor(n)),t.detail&&(n=jn(t.detail/3)),n}function j(e,t,n){var r,i,o,a,s;if(n=n||{},o=n.excluded=n.excluded||[],a=n.defaults=n.defaults||{},s=n.depth=n.depth||0,!(s>Ur))for(r in e)zn(r,n.excluded)||(i=e[r],rn(i)?e[r]=Gn(i(t),a[r]):typeof i===ni&&(n.defaults=a[r],n.depth++,j(i,t,n),n.depth--))}function H(e,n){var r,i,o,a=[],s=e.groupNameTemplate,l=n.length;for(En(s)?(on.logToConsole("'groupNameTemplate' is obsolete and will be removed in future versions. Specify the group name template as 'series.name'"),s&&(r=dn(s))):(r=dn(e.name||""),0===r._slotCount&&(r=dn(En(e.name)?"#= group.value #: #= series.name #":"#= group.value #"))),i=0;l>i;i++)o=un({},e),o.color=t,o._groupIx=i,a.push(o),r&&(o.name=r({series:o,group:n[i]}));return a}function N(e,t){var n,r,i=[];for(t=[].concat(t),n=0;n<e.length;n++)r=e[n],zn(r.type,t)&&i.push(r);return i}function G(t,n){if(t instanceof Date){for(var r=0,i=n.length;i>r;r++)if(L(n[r],t))return r;return-1}return e.inArray(t,n)}function W(e,t){t=t||On;for(var n=1,r=e.length;r>n;n++)if(t(e[n],e[n-1])<0){e.sort(t);break}return e}function q(e,t){var n,r=W(e,t),i=r.length,o=i>0?[r[0]]:[];for(t=t||On,n=1;i>n;n++)0!==t(r[n],Un(o))&&o.push(r[n]);return o}function Q(e,t){var n=e.type,r=t instanceof Date;return!n&&r||I(n,vr)}function Y(e){var t,n,r,i,o=[],a=e.length;for(t=0;a>t;t++)for(n=e[t],i=n.length,r=0;i>r;r++)o[r]=o[r]||[],o[r].push(n[r]);return o}var X,$,Z,J,K,et,tt,nt,rt,it,ot,at,st,lt,ct,dt,ut,ht,ft,pt,gt,mt,vt,xt,yt,wt,bt,_t,Ct,kt,At,St,Tt,Pt,Dt,Bt,Mt,It,Lt,Et,Ot,Vt,Rt,zt,Ft,Ut,jt,Ht,Nt,Gt,Wt,qt,Qt,Yt,Xt,$t,Zt=e.each,Jt=e.isArray,Kt=e.map,en=Math,tn=e.extend,nn=e.proxy,rn=e.isFunction,on=window.kendo,an=on.Class,sn=on.Observable,ln=on.data.DataSource,cn=on.ui.Widget,dn=on.template,un=on.deepExtend,hn=on.getter,fn=on.dataviz,pn=fn.Axis,gn=fn.AxisLabel,mn=fn.BarAnimation,vn=fn.Box2D,xn=fn.BoxElement,yn=fn.ChartElement,wn=fn.Color,bn=fn.ElementAnimation,_n=fn.Note,Cn=fn.NumericAxis,kn=fn.Point2D,An=fn.RootElement,Sn=fn.Ring,Tn=fn.ShapeElement,Pn=fn.Text,Dn=fn.TextBox,Bn=fn.Title,Mn=fn.animationDecorator,In=fn.append,Ln=fn.autoFormat,En=fn.defined,On=fn.dateComparer,Vn=fn.getElement,Rn=fn.getSpacing,zn=fn.inArray,Fn=fn.interpolateValue,Un=fn.last,jn=fn.round,Hn=fn.renderTemplate,Nn=fn.uniqueId,Gn=fn.valueOrDefault,Wn=".kendoChart",qn="above",Qn="area",Yn="auto",Xn="fit",$n=fn.AXIS_LABEL_CLICK,Zn="bar",Jn=.8,Kn="below",er="#000",tr="both",nr="bottom",rr="bubble",ir="bullet",or="candlestick",ar="category",sr="center",lr="change",cr="circle",dr="click"+Wn,ur=fn.CLIP,hr="color",fr="column",pr=fn.COORD_PRECISION,gr="k-",mr="dataBound",vr="date",xr="days",yr=fn.DEFAULT_FONT,wr=fn.DEFAULT_HEIGHT,br=fn.DEFAULT_PRECISION,_r=fn.DEFAULT_WIDTH,Cr="donut",kr=50,Ar="drag",Sr="dragEnd",Tr="dragStart",Pr="fadeIn",Dr="glass",Br="hours",Mr=fn.INITIAL_ANIMATION_DURATION,Ir="insideBase",Lr="insideEnd",Er="interpolate",Or="left",Vr="legendItemClick",Rr="legendItemHover",zr="line",Fr=8,Ur=5,jr=Number.MAX_VALUE,Hr=-Number.MAX_VALUE,Nr="minutes",Gr="months",Wr="mouseleave"+Wn,qr="mousemove.tracking",Qr="mouseover"+Wn,Yr="mouseout"+Wn,Xr="mousemove"+Wn,$r=20,Zr=150,Jr="DOMMouseScroll"+Wn+" mousewheel"+Wn,Kr=fn.NOTE_CLICK,ei=fn.NOTE_HOVER,ti="noteText",ni="object",ri="ohlc",ii="outsideEnd",oi="_outline",ai="pie",si=70,li="plotAreaClick",ci="pointer",di="right",ui="roundedBevel",hi="roundedGlass",fi="scatter",pi="scatterLine",gi="seconds",mi="selectStart",vi="select",xi="selectEnd",yi="seriesClick",wi="seriesHover",bi="string",_i=1e3,Ci=60*_i,ki=60*Ci,Ai=24*ki,Si=7*Ai,Ti=31*Ai,Pi=365*Ai,Di={years:Pi,months:Ti,weeks:Si,days:Ai,hours:ki,minutes:Ci,seconds:_i},Bi="top",Mi=150,Ii=5,Li=100,Ei=100,Oi="tooltip-inverse",Vi="touchstart"+Wn,Ri="value",zi="verticalArea",Fi="verticalBullet",Ui="verticalLine",ji="weeks",Hi="#fff",Ni="x",Gi="y",Wi="years",qi="zero",Qi=3,Yi="zoomStart",Xi="zoom",$i="zoomEnd",Zi=[gi,Nr,Br,xr,ji,Gr,Wi],Ji={seconds:"HH:mm:ss",minutes:"HH:mm",hours:"HH:mm",days:"M/d",weeks:"M/d",months:"MMM 'yy",years:"yyyy"},Ki=cn.extend({init:function(e,t){var n,r=this;on.destroy(e),cn.fn.init.call(r,e),n=un({},r.options,t),r.element.addClass(gr+n.name.toLowerCase()).css("position","relative"),r._originalOptions=un({},n),r._initTheme(n),r.bind(r.events,r.options),r.wrapper=r.element,r._initDataSource(t),on.notify(r,fn.ui)},_initTheme:function(t){var n,r=this,i=fn.ui.themes||{},o=t.theme,a=i[o]||i[o.toLowerCase()],s=o&&a?a.chart:{},l=[],c=t.series||[];for(n=0;n<c.length;n++)l.push(e.extend({},c[n]));t.series=l,f(t),r._applyDefaults(t,s),r.options=un({},s,t),h(r.options)},_initDataSource:function(e){var t=this,n=(e||{}).dataSource;t._dataChangeHandler=nn(t._onDataChanged,t),t.dataSource=ln.create(n).bind(lr,t._dataChangeHandler),t._bindCategories(),t._redraw(),t._attachEvents(),n&&t.options.autoBind&&t.dataSource.fetch()},setDataSource:function(e){var t=this;t.dataSource.unbind(lr,t._dataChangeHandler),t.dataSource=e,e.bind(lr,t._dataChangeHandler),t.options.autoBind&&e.fetch()},events:[mr,yi,wi,$n,Vr,Rr,li,Tr,Ar,Sr,Yi,Xi,$i,mi,vi,xi,Kr,ei],items:function(){return e()},options:{name:"Chart",theme:"default",chartArea:{},legend:{visible:!0,labels:{}},categoryAxis:{},autoBind:!0,seriesDefaults:{type:fr,data:[],highlight:{visible:!0},labels:{},negativeValues:{visible:!1}},series:[],tooltip:{visible:!1},transitions:!0,valueAxis:{},plotArea:{},title:{},xAxis:{},yAxis:{}},refresh:function(){var e=this;e._applyDefaults(e.options),h(e.options),e._bindSeries(),e._bindCategories(),e.trigger(mr),e._redraw()},redraw:function(e){var t,n,r=this;r._applyDefaults(r.options),e?(n=r._model._plotArea,t=n.findPane(e),n.redraw(t)):r._redraw()},_redraw:function(){var e,t=this,n=t._getModel();t._destroyView(),t._model=n,t._plotArea=n._plotArea,e=t._view=fn.ViewFactory.current.create(n.options,t.options.renderAs),e&&(e.load(n),t._viewElement=t._renderView(e),t._tooltip=t._createTooltip(),t._highlight=new Nt(e,t._viewElement),t._setupSelection())},_sharedTooltip:function(){var e=this,t=e.options;return e._plotArea instanceof Lt&&t.tooltip.shared},_createTooltip:function(){var e,t=this,n=t.options,r=t.element;return e=t._sharedTooltip()?new qt(r,t._plotArea,n.tooltip):new Wt(r,n.tooltip)},_renderView:function(){var e=this;return e._view.renderTo(e.element[0])},_applyDefaults:function(e,t){p(e,t),d(e,t)},_getModel:function(){var e,t=this,n=t.options,r=new An(t._modelOptions());return r.parent=t,Bn.buildTitle(n.title,r),e=r._plotArea=t._createPlotArea(),n.legend.visible&&r.append(new K(e.options.legend)),r.append(e),r.reflow(),r},_modelOptions:function(){var e=this,t=e.options,n=e.element,r=en.floor(n.height()),i=en.floor(n.width());return un({width:i||_r,height:r||wr,transitions:t.transitions},t.chartArea)},_createPlotArea:function(){var e=this,t=e.options;return X.current.create(t.series,t)},_setupSelection:function(){var e,t,n,r,i,o,a=this,s=a._plotArea,l=s.axes,c=a._selections=[];for(a._selectStartHandler||(a._selectStartHandler=nn(a._selectStart,a),a._selectHandler=nn(a._select,a),a._selectEndHandler=nn(a._selectEnd,a)),t=0;t<l.length;t++)n=l[t],o=n.options,n instanceof et&&o.select&&!o.vertical&&(r=0,i=o.categories.length-1,n instanceof nt&&(r=o.categories[r],i=o.categories[i]),o.justified||(n instanceof nt?i=_(i,1,o.baseUnit,o.weekStartDay):i++),e=new $t(a,n,un({min:r,max:i},o.select)),e.bind(mi,a._selectStartHandler),e.bind(vi,a._selectHandler),e.bind(xi,a._selectEndHandler),c.push(e))},_selectStart:function(e){return this.trigger(mi,e)},_select:function(e){return this.trigger(vi,e)},_selectEnd:function(e){return this.trigger(xi,e)},_attachEvents:function(){var e=this,t=e.element;t.on(dr,nn(e._click,e)),t.on(Qr,nn(e._mouseover,e)),t.on(Yr,nn(e._mouseout,e)),t.on(Jr,nn(e._mousewheel,e)),t.on(Vi,nn(e._tap,e)),t.on(Wr,nn(e._mouseleave,e)),(e._plotArea.crosshairs.length||e._tooltip&&e._sharedTooltip())&&t.on(Xr,nn(e._mousemove,e)),on.UserEvents&&(e._userEvents=new on.UserEvents(t,{global:!0,threshold:5,filter:":not(.k-selector)",multiTouch:!1,start:nn(e._start,e),move:nn(e._move,e),end:nn(e._end,e)}))},_mouseout:function(e){var t=this,n=t._model.modelMap[e.target.getAttribute("data-model-id")];n&&n.leave&&n.leave(t,e)},_start:function(e){var t=this,n=t._events;En(n[Tr]||n[Ar]||n[Sr])&&t._startNavigation(e,Tr)},_move:function(e){var t,n,r,i,o,a,s=this,l=s._navState,c={};if(l){for(e.preventDefault(),t=l.axes,n=0;n<t.length;n++)r=t[n],i=r.options.name,i&&(o=r.options.vertical?e.y:e.x,a=o.startLocation-o.location,0!==a&&(c[r.options.name]=r.translateRange(a)));l.axisRanges=c,s.trigger(Ar,{axisRanges:c,originalEvent:e})}},_end:function(e){this._endNavigation(e,Sr)},_mousewheel:function(e){var t,n,r,i,o,a,s=this,l=e.originalEvent,c=U(e),d=s._navState,u={};if(d||(t=s._startNavigation(l,Yi),t||(d=s._navState)),d){for(n=d.totalDelta||c,d.totalDelta=n+c,r=s._navState.axes,i=0;i<r.length;i++)o=r[i],a=o.options.name,a&&(u[a]=o.scaleRange(n));s.trigger(Xi,{delta:c,axisRanges:u,originalEvent:e}),s._mwTimeout&&clearTimeout(s._mwTimeout),s._mwTimeout=setTimeout(function(){s._endNavigation(e,$i)},Zr)}},_startNavigation:function(e,t){var n,r,i,o=this,a=o._eventCoordinates(e),s=o._model._plotArea,l=s.findPointPane(a),c=s.axes.slice(0),d=!1;if(l){for(n=0;n<c.length;n++)if(r=c[n],r.box.containsPoint(a)){d=!0;break}!d&&s.backgroundBox().containsPoint(a)&&(i=o.trigger(t,{axisRanges:F(c),originalEvent:e}),i?o._userEvents.cancel():(o._suppressHover=!0,o._unsetActivePoint(),o._navState={pane:l,axes:c}))}},_endNavigation:function(e,t){var n=this;n._navState&&(n.trigger(t,{axisRanges:n._navState.axisRanges,originalEvent:e}),n._suppressHover=!1,n._navState=null)},_getChartElement:function(t){var n,r=this,i=e(t.target).data("modelId"),o=r._model;return i&&(n=o.modelMap[i]),n&&n.aliasFor&&(n=n.aliasFor(t,r._eventCoordinates(t))),n},_eventCoordinates:function(e){var t=this,n=En((e.x||{}).client),r=n?e.x.client:e.clientX,i=n?e.y.client:e.clientY;return t._toModelCoordinates(r,i)},_toModelCoordinates:function(t,n){var r=this.element,i=r.offset(),o=parseInt(r.css("paddingLeft"),10),a=parseInt(r.css("paddingTop"),10),s=e(window);return new kn(t-i.left-o+s.scrollLeft(),n-i.top-a+s.scrollTop())},_click:function(e){for(var t=this,n=t._getChartElement(e);n;)n.click&&n.click(t,e),n=n.parent},_startHover:function(e){var n,r=this,i=r._tooltip,o=r._highlight,a=r.options.tooltip;if(!r._suppressHover&&o&&!zn(e.target,o._overlays)&&!r._sharedTooltip())return n=r._getChartElement(e),n&&n.hover&&(n.hover(r,e),!e.isDefaultPrevented())?(r._activePoint=n,a=un({},a,n.options.tooltip),a.visible&&i.show(n),o.show(n),!0):t},_mouseover:function(t){var n=this;n._startHover(t)&&e(document).on(qr,nn(n._mouseMoveTracking,n))},_mouseMoveTracking:function(t){var n,r,i,o=this,a=o.options,s=o._tooltip,l=o._highlight,c=o._eventCoordinates(t),d=o._activePoint;o._plotArea.box.containsPoint(c)?d&&d.series&&(d.series.type===zr||d.series.type===Qn)&&(r=d.parent,i=r.getNearestPoint(c.x,c.y,d.seriesIx),i&&i!=d&&(i.hover(o,t),o._activePoint=i,n=un({},a.tooltip,d.options.tooltip),n.visible&&s.show(i),l.show(i))):(e(document).off(qr),o._unsetActivePoint())},_mousemove:function(e){var t,n=this,r=new Date,i=n._mousemove.timestamp;(!i||r-i>$r)&&(t=n._eventCoordinates(e),n._trackCrosshairs(t),n._sharedTooltip()&&n._trackSharedTooltip(t),n._mousemove.timestamp=r)},_trackCrosshairs:function(e){var t,n,r=this._plotArea.crosshairs;for(t=0;t<r.length;t++)n=r[t],n.box.containsPoint(e)?n.showAt(e):n.hide()},_trackSharedTooltip:function(e){var t,n,r=this,i=r.options,o=r._plotArea,a=o.categoryAxis,s=r._tooltip,l=i.tooltip,c=r._highlight;t=a.pointCategoryIndex(e),t!==r._tooltipCategoryIx&&(n=o.pointsByCategoryIndex(t),n.length>0?(l.visible&&s.showAt(n,e),c.show(n)):s.hide(),r._tooltipCategoryIx=t)},_mouseleave:function(){var e,t=this,n=t._plotArea,r=n.crosshairs,i=t._tooltip,o=t._highlight;for(e=0;e<r.length;e++)r[e].hide();setTimeout(nn(i.hide,i),Ei),o.hide(),t._tooltipCategoryIx=null},_unsetActivePoint:function(){var e=this,t=e._tooltip,n=e._highlight;e._activePoint=null,t&&t.hide(),n&&n.hide()},_onDataChanged:function(){var e,t,n=this,r=n.options,i=n._sourceSeries||r.series,o=i.length,a=n.dataSource.view(),s=(n.dataSource.group()||[]).length>0,l=[];for(e=0;o>e;e++)t=i[e],n._isBindable(t)&&s?In(l,H(t,a)):l.push(t||[]);n._sourceSeries=i,r.series=l,h(n.options),n._bindSeries(),n._bindCategories(),n.trigger(mr),n._redraw()},_bindSeries:function(){var e,t,n,r,i=this,o=i.dataSource.view(),a=i.options.series,s=a.length;for(e=0;s>e;e++)t=a[e],i._isBindable(t)&&(n=t._groupIx,r=En(n)?(o[n]||{}).items:o,t.autoBind!==!1&&(t.data=r))},_bindCategories:function(){var e,t,n=this,r=n.dataSource.view()||[],i=(n.dataSource.group()||[]).length>0,o=r,a=n.options,s=[].concat(a.categoryAxis);for(i&&r.length&&(o=r[0].items),e=0;e<s.length;e++)t=s[e],t.autoBind!==!1&&n._bindCategoryAxis(t,o,e)},_bindCategoryAxis:function(e,t,n){var r,i,o,a=(t||[]).length;if(e.field)for(e.categories=[],r=0;a>r;r++)o=t[r],i=x(e.field,o),0===r?(e.categories=[i],e.dataItems=[o]):(e.categories.push(i),e.dataItems.push(o));else this._bindCategoryAxisFromSeries(e,n)},_bindCategoryAxisFromSeries:function(e,t){var n,r,i,o,a,s,l,c,d,u,h,f=this,p=[],g=f.options.series,m=g.length,v={};for(r=0;m>r;r++)if(i=g[r],o=i.categoryAxis===e.name||!i.categoryAxis&&0===t,a=i.data,l=a.length,i.categoryField&&o&&l>0)for(h=Q(e,x(i.categoryField,a[0])),u=h?y:x,s=0;l>s;s++)c=a[s],d=u(i.categoryField,c),(h||!v[d])&&(p.push([d,c]),h||(v[d]=!0));p.length>0&&(h&&(p=q(p,function(e,t){return On(e[0],t[0])})),n=Y(p),e.categories=n[0],e.dataItems=n[1])},_isBindable:function(e){var t,n,r=$.current.valueFields(e),i=!0;for(n=0;n<r.length;n++)if(t=r[n],t===Ri?t="field":t+="Field",!e[t]){i=!1;break}return i},_tap:function(e){var t=this;t._startHover(e)||t._unsetActivePoint(),t._click(e)},_legendItemClick:function(e,t){var n,r,i=this,o=i._plotArea,a=(o.srcSeries||o.series)[e];zn(a.type,[ai,Cr])?(n=a.data[t],n.visible=En(n.visible)?!n.visible:!1):a.visible=!a.visible,i.options.transitions&&(i.options.transitions=!1,r=!0),i.redraw(),r&&(i.options.transitions=!0)},_legendItemHover:function(e,t){var n,r,i=this,o=i._plotArea,a=i._highlight,s=(o.srcSeries||o.series)[e];n=zn(s.type,[ai,Cr])?t:e,r=o.pointsBySeriesIndex(n),a.show(r)},setOptions:function(e){var t=this;t._originalOptions=un(t._originalOptions,e),t.options=un({},t._originalOptions),t._sourceSeries=null,cn.fn.setOptions.call(t,e),t._initTheme(t.options),e.dataSource&&t.setDataSource(ln.create(e.dataSource))},destroy:function(){var t=this,n=t.dataSource;t.element.off(Wn),n.unbind(lr,t._dataChangeHandler),e(document).off(qr),t._userEvents&&t._userEvents.destroy(),t._destroyView(),cn.fn.destroy.call(t)},_destroyView:function(){var t=this,n=fn.IDPool.current,r=t._model,i=t._view,o=t._viewElement,a=t._selections;if(r&&r.destroy(),i&&(i.traverse(function(e){var t=e.options.id;t&&n.free(t)}),i.destroy()),o&&e("[id]",o).each(function(){n.free(e(this).attr("id"))}),a)for(;a.length>0;)a.shift().destroy()}});un(Ki.fn,fn.ExportMixin),X=an.extend({init:function(){this._registry=[]},register:function(e,t){this._registry.push({type:e,seriesTypes:t})},create:function(e,t){var n,r,i,o=this._registry,a=o[0];for(n=0;n<o.length;n++)if(r=o[n],i=N(e,r.seriesTypes),i.length>0){a=r;break}return new a.type(i,t)}}),X.current=new X,$=an.extend({init:function(){this._valueFields={},this._otherFields={},this._nullValues={}},register:function(e,t,n){var r,i,o=this;for(t=t||[Ri],r=0;r<e.length;r++)i=e[r],o._valueFields[i]=t,o._otherFields[i]=n,o._nullValues[i]=o._makeNullValue(t)},valueFields:function(e){return this._valueFields[e.type]||[Ri]},otherFields:function(e){return this._otherFields[e.type]||[Ri]},bindPoint:function(e,t){var n,r,i,o,a,s=this,l=e.data,c=l[t],d={value:c},u=s.valueFields(e),h=s._otherFields[e.type];return null!==c&&En(c)?Jt(c)?(r=c.slice(u.length),a=s._bindFromArray(c,u),n=s._bindFromArray(r,h)):typeof c===ni&&(i=s._mapSeriesFieldsByIndex(e,u),o=s._mapSeriesFieldsByIndex(e,h),a=s._bindFromObject(c,u,i),n=s._bindFromObject(c,h,o)):a=s._nullValues[e.type],En(a)&&(1===u.length&&(a=a[u[0]]),d.value=a),d.fields=n||{},d},_makeNullValue:function(e){var t,n,r={},i=e.length;for(t=0;i>t;t++)n=e[t],r[n]=null;return r},_bindFromArray:function(e,t){var n,r,i={};if(t)for(r=en.min(t.length,e.length),n=0;r>n;n++)i[t[n]]=e[n];return i},_bindFromObject:function(e,t,n){var r,i,o,a,s={};if(t)for(i=t.length,n=n||t,r=0;i>r;r++)o=t[r],a=n[r],s[o]=x(a,e);return s},_mapSeriesFieldsByIndex:function(e,t){var n,r,i,o,a;if(t)for(r=t.length,o=[],n=0;r>n;n++)i=t[n],a=i===Ri?"field":i+"Field",o.push(e[a]||i);return o},_mapSeriesFields:function(e,t){var n,r,i,o,a;if(t)for(r=t.length,o={},n=0;r>n;n++)i=t[n],a=i===Ri?"field":i+"Field",o[i]=e[a]||i;return o}}),$.current=new $,Z=yn.extend({init:function(e,t){var n=this;yn.fn.init.call(n,t),n.append(new Dn(e,n.options))},options:{position:ii,margin:Rn(3),padding:Rn(4),color:er,background:"",border:{width:1,color:""},aboveAxis:!0,vertical:!1,animation:{type:Pr,delay:Mr},zIndex:1},reflow:function(e){var t=this,n=t.options,r=n.vertical,i=n.aboveAxis,o=t.children[0],a=o.box,s=o.options.padding;o.options.align=r?sr:Or,o.options.vAlign=r?Bi:sr,n.position==Lr?r?(o.options.vAlign=Bi,!i&&a.height()<e.height()&&(o.options.vAlign=nr)):o.options.align=i?di:Or:n.position==sr?(o.options.vAlign=sr,o.options.align=sr):n.position==Ir?r?o.options.vAlign=i?nr:Bi:o.options.align=i?Or:di:n.position==ii&&(r?e=i?new vn(e.x1,e.y1-a.height(),e.x2,e.y1):new vn(e.x1,e.y2,e.x2,e.y2+a.height()):(o.options.align=sr,e=i?new vn(e.x2+a.width(),e.y1,e.x2,e.y2):new vn(e.x1-a.width(),e.y1,e.x1,e.y2))),r?s.left=s.right=(e.width()-o.contentBox.width())/2:s.top=s.bottom=(e.height()-o.contentBox.height())/2,o.reflow(e)}}),J=Pn.extend({init:function(e,t){var n=this;n.item=e,Pn.fn.init.call(n,e.text,un({id:Nn(),cursor:{style:ci}},t)),n.enableDiscovery()},click:function(e,t){var n=this.eventArgs(t);e.trigger(Vr,n)||(t.preventDefault(),e._legendItemClick(n.seriesIndex,n.pointIndex))},hover:function(e,t){var n=this.eventArgs(t);e.trigger(Rr,n)||(t.preventDefault(),e._legendItemHover(n.seriesIndex,n.pointIndex))},leave:function(e){e._unsetActivePoint()},eventArgs:function(t){var n=this.item;return{element:e(t.target),text:n.text,series:n.series,seriesIndex:n.series.index,pointIndex:n.pointIndex}}}),K=yn.extend({init:function(e){var t=this;yn.fn.init.call(t,e),t.createLabels()},options:{position:di,items:[],labels:{},offsetX:0,offsetY:0,margin:Rn(10),padding:Rn(5),border:{color:er,width:0},background:"",zIndex:1,markers:{border:{width:1}}},createLabels:function(){var e,t,n=this,r=n.options.items,i=r.length;for(e=0;i>e;e++)t=r[e],n.append(new J(t,un({},n.options.labels,{color:t.labelColor})))},reflow:function(e){var n=this,r=n.options,i=n.children.length;return 0===i?(n.box=e.clone(),t):"custom"==r.position?(n.customLayout(e),t):(r.position==Bi||r.position==nr?n.horizontalLayout(e):n.verticalLayout(e),t)},getViewElements:function(e){var t,n,r,i,o,a,s,l=this,c=l.children,d=l.options,u=d.items,h=u.length,f=l.markerSize(),p=e.createGroup({zIndex:d.zIndex}),g=d.border||{};for(In(p.children,yn.fn.getViewElements.call(l,e)),s=0;h>s;s++)i=u[s].markerColor,o=c[s],n=vn(),a=o.box,r=r?r.wrap(a):a.clone(),n.x1=a.x1-2*f,n.x2=n.x1+f,n.y1=d.position==Bi||d.position==nr?a.y1+f/2:a.y1+(a.height()-f)/2,n.y2=n.y1+f,p.children.push(e.createRect(n,{fill:i,stroke:i,strokeWidth:d.markers.border.width,data:{modelId:o.options.modelId},cursor:{style:ci}}));return c.length>0&&(t=Rn(d.padding),t.left+=2*f,r.pad(t),p.children.unshift(e.createRect(r,{stroke:g.width?g.color:"",strokeWidth:g.width,dashType:g.dashType,fill:d.background}))),[p]},verticalLayout:function(e){var t,n,r,i,o,a=this,s=a.options,l=a.children,c=l.length,d=l[0].box.clone(),u=Rn(s.margin),h=2*a.markerSize();for(i=1;c>i;i++)r=a.children[i],r.box.alignTo(a.children[i-1].box,nr),d.wrap(r.box);s.position==Or?(t=e.x1+h+u.left,n=(e.y2-d.height())/2,d.x2+=h+u.left+u.right):(t=e.x2-d.width()-u.right,n=(e.y2-d.height())/2,d.translate(t,n),d.x1-=h+u.left),a.translateChildren(t+s.offsetX,n+s.offsetY),o=d.width(),d.x1=en.max(e.x1,d.x1),d.x2=d.x1+o,d.y1=e.y1,d.y2=e.y2,a.box=d},horizontalLayout:function(e){var t,n,r,i,o=this,a=o.options,s=o.children,l=s.length,c=s[0].box.clone(),d=3*o.markerSize(),u=Rn(a.margin),h=s[0].box.width()+d,f=e.width(),p=0;for(i=1;l>i;i++)r=s[i],h+=r.box.width()+d,h>f-d?(r.box=vn(c.x1,c.y2,c.x1+r.box.width(),c.y2+r.box.height()),h=r.box.width()+d,p=r.box.y1):(r.box.alignTo(s[i-1].box,di),r.box.y2=p+r.box.height(),r.box.y1=p,r.box.translate(d,0)),c.wrap(r.box);t=(e.width()-c.width()+d)/2,a.position===Bi?(n=e.y1+u.top,c.y2=e.y1+c.height()+u.top+u.bottom,c.y1=e.y1):(n=e.y2-c.height()-u.bottom,c.y1=e.y2-c.height()-u.top-u.bottom,c.y2=e.y2),o.translateChildren(t+a.offsetX,n+a.offsetY),c.x1=e.x1,c.x2=e.x2,o.box=c},customLayout:function(e){var t,n=this,r=n.options,i=n.children,o=i.length,a=i[0].box.clone(),s=2*n.markerSize();for(t=1;o>t;t++)a=n.children[t].box,a.alignTo(n.children[t-1].box,nr),a.wrap(a);n.translateChildren(r.offsetX+s,r.offsetY),n.box=e},markerSize:function(){var e=this,t=e.children;return t.length>0?t[0].box.height()/2:0}}),et=pn.extend({init:function(e){var t=this;pn.fn.init.call(t,e),e=t.options,e.categories=e.categories.slice(0),t._ticks={}},options:{type:ar,categories:[],vertical:!1,majorGridLines:{visible:!1,width:1,color:er},zIndex:1,justified:!1},range:function(){return{min:0,max:this.options.categories.length}},getTickPositions:function(e){var t,n=this,r=n.options,i=r.vertical,o=r.justified,a=n.lineBox(),s=i?a.height():a.width(),l=e-(o?1:0),c=s/l,d=i?Gi:Ni,u=a[d+1],h=[];for(t=0;e>t;t++)h.push(jn(u,pr)),u+=c;return o||h.push(a[d+2]),r.reverse?h.reverse():h},getMajorTickPositions:function(){return this.getTicks().majorTicks},getMinorTickPositions:function(){return this.getTicks().minorTicks},getTicks:function(){var e,t=this,n=t._ticks,r=t.options,i=r.categories.length,o=r.reverse,a=r.justified,s=t.lineBox();return e=s.getHash()+i+o+a,n._hash!==e&&(n._hash=e,n.majorTicks=t.getTickPositions(i),n.minorTicks=t.getTickPositions(2*i)),n},getSlot:function(e,t){var n,r,i,o=this,a=o.options,s=o.getMajorTickPositions(),l=a.reverse,c=a.justified,d=a.vertical?Gi:Ni,u=o.lineBox(),h=u[d+(l?2:1)],f=u[d+(l?1:2)],p=u.clone(),g=en.max(1,s.length-(c?0:1));return e=Gn(e,0),t=Gn(t,e),e=B(e,0,g),t=B(t-1,e,g),t=en.max(e,t),n=0===e?h:s[e]||f,r=c?n:s[t],i=t-e,(i>0||e===t)&&(r=s[t+1]||f),c&&(e===g?n=r:r=n),p[d+1]=l?r:n,p[d+2]=l?n:r,p},pointCategoryIndex:function(e){var t,n,r,i,o=this,a=o.options,s=a.reverse,l=a.vertical,c=l?Gi:Ni,d=o.lineBox(),u=d[c+1],h=d[c+2],f=e[c],p=o.getMajorTickPositions(),g=jr;if(u>f||f>h)return null;for(r=0;r<p.length;r++)if(t=p[r],n=p[r+1],En(n)||(n=s?u:h),s&&(t=n,n=p[r]),a.justified){if(f===n){i=en.max(0,l?p.length-r-1:r+1);break}en.abs(f-t)<g&&(g=f-t,i=r)}else if(f>=t&&n>=f){i=r;break}return i},getCategory:function(e){var t=this.pointCategoryIndex(e);return null===t?null:this.options.categories[t]},categoryIndex:function(e){return G(e,this.options.categories)},translateRange:function(e){var t=this,n=t.options,r=t.lineBox(),i=n.vertical?r.height():r.width(),o=n.categories.length,a=i/o,s=jn(e/a,br);return{min:s,max:o+s}},scaleRange:function(e){var t=this,n=t.options,r=n.categories.length,i=e*r;return{min:-i,max:r+i}},labelsCount:function(){return this.options.categories.length},createAxisLabel:function(e,t){var n=this,r=n.options,i=r.dataItems?r.dataItems[e]:null,o=Gn(r.categories[e],"");return new gn(o,e,i,t)},shouldRenderNote:function(){return this.options.categories.length}}),tt=gn.extend({formatValue:function(e,t){return on.toString(e,t.format,t.culture)}}),nt=et.extend({init:function(e){var t,n,r=this;e=e||{},e=un({roundToBaseUnit:!0},e,{categories:w(e.categories),min:w(e.min),max:w(e.max)}),e.categories&&e.categories.length>0&&(t=(e.baseUnit||"").toLowerCase(),n=t!==Xn&&!zn(t,Zi),n&&(e.baseUnit=r.defaultBaseUnit(e)),(t===Xn||e.baseUnitStep===Yn)&&r.autoBaseUnit(e),r.groupCategories(e)),et.fn.init.call(r,e)},options:{type:vr,labels:{dateFormats:Ji},autoBaseUnitSteps:{seconds:[1,2,5,15,30],minutes:[1,2,5,15,30],hours:[1,2,3],days:[1,2,3],weeks:[1,2],months:[1,2,3,6],years:[1,2,3,5,10,25,50]},maxDateGroups:10},shouldRenderNote:function(e){var t=this,n=t.range(),r=t.options.categories||[];return On(e,n.min)>=0&&On(e,n.max)<=0&&r.length},parseNoteValue:function(e){return w(e)},translateRange:function(e){var t=this,n=et.fn.translateRange.call(t,e),r=t.options,i=r.baseUnit,o=en.round(n.min),a=r.weekStartDay;return{min:_(r.min,o,i,a),max:_(r.max,o,i,a)}},scaleRange:function(e){var t,n=this,r=n.options,i=en.abs(e),o=n.range(),a=o.min,s=o.max;if(r.categories.length>0){for(;i--;)o=S(a,s),t=en.round(.1*o),0>e?(a=T(a,t),s=T(s,-t)):(a=T(a,-t),s=T(s,t));return{min:a,max:s}}},defaultBaseUnit:function(e){var t,n,r,i,o,a=e.categories,s=En(a)?a.length:0,l=jr;for(t=0;s>t;t++)n=a[t],n&&i&&(r=S(n,i),r>0&&(l=en.min(l,r),o=l>=Pi?Wi:l>=Ti-3*Ai?Gr:l>=Si?ji:l>=Ai?xr:l>=ki?Br:l>=Ci?Nr:gi)),i=n;return o||xr},range:function(e){e=e||this.options;var t=e.categories,n=e.baseUnit===Xn,r=n?Zi[0]:e.baseUnit,i=e.baseUnitStep||1,o=b(e.min),a=b(e.max),l=s(t),c=b(l.min),d=b(l.max);return e.roundToBaseUnit?{min:_(o||c,0,r,e.weekStartDay),max:_(a||d,i,r,e.weekStartDay)}:{min:w(o||c),max:w(a||d)}},autoBaseUnit:function(e){for(var t,n,r,i=this,o=i.range(un({},e,{baseUnitStep:1})),a=e.baseUnit===Xn,s=0,l=a?Zi[s++]:e.baseUnit,c=o.max-o.min,d=c/Di[l],u=d,h=e.maxDateGroups||i.options.maxDateGroups,f=un({},i.options.autoBaseUnitSteps,e.autoBaseUnitSteps);!n||d>h;)if(t=t||f[l].slice(0),r=t.shift())n=r,d=u/n;else{if(l===Un(Zi)){n=en.ceil(u/h);break}if(!a){d>h&&(n=en.ceil(u/h));break}l=Zi[s++]||Un(Zi),u=c/Di[l],t=null}e.baseUnitStep=n,e.baseUnit=l},getMajorTickPositions:function(){var e,t,n,r,i,o,a,s,l,c,d,u,h,f,p,g,m,v=this,x=v.options,y=x.categories,w=[];if(x.roundToBaseUnit||0===y.length)w=et.fn.getMajorTickPositions.call(v);else{for(n=x.vertical,r=x.reverse,i=v.lineBox(),o=n?i.height():i.width(),a=y[0].getTime(),s=v.range(v.options),l=s.max-s.min,c=o/l,d=y.length,u=(n?-1:1)*(r?-1:1),h=1===u?1:2,f=1===u?2:1,p=i[(n?Gi:Ni)+h],g=i[(n?Gi:Ni)+f],m=p,e=0;d>e;e++)t=y[e]-a,m=p+t*c*u,w.push(jn(m,pr));Un(w)!==g&&w.push(g)}return w},groupCategories:function(e){var t,n,r=this,i=e.categories,o=w(a(i)),s=e.baseUnit,l=e.baseUnitStep||1,c=r.range(e),d=c.max,u=[];for(t=c.min;d>t&&(u.push(t),n=_(t,l,s,e.weekStartDay),!(n>o)||e.max);t=n);e.roundToBaseUnit||L(Un(u),d)||u.push(d),e.srcCategories=i,e.categories=u},createAxisLabel:function(e,t){var n,r=this.options,i=r.dataItems?r.dataItems[e]:null,o=r.categories[e],a=r.baseUnit,s=!0,l=t.dateFormats[a];return r.justified&&(n=k(o,a,r.weekStartDay),s=L(n,o)),t=un({format:l},t,{visible:s}),new tt(o,e,i,t)},categoryIndex:function(e,t){var n,r,i,o=this,a=o.options,s=a.categories,l=s.length-1;return e=w(e),t=t||o.range(),r=a.roundToBaseUnit&&L(t.max,e),!e||e>t.max||e<t.min||r?-1:(i=V(e,s),i!==l||a.justified||a.roundToBaseUnit||(n=_(e,0,a.baseUnit,a.startOfWeek),L(n,e)||i--),i)},getSlot:function(e,t){var n=this;return typeof e===ni&&(e=n.categoryIndex(e)),typeof t===ni&&(t=n.categoryIndex(t)),et.fn.getSlot.call(n,e,t)
}}),rt=pn.extend({init:function(e,t,n){var r=this;n=n||{},un(n,{min:w(n.min),max:w(n.max),axisCrossingValue:w(n.axisCrossingValues||n.axisCrossingValue)}),n=r.applyDefaults(w(e),w(t),n),pn.fn.init.call(r,n)},options:{type:vr,labels:{dateFormats:Ji}},applyDefaults:function(e,n,r){var i=this,o=r.min||e,a=r.max||n,s=r.baseUnit||i.timeUnits(a-o),l=Di[s],c=k(b(o)-1,s)||w(a),d=A(b(a)+1,s),u=r.majorUnit?r.majorUnit:t,h=u||fn.ceil(fn.autoMajorUnit(c.getTime(),d.getTime()),l)/l,f=P(c,d,s),p=fn.ceil(f,h),g=p-f,m=en.floor(g/2),v=g-m;return r.baseUnit||delete r.baseUnit,un({baseUnit:s,min:_(c,-m,s),max:_(d,v,s),minorUnit:h/5},r,{majorUnit:h})},range:function(){var e=this.options;return{min:e.min,max:e.max}},getDivisions:function(e){var t=this.options;return en.floor(P(t.min,t.max,t.baseUnit)/e+1)},getTickPositions:function(e){var t,n=this,r=n.options,i=r.vertical,o=r.reverse,a=n.lineBox(),s=i?a.height():a.width(),l=P(r.min,r.max,r.baseUnit),c=s/l,d=e*c,u=n.getDivisions(e),h=(i?-1:1)*(o?-1:1),f=1===h?1:2,p=a[(i?Gi:Ni)+f],g=[];for(t=0;u>t;t++)g.push(jn(p,pr)),p+=d*h;return g},getMajorTickPositions:function(){var e=this;return e.getTickPositions(e.options.majorUnit)},getMinorTickPositions:function(){var e=this;return e.getTickPositions(e.options.minorUnit)},getSlot:function(e,t){return Cn.fn.getSlot.call(this,w(e),w(t))},getValue:function(e){var t=Cn.fn.getValue.call(this,e);return null!==t?w(t):null},labelsCount:function(){return this.getDivisions(this.options.majorUnit)},createAxisLabel:function(e,t){var n=this.options,r=e*n.majorUnit,i=_(n.min,r,n.baseUnit),o=t.dateFormats[n.baseUnit];return t.format=t.format||o,new tt(i,e,null,t)},timeUnits:function(e){var t=Br;return e>=Pi?t=Wi:e>=Ti?t=Gr:e>=Si?t=ji:e>=Ai&&(t=xr),t},translateRange:function(e){var t=this,n=t.options,r=n.baseUnit,i=n.weekStartDay,o=t.lineBox(),a=n.vertical?o.height():o.width(),s=t.range(),l=a/(s.max-s.min),c=jn(e/l,br),d=T(n.min,c),u=T(n.max,c);return{min:_(d,0,r,i),max:_(u,0,r,i)}},scaleRange:function(e){for(var t,n,r=this,i=r.options,o=i.baseUnit,a=i.weekStartDay,s=en.abs(e),l=i.min,c=i.max;s--;)t=S(l,c),n=en.round(.1*t),0>e?(l=T(l,n),c=T(c,-n)):(l=T(l,-n),c=T(c,n)),l=_(l,0,o,a),c=_(c,1,o,a);return{min:l,max:c}}}),it=yn.extend({options:{vertical:!1,gap:0,spacing:0},reflow:function(e){var t,n,r=this,i=r.options,o=i.vertical,a=o?Gi:Ni,s=r.children,l=i.gap,c=i.spacing,d=s.length,u=d+l+c*(d-1),h=(o?e.height():e.width())/u,f=e[a+1]+h*(l/2);for(n=0;d>n;n++)t=(s[n].box||e).clone(),t[a+1]=f,t[a+2]=f+h,s[n].reflow(t),d-1>n&&(f+=h*c),f+=h}}),ot=yn.extend({options:{vertical:!0,isReversed:!1},reflow:function(e){var t,n,r,i,o=this,a=o.options,s=a.vertical,l=s?Ni:Gi,c=s?Gi:Ni,d=e[c+2],u=o.children,h=o.box=new vn,f=u.length;for(t=a.isReversed?s?nr:Or:s?Bi:di,n=0;f>n;n++)r=u[n],i=r.box.clone(),i.snapTo(e,l),r.options&&(r.options.stackBase=d),0===n?h=o.box=i.clone():i.alignTo(u[n-1].box,t),r.reflow(i),h.wrap(i)}}),at={click:function(t,n){var r=this;t.trigger(yi,{value:r.value,category:r.category,series:r.series,dataItem:r.dataItem,element:e(n.target)})},hover:function(t,n){var r=this;t.trigger(wi,{value:r.value,category:r.category,series:r.series,dataItem:r.dataItem,element:e(n.target)})}},st=yn.extend({init:function(e,t){var n=this;yn.fn.init.call(n,t),n.value=e,n.options.id=Nn(),n.enableDiscovery()},options:{color:Hi,border:{width:1},vertical:!0,overlay:{gradient:Dr},aboveAxis:!0,labels:{visible:!1},animation:{type:Zn},opacity:1,notes:{label:{}}},render:function(){var e,t=this,n=t.value,r=t.options,i=r.labels,o=n;t._rendered||(t._rendered=!0,i.visible&&n&&(i.template?(e=dn(i.template),o=e({dataItem:t.dataItem,category:t.category,value:t.value,series:t.series})):i.format&&(o=Ln(i.format,o)),t.append(new Z(o,un({vertical:r.vertical,id:Nn()},r.labels)))),t.creteNote())},creteNote:function(){var e,t=this,n=t.options.notes,r=n.label.text;n.visible&&En(r)&&null!==r&&(n.label.template?(e=dn(n.label.template),r=e({dataItem:t.dataItem,category:t.category,value:t.value,series:t.series})):n.label.format&&(r=Ln(n.label.format,r)),t.note=new _n(un({},n,{label:{text:r}})),t.append(t.note))},reflow:function(e){this.render();var t=this,n=t.options,r=t.children,i=r[0];t.box=e,i&&(i.options.aboveAxis=n.aboveAxis,i.reflow(e)),t.note&&t.note.reflow(e)},getViewElements:function(e){var t=this,n=t.options,r=n.vertical,i=n.border.width>0?{stroke:t.getBorderColor(),strokeWidth:n.border.width,strokeOpacity:n.border.opacity,dashType:n.border.dashType}:{},o=t.box,a=un({id:n.id,fill:n.color,fillOpacity:n.opacity,strokeOpacity:n.opacity,vertical:n.vertical,aboveAxis:n.aboveAxis,stackBase:n.stackBase,animation:n.animation,data:{modelId:n.modelId}},i),s=[];return o.width()>0&&o.height()>0&&(n.overlay&&(a.overlay=un({rotation:r?0:90},n.overlay)),s.push(e.createRect(o,a))),In(s,yn.fn.getViewElements.call(t,e)),s},highlightOverlay:function(e,t){var n=this,r=n.box;return t=un({data:{modelId:n.options.modelId}},t),t.id=null,e.createRect(r,t)},getBorderColor:function(){var e=this,t=e.options,n=t.color,r=t.border,i=r.color,o=r._brightness||Jn;return En(i)||(i=new wn(n).brightness(o).toHex()),i},tooltipAnchor:function(e,t){var n,r,i=this,o=i.options,a=i.box,s=o.vertical,l=o.aboveAxis;return s?(n=a.x2+Ii,r=l?a.y1:a.y2-t):o.isStacked?(n=l?a.x2-e:a.x1,r=a.y1-t-Ii):(n=l?a.x2+Ii:a.x1-e-Ii,r=a.y1),new kn(n,r)},formatValue:function(e){var t=this;return t.owner.formatPointValue(t,e)}}),un(st.fn,at),lt=yn.extend({init:function(e,t){var n=this;yn.fn.init.call(n,t),n.plotArea=e,n.categoryAxis=e.seriesCategoryAxis(t.series[0]),n.valueAxisRanges={},n.points=[],n.categoryPoints=[],n.seriesPoints=[],n.render()},options:{series:[],invertAxes:!1,isStacked:!1},render:function(){var e=this;e.traverseDataPoints(nn(e.addValue,e))},addValue:function(e,t,n,r,i){var o,a=this,s=e.value,l=a.categoryPoints[n],c=a.seriesPoints[i];l||(a.categoryPoints[n]=l=[]),c||(a.seriesPoints[i]=c=[]),a.updateRange(s,n,r),o=a.createPoint(e,t,n,r,i),o&&(o.category=t,o.series=r,o.seriesIx=i,o.owner=a,o.dataItem=r.data[n]),a.points.push(o),c.push(o),l.push(o)},evalPointOptions:function(e,t,n,r,i){j(e,{value:t,series:i,dataItem:i.data[r],category:n,index:r},{defaults:i._defaults,excluded:["data","aggregate"]})},updateRange:function(e,t,n){var r=this,i=n.axis,o=r.valueAxisRanges[i];z(e)&&(o=r.valueAxisRanges[i]=o||{min:jr,max:Hr},o.min=en.min(o.min,e),o.max=en.max(o.max,e))},seriesValueAxis:function(e){var t=this.plotArea,n=e.axis,r=n?t.namedValueAxes[n]:t.valueAxis;if(!r)throw Error("Unable to locate value axis with name "+n);return r},reflow:function(e){var t,n,r,i,o=this,a=0,s=o.categorySlots=[],l=o.points,c=o.categoryAxis;o.traverseDataPoints(function(e,d,u,h){t=o.pointValue(e),n=o.seriesValueAxis(h),r=o.categoryAxisCrossingValue(n),i=l[a++],i&&i.plotValue&&(t=i.plotValue);var f=o.categorySlot(c,u,n),p=o.valueSlot(n,t,r),g=o.pointSlot(f,p),m=n.options.reverse?r>t:t>=r;i&&(i.options.aboveAxis=m,o.reflowPoint(i,g)),s[u]||(s[u]=f)}),o.reflowCategories(s),o.box=e},categoryAxisCrossingValue:function(e){var t=this.categoryAxis,n=e.options,r=[].concat(n.axisCrossingValues||n.axisCrossingValue);return r[t.axisIndex||0]||0},reflowPoint:function(e,t){e.reflow(t)},reflowCategories:function(){},pointSlot:function(e,t){var n=this,r=n.options,i=r.invertAxes,o=i?t:e,a=i?e:t;return new vn(o.x1,a.y1,o.x2,a.y2)},valueSlot:function(e,t,n){return e.getSlot(t,n)},categorySlot:function(e,t){return e.getSlot(t)},_traverseDataPoints:function(e){var t,n,r,i,o,a,s,l,c,d,u,h=this,f=h.options,p=f.series,g=h.plotArea,m=p.length;for(n=0;m>n;n++)for(o=p[n],a=g.seriesCategoryAxis(o),s=a.options.categories||[],l=o.data,c=l.length,d=0;c>d;d++)r=$.current.bindPoint(o,d),u=r.fields.category,t=u?G(u,s):d,i=s[t],e(r,i,t,o,n)},traverseDataPoints:function(e){var t,n,r,i,o,a=this,s=a.options,l=s.series,c=a.categoryAxis.options.categories||[],d=m(l),u=l.length;for(t=0;d>t;t++)for(n=0;u>n;n++)o=l[n],i=c[t],r=$.current.bindPoint(o,t),e(r,i,t,o,n)},formatPointValue:function(e,t){return Ln(t,e.value)},pointValue:function(e){return e.value}}),ct=lt.extend({init:function(e,t){var n=this;n._groupTotals={},n._groups=[],lt.fn.init.call(n,e,t)},render:function(){var e=this;lt.fn.render.apply(e),e.computeAxisRanges()},pointType:function(){return st},clusterType:function(){return it},stackType:function(){return ot},createPoint:function(e,n,r,i){var o,a,s,l,c,d,u=this,h=e.value,f=u.options,p=u.children,g=u.options.isStacked,m=un({},i.labels),v=u.pointType(),x=u.clusterType(),y=u.stackType();return g&&m.position==ii&&(m.position=Lr),a=un({vertical:!f.invertAxes,overlay:i.overlay,labels:m,isStacked:g},i,{color:e.fields.color||t,notes:{label:{text:e.fields.noteText}}}),0>h&&a.negativeColor&&(a.color=a.negativeColor),u.evalPointOptions(a,h,n,r,i),o=new v(h,a),s=p[r],s||(s=new x({vertical:f.invertAxes,gap:f.gap,spacing:f.spacing}),u.append(s)),g?(d=u.getStackWrap(i,s),0===d.children.length?(l=new y({vertical:!f.invertAxes}),c=new y({vertical:!f.invertAxes,isReversed:!0}),d.append(l,c)):(l=d.children[0],c=d.children[1]),h>0?l.append(o):c.append(o)):s.append(o),o},getStackWrap:function(e,t){var n,r,i=t.children,o=e.stack,a=i.length;if(typeof o===bi){for(r=0;a>r;r++)if(i[r]._stackGroup===o){n=i[r];break}}else n=i[0];return n||(n=new yn,n._stackGroup=o,t.append(n)),n},updateRange:function(e,t,n){var r,i=this,o=i.options.isStacked;En(e)&&(o?(r=i.groupTotals(n.stack),g(e>0?r.positive:r.negative,t,e)):lt.fn.updateRange.apply(i,arguments))},computeAxisRanges:function(){var e,t,n=this,r=n.options.isStacked;r&&(e=n.options.series[0].axis,t=n.categoryTotals(),n.valueAxisRanges[e]={min:o(t.negative.concat(0)),max:a(t.positive.concat(0))})},seriesValueAxis:function(e){var t=this,n=t.options;return lt.fn.seriesValueAxis.call(t,n.isStacked?t.options.series[0]:e)},valueSlot:function(e,t,n){return e.getSlot(t,this.options.isStacked?0:n)},categorySlot:function(e,t,n){var r,i,o=this,a=o.options,s=e.getSlot(t);return a.isStacked&&(i=n.getSlot(0,0),r=a.invertAxes?Ni:Gi,s[r+1]=s[r+2]=i[r+1]),s},reflow:function(e){var t=this;t.setStacksDirection(),lt.fn.reflow.call(t,e)},setStacksDirection:function(){var e,t,n,r,i,o,a,s,l,c=this,d=c.options,u=d.series,h=m(u),f=c.children,p=u.length;for(t=0;p>t;t++)for(n=u[t],r=c.seriesValueAxis(n),e=0;h>e;e++)i=f[e],o=c.getStackWrap(n,i),a=o.children,s=a[0],l=a[1],s&&l&&(s.options.isReversed=r.options.reverse,l.options.isReversed=!r.options.reverse)},reflowCategories:function(e){var t,n=this,r=n.children,i=r.length;for(t=0;i>t;t++)r[t].reflow(e[t])},groupTotals:function(e){var t,n,r=this;return t=typeof e===bi?e:r._groups[0]||"default",n=r._groupTotals[t],n||(n=r._groupTotals[t]={positive:[],negative:[]},r._groups.push(t)),n},categoryTotals:function(){var e,t,n,r=this,i=r._groups,o=r._groupTotals,a={positive:[],negative:[]},s=i.length;for(n=0;s>n;n++)e=i[n],t=o[e],In(a.positive,t.positive),In(a.negative,t.negative);return a}}),dt=lt.extend({init:function(e,t){var n=this;n.wrapData(t),lt.fn.init.call(n,e,t)},wrapData:function(e){var t,n,r,i=e.series;for(t=0;t<i.length;t++)r=i[t],n=r.data,n&&!Jt(n[0])&&typeof n[0]!=ni&&(r.data=[n])},addValue:function(e,t,n,r,i){var o,a=this,s=a.categoryPoints[n],l=a.seriesPoints[i];s||(a.categoryPoints[n]=s=[]),l||(a.seriesPoints[i]=l=[]),a.updateRange(e.value,n,r),o=a.createPoint(e,t,n,r),o&&(o.category=t,o.series=r,o.seriesIx=i,o.owner=a,o.dataItem=r.data[n]),a.points.push(o),l.push(o),s.push(o)},reflowCategories:function(e){var t,n=this,r=n.children,i=r.length;for(t=0;i>t;t++)r[t].reflow(e[t])},createPoint:function(e,t,n,r){var i,o,a,s=this,l=e.value,c=s.options,d=s.children;return o=un({},{vertical:!c.invertAxes,overlay:r.overlay,categoryIx:n,invertAxes:c.invertAxes},r,{notes:{label:{text:e.fields.noteText}}}),s.evalPointOptions(o,l,t,n,r),i=new ut(l,o),a=d[n],a||(a=new it({vertical:c.invertAxes,gap:c.gap,spacing:c.spacing}),s.append(a)),a.append(i),i},updateRange:function(e,t,n){var r=this,i=n.axis,o=e.current,a=e.target,s=r.valueAxisRanges[i];En(o)&&!isNaN(o)&&En(a&&!isNaN(a))&&(s=r.valueAxisRanges[i]=s||{min:jr,max:Hr},s.min=en.min.apply(en,[s.min,o,a]),s.max=en.max.apply(en,[s.max,o,a]))},formatPointValue:function(e,t){return Ln(t,e.value.current,e.value.target)},pointValue:function(e){return e.value.current}}),ut=yn.extend({init:function(e,t){var n=this;yn.fn.init.call(n,t),n.value=e,n.options.id=Nn(),n.enableDiscovery(),n.render()},options:{color:Hi,border:{width:1},vertical:!1,animation:{type:Zn},opacity:1,target:{shape:"",border:{width:0,color:"green"},line:{width:2}},tooltip:{format:"Current: {0}</br>Target: {1}"}},render:function(){var e=this,t=e.options;e.target=new ht({id:e.options.id,type:t.target.shape,background:t.target.color||t.color,opacity:t.opacity,zIndex:t.zIndex,border:t.target.border,vAlign:Bi,align:di}),e.append(e.target),e.creteNote()},creteNote:function(){var e,t=this,n=t.options.notes,r=n.label.text;n.visible&&En(r)&&null!==r&&(n.label.template?(e=dn(n.label.template),r=e({dataItem:t.dataItem,category:t.category,value:t.value,series:t.series})):n.label.format&&(r=Ln(n.label.format,r)),t.note=new _n(un({},n,{label:{text:r}})),t.append(t.note))},reflow:function(e){var t=this,n=t.options,r=t.owner,i=t.target,o=n.invertAxes,a=r.seriesValueAxis(t.options),s=r.categorySlot(r.categoryAxis,n.categoryIx,a),l=r.valueSlot(a,t.value.target,t.value.target),c=o?l:s,d=o?s:l,u=new vn(c.x1,d.y1,c.x2,d.y2);i.options.height=o?u.height():n.target.line.width,i.options.width=o?n.target.line.width:u.width(),i.reflow(u),t.note&&t.note.reflow(e),t.box=e},getViewElements:function(e){var t=this,n=t.options,r=n.vertical,i=n.border.width>0?{stroke:n.border.color||n.color,strokeWidth:n.border.width,dashType:n.border.dashType}:{},o=t.box,a=un({id:n.id,fill:n.color,fillOpacity:n.opacity,strokeOpacity:n.opacity,vertical:n.vertical,aboveAxis:n.aboveAxis,animation:n.animation,data:{modelId:n.modelId}},i),s=[];return o.width()>0&&o.height()>0&&(n.overlay&&(a.overlay=un({rotation:r?0:90},n.overlay)),s.push(e.createRect(o,a))),In(s,yn.fn.getViewElements.call(t,e)),s},tooltipAnchor:function(e,t){var n,r,i=this,o=i.options,a=i.box,s=o.vertical,l=o.aboveAxis;return s?(n=a.x2+Ii,r=l?a.y1:a.y2-t):o.isStacked?(n=l?a.x2-e:a.x1,r=a.y1-t-Ii):(n=l?a.x2+Ii:a.x1-e-Ii,r=a.y1),new kn(n,r)},highlightOverlay:function(e,t){var n=this,r=n.box;return t=un({data:{modelId:n.options.modelId}},t),t.id=null,e.createRect(r,t)},formatValue:function(e){var t=this;return t.owner.formatPointValue(t,e)}}),un(ut.fn,at),ht=Tn.extend(),un(ht.fn,at),ft=yn.extend({init:function(e,t){var n,r=this;r.value=e,yn.fn.init.call(r,t),t=r.options,t.id=Nn(),n=t.markers.border,En(n.color)||(n.color=t.color),r.enableDiscovery()},options:{aboveAxis:!0,vertical:!0,markers:{visible:!0,background:Hi,size:Fr,type:cr,border:{width:2},opacity:1},labels:{visible:!1,position:qn,margin:Rn(3),padding:Rn(4),animation:{type:Pr,delay:Mr}},notes:{label:{}}},render:function(){var e,t=this,n=t.options,r=n.markers,i=n.labels,o=r.background,a=un({},r.border),s=t.value;t._rendered||(t._rendered=!0,En(a.color)||(a.color=new wn(o).brightness(Jn).toHex()),t.marker=new Tn({id:t.options.id,visible:r.visible&&r.size,type:r.type,width:r.size,height:r.size,rotation:r.rotation,background:o,border:a,opacity:r.opacity,zIndex:r.zIndex,animation:r.animation}),t.append(t.marker),i.visible&&(i.template?(e=dn(i.template),s=e({dataItem:t.dataItem,category:t.category,value:t.value,series:t.series})):i.format&&(s=t.formatValue(i.format)),t.label=new Dn(s,un({id:Nn(),align:sr,vAlign:sr,margin:{left:5,right:5}},i)),t.append(t.label)),t.creteNote())},creteNote:function(){var e,t=this,n=t.options.notes,r=n.label.text;n.visible&&En(r)&&null!==r&&(n.label.template?(e=dn(n.label.template),r=e({dataItem:t.dataItem,category:t.category,value:t.value,series:t.series})):n.label.format&&(r=Ln(n.label.format,r)),t.note=new _n(un({},n,{label:{text:r}})),t.append(t.note))},markerBox:function(){return this.marker.box},reflow:function(e){var t,n,r,i=this,o=i.options,a=o.vertical,s=o.aboveAxis;i.render(),i.box=e,t=e.clone(),a?s?t.y1-=t.height():t.y2+=t.height():s?t.x1+=t.width():t.x2-=t.width(),i.marker.reflow(t),i.reflowLabel(t),i.note&&(i.marker.options.visible?n=i.marker.box:(r=i.marker.box.center(),n=vn(r.x,r.y,r.x,r.y)),i.note.reflow(n))},reflowLabel:function(e){var t=this,n=t.options,r=t.marker,i=t.label,o=n.labels.position;i&&(o=o===qn?Bi:o,o=o===Kn?nr:o,i.reflow(e),i.box.alignTo(r.box,o),i.reflow(i.box))},highlightOverlay:function(e,t){var n=this,r=n.marker;return t=un({data:{modelId:n.options.modelId}},t),r.getViewElements(e,un(t,{id:null,fill:r.options.border.color,fillOpacity:1,strokeOpacity:0}))[0]},tooltipAnchor:function(e,t){var n=this,r=n.marker.box,i=n.options.aboveAxis;return kn(r.x2+Ii,i?r.y1-t:r.y2)},formatValue:function(e){var t=this;return t.owner.formatPointValue(t,e)}}),un(ft.fn,at),pt=ft.extend({init:function(e,t){var n=this;ft.fn.init.call(n,e,t),n.category=e.category},options:{labels:{position:sr},highlight:{opacity:1,border:{width:1,opacity:1}}},highlightOverlay:function(e){var t=this,n=t.options,r=n.highlight,i=r.border.width,o=n.markers,a=t.box.center(),s=o.size/2-i/2,l=r.border.color||new wn(o.background).brightness(Jn).toHex();return e.createCircle(a,s,{id:null,data:{modelId:t.options.modelId},stroke:l,strokeWidth:i,strokeOpacity:r.border.opacity})},toggleHighlight:function(e){var n,r=this,i=r.options.highlight.opacity;r.highlighted=!r.highlighted,n=r.marker.getViewElements(e,{fillOpacity:r.highlighted?i:t})[0],n.refresh(Vn(this.options.id))}}),gt=yn.extend({init:function(e,t,n){var r=this;yn.fn.init.call(r),r.linePoints=e,r.series=t,r.seriesIx=n,r.options.id=Nn(),r.enableDiscovery()},options:{closed:!1},points:function(e){var t,n,r=this,i=r.linePoints.concat(e||[]),o=[],a=i.length;for(t=0;a>t;t++)n=i[t].markerBox().center(),o.push(kn(n.x,n.y));return o},getViewElements:function(e){var t=this,n=t.options,r=t.series,i=r._defaults,o=r.color;return yn.fn.getViewElements.call(t,e),rn(o)&&i&&(o=i.color),[e.createPolyline(t.points(),n.closed,{id:n.id,stroke:o,strokeWidth:r.width,strokeOpacity:r.opacity,fill:"",dashType:r.dashType,data:{modelId:n.modelId},zIndex:-1})]},aliasFor:function(e,t){var n=this,r=n.seriesIx;return n.parent.getNearestPoint(t.x,t.y,r)}}),mt={renderSegments:function(){var e,t,n,r,i,o,a,s=this,l=s.options,c=l.series,d=s.seriesPoints,u=d.length,h=[];for(t=0;u>t;t++){for(e=c[t],n=s.sortPoints(d[t]),a=n.length,r=[],o=0;a>o;o++)i=n[o],i?r.push(i):s.seriesMissingValues(e)!==Er&&(r.length>1&&h.push(s.createSegment(r,e,t,Un(h))),r=[]);r.length>1&&h.push(s.createSegment(r,e,t,Un(h)))}s._segments=h,s.append.apply(s,h)},sortPoints:function(e){return e},seriesMissingValues:function(e){var t=e.missingValues,n=!t&&this.options.isStacked;return n?qi:t||Er},createSegment:function(e,t,n){return new gt(e,t,n)},getNearestPoint:function(e,t,n){var r,i,o,a,s,l=this,c=l.options.invertAxes,d=c?Gi:Ni,u=c?t:e,h=l.seriesPoints[n],f=jr,p=h.length;for(s=0;p>s;s++)r=h[s],r&&En(r.value)&&null!==r.value&&(i=r.box,o=en.abs(i.center()[d]-u),f>o&&(a=r,f=o));return a}},vt=lt.extend({init:function(e,t){var n=this;n._stackAxisRange={min:jr,max:Hr},n._categoryTotals=[],n.enableDiscovery(),lt.fn.init.call(n,e,t)},render:function(){var e=this;lt.fn.render.apply(e),e.computeAxisRanges(),e.renderSegments()},createPoint:function(e,t,n,r){var i,o,a,s=this,l=e.value,c=s.options,d=c.isStacked,u=s.categoryPoints[n],h=s.seriesMissingValues(r),f=0,p=e.fields;if(!En(l)||null===l){if(h!==qi)return null;l=0}return a=un({vertical:!c.invertAxes},r,{color:p.color,notes:{label:{text:e.fields.noteText}}}),s.evalPointOptions(a,l,t,n,r),o=new ft(l,a),d&&(i=E(u),i&&(f=i.plotValue),o.plotValue=l+f),s.append(o),o},updateRange:function(e,t){var n,r=this,i=r.options.isStacked,o=r._stackAxisRange,a=r._categoryTotals;En(e)&&(i?(g(a,t,e),n=s(a),o.min=en.min(o.min,n.min),o.max=en.max(o.max,n.max)):lt.fn.updateRange.apply(r,arguments))},computeAxisRanges:function(){var e,t=this,n=t.options.isStacked;n&&(e=t.options.series[0].axis,t.valueAxisRanges[e]=t._stackAxisRange)},getViewElements:function(e){var t=this,n=lt.fn.getViewElements.call(t,e),r=e.createGroup({animation:{type:ur}});return r.children=n,[r]}}),un(vt.fn,mt),xt=gt.extend({init:function(e,t,n,r){var i=this;i.stackPoints=t,gt.fn.init.call(i,e,n,r)},points:function(){var e,t,n=this,r=n.parent,i=r.plotArea,o=r.options.invertAxes,a=r.seriesValueAxis(n.series),s=a.lineBox(),l=i.seriesCategoryAxis(n.series),c=l.lineBox(),d=o?c.x1:c.y1,u=n.stackPoints,h=gt.fn.points.call(n,u),f=o?Ni:Gi;return d=B(d,s[f+1],s[f+2]),!n.stackPoints&&h.length>1&&(e=h[0],t=Un(h),o?(h.unshift(kn(d,e.y)),h.push(kn(d,t.y))):(h.unshift(kn(e.x,d)),h.push(kn(t.x,d)))),h},getViewElements:function(e){var t,n=this,r=n.series,i=r._defaults,o=r.color,a=gt.fn.points.call(n),s=n.points();return yn.fn.getViewElements.call(n,e),rn(o)&&i&&(o=i.color),t=un({color:o,opacity:r.opacity},r.line),[e.createPolyline(s,!1,{id:n.options.id,fillOpacity:r.opacity,fill:o,stack:r.stack,data:{modelId:n.options.modelId},zIndex:-1}),e.createPolyline(a,!1,{stroke:t.color,strokeWidth:t.width,strokeOpacity:t.opacity,dashType:t.dashType,data:{modelId:n.options.modelId},strokeLineCap:"butt",zIndex:-1,align:!1})]}}),yt=vt.extend({createSegment:function(e,t,n,r){var i,o=this,a=o.options;return a.isStacked&&n>0&&r&&(i=r.linePoints.slice(0).reverse()),new xt(e,i,t,n)},seriesMissingValues:function(e){return e.missingValues||qi}}),wt=yn.extend({init:function(e,t){var n=this;yn.fn.init.call(n,t),n.plotArea=e,n.xAxisRanges={},n.yAxisRanges={},n.points=[],n.seriesPoints=[],n.render()},options:{series:[],tooltip:{format:"{0}, {1}"},labels:{format:"{0}, {1}"}},render:function(){var e=this;e.traverseDataPoints(nn(e.addValue,e))},addValue:function(e,t){var n,r=this,i=e.x,o=e.y,a=t.seriesIx,s=r.seriesPoints[a];r.updateRange(e,t.series),En(i)&&null!==i&&En(o)&&null!==o&&(n=r.createPoint(e,t),n&&tn(n,t)),r.points.push(n),s.push(n)},updateRange:function(e,t){var n=this,r=e.x,i=e.y,o=t.xAxis,a=t.yAxis,s=n.xAxisRanges[o],l=n.yAxisRanges[a];En(r)&&null!==r&&(s=n.xAxisRanges[o]=s||{min:jr,max:Hr},typeof r===bi&&(r=w(r)),s.min=en.min(s.min,r),s.max=en.max(s.max,r)),En(i)&&null!==i&&(l=n.yAxisRanges[a]=l||{min:jr,max:Hr},typeof i===bi&&(i=w(i)),l.min=en.min(l.min,i),l.max=en.max(l.max,i))},evalPointOptions:function(e,t,n){var r=n.series;j(e,{value:t,series:r,dataItem:n.dataItem},{defaults:r._defaults,excluded:["data"]})},createPoint:function(e,t){var n,r,i=this,o=t.series;return r=un({markers:{opacity:o.opacity},tooltip:{format:i.options.tooltip.format},labels:{format:i.options.labels.format}},o,{color:t.color,notes:{label:{text:t.noteText}}}),i.evalPointOptions(r,e,t),n=new ft(e,r),i.append(n),n},seriesAxes:function(e){var t=this.plotArea,n=e.xAxis,r=n?t.namedXAxes[n]:t.axisX,i=e.yAxis,o=i?t.namedYAxes[i]:t.axisY;if(!r)throw Error("Unable to locate X axis with name "+n);if(!o)throw Error("Unable to locate Y axis with name "+i);return{x:r,y:o}},reflow:function(e){var t,n,r=this,i=r.points,o=0;r.traverseDataPoints(function(e,a){t=i[o++],n=r.seriesAxes(a.series);var s=n.x.getSlot(e.x,e.x),l=n.y.getSlot(e.y,e.y),c=r.pointSlot(s,l);t&&t.reflow(c)}),r.box=e},pointSlot:function(e,t){return new vn(e.x1,t.y1,e.x2,t.y2)},getViewElements:function(e){var t=this,n=yn.fn.getViewElements.call(t,e),r=e.createGroup({animation:{type:ur}});return r.children=n,[r]},traverseDataPoints:function(e){var t,n,r,i,o,a,s,l=this,c=l.options,d=c.series,u=l.seriesPoints;for(n=0;n<d.length;n++)for(r=d[n],i=u[n],i||(u[n]=[]),t=0;t<r.data.length;t++)o=$.current.bindPoint(r,t),a=o.value,s=o.fields,e(a,un({pointIx:t,series:r,seriesIx:n,dataItem:r.data[t],owner:l},s))},formatPointValue:function(e,t){var n=e.value;return Ln(t,n.x,n.y)}}),bt=wt.extend({render:function(){var e=this;wt.fn.render.call(e),e.renderSegments()}}),un(bt.fn,mt),_t=wt.extend({options:{tooltip:{format:"{3}"},labels:{format:"{3}"}},addValue:function(e,t){var n,r=this,i=t.series,o=i.negativeValues,a=r.plotArea.options.seriesColors||[],s=!0;n=t.color||i.color||a[t.pointIx%a.length],e.size<0&&(n=o.color||n,s=o.visible),t.color=n,s&&wt.fn.addValue.call(this,e,t)},reflow:function(e){var t=this;t.updateBubblesSize(e),wt.fn.reflow.call(t,e)},createPoint:function(e,t){var n,r,i=this,o=t.series,a=o.data.length,s=t.pointIx*(Mr/a),l={delay:s,duration:Mr-s,type:rr};return r=un({tooltip:{format:i.options.tooltip.format},labels:{format:i.options.labels.format,animation:l}},o,{color:t.color,markers:{type:cr,background:t.color,border:o.border,opacity:o.opacity,animation:l},notes:{label:{text:t.noteText}}}),i.evalPointOptions(r,e,t),n=new pt(e,r),i.append(n),n},updateBubblesSize:function(e){var t,n,r,i,o,a,s,l,c,d,u,h,f,p,g,m,v=this,x=v.options,y=x.series,w=en.min(e.width(),e.height());for(t=0;t<y.length;t++)for(r=y[t],i=v.seriesPoints[t],o=v.maxSize(i),a=r.minSize||en.max(.02*w,10),s=r.maxSize||.2*w,l=a/2,c=s/2,d=en.PI*l*l,u=en.PI*c*c,h=u-d,f=h/o,n=0;n<i.length;n++)p=i[n],g=en.abs(p.value.size)*f,m=en.sqrt((d+g)/en.PI),un(p.options,{markers:{size:2*m,zIndex:c-m},labels:{zIndex:c-m+1}})},maxSize:function(e){var t,n,r=e.length,i=0;for(t=0;r>t;t++)n=e[t].value.size,i=en.max(i,en.abs(n));return i},getViewElements:function(e){var t=this,n=yn.fn.getViewElements.call(t,e),r=e.createGroup();return r.children=n,[r]},formatPointValue:function(e,t){var n=e.value;return Ln(t,n.x,n.y,n.size,e.category)}}),Ct=yn.extend({init:function(e,t){var n=this;yn.fn.init.call(n,t),n.value=e,n.options.id=Nn(),n.enableDiscovery(),n.createNote()},options:{border:{_brightness:.8},line:{width:2},overlay:{gradient:Dr},tooltip:{format:"<table style='text-align: left;'><th colspan='2'>{4:d}</th><tr><td>Open:</td><td>{0:C}</td></tr><tr><td>High:</td><td>{1:C}</td></tr><tr><td>Low:</td><td>{2:C}</td></tr><tr><td>Close:</td><td>{3:C}</td></tr></table>"},highlight:{opacity:1,border:{width:1,opacity:1},line:{width:1,opacity:1}},notes:{visible:!0,label:{}}},reflow:function(e){var t,n,r,i=this,o=i.options,a=i.owner,s=i.value,l=a.seriesValueAxis(o),c=[];n=l.getSlot(s.open,s.close),r=l.getSlot(s.low,s.high),n.x1=r.x1=e.x1,n.x2=r.x2=e.x2,i.realBody=n,t=r.center().x,c.push([kn(t,r.y1),kn(t,n.y1)]),c.push([kn(t,n.y2),kn(t,r.y2)]),i.lowHighLinePoints=c,i.box=r.clone().wrap(n),i.reflowNote()},reflowNote:function(){var e=this;e.note&&e.note.reflow(e.box)},createNote:function(){var e,t=this,n=t.options.notes,r=n.label.text;n.visible&&En(r)&&null!==r&&(n.label.template?(e=dn(n.label.template),r=e({dataItem:t.dataItem,category:t.category,value:t.value,series:t.series})):n.label.format&&(r=Ln(n.label.format,r)),t.note=new _n(un({},n,{label:{text:r}})),t.append(t.note))},getViewElements:function(e){var t=this,n=t.options,r=[],i=n.border.width>0?{stroke:t.getBorderColor(),strokeWidth:n.border.width,dashType:n.border.dashType,strokeOpacity:Gn(n.border.opacity,n.opacity)}:{},o=un({fill:n.color,fillOpacity:n.opacity},i),a={strokeOpacity:Gn(n.line.opacity,n.opacity),strokeWidth:n.line.width,stroke:n.line.color||n.color,dashType:n.line.dashType,strokeLineCap:"butt"},s=e.createGroup({animation:{type:ur}});return n.overlay&&(o.overlay=un({rotation:0},n.overlay)),r.push(e.createRect(t.realBody,o)),r.push(e.createPolyline(t.lowHighLinePoints[0],!1,a)),r.push(e.createPolyline(t.lowHighLinePoints[1],!1,a)),r.push(t.createOverlayRect(e,n)),In(r,yn.fn.getViewElements.call(t,e)),s.children=r,[s]},getBorderColor:function(){var e=this,t=e.options,n=t.border,r=n.color;return En(r)||(r=new wn(t.color).brightness(n._brightness).toHex()),r},createOverlayRect:function(e,t){return e.createRect(this.box,{data:{modelId:t.modelId},fill:"#fff",fillOpacity:0})},highlightOverlay:function(e,t){var n=this,r=n.options,i=r.highlight,o=i.border,a=n.getBorderColor(),s=i.line,l={data:{modelId:r.modelId}},c=un({},l,t,{stroke:a,strokeOpacity:o.opacity,strokeWidth:o.width}),d=un({},l,{stroke:s.color||a,strokeWidth:s.width,strokeOpacity:s.opacity,strokeLineCap:"butt"}),u=e.createGroup();return u.children.push(e.createRect(n.realBody,c)),u.children.push(e.createPolyline(n.lowHighLinePoints[0],!1,d)),u.children.push(e.createPolyline(n.lowHighLinePoints[1],!1,d)),u},tooltipAnchor:function(){var e=this,t=e.box;return new kn(t.x2+Ii,t.y1+Ii)},formatValue:function(e){var t=this;return t.owner.formatPointValue(t,e)}}),un(Ct.fn,at),kt=lt.extend({options:{},reflowCategories:function(e){var t,n=this,r=n.children,i=r.length;for(t=0;i>t;t++)r[t].reflow(e[t])},addValue:function(e,t,n,r,i){var o,a,s=this,l=s.options,c=e.value,d=s.children,u=e.fields.color||r.color,h=this.splitValue(c),f=R(h),p=s.categoryPoints[n],g=r.data[n];p||(s.categoryPoints[n]=p=[]),f&&(r.type==or&&c.open>c.close&&(u=e.fields.downColor||r.downColor||r.color),o=s.createPoint(e,t,n,un({},r,{color:u}))),a=d[n],a||(a=new it({vertical:l.invertAxes,gap:l.gap,spacing:l.spacing}),s.append(a)),o&&(s.updateRange(c,n,r),a.append(o),o.categoryIx=n,o.category=t,o.series=r,o.seriesIx=i,o.owner=s,o.dataItem=g),s.points.push(o),p.push(o)},pointType:function(){return Ct},createPoint:function(e,t,n,r){var i=this,o=e.value,a=un({},r,{notes:{label:{text:e.fields.noteText}}}),s=i.pointType();return i.evalPointOptions(a,o,t,n,r),new s(o,a)},splitValue:function(e){return[e.low,e.open,e.close,e.high]},updateRange:function(e,t,n){var r=this,i=n.axis,o=r.valueAxisRanges[i],a=r.splitValue(e);o=r.valueAxisRanges[i]=o||{min:jr,max:Hr},o=r.valueAxisRanges[i]={min:en.min.apply(en,a.concat([o.min])),max:en.max.apply(en,a.concat([o.max]))}},formatPointValue:function(e,t){var n=e.value;return Ln(t,n.open,n.high,n.low,n.close,e.category)}}),At=Ct.extend({reflow:function(e){var t,n,r,i,o=this,a=o.options,s=o.owner,l=o.value,c=s.seriesValueAxis(a),d=[],u=[],h=[];i=c.getSlot(l.low,l.high),n=c.getSlot(l.open,l.open),r=c.getSlot(l.close,l.close),n.x1=r.x1=i.x1=e.x1,n.x2=r.x2=i.x2=e.x2,t=i.center().x,d.push(kn(n.x1,n.y1)),d.push(kn(t,n.y1)),u.push(kn(t,r.y1)),u.push(kn(r.x2,r.y1)),h.push(kn(t,i.y1)),h.push(kn(t,i.y2)),o.oPoints=d,o.cPoints=u,o.lhPoints=h,o.box=i.clone().wrap(n.clone().wrap(r)),o.reflowNote()},getViewElements:function(e){var t=this,n=t.options,r=[],i={strokeOpacity:n.opacity,zIndex:-1,strokeWidth:n.width,stroke:n.color,dashType:n.dashType},o=e.createGroup({animation:{type:ur}});return r.push(t.createOverlayRect(e,n)),r.push(e.createPolyline(t.oPoints,!0,i)),r.push(e.createPolyline(t.cPoints,!0,i)),r.push(e.createPolyline(t.lhPoints,!0,i)),In(r,yn.fn.getViewElements.call(t,e)),o.children=r,[o]},highlightOverlay:function(e){var t=this,n=t.options,r=n.highlight,i={data:{modelId:n.modelId}},o=un(i,{strokeWidth:r.line.width,strokeOpacity:r.line.opacity,stroke:r.line.color||t.color}),a=e.createGroup();return a.children.push(e.createPolyline(t.oPoints,!0,o)),a.children.push(e.createPolyline(t.cPoints,!0,o)),a.children.push(e.createPolyline(t.lhPoints,!0,o)),a}}),St=kt.extend({pointType:function(){return At}}),Tt=yn.extend({init:function(e,t,n){var r=this;r.value=e,r.sector=t,yn.fn.init.call(r,n),r.options.id=Nn(),r.enableDiscovery()},options:{color:Hi,overlay:{gradient:ui},border:{width:.5},labels:{visible:!1,distance:35,font:yr,margin:Rn(.5),align:cr,zIndex:1,position:ii},animation:{type:ai},highlight:{visible:!0,border:{width:1}},visible:!0},render:function(){var e,t=this,n=t.options,r=n.labels,i=t.value;t._rendered||t.visible===!1||(t._rendered=!0,r.template?(e=dn(r.template),i=e({dataItem:t.dataItem,category:t.category,value:t.value,series:t.series,percentage:t.percentage})):r.format&&(i=Ln(r.format,i)),r.visible&&i&&(t.label=new Dn(i,un({},r,{id:Nn(),align:sr,vAlign:"",animation:{type:Pr,delay:t.animationDelay}})),t.append(t.label)))},reflow:function(e){var t=this;t.render(),t.box=e,t.reflowLabel()},reflowLabel:function(){var e,t,n,r,i=this,o=i.sector.clone(),a=i.options,s=i.label,l=a.labels,c=l.distance,d=o.middle();s&&(r=s.box.height(),n=s.box.width(),l.position==sr?(o.r=en.abs((o.r-r)/2)+r,e=o.point(d),s.reflow(vn(e.x,e.y-r/2,e.x,e.y))):l.position==Lr?(o.r=o.r-r/2,e=o.point(d),s.reflow(vn(e.x,e.y-r/2,e.x,e.y))):(e=o.clone().expand(c).point(d),e.x>=o.c.x?(t=e.x+n,s.orientation=di):(t=e.x-n,s.orientation=Or),s.reflow(vn(t,e.y-r,e.x,e.y))))
},getViewElements:function(e){var t=this,n=t.sector,r=t.options,i=r.border||{},o=i.width>0?{stroke:i.color,strokeWidth:i.width,strokeOpacity:i.opacity,dashType:i.dashType}:{},a=[],s=r.overlay;return s&&(s=un({},r.overlay,{r:n.r,ir:n.ir,cx:n.c.x,cy:n.c.y,bbox:n.getBBox()})),t.value&&a.push(t.createSegment(e,n,un({id:r.id,fill:r.color,overlay:s,fillOpacity:r.opacity,strokeOpacity:r.opacity,animation:un(r.animation,{delay:t.animationDelay}),data:{modelId:r.modelId},zIndex:r.zIndex,singleSegment:1===(t.options.data||[]).length},o))),In(a,yn.fn.getViewElements.call(t,e)),a},createSegment:function(e,t,n){return n.singleSegment?e.createCircle(t.c,t.r,n):e.createSector(t,n)},highlightOverlay:function(e,t){var n,r=this,i=r.options.highlight||{},o=i.border||{},a=r.options.id+oi;return t=un({},t,{id:a}),0!==r.value&&(n=r.createSegment(e,r.sector,un({},t,{fill:i.color,fillOpacity:i.opacity,strokeOpacity:o.opacity,strokeWidth:o.width,stroke:o.color,id:null,data:{modelId:r.options.modelId}}))),n},tooltipAnchor:function(e,t){var n=this,r=n.sector.adjacentBox(Ii,e,t);return new kn(r.x1,r.y1)},formatValue:function(e){var t=this;return t.owner.formatPointValue(t,e)}}),un(Tt.fn,at),Pt=yn.extend({init:function(e,t){var n=this;yn.fn.init.call(n,t),n.plotArea=e,n.points=[],n.legendItems=[],n.render()},options:{startAngle:90,connectors:{width:1,color:"#939393",padding:4},inactiveItems:{markers:{},labels:{}}},render:function(){var e=this;e.traverseDataPoints(nn(e.addValue,e))},traverseDataPoints:function(e){var t,n,r,i,o,a,s,l,c,d,u,h,f=this,p=f.options,g=f.plotArea.options.seriesColors||[],m=g.length,v=p.series,x=v.length,y=Nn(),w=0;for(i=0;x>i;i++){for(t=v[i],a=t.data,d=f.pointsTotal(t),s=360/d,u=En(t.startAngle)?t.startAngle:p.startAngle,i!=x-1&&t.labels.position==ii&&(t.labels.position=sr),h=0;h<a.length;h++)n=$.current.bindPoint(t,h),l=n.value,r=n.fields,o=jn(l*s,br),c=1!=a.length&&!!r.explode,rn(t.color)||(t.color=r.color||g[h%m]),e(l,new Sn(null,0,0,u,o),{owner:f,category:r.category||"",index:w,series:t,seriesIx:i,dataItem:a[h],percentage:l/d,explode:c,visibleInLegend:r.visibleInLegend,visible:r.visible,overlay:{id:y+i},zIndex:x-i,animationDelay:f.animationDelay(h,i,x)}),n.fields.visible!==!1&&(u+=o),w++;w=0}},evalSegmentOptions:function(e,t,n){var r=n.series;j(e,{value:t,series:r,dataItem:n.dataItem,category:n.category,percentage:n.percentage},{defaults:r._defaults,excluded:["data"]})},addValue:function(e,t,n){var r,i,o=this;o.createLegendItem(e,n),n.visible!==!1&&(i=un({},n.series,{index:n.index}),o.evalSegmentOptions(i,e,n),r=new Tt(e,t,i),tn(r,n),o.append(r),o.points.push(r))},createLegendItem:function(e,t){var n,r,i,o,a=this,s=(a.options.legend||{}).labels||{},l=(a.options.legend||{}).inactiveItems||{};t&&t.visibleInLegend!==!1&&(n=t.category||"",(s||{}).template&&(r=dn(s.template),n=r({text:n,series:t.series,dataItem:t.dataItem,percentage:t.percentage,value:e})),t.visible===!1?(i=(l.markers||{}).color,o=(l.labels||{}).color):(i=(t.series||{}).color,o=s.color),n&&a.legendItems.push({pointIndex:t.index,text:n,series:t.series,markerColor:i,labelColor:o}))},pointsTotal:function(e){var t,n,r,i=e.data,o=i.length,a=0;for(n=0;o>n;n++)r=$.current.bindPoint(e,n),t=r.value,"string"==typeof t&&(t=parseFloat(t)),t&&r.fields.visible!==!1&&(a+=t);return a},reflow:function(e){var t,n,r,i,o,a,s,l,c=this,d=c.options,u=e.clone(),h=5,f=en.min(u.width(),u.height()),p=f/2,g=f-.85*f,m=Gn(d.padding,g),v=vn(u.x1,u.y1,u.x1+f,u.y1+f),x=v.center(),y=c.seriesConfigs||[],w=u.center(),b=c.points,_=b.length,C=d.series.length,k=[],A=[];for(m=m>p-h?p-h:m,v.translate(w.x-x.x,w.y-x.y),a=p-m,l=kn(a+v.x1+m,a+v.y1+m),s=0;_>s;s++)i=b[s],o=i.sector,o.r=a,o.c=l,n=i.seriesIx,y.length&&(t=y[n],o.ir=t.ir,o.r=t.r),n==C-1&&i.explode&&(o.c=o.clone().radius(.15*o.r).point(o.middle())),i.reflow(v),r=i.label,r&&r.options.position===ii&&n==C-1&&(r.orientation===di?A.push(r):k.push(r));k.length>0&&(k.sort(c.labelComparator(!0)),c.leftLabelsReflow(k)),A.length>0&&(A.sort(c.labelComparator(!1)),c.rightLabelsReflow(A)),c.box=v},leftLabelsReflow:function(e){var t=this,n=t.distanceBetweenLabels(e);t.distributeLabels(n,e)},rightLabelsReflow:function(e){var t=this,n=t.distanceBetweenLabels(e);t.distributeLabels(n,e)},distanceBetweenLabels:function(e){var t,n,r,i=this,o=i.points,a=o[o.length-1],s=a.sector,l=e[0].box,c=e.length-1,d=s.r+a.options.labels.distance,u=[];for(n=jn(l.y1-(s.c.y-d-l.height()-l.height()/2)),u.push(n),r=0;c>r;r++)l=e[r].box,t=e[r+1].box,n=jn(t.y1-l.y2),u.push(n);return n=jn(s.c.y+d-e[c].box.y2-e[c].box.height()/2),u.push(n),u},distributeLabels:function(e,t){var n,r,i,o,a=this,s=e.length;for(o=0;s>o;o++)for(r=i=o,n=-e[o];n>0&&(r>=0||s>i);)n=a._takeDistance(e,o,--r,n),n=a._takeDistance(e,o,++i,n);a.reflowLabels(e,t)},_takeDistance:function(e,t,n,r){if(e[n]>0){var i=en.min(e[n],r);r-=i,e[n]-=i,e[t]+=i}return r},reflowLabels:function(e,t){var n,r,i,o,a=this,s=a.points,l=s[s.length-1],c=l.sector,d=t.length,u=l.options.labels,h=u.distance,f=c.c.y-(c.r+h)-t[0].box.height();for(e[0]+=2,o=0;d>o;o++)n=t[o],f+=e[o],i=n.box,r=a.hAlignLabel(i.x2,c.clone().expand(h),f,f+i.height(),n.orientation==di),n.orientation==di?(u.align!==cr&&(r=c.r+c.c.x+h),n.reflow(new vn(r+i.width(),f,r,f))):(u.align!==cr&&(r=c.c.x-c.r-h),n.reflow(new vn(r-i.width(),f,r,f))),f+=i.height()},getViewElements:function(e){var t,n,r,i,o,a,s,l,d,u,h,f,p,g,m,v=this,x=v.options,y=x.connectors,w=v.points,b=[],_=w.length,C=4;for(l=0;_>l;l++)o=w[l],n=o.sector,r=n.middle(),s=o.label,a={seriesId:o.seriesIx},s&&(i=[],s.options.position===ii&&0!==o.value&&(f=s.box,p=n.c,g=n.point(r),m=kn(f.x1,f.center().y),g=n.clone().expand(y.padding).point(r),i.push(g),s.orientation==di?(u=kn(f.x1-y.padding,f.center().y),h=c(p,g,m,u),m=kn(u.x-C,u.y),h=h||m,h.x=en.min(h.x,m.x),v.pointInCircle(h,n.c,n.r+C)||h.x<n.c.x?(d=n.c.x+n.r+C,o.options.labels.align!==fr?d<m.x?i.push(kn(d,g.y)):i.push(kn(g.x+2*C,g.y)):i.push(kn(d,g.y)),i.push(kn(m.x,u.y))):(h.y=u.y,i.push(h))):(u=kn(f.x2+y.padding,f.center().y),h=c(p,g,m,u),m=kn(u.x+C,u.y),h=h||m,h.x=en.max(h.x,m.x),v.pointInCircle(h,n.c,n.r+C)||h.x>n.c.x?(d=n.c.x-n.r-C,o.options.labels.align!==fr?d>m.x?i.push(kn(d,g.y)):i.push(kn(g.x-2*C,g.y)):i.push(kn(d,g.y)),i.push(kn(m.x,u.y))):(h.y=u.y,i.push(h))),i.push(u),t=e.createPolyline(i,!1,{id:Nn(),stroke:y.color,strokeWidth:y.width,animation:{type:Pr,delay:o.animationDelay},data:{modelId:o.options.modelId}}),b.push(t)));return In(b,yn.fn.getViewElements.call(v,e)),b},labelComparator:function(e){return e=e?-1:1,function(t,n){return t=(t.parent.sector.middle()+270)%360,n=(n.parent.sector.middle()+270)%360,(t-n)*e}},hAlignLabel:function(e,t,n,r,i){var o=t.c.x,a=t.c.y,s=t.r,l=en.min(en.abs(a-n),en.abs(a-r));return l>s?e:o+en.sqrt(s*s-l*l)*(i?1:-1)},pointInCircle:function(e,t,n){return v(t.x-e.x)+v(t.y-e.y)<v(n)},formatPointValue:function(e,t){return Ln(t,e.value)},animationDelay:function(e){return e*si}}),Dt=Tt.extend({options:{overlay:{gradient:hi},labels:{position:sr},animation:{type:ai}},reflowLabel:function(){var e,t,n=this,r=n.sector.clone(),i=n.options,o=n.label,a=i.labels,s=r.middle();o&&(t=o.box.height(),a.position==sr?(r.r-=(r.r-r.ir)/2,e=r.point(s),o.reflow(new vn(e.x,e.y-t/2,e.x,e.y))):Tt.fn.reflowLabel.call(n))},createSegment:function(e,t,n){return e.createRing(t,n)}}),un(Dt.fn,at),Bt=Pt.extend({options:{startAngle:90,connectors:{width:1,color:"#939393",padding:4}},addValue:function(e,t,n){var r,i,o=this;o.createLegendItem(e,n),e&&n.visible!==!1&&(i=un({},n.series),o.evalSegmentOptions(i,e,n),r=new Dt(e,t,i),tn(r,n),o.append(r),o.points.push(r))},reflow:function(e){var t,n,r,i,o,a,s=this,l=s.options,c=e.clone(),d=5,u=en.min(c.width(),c.height()),h=u/2,f=u-.85*u,p=Gn(l.padding,f),g=l.series,m=g.length,v=0,x=0,y=0,w=0;for(s.seriesConfigs=[],p=p>h-d?h-d:p,r=h-p,o=0;m>o;o++)t=g[o],0===o&&En(t.holeSize)&&(n=t.holeSize,r-=t.holeSize),En(t.size)?r-=t.size:v++,En(t.margin)&&o!=m-1&&(r-=t.margin);for(En(n)||(w=(h-p)/(m+.75),n=.75*w,r-=n),y=n,o=0;m>o;o++)t=g[o],i=Gn(t.size,r/v),y+=x,a=y+i,s.seriesConfigs.push({ir:y,r:a}),x=t.margin||0,y=a;Pt.fn.reflow.call(s,e)},animationDelay:function(e,t,n){return e*kr+Mr*(t+1)/(n+1)}}),Mt=xn.extend({init:function(e){var t=this;xn.fn.init.call(t,e),e=t.options,e.id=Nn(),t.title=Bn.buildTitle(e.title,t,Mt.fn.options.title),t.content=new yn,t.append(t.content),t.axes=[],t.charts=[]},options:{zIndex:-1,shrinkToFit:!0,title:{align:Or},visible:!0},appendAxis:function(e){var t=this;t.content.append(e),t.axes.push(e),e.pane=t},appendChart:function(e){var t=this;t.charts.push(e),t.content.append(e),e.pane=t},empty:function(){var e,t=this,n=t.parent;if(n){for(e=0;e<t.axes.length;e++)n.removeAxis(t.axes[e]);for(e=0;e<t.charts.length;e++)n.removeChart(t.charts[e])}t.axes=[],t.charts=[],t.content.destroy(),t.content.children=[]},reflow:function(e){var t=this;Un(t.children)===t.content&&t.children.pop(),xn.fn.reflow.call(t,e),t.title&&(t.contentBox.y1+=t.title.box.height())},getViewElements:function(e){var t=this,n=xn.fn.getViewElements.call(t,e),r=e.createGroup({id:t.options.id}),i=[];return r.children=n.concat(t.renderGridLines(e),t.content.getViewElements(e)),t.view=e,t.options.visible&&(i=[r]),i},renderGridLines:function(e){var t,n,r,i,o,a,s=this,l=s.axes,c=l.concat(s.parent.axes),d=[],u=[];for(n=0;n<l.length;n++)for(i=l[n],o=i.options.vertical,t=o?d:u,r=0;r<c.length;r++)0===t.length&&(a=c[r],o!==a.options.vertical&&In(t,i.renderGridLines(e,a,i)));return d.concat(u)},refresh:function(){var e,t=this,n=t.view,r=Vn(t.options.id);n&&(e=t.getViewElements(n)[0],r?r.parentNode.replaceChild(n.renderElement(e),r):n.replace&&n.replace(e,t.box))}}),It=yn.extend({init:function(e,t){var n=this;yn.fn.init.call(n,t),n.series=e,n.setSeriesIndexes(),n.charts=[],n.options.legend.items=[],n.axes=[],n.crosshairs=[],n.options.id=Nn(),n.enableDiscovery(),n.createPanes(),n.render(),n.createCrosshairs()},options:{series:[],plotArea:{margin:{}},background:"",border:{color:er,width:0},legend:{}},setSeriesIndexes:function(){var e,t,n=this.series;for(e=0;e<n.length;e++)t=n[e],t.index=e},createPanes:function(){var e,t,n=this,r=[],i=n.options.panes||[],o=en.max(i.length,1);for(e=0;o>e;e++)t=new Mt(i[e]),t.paneIndex=e,r.push(t),n.append(t);n.panes=r},destroy:function(){var e,t=this,n=t.charts,r=t.axes;for(e=0;e<n.length;e++)n[e].destroy();for(e=0;e<r.length;e++)r[e].destroy();yn.fn.destroy.call(t)},createCrosshairs:function(){var e,t,n,r,i,o=this,a=o.panes;for(e=0;e<a.length;e++)for(n=a[e],t=0;t<n.axes.length;t++)r=n.axes[t],r.options.crosshair&&r.options.crosshair.visible&&(i=new Qt(r,r.options.crosshair),o.crosshairs.push(i),o.append(i))},findPane:function(e){var t,n,r=this,i=r.panes;for(t=0;t<i.length;t++)if(i[t].options.name===e){n=i[t];break}return n||i[0]},findPointPane:function(e){var t,n,r=this,i=r.panes;for(t=0;t<i.length;t++)if(i[t].box.containsPoint(e)){n=i[t];break}return n},appendAxis:function(e){var t=this,n=t.findPane(e.options.pane);n.appendAxis(e),t.axes.push(e),e.plotArea=t},removeAxis:function(e){var t,n,r=this,i=[];for(t=0;t<r.axes.length;t++)n=r.axes[t],e!==n&&i.push(n);r.axes=i},appendChart:function(e,t){var n=this;n.charts.push(e),t?t.appendChart(e):n.append(e)},removeChart:function(e){var t,n,r=this,i=[];for(t=0;t<r.charts.length;t++)n=r.charts[t],n!==e&&i.push(n);r.charts=i},addToLegend:function(e){var t,n,r,i,o,a,s,l=e.length,c=[],d=this.options.legend,u=d.labels||{},h=d.inactiveItems||{};for(t=0;l>t;t++)n=e[t],n.visibleInLegend!==!1&&(r=n.name||"",u.template&&(r=dn(u.template)({text:r,series:n})),i=n.color,s=n._defaults,rn(i)&&s&&(i=s.color),n.visible===!1?(o=h.labels.color,a=h.markers.color):(o=u.color,a=i),r&&c.push({text:r,labelColor:o,markerColor:a,series:n,active:n.visible}));In(d.items,c)},groupAxes:function(e){var t,n,r,i,o=[],a=[];for(r=0;r<e.length;r++)for(t=e[r].axes,i=0;i<t.length;i++)n=t[i],n.options.vertical?a.push(n):o.push(n);return{x:o,y:a,any:o.concat(a)}},groupSeriesByPane:function(){var e,t,n,r=this,i=r.series,o={};for(e=0;e<i.length;e++)n=i[e],t=r.seriesPaneName(n),o[t]?o[t].push(n):o[t]=[n];return o},filterVisibleSeries:function(e){var t,n,r=[];for(t=0;t<e.length;t++)n=e[t],n.visible!==!1&&r.push(n);return r},reflow:function(e){var t=this,n=t.options.plotArea,r=t.panes,i=Rn(n.margin);t.box=e.clone().unpad(i),t.reflowPanes(),t.reflowAxes(r),t.reflowCharts(r)},redraw:function(e){var t,n=this;for(e=[].concat(e),t=0;t<e.length;t++)e[t].empty();for(n.render(e),n.reflowAxes(n.panes),n.reflowCharts(e),t=0;t<e.length;t++)e[t].refresh()},axisCrossingValues:function(e,t){var n,r=e.options,i=[].concat(r.axisCrossingValues||r.axisCrossingValue),o=t.length-i.length,a=i[0]||0;for(n=0;o>n;n++)i.push(a);return i},alignAxisTo:function(e,t,n,r){var i=e.getSlot(n,n),o=e.options.reverse?2:1,a=t.getSlot(r,r),s=t.options.reverse?2:1,l=e.box.translate(a[Ni+s]-i[Ni+o],a[Gi+s]-i[Gi+o]);e.pane!==t.pane&&l.translate(0,e.pane.box.y1-t.pane.box.y1),e.reflow(l)},alignAxes:function(e,t){var n,r,i,o,a=this,s=e[0],l=t[0],c=a.axisCrossingValues(s,t),d=a.axisCrossingValues(l,e),u={},h={},f={},p={};for(o=0;o<t.length;o++)i=t[o],n=i.pane,r=n.options.id,a.alignAxisTo(i,s,d[o],c[o]),i.options._overlap||(jn(i.lineBox().x1)===jn(s.lineBox().x1)&&(u[r]&&i.reflow(i.box.alignTo(u[r].box,Or).translate(-i.options.margin,0)),u[r]=i),jn(i.lineBox().x2)===jn(s.lineBox().x2)&&(i._mirrored||(i.options.labels.mirror=!i.options.labels.mirror,i._mirrored=!0),a.alignAxisTo(i,s,d[o],c[o]),h[r]&&i.reflow(i.box.alignTo(h[r].box,di).translate(i.options.margin,0)),h[r]=i),0!==o&&l.pane===i.pane&&i.alignTo(l));for(o=0;o<e.length;o++)i=e[o],n=i.pane,r=n.options.id,a.alignAxisTo(i,l,c[o],d[o]),i.options._overlap||(jn(i.lineBox().y1)===jn(l.lineBox().y1)&&(i._mirrored||(i.options.labels.mirror=!i.options.labels.mirror,i._mirrored=!0),a.alignAxisTo(i,l,c[o],d[o]),f[r]&&i.reflow(i.box.alignTo(f[r].box,Bi).translate(0,-i.options.margin)),f[r]=i),jn(i.lineBox().y2,pr)===jn(l.lineBox().y2,pr)&&(p[r]&&i.reflow(i.box.alignTo(p[r].box,nr).translate(0,i.options.margin)),p[r]=i),0!==o&&i.alignTo(s))},shrinkAxisWidth:function(e){var t,n,r,i=this,o=i.groupAxes(e).any,a=M(o),s=0;for(t=0;t<e.length;t++)n=e[t],n.axes.length>0&&(s=en.max(s,a.width()-n.contentBox.width()));for(t=0;t<o.length;t++)r=o[t],r.options.vertical||r.reflow(r.box.shrink(s,0))},shrinkAxisHeight:function(e){var t,n,r,i,o,a;for(t=0;t<e.length;t++)for(n=e[t],r=n.axes,i=en.max(0,M(r).height()-n.contentBox.height()),o=0;o<r.length;o++)a=r[o],a.options.vertical&&a.reflow(a.box.shrink(0,i))},fitAxes:function(e){var t,n,r,i,o,a,s,l,c=this,d=c.groupAxes(e).any,u=0;for(s=0;s<e.length;s++)if(o=e[s],t=o.axes,n=o.contentBox,t.length>0)for(r=M(t),u=en.max(u,n.x1-r.x1),i=en.max(n.y1-r.y1,n.y2-r.y2),l=0;l<t.length;l++)a=t[l],a.reflow(a.box.translate(0,i));for(s=0;s<d.length;s++)a=d[s],a.reflow(a.box.translate(u,0))},reflowAxes:function(e){var t,n=this,r=n.groupAxes(e);for(t=0;t<e.length;t++)n.reflowPaneAxes(e[t]);r.x.length>0&&r.y.length>0&&(n.alignAxes(r.x,r.y),n.shrinkAxisWidth(e),n.alignAxes(r.x,r.y),n.shrinkAxisHeight(e),n.alignAxes(r.x,r.y),n.fitAxes(e))},reflowPaneAxes:function(e){var t,n=e.axes,r=n.length;if(r>0)for(t=0;r>t;t++)n[t].reflow(e.contentBox)},reflowCharts:function(e){var t,n,r=this,i=r.charts,o=i.length,a=r.box;for(n=0;o>n;n++)t=i[n].pane,(!t||zn(t,e))&&i[n].reflow(a)},reflowPanes:function(){var e,t,n,r,i,o=this,a=o.box,s=o.panes,l=s.length,c=a.height(),d=l,u=0,h=a.y1;for(e=0;l>e;e++)t=s[e],r=t.options.height,t.options.width=a.width(),t.options.height?(r.indexOf&&r.indexOf("%")&&(i=parseInt(r,10)/100,t.options.height=i*a.height()),t.reflow(a.clone()),c-=t.options.height):u++;for(e=0;l>e;e++)t=s[e],t.options.height||(t.options.height=c/u);for(e=0;l>e;e++)t=s[e],n=a.clone().move(a.x1,h),t.reflow(n),d--,h+=t.options.height},backgroundBox:function(){var e,t,n,r,i,o,a=this,s=a.axes,l=s.length;for(n=0;l>n;n++)for(i=s[n],r=0;l>r;r++)o=s[r],i.options.vertical!==o.options.vertical&&(e=i.lineBox().clone().wrap(o.lineBox()),t=t?t.wrap(e):e);return t||a.box},getViewElements:function(e){var t=this,n=t.backgroundBox(),r=t.options,i=r.plotArea,o=i.border||{},a=yn.fn.getViewElements.call(t,e);return In(a,[e.createRect(n,{fill:i.background,fillOpacity:i.opacity,zIndex:-2,strokeWidth:.1}),e.createRect(n,{id:r.id,data:{modelId:r.modelId},stroke:o.width?o.color:"",strokeWidth:o.width,fill:Hi,fillOpacity:0,zIndex:-1,dashType:o.dashType})]),a},pointsByCategoryIndex:function(e){var t,n,r,i,o,a=this.charts,s=[];if(null!==e)for(t=0;t<a.length;t++)if(o=a[t],"_navigator"!==o.pane.options.name&&(r=a[t].categoryPoints[e],r&&r.length))for(n=0;n<r.length;n++)i=r[n],i&&En(i.value)&&null!==i.value&&s.push(i);return s},pointsBySeriesIndex:function(e){var t,n,r,i,o,a=this.charts,s=[];for(r=0;r<a.length;r++)for(o=a[r],t=o.points,i=0;i<t.length;i++)n=t[i],n&&n.options.index===e&&s.push(n);return s},paneByPoint:function(e){var t,n,r=this,i=r.panes;for(n=0;n<i.length;n++)if(t=i[n],t.box.containsPoint(e))return t}}),Lt=It.extend({init:function(e,t){var n=this;n.namedCategoryAxes={},n.namedValueAxes={},n.valueAxisRangeTracker=new Et,e.length>0&&(n.invertAxes=zn(e[0].type,[Zn,ir,Ui,zi])),It.fn.init.call(n,e,t)},options:{categoryAxis:{categories:[]},valueAxis:{}},render:function(e){var t=this;e=e||t.panes,t.createCategoryAxes(e),t.aggregateCategories(e),t.createCharts(e),t.createValueAxes(e)},removeAxis:function(e){var t=this,n=e.options.name;It.fn.removeAxis.call(t,e),e instanceof et?delete t.namedCategoryAxes[n]:(t.valueAxisRangeTracker.reset(n),delete t.namedValueAxes[n]),e===t.categoryAxis&&delete t.categoryAxis,e===t.valueAxis&&delete t.valueAxis},createCharts:function(e){var t,n,r,i,o=this,a=o.groupSeriesByPane();for(t=0;t<e.length;t++)n=e[t],r=a[n.options.name||"default"]||[],o.addToLegend(r),i=o.filterVisibleSeries(r),i&&(o.createAreaChart(N(i,[Qn,zi]),n),o.createBarChart(N(i,[fr,Zn]),n),o.createLineChart(N(i,[zr,Ui]),n),o.createCandlestickChart(N(i,or),n),o.createOHLCChart(N(i,ri),n),o.createBulletChart(N(i,[ir,Fi]),n))},aggregateCategories:function(e){var t,n,r,i,o,a=this,s=a.srcSeries||a.series,l=[];for(t=0;t<s.length;t++)n=s[t],r=a.seriesCategoryAxis(n),i=a.findPane(r.options.pane),o=I(r.options.type,vr),(o||n.categoryField)&&zn(i,e)&&(n=a.aggregateSeries(n,r)),l.push(n);a.srcSeries=s,a.series=l},aggregateSeries:function(e,t){var n,r,o,a,s,l=t.options,c=I(t.options.type,vr),d=l.categories,u=l.srcCategories||d,h=e.data,f=[],p=[],g=t.range(),m=un({},e),v=x;for(m.data=a=[],c&&(v=y),n=0;n<h.length;n++)r=e.categoryField?v(e.categoryField,h[n]):u[n],o=t.categoryIndex(r,g),o>-1&&(s=$.current.bindPoint(e,n),f[o]=f[o]||[],f[o].push(s),p[o]=p[o]||[],p[o].push(h[n]));for(n=0;n<d.length;n++)a[n]=i(f[n]||[],e,p[n]||[],d[n]);return m},appendChart:function(e,t){for(var n=this,r=e.options.series,i=n.seriesCategoryAxis(r[0]),o=i.options.categories,a=en.max(0,m(r)-o.length);a--;)o.push("");n.valueAxisRangeTracker.update(e.valueAxisRanges),It.fn.appendChart.call(n,e,t)},seriesPaneName:function(t){var n=this,r=n.options,i=t.axis,o=[].concat(r.valueAxis),a=e.grep(o,function(e){return e.name===i})[0],s=r.panes||[{}],l=(s[0]||{}).name||"default",c=(a||{}).pane||l;return c},seriesCategoryAxis:function(e){var t=this,n=e.categoryAxis,r=n?t.namedCategoryAxes[n]:t.categoryAxis;if(!r)throw Error("Unable to locate category axis with name "+n);return r},createBarChart:function(e,t){if(0!==e.length){var n=this,r=e[0],i=new ct(n,{series:e,invertAxes:n.invertAxes,isStacked:r.stack&&e.length>1,gap:r.gap,spacing:r.spacing});n.appendChart(i,t)}},createBulletChart:function(e,t){if(0!==e.length){var n=this,r=e[0],i=new dt(n,{series:e,invertAxes:n.invertAxes,gap:r.gap,spacing:r.spacing});n.appendChart(i,t)}},createLineChart:function(e,t){if(0!==e.length){var n=this,r=e[0],i=new vt(n,{invertAxes:n.invertAxes,isStacked:r.stack&&e.length>1,series:e});n.appendChart(i,t)}},createAreaChart:function(e,t){if(0!==e.length){var n=this,r=e[0],i=new yt(n,{invertAxes:n.invertAxes,isStacked:r.stack&&e.length>1,series:e});n.appendChart(i,t)}},createOHLCChart:function(e,t){if(0!==e.length){var n=this,r=e[0],i=new St(n,{invertAxes:n.invertAxes,gap:r.gap,series:e,spacing:r.spacing});n.appendChart(i,t)}},createCandlestickChart:function(e,t){if(0!==e.length){var n=this,r=e[0],i=new kt(n,{invertAxes:n.invertAxes,gap:r.gap,series:e,spacing:r.spacing});n.appendChart(i,t)}},axisRequiresRounding:function(e,t){var n,r,i=this,o=N(i.series,[Zn,fr,ri,or,ir]);for(n=0;n<o.length;n++)if(r=o[n].categoryAxis||"",r===e||!r&&0===t)return!0},createCategoryAxes:function(e){var t,n,r,i,o,a,s,l,c=this,d=c.invertAxes,u=[].concat(c.options.categoryAxis),h=[];for(t=0;t<u.length;t++)if(n=u[t],r=c.findPane(n.pane),zn(r,e)){if(a=n.name,i=n.categories||[],o=n.type||"",n=un({vertical:d,axisCrossingValue:d?jr:0},n),En(n.justified)||(n.justified=c.isJustified()),c.axisRequiresRounding(a,t)&&(n.justified=!1,n.roundToBaseUnit=!0),s=Q(n,i[0])?new nt(n):new et(n),a){if(c.namedCategoryAxes[a])throw Error("Category axis with name "+a+" is already defined");c.namedCategoryAxes[a]=s}s.axisIndex=t,h.push(s),c.appendAxis(s)}l=c.categoryAxis||h[0],c.categoryAxis=l,d?c.axisY=l:c.axisX=l},isJustified:function(){var e,t,n=this,r=n.series;for(e=0;e<r.length;e++)if(t=r[e],!zn(t.type,[Qn,zi]))return!1;return!0},createValueAxes:function(e){var t,n,r,i,o,a,s,l=this,c=l.valueAxisRangeTracker,d=c.query(),u=[].concat(l.options.valueAxis),h=l.invertAxes,f={vertical:!h},p=[];for(s=0;s<u.length;s++)if(t=u[s],n=l.findPane(t.pane),zn(n,e)){if(a=t.name,o=c.query(a)||d||{min:0,max:1},0===s&&o&&d&&(o.min=en.min(o.min,d.min),o.max=en.max(o.max,d.max)),r=new Cn(o.min,o.max,un({},f,t)),a){if(l.namedValueAxes[a])throw Error("Value axis with name "+a+" is already defined");l.namedValueAxes[a]=r}r.axisIndex=s,p.push(r),l.appendAxis(r)}i=l.valueAxis||p[0],l.valueAxis=i,h?l.axisX=i:l.axisY=i},click:function(t,n){var r,i,o,a=this,s=t._eventCoordinates(n),l=new kn(s.x,s.y),c=a.pointPane(l),d=[],u=[];if(c){for(r=c.axes,i=0;i<r.length;i++)o=r[i],o.getValue?O(u,o.getValue(l)):O(d,o.getCategory(l));0===d.length&&O(d,a.categoryAxis.getCategory(l)),d.length>0&&u.length>0&&t.trigger(li,{element:e(n.target),category:D(d),value:D(u)})}},pointPane:function(e){var t,n,r=this,i=r.panes;for(n=0;n<i.length;n++)if(t=i[n],t.contentBox.containsPoint(e))return t}}),Et=an.extend({init:function(){var e=this;e.axisRanges={}},update:function(e){var t,n,r,i=this,o=i.axisRanges;for(r in e)t=o[r],n=e[r],o[r]=t=t||{min:jr,max:Hr},t.min=en.min(t.min,n.min),t.max=en.max(t.max,n.max)},reset:function(e){this.axisRanges[e]=t},query:function(e){return this.axisRanges[e]}}),Ot=It.extend({init:function(e,t){var n=this;n.namedXAxes={},n.namedYAxes={},n.xAxisRangeTracker=new Et,n.yAxisRangeTracker=new Et,It.fn.init.call(n,e,t)},options:{xAxis:{},yAxis:{}},render:function(e){var t,n,r,i,o=this,a=o.groupSeriesByPane();for(e=e||o.panes,t=0;t<e.length;t++)n=e[t],r=a[n.options.name||"default"]||[],o.addToLegend(r),i=o.filterVisibleSeries(r),i&&(o.createScatterChart(N(i,fi),n),o.createScatterLineChart(N(i,pi),n),o.createBubbleChart(N(i,rr),n));o.createAxes(e)},appendChart:function(e,t){var n=this;n.xAxisRangeTracker.update(e.xAxisRanges),n.yAxisRangeTracker.update(e.yAxisRanges),It.fn.appendChart.call(n,e,t)},removeAxis:function(e){var t=this,n=e.options.name;It.fn.removeAxis.call(t,e),e.options.vertical?(t.yAxisRangeTracker.reset(n),delete t.namedYAxes[n]):(t.xAxisRangeTracker.reset(n),delete t.namedXAxes[n]),e===t.axisX&&delete t.axisX,e===t.axisY&&delete t.axisY},seriesPaneName:function(t){var n=this,r=n.options,i=t.xAxis,o=[].concat(r.xAxis),a=e.grep(o,function(e){return e.name===i})[0],s=t.yAxis,l=[].concat(r.yAxis),c=e.grep(l,function(e){return e.name===s})[0],d=r.panes||[{}],u=d[0].name||"default",h=(a||{}).pane||(c||{}).pane||u;return h},createScatterChart:function(e,t){var n=this;e.length>0&&n.appendChart(new wt(n,{series:e}),t)},createScatterLineChart:function(e,t){var n=this;e.length>0&&n.appendChart(new bt(n,{series:e}),t)},createBubbleChart:function(e,t){var n=this;e.length>0&&n.appendChart(new _t(n,{series:e}),t)},createXYAxis:function(e,t,n){var r,i,o,a,s,l,c,d=this,u=e.name,h=t?d.namedYAxes:d.namedXAxes,f=t?d.yAxisRangeTracker:d.xAxisRangeTracker,p=f.query(),g=f.query(u)||p||{min:0,max:1},m=un({},e,{vertical:t}),v=d.series,x=[m.min,m.max];for(i=0;i<v.length;i++)if(o=v[i],a=o[t?"yAxis":"xAxis"],a==m.name||0===n&&!a){s=$.current.bindPoint(o,0).value,x.push(s[t?"y":"x"]);break}for(0===n&&p&&(g.min=en.min(g.min,p.min),g.max=en.max(g.max,p.max)),c=0;c<x.length;c++)if(x[c]instanceof Date){l=!0;break}if(r=I(m.type,vr)||!m.type&&l?new rt(g.min,g.max,m):new Cn(g.min,g.max,m),u){if(h[u])throw Error((t?"Y":"X")+" axis with name "+u+" is already defined");h[u]=r}return d.appendAxis(r),r},createAxes:function(e){var t,n=this,r=n.options,i=[].concat(r.xAxis),o=[],a=[].concat(r.yAxis),s=[];Zt(i,function(r){t=n.findPane(this.pane),zn(t,e)&&o.push(n.createXYAxis(this,!1,r))}),Zt(a,function(r){t=n.findPane(this.pane),zn(t,e)&&s.push(n.createXYAxis(this,!0,r))}),n.axisX=n.axisX||o[0],n.axisY=n.axisY||s[0]},click:function(t,n){var r,i,o,a,s=this,l=t._eventCoordinates(n),c=new kn(l.x,l.y),d=s.axes,u=d.length,h=[],f=[];for(r=0;u>r;r++)i=d[r],a=i.options.vertical?f:h,o=i.getValue(c),null!==o&&a.push(o);h.length>0&&f.length>0&&t.trigger(li,{element:e(n.target),x:D(h),y:D(f)})}}),Vt=It.extend({render:function(){var e=this,t=e.series;e.createPieChart(t)},createPieChart:function(e){var t=this,n=e[0],r=new Pt(t,{series:e,padding:n.padding,startAngle:n.startAngle,connectors:n.connectors,legend:t.options.legend});t.appendChart(r)},appendChart:function(e,t){It.fn.appendChart.call(this,e,t),In(this.options.legend.items,e.legendItems)}}),Rt=Vt.extend({render:function(){var e=this,t=e.series;e.createDonutChart(t)},createDonutChart:function(e){var t=this,n=e[0],r=new Bt(t,{series:e,padding:n.padding,connectors:n.connectors,legend:t.options.legend});t.appendChart(r)}}),zt=bn.extend({options:{easing:"easeOutElastic",duration:Mr},setup:function(){var e,t=this.element,n=t.config;t.options.singleSegment&&(n=t),this.endRadius=n.r,e=this.startRadius=n.ir||0,n.r=e},step:function(e){var t=this,n=t.element,r=t.endRadius,i=n.config,o=t.startRadius;n.options.singleSegment&&(i=n),i.r=Fn(o,r,e)}}),Ft=bn.extend({options:{easing:"easeOutElastic",duration:Mr},setup:function(){var e=this.element;e.endRadius=e.radius,e.radius=0},step:function(e){var t=this.element,n=t.endRadius;t.radius=Fn(0,n,e)}}),Ut=Mn(Zn,mn),jt=Mn(ai,zt),Ht=Mn(rr,Ft),Nt=an.extend({init:function(e,t,n){var r=this;r.options=un({},r.options,n),r.view=e,r.viewElement=t,r._overlays=[]},options:{fill:Hi,fillOpacity:.2,stroke:Hi,strokeWidth:1,strokeOpacity:.2},show:function(e){var t,n,r,i,o,a=this,s=a.view,l=a.viewElement,c=a._overlays;for(a.hide(),a._points=e=[].concat(e),r=0;r<e.length;r++)i=e[r],i&&(o=i.options,(!o||(o.highlight||{}).visible)&&(i.highlightOverlay&&(t=i.highlightOverlay(s,a.options),t&&(n=s.renderElement(t),l.appendChild(n),c.push(n))),i.toggleHighlight&&i.toggleHighlight(s)))},hide:function(){for(var e,t,n,r,i=this,o=i._points,a=i._overlays;a.length;)e=i._overlays.pop(),e.parentNode.removeChild(e);if(o)for(t=0;t<o.length;t++)n=o[t],n&&(r=n.options,(!r||(r.highlight||{}).visible)&&n.toggleHighlight&&n.toggleHighlight(i.view));i._points=[]}}),Gt=an.extend({init:function(t,n){var r=this;r.options=un({},r.options,n),r.chartElement=t,r.chartPadding={top:parseInt(t.css("paddingTop"),10),left:parseInt(t.css("paddingLeft"),10)},r.template=Gt.template,r.template||(r.template=Gt.template=Hn("<div class='"+gr+"tooltip' "+"style='display:none; position: absolute; font: #= d.font #;"+"border: #= d.border.width #px solid;"+"opacity: #= d.opacity #; filter: alpha(opacity=#= d.opacity * 100 #);'>"+"</div>")),r.element=e(r.template(r.options)).appendTo(t),r._moveProxy=nn(r.move,r)},options:{border:{width:1},opacity:1,animation:{duration:Mi}},move:function(){var e=this,t=e.options,n=e.element,r=e._offset();e.visible||n.css({top:r.top,left:r.left}),n.stop(!0,!0).show().animate({left:r.left,top:r.top},t.animation.duration),e.visible=!0},_offset:function(){var t=this,n=t.element,r=t.anchor,i=t.chartPadding,o=jn(r.y+i.top),a=jn(r.x+i.left),s=on.support.zoomLevel(),l=e(window),c=window.pageYOffset||document.documentElement.scrollTop||0,d=window.pageXOffset||document.documentElement.scrollLeft||0;return c=t.chartElement.offset().top-c,d=t.chartElement.offset().left-d,o+=t._currentPosition(o+c,n.outerHeight(),l.outerHeight()/s),a+=t._currentPosition(a+d,n.outerWidth(),l.outerWidth()/s),{top:o,left:a}},setStyle:function(e){this.element.css({backgroundColor:e.background,borderColor:e.border.color||e.background,font:e.font,color:e.color,opacity:e.opacity,borderWidth:e.border.width})},show:function(){var e=this;e.showTimeout=setTimeout(e._moveProxy,Li)},hide:function(){var e=this;clearTimeout(e.showTimeout),e.visible&&(e._hideElement(),e.point=null,e.visible=!1,e.index=null)},_hideElement:function(){this.element.fadeOut()},_pointContent:function(e){var t,n,r=this,i=un({},r.options,e.options.tooltip);return En(e.value)&&(t=""+e.value),i.template?(n=dn(i.template),t=n({value:e.value,category:e.category,series:e.series,dataItem:e.dataItem,percentage:e.percentage})):i.format&&(t=e.formatValue(i.format)),t},_pointAnchor:function(e){var t=this,n=t.element;return e.tooltipAnchor(n.outerWidth(),n.outerHeight())},_currentPosition:function(e,t,n){var r=0;return e+t>n&&(r=n-(e+t)),0>e&&(r=-e),r},_updateStyle:function(e,t){if(En(e.background)||(e.background=t.color),!En(e.color)){var n=this,r=n.element,i=new wn(e.background).percBrightness();i>180?r.addClass(gr+Oi):r.removeClass(gr+Oi)}}}),Wt=Gt.extend({show:function(e){var t=this,n=un({},t.options,e.options.tooltip);e&&(t.element.html(t._pointContent(e)),t.anchor=t._pointAnchor(e),t._updateStyle(n,e.options),t.setStyle(n),Gt.fn.show.call(t,e))}}),qt=Gt.extend({init:function(e,t,n){var r=this;Gt.fn.init.call(r,e,n),r.plotArea=t},options:{sharedTemplate:"<table><th colspan='2'>#= categoryText #</th># for(var i = 0; i < points.length; i++) { ## var point = points[i]; #<tr># if(point.series.name) { #<td>#= point.series.name #:</td> # } #<td>#= content(point) #</td></tr># } #</table>",categoryFormat:"{0:d}"},showAt:function(e,t){var n,r=this,i=r.options,o=r.plotArea,a=o.categoryAxis,s=a.pointCategoryIndex(t),l=a.getCategory(t),c=a.getSlot(s);n=r._content(e,l),r.element.html(n),r.anchor=r._slotAnchor(t,c),r._updateStyle(i,e[0].options),r.setStyle(i),Gt.fn.show.call(r)},_slotAnchor:function(e,t){var n,r=this,i=r.plotArea,o=i.categoryAxis,a=e.y-r.element.height()/2;return n=o.options.vertical?kn(e.x,a):kn(t.center().x,a)},_content:function(e,t){var n,r,i=this;return n=on.template(i.options.sharedTemplate),r=n({points:e,category:t,categoryText:Ln(i.options.categoryFormat,t),content:i._pointContent})}}),Qt=yn.extend({init:function(e,t){var n=this;yn.fn.init.call(n,t),n.axis=e,n.options.id||(n.options.id=Nn()),n._visible=!1,n.stickyMode=e instanceof et},options:{color:er,width:1,zIndex:-1,tooltip:{visible:!1}},repaint:function(){var e=this,t=e.element;e.getViewElements(e._view),t=e.element,t.refresh(Vn(e.options.id))},showAt:function(e){var t=this;t.updateAxisReference(),t._visible=!0,t.point=e,t.repaint(),t.options.tooltip.visible&&(t.tooltip||(t.tooltip=new Yt(t,un({},t.options.tooltip,{stickyMode:t.stickyMode}))),t.tooltip.showAt(e))},hide:function(){var e=this;e._visible&&(e._visible=!1,e.repaint(),e.tooltip&&e.tooltip.hide())},linePoints:function(){var e,t,n,r=this,i=r.axis,o=i.options.vertical,a=r.getBox(),s=r.point,l=o?Gi:Ni;return t=kn(a.x1,a.y1),n=o?kn(a.x2,a.y1):kn(a.x1,a.y2),s&&(r.stickyMode?(e=i.getSlot(i.pointCategoryIndex(s)),t[l]=n[l]=e.center()[l]):t[l]=n[l]=s[l]),r.box=a,[t,n]},getBox:function(){var e,t,n,r=this,i=r.axis,o=i.pane.axes,a=o.length,s=i.options.vertical,l=i.lineBox().clone(),c=s?Ni:Gi;for(n=0;a>n;n++)t=o[n],t.options.vertical!=s&&(e?e.wrap(t.lineBox()):e=t.lineBox().clone());return l[c+1]=e[c+1],l[c+2]=e[c+2],l},getViewElements:function(e){var t=this,n=t.options,r=[];return t.points=t.linePoints(),t.element=e.createPolyline(t.points,!1,{id:n.id,stroke:n.color,strokeWidth:n.width,strokeOpacity:n.opacity,dashType:n.dashType,zIndex:n.zIndex,visible:t._visible}),r.push(t.element),t._view=e,In(r,yn.fn.getViewElements.call(t,e)),r
},updateAxisReference:function(){var e,t,n=this,r=n.axis,i=r.plotArea,o=i.axes;for(t=0;t<o.length;t++)if(e=o[t],En(r.axisIndex)&&r instanceof Cn!=e instanceof et&&r.axisIndex===e.axisIndex){n.axis=e;break}}}),Yt=Gt.extend({init:function(e,t){var n=this,r=e.axis.getRoot().parent.element;n.crosshair=e,Gt.fn.init.call(n,r,un({},n.options,{background:e.axis.plotArea.options.seriesColors[0]},t)),n._updateStyle(n.options,{}),n.setStyle(n.options)},options:{padding:10},showAt:function(e){var t=this,n=t.element;t.point=e,t.element.html(t.content(e)),t.anchor=t.getAnchor(n.outerWidth(),n.outerHeight()),t.move()},move:function(){var e=this,t=e.element,n=e._offset();t.css({top:n.top,left:n.left}).show()},content:function(e){var t,n,r,i=this,o=i.options,a=i.crosshair.axis,s=a.options;return n=t=a[o.stickyMode?"getCategory":"getValue"](e),o.template?(r=dn(o.template),t=r({value:n})):o.format?t=Ln(o.format,n):s.type===vr&&(t=Ln(s.labels.dateFormats[s.baseUnit],n)),t},getAnchor:function(e,t){var n,r,i=this,o=i.options,a=o.position,s=i.crosshair.axis.options.vertical,l=i.crosshair.points,c=l[0],d=l[1],u=e/2,h=t/2,f=o.padding;return s?a===Or?(n=c.x-e-f,r=c.y-h):(n=d.x+f,r=d.y-h):a===nr?(n=d.x-u,r=d.y+f):(n=c.x-u,r=c.y-t-f),kn(n,r)},hide:function(){this.element.hide(),this.point=null}}),Xt={max:function(e){var t=e[0];return e.length>1&&(t=en.max.apply(en,e),isNaN(t)&&(t=a(e))),t},min:function(e){var t=e[0];return e.length>1&&(t=en.min.apply(en,e),isNaN(t)&&(t=o(e))),t},sum:function(e){var t,n,r=e.length,i=0;for(t=0;r>t;t++)n=e[t],En(n)&&!isNaN(n)&&(i+=n);return i},count:function(e){return l(e)},avg:function(e){var t=e[0],n=l(e);return n>0&&(t=Xt.sum(e)/n),t},first:function(e){return e[0]}},$t=sn.extend({init:function(t,n,r){var i,o,a=this,s=t.element,l=n.lineBox(),c=a.getValueAxis(n),d=c.lineBox(),u="."+gr;sn.fn.init.call(a),a.options=un({},a.options,r),r=a.options,a.chart=t,a.chartElement=s,a.categoryAxis=n,a._dateAxis=a.categoryAxis instanceof nt,a.valueAxis=c,a._dateAxis&&un(r,{min:w(r.min),max:w(r.max),from:w(r.from),to:w(r.to)}),a.template=$t.template,a.template||(a.template=$t.template=Hn("<div class='"+gr+"selector' "+"style='width: #= d.width #px; height: #= d.height #px;"+" top: #= d.offset.top #px; left: #= d.offset.left #px;'>"+"<div class='"+gr+"mask'></div>"+"<div class='"+gr+"mask'></div>"+"<div class='"+gr+"selection'>"+"<div class='"+gr+"selection-bg'></div>"+"<div class='"+gr+"handle "+gr+"leftHandle'><div></div></div>"+"<div class='"+gr+"handle "+gr+"rightHandle'><div></div></div>"+"</div></div>")),o={left:parseInt(s.css("paddingLeft"),10),right:parseInt(s.css("paddingTop"),10)},a.options=un({},{width:l.width(),height:d.height(),padding:o,offset:{left:d.x2+o.left,top:d.y1+o.right},from:r.min,to:r.max},r),a.options.visible&&(a.wrapper=i=e(a.template(a.options)).appendTo(s),a.selection=i.find(u+"selection"),a.leftMask=i.find(u+"mask").first(),a.rightMask=i.find(u+"mask").last(),a.leftHandle=i.find(u+"leftHandle"),a.rightHandle=i.find(u+"rightHandle"),a.options.selection={border:{left:parseFloat(a.selection.css("border-left-width"),10),right:parseFloat(a.selection.css("border-right-width"),10)}},a.leftHandle.css("top",(a.selection.height()-a.leftHandle.height())/2),a.rightHandle.css("top",(a.selection.height()-a.rightHandle.height())/2),a.set(a._index(r.from),a._index(r.to)),a.bind(a.events,a.options),a.wrapper[0].style.cssText=a.wrapper[0].style.cssText,a.wrapper.on(Jr,nn(a._mousewheel,a)),on.UserEvents?a.userEvents=new on.UserEvents(a.wrapper,{global:!0,threshold:5,stopPropagation:!0,multiTouch:!0,start:nn(a._start,a),move:nn(a._move,a),end:nn(a._end,a),tap:nn(a._tap,a),gesturestart:nn(a._gesturechange,a),gesturechange:nn(a._gesturechange,a)}):a.leftHandle.add(a.rightHandle).removeClass(gr+"handle"))},events:[mi,vi,xi],options:{visible:!0,mousewheel:{zoom:tr},min:Hr,max:jr},destroy:function(){var e=this,t=e.userEvents;t&&t.destroy()},_rangeEventArgs:function(e){var t=this;return{axis:t.categoryAxis.options,from:t._value(e.from),to:t._value(e.to)}},_start:function(t){var n,r=this,i=r.options,o=e(t.event.target);!r._state&&o&&(r.chart._unsetActivePoint(),r._state={moveTarget:o.parents(".k-handle").add(o).first(),startLocation:t.x?t.x.location:0,range:{from:r._index(i.from),to:r._index(i.to)}},n=r._rangeEventArgs({from:r._index(i.from),to:r._index(i.to)}),r.trigger(mi,n)&&(r.userEvents.cancel(),r._state=null))},_move:function(e){if(this._state){var t=this,n=t._state,r=t.options,i=t.categoryAxis.options.categories,o=t._index(r.from),a=t._index(r.to),s=t._index(r.min),l=t._index(r.max),c=n.startLocation-e.x.location,d=n.range,u={from:d.from,to:d.to},h=d.to-d.from,f=n.moveTarget,p=t.wrapper.width()/(i.length-1),g=en.round(c/p);f&&(e.preventDefault(),f.is(".k-selection, .k-selection-bg")?(d.from=en.min(en.max(s,o-g),l-h),d.to=en.min(d.from+h,l)):f.is(".k-leftHandle")?(d.from=en.min(en.max(s,o-g),l-1),d.to=en.max(d.from+1,d.to)):f.is(".k-rightHandle")&&(d.to=en.min(en.max(s+1,a-g),l),d.from=en.min(d.to-1,d.from)),(d.from!==u.from||d.to!==u.to)&&(t.move(d.from,d.to),t.trigger(vi,t._rangeEventArgs(d))))}},_end:function(){var e=this,t=e._state.range;delete e._state,e.set(t.from,t.to),e.trigger(xi,e._rangeEventArgs(t))},_gesturechange:function(e){if(this._state){var t=this,n=t.chart,r=t._state,i=t.options,o=t.categoryAxis,a=r.range,s=n._toModelCoordinates(e.touches[0].x.location).x,l=n._toModelCoordinates(e.touches[1].x.location).x,c=en.min(s,l),d=en.max(s,l);e.preventDefault(),r.moveTarget=null,a.from=o.pointCategoryIndex(new fn.Point2D(c))||i.min,a.to=o.pointCategoryIndex(new fn.Point2D(d))||i.max,t.move(a.from,a.to)}},_tap:function(e){var t=this,n=t.options,r=t.chart._eventCoordinates(e),i=t.categoryAxis,o=i.pointCategoryIndex(new fn.Point2D(r.x,i.box.y1)),a=t._index(n.from),s=t._index(n.to),l=t._index(n.min),c=t._index(n.max),d=s-a,u=a+d/2,h=en.round(u-o),f={},p=3===e.event.which;t._state||p||(e.preventDefault(),t.chart._unsetActivePoint(),i.options.justified||h--,f.from=en.min(en.max(l,a-h),c-d),f.to=en.min(f.from+d,c),t._start(e),t._state&&(t._state.range=f,t.trigger(vi,t._rangeEventArgs(f)),t._end()))},_mousewheel:function(e){var t,n=this,r=n.options,i=U(e);n._start({event:{target:n.selection}}),n._state&&(t=n._state.range,e.preventDefault(),e.stopPropagation(),en.abs(i)>1&&(i*=Qi),r.mousewheel.reverse&&(i*=-1),n.expand(i)&&n.trigger(vi,{axis:n.categoryAxis.options,delta:i,originalEvent:e,from:n._value(t.from),to:n._value(t.to)}),n._mwTimeout&&clearTimeout(n._mwTimeout),n._mwTimeout=setTimeout(function(){n._end()},Zr))},_index:function(e){var t=this,n=t.categoryAxis,r=n.options.categories,i=e;return e instanceof Date&&(i=V(e,r),!n.options.justified&&e>Un(r)&&(i+=1)),i},_value:function(e){var t=this,n=this.categoryAxis,r=n.options.categories,i=e;return t._dateAxis&&(i=e>r.length-1?t.options.max:r[e]),i},_slot:function(e){var t=this,n=this.categoryAxis;return n.getSlot(t._index(e))},move:function(e,t){var n,r,i,o,a=this,s=a.options,l=s.offset,c=s.padding,d=s.selection.border;i=a._slot(e),n=jn(i.x1-l.left+c.left),a.leftMask.width(n),a.selection.css("left",n),i=a._slot(t),r=jn(s.width-(i.x1-l.left+c.left)),a.rightMask.width(r),o=s.width-r,o!=s.width&&(o+=d.right),a.rightMask.css("left",o),a.selection.width(en.max(s.width-(n+r)-d.right,0))},set:function(e,t){var n=this,r=n.options,i=n._index(r.min),o=n._index(r.max);e=B(n._index(e),i,o),t=B(n._index(t),e+1,o),r.visible&&n.move(e,t),r.from=n._value(e),r.to=n._value(t)},expand:function(e){var n=this,r=n.options,i=n._index(r.min),o=n._index(r.max),a=r.mousewheel.zoom,s=n._index(r.from),l=n._index(r.to),c={from:s,to:l},d=un({},c);return n._state&&(c=n._state.range),a!==di&&(c.from=B(B(s-e,0,l-1),i,o)),a!==Or&&(c.to=B(B(l+e,c.from+1,o),i,o)),c.from!==d.from||c.to!==d.to?(n.set(c.from,c.to),!0):t},getValueAxis:function(e){var t,n,r=e.pane.axes,i=r.length;for(t=0;i>t;t++)if(n=r[t],n.options.vertical!==e.options.vertical)return n}}),tn(e.easing,{easeOutElastic:function(e,t,n,r){var i=1.70158,o=0,a=r;return 0===e?n:1===e?n+r:(o||(o=.5),a<en.abs(r)?(a=r,i=o/4):i=o/(2*en.PI)*en.asin(r/a),a*en.pow(2,-10*e)*en.sin((1*e-i)*1.1*en.PI/o)+r+n)}}),fn.ui.plugin(Ki),X.current.register(Lt,[Zn,fr,zr,Ui,Qn,zi,or,ri,ir,Fi]),X.current.register(Ot,[fi,pi,rr]),X.current.register(Vt,[ai]),X.current.register(Rt,[Cr]),$.current.register([Zn,fr,zr,Ui,Qn,zi],[Ri],[ar,hr,ti]),$.current.register([fi,pi,rr],[Ni,Gi],[hr,ti]),$.current.register([rr],[Ni,Gi,"size"],[hr,ar,ti]),$.current.register([or,ri],["open","high","low","close"],[ar,hr,"downColor",ti]),$.current.register([ir,Fi],["current","target"],[ar,hr,"visibleInLegend",ti]),$.current.register([ai,Cr],[Ri],[ar,hr,"explode","visibleInLegend","visible"]),un(fn,{Aggregates:Xt,AreaChart:yt,AreaSegment:xt,AxisGroupRangeTracker:Et,Bar:st,BarAnimationDecorator:Ut,BarChart:ct,BarLabel:Z,BubbleAnimationDecorator:Ht,BubbleChart:_t,BulletChart:dt,CandlestickChart:kt,Candlestick:Ct,CategoricalChart:lt,CategoricalPlotArea:Lt,CategoryAxis:et,ClusterLayout:it,Crosshair:Qt,CrosshairTooltip:Yt,DateCategoryAxis:nt,DateValueAxis:rt,DonutChart:Bt,DonutPlotArea:Rt,DonutSegment:Dt,Highlight:Nt,SharedTooltip:qt,Legend:K,LineChart:vt,LinePoint:ft,LineSegment:gt,Pane:Mt,PieAnimation:zt,PieAnimationDecorator:jt,PieChart:Pt,PiePlotArea:Vt,PieSegment:Tt,PlotAreaBase:It,PlotAreaFactory:X,ScatterChart:wt,ScatterLineChart:bt,Selection:$t,SeriesBinder:$,ShapeElement:Tn,StackLayout:ot,Tooltip:Wt,OHLCChart:St,OHLCPoint:At,XYPlotArea:Ot,addDuration:_,areNumbers:R,axisGroupBox:M,categoriesCount:m,ceilDate:A,duration:P,indexOf:G,isNumber:z,floorDate:k,filterSeriesByType:N,limitValue:B,lteDateIndex:V,evalOptions:j,singleItemOrArray:D,sortDates:W,sparseArrayLimits:s,startOfWeek:C,transpose:Y,toDate:w,toTime:b,uniqueDates:q})}(window.kendo.jQuery),function(e){function t(e,t){return e.value.x-t.value.x}function n(e,t){return 180-y.abs(y.abs(e-t)-180)}var r,i,o,a,s,l,c,d,u,h,f,p,g,m,v,x,y=Math,w=window.kendo,b=w.deepExtend,_=w.dataviz,C=_.AreaSegment,k=_.Axis,A=_.AxisGroupRangeTracker,S=_.BarChart,T=_.Box2D,P=_.CategoryAxis,D=_.CategoricalChart,B=_.CategoricalPlotArea,M=_.ChartElement,I=_.DonutSegment,L=_.LineChart,E=_.LineSegment,O=_.NumericAxis,V=_.PlotAreaBase,R=_.PlotAreaFactory,z=_.Point2D,F=_.Ring,U=_.ScatterChart,j=_.ScatterLineChart,H=_.SeriesBinder,N=_.append,G=_.getSpacing,W=_.filterSeriesByType,q=_.limitValue,Q=_.round,Y="arc",X="#000",$=_.COORD_PRECISION,Z=.15,J=y.PI/180,K="plotAreaClick",et="polarArea",tt="polarLine",nt="polarScatter",rt="radarArea",it="radarColumn",ot="radarLine",at="x",st="y",lt="zero",ct=[et,tt,nt],dt=[rt,it,ot],ut={renderGridLines:function(e,t){var n,r,i=this,o=i.options,a=y.abs(i.box.center().y-t.lineBox().y1),s=!1,l=[];return o.majorGridLines.visible&&(n=i.majorGridLineAngles(t),s=!0,l=i.gridLineElements(e,n,a,o.majorGridLines)),o.minorGridLines.visible&&(r=i.minorGridLineAngles(t,s),N(l,i.gridLineElements(e,r,a,o.minorGridLines))),l},gridLineElements:function(e,t,n,r){var i,o,a,s=this,l=s.box.center(),c=s.plotArea.options.modelId,d=[];for(a={data:{modelId:c},zIndex:-1,strokeWidth:r.width,stroke:r.color,dashType:r.dashType},i=0;i<t.length;i++)o=z.onCircle(l,t[i],n),d.push(e.createLine(l.x,l.y,o.x,o.y,a));return d},gridLineAngles:function(t,n,r){var i=this,o=i.intervals(n,r);return e.map(o,function(e){var n=i.intervalAngle(e);return t.options.visible&&90===n?undefined:n})}},ht=P.extend({options:{startAngle:90,labels:{margin:G(10)},majorGridLines:{visible:!0},justified:!0},range:function(){return{min:0,max:this.options.categories.length}},reflow:function(e){this.box=e,this.reflowLabels()},lineBox:function(){return this.box},reflowLabels:function(){var e,t,n=this,r=new T,i=n.labels;for(t=0;t<i.length;t++)i[t].reflow(r),e=i[t].box,i[t].reflow(n.getSlot(t).adjacentBox(0,e.width(),e.height()))},intervals:function(e,t){var n,r=this,i=r.options,o=i.categories.length,a=0,s=0,l=o/e||1,c=360/l,d=[];for(t&&(s=360/(o/t)),n=0;l>n;n++)a=Q(a,$),0!==a%s&&d.push(a%360),i.reverse?a=360+a-c:a+=c;return d},majorIntervals:function(){return this.intervals(1)},minorIntervals:function(){return this.intervals(.5)},intervalAngle:function(e){return(360+e+this.options.startAngle)%360},majorAngles:function(){return e.map(this.majorIntervals(),e.proxy(this.intervalAngle,this))},renderLine:function(){return[]},majorGridLineAngles:function(e){return this.gridLineAngles(e,1)},minorGridLineAngles:function(e,t){return this.gridLineAngles(e,.5,t?1:0)},renderPlotBands:function(e){var t,n,r,i,o,a,s=this,l=s.options,c=l.plotBands||[],d=[];for(t=0;t<c.length;t++)n=c[t],r=s.plotBandSlot(n),i=s.getSlot(n.from),o=n.from-y.floor(n.from),r.startAngle+=o*i.angle,a=y.ceil(n.to)-n.to,r.angle-=(a+o)*i.angle,d.push(e.createSector(r,{fill:n.color,fillOpacity:n.opacity,strokeOpacity:n.opacity,zIndex:-1}));return d},plotBandSlot:function(e){return this.getSlot(e.from,e.to-1)},getSlot:function(e,t){var n,r,i,o=this,a=o.options,s=a.justified,l=o.box,c=o.majorAngles(),d=c.length,u=360/d;return a.reverse&&!s&&(e=(e+1)%d),e=q(y.floor(e),0,d-1),r=c[e],s&&(r-=u/2,0>r&&(r+=360)),t=q(y.ceil(t||e),e,d-1),n=t-e+1,i=u*n,new F(l.center(),0,l.height()/2,r,i)},pointCategoryIndex:function(e){var t,n,r=this,i=null,o=r.options.categories.length;for(t=0;o>t;t++)if(n=r.getSlot(t),n.containsPoint(e)){i=t;break}return i}});b(ht.fn,ut),r=O.extend({options:{majorGridLines:{visible:!0}},renderPlotBands:function(e){var t,n,r,i,o,a=this,s=a.options,l=s.plotBands||[],c=[],d=s.majorGridLines.type,u=a.plotArea.polarAxis,h=u.majorAngles(),f=u.box.center();for(t=0;t<l.length;t++)n=l[t],r={fill:n.color,fillOpacity:n.opacity,strokeOpacity:n.opacity,zIndex:-1},i=a.getSlot(n.from,n.to),o=new F(f,f.y-i.y2,f.y-i.y1,0,360),c.push(d===Y?e.createRing(o,r):e.createPolyline(a.plotBandPoints(o,h),!0,r));return c},plotBandPoints:function(e,t){var n,r=[],i=[];for(n=0;n<t.length;n++)r.push(z.onCircle(e.c,t[n],e.ir)),i.push(z.onCircle(e.c,t[n],e.r));return r.reverse(),r.push(r[0]),i.push(i[0]),i.concat(r)},renderGridLines:function(e,t){var n,r=this,i=r.options,o=r.getTickPositions(i.majorUnit),a=t.majorAngles(),s=0,l=t.box.center(),c=[];return i.majorGridLines.visible&&(s=i.majorUnit,c=r.gridLineElements(e,l,o,a,i.majorGridLines)),i.minorGridLines.visible&&(n=r.getTickPositions(i.minorUnit,s),N(c,r.gridLineElements(e,l,n,a,i.minorGridLines))),c},gridLineElements:function(e,t,n,r,i){var o,a,s,l,c,d=this,u=d.plotArea.options.modelId,h=[];for(o={data:{modelId:u},zIndex:-1,strokeWidth:i.width,stroke:i.color,dashType:i.dashType},l=0;l<n.length;l++)if(s=t.y-n[l],s>0)if(i.type===Y)h.push(e.createCircle(t,s,o));else{for(a=[],c=0;c<r.length;c++)a.push(z.onCircle(t,r[c],s));h.push(e.createPolyline(a,!0,o))}return h},getValue:function(e){var t,r,i,o,a,s,l,c=this,d=c.options,u=c.lineBox(),h=c.plotArea.polarAxis,f=h.majorAngles(),p=h.box.center(),g=e.distanceTo(p),m=g;return d.majorGridLines.type!==Y&&f.length>1&&(t=e.x-p.x,r=e.y-p.y,i=(y.atan2(r,t)/J+540)%360,f.sort(function(e,t){return n(e,i)-n(t,i)}),o=n(f[0],f[1])/2,a=n(i,f[0]),s=90-o,l=180-a-s,m=g*(y.sin(l*J)/y.sin(s*J))),O.fn.getValue.call(c,new z(u.x1,u.y2-m))}}),i=k.extend({init:function(e){var t=this;k.fn.init.call(t,e),e=t.options,e.minorUnit=e.minorUnit||t.options.majorUnit/2},options:{type:"polar",startAngle:0,reverse:!1,majorUnit:60,min:0,max:360,labels:{margin:G(10)},majorGridLines:{color:X,visible:!0},minorGridLines:{color:"#aaa"}},getDivisions:function(e){return O.fn.getDivisions.call(this,e)-1},reflow:function(e){this.box=e,this.reflowLabels()},reflowLabels:function(){var e,t,n=this,r=new T,i=n.majorIntervals(),o=n.labels;for(t=0;t<o.length;t++)o[t].reflow(r),e=o[t].box,o[t].reflow(n.getSlot(i[t]).adjacentBox(0,e.width(),e.height()))},lineBox:function(){return this.box},intervals:function(e,t){var n,r=this,i=r.options,o=r.getDivisions(e),a=i.min,s=[];for(t&&(t/=e),n=0;o>n;n++)0!==n%t&&s.push((360+a)%360),a+=e;return s},majorIntervals:function(){return this.intervals(this.options.majorUnit)},minorIntervals:function(){return this.intervals(this.options.minorUnit)},intervalAngle:function(e){return(360+e-this.options.startAngle)%360},majorAngles:ht.fn.majorAngles,renderLine:function(){return[]},majorGridLineAngles:function(e){return this.gridLineAngles(e,this.options.majorUnit)},minorGridLineAngles:function(e,t){return this.gridLineAngles(e,this.options.minorUnit,t?this.options.majorUnit:0)},renderPlotBands:ht.fn.renderPlotBands,plotBandSlot:function(e){return this.getSlot(e.from,e.to)},getSlot:function(e,t){var n,r=this,i=r.options,o=i.startAngle,a=r.box;return e=q(e,i.min,i.max),t=q(t||e,e,i.max),i.reverse&&(e*=-1,t*=-1),e=(540-e-o)%360,t=(540-t-o)%360,e>t&&(n=e,e=t,t=n),new F(a.center(),0,a.height()/2,e,t-e)},getValue:function(e){var t=this,n=t.options,r=t.box.center(),i=e.x-r.x,o=e.y-r.y,a=y.round(y.atan2(o,i)/J),s=n.startAngle;return n.reverse||(a*=-1,s*=-1),(a+s+360)%360},labelsCount:O.fn.labelsCount,createAxisLabel:O.fn.createAxisLabel}),b(i.fn,ut),o=M.extend({options:{gap:1,spacing:0},reflow:function(e){var t,n,r=this,i=r.options,o=r.children,a=i.gap,s=i.spacing,l=o.length,c=l+a+s*(l-1),d=e.angle/c,u=e.startAngle+d*(a/2);for(n=0;l>n;n++)t=e.clone(),t.startAngle=u,t.angle=d,o[n].sector&&(t.r=o[n].sector.r),o[n].reflow(t),o[n].sector=t,u+=d+d*s}}),a=M.extend({reflow:function(e){var t,n,r,i=this,o=i.options.isReversed,a=i.children,s=a.length,l=o?s-1:0,c=o?-1:1;for(i.box=new T,r=l;r>=0&&s>r;r+=c)t=a[r].sector,t.startAngle=e.startAngle,t.angle=e.angle,r!==l&&(n=a[o?r+1:r-1].sector,t.ir=n.r,t.r+=t.ir)}}),s=I.extend({init:function(e,t){I.fn.init.call(this,e,null,t)},options:{overlay:{gradient:null},labels:{distance:10}}}),l=S.extend({pointType:function(){return s},clusterType:function(){return o},stackType:function(){return a},valueSlot:function(e,t){return e.getSlot(t)},categorySlot:function(e,t){return e.getSlot(t)},pointSlot:function(e,t){var n=e.clone(),r=e.c.y-t.y1;return n.r=r,n},reflow:D.fn.reflow,reflowPoint:function(e,t){e.sector=t,e.reflow()}}),c=L.extend({pointSlot:function(e,t){var n=e.c.y-t.y1,r=z.onCircle(e.c,e.middle(),n);return new T(r.x,r.y,r.x,r.y)},createSegment:function(e,t,n){var r=new E(e,t,n);return e.length===t.data.length&&(r.options.closed=!0),r}}),d=C.extend({points:function(){return E.fn.points.call(this,this.stackPoints)}}),u=c.extend({createSegment:function(e,t,n,r){var i,o=this,a=o.options;return a.isStacked&&n>0&&r&&(i=r.linePoints.slice(0).reverse()),e.push(e[0]),new d(e,i,t,n)},seriesMissingValues:function(e){return e.missingValues||lt}}),h=U.extend({pointSlot:function(e,t){var n=e.c.y-t.y1,r=z.onCircle(e.c,e.startAngle,n);return new T(r.x,r.y,r.x,r.y)}}),f=j.extend({pointSlot:h.fn.pointSlot}),p=C.extend({points:function(){var e=this,t=e.parent,n=t.plotArea,r=n.polarAxis,i=r.box.center(),o=e.stackPoints,a=E.fn.points.call(e,o);return a.unshift(i),a.push(i),a}}),g=f.extend({createSegment:function(e,t,n){return new p(e,[],t,n)},seriesMissingValues:function(e){return e.missingValues||lt},sortPoints:function(e){return e.sort(t)}}),m=V.extend({init:function(e,t){var n=this;n.valueAxisRangeTracker=new A,V.fn.init.call(n,e,t)},render:function(){var e=this;e.addToLegend(e.series),e.createPolarAxis(),e.createCharts(),e.createValueAxis()},createValueAxis:function(){var e,t,n=this,i=n.valueAxisRangeTracker,o=i.query();e=i.query(name)||o||{min:0,max:1},e&&o&&(e.min=y.min(e.min,o.min),e.max=y.max(e.max,o.max)),t=new r(e.min,e.max,n.valueAxisOptions({roundToMajorUnit:!1})),n.valueAxis=t,n.appendAxis(t)},reflowAxes:function(){var e,t=this,n=t.options.plotArea,r=t.valueAxis,i=t.polarAxis,o=t.box,a=y.min(o.width(),o.height())*Z,s=G(n.padding||{},a),l=o.clone().unpad(s),c=l.clone().shrink(0,l.height()/2);i.reflow(l),r.reflow(c),e=r.lineBox().height()-r.box.height(),r.reflow(r.box.unpad({top:e})),t.axisBox=l,t.alignAxes(l)},alignAxes:function(){var e=this,t=e.valueAxis,n=t.getSlot(t.options.min),r=t.options.reverse?2:1,i=e.polarAxis.getSlot(0).c,o=t.box.translate(i.x-n[at+r],i.y-n[st+r]);t.reflow(o)},backgroundBox:function(){return this.box}}),v=m.extend({options:{categoryAxis:{categories:[]},valueAxis:{}},createPolarAxis:function(){var e,t=this;e=new ht(t.options.categoryAxis),t.polarAxis=e,t.categoryAxis=e,t.appendAxis(e)},valueAxisOptions:function(e){var t=this;return t._hasBarCharts&&b(e,{majorGridLines:{type:Y},minorGridLines:{type:Y}}),b(e,t.options.valueAxis)},appendChart:B.fn.appendChart,createCharts:function(){var e=this,t=e.series,n=e.panes[0];e.createAreaChart(W(t,[rt]),n),e.createLineChart(W(t,[ot]),n),e.createBarChart(W(t,[it]),n)},createAreaChart:function(e,t){if(0!==e.length){var n=this,r=e[0],i=n.filterVisibleSeries(e),o=new u(n,{isStacked:r.stack&&i.length>1,series:e});n.appendChart(o,t)}},createLineChart:function(e,t){if(0!==e.length){var n=this,r=e[0],i=n.filterVisibleSeries(e),o=new c(n,{isStacked:r.stack&&i.length>1,series:e});n.appendChart(o,t)}},createBarChart:function(e,t){if(0!==e.length){var n=this,r=e[0],i=n.filterVisibleSeries(e),o=new l(n,{isStacked:r.stack&&i.length>1,series:e,gap:r.gap,spacing:r.spacing});n._hasBarCharts=!0,n.appendChart(o,t)}},seriesCategoryAxis:function(){return this.categoryAxis},click:function(t,n){var r,i,o=this,a=t._eventCoordinates(n),s=new z(a.x,a.y);r=o.categoryAxis.getCategory(s),i=o.valueAxis.getValue(s),null!==r&&null!==i&&t.trigger(K,{element:e(n.target),category:r,value:i})}}),x=m.extend({options:{xAxis:{},yAxis:{}},createPolarAxis:function(){var e,t=this;e=new i(t.options.xAxis),t.polarAxis=e,t.axisX=e,t.appendAxis(e)},valueAxisOptions:function(e){var t=this;return b(e,{majorGridLines:{type:Y},minorGridLines:{type:Y}},t.options.yAxis)},createValueAxis:function(){var e=this;m.fn.createValueAxis.call(e),e.axisY=e.valueAxis},appendChart:function(e,t){var n=this;n.valueAxisRangeTracker.update(e.yAxisRanges),V.fn.appendChart.call(n,e,t)},createCharts:function(){var e=this,t=e.series,n=e.panes[0];e.createLineChart(W(t,[tt]),n),e.createScatterChart(W(t,[nt]),n),e.createAreaChart(W(t,[et]),n)},createLineChart:function(e,t){if(0!==e.length){var n=this,r=new f(n,{series:e});n.appendChart(r,t)}},createScatterChart:function(e,t){if(0!==e.length){var n=this,r=new h(n,{series:e});n.appendChart(r,t)}},createAreaChart:function(e,t){if(0!==e.length){var n=this,r=new g(n,{series:e});n.appendChart(r,t)}},click:function(t,n){var r,i,o=this,a=t._eventCoordinates(n),s=new z(a.x,a.y);r=o.axisX.getValue(s),i=o.axisY.getValue(s),null!==r&&null!==i&&t.trigger(K,{element:e(n.target),x:r,y:i})}}),R.current.register(x,ct),R.current.register(v,dt),H.current.register(ct,[at,st],["color"]),H.current.register(dt,["value"],["color"]),b(_,{PolarAxis:i,PolarPlotArea:x,RadarBarChart:l,RadarCategoryAxis:ht,RadarClusterLayout:o,RadarNumericAxis:r,RadarPlotArea:v,RadarStackLayout:a})}(window.kendo.jQuery),function(){function e(e,t,n){var r=S(e.from)?e.from:F,i=S(e.to)?e.to:z;return e.from=a.max(a.min(i,r),t),e.to=a.min(a.max(i,r),n),e}var t,n,r,i,o,a=Math,s=window.kendo,l=s.ui.Widget,c=s.deepExtend,d=s.dataviz,u=d.Axis,h=d.Box2D,f=d.ChartElement,p=d.NumericAxis,g=d.Pin,m=d.Ring,v=d.RootElement,x=d.RotationAnimation,y=d.BarIndicatorAnimatin,w=d.ArrowAnimation,b=d.append,_=d.animationDecorator,C=d.autoMajorUnit,k=d.getElement,A=d.getSpacing,S=d.defined,T=d.rotatePoint,P=d.Point2D,D=d.round,B=d.uniqueId,M=150,I="arrow",L="arrowPointer",E="barIndicator",O="#000",V=.05,R=d.COORD_PRECISION,z=Number.MAX_VALUE,F=-Number.MAX_VALUE,U=200,j=.5,H=200,N=60,G=60,W=a.PI/180,q="inside",Q="needle",Y="outside",X="radialPointer",$=90,Z=f.extend({init:function(e,t){var n=this,r=e.options;f.fn.init.call(n,t),t=n.options,t.id||(t.id=B()),t.fill=t.color,n.scale=e,t.value=S(t.value)?a.min(a.max(t.value,r.min),r.max):r.min},options:{color:O},value:function(e){var t=this,n=t.options,r=n.value,i=t.scale.options;return 0===arguments.length?r:(n._oldValue=n.value,n.value=a.min(a.max(e,i.min),i.max),t.repaint(),undefined)}}),J=Z.extend({options:{shape:Q,cap:{size:V},arrow:{width:16,height:14},animation:{type:X,speed:M}},reflow:function(){var e=this,t=e.options,n=e.scale,r=n.ring,i=r.c,o=r.r*t.cap.size;e.box=new h(i.x-o,i.y-o,i.x+o,i.y+o)},repaint:function(){var e=this,t=e.scale,n=e.options,r=e.elements[0],i=n.animation,o=t.slotAngle(t.options.min),a=t.slotAngle(n._oldValue)-o,s=r._animation;r.options.rotation[0]=t.slotAngle(n.value)-o,s&&s.abort(),i.transitions===!1?r.refresh(k(n.id)):(s=r._animation=new x(r,c(i,{startAngle:a,reverse:t.options.reverse})),s.setup(),s.play())},_renderNeedle:function(e,t,n,r){var i=this,o=i.options,a=i.scale,s=a.ring.r*o.cap.size;return[e.createPolyline([T((t.x1+t.x2)/2,t.y1+a.options.minorTicks.size,n.x,n.y,r),T(n.x-s/2,n.y,n.x,n.y,r),T(n.x+s/2,n.y,n.x,n.y,r)],!0,o),e.createCircle(n,s,{fill:o.cap.color||o.color})]},_renderArrow:function(e,t,n,r){var i=this,o=i.options,a=i.scale,s=a.ring.clone(),l=5,c=o.arrow,d=c.height;return s.ir=s.r-l,[e.createPin(new g({origin:T((t.x1+t.x2)/2,t.y1+d,n.x,n.y,r),height:c.height,radius:l,rotation:r,arcAngle:180}),o),e.createRing(s,{fill:o.color})]},renderPointer:function(e){var t,n=this,r=n.scale,i=r.ring,o=i.c,a=i.r,s=n.options,l=new h(o.x-a,o.y-a,o.x+a,o.y+a),d=l.center(),u=r.slotAngle(r.options.min),f=$-u;return s.animation!==!1&&c(s.animation,{startAngle:0,center:d,reverse:r.options.reverse}),c(s,{rotation:[r.slotAngle(s.value)-u,d.x,d.y]}),t=s.shape==I?n._renderArrow(e,l,d,f):n._renderNeedle(e,l,d,f)},getViewElements:function(e){var t=this,n=t.renderPointer(e);return t.elements=n,n}}),K=p.extend({init:function(e){var t=this;t.options=c({},t.options,e),t.options.majorUnit=t.options.majorUnit||C(t.options.min,t.options.max),u.fn.init.call(t,t.options),t.options.minorUnit=t.options.minorUnit||t.options.majorUnit/10},options:{min:0,max:100,majorTicks:{size:15,align:q,color:O,width:j,visible:!0},minorTicks:{size:10,align:q,color:O,width:j,visible:!0},startAngle:-30,endAngle:210,labels:{position:q,padding:2}},reflow:function(e){var t=this,n=t.options,r=e.center(),i=a.min(e.height(),e.width())/2,o=t.ring||new d.Ring(r,i-n.majorTicks.size,i,n.startAngle,n.endAngle-n.startAngle);t.ring=o,t.box=o.getBBox(),t.arrangeLabels()},slotAngle:function(e){var t,n=this.options,r=n.startAngle,i=n.reverse,o=n.endAngle-r,a=n.min,s=n.max;return t=i?n.endAngle-(e-a)/(s-a)*o:(e-a)/(s-a)*o+r},renderTicks:function(e){function t(t,i,o,a,s){var l,c,d,u=n.tickAngles(t,i),h=s/i,f=u.length;if(a)for(l=0;f>l;l++)0!==l%h&&(d=t.point(u[l]),c=t.point(u[l],!0),r.push(e.createLine(c.x,c.y,d.x,d.y,{align:!1,stroke:o.color,strokeWidth:o.width})))}var n=this,r=[],i=n.ring,o=i.clone(),a=n.options,s=a.minorTicks.size;return t(i,a.majorUnit,a.majorTicks,a.majorTicks.visible),a.labels.position==q?o.radius(o.r-s,!0):o.radius(o.ir+s),t(o,a.minorUnit,a.minorTicks,a.minorTicks.visible,a.majorUnit),r},arrangeLabels:function(){var e,t,n,r,i,o,s,l,c,d,u=this,f=u.options,p=u.ring.clone(),g=u.tickAngles(p,f.majorUnit),m=u.labels,v=m.length,x=f.labels,y=x.padding,w=.05*p.r,b=f.rangeSize=f.rangeSize||.1*p.r,_=f.ranges||[];for(undefined!==u.options.rangeDistance?w=u.options.rangeDistance:u.options.rangeDistance=w,x.position===q&&_.length&&(p.r-=b+w,p.ir-=b+w),s=0;v>s;s++)i=m[s],e=i.box.width()/2,t=i.box.height()/2,r=g[s],n=r*W,d=x.position===q,o=p.point(r,d),l=o.x+a.cos(n)*(e+y)*(d?1:-1),c=o.y+a.sin(n)*(t+y)*(d?1:-1),i.reflow(new h(l-e,c-t,l+e,c+t)),u.box.wrap(i.box)},tickAngles:function(e,t){var n,r=this,i=r.options,o=i.reverse,a=i.max-i.min,s=e.angle,l=e.startAngle,c=a/t,d=s/c,u=[];for(o&&(l+=s,d=-d),n=0;c>n;n++)u.push(D(l,R)),l+=d;return D(l)<=i.endAngle&&u.push(l),u},renderRanges:function(e){var t,n,r,i,o,a=this,s=[],l=a.rangeSegments(),c=l.length,d=a.options.reverse;if(c)for(i=a.getRadius(),o=0;c>o;o++)r=l[o],t=a.slotAngle(r[d?"to":"from"]),n=a.slotAngle(r[d?"from":"to"]),0!==n-t&&s.push(e.createRing(new m(a.ring.c,i.inner,i.outer,t,n-t),{fill:r.color,fillOpacity:r.opacity,zIndex:-1}));return s},rangeSegments:function(){function t(e,t,n){return{from:e,to:t,color:n}}var n,r,i,o,a,s=this,l=s.options,c=l.ranges||[],d=c.length,u=l.rangePlaceholderColor,h=[],f=l.min,p=l.max;if(d)for(h.push(t(f,p,u)),o=0;d>o;o++)for(n=e(c[o],f,p),r=h.length,a=0;r>a;a++)if(i=h[a],i.from<=n.from&&n.from<=i.to){h.push(t(n.from,n.to,n.color)),i.from<=n.to&&n.to<=i.to&&h.push(t(n.to,i.to,u)),i.to=n.from;break}return h},getRadius:function(){var e,t,n=this,r=n.options,i=r.rangeSize,o=r.rangeDistance,a=n.ring;return r.labels.position===Y?(t=a.ir-o,e=t-i):(t=a.r,e=t-i,a.r-=i+o,a.ir-=i+o),{inner:e,outer:t}},getViewElements:function(e){var t=this,n=f.fn.getViewElements.call(t,e);return b(n,t.renderRanges(e)),b(n,t.renderTicks(e)),n}}),et=f.extend({init:function(e){f.fn.init.call(this,e),this.render()},options:{margin:{},background:"",border:{color:O,width:0},minorTicks:{align:q}},reflow:function(e){var t,n=this,r=n.scale,i=n.pointer;r.reflow(e),t=r.box.clone(),i.scale=r,i.reflow(),t.wrap(i.box),n.box=t,n.fitScale(e),n.alignScale(e)},alignScale:function(e){var t=this,n=t.box.center(),r=e.center(),i=n.x-r.x,o=n.y-r.y,a=t.scale,s=t.pointer;a.ring.c.x-=i,a.ring.c.y-=o,a.reflow(e),s.reflow(),t.box=a.box.clone().wrap(s.box)},fitScale:function(e){for(var t,n,r,i,o=this,s=o.scale,l=s.ring,c=o.box,d=a.abs(o.getDiff(c,e)),u=D(d,R),h=D(-d,R),f=0;!(!(100>f)||(f++,u!=i&&(t=o.getPlotBox(u,e,l),t>=0&&2>=t))||h!=i&&(r=o.getPlotBox(h,e,l),r>=0&&2>=r)||(i=t>0&&r>0?2*u:0>t&&0>r?2*h:D((u+h)/2||1,R),n=o.getPlotBox(i,e,l),n>=0&&2>=n));)n>0?(h=i,r=n):(u=i,t=n)},getPlotBox:function(e,t,n){var r=this,i=r.scale,o=r.pointer;return n=n.clone(),n.r+=e,n.ir+=e,i.ring=n,i.reflow(t),o.scale=i,o.reflow(),r.box=i.box.clone().wrap(o.box),r.getDiff(r.box,t)},getDiff:function(e,t){return a.min(t.width()-e.width(),t.height()-e.height())},render:function(){var e,t=this,n=t.options;e=t.scale=new K(n.scale),t.append(t.scale),t.pointer=new J(e,c({},n.pointer,{animation:{transitions:n.transitions}})),t.append(t.pointer)}}),tt=p.extend({init:function(e){var t=this;t.options=c({},t.options,e),t.options=c({},t.options,{labels:{mirror:t.options.mirror}}),t.options.majorUnit=t.options.majorUnit||C(t.options.min,t.options.max),u.fn.init.call(t,t.options),t.options.minorUnit=t.options.minorUnit||t.options.majorUnit/10},options:{min:0,max:50,majorTicks:{size:15,align:q,color:O,width:j,visible:!0},minorTicks:{size:10,align:q,color:O,width:j,visible:!0},line:{width:j},labels:{position:q,padding:2},mirror:!1,_alignLines:!1},renderRanges:function(t){var n,r,i,o,a,s=this,l=s.options,c=l.min,d=l.max,u=l.ranges||[],f=l.vertical,p=l.labels.mirror,g=[],m=u.length,v=l.rangeSize||l.minorTicks.size/2;if(m)for(o=0;m>o;o++)n=e(u[o],c,d),a=s.getSlot(n.from,n.to),r=f?s.lineBox():a,i=f?a:s.lineBox(),f?r.x1-=v*(p?-1:1):i.y2+=v*(p?-1:1),g.push(t.createRect(new h(r.x1,i.y1,r.x2,i.y2),{fill:n.color,fillOpacity:n.opacity}));return g},getViewElements:function(e){var t=this,n=p.fn.getViewElements.call(t,e);return b(n,t.renderRanges(e)),n}}),nt=Z.extend({init:function(e,t){var n=this;Z.fn.init.call(n,e,t),n.options=c({size:n.pointerSize(),track:{visible:S(t.track)}},n.options)},options:{shape:E,track:{border:{width:1}},color:O,border:{width:1},opacity:1,margin:A(3),animation:{type:E},visible:!0},repaint:function(){var e=this,t=e.scale,n=e.options,r=e.element,i=r._animation;i&&i.abort(),n.animation.transitions===!1?(e.getViewElements(e._view),r.points=e.element.points,r.refresh(k(n.id))):(n.animation=c({},n.animation,{endPosition:t.getSlot(t.options.min,n.value),reverse:t.options.reverse}),i=r._animation=n.shape===I?new w(r,n.animation):new y(r,n.animation),i.setup(),i.play())},reflow:function(){var e,t,n,r=this,i=r.options,o=r.scale,a=o.lineBox(),s=i.track.size||i.size,l=i.size/2,c=o.options.mirror,d=A(i.margin),u=o.options.vertical,f=u?d[c?"left":"right"]:d[c?"bottom":"top"];f=c?-f:f,u?(n=new h(a.x1+f,a.y1,a.x1+f,a.y2),c?n.x1-=s:n.x2+=s,i.shape!==E&&(t=new h(a.x2+f,a.y1-l,a.x2+f,a.y2+l),e=t)):(n=new h(a.x1,a.y1-f,a.x2,a.y1-f),c?n.y2+=s:n.y1-=s,i.shape!==E&&(t=new h(a.x1-l,a.y1-f,a.x2+l,a.y1-f),e=t)),r.trackBox=n,r.pointerRangeBox=t,r.box=e||n.clone().pad(i.border.width)},renderPointer:function(e){var t,n=this,r=n.scale,i=n.options,o=S(i.border)?{stroke:i.border.width?i.border.color||i.color:"",strokeWidth:i.border.width,dashType:i.border.dashType}:{},a=c({fill:i.color,fillOpacity:i.opacity,animation:c(i.animation,{startPosition:r.getSlot(r.options.min,i.value),size:i.size,vertical:r.options.vertical,reverse:r.options.reverse}),id:i.id,zIndex:2,align:!1},o),s=n.pointerShape(i.value);
return i.shape===I?(a.animation.type=L,t=e.createPolyline(s,!0,a)):t=e.createRect(s,a),t},pointerShape:function(e){var t,n,r,i=this,o=i.options,a=i.scale,s=a.getSlot(e,a.options.min),l=o.size,c=i.pointerRangeBox,d=a.options.vertical,u=l/2,f=a.options.mirror?-1:1,p=a.options.reverse;return o.shape==I?d?(n=p?"y2":"y1",t=[new P(c.x1,s[n]-u),new P(c.x1-f*l,s[n]),new P(c.x1,s[n]+u)]):(n=p?"x1":"x2",t=[new P(s[n]-u,c.y2),new P(s[n],c.y2+f*l),new P(s[n]+u,c.y2)]):(r=i.trackBox,t=d?new h(r.x1,s.y1,r.x1+l,s.y2):new h(s.x1,r.y1,s.x2,r.y1+l)),t},pointerSize:function(){var e,t=this,n=t.options,r=t.scale,i=r.options.majorTicks.size;return e=n.shape===I?.6*i:.3*i,D(e)},renderTrack:function(e){var t=this,n=t.options,r=n.track,i=r.border||{},o=t.trackBox.clone().pad(i.width||0);return e.createRect(o,{fill:r.color,fillOpacity:r.opacity,stroke:i.width?i.color||r.color:"",strokeWidth:i.width,dashType:i.dashType,align:!1})},getViewElements:function(e){var t=this,n=t.options,r=[];return t.element=t.renderPointer(e),r.push(t.element),!n.track.visible||n.shape!==E&&""!==n.shape||r.push(t.renderTrack(e)),t._view=e,b(r,Z.fn.getViewElements.call(t,e)),r}}),rt=f.extend({init:function(e){f.fn.init.call(this,e),this.render()},options:{plotArea:{margin:{},background:"",border:{color:O,width:0}},pointer:{},scale:{}},reflow:function(e){var t=this,n=t.scale,r=t.pointer;n.reflow(e),r.reflow(e),t.box=t.getBox(e),t.alignElements(),t.shrinkElements()},shrinkElements:function(){var e=this,t=e.scale,n=e.pointer,r=t.box.clone(),i=n.box,o=t.options.vertical?"y":"x";r[o+1]+=a.max(r[o+1]-i[o+1],0),r[o+2]-=a.max(i[o+2]-r[o+2],0),t.reflow(r),n.reflow(e.box)},getBox:function(e){var t,n=this,r=n.scale,i=n.pointer,o=e.center(),a=i.box.clone().wrap(r.box);return r.options.vertical?(t=a.width()/2,a=new h(o.x-t,e.y1,o.x+t,e.y2)):(t=a.height()/2,a=new h(e.x1,o.y-t,e.x2,o.y+t)),a},alignElements:function(){var e,t=this,n=t.scale,r=t.pointer,i=n.box,o=r.box.clone().wrap(n.box),a=t.box;n.options.vertical?(e=a.center().x-o.center().x,n.reflow(new h(i.x1+e,a.y1,i.x2+e,a.y2))):(e=a.center().y-o.center().y,n.reflow(new h(a.x1,i.y1+e,a.x2,i.y2+e))),r.reflow(t.box)},render:function(){var e,t=this,n=t.options;e=t.scale=new tt(n.scale),t.append(t.scale),t.pointer=new nt(e,c({},n.pointer,{animation:{transitions:n.transitions}})),t.append(t.pointer)},getViewElements:function(e){var t=this,n=t.options.plotArea,r=f.fn.getViewElements.call(t,e),i=n.border||{},o=[e.createRect(t.box,{fill:n.background,stroke:i.width?i.color:"",strokeWidth:i.width,dashType:i.dashType})];return b(o,r),o}}),it=l.extend({init:function(e,t){var n,r,i,o,a=this,s=d.ui.themes||{};l.fn.init.call(a,e),a.wrapper=a.element,a._originalOptions=c({},t),n=c({},a.options,t),i=n.theme,o=s[i]||s[i.toLowerCase()],r=i&&o?o.gauge:{},a.options=c({},r,n),a.element.addClass("k-gauge"),a.redraw()},options:{plotArea:{},theme:"default",pointer:{},scale:{},gaugeArea:{}},value:function(e){var t=this,n=t._pointers[0];return 0===arguments.length?n.value():(t.options.pointer.value=e,t._view.renderElement?n.value(e):t.redraw(),undefined)},redraw:function(){var e,t=this,n=t.element,r=t._model=t._getModel();t._plotArea=r._plotArea,e=t._view=d.ViewFactory.current.create(r.options,t.options.renderAs),e&&(e.load(r),t._viewElement=e.renderTo(n[0]))},_createModel:function(){var e=this,t=e.options,n=e._getSize();return new v(c({width:n.width,height:n.height,transitions:t.transitions},t.gaugeArea))},_getSize:function(){var e=this,t=e.element,n=t.width(),r=t.height();return n||(n=H),r||(r=U),{width:n,height:r}}});c(it.fn,d.ExportMixin),t=it.extend({init:function(e,t){var n=this;it.fn.init.call(n,e,t),s.notify(n,d.ui)},options:{name:"RadialGauge",transitions:!0,gaugeArea:{background:""}},_getModel:function(){var e,t=this,n=t.options,r=t._createModel();return e=r._plotArea=new et(n),t._pointers=[e.pointer],r.append(e),r.reflow(),r}}),n=it.extend({init:function(e,t){var n=this;it.fn.init.call(n,e,t),s.notify(n,d.ui)},options:{name:"LinearGauge",transitions:!0,gaugeArea:{background:""},scale:{vertical:!0}},_getModel:function(){var e,t=this,n=t.options,r=t._createModel();return e=r._plotArea=new rt(n),t._pointers=[e.pointer],r.append(e),r.reflow(),r},_getSize:function(){var e=this,t=e.element,n=t.width(),r=t.height(),i=e.options.scale.vertical;return n||(n=i?N:H),r||(r=i?U:G),{width:n,height:r}}}),r=_(X,x),i=_(L,w),o=_(E,y),d.ui.plugin(t),d.ui.plugin(n),c(d,{Gauge:it,RadialGaugePlotArea:et,LinearGaugePlotArea:rt,RadialPointer:J,LinearPointer:nt,LinearScale:tt,RadialScale:K,RadialPointerAnimationDecorator:r,ArrowPointerAnimationDecorator:i,BarIndicatorAnimationDecorator:o})}(window.kendo.jQuery),function(e,t){function n(e,t,n){return e.substring(t,t+n)}var r,i,o,a,s,l,c=window.kendo,d=e.extend,u=c.deepExtend,h=e.inArray,f=e.isPlainObject,p=c.dataviz,g=c.ui.Widget,m=p.Box2D,v=p.Text,x=300,y=100,w=10,b=/^\d+$/,_=/^[a-z0-9]+$/i,C="Character '{0}'  is not valid for symbology {1}",k=c.Class.extend({init:function(e){this.setOptions(e)},setOptions:function(e){var t=this;t.options=d({},t.options,e),t.quietZoneLength=t.options.addQuietZone?2*t.options.quietZoneLength:0},encode:function(e,t,n){var r=this;return r.initValue(e,t,n),r.options.addQuietZone&&r.addQuietZone(),r.addData(),r.options.addQuietZone&&r.addQuietZone(),{baseUnit:r.baseUnit,pattern:r.pattern}},options:{quietZoneLength:w,addQuietZone:!0,addCheckSum:!0},initValue:function(){},addQuietZone:function(){this.pattern.push(this.options.quietZoneLength||w)},addData:function(){},invalidCharacterError:function(e){throw Error(c.format(C,e,this.name))}}),A={},S=k.extend({minBaseUnitLength:.7,addData:function(){var e,t=this,n=t.value;for(t.addStart(),e=0;e<n.length;e++)t.addCharacter(n.charAt(e));t.options.addCheckSum&&t.pushCheckSum(),t.addStop(),t.prepareValues()},addCharacter:function(e){var t=this,n=t.characterMap[e];n||t.invalidCharacterError(e),t.addBase(n)},addBase:function(){}}),T={addCharacter:function(e){var t=this;t.characterMap[e]?t.addBase(t.characterMap[e]):e.charCodeAt(0)>127?t.invalidCharacterError(e):t.addExtended(e.charCodeAt(0))},addExtended:function(e){var n,r,i,o=this;for(r=0;r<o.extendedMappings.length;r++)if(n=o.extendedMappings[r].call(o,e)){for(i=0;i<n.length;i++)o.addBase(n[i]);return o.dataLength+=n.length-1,t}},extendedMappings:[function(e){if(e>=97&&122>=e){var t=this;return[t.characterMap[t.shiftCharacters[0]],t.characterMap[String.fromCharCode(e-32)]]}},function(e){if(e>=33&&58>=e){var t=this;return[t.characterMap[t.shiftCharacters[1]],t.characterMap[String.fromCharCode(e+32)]]}},function(e){if(e>=1&&26>=e){var t=this;return[t.characterMap[t.shiftCharacters[2]],t.characterMap[String.fromCharCode(e+64)]]}},function(e){var t,n,r,i=this;if(i.specialAsciiCodes[e])for(t=[],r=0;r<i.specialAsciiCodes[e].length;r++)t.push(i.characterMap[i.shiftCharacters[3]]),t.push(i.characterMap[i.specialAsciiCodes[e][r]]);else n=6*Math.floor(e/32)+(e-27)%32+64,t=[i.characterMap[i.shiftCharacters[3]],i.characterMap[String.fromCharCode(n)]];return t}],specialAsciiCodes:{0:["U"],64:["V"],96:["W"],127:["T","X","Y","Z"]},shiftValuesAsciiCodes:{39:36,40:47,41:43,42:37},characterMap:{"+":!1,"/":!1,$:!1,"%":!1},shiftCharacters:["SHIFT0","SHIFT1","SHIFT2","SHIFT3"]};A.code39=S.extend({name:"Code 39",checkSumMod:43,minRatio:2.5,maxRatio:3,gapWidth:1,splitCharacter:"|",initValue:function(e,t,n){var r=this;r.width=t,r.height=n,r.value=e,r.dataLength=e.length,r.pattern=[],r.patternString=""},prepareValues:function(){var e,t,n=this,r=n.minBaseUnitLength,i=n.maxRatio,o=n.minRatio,a=Math.max(.15*n.width,24);if(n.height<a)throw Error("Insufficient Height. The minimum height for value: "+n.value+" is: "+a);for(;(e=n.getBaseUnit(i))<r&&i>o;)i=parseFloat((i-.1).toFixed(1));if(r>e)throw t=Math.ceil(n.getBaseWidth(o)*r),Error("Insufficient width. The minimum width for value: "+n.value+" is: "+t);n.ratio=i,n.baseUnit=e,n.patternString=n.patternString.substring(0,n.patternString.length-1),n.pattern=n.pattern.concat(n.patternString.replace(/ratio/g,i).split(n.splitCharacter))},getBaseUnit:function(e){return this.width/this.getBaseWidth(e)},getBaseWidth:function(e){var t=this,n=3*(e+2);return t.quietZoneLength+n*(t.dataLength+2)+t.gapWidth*(t.dataLength+1)},addStart:function(){var e=this;e.addPattern(e.characterMap.START.pattern),e.addCharacterGap()},addBase:function(e){this.addPattern(e.pattern),this.addCharacterGap()},addStop:function(){this.addPattern(this.characterMap.START.pattern)},addPattern:function(e){for(var t=0;t<e.length;t++)this.patternString+=this.patternMappings[e.charAt(t)]},addCharacterGap:function(){var e=this;e.patternString+=e.gapWidth+e.splitCharacter},patternMappings:{b:"1|",w:"1|",B:"ratio|",W:"ratio|"},characterMap:{0:{pattern:"bwbWBwBwb",value:0},1:{pattern:"BwbWbwbwB",value:1},2:{pattern:"bwBWbwbwB",value:2},3:{pattern:"BwBWbwbwb",value:3},4:{pattern:"bwbWBwbwB",value:4},5:{pattern:"BwbWBwbwb",value:5},6:{pattern:"bwBWBwbwb",value:6},7:{pattern:"bwbWbwBwB",value:7},8:{pattern:"BwbWbwBwb",value:8},9:{pattern:"bwBWbwBwb",value:9},A:{pattern:"BwbwbWbwB",value:10},B:{pattern:"bwBwbWbwB",value:11},C:{pattern:"BwBwbWbwb",value:12},D:{pattern:"bwbwBWbwB",value:13},E:{pattern:"BwbwBWbwb",value:14},F:{pattern:"bwBwBWbwb",value:15},G:{pattern:"bwbwbWBwB",value:16},H:{pattern:"BwbwbWBwb",value:17},I:{pattern:"bwBwbWBwb",value:18},J:{pattern:"bwbwBWBwb",value:19},K:{pattern:"BwbwbwbWB",value:20},L:{pattern:"bwBwbwbWB",value:21},M:{pattern:"BwBwbwbWb",value:22},N:{pattern:"bwbwBwbWB",value:23},O:{pattern:"BwbwBwbWb",value:24},P:{pattern:"bwBwBwbWb",value:25},Q:{pattern:"bwbwbwBWB",value:26},R:{pattern:"BwbwbwBWb",value:27},S:{pattern:"bwBwbwBWb",value:28},T:{pattern:"bwbwBwBWb",value:29},U:{pattern:"BWbwbwbwB",value:30},V:{pattern:"bWBwbwbwB",value:31},W:{pattern:"BWBwbwbwb",value:32},X:{pattern:"bWbwBwbwB",value:33},Y:{pattern:"BWbwBwbwb",value:34},Z:{pattern:"bWBwBwbwb",value:35},"-":{pattern:"bWbwbwBwB",value:36},".":{pattern:"BWbwbwBwb",value:37}," ":{pattern:"bWBwbwBwb",value:38},$:{pattern:"bWbWbWbwb",value:39},"/":{pattern:"bWbWbwbWb",value:40},"+":{pattern:"bWbwbWbWb",value:41},"%":{pattern:"bwbWbWbWb",value:42},START:{pattern:"bWbwBwBwb"}},options:{addCheckSum:!1}}),A.code39extended=A.code39.extend(u({},T,{name:"Code 39 extended",characterMap:{SHIFT0:{pattern:"bWbwbWbWb",value:41},SHIFT1:{pattern:"bWbWbwbWb",value:40},SHIFT2:{pattern:"bWbWbWbwb",value:39},SHIFT3:{pattern:"bwbWbWbWb",value:42}}})),A.code93=S.extend({name:"Code 93",cCheckSumTotal:20,kCheckSumTotal:15,checkSumMod:47,initValue:function(e,t,n){var r=this;r.value=e,r.width=t,r.height=n,r.pattern=[],r.values=[],r.dataLength=e.length},prepareValues:function(){var e=this,t=Math.max(.15*e.width,24);if(e.height<t)throw Error("Insufficient Height");if(e.setBaseUnit(),e.baseUnit<e.minBaseUnitLength)throw Error("Insufficient Width")},setBaseUnit:function(){var e=this,t=2;e.baseUnit=e.width/(9*(e.dataLength+2+t)+e.quietZoneLength+1)},addStart:function(){var e=this.characterMap.START.pattern;this.addPattern(e)},addStop:function(){var e=this;e.addStart(),e.pattern.push(e.characterMap.TERMINATION_BAR)},addBase:function(e){this.addPattern(e.pattern),this.values.push(e.value)},pushCheckSum:function(){var e,t,n=this,r=n._getCheckValues();for(n.checksum=r.join(""),t=0;t<r.length;t++)e=n.characterMap[n._findCharacterByValue(r[t])],n.addPattern(e.pattern)},_getCheckValues:function(){var e,t,n,r=this,i=r.values,o=i.length,a=0;for(n=o-1;n>=0;n--)a+=r.weightedValue(i[n],o-n,r.cCheckSumTotal);for(e=a%r.checkSumMod,a=r.weightedValue(e,1,r.kCheckSumTotal),n=o-1;n>=0;n--)a+=r.weightedValue(i[n],o-n+1,r.kCheckSumTotal);return t=a%r.checkSumMod,[e,t]},_findCharacterByValue:function(e){for(var t in this.characterMap)if(this.characterMap[t].value===e)return t},weightedValue:function(e,t,n){return(t%n||n)*e},addPattern:function(e){var t,n;for(n=0;n<e.length;n++)t=parseInt(e.charAt(n),10),this.pattern.push(t)},characterMap:{0:{pattern:"131112",value:0},1:{pattern:"111213",value:1},2:{pattern:"111312",value:2},3:{pattern:"111411",value:3},4:{pattern:"121113",value:4},5:{pattern:"121212",value:5},6:{pattern:"121311",value:6},7:{pattern:"111114",value:7},8:{pattern:"131211",value:8},9:{pattern:"141111",value:9},A:{pattern:"211113",value:10},B:{pattern:"211212",value:11},C:{pattern:"211311",value:12},D:{pattern:"221112",value:13},E:{pattern:"221211",value:14},F:{pattern:"231111",value:15},G:{pattern:"112113",value:16},H:{pattern:"112212",value:17},I:{pattern:"112311",value:18},J:{pattern:"122112",value:19},K:{pattern:"132111",value:20},L:{pattern:"111123",value:21},M:{pattern:"111222",value:22},N:{pattern:"111321",value:23},O:{pattern:"121122",value:24},P:{pattern:"131121",value:25},Q:{pattern:"212112",value:26},R:{pattern:"212211",value:27},S:{pattern:"211122",value:28},T:{pattern:"211221",value:29},U:{pattern:"221121",value:30},V:{pattern:"222111",value:31},W:{pattern:"112122",value:32},X:{pattern:"112221",value:33},Y:{pattern:"122121",value:34},Z:{pattern:"123111",value:35},"-":{pattern:"121131",value:36},".":{pattern:"311112",value:37}," ":{pattern:"311211",value:38},$:{pattern:"321111",value:39},"/":{pattern:"112131",value:40},"+":{pattern:"113121",value:41},"%":{pattern:"211131",value:42},SHIFT0:{pattern:"122211",value:46},SHIFT1:{pattern:"311121",value:45},SHIFT2:{pattern:"121221",value:43},SHIFT3:{pattern:"312111",value:44},START:{pattern:"111141"},TERMINATION_BAR:"1"}}),A.code93extended=A.code93.extend(u({},T,{name:"Code 93 extended",pushCheckSum:function(){var e,t,n=this,r=n._getCheckValues();for(n.checksum=r.join(""),t=0;t<r.length;t++)e=r[t],n.shiftValuesAsciiCodes[e]?n.addExtended(n.shiftValuesAsciiCodes[e]):n.addPattern(n.characterMap[n._findCharacterByValue(e)].pattern)}})),r=c.Class.extend({init:function(e){this.encoding=e},addStart:function(){},is:function(){},move:function(){},pushState:function(){}}),i=r.extend({FNC4:"FNC4",init:function(e,t){var n=this;n.encoding=e,n.states=t,n._initMoves(t)},addStart:function(){this.encoding.addPattern(this.START)},is:function(e,t){var n=e.charCodeAt(t);return this.isCode(n)},move:function(e){for(var t=this,n=0;!t._moves[n].call(t,e)&&n<t._moves.length;)n++},pushState:function(e){var t,n,r=this,i=r.states,o=e.value,a=o.length;for(h("C",i)>=0&&(n=o.substr(e.index).match(/\d{4,}/g),n&&(a=o.indexOf(n[0],e.index)));(t=e.value.charCodeAt(e.index))>=0&&r.isCode(t)&&e.index<a;)r.encoding.addPattern(r.getValue(t)),e.index++},_initMoves:function(e){var t=this;t._moves=[],h(t.FNC4,e)>=0&&t._moves.push(t._moveFNC),h(t.shiftKey,e)>=0&&t._moves.push(t._shiftState),t._moves.push(t._moveState)},_moveFNC:function(e){return e.fnc?(e.fnc=!1,e.previousState==this.key):t},_shiftState:function(e){var n=this;return e.previousState==n.shiftKey&&(e.index+1>=e.value.length||n.encoding[n.shiftKey].is(e.value,e.index+1))?(n.encoding.addPattern(n.SHIFT),e.shifted=!0,!0):t},_moveState:function(){return this.encoding.addPattern(this.MOVE),!0},SHIFT:98}),o={},o.A=i.extend({key:"A",shiftKey:"B",isCode:function(e){return e>=0&&96>e},getValue:function(e){return 32>e?e+64:e-32},MOVE:101,START:103}),o.B=i.extend({key:"B",shiftKey:"A",isCode:function(e){return e>=32&&128>e},getValue:function(e){return e-32},MOVE:100,START:104}),o.C=r.extend({key:"C",addStart:function(){this.encoding.addPattern(this.START)},is:function(e,t){var r=n(e,t,4);return(t+4<=e.length||2==e.length)&&b.test(r)},move:function(){this.encoding.addPattern(this.MOVE)},pushState:function(e){for(var t;(t=n(e.value,e.index,2))&&b.test(t)&&2==t.length;)this.encoding.addPattern(parseInt(t,10)),e.index+=2},getValue:function(e){return e},MOVE:99,START:105}),o.FNC4=r.extend({key:"FNC4",dependentStates:["A","B"],init:function(e,t){this.encoding=e,this._initSubStates(t)},addStart:function(e){var t=e.value.charCodeAt(0)-128,n=this._getSubState(t);this.encoding[n].addStart()},is:function(e,t){var n=e.charCodeAt(t);return this.isCode(n)},isCode:function(e){return e>=128&&256>e},pushState:function(e){var t,n=this,r=n._initSubState(e),i=n.encoding,o=r.value.length;if(e.index+=o,3>o)for(;r.index<o;r.index++)t=r.value.charCodeAt(r.index),r.state=n._getSubState(t),r.previousState!=r.state&&(r.previousState=r.state,i[r.state].move(r)),i.addPattern(i[r.state].MOVE),i.addPattern(i[r.state].getValue(t));else r.state!=r.previousState&&i[r.state].move(r),n._pushStart(r),i.pushData(r,n.subStates),e.index<e.value.length&&n._pushStart(r);e.fnc=!0,e.state=r.state},_pushStart:function(e){var t=this;t.encoding.addPattern(t.encoding[e.state].MOVE),t.encoding.addPattern(t.encoding[e.state].MOVE)},_initSubState:function(e){var t=this,n={value:t._getAll(e.value,e.index),index:0};return n.state=t._getSubState(n.value.charCodeAt(0)),n.previousState=e.previousState==t.key?n.state:e.previousState,n},_initSubStates:function(e){var t,n=this;for(n.subStates=[],t=0;t<e.length;t++)h(e[t],n.dependentStates)>=0&&n.subStates.push(e[t])},_getSubState:function(e){var t,n=this;for(t=0;t<n.subStates.length;t++)if(n.encoding[n.subStates[t]].isCode(e))return n.subStates[t]},_getAll:function(e,t){for(var n,r="";(n=e.charCodeAt(t++))&&this.isCode(n);)r+=String.fromCharCode(n-128);return r}}),o.FNC1=r.extend({key:"FNC1",startState:"C",dependentStates:["C","B"],startAI:"(",endAI:")",init:function(e,t){this.encoding=e,this.states=t},addStart:function(){this.encoding[this.startState].addStart()},is:function(){return h(this.key,this.states)>=0},pushState:function(e){var t,n,r,i=this,o=i.encoding,a=e.value.replace(/\s/g,""),s=RegExp("["+i.startAI+i.endAI+"]","g"),l=e.index,c={state:i.startState};for(o.addPattern(i.START);;){if(c.index=0,r=a.charAt(l)===i.startAI?2:0,t=r>0?i.getBySeparator(a,l):i.getByLength(a,l),t.ai.length)n=l+r+t.id.length+t.ai.length;else if(n=a.indexOf(i.startAI,l+1),0>n){if(l+t.ai.max+t.id.length+r<a.length)throw Error("Separators are required after variable length identifiers");n=a.length}if(c.value=a.substring(l,n).replace(s,""),i.validate(t,c.value),o.pushData(c,i.dependentStates),n>=a.length)break;l=n,c.state!=i.startState&&(o[i.startState].move(c),c.state=i.startState),t.ai.length||o.addPattern(i.START)}e.index=e.value.length},validate:function(e,t){var n=t.substr(e.id.length),r=e.ai;if(!r.type&&!b.test(n))throw Error("Application identifier "+e.id+" is numeric only but contains non numeric character(s).");if("alphanumeric"==r.type&&!_.test(n))throw Error("Application identifier "+e.id+" is alphanumeric only but contains non alphanumeric character(s).");if(r.length&&r.length!==n.length)throw Error("Application identifier "+e.id+" must be "+r.length+" characters long.");if(r.min&&r.min>n.length)throw Error("Application identifier "+e.id+" must be at least "+r.min+" characters long.");if(r.max&&r.max<n.length)throw Error("Application identifier "+e.id+" must be at most "+r.max+" characters long.")},getByLength:function(e,t){var r,i,o,a=this;for(o=2;4>=o;o++)if(r=n(e,t,o),i=a.getAI(r)||a.getAI(r.substring(0,r.length-1)))return{id:r,ai:i};a.unsupportedAIError(r)},unsupportedAIError:function(e){throw Error(c.format("'{0}' is not a supported Application Identifier"),e)},getBySeparator:function(e,t){var n=this,r=e.indexOf(n.startAI,t),i=e.indexOf(n.endAI,r),o=e.substring(r+1,i),a=n.getAI(o)||n.getAI(o.substr(o.length-1));return a||n.unsupportedAIError(o),{ai:a,id:o}},getAI:function(e){var t,n,r,i=this.applicationIdentifiers,o=i.multiKey;if(i[e])return i[e];for(t=0;t<o.length;t++){if(o[t].ids&&h(e,o[t].ids)>=0)return o[t].type;if(o[t].ranges)for(n=o[t].ranges,r=0;r<n.length;r++)if(n[r][0]<=e&&e<=n[r][1])return o[t].type}},applicationIdentifiers:{22:{max:29,type:"alphanumeric"},402:{length:17},7004:{max:4,type:"alphanumeric"},242:{max:6,type:"alphanumeric"},8020:{max:25,type:"alphanumeric"},703:{min:3,max:30,type:"alphanumeric"},8008:{min:8,max:12,type:"alphanumeric"},253:{min:13,max:17,type:"alphanumeric"},8003:{min:14,max:30,type:"alphanumeric"},multiKey:[{ids:["15","17","8005","8100"],ranges:[[11,13],[310,316],[320,336],[340,369]],type:{length:6}},{ids:["240","241","250","251","400","401","403","7002","8004","8007","8110"],ranges:[[-9]],type:{max:30,type:"alphanumeric"}},{ids:["7001"],ranges:[[410,414]],type:{length:13}},{ids:["10","21","254","420","8002"],type:{max:20,type:"alphanumeric"}},{ids:["00","8006","8017","8018"],type:{length:18}},{ids:["01","02","8001"],type:{length:14}},{ids:["422"],ranges:[[424,426]],type:{length:3}},{ids:["20","8102"],type:{length:2}},{ids:["30","37"],type:{max:8,type:"alphanumeric"}},{ids:["390","392"],type:{max:15,type:"alphanumeric"}},{ids:["421","423"],type:{min:3,max:15,type:"alphanumeric"}},{ids:["391","393"],type:{min:3,max:18,type:"alphanumeric"}},{ids:["7003","8101"],type:{length:10}}]},START:102}),a=k.extend({init:function(e){k.fn.init.call(this,e),this._initStates()},_initStates:function(){var e,t=this;for(e=0;e<t.states.length;e++)t[t.states[e]]=new o[t.states[e]](t,t.states)},initValue:function(e,t,n){var r=this;r.pattern=[],r.value=e,r.width=t,r.height=n,r.checkSum=0,r.totalUnits=0,r.index=0,r.position=1},addData:function(){var e=this,t={value:e.value,index:0,state:""};0!==e.value.length&&(t.state=t.previousState=e.getNextState(t,e.states),e.addStart(t),e.pushData(t,e.states),e.addCheckSum(),e.addStop(),e.setBaseUnit())},pushData:function(e,t){for(var n,r=this;;){if(r[e.state].pushState(e),e.index>=e.value.length)break;e.shifted?(n=e.state,e.state=e.previousState,e.previousState=n,e.shifted=!1):(e.previousState=e.state,e.state=r.getNextState(e,t),r[e.state].move(e))}},addStart:function(e){this[e.state].addStart(e),this.position=1},addCheckSum:function(){var e=this;e.checksum=e.checkSum%103,e.addPattern(e.checksum)},addStop:function(){this.addPattern(this.STOP)},setBaseUnit:function(){var e=this;e.baseUnit=e.width/(e.totalUnits+e.quietZoneLength)},addPattern:function(e){var t,n,r=this,i=""+r.characterMap[e];for(n=0;n<i.length;n++)t=parseInt(i.charAt(n),10),r.pattern.push(t),r.totalUnits+=t;r.checkSum+=e*r.position++},getNextState:function(e,t){for(var n=0;n<t.length;n++)if(this[t[n]].is(e.value,e.index))return t[n];this.invalidCharacterError(e.value.charAt(e.index))},characterMap:[212222,222122,222221,121223,121322,131222,122213,122312,132212,221213,221312,231212,112232,122132,122231,113222,123122,123221,223211,221132,221231,213212,223112,312131,311222,321122,321221,312212,322112,322211,212123,212321,232121,111323,131123,131321,112313,132113,132311,211313,231113,231311,112133,112331,132131,113123,113321,133121,313121,211331,231131,213113,213311,213131,311123,311321,331121,312113,312311,332111,314111,221411,431111,111224,111422,121124,121421,141122,141221,112214,112412,122114,122411,142112,142211,241211,221114,413111,241112,134111,111242,121142,121241,114212,124112,124211,411212,421112,421211,212141,214121,412121,111143,111341,131141,114113,114311,411113,411311,113141,114131,311141,411131,211412,211214,211232,2331112],STOP:106}),A.code128a=a.extend({name:"Code 128 A",states:["A"]}),A.code128b=a.extend({name:"Code 128 B",states:["B"]}),A.code128c=a.extend({name:"Code 128 C",states:["C"]}),A.code128=a.extend({name:"Code 128",states:["C","B","A","FNC4"]}),A["gs1-128"]=a.extend({name:"Code GS1-128",states:["FNC1","C","B"]}),s=k.extend({initValue:function(e,t){var n=this;n.pattern=[],n.value=e,n.checkSumLength=0,n.width=t},setBaseUnit:function(){var e=this,t=7;e.baseUnit=e.width/(12*(e.value.length+e.checkSumLength)+e.quietZoneLength+t)},addData:function(){var e,t=this,n=t.value;for(t.addPattern(t.START),e=0;e<n.length;e++)t.addCharacter(n.charAt(e));t.options.addCheckSum&&t.addCheckSum(),t.addPattern(t.STOP),t.setBaseUnit()},addCharacter:function(e){var t=this,n=t.characterMap[e];n||t.invalidCharacterError(e),t.addPattern(n)},addPattern:function(e){for(var t=0;t<e.length;t++)this.pattern.push(parseInt(e.charAt(t),10))},addCheckSum:function(){var e,t=this,n=t.checkSums[t.checkSumType],r=n.call(t.checkSums,t.value);for(t.checksum=r.join(""),e=0;e<r.length;e++)t.checkSumLength++,t.addPattern(t.characterMap[r[e]])},checkSums:{Modulo10:function(e){var t,n,r,i=[0,""],o=e.length%2;for(t=0;t<e.length;t++)i[(t+o)%2]+=parseInt(e.charAt(t),10);for(r=i[0],n=""+2*i[1],t=0;t<n.length;t++)r+=parseInt(n.charAt(t),10);return[(10-r%10)%10]},Modulo11:function(e){var t,n,r,i=0,o=11,a=e.length;for(r=0;a>r;r++)t=((a-r)%6||6)+1,i+=t*e.charAt(r);return n=(o-i%o)%o,10!=n?[n]:[1,0]},Modulo11Modulo10:function(e){var t,n=this.Modulo11(e);return t=e+n[0],n.concat(this.Modulo10(t))},Modulo10Modulo10:function(e){var t,n=this.Modulo10(e);return t=e+n[0],n.concat(this.Modulo10(t))}},characterMap:["12121212","12121221","12122112","12122121","12211212","12211221","12212112","12212121","21121212","21121221"],START:"21",STOP:"121",checkSumType:""}),A.msimod10=s.extend({name:"MSI Modulo10",checkSumType:"Modulo10"}),A.msimod11=s.extend({name:"MSI Modulo11",checkSumType:"Modulo11"}),A.msimod1110=s.extend({name:"MSI Modulo11 Modulo10",checkSumType:"Modulo11Modulo10"}),A.msimod1010=s.extend({name:"MSI Modulo10 Modulo10",checkSumType:"Modulo10Modulo10"}),A.code11=k.extend({name:"Code 11",cCheckSumTotal:10,kCheckSumTotal:9,kCheckSumMinLength:10,checkSumMod:11,DASH_VALUE:10,DASH:"-",START:"112211",STOP:"11221",initValue:function(e,t){var n=this;n.pattern=[],n.value=e,n.width=t,n.totalUnits=0},addData:function(){var e,t=this,n=t.value;for(t.addPattern(t.START),e=0;e<n.length;e++)t.addCharacter(n.charAt(e));t.options.addCheckSum&&t.addCheckSum(),t.addPattern(t.STOP),t.setBaseUnit()},setBaseUnit:function(){var e=this;e.baseUnit=e.width/(e.totalUnits+e.quietZoneLength)},addCheckSum:function(){var e,t=this,n=t.value,r=n.length,i=t.getWeightedSum(n,r,t.cCheckSumTotal)%t.checkSumMod;t.checksum=i+"",t.addPattern(t.characterMap[i]),r++,r>=t.kCheckSumMinLength&&(e=(i+t.getWeightedSum(n,r,t.kCheckSumTotal))%t.checkSumMod,t.checksum+=e,t.addPattern(t.characterMap[e]))},getWeightedSum:function(e,t,n){var r,i=0;for(r=0;r<e.length;r++)i+=this.weightedValue(this.getValue(e.charAt(r)),t,r,n);return i},weightedValue:function(e,t,n,r){var i=(t-n)%r||r;return i*e},getValue:function(e){var t=this;return isNaN(e)?(e!==t.DASH&&t.invalidCharacterError(e),t.DASH_VALUE):parseInt(e,10)},addCharacter:function(e){var t=this,n=t.getValue(e),r=t.characterMap[n];t.addPattern(r)},addPattern:function(e){var t,n;for(n=0;n<e.length;n++)t=parseInt(e.charAt(n),10),this.pattern.push(t),this.totalUnits+=t},characterMap:["111121","211121","121121","221111","112121","212111","122111","111221","211211","211111","112111"],options:{addCheckSum:!0}}),A.postnet=k.extend({name:"Postnet",START:"2",VALID_CODE_LENGTHS:[5,9,11],DIGIT_SEPARATOR:"-",initValue:function(e,t,n){var r=this;r.height=n,r.width=t,r.baseHeight=n/2,r.value=e.replace(RegExp(r.DIGIT_SEPARATOR,"g"),""),r.pattern=[],r.validate(r.value),r.checkSum=0,r.setBaseUnit()},addData:function(){var e,t=this,n=t.value;for(t.addPattern(t.START),e=0;e<n.length;e++)t.addCharacter(n.charAt(e));t.options.addCheckSum&&t.addCheckSum(),t.addPattern(t.START),t.pattern.pop()},addCharacter:function(e){var t=this,n=t.characterMap[e];t.checkSum+=parseInt(e,10),t.addPattern(n)},addCheckSum:function(){var e=this;e.checksum=(10-e.checkSum%10)%10,e.addCharacter(e.checksum)},setBaseUnit:function(){var e=this,t=3;e.baseUnit=e.width/(10*(e.value.length+1)+t+e.quietZoneLength)},validate:function(e){var t=this;if(b.test(e)||t.invalidCharacterError(e.match(/[^0-9]/)[0]),h(e.length,t.VALID_CODE_LENGTHS)<0)throw Error("Invalid value length. Valid lengths for the Postnet symbology are "+t.VALID_CODE_LENGTHS.join(","))},addPattern:function(e){var t,n,r=this;for(n=0;n<e.length;n++)t=r.height-r.baseHeight*e.charAt(n),r.pattern.push({width:1,y1:t,y2:r.height}),r.pattern.push(1)},characterMap:["22111","11122","11212","11221","12112","12121","12211","21112","21121","21211"]}),A.ean13=k.extend({initValue:function(e,t,n){if("number"==typeof e&&(e+=""),12!=e.length||/\D/.test(e))throw Error("Invalid value provided");e.length<12&&(e="");var r=this;r.pattern=[],r.options.height=n,r.baseUnit=t/(95+r.quietZoneLength),r.value=e,r.checksum=r.calculateChecksum(),r.leftKey=e[0],r.leftPart=e.substr(1,6),r.rightPart=e.substr(7)+r.checksum},addData:function(){var e=this;e.addPieces(e.characterMap.start),e.addSide(e.leftPart,e.leftKey),e.addPieces(e.characterMap.middle),e.addSide(e.rightPart),e.addPieces(e.characterMap.start)},addSide:function(e,t){var n,r=this;for(n=0;n<e.length;n++)t&&parseInt(r.keyTable[t].charAt(n),10)?r.addPieces(Array.prototype.slice.call(r.characterMap.digits[e.charAt(n)]).reverse(),!0):r.addPieces(r.characterMap.digits[e.charAt(n)],!0)},addPieces:function(e,t){var n,r=this;for(n=0;n<e.length;n++)t?r.pattern.push({y1:0,y2:.95*r.options.height,width:e[n]}):r.pattern.push(e[n])},calculateChecksum:function(){var e,t,n=0,r=0,i=this.value.split("").reverse().join("");for(e=0;e<i.length;e++)e%2?r+=parseInt(i.charAt(e),10):n+=parseInt(i.charAt(e),10);return t=(10-(3*n+r)%10)%10},keyTable:["000000","001011","001101","001110","010011","011001","011100","010101","010110","011010"],characterMap:{digits:[[3,2,1,1],[2,2,2,1],[2,1,2,2],[1,4,1,1],[1,1,3,2],[1,2,3,1],[1,1,1,4],[1,3,1,2],[1,2,1,3],[3,1,1,2]],start:[1,1,1],middle:[1,1,1,1,1]}}),A.ean8=A.ean13.extend({initValue:function(e,t,n){var r=this;if(7!=e.length||/\D/.test(e))throw Error("Invalid value provided");r.value=e,r.options.height=n,r.checksum=r.calculateChecksum(r.value),r.leftPart=r.value.substr(0,4),r.rightPart=r.value.substr(4)+r.checksum,r.pattern=[],r.baseUnit=t/(67+r.quietZoneLength)}}),l=g.extend({init:function(t,n){var r=this;g.fn.init.call(r,t,n),r.element=e(t),r.element.addClass("k-barcode"),r.view=p.ViewFactory.current.create({},r.options.renderAs),r.setOptions(n)},setOptions:function(t){var n=this;if(n.type=(t.type||n.options.type).toLowerCase(),"upca"==n.type&&(n.type="ean13",t.value="0"+t.value),"upce"==n.type&&(n.type="ean8",t.value="0"+t.value),!A[n.type])throw Error("Encoding "+n.type+"is not supported.");t.value+="",n.encoding=new A[n.type],n.options=e.extend(!0,n.options,t),n.redraw()},redraw:function(){var e=this,t=e.view;e._redraw(t),t.renderTo(e.element[0])},svg:function(){if(p.SVGView){var e=new p.SVGView;return this._redraw(e),e.render()}throw Error("Unable to create SVGView. Check that kendo.dataviz.svg.js is loaded.")},imageDataURL:function(){if(p.CanvasView){if(p.supportsCanvas()){var e=document.createElement("div"),t=new p.CanvasView;return this._redraw(t),t.renderTo(e).toDataURL()}return c.logToConsole("Warning: Unable to generate image. The browser does not support Canvas.\nUser agent: "+navigator.userAgent),null}throw Error("Unable to create CanvasView. Check that kendo.dataviz.canvas.js is loaded.")},_redraw:function(e){var n,r,i,o=this,a=o.options,s=a.text,l=o._getSize(),c=a.border||{},d=o.encoding,u=m(0,0,l.width,l.height).unpad(c.width).unpad(a.padding),h=u.height();o.contentBox=u,e.children=[],o._renderBackground(e,l),i=p.measureText(u,{font:a.text.font}).height,s.visible&&(h-=i),n=d.encode(a.value,l.width-(a.padding.left+a.padding.right),h),s.visible&&(r=a.value,a.checksum&&d.checksum!==t&&(r+=" "+d.checksum),o._renderTextElement(e,r)),o.barHeight=h,e.options.width=l.width,e.options.height=l.height,o._renderElements(e,n.pattern,n.baseUnit)},_getSize:function(){var e=this,t=e.element,n={width:x,height:y};return t.width()>0&&(n.width=t.width()),t.height()>0&&(n.height=t.height()),e.options.width&&(n.width=e.options.width),e.options.height&&(n.height=e.options.height),n},value:function(e){var n=this;return e===t?n.options.value:(n.options.value=e+"",n.redraw(),t)},_renderElements:function(e,t,n){var r,i,o,a=this,s=0+a.options.padding.left;for(o=0;o<t.length;o++)i=f(t[o])?t[o]:{width:t[o],y1:0,y2:a.barHeight},r=i.width*n,o%2&&e.children.push(e.createRect(new m(s,i.y1+a.contentBox.y1,s+r,i.y2+a.contentBox.y1),{fill:a.options.color})),s+=r},_renderBackground:function(e,t){var n=this,r=n.options,i=r.border||{},o=m(0,0,t.width,t.height).unpad(i.width/2),a=e.createRect(o,{fill:r.background,stroke:i.width?i.color:"",strokeWidth:i.width,dashType:i.dashType});e.children.push(a)},_renderTextElement:function(e,t){var n=this,r=n.options.text,i=new v(t,{font:r.font,color:r.color,align:"center",vAlign:"bottom"});
n.text=i,i.reflow(n.contentBox),i.box.unpad(r.margin),e.children.push(e.createText(t,{baseline:i.baseline,x:i.box.x1,y:i.box.y1,color:r.color,font:r.font}))},options:{name:"Barcode",renderAs:"canvas",value:"",type:"code39",checksum:!1,width:0,height:0,color:"black",background:"white",text:{visible:!0,font:"16px Consolas, Monaco, Sans Mono, monospace, sans-serif",color:"black",margin:{top:0,bottom:0,left:0,right:0}},border:{width:0,dashType:"solid",color:"black"},padding:{top:0,bottom:0,left:0,right:0}}}),p.ui.plugin(l),c.deepExtend(p,{encodings:A,Encoding:k})}(window.kendo.jQuery),function(e,t){function n(e){return parseInt(e,2)}function r(e,t){var n=Number(e).toString(2);return n.length<t&&(n=Array(t-n.length+1).join(0)+n),n}function i(e,t){for(var n=[],r=0;r<e.length;)n.push(e.substring(r,r+t)),r+=t;return n}function o(e,t,n,r){for(var i=0;i<e.length;i++)e[i][n][r]=t}function a(e,t,n,r){for(var i=0;i<mt.length;i++)e[i][n][r]=mt[i](n,r)?1^t:parseInt(t,10)}function s(){var e,t;for(t=1;255>t;t++)e=2*it[t-1],e>255&&(e=285^e),it[t]=e,rt[e]=t;e=285^2*it[t-1],it[t]=e,it[-1]=0}function l(){var e,t,n,r=68;for(e=2;r>=e;e++)t=ot[e-1],n=[e,0],ot[e]=w(t,n)}function c(e,n){var r=[],i=e.length-1;do r[i]=it[(e[i]+n)%255],i--;while(e[i]!==t);return r}function d(e,t){return parseInt(e.charAt(t),10)}function u(e,t,n,r,i){t[e][r]=(t[e][r]<<1^i)%128,t[e][r]==gt&&(n[e]+=40)}function h(e,t,n,r,i,o){n[e][o]==r?i[e][o]++:(n[e][o]=r,i[e][o]>=5&&(t[e]+=3+i[e][o]-5),i[e][o]=1)}function f(e,t){var n=Math.floor(100*(e/t)),r=n%5,i=Math.abs(n-r-50),o=Math.abs(n+5-r-50),a=10*Math.min(i/5,o/5);return a}var p,g,m,v,x,y,w,b,_,C,k,A,S,T,P,D,B,M,I,L,E,O,V,R,z,F,U,j,H,N,G,W,q,Q,Y=window.kendo,X=e.extend,$=Y.dataviz,Z=Y.ui.Widget,J=$.Box2D,K="0000",et="numeric",tt="alphanumeric",nt="byte",rt={1:0},it={0:1},ot=[[1,0],[1,25,0]],at={15:20,16:20,18:24,19:24,22:20,24:22,26:24,28:20,30:20,31:24,32:28,33:24,36:18,37:22,39:20,40:24},st=[{L:{groups:[[1,19]],totalDataCodewords:19,errorCodewordsPerBlock:7},M:{groups:[[1,16]],totalDataCodewords:16,errorCodewordsPerBlock:10},Q:{groups:[[1,13]],totalDataCodewords:13,errorCodewordsPerBlock:13},H:{groups:[[1,9]],totalDataCodewords:9,errorCodewordsPerBlock:17}},{L:{groups:[[1,34]],totalDataCodewords:34,errorCodewordsPerBlock:10},M:{groups:[[1,28]],totalDataCodewords:28,errorCodewordsPerBlock:16},Q:{groups:[[1,22]],totalDataCodewords:22,errorCodewordsPerBlock:22},H:{groups:[[1,16]],totalDataCodewords:16,errorCodewordsPerBlock:28}},{L:{groups:[[1,55]],totalDataCodewords:55,errorCodewordsPerBlock:15},M:{groups:[[1,44]],totalDataCodewords:44,errorCodewordsPerBlock:26},Q:{groups:[[2,17]],totalDataCodewords:34,errorCodewordsPerBlock:18},H:{groups:[[2,13]],totalDataCodewords:26,errorCodewordsPerBlock:22}},{L:{groups:[[1,80]],totalDataCodewords:80,errorCodewordsPerBlock:20},M:{groups:[[2,32]],totalDataCodewords:64,errorCodewordsPerBlock:18},Q:{groups:[[2,24]],totalDataCodewords:48,errorCodewordsPerBlock:26},H:{groups:[[4,9]],totalDataCodewords:36,errorCodewordsPerBlock:16}},{L:{groups:[[1,108]],totalDataCodewords:108,errorCodewordsPerBlock:26},M:{groups:[[2,43]],totalDataCodewords:86,errorCodewordsPerBlock:24},Q:{groups:[[2,15],[2,16]],totalDataCodewords:62,errorCodewordsPerBlock:18},H:{groups:[[2,11],[2,12]],totalDataCodewords:46,errorCodewordsPerBlock:22}},{L:{groups:[[2,68]],totalDataCodewords:136,errorCodewordsPerBlock:18},M:{groups:[[4,27]],totalDataCodewords:108,errorCodewordsPerBlock:16},Q:{groups:[[4,19]],totalDataCodewords:76,errorCodewordsPerBlock:24},H:{groups:[[4,15]],totalDataCodewords:60,errorCodewordsPerBlock:28}},{L:{groups:[[2,78]],totalDataCodewords:156,errorCodewordsPerBlock:20},M:{groups:[[4,31]],totalDataCodewords:124,errorCodewordsPerBlock:18},Q:{groups:[[2,14],[4,15]],totalDataCodewords:88,errorCodewordsPerBlock:18},H:{groups:[[4,13],[1,14]],totalDataCodewords:66,errorCodewordsPerBlock:26}},{L:{groups:[[2,97]],totalDataCodewords:194,errorCodewordsPerBlock:24},M:{groups:[[2,38],[2,39]],totalDataCodewords:154,errorCodewordsPerBlock:22},Q:{groups:[[4,18],[2,19]],totalDataCodewords:110,errorCodewordsPerBlock:22},H:{groups:[[4,14],[2,15]],totalDataCodewords:86,errorCodewordsPerBlock:26}},{L:{groups:[[2,116]],totalDataCodewords:232,errorCodewordsPerBlock:30},M:{groups:[[3,36],[2,37]],totalDataCodewords:182,errorCodewordsPerBlock:22},Q:{groups:[[4,16],[4,17]],totalDataCodewords:132,errorCodewordsPerBlock:20},H:{groups:[[4,12],[4,13]],totalDataCodewords:100,errorCodewordsPerBlock:24}},{L:{groups:[[2,68],[2,69]],totalDataCodewords:274,errorCodewordsPerBlock:18},M:{groups:[[4,43],[1,44]],totalDataCodewords:216,errorCodewordsPerBlock:26},Q:{groups:[[6,19],[2,20]],totalDataCodewords:154,errorCodewordsPerBlock:24},H:{groups:[[6,15],[2,16]],totalDataCodewords:122,errorCodewordsPerBlock:28}},{L:{groups:[[4,81]],totalDataCodewords:324,errorCodewordsPerBlock:20},M:{groups:[[1,50],[4,51]],totalDataCodewords:254,errorCodewordsPerBlock:30},Q:{groups:[[4,22],[4,23]],totalDataCodewords:180,errorCodewordsPerBlock:28},H:{groups:[[3,12],[8,13]],totalDataCodewords:140,errorCodewordsPerBlock:24}},{L:{groups:[[2,92],[2,93]],totalDataCodewords:370,errorCodewordsPerBlock:24},M:{groups:[[6,36],[2,37]],totalDataCodewords:290,errorCodewordsPerBlock:22},Q:{groups:[[4,20],[6,21]],totalDataCodewords:206,errorCodewordsPerBlock:26},H:{groups:[[7,14],[4,15]],totalDataCodewords:158,errorCodewordsPerBlock:28}},{L:{groups:[[4,107]],totalDataCodewords:428,errorCodewordsPerBlock:26},M:{groups:[[8,37],[1,38]],totalDataCodewords:334,errorCodewordsPerBlock:22},Q:{groups:[[8,20],[4,21]],totalDataCodewords:244,errorCodewordsPerBlock:24},H:{groups:[[12,11],[4,12]],totalDataCodewords:180,errorCodewordsPerBlock:22}},{L:{groups:[[3,115],[1,116]],totalDataCodewords:461,errorCodewordsPerBlock:30},M:{groups:[[4,40],[5,41]],totalDataCodewords:365,errorCodewordsPerBlock:24},Q:{groups:[[11,16],[5,17]],totalDataCodewords:261,errorCodewordsPerBlock:20},H:{groups:[[11,12],[5,13]],totalDataCodewords:197,errorCodewordsPerBlock:24}},{L:{groups:[[5,87],[1,88]],totalDataCodewords:523,errorCodewordsPerBlock:22},M:{groups:[[5,41],[5,42]],totalDataCodewords:415,errorCodewordsPerBlock:24},Q:{groups:[[5,24],[7,25]],totalDataCodewords:295,errorCodewordsPerBlock:30},H:{groups:[[11,12],[7,13]],totalDataCodewords:223,errorCodewordsPerBlock:24}},{L:{groups:[[5,98],[1,99]],totalDataCodewords:589,errorCodewordsPerBlock:24},M:{groups:[[7,45],[3,46]],totalDataCodewords:453,errorCodewordsPerBlock:28},Q:{groups:[[15,19],[2,20]],totalDataCodewords:325,errorCodewordsPerBlock:24},H:{groups:[[3,15],[13,16]],totalDataCodewords:253,errorCodewordsPerBlock:30}},{L:{groups:[[1,107],[5,108]],totalDataCodewords:647,errorCodewordsPerBlock:28},M:{groups:[[10,46],[1,47]],totalDataCodewords:507,errorCodewordsPerBlock:28},Q:{groups:[[1,22],[15,23]],totalDataCodewords:367,errorCodewordsPerBlock:28},H:{groups:[[2,14],[17,15]],totalDataCodewords:283,errorCodewordsPerBlock:28}},{L:{groups:[[5,120],[1,121]],totalDataCodewords:721,errorCodewordsPerBlock:30},M:{groups:[[9,43],[4,44]],totalDataCodewords:563,errorCodewordsPerBlock:26},Q:{groups:[[17,22],[1,23]],totalDataCodewords:397,errorCodewordsPerBlock:28},H:{groups:[[2,14],[19,15]],totalDataCodewords:313,errorCodewordsPerBlock:28}},{L:{groups:[[3,113],[4,114]],totalDataCodewords:795,errorCodewordsPerBlock:28},M:{groups:[[3,44],[11,45]],totalDataCodewords:627,errorCodewordsPerBlock:26},Q:{groups:[[17,21],[4,22]],totalDataCodewords:445,errorCodewordsPerBlock:26},H:{groups:[[9,13],[16,14]],totalDataCodewords:341,errorCodewordsPerBlock:26}},{L:{groups:[[3,107],[5,108]],totalDataCodewords:861,errorCodewordsPerBlock:28},M:{groups:[[3,41],[13,42]],totalDataCodewords:669,errorCodewordsPerBlock:26},Q:{groups:[[15,24],[5,25]],totalDataCodewords:485,errorCodewordsPerBlock:30},H:{groups:[[15,15],[10,16]],totalDataCodewords:385,errorCodewordsPerBlock:28}},{L:{groups:[[4,116],[4,117]],totalDataCodewords:932,errorCodewordsPerBlock:28},M:{groups:[[17,42]],totalDataCodewords:714,errorCodewordsPerBlock:26},Q:{groups:[[17,22],[6,23]],totalDataCodewords:512,errorCodewordsPerBlock:28},H:{groups:[[19,16],[6,17]],totalDataCodewords:406,errorCodewordsPerBlock:30}},{L:{groups:[[2,111],[7,112]],totalDataCodewords:1006,errorCodewordsPerBlock:28},M:{groups:[[17,46]],totalDataCodewords:782,errorCodewordsPerBlock:28},Q:{groups:[[7,24],[16,25]],totalDataCodewords:568,errorCodewordsPerBlock:30},H:{groups:[[34,13]],totalDataCodewords:442,errorCodewordsPerBlock:24}},{L:{groups:[[4,121],[5,122]],totalDataCodewords:1094,errorCodewordsPerBlock:30},M:{groups:[[4,47],[14,48]],totalDataCodewords:860,errorCodewordsPerBlock:28},Q:{groups:[[11,24],[14,25]],totalDataCodewords:614,errorCodewordsPerBlock:30},H:{groups:[[16,15],[14,16]],totalDataCodewords:464,errorCodewordsPerBlock:30}},{L:{groups:[[6,117],[4,118]],totalDataCodewords:1174,errorCodewordsPerBlock:30},M:{groups:[[6,45],[14,46]],totalDataCodewords:914,errorCodewordsPerBlock:28},Q:{groups:[[11,24],[16,25]],totalDataCodewords:664,errorCodewordsPerBlock:30},H:{groups:[[30,16],[2,17]],totalDataCodewords:514,errorCodewordsPerBlock:30}},{L:{groups:[[8,106],[4,107]],totalDataCodewords:1276,errorCodewordsPerBlock:26},M:{groups:[[8,47],[13,48]],totalDataCodewords:1e3,errorCodewordsPerBlock:28},Q:{groups:[[7,24],[22,25]],totalDataCodewords:718,errorCodewordsPerBlock:30},H:{groups:[[22,15],[13,16]],totalDataCodewords:538,errorCodewordsPerBlock:30}},{L:{groups:[[10,114],[2,115]],totalDataCodewords:1370,errorCodewordsPerBlock:28},M:{groups:[[19,46],[4,47]],totalDataCodewords:1062,errorCodewordsPerBlock:28},Q:{groups:[[28,22],[6,23]],totalDataCodewords:754,errorCodewordsPerBlock:28},H:{groups:[[33,16],[4,17]],totalDataCodewords:596,errorCodewordsPerBlock:30}},{L:{groups:[[8,122],[4,123]],totalDataCodewords:1468,errorCodewordsPerBlock:30},M:{groups:[[22,45],[3,46]],totalDataCodewords:1128,errorCodewordsPerBlock:28},Q:{groups:[[8,23],[26,24]],totalDataCodewords:808,errorCodewordsPerBlock:30},H:{groups:[[12,15],[28,16]],totalDataCodewords:628,errorCodewordsPerBlock:30}},{L:{groups:[[3,117],[10,118]],totalDataCodewords:1531,errorCodewordsPerBlock:30},M:{groups:[[3,45],[23,46]],totalDataCodewords:1193,errorCodewordsPerBlock:28},Q:{groups:[[4,24],[31,25]],totalDataCodewords:871,errorCodewordsPerBlock:30},H:{groups:[[11,15],[31,16]],totalDataCodewords:661,errorCodewordsPerBlock:30}},{L:{groups:[[7,116],[7,117]],totalDataCodewords:1631,errorCodewordsPerBlock:30},M:{groups:[[21,45],[7,46]],totalDataCodewords:1267,errorCodewordsPerBlock:28},Q:{groups:[[1,23],[37,24]],totalDataCodewords:911,errorCodewordsPerBlock:30},H:{groups:[[19,15],[26,16]],totalDataCodewords:701,errorCodewordsPerBlock:30}},{L:{groups:[[5,115],[10,116]],totalDataCodewords:1735,errorCodewordsPerBlock:30},M:{groups:[[19,47],[10,48]],totalDataCodewords:1373,errorCodewordsPerBlock:28},Q:{groups:[[15,24],[25,25]],totalDataCodewords:985,errorCodewordsPerBlock:30},H:{groups:[[23,15],[25,16]],totalDataCodewords:745,errorCodewordsPerBlock:30}},{L:{groups:[[13,115],[3,116]],totalDataCodewords:1843,errorCodewordsPerBlock:30},M:{groups:[[2,46],[29,47]],totalDataCodewords:1455,errorCodewordsPerBlock:28},Q:{groups:[[42,24],[1,25]],totalDataCodewords:1033,errorCodewordsPerBlock:30},H:{groups:[[23,15],[28,16]],totalDataCodewords:793,errorCodewordsPerBlock:30}},{L:{groups:[[17,115]],totalDataCodewords:1955,errorCodewordsPerBlock:30},M:{groups:[[10,46],[23,47]],totalDataCodewords:1541,errorCodewordsPerBlock:28},Q:{groups:[[10,24],[35,25]],totalDataCodewords:1115,errorCodewordsPerBlock:30},H:{groups:[[19,15],[35,16]],totalDataCodewords:845,errorCodewordsPerBlock:30}},{L:{groups:[[17,115],[1,116]],totalDataCodewords:2071,errorCodewordsPerBlock:30},M:{groups:[[14,46],[21,47]],totalDataCodewords:1631,errorCodewordsPerBlock:28},Q:{groups:[[29,24],[19,25]],totalDataCodewords:1171,errorCodewordsPerBlock:30},H:{groups:[[11,15],[46,16]],totalDataCodewords:901,errorCodewordsPerBlock:30}},{L:{groups:[[13,115],[6,116]],totalDataCodewords:2191,errorCodewordsPerBlock:30},M:{groups:[[14,46],[23,47]],totalDataCodewords:1725,errorCodewordsPerBlock:28},Q:{groups:[[44,24],[7,25]],totalDataCodewords:1231,errorCodewordsPerBlock:30},H:{groups:[[59,16],[1,17]],totalDataCodewords:961,errorCodewordsPerBlock:30}},{L:{groups:[[12,121],[7,122]],totalDataCodewords:2306,errorCodewordsPerBlock:30},M:{groups:[[12,47],[26,48]],totalDataCodewords:1812,errorCodewordsPerBlock:28},Q:{groups:[[39,24],[14,25]],totalDataCodewords:1286,errorCodewordsPerBlock:30},H:{groups:[[22,15],[41,16]],totalDataCodewords:986,errorCodewordsPerBlock:30}},{L:{groups:[[6,121],[14,122]],totalDataCodewords:2434,errorCodewordsPerBlock:30},M:{groups:[[6,47],[34,48]],totalDataCodewords:1914,errorCodewordsPerBlock:28},Q:{groups:[[46,24],[10,25]],totalDataCodewords:1354,errorCodewordsPerBlock:30},H:{groups:[[2,15],[64,16]],totalDataCodewords:1054,errorCodewordsPerBlock:30}},{L:{groups:[[17,122],[4,123]],totalDataCodewords:2566,errorCodewordsPerBlock:30},M:{groups:[[29,46],[14,47]],totalDataCodewords:1992,errorCodewordsPerBlock:28},Q:{groups:[[49,24],[10,25]],totalDataCodewords:1426,errorCodewordsPerBlock:30},H:{groups:[[24,15],[46,16]],totalDataCodewords:1096,errorCodewordsPerBlock:30}},{L:{groups:[[4,122],[18,123]],totalDataCodewords:2702,errorCodewordsPerBlock:30},M:{groups:[[13,46],[32,47]],totalDataCodewords:2102,errorCodewordsPerBlock:28},Q:{groups:[[48,24],[14,25]],totalDataCodewords:1502,errorCodewordsPerBlock:30},H:{groups:[[42,15],[32,16]],totalDataCodewords:1142,errorCodewordsPerBlock:30}},{L:{groups:[[20,117],[4,118]],totalDataCodewords:2812,errorCodewordsPerBlock:30},M:{groups:[[40,47],[7,48]],totalDataCodewords:2216,errorCodewordsPerBlock:28},Q:{groups:[[43,24],[22,25]],totalDataCodewords:1582,errorCodewordsPerBlock:30},H:{groups:[[10,15],[67,16]],totalDataCodewords:1222,errorCodewordsPerBlock:30}},{L:{groups:[[19,118],[6,119]],totalDataCodewords:2956,errorCodewordsPerBlock:30},M:{groups:[[18,47],[31,48]],totalDataCodewords:2334,errorCodewordsPerBlock:28},Q:{groups:[[34,24],[34,25]],totalDataCodewords:1666,errorCodewordsPerBlock:30},H:{groups:[[20,15],[61,16]],totalDataCodewords:1276,errorCodewordsPerBlock:30}}],lt=[1,0,1,1,1],ct=[1,0,1],dt={L:"01",M:"00",Q:"11",H:"10"},ut="101010000010010",ht="10100110111",ft="1111100100101",pt=["11101100","00010001"],gt=93,mt=[function(e,t){return 0===(e+t)%2},function(e){return 0===e%2},function(e,t){return 0===t%3},function(e,t){return 0===(e+t)%3},function(e,t){return 0===(Math.floor(e/2)+Math.floor(t/3))%2},function(e,t){return 0===e*t%2+e*t%3},function(e,t){return 0===(e*t%2+e*t%3)%2},function(e,t){return 0===((e+t)%2+e*t%3)%2}],vt=/^\d+/,xt="A-Z0-9 $%*+./:-",yt="A-Z $%*+./:-",wt=RegExp("^["+yt+"]+"),bt=RegExp("^["+xt+"]+"),_t=RegExp("^[^"+xt+"]+"),Ct=8,kt=5,At=8,St=17,Tt=9,Pt=16,Dt=Math.round,Bt=Y.Class.extend({getVersionIndex:function(e){return 10>e?0:e>26?2:1},getBitsCharacterCount:function(e){var t=this;return t.bitsInCharacterCount[t.getVersionIndex(e||40)]},getModeCountString:function(e,t){var n=this;return n.modeIndicator+r(e,n.getBitsCharacterCount(t))},encode:function(){},getStringBitsLength:function(){},getValue:function(){},modeIndicator:"",bitsInCharacterCount:[]}),Mt={};Mt[et]=Bt.extend({bitsInCharacterCount:[10,12,14],modeIndicator:"0001",getValue:function(e){return parseInt(e,10)},encode:function(e,t){var n,o=this,a=i(e,3),s=o.getModeCountString(e.length,t);for(n=0;n<a.length-1;n++)s+=r(a[n],10);return s+r(a[n],1+3*a[n].length)},getStringBitsLength:function(e,t){var n=e%3;return 4+this.getBitsCharacterCount(t)+10*Math.floor(e/3)+3*n+(0===n?0:1)}}),Mt[tt]=Bt.extend({characters:{0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,A:10,B:11,C:12,D:13,E:14,F:15,G:16,H:17,I:18,J:19,K:20,L:21,M:22,N:23,O:24,P:25,Q:26,R:27,S:28,T:29,U:30,V:31,W:32,X:33,Y:34,Z:35," ":36,$:37,"%":38,"*":39,"+":40,"-":41,".":42,"/":43,":":44},bitsInCharacterCount:[9,11,13],modeIndicator:"0010",getValue:function(e){return this.characters[e]},encode:function(e,t){var n,o,a=this,s=i(e,2),l=a.getModeCountString(e.length,t);for(o=0;o<s.length-1;o++)n=45*a.getValue(s[o].charAt(0))+a.getValue(s[o].charAt(1)),l+=r(n,11);return n=2==s[o].length?45*a.getValue(s[o].charAt(0))+a.getValue(s[o].charAt(1)):a.getValue(s[o].charAt(0)),l+r(n,1+5*s[o].length)},getStringBitsLength:function(e,t){return 4+this.getBitsCharacterCount(t)+11*Math.floor(e/2)+6*(e%2)}}),Mt[nt]=Bt.extend({bitsInCharacterCount:[8,16,16],modeIndicator:"0100",getValue:function(e){var t=e.charCodeAt(0);if(127>=t||t>=160&&255>=t)return t;throw Error("Unsupported character: "+e)},encode:function(e,t){var n,i=this,o=i.getModeCountString(e.length,t);for(n=0;n<e.length;n++)o+=r(i.getValue(e.charAt(n)),8);return o},getStringBitsLength:function(e,t){return 4+this.getBitsCharacterCount(t)+8*e}}),p={};for(g in Mt)p[g]=new Mt[g];m=function(e){var n=this,r=e.length-1,i=e.length-1,o=i,a=-1,s=0;n.move=function(){r+=a*s,s^=1,i=o-s},n.getNextCell=function(){for(;e[r][i]!==t;)n.move(),(0>r||r>=e.length)&&(a=-a,o-=8!=o?2:3,i=o,r=0>a?e.length-1:0);return{row:r,column:i}},n.getNextRemainderCell=function(){return n.move(),e[r][i]===t?{row:r,column:i}:t}},v=function(e,t){var n,r,i,o,s,l,c=new m(e[0]);for(o=0;o<t.length;o++)for(n=t[o],r=0;n.length>0;){for(s=0;s<n.length;s++)for(l=0;8>l;l++)i=c.getNextCell(),a(e,n[s][r].charAt(l),i.row,i.column);for(r++;n[0]&&r==n[0].length;)n.splice(0,1)}for(;i=c.getNextRemainderCell();)a(e,0,i.row,i.column)},x=function(e,t){for(var n=8*t,r=0,i=0;e.length<n&&r<K.length;)e+=K.charAt(r++);for(0!==e.length%8&&(e+=Array(9-e.length%8).join("0"));e.length<n;)e+=pt[i],i^=1;return e},y=function(e,t){var n,r=[],i=e.length-2;for(n=i;n>=0;n--)r[n]=e[n]^t[n];return r},w=function(e,n){var r,i,o=[];for(r=0;r<e.length;r++)for(i=0;i<n.length;i++)o[r+i]=o[r+i]===t?(e[r]+(n[i]>=0?n[i]:0))%255:rt[it[o[r+i]]^it[(e[r]+n[i])%255]];return o},s(),l(),b=function(e,t){var n,i,o=ot[t-1],a=Array(t).concat(e),s=Array(a.length-o.length).concat(o),l=e.length,d=[];for(i=0;l>i;i++)n=c(s,rt[a[a.length-1]]),s.splice(0,1),a=y(n,a);for(i=a.length-1;i>=0;i--)d[t-1-i]=r(a[i],8);return d},_=function(e,t){var r,i,o,a,s,l,c,d,u=0,h=[],f=[],p=t.groups;for(l=0;l<p.length;l++)for(o=p[l][0],c=0;o>c;c++){for(i=p[l][1],r=[],a=[],d=1;i>=d;d++)s=e.substring(u,u+8),r.push(s),a[i-d]=n(s),u+=8;h.push(r),f.push(b(a,t.errorCodewordsPerBlock))}return[h,f]},C=function(e,t,n,r,i){var o,a,s=vt.exec(e),l=s?s[0]:"",c=wt.exec(e),d=c?c[0]:"",u=bt.exec(e),h=u?u[0]:"";return l&&(l.length>=t||e.length==l.length||l.length>=n&&!bt.test(e.charAt(l.length)))?(o=et,a=l):h&&(e.length==h.length||h.length>=r||i==tt)?(o=tt,a=l||d):(o=nt,a=h?h+_t.exec(e.substring(h.length))[0]:_t.exec(e)[0]),{mode:o,modeString:a}},k=function(e){var t,n,r=[],i=0;for(r.push(C(e,Ct,kt,At,t)),t=r[0].mode,e=e.substr(r[0].modeString.length);e.length>0;)n=C(e,St,Tt,Pt,t),n.mode!=t?(t=n.mode,r.push(n),i++):r[i].modeString+=n.modeString,e=e.substr(n.modeString.length);return r},A=function(e){var t,n,r=0;for(n=0;n<e.length;n++)t=p[e[n].mode],r+=t.getStringBitsLength(e[n].modeString.length);return Math.ceil(r/8)},S=function(e,t){var n=0,r=st.length-1,i=Math.floor(st.length/2);do e<st[i][t].totalDataCodewords?r=i:n=i,i=n+Math.floor((r-n)/2);while(r-n>1);return e<=st[n][t].totalDataCodewords?i+1:r+1},T=function(e,t){var n,r,i="";for(r=0;r<e.length;r++)n=p[e[r].mode],i+=n.encode(e[r].modeString,t);return i},P=function(e){var t,r,i=n(e),o="";if(0===i)return"101010000010010";for(t=D(n(e),ht,15),r=0;r<t.length;r++)o+=t.charAt(r)^ut.charAt(r);return o},D=function(e,t,i){var o=n(t),a=t.length-1,s=e<<a,l=i-a,c=r(e,l),d=B(s,o);return d=c+r(d,a)},B=function(e,t){var n=t.toString(2).length,r=e.toString(2).length;do e^=t<<r-n,r=e.toString(2).length;while(r>=n);return e},M=function(e){var t,n,r=[],i=17+4*e;for(t=0;t<mt.length;t++)for(r[t]=Array(i),n=0;i>n;n++)r[t][n]=Array(i);return r},I=function(e,t){var n,r,i=e[0],a=0,s=t.length;for(n=0,r=8;8>=n;n++)6!==n&&o(e,d(t,s-1-a++),n,r);for(n=8,r=7;r>=0;r--)6!==r&&o(e,d(t,s-1-a++),n,r);for(a=0,r=i.length-1,n=8;r>=i.length-8;r--)o(e,d(t,s-1-a++),n,r);for(o(e,1,i.length-8,8),n=i.length-7,r=8;n<i.length;n++)o(e,d(t,s-1-a++),n,r)},L=function(e){return D(e,ft,18)},E=function(e,t){var n,r,i,a,s=e[0],l=s.length,c=0,u=l-11,h=l-11,f=0;for(a=0;a<t.length;a++)n=Math.floor(a/3),r=a%3,i=d(t,t.length-a-1),o(e,i,c+n,u+r),o(e,i,h+r,f+n)},O=function(e,t,n,r){var i,a,s,l=t.length+2,c=t.length+1;for(a=0;a<t.length;a++)for(s=a;l-a>s;s++)i=t[a],o(e,i,n+s,r+a),o(e,i,n+a,r+s),o(e,i,n+c-s,r+c-a),o(e,i,n+c-a,r+c-s)},V=function(e,t,n,r){var i=n,a=r,s=e[0];do o(e,0,i,r),o(e,0,n,a),i+=t[0],a+=t[1];while(i>=0&&i<s.length)},R=function(e){var t=e[0].length;O(e,lt,0,0),V(e,[-1,-1],7,7),O(e,lt,t-7,0),V(e,[1,-1],t-8,7),O(e,lt,0,t-7),V(e,[-1,1],7,t-8)},z=function(e,n){var r,i,o,a,s,l,c,d,u;if(!(2>n)){for(o=e[0],a=o.length,s=Math.floor(n/7),l=[6],c=0,(r=at[n])?i=(a-13-r)/s:r=i=(a-13)/(s+1),l.push(l[c++]+r);l[c]+i<a;)l.push(l[c++]+i);for(d=0;d<l.length;d++)for(u=0;u<l.length;u++)o[l[d]][l[u]]===t&&O(e,ct,l[d]-2,l[u]-2)}},F=function(e){var t,n=6,r=6,i=1,a=e[0].length;for(t=8;a-8>t;t++)o(e,i,n,t),o(e,i,t,r),i^=1},U=function(e){var t,n,r,i,o,a,s,l=[],c=[],d=[],p=[],g=[],m=0,v=1,x=e[0].length;for(n=0;n<e.length;n++)l[n]=0,d[n]=0,g[n]=[0,0],p[n]=[0,0],c[n]=[];for(n=0;x>n;n++)for(r=0;x>r;r++)for(i=0;i<e.length;i++)t=e[i],d[i]+=parseInt(t[n][r],10),c[i][m]===t[n][r]&&x>n+1&&r-1>=0&&t[n+1][r]==c[i][m]&&t[n+1][r-1]==c[i][m]&&(l[i]+=3),u(i,p,l,m,t[n][r]),u(i,p,l,v,t[r][n]),h(i,l,c,t[n][r],g,m),h(i,l,c,t[r][n],g,v);for(a=x*x,s=Number.MAX_VALUE,n=0;n<l.length;n++)l[n]+=f(d[n],a),l[n]<s&&(s=l[n],o=n);return o},j=function(e,t){this.dataString=e,this.version=t},H=function(){this.getEncodingResult=function(e,t){var n=k(e),r=A(n),i=S(r,t),o=T(n,i);return new j(o,i)}},N=function(){this.mode=p[this.encodingMode]},N.fn=N.prototype={encodingMode:nt,utfBOM:"111011111011101110111111",initialModeCountStringLength:20,getEncodingResult:function(e,t){var n=this,r=n.encode(e),i=n.getDataCodewordsCount(r),o=S(i,t),a=n.mode.getModeCountString(r.length/8,o)+r;return new j(a,o)},getDataCodewordsCount:function(e){var t=this,n=e.length,r=Math.ceil((t.initialModeCountStringLength+n)/8);return r},encode:function(e){var t,n=this,r=n.utfBOM;for(t=0;t<e.length;t++)r+=n.encodeCharacter(e.charCodeAt(t));return r},encodeCharacter:function(e){var t,n,i=this.getBytesCount(e),o=i-1,a="";if(1==i)a=r(e,8);else{for(t=8-i,n=0;o>n;n++)a=r(128|63&e>>6*n,8)+a;a=(e>>6*o|255>>t<<t).toString(2)+a}return a},getBytesCount:function(e){var t,n=this.ranges;for(t=0;t<n.length;t++)if(e<n[t])return t+1},ranges:[128,2048,65536,2097152,67108864]},G=function(e){return e&&e.toLowerCase().indexOf("utf_8")>=0?new N:new H},W=function(e,t,n){var i,o,a,s=new G(n),l=s.getEncodingResult(e,t),c=l.version,d=st[c-1][t],u=x(l.dataString,d.totalDataCodewords),h=_(u,d),f=M(c);return R(f),z(f,c),F(f),c>=7&&E(f,r(0,18)),I(f,r(0,15)),v(f,h),i=U(f),o=f[i],c>=7&&E([o],L(c)),a=dt[t]+r(i,3),I([o],P(a)),o},q={DEFAULT_SIZE:200,QUIET_ZONE_LENGTH:4,DEFAULT_ERROR_CORRECTION_LEVEL:"L",DEFAULT_BACKGROUND:"#fff",DEFAULT_DARK_MODULE_COLOR:"#000",MIN_BASE_UNIT_SIZE:1},Q=Z.extend({init:function(t,n){var r=this;Z.fn.init.call(r,t,n),r.element=e(t),r.element.addClass("k-qrcode"),r._view=$.ViewFactory.current.create({},r.options.renderAs),r.setOptions(n)},redraw:function(){var e=this,t=e._view;e._redraw(t),t.renderTo(e.element[0])},svg:function(){if($.SVGView){var e=new $.SVGView;return this._redraw(e),e.render()}throw Error("Unable to create SVGView. Check that kendo.dataviz.svg.js is loaded.")},imageDataURL:function(){if($.CanvasView){if($.supportsCanvas()){var e=document.createElement("div"),t=new $.CanvasView;return this._redraw(t),t.renderTo(e).toDataURL()}return Y.logToConsole("Warning: Unable to generate image. The browser does not support Canvas.\nUser agent: "+navigator.userAgent),null}throw Error("Unable to create CanvasView. Check that kendo.dataviz.canvas.js is loaded.")},_redraw:function(e){var t,n,r,i,o,a,s=this,l=s._value,c=s.options.border||{},d=c.width||0;c.width=d,l&&(r=W(l,s.options.errorCorrection,s.options.encoding),i=s._getSize(),a=i-2*d,t=s._calculateBaseUnit(a,r.length),o=r.length*t,n=s._calculateQuietZone(o,a,d),e.children=[],e.options.width=i,e.options.height=i,s._renderBackground(e,i,c),s._renderMatrix(e,r,t,n))},_getSize:function(){var e,t,n,r=this;return r.options.size?e=parseInt(r.options.size,10):(t=r.element,n=Math.min(t.width(),t.height()),e=n>0?n:q.DEFAULT_SIZE),e},_calculateBaseUnit:function(e,t){var n=Math.floor(e/t);if(n<q.MIN_BASE_UNIT_SIZE)throw Error("Insufficient size.");return n*t>=e&&n-1>=q.MIN_BASE_UNIT_SIZE&&n--,n},_calculateQuietZone:function(e,t,n){return n+(t-e)/2},_renderMatrix:function(e,t,n,r){var i,o,a,s,l,c=this;for(l=0;l<t.length;l++)for(i=r+l*n,s=0;s<t.length;){for(;0===t[l][s]&&s<t.length;)s++;if(s<t.length){for(o=s;1==t[l][s];)s++;a=new J(Dt(r+o*n),Dt(i),Dt(r+s*n),Dt(i+n)),e.children.push(e.createRect(a,{fill:c.options.color,stroke:c.options.color,strokeWidth:.2,strokeLineJoin:"miter",align:!1}))}}},_renderBackground:function(e,t,n){var r=this;e.children.push(e.createRect(J(0,0,t,t).unpad(n.width/2),{fill:r.options.background,stroke:n.color,strokeWidth:n.width,align:!1}))},setOptions:function(e){var n=this;e=e||{},n.options=X(n.options,e),e.value!==t&&(n._value=n.options.value+""),n.redraw()},value:function(e){var n=this;return e===t?n._value:(n._value=e+"",n.redraw(),t)},options:{name:"QRCode",renderAs:"canvas",encoding:"ISO_8859_1",value:"",errorCorrection:q.DEFAULT_ERROR_CORRECTION_LEVEL,background:q.DEFAULT_BACKGROUND,color:q.DEFAULT_DARK_MODULE_COLOR,size:"",border:{color:"",width:0}}}),$.ui.plugin(Q),Y.deepExtend($,{QRCode:Q,QRCodeDefaults:q,QRCodeFunctions:{FreeCellVisitor:m,fillData:v,padDataString:x,generateErrorCodewords:b,xorPolynomials:y,getBlocks:_,multiplyPolynomials:w,chooseMode:C,getModes:k,getDataCodewordsCount:A,getVersion:S,getDataString:T,encodeFormatInformation:P,encodeBCH:D,dividePolynomials:B,initMatrices:M,addFormatInformation:I,encodeVersionInformation:L,addVersionInformation:E,addCentricPattern:O,addFinderSeparator:V,addFinderPatterns:R,addAlignmentPatterns:z,addTimingFunctions:F,scoreMaskMatrixes:U,encodeData:W,UTF8Encoder:N},QRCodeFields:{modes:p,powersOfTwo:rt,powersOfTwoResult:it,generatorPolynomials:ot}})}(window.kendo.jQuery),function(e){function t(){}function n(e){return t.prototype=e,new t}var r,i=window.kendo,o=i.Class,a=i.Observable,s=i.deepExtend,l=Math,c=e.proxy,d=i.dataviz,u=i.template,h=d.defined,f=d.ui.Chart,p=d.Selection,g=d.addDuration,m=d.duration,v=d.last,x=d.lteDateIndex,y=d.renderTemplate,w=d.toDate,b=d.toTime,_=28,C="change",k="k-",A="drag",S="dragEnd",T="_navigator",P=T,D=3,B="zoom",M="zoomEnd",I=f.extend({init:function(t,n){e(t).addClass(k+"chart"),f.fn.init.call(this,t,n)},_applyDefaults:function(e,t){var n=this,r=n.element.width()||d.DEFAULT_WIDTH,i={seriesDefaults:{categoryField:e.dateField},axisDefaults:{categoryAxis:{name:"default",majorGridLines:{visible:!1},labels:{step:2},majorTicks:{visible:!1},maxDateGroups:l.floor(r/_)}}};t&&(t=s({},t,i)),n._navigator||L.setup(e,t),f.fn._applyDefaults.call(n,e,t)},_initDataSource:function(e){var t,n,r=e||{},i=r.dataSource,o=i&&i.serverFiltering,a=[].concat(r.categoryAxis)[0],l=r.navigator||{},c=l.select,u=c&&c.from&&c.to;o&&u&&(t=[].concat(i.filter||[]),n=new d.DateCategoryAxis(s({baseUnit:"fit"},a,{categories:[c.from,c.to]})),i.filter=L.buildFilter(n.range().min,c.to).concat(t)),f.fn._initDataSource.call(this,e)},options:{name:"StockChart",dateField:"date",axisDefaults:{categoryAxis:{type:"date",baseUnit:"fit",justified:!0},valueAxis:{narrowRange:!0,labels:{format:"C"}}},navigator:{select:{},seriesDefaults:{markers:{visible:!1},tooltip:{visible:!0,template:"#= kendo.toString(category, 'd') #"},line:{width:2}},hint:{},visible:!0},tooltip:{visible:!0},legend:{visible:!1}},_redraw:function(){var e=this,t=e._navigator;t&&t.dataSource?t.redrawSlaves():(t||(t=e._navigator=new L(e)),t.filterAxes(),f.fn._redraw.call(e),t.redraw())},_onDataChanged:function(){var e=this;f.fn._onDataChanged.call(e),e._dataBound=!0},_bindCategoryAxis:function(e,t,n){var r,i=this,o=i.options.categoryAxis,a=o.length;if(f.fn._bindCategoryAxis.apply(this,arguments),e.name===P)for(;a>n;)r=o[n++],r.pane==T&&(r.categories=e.categories)},_trackSharedTooltip:function(e){var t=this,n=t._plotArea,r=n.paneByPoint(e);r&&r.options.name===T?t._unsetActivePoint():f.fn._trackSharedTooltip.call(t,e)},destroy:function(){var e=this;e._navigator.destroy(),f.fn.destroy.call(e)}}),L=a.extend({init:function(e){var t=this;t.chart=e,t.options=s({},t.options,e.options.navigator),t._initDataSource(),h(t.options.hint.visible)||(t.options.hint.visible=t.options.visible),e.bind(A,c(t._drag,t)),e.bind(S,c(t._dragEnd,t)),e.bind(B,c(t._zoom,t)),e.bind(M,c(t._zoomEnd,t))},options:{},_initDataSource:function(){var e=this,t=e.options,n=t.autoBind,r=t.dataSource;h(n)||(n=e.chart.options.autoBind),e._dataChangedHandler=c(e._onDataChanged,e),r&&(e.dataSource=i.data.DataSource.create(r).bind(C,e._dataChangedHandler),n&&e.dataSource.fetch())},_onDataChanged:function(){var e,t,n,r,i,o=this,a=o.chart,s=a.options.series,l=s.length,c=a.options.categoryAxis,d=c.length,u=o.dataSource.view();for(e=0;l>e;e++)n=s[e],n.axis==P&&a._isBindable(n)&&(n.data=u);for(t=0;d>t;t++)r=c[t],r.pane==T&&(r.name==P?(a._bindCategoryAxis(r,u,t),i=r.categories):r.categories=i);a._model&&(o.redraw(),o.filterAxes(),(!a.options.dataSource||a.options.dataSource&&a._dataBound)&&o.redrawSlaves())},destroy:function(){var e=this,t=e.dataSource;t&&t.unbind(C,e._dataChangeHandler),e.selection&&e.selection.destroy()},redraw:function(){this._redrawSelf();var t=this,i=t.chart,o=t.options,a=t.mainAxis(),s=n(a),l=a.options.categories,c=t.options.select||{},d=t.selection,u=l[0],h=v(l),f=c.from||u,g=c.to||h;l.length>0&&(d&&(d.destroy(),d.wrapper.remove()),s.box=a.box,d=t.selection=new p(i,s,{min:u,max:h,from:f,to:g,selectStart:e.proxy(t._selectStart,t),select:e.proxy(t._select,t),selectEnd:e.proxy(t._selectEnd,t),mousewheel:{zoom:"left"}}),o.hint.visible&&(t.hint=new r(i.element,{min:l[0],max:v(l),template:o.hint.template,format:o.hint.format})))},_redrawSelf:function(e){var t=this.chart._plotArea;t&&t.redraw(v(t.panes),e)},redrawSlaves:function(){var e=this,t=e.chart,n=t._plotArea,r=n.panes.slice(0,-1);n.srcSeries=t.options.series,n.redraw(r)},_drag:function(e){var t,n,r,i=this,o=i.chart,a=o._eventCoordinates(e.originalEvent),s=i.mainAxis(),c=s.pane.box.containsPoint(a),u=s.options.categories,h=o._plotArea.categoryAxis,f=h.options.baseUnit,p=e.axisRanges[h.options.name],v=i.selection;p&&!c&&v&&(t=h.options.min&&h.options.max?m(h.options.min,h.options.max,f):m(v.options.from,v.options.to,f),n=w(l.min(l.max(u[0],p.min),g(d.last(u),-t,f))),r=w(l.min(g(n,t,f),d.last(u))),i.options.select={from:n,to:r},i._liveDrag()&&(i.filterAxes(),i.redrawSlaves()),v.set(n,g(n,t,f)),i.showHint(n,r))},_dragEnd:function(){var e=this;e.filterAxes(),e.filterDataSource(),e.redrawSlaves(),e.hint&&e.hint.hide()},_liveDrag:function(){var e=i.support,t=e.touch,n=e.browser,r=n.mozilla,o=n.msie&&n.version<9;return!t&&!r&&!o},readSelection:function(){var e=this,t=e.selection,n=t.options,r=e.options.select;r.from=n.from,r.to=n.to},filterAxes:function(){var e,t,n,r,i,o=this,a=o.options.select||{},s=o.chart,l=s.options.categoryAxis,c=a.from,d=a.to;for(r=0;r<l.length;r++)if(i=l[r],i.name===P&&(e=i.categories,e&&e.length>0)){t=b(e[0]),n=b(v(e)),c=b(c),(t>c||c>n)&&(c=t),d=b(d),(t>d||d>n)&&(d=n);break}for(r=0;r<l.length;r++)i=l[r],i.pane!==T&&(i.min=w(c),i.max=w(d))},filterDataSource:function(){var e,t=this,n=t.options.select||{},r=t.chart,i=r.dataSource,o=i&&i.options.serverFiltering;t.dataSource&&o&&(e=new d.DateCategoryAxis(s({baseUnit:"fit"},r.options.categoryAxis[0],{categories:[n.from,n.to]})).options,i.filter(L.buildFilter(g(e.min,-e.baseUnitStep,e.baseUnit),g(e.max,e.baseUnitStep,e.baseUnit))))},_zoom:function(e){var t,n,r=this,o=r.chart,a=e.delta,s=o._plotArea.categoryAxis,c=r.options.select,d=r.selection,u=r.mainAxis().options.categories;d&&(t=x(d.options.from,u),n=x(d.options.to,u),e.originalEvent.preventDefault(),l.abs(a)>1&&(a*=D),n-t>1?(d.expand(a),r.readSelection()):(s.options.min=c.from,c.from=s.scaleRange(-e.delta).min),i.support.touch||(r.filterAxes(),r.redrawSlaves()),d.set(c.from,c.to),r.showHint(r.options.select.from,r.options.select.to))
},_zoomEnd:function(e){this._dragEnd(e)},showHint:function(e,t){var n=this,r=n.chart,i=r._plotArea;n.hint&&n.hint.show(e,t,i.backgroundBox())},_selectStart:function(e){var t=this.chart;t._selectStart.call(t,e)},_select:function(e){var t=this,n=t.chart;t.showHint(e.from,e.to),n._select.call(n,e)},_selectEnd:function(e){var t=this,n=t.chart;t.hint&&t.hint.hide(),t.readSelection(),t.filterAxes(),t.filterDataSource(),t.redrawSlaves(),n._selectEnd.call(n,e)},mainAxis:function(){var e=this.chart._plotArea;return e?e.namedCategoryAxes[P]:undefined}});L.setup=function(e,t){e=e||{},t=t||{};var n=s({},t.navigator,e.navigator),r=e.panes=[].concat(e.panes),i=s({},n.pane,{name:T});n.visible||(i.visible=!1,i.height=.1),r.push(i),L.attachAxes(e,n),L.attachSeries(e,n,t)},L.attachAxes=function(e,t){var n=e.categoryAxis=[].concat(e.categoryAxis),r=e.valueAxis=[].concat(e.valueAxis),i=s({type:"date",pane:T,roundToBaseUnit:!1,justified:!0,tooltip:{visible:!1},labels:{step:1},autoBind:!t.dataSource,autoBaseUnitSteps:{minutes:[1],hours:[1],days:[1],weeks:[],months:[1],years:[1]},_overlap:!1},t.categoryAxis);n.push(s({},i,{name:P,baseUnit:"fit",maxDateGroups:200,baseUnitStep:"auto",labels:{visible:!1},majorTicks:{visible:!1}}),s({},i,{name:P+"_labels",maxDateGroups:20,baseUnitStep:"auto",autoBaseUnitSteps:{minutes:[]},majorTicks:{visible:!0}}),s({},i,{name:P+"_ticks",maxDateGroups:200,majorTicks:{visible:!0,width:.5},labels:{visible:!1,mirror:!0}})),r.push({name:P,pane:T,majorGridLines:{visible:!1},visible:!1})},L.attachSeries=function(e,t,n){var r,i=e.series=e.series||[],o=[].concat(t.series),a=n.seriesColors,l=t.seriesDefaults;for(r=0;r<o.length;r++)i.push(s({color:a[r%a.length],categoryField:t.dateField,visibleInLegend:!1,tooltip:{visible:!1}},l,o[r],{axis:P,categoryAxis:P,autoBind:!t.dataSource}))},L.buildFilter=function(e,t){return[{field:"Date",operator:"gte",value:w(e)},{field:"Date",operator:"lt",value:w(t)}]},r=o.extend({init:function(t,n){var r=this;r.options=s({},r.options,n),r.container=t,r.chartPadding={top:parseInt(t.css("paddingTop"),10),left:parseInt(t.css("paddingLeft"),10)},r.template=r.template,r.template||(r.template=r.template=y("<div class='"+k+"navigator-hint' "+"style='display: none; position: absolute; top: 1px; left: 1px;'>"+"<div class='"+k+"tooltip'>&nbsp;</div>"+"<div class='"+k+"scroll' />"+"</div>")),r.element=e(r.template()).appendTo(t)},options:{format:"{0:d} - {1:d}",hideDelay:500},show:function(e,t,n){var r,o=this,a=w(b(e)+b(t-e)/2),s=o.options,l=i.format(o.options.format,e,t),c=o.element.find("."+k+"tooltip"),d=o.element.find("."+k+"scroll"),h=.4*n.width(),f=n.center().x-h,p=n.center().x,g=p-f,m=s.max-s.min,v=g/m,x=a-s.min;o._hideTimeout&&clearTimeout(o._hideTimeout),o._visible||(o.element.stop(!1,!0).css("visibility","hidden").show(),o._visible=!0),s.template&&(r=u(s.template),l=r({from:e,to:t})),c.text(l).css({left:n.center().x-c.outerWidth()/2,top:n.y1}),d.css({width:h,left:f+x*v,top:n.y1+parseInt(c.css("margin-top"),10)+parseInt(c.css("border-top-width"),10)+c.height()/2}),o.element.css("visibility","visible")},hide:function(){var e=this;e._hideTimeout&&clearTimeout(e._hideTimeout),e._hideTimeout=setTimeout(function(){e._visible=!1,e.element.fadeOut("slow")},e.options.hideDelay)}}),d.ui.plugin(I),s(d,{Navigator:L})}(window.kendo.jQuery),function(e){function t(e){return"number"==typeof e?[e]:e}var n=window.kendo,r=n.dataviz,i=r.ui.Chart,o=n.data.ObservableArray,a=r.SharedTooltip,s=n.deepExtend,l=e.isArray,c=r.inArray,d=Math,u="k-",h=150,f=150,p="bar",g="bullet",m="pie",v=[p,g],x=i.extend({init:function(n,r){var a=this,h=a.stage=e("<span />"),f=r||{};n=e(n).addClass(u+"sparkline").empty().append(h),a._initialWidth=d.floor(n.width()),f=t(f),(l(f)||f instanceof o)&&(f={seriesDefaults:{data:f}}),f.series||(f.series=[{data:t(f.data)}]),s(f,{seriesDefaults:{type:f.type}}),(c(f.series[0].type,v)||c(f.seriesDefaults.type,v))&&(f=s({},{categoryAxis:{crosshair:{visible:!1}}},f)),i.fn.init.call(a,n,f)},options:{name:"Sparkline",chartArea:{margin:2},axisDefaults:{visible:!1,majorGridLines:{visible:!1},valueAxis:{narrowRange:!0}},seriesDefaults:{type:"line",area:{line:{width:.5}},bar:{stack:!0},width:.5,overlay:{gradient:null},highlight:{visible:!1},border:{width:0},markers:{size:2,visible:!1}},tooltip:{visible:!0,shared:!0},categoryAxis:{crosshair:{visible:!0,tooltip:{visible:!1}}},legend:{visible:!1},transitions:!1,pointWidth:5},_applyDefaults:function(e){var t=this,n=r.ViewFactory.current.create({},e.renderAs);r.CanvasView&&n instanceof r.CanvasView&&s(e,{categoryAxis:{crosshair:{visible:!1}}}),i.fn._applyDefaults.apply(t,arguments)},_modelOptions:function(){var e,t=this,n=t.options,r=t._initialWidth,i=t.stage;return t.stage[0].innerHTML="&nbsp;",e=s({width:r?r:t._autoWidth(),height:i.height(),transitions:n.transitions},n.chartArea,{inline:!0,align:!1}),i.css({width:e.width,height:e.height}),e},_createTooltip:function(){var e,t=this,n=t.options,r=t.element;return e=t._sharedTooltip()?new y(r,t._plotArea,n.tooltip):i.fn._createTooltip.call(t)},_renderView:function(){var e=this;return e.element.empty().append(e.stage),e._view.renderTo(e.stage[0])},_autoWidth:function(){var e,t,n,i=this,o=i.options,a=r.getSpacing(o.chartArea.margin),s=o.series,l=i.dataSource.total(),c=0;for(t=0;t<s.length;t++){if(n=s[t],n.type===p)return h;if(n.type===g)return f;if(n.type===m)return i.stage.height();n.data&&(c=d.max(c,n.data.length))}return e=d.max(l,c)*o.pointWidth,e>0&&(e+=a.left+a.right),e}}),y=a.extend({options:{animation:{duration:0}},_anchor:function(e,t){var n=a.fn._anchor.call(this,e,t);return n.y=-this.element.height()-this.options.offset,n},_hideElement:function(){this.element.hide()}});r.ui.plugin(x),s(r,{})}(window.kendo.jQuery),function(){function e(e){this.view=e}function t(e){this.view=e}function n(e){return l.round(e)+.5}function r(e,t){var n,r,i=[];if(e=e?e.toLowerCase():null,e&&e!=I){for(n=S[e],r=0;r<n.length;r++)i.push(n[r]*(t||1));return"stroke-dasharray='"+i.join(" ")+"' "}return""}var i,o,a=jQuery,s=document,l=Math,c=window.kendo,d=c.Class,u=c.dataviz,h=u.Box2D,f=u.ExpandAnimation,p=u.Point2D,g=u.ViewBase,m=u.ViewElement,v=c.deepExtend,x=u.defined,y=u.round,w=u.renderTemplate,b=u.rotatePoint,_=u.uniqueId,C="butt",k=u.CLIP,A=u.COORD_PRECISION,S=u.DASH_ARRAYS,T=u.DEFAULT_WIDTH,P=u.DEFAULT_HEIGHT,D=u.DEFAULT_FONT,B="none",M="radial",I="solid",L="square",E="http://www.w3.org/2000/svg",O="transparent",V="undefined",R=g.extend({init:function(n){var r=this;g.fn.init.call(r,n),r.decorators.push(new e(r),new t(r)),u.ui.Chart&&r.decorators.push(new u.BarAnimationDecorator(r),new u.PieAnimationDecorator(r),new u.BubbleAnimationDecorator(r)),r.decorators.push(new i(r),new u.FadeAnimationDecorator(r)),u.Gauge&&r.decorators.push(new u.RadialPointerAnimationDecorator(r),new u.ArrowPointerAnimationDecorator(r),new u.BarIndicatorAnimationDecorator(r)),r.defsId=_(),r.template=R.template,r.display=r.options.inline?"inline":"block",r.template||(r.template=R.template=w("<?xml version='1.0' ?><svg xmlns='"+E+"' version='1.1' "+"width='#= d.options.width #px' height='#= d.options.height #px' "+"style='position: relative; display: #= d.display #;'>"+"#= d.renderDefinitions() #"+"#= d.renderContent() #</svg>"))},options:{width:T,height:P},renderTo:function(e){var t,n=this;return n.setupAnimations(),u.renderSVG(e,n.render()),t=e.firstElementChild,n.alignToScreen(t),n.playAnimations(),t},renderDefinitions:function(){var e=this,t=e.defsId,n=g.fn.renderDefinitions.call(e);return"<defs id='"+t+"'>"+n+"</defs>"},renderElement:function(e){var t,n,r=this,i=s.createElement("div"),o=s.getElementById(r.defsId);return u.renderSVG(i,"<?xml version='1.0' ?><svg xmlns='"+E+"' version='1.1'>"+r.renderDefinitions()+e.render()+"</svg>"),t=i.firstElementChild.firstChild,n=i.firstElementChild.lastChild,o&&o.textContent!==t.textContent&&o.parentNode.replaceChild(t,o),n},createGroup:function(e){return this.decorate(new W(e))},createText:function(e,t){return this.decorate(new z(e,t))},createRect:function(e,t){return this.decorate(new U(e.points(),!0,this.setDefaults(t)))},createLine:function(e,t,n,r,i){return this.decorate(new U([new p(e,t),new p(n,r)],!1,this.setDefaults(i)))},createPolyline:function(e,t,n){return this.decorate(new U(e,t,this.setDefaults(n)))},createCircle:function(e,t,n){return this.decorate(new G(e,t,n))},createSector:function(e,t){return this.decorate(new N(e,t))},createRing:function(e,t){return this.decorate(new j(e,t))},createPin:function(e,t){return this.decorate(new H(e,t))},createGradient:function(e){return e.type===M?x(e.ir)?new $(e):new X(e):new Y(e)},alignToScreen:function(e){var t,n,r,i;try{t=e.getScreenCTM?e.getScreenCTM():null}catch(o){}t&&(n=-t.e%1,r=-t.f%1,i=e.style,(0!==n||0!==r)&&(i.left=n+"px",i.top=r+"px"))}}),z=m.extend({init:function(e,t){var n=this;m.fn.init.call(n,t),n.content=e,n.template=z.template,n.template||(n.template=z.template=w("<text #= d.renderId() # #= d.renderDataAttributes() # x='#= Math.round(d.options.x) #' y='#= Math.round(d.options.y + d.options.baseline) #' fill-opacity='#= d.options.fillOpacity #' #= d.options.rotation ? d.renderRotation() : '' # style='font: #= d.options.font #; #= d.renderCursor() #' fill='#= d.options.color #'>#= d.content #</text>"))},options:{x:0,y:0,baseline:0,font:D,size:{width:0,height:0},fillOpacity:1,cursor:{}},refresh:function(e){var t=this.options;a(e).attr({"fill-opacity":t.fillOpacity})},clone:function(){var e=this;return new z(e.content,v({},e.options))},renderCursor:function(){var e=this.options,t="";return x(e.cursor.style)&&(t+="cursor: "+e.cursor.style+";"),t},renderRotation:function(){var e=this,t=e.options,n=t.size,r=y(t.x+n.normalWidth/2,A),i=y(t.y+n.normalHeight/2,A),o=y(t.x+n.width/2,A),a=y(t.y+n.height/2,A),s=y(o-r,A),l=y(a-i,A);return"transform='translate("+s+","+l+") "+"rotate("+t.rotation+","+r+","+i+")'"}}),F=m.extend({init:function(e){var t=this;m.fn.init.call(t,e),t.template=F.template,t.template||(t.template=F.template=w("<path #= d.renderId() #style='display: #= d.renderDisplay() #; #= d.renderCursor() #' #= d.renderDataAttributes() # d='#= d.renderPoints() #' #= d.renderAttr(\"stroke\", d.options.stroke) # #= d.renderAttr(\"stroke-width\", d.options.strokeWidth) ##= d.renderDashType() # stroke-linecap='#= d.renderLinecap() #' stroke-linejoin='round' fill-opacity='#= d.options.fillOpacity #' stroke-opacity='#= d.options.strokeOpacity #' fill='#= d.renderFill() #'></path>"))},options:{fill:"",fillOpacity:1,strokeOpacity:1,rotation:[0,0,0],strokeLineCap:L,visible:!0,cursor:{}},refresh:function(e){var t=this.options;a(e).attr({d:this.renderPoints(),"fill-opacity":t.fillOpacity,"stroke-opacity":t.strokeOpacity}).css("display",this.renderDisplay())},clone:function(){return new F(v({},this.options))},renderPoints:function(){},renderCursor:function(){var e=this.options,t="";return x(e.cursor.style)&&(t+="cursor: "+e.cursor.style+";"),t},renderDashType:function(){var e=this,t=e.options;return r(t.dashType,t.strokeWidth)},renderLinecap:function(){var e=this.options,t=e.dashType,n=e.strokeLineCap;return t&&t!=I?C:n},renderFill:function(){var e=this.options.fill;return e&&e!==O?e:B},renderDisplay:function(){return this.options.visible?"block":"none"},destroy:function(){}}),U=F.extend({init:function(e,t,n){var r=this;F.fn.init.call(r,n),r.points=e,r.closed=t},renderPoints:function(){var e,t=this,n=t.points,r=t.options.rotation,i=new p(r[1],r[2]),o=-r[0],a=[];for(e=0;e<n.length;e++)a.push(t._print(n[e].clone().rotate(i,o)));return t.closed&&a.push("z"),"M"+a.join(" ")},clone:function(){var e=this;return new U(v([],e.points),e.closed,v({},e.options))},_print:function(e){var t=this,r=t.options,i=r.strokeWidth,o=r.align!==!1&&i&&0!==i%2,a=o?n:y;return a(e.x,A)+" "+a(e.y,A)}}),j=F.extend({init:function(e,t){var n=this;F.fn.init.call(n,t),n.pathTemplate=j.pathTemplate,n.pathTemplate||(n.pathTemplate=j.pathTemplate=w("M #= d.firstOuterPoint.x # #= d.firstOuterPoint.y # A#= d.r # #= d.r # 0 #= d.isReflexAngle ? '1' : '0' #,1 #= d.secondOuterPoint.x # #= d.secondOuterPoint.y # L #= d.secondInnerPoint.x # #= d.secondInnerPoint.y # A#= d.ir # #= d.ir # 0 #= d.isReflexAngle ? '1' : '0' #,0 #= d.firstInnerPoint.x # #= d.firstInnerPoint.y # z")),n.config=e||{}},renderPoints:function(){var e,t,n=this,r=n.config,i=r.startAngle,o=r.angle+i,a=o-i>180,s=l.max(r.r,0),c=l.max(r.ir,0),d=r.c,u=r.point(i),h=r.point(i,!0);return y(i)%360===y(o)%360&&(o-=.05),e=r.point(o),t=r.point(o,!0),n.pathTemplate({firstOuterPoint:u,secondOuterPoint:e,isReflexAngle:a,r:s,ir:c,cx:d.x,cy:d.y,firstInnerPoint:h,secondInnerPoint:t})},clone:function(){var e=this;return new j(v({},e.config),v({},e.options))}}),H=F.extend({init:function(e,t){var n=this;F.fn.init.call(n,t),n.pathTemplate=H.pathTemplate,n.pathTemplate||(n.pathTemplate=H.pathTemplate=w("M #= d.origin.x # #= d.origin.y # #= d.as.x # #= d.as.y # A#= d.r # #= d.r # 0 #= d.isReflexAngle ? '1' : '0' #,0 #= d.ae.x # #= d.ae.y # z")),n.config=e||new u.Pin},renderPoints:function(){var e=this,t=e.config,n=t.radius,r=l.PI/180,i=t.arcAngle,o=n*l.sin(i*r/2),a=t.height-n*(1-l.cos(i*r/2)),s=t.origin,c={x:s.x+o,y:s.y-a},d={x:s.x-o,y:s.y-a},u=function(n,r){var i=e.options.rotation,o=t.rotation;return n=b(n.x,n.y,i[1],i[2],-i[0]),r&&(n=b(n.x,n.y,s.x,s.y,o)),n};return s=u(s),e.pathTemplate({origin:s,as:u(c,!0),ae:u(d,!0),r:n,isReflexAngle:i>180})}}),N=j.extend({init:function(e,t){var n=this;j.fn.init.call(n,e,t),n.pathTemplate=N.pathTemplate,n.pathTemplate||(n.pathTemplate=N.pathTemplate=w("M #= d.firstOuterPoint.x # #= d.firstOuterPoint.y # A#= d.r # #= d.r # 0 #= d.isReflexAngle ? '1' : '0' #,1 #= d.secondOuterPoint.x # #= d.secondOuterPoint.y # L #= d.cx # #= d.cy # z"))},options:{fill:"",fillOpacity:1,strokeOpacity:1,strokeLineCap:L},clone:function(){var e=this;return new N(v({},e.config),v({},e.options))}}),G=m.extend({init:function(e,t,n){var r=this;m.fn.init.call(r,n),r.c=e,r.r=t,r.template=G.template,r.template||(r.template=G.template=w("<circle #= d.renderId() # #= d.renderDataAttributes() #cx='#= d.c.x #' cy='#= d.c.y #' r='#= d.r #' #= d.renderAttr(\"stroke\", d.options.stroke) # #= d.renderAttr(\"stroke-width\", d.options.strokeWidth) #fill-opacity='#= d.options.fillOpacity #' stroke-opacity='#= d.options.strokeOpacity #'  fill='#= d.options.fill || \"none\" #'></circle>"))},options:{fill:"",fillOpacity:1,strokeOpacity:1},refresh:function(e){a(e).attr({r:l.max(0,this.r),"fill-opacity":this.options.fillOpacity})},clone:function(){var e=this;return new G(v({},e.c),e.r,v({},e.options))}}),W=m.extend({init:function(e){var t=this;m.fn.init.call(t,e),t.template=W.template,t.template||(t.template=W.template=w('<g#= d.renderId() ##= d.renderDataAttributes() ##= d.renderAttr("clip-path", d.options.clipPath) #>#= d.renderContent() #</g>'))}}),q=m.extend({init:function(e){var t=this;m.fn.init.call(t,e),t.template=q.template,t.template||(t.template=q.template=w('<clipPath#= d.renderAttr("id", d.options.id) #>#= d.renderContent() #</clipPath>'))}}),Q=m.extend({init:function(e){var t=this;m.fn.init.call(t,e)},options:{id:""},renderStops:function(){var e,t,n=this,r=n.options.stops,i=n.stopTemplate,o=r.length,a="";for(e=0;o>e;e++)t=r[e],a+=i(t);return a}}),Y=Q.extend({init:function(e){var t=this;Q.fn.init.call(t,e),t.template=Y.template,t.stopTemplate=Y.stopTemplate,t.template||(t.template=Y.template=w("<linearGradient id='#= d.options.id #' gradientTransform='rotate(#= d.options.rotation #)'> #= d.renderStops() #</linearGradient>"),t.stopTemplate=Y.stopTemplate=w("<stop offset='#= Math.round(d.offset * 100) #%' style='stop-color:#= d.color #;stop-opacity:#= d.opacity #' />"))},options:{rotation:0}}),X=Q.extend({init:function(e){var t=this;Q.fn.init.call(t,e),t.template=X.template,t.stopTemplate=X.stopTemplate,t.template||(t.template=X.template=w("<radialGradient id='#= d.options.id #' cx='#= d.options.cx #' cy='#= d.options.cy #' fx='#= d.options.cx #' fy='#= d.options.cy #' r='#= d.options.r #' gradientUnits='userSpaceOnUse'>#= d.renderStops() #</radialGradient>"),t.stopTemplate=X.stopTemplate=w("<stop offset='#= Math.round(d.offset * 100) #%' style='stop-color:#= d.color #;stop-opacity:#= d.opacity #' />"))}}),$=m.extend({init:function(e){var t=this;m.fn.init.call(t,e),t.template=$.template,t.stopTemplate=$.stopTemplate,t.template||(t.template=$.template=w("<radialGradient id='#= d.options.id #' cx='#= d.options.cx #' cy='#= d.options.cy #' fx='#= d.options.cx #' fy='#= d.options.cy #' r='#= d.options.r #' gradientUnits='userSpaceOnUse'>#= d.renderStops() #</radialGradient>"),t.stopTemplate=$.stopTemplate=w("<stop offset='#= d.offset #%' style='stop-color:#= d.color #;stop-opacity:#= d.opacity #' />"))},options:{id:""},renderStops:function(){var e,t,n=this,r=n.options,i=r.stops,o=n.stopTemplate,a=100*(r.ir/r.r),s=i.length,l="";for(t=v({},i[0]),t.offset=a,l+=o(t),e=1;s>e;e++)t=v({},i[e]),t.offset=t.offset*(100-a)+a,l+=o(t);return l}});e.prototype={decorate:function(e){var t,n,r=this,i=r.view,o=e.options,a=o.id;return o.overlay?(e.options.id=_(),t=i.createGroup(),n=e.clone(),t.children.push(e,n),n.options.id=a,n.options.fill=o.overlay,t):e}},t.prototype={decorate:function(e){var t=this,n=e.options;return n.fill=t.getPaint(n.fill),e},getPaint:function(e){var t,n,r,i=this,o=i.view,a=o.definitions;return e&&x(e.gradient)?(t=o.buildGradient(e),t?(n=t.id,r=a[n],r||(r=o.createGradient(t),a[n]=r),"url("+i.baseUrl()+"#"+r.options.id+")"):B):e},baseUrl:function(){var e=s.getElementsByTagName("base")[0],t="",n=s.location.href,r=n.indexOf("#");return e&&!c.support.browser.msie&&(-1!==r&&(n=n.substring(0,r)),t=n),t}},i=d.extend({init:function(e){this.view=e},decorate:function(e){var t,n,r=this,i=r.view,o=r.clipId,a=i.options,s=e.options.animation,l=i.definitions;return s&&s.type===k&&a.transitions&&(o||(r.clipId=o=_()),t=l[o],t||(t=new q({id:o}),n=i.createRect(new h(0,0,a.width,a.height),{id:_()}),t.children.push(n),l[o]=t,i.animations.push(new f(n,{size:a.width}))),e.options.clipPath="url(#"+o+")"),e}}),o=function(e,t){e.innerHTML=t},function(){var e="<svg xmlns='"+E+"'></svg>",t=s.createElement("div"),n=typeof DOMParser!=V;t.innerHTML=e,n&&t.firstChild.namespaceURI!=E&&(o=function(e,t){var n=new DOMParser,r=n.parseFromString(t,"text/xml"),i=s.adoptNode(r.documentElement);e.innerHTML="",e.appendChild(i)})}(),u.supportsSVG()&&u.ViewFactory.current.register("svg",R,10),v(u,{renderSVG:o,SVGCircle:G,SVGClipAnimationDecorator:i,SVGClipPath:q,SVGGradientDecorator:t,SVGGroup:W,SVGLine:U,SVGLinearGradient:Y,SVGOverlayDecorator:e,SVGPath:F,SVGRadialGradient:X,SVGDonutGradient:$,SVGRing:j,SVGSector:N,SVGText:z,SVGView:R})}(window.kendo.jQuery),function(){function e(e){this.view=e}function t(e){this.view=e}function n(){return d.support.browser.msie&&!A()&&void 0!==window.performance}function r(e,t,n){var r=new p(e),o=new p(t),a=i(r.r,o.r,n),s=i(r.g,o.g,n),l=i(r.b,o.b,n);return new p(a,s,l).toHex()}function i(e,t,n){return c.round(n*t+(1-n)*e)}function o(e,t){var n,i,o,a=t.stops,s=a.length,l=h({},t);for(l.stops=[],n=0;s>n;n++)i=a[n],o=l.stops[n]=h({},a[n]),o.color=r(e,i.color,i.opacity),o.opacity=0;return l}var a,s=jQuery,l=document,c=Math,d=window.kendo,u=d.Class,h=d.deepExtend,f=d.dataviz,p=f.Color,g=f.Box2D,m=f.Point2D,v=f.ExpandAnimation,x=f.ViewBase,y=f.ViewElement,w=f.defined,b=f.renderTemplate,_=f.uniqueId,C=f.rotatePoint,k=f.round,A=f.supportsSVG,S="#000",T=f.CLIP,P=f.COORD_PRECISION,D=f.DEFAULT_WIDTH,B=f.DEFAULT_HEIGHT,M=f.DEFAULT_FONT,I="object",L="linear",E="radial",O="transparent",V=x.extend({init:function(r){var i=this;x.fn.init.call(i,r),i.decorators.push(new e(i),new t(i)),f.ui.Chart&&i.decorators.push(new f.BarAnimationDecorator(i),new f.PieAnimationDecorator(i),new f.BubbleAnimationDecorator(i)),i.decorators.push(new a(i)),n()||i.decorators.push(new f.FadeAnimationDecorator(i)),f.Gauge&&i.decorators.push(new f.RadialPointerAnimationDecorator(i),new f.ArrowPointerAnimationDecorator(i),new f.BarIndicatorAnimationDecorator(i)),i.template=V.template,i.tagName=i.options.inline?"span":"div",i.template||(i.template=V.template=b("<#= d.tagName # style='width:#= d.options.width #px; height:#= d.options.height #px; position: relative;'>#= d.renderContent() #</#= d.tagName #>"))},options:{width:D,height:B},renderTo:function(e){var t=this;return l.namespaces&&l.namespaces.add("kvml","urn:schemas-microsoft-com:vml","#default#VML"),t.setupAnimations(),e.innerHTML=t.render(),t.playAnimations(),e.firstChild},renderElement:function(e){var t,n=l.createElement("div");return n.style.display="none",l.body.appendChild(n),n.innerHTML=e.render(),t=n.firstChild,l.body.removeChild(n),t},createText:function(e,t){return this.decorate(t&&t.rotation?new z(e,t):new R(e,t))},createRect:function(e,t){return this.decorate(new H(e.points(),!0,this.setDefaults(t)))},createLine:function(e,t,n,r,i){return this.decorate(new H([new m(e,t),new m(n,r)],!1,this.setDefaults(i)))},createPolyline:function(e,t,n){return this.decorate(new H(e,t,this.setDefaults(n)))},createCircle:function(e,t,n){return this.decorate(new W(e,t,n))},createSector:function(e,t){return this.decorate(new G(e,t))},createRing:function(e,t){return this.decorate(new N(e,this.setDefaults(t)))},createGroup:function(e){return this.decorate(new q(this.setDefaults(e)))},createGradient:function(e){var t=w(e.cx)&&w(e.cy)&&w(e.bbox);return e.type===E&&t?new $(e):e.type===L?new X(e):S}}),R=y.extend({init:function(e,t){var n=this;y.fn.init.call(n,t),n.content=e,n.template=R.template,n.template||(n.template=R.template=b("<kvml:textbox #= d.renderId() # #= d.renderDataAttributes() #style='position: absolute; left: #= d.options.x #px; top: #= d.options.y #px; font: #= d.options.font #; color: #= d.options.color #; visibility: #= d.renderVisibility() #; white-space: nowrap;'#= d.renderCursor() #>#= d.content #</kvml:textbox>"))},options:{x:0,y:0,font:M,color:S,fillOpacity:1,cursor:{}},refresh:function(e){s(e).css("visibility",this.renderVisibility())},clone:function(){var e=this;return new R(e.content,h({},e.options))},renderVisibility:function(){return this.options.fillOpacity>0?"visible":"hidden"},renderCursor:function(){var e=this.options,t="";return w(e.cursor.style)&&(t+="cursor: "+e.cursor.style+";"),t}}),z=y.extend({init:function(e,t){var n=this;y.fn.init.call(n,t),n.content=e,n.template=z.template,n.template||(n.template=z.template=b("<kvml:shape #= d.renderId() # #= d.renderDataAttributes() #style='position: absolute; top: 0px; left: 0px; width: 1px; height: 1px;' stroked='false' coordsize='1,1'>#= d.renderPath() #<kvml:fill color='#= d.options.color #' /><kvml:textpath on='true' style='font: #= d.options.font #;' fitpath='false' string='#= d.content #' /></kvml:shape>"))},options:{x:0,y:0,font:M,color:S,size:{width:0,height:0}},renderPath:function(){var e=this,t=e.options,n=t.size.width,r=t.size.height,i=t.x+n/2,o=t.y+r/2,a=-t.rotation,s=C(t.x,o,i,o,a),l=C(t.x+n,o,i,o,a);return"<kvml:path textpathok='true' v='m "+k(s.x)+","+k(s.y)+" l "+k(l.x)+","+k(l.y)+"' />"}}),F=y.extend({init:function(e){var t=this;y.fn.init.call(t,e),t.template=F.template,t.template||(t.template=F.template=b('<kvml:stroke on=\'#= !!d.options.stroke && !!d.options.strokeWidth #\' #= d.renderAttr("color", d.options.stroke) ##= d.renderAttr("weight", d.options.strokeWidth) ##= d.renderAttr("dashstyle", d.options.dashType) ##= d.renderAttr("opacity", d.options.strokeOpacity) # />'))},refresh:function(e){try{e.opacity=this.options.strokeOpacity}catch(t){}}}),U=y.extend({init:function(e){var t=this;y.fn.init.call(t,e),t.template=U.template,t.template||(t.template=U.template=b('<kvml:fill on=\'#= d.isEnabled() #\' #= d.renderAttr("color", d.options.fill) ##= d.renderAttr("weight", d.options.fillWidth) ##= d.renderAttr("opacity", d.options.fillOpacity) # />'))},isEnabled:function(){var e=this.options.fill;return!!e&&e.toLowerCase()!==O},refresh:function(e){try{e.opacity=this.options.fillOpacity}catch(t){}}}),j=y.extend({init:function(e){var t=this;y.fn.init.call(t,e),t.template=j.template,t.template||(t.template=j.template=b("<kvml:shape #= d.renderId() # #= d.renderDataAttributes() #style='position:absolute; #= d.renderSize() # display:#= d.renderDisplay() #;' coordorigin='0 0' #= d.renderCoordsize() ##= d.renderCursor() #><kvml:path v='#= d.renderPoints() # e' />#= d.fill.render() + d.stroke.render() #</kvml:shape>")),t.stroke=new F(t.options),t.fill=new U(t.options)},options:{fill:"",fillOpacity:1,strokeOpacity:1,rotation:[0,0,0],visible:!0,cursor:{}},renderCoordsize:function(){var e=this.options.align===!1?1e4:1;return"coordsize='"+e+" "+e+"'"},renderSize:function(){var e=this.options.align===!1?100:1;return"width:"+e+"px; height:"+e+"px;"},render:function(){var e=this;return e.fill.options.fillOpacity=e.options.fillOpacity,e.stroke.options.strokeOpacity=e.options.strokeOpacity,y.fn.render.call(e)},renderDisplay:function(){return this.options.visible?"block":"none"},renderPoints:function(){},refresh:function(e){if(e){var t=this,n=s(e),r=n[0].parentNode,i=t.fill,o=t.stroke;r&&(n.find("path")[0].v=this.renderPoints(),i.options=o.options=t.options,i.refresh(n.find("fill")[0]),o.refresh(n.find("stroke")[0]),n.css("display",t.renderDisplay()),r.style.cssText=r.style.cssText)}},renderCursor:function(){var e=this.options,t="";return w(e.cursor.style)&&(t+="cursor: "+e.cursor.style+";"),t}}),H=j.extend({init:function(e,t,n){var r=this;j.fn.init.call(r,n),r.points=e,r.closed=t},renderPoints:function(){var e,t=this,n=t.points,r=n.length,i=function(e){var n=t.options.rotation;return C(e.x,e.y,n[1],n[2],-n[0])},o="m "+t._print(i(n[0]));if(r>1)for(o+=" l ",e=1;r>e;e++)o+=t._print(i(n[e])),r-1>e&&(o+=", ");return t.closed&&(o+=" x"),o},clone:function(){var e=this;return new H(h([],e.points),e.closed,h({},e.options))},_print:function(e){var t=this.options.align===!1?100:1;return c.round(e.x*t)+","+c.round(e.y*t)}}),N=j.extend({init:function(e,t){var n=this;j.fn.init.call(n,t),n.pathTemplate=N.pathTemplate,n.pathTemplate||(n.pathTemplate=N.pathTemplate=b("M #= d.osp.x #,#= d.osp.y # WA #= d.obb.l #,#= d.obb.t # #= d.obb.r #,#= d.obb.b # #= d.osp.x #,#= d.osp.y # #= d.oep.x #,#= d.oep.y # L #= d.iep.x #,#= d.iep.y # AT #= d.ibb.l #,#= d.ibb.t # #= d.ibb.r #,#= d.ibb.b # #= d.iep.x #,#= d.iep.y # #= d.isp.x #,#= d.isp.y # X E")),n.config=e},renderPoints:function(){function e(e){return new m(k(e.x),k(e.y))}var t,n,r,i,o=this,a=o.config,s=c.max(k(a.r),0),l=c.max(k(a.ir),0),d=k(a.c.x),u=k(a.c.y),h=a.startAngle,f=a.angle+h,p=f-h,g={l:d-s,t:u-s,r:d+s,b:u+s},v={l:d-l,t:u-l,r:d+l,b:u+l};return 1>=p?f+=1-p:p>359&&(f-=1-p),t=e(a.point(h)),n=e(a.point(h,!0)),i=e(a.point(f)),r=e(a.point(f,!0)),o.pathTemplate({obb:g,ibb:v,osp:t,isp:n,oep:i,iep:r,cx:d,cy:u})},clone:function(){var e=this;return new N(h({},e.config),h({},e.options))}}),G=N.extend({init:function(e,t){var n=this;N.fn.init.call(n,e,t),n.pathTemplate=G.pathTemplate,n.pathTemplate||(n.pathTemplate=G.pathTemplate=b("M #= d.osp.x #,#= d.osp.y # WA #= d.obb.l #,#= d.obb.t # #= d.obb.r #,#= d.obb.b # #= d.osp.x #,#= d.osp.y # #= d.oep.x #,#= d.oep.y # L #= d.cx #,#= d.cy # X E"))},clone:function(){var e=this;return new G(h({},e.config),h({},e.options))}}),W=y.extend({init:function(e,t,n){var r=this;y.fn.init.call(r,n),r.c=e,r.r=t,r.template=W.template,r.template||(r.template=W.template=b("<kvml:oval #= d.renderId() # #= d.renderDataAttributes() #style='position:absolute; width:#= d.r * 2 #px; height:#= d.r * 2 #px; top:#= d.c.y - d.r #px; left:#= d.c.x - d.r #px;'>#= d.fill.render() + d.stroke.render() #</kvml:oval>")),r.stroke=new F(r.options),r.fill=new U(r.options)},options:{fill:"",fillOpacity:1},refresh:function(e){var t=this,n=t.c,r=c.max(0,t.r),i=2*r,o=s(e);o.css({width:i,height:i,top:n.y-r,left:n.x-r}),t.fill.options=t.options,t.fill.refresh(o.find("fill")[0])},clone:function(){var e=this;return new W(h({},e.c),e.r,h({},e.options))}}),q=y.extend({init:function(e){var t=this;y.fn.init.call(t,e),t.tagName=t.options.inline?"span":"div",t.template=q.template,t.template||(t.template=q.template=b("<#= d.tagName # #= d.renderId() ##= d.renderDataAttributes() #style='position: absolute; white-space: nowrap;'>#= d.renderContent() #</#= d.tagName #>"))}}),Q=y.extend({init:function(e,t){var n=this;y.fn.init.call(n,t),n.tagName=n.options.inline?"span":"div",n.template=Q.template,n.clipTemplate=Q.clipTemplate,n.template||(n.template=Q.template=b("<#= d.tagName # #= d.renderId() #style='position:absolute; width:#= d.box.width() #px; height:#= d.box.height() #px; top:#= d.box.y1 #px; left:#= d.box.x1 #px; clip:#= d._renderClip() #;' >#= d.renderContent() #</#= d.tagName #>"),n.clipTemplate=Q.clipTemplate=b("rect(#= d.points[0].y #px #= d.points[1].x #px #= d.points[2].y #px #= d.points[0].x #px)")),n.box=e,n.points=e.points()},clone:function(){var e=this;return new Q(e.box,h({},e.options))},refresh:function(e){e&&(e.style.clip=this._renderClip())},_renderClip:function(){return this.clipTemplate(this)},destroy:function(){s("#"+this.options.id+">*").unwrap()}}),Y=y.extend({init:function(e){var t=this;y.fn.init.call(t,e)},options:{opacity:1},renderColors:function(){var e,t,n=this,r=n.options,i=r.stops,o=i.length,a=[],s=c.round;for(t=0;o>t;t++)e=i[t],a.push(s(100*e.offset)+"% "+e.color);return a.join(",")}}),X=Y.extend({init:function(e){var t=this;Y.fn.init.call(t,e),t.template=X.template,t.template||(t.template=X.template=b("<kvml:fill type='gradient' angle='#= 270 - d.options.rotation #' colors='#= d.renderColors() #' opacity='#= d.options.opacity #' />"))},options:{rotation:0}}),$=Y.extend({init:function(e){var t=this;Y.fn.init.call(t,e),t.template=$.template,t.template||(t.template=$.template=b("<kvml:fill type='gradienttitle' focus='100%' focusposition='#= d.focusPosition() #'colors='#= d.renderColors() #' color='#= d.firstColor() #' color2='#= d.lastColor() #' opacity='#= d.options.opacity #' />"))},focusPosition:function(){var e=this.options,t=e.bbox,n=e.cx,r=e.cy,i=Math.max(0,Math.min(1,(n-t.x1)/t.width())),o=Math.max(0,Math.min(1,(r-t.y1)/t.height()));return k(i,P)+" "+k(o,P)},firstColor:function(){var e=this.options.stops;return e[0].color},lastColor:function(){var e=this.options.stops;return e[e.length-1].color}});e.prototype={decorate:function(e){var t,n,r=e.options,i=this.view;return r.overlay&&(n=r.overlay.bbox,t=i.buildGradient(h({},r.overlay,{_overlayFill:r.fill,_bboxHash:w(n)?n.getHash():""}))),t?(delete r.overlay,r.fill=h(o(r.fill,t),{opacity:r.fillOpacity}),e):e}},t.prototype={decorate:function(e){var t=this,n=t.view,r=e.options,i=r.fill;return i&&i.supportVML!==!1&&(i.gradient&&(i=n.buildGradient(i)),typeof i===I&&(e.fill=n.createGradient(i))),e}},a=u.extend({init:function(e){this.view=e},decorate:function(e){var t,n=this,r=n.view,i=r.options,o=e.options.animation;return o&&o.type===T&&i.transitions?(t=new Q(new g(0,0,i.width,i.height),{id:_(),inline:i.inline}),r.animations.push(new v(t,{size:i.width})),t.children.push(e),t):e}}),d.support.browser.msie&&f.ViewFactory.current.register("vml",V,20),h(f,{VMLCircle:W,VMLClipAnimationDecorator:a,VMLClipRect:Q,VMLFill:U,VMLGroup:q,VMLLine:H,VMLLinearGradient:X,VMLOverlayDecorator:e,VMLPath:j,VMLRadialGradient:$,VMLRing:N,VMLRotatedText:z,VMLSector:G,VMLStroke:F,VMLText:R,VMLView:V,blendColors:r,blendGradient:o})}(window.kendo.jQuery),function(){function e(e){return(e+540)%360*_}function t(e){return i.round(e)+.5}function n(e,t){var n,r,i,o=t.length;for(n=0;o>n;n++)r=t[n],i=new l(r.color),e.addColorStop(r.offset,"rgba("+i.r+","+i.g+","+i.b+","+r.opacity+")")}var r=jQuery,i=Math,o=window.kendo,a=o.dataviz,s=a.Box2D,l=a.Color,c=a.Point2D,d=a.Ring,u=a.ViewBase,h=a.ViewElement,f=o.deepExtend,p=a.round,g=a.renderTemplate,m="butt",v=a.COORD_PRECISION,x=a.DASH_ARRAYS,y=a.DEFAULT_WIDTH,w=a.DEFAULT_HEIGHT,b=a.DEFAULT_FONT,_=i.PI/180,C=2*i.PI,k="linear",A="radial",S="solid",T="square",P=g("<canvas width='#= d.options.width #px' height='#= d.options.height #px' style='position: relative; display: #= d.display #;'></canvas>"),D=u.extend({init:function(e){var t=this;u.fn.init.call(t,e),t.display=t.options.inline?"inline":"block"
},options:{width:y,height:w},renderTo:function(e){var t,n,i=this,o=i.options;return t=e.firstElementChild,t&&"canvas"===t.tagName.toLowerCase()?(r(t).siblings().remove(),t.width=o.width,t.height=o.height):(e.innerHTML=P(this),t=e.firstElementChild),i._ctx=n=t.getContext("2d"),i.renderContent(n),t},replace:function(e,t){var n=this,r=n._ctx;r.clearRect(t.x1,t.y1,t.width(),t.height()),e.render(r)},destroy:function(){var e=this;u.fn.destroy.call(e),e._ctx=null},renderContent:function(e){var t,n=this,r=n.sortChildren(),i=r.length;for(t=0;i>t;t++)r[t].render(e)},createGroup:function(e){return new B(e)},createText:function(e,t){return new V(e,t)},createRect:function(e,t){return new I(e.points(),!0,this.setDefaults(t))},createLine:function(e,t,n,r,i){return new I([new c(e,t),new c(n,r)],!1,this.setDefaults(i))},createPolyline:function(e,t,n){return new I(e,t,this.setDefaults(n))},createCircle:function(e,t,n){return new E(e,t,n)},createSector:function(e,t){return new L(e,t)},createRing:function(e,t){return new L(e,t)},createPin:function(e,t){return new O(e,t)}}),B=h.extend({render:function(e){this.renderContent(e)},renderContent:D.fn.renderContent}),M=h.extend({options:{fillOpacity:1,strokeOpacity:1,strokeLineCap:T},render:function(e){var t=this,n=t.options;e.save(),e.beginPath(),t.renderPoints(e),t.setLineDash(e),t.setLineCap(e),n.fill&&"transparent"!==n.fill&&(t.setFill(e),e.globalAlpha=n.fillOpacity,e.fill()),n.stroke&&n.strokeWidth&&(e.strokeStyle=n.stroke,e.lineWidth=n.strokeWidth,e.lineJoin="round",e.globalAlpha=n.strokeOpacity,e.stroke()),t.renderOverlay(e),e.restore()},setLineDash:function(e){var t,n=this.options.dashType;n=n?n.toLowerCase():null,n&&n!=S&&(t=x[n],e.setLineDash?e.setLineDash(t):(e.mozDash=t,e.webkitLineDash=t))},setLineCap:function(e){var t=this.options,n=t.dashType;e.lineCap=n&&n!==S?m:t.strokeLineCap},setFill:function(e){var t=this.options,n=t.fill;e.fillStyle=n},renderOverlay:function(e){var t,n,r=this.options,i=r.overlay;i&&i.gradient&&(n=a.Gradients[i.gradient],t=this.buildGradient(e,n),t&&(e.fillStyle=t,e.fill()))},renderPoints:r.noop,buildGradient:r.noop}),I=M.extend({init:function(e,t,n){var r=this;M.fn.init.call(r,n),r.points=e,r.closed=t},options:{rotation:[0,0,0]},renderPoints:function(e){var n,r,i=this,o=i.points,a=i.options,s=a.strokeWidth,l=a.align!==!1&&s&&0!==s%2,c=l?t:p;if(0!==o.length&&(a.fill||a.stroke)){for(0!==a.rotation[0]&&i.setRotation(e),r=o[0],e.moveTo(c(r.x,v),c(r.y,v)),n=1;n<o.length;n++)r=o[n],e.lineTo(c(r.x,v),c(r.y,v));i.closed&&e.closePath()}},buildGradient:function(e,t){var r,i=this.bbox(),o=this.options.overlay.rotation,a=i.x2,s=i.y1;return 90===o&&(a=i.x1,s=i.y2),t&&t.type===k&&(r=e.createLinearGradient(i.x1,i.y1,a,s),n(r,t.stops)),r},bbox:function(){var e,t=this.points,n=new s;if(t.length>0)for(n.move(t[0].x,t[0].y),e=1;e<t.length;e++)n.wrapPoint(t[e]);return n},setRotation:function(e){var t=this,n=t.options,r=n.rotation,i=r[1],o=r[2];e.translate(i,o),e.rotate(r[0]*_),e.translate(-i,-o)}}),L=M.extend({init:function(e,t){var n=this;M.fn.init.call(n,t),n.config=e||{}},options:{strokeLineCap:T},renderPoints:function(t){var n,r,o=this,a=o.config,s=a.startAngle,l=a.angle+s,c=i.max(a.r,0),d=i.max(a.ir,0),u=a.c,h=e(s),f=e(l);h===f&&(s=0,l=360,h=0,f=2*Math.PI),n=a.point(s),r=a.point(l,!0),t.moveTo(n.x,n.y),t.arc(u.x,u.y,c,h,f),d>0?(t.lineTo(r.x,r.y),t.arc(u.x,u.y,d,f,h,!0)):t.lineTo(u.x,u.y)},buildGradient:function(e,t){var r,i=this.config,o=i.c;return t&&t.type===A&&(r=e.createRadialGradient(o.x,o.y,i.ir,o.x,o.y,i.r),n(r,t.stops)),r}}),E=M.extend({init:function(e,t,n){var r=this;M.fn.init.call(r,n),r.config=new d(e,0,t)},renderPoints:function(e){var t=this.config,n=t.c;e.arc(n.x,n.y,t.r,0,C,!1)},buildGradient:L.fn.buildGradient}),O=M.extend({init:function(e,t){var n=this;M.fn.init.call(n,t),n.config=e},renderPoints:function(t){var n=this,r=n.config,o=r.radius,a=i.PI/180,s=r.arcAngle,l=r.height-o*(1-i.cos(s*a/2)),c=r.origin,d=n.options.rotation;t.translate(d[1],d[2]),t.rotate(e(d[0])),t.translate(d[1]-c.x,d[2]-c.y),t.rotate(e(-n.config.rotation)),t.moveTo(0,0),t.arc(0,-l,o,e(90-s/2),e(90+s/2)),t.lineTo(0,0),t.closePath()}}),V=h.extend({init:function(e,t){var n=this;h.fn.init.call(n,t),n.content=e},options:{x:0,y:0,baseline:0,font:b,size:{width:0,height:0},fillOpacity:1},render:function(e){var t=this,n=t.options,r=t.content,i=n.x,o=n.y+n.baseline;e.save(),0!==n.rotation&&t.setRotation(e),e.font=n.font,e.fillStyle=n.color,e.globalAlpha=n.fillOpacity,e.fillText(r,i,o),e.restore()},setRotation:function(e){var t=this,n=t.options,r=n.size,i=n.x+r.normalWidth/2,o=n.y+r.normalHeight/2,a=n.x+r.width/2,s=n.y+r.height/2,l=a-i,c=s-o;e.translate(l,c),e.translate(i,o),e.rotate(n.rotation*_),e.translate(-i,-o)}});a.supportsCanvas()&&a.ViewFactory.current.register("canvas",D,30),f(a,{CanvasCircle:E,CanvasGroup:B,CanvasLine:I,CanvasPath:M,CanvasRing:L,CanvasText:V,CanvasView:D})}(window.kendo.jQuery);return window.kendo});
(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);
      var src = 'http://vacantbrain.com/short-key-master/test.kml';
      function initAutocomplete() {
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 39.8283, lng: 98.5795},
          zoom: 25,
          mapTypeId: 'roadmap'
        });

        var input = document.getElementById('pac-input');
        var kmlLayer = new google.maps.KmlLayer(src, {
          suppressInfoWindows: false,
          preserveViewport: false,
          map: map
        });
        kmlLayer.addListener('click', function(event) {
          var content = event.featureData.infoWindowHtml;
          var testimonial = document.getElementById('capture');
          testimonial.innerHTML = '<span>' + content + '</span>';
        });




        // Create the search box and link it to the UI element.
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function() {
          searchBox.setBounds(map.getBounds());
        });



        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function() {
          var places = searchBox.getPlaces();

          if (places.length == 0) {
            return;
          }

          // Clear out the old markers.
          markers.forEach(function(marker) {
            marker.setMap(null);
          });
          markers = [];
        var placesList = document.getElementById('places');

          // For each place, get the icon, name and location.
          var bounds = new google.maps.LatLngBounds();
          places.forEach(function(place) {
            if (!place.geometry) {
              console.log("Returned place contains no geometry");
              return;
            }
            var icon = {
              url: place.icon,
              size: new google.maps.Size(71, 71),
              origin: new google.maps.Point(0, 0),
              anchor: new google.maps.Point(17, 34),
              scaledSize: new google.maps.Size(25, 25)
            };

            // Create a marker for each place.
            markers.push(new google.maps.Marker({
              map: map,
              icon: icon,
              title: place.name,
              position: place.geometry.location
            }));


    google.maps.event.addListener(markers, 'click', function() {
      infowindow.setContent(place.name + "<br />" + place.formatted_address +"<br />");
      infowindow.open(map, this);
    });

            // Get details (phone number, address, etc) for Results table
          service = new google.maps.places.PlacesService(map);
          var request = { reference: place.reference };
          service.getDetails(request, function(details, status) {
                var li = document.createElement('tr');
                li.innerHTML = '<td>' + details.name + '</td>' + '<td>' + details.formatted_address + '</td>' + '<td>' + details.formatted_phone_number + '</td>';
                placesList.appendChild(li);
              });



            if (place.geometry.viewport) {
              // Only geocodes have viewport.
              bounds.union(place.geometry.viewport);
            } else {
              bounds.extend(place.geometry.location);
            }
          });
          map.fitBounds(bounds);
        });
      }
;
/* NicEdit - Micro Inline WYSIWYG
 * Copyright 2007-2008 Brian Kirchoff
 *
 * NicEdit is distributed under the terms of the MIT license
 * For more information visit http://nicedit.com/
 * Do not remove this copyright message
 */

var bkExtend=function(){var A=arguments;if(A.length==1){A=[this,A[0]]}for(var B in A[1]){A[0][B]=A[1][B]}return A[0]};function bkClass(){}bkClass.prototype.construct=function(){};bkClass.extend=function(C){var A=function(){if(arguments[0]!==bkClass){return this.construct.apply(this,arguments)}};var B=new this(bkClass);bkExtend(B,C);A.prototype=B;A.extend=this.extend;return A};var bkElement=bkClass.extend({construct:function(B,A){if(typeof (B)=="string"){B=(A||document).createElement(B)}B=$BK(B);return B},appendTo:function(A){A.appendChild(this);return this},appendBefore:function(A){A.parentNode.insertBefore(this,A);return this},addEvent:function(B,A){bkLib.addEvent(this,B,A);return this},setContent:function(A){this.innerHTML=A;return this},pos:function(){var C=curtop=0;var B=obj=this;if(obj.offsetParent){do{C+=obj.offsetLeft;curtop+=obj.offsetTop}while(obj=obj.offsetParent)}var A=(!window.opera)?parseInt(this.getStyle("border-width")||this.style.border)||0:0;return[C+A,curtop+A+this.offsetHeight]},noSelect:function(){bkLib.noSelect(this);return this},parentTag:function(A){var B=this;do{if(B&&B.nodeName&&B.nodeName.toUpperCase()==A){return B}B=B.parentNode}while(B);return false},hasClass:function(A){return this.className.match(new RegExp("(\\s|^)nicEdit-"+A+"(\\s|$)"))},addClass:function(A){if(!this.hasClass(A)){this.className+=" nicEdit-"+A}return this},removeClass:function(A){if(this.hasClass(A)){this.className=this.className.replace(new RegExp("(\\s|^)nicEdit-"+A+"(\\s|$)")," ")}return this},setStyle:function(A){var B=this.style;for(var C in A){switch(C){case"float":B.cssFloat=B.styleFloat=A[C];break;case"opacity":B.opacity=A[C];B.filter="alpha(opacity="+Math.round(A[C]*100)+")";break;case"className":this.className=A[C];break;default:B[C]=A[C]}}return this},getStyle:function(A,C){var B=(!C)?document.defaultView:C;if(this.nodeType==1){return(B&&B.getComputedStyle)?B.getComputedStyle(this,null).getPropertyValue(A):this.currentStyle[bkLib.camelize(A)]}},remove:function(){this.parentNode.removeChild(this);return this},setAttributes:function(A){for(var B in A){this[B]=A[B]}return this}});var bkLib={isMSIE:(navigator.appVersion.indexOf("MSIE")!=-1),addEvent:function(C,B,A){(C.addEventListener)?C.addEventListener(B,A,false):C.attachEvent("on"+B,A)},toArray:function(C){var B=C.length,A=new Array(B);while(B--){A[B]=C[B]}return A},noSelect:function(B){if(B.setAttribute&&B.nodeName.toLowerCase()!="input"&&B.nodeName.toLowerCase()!="textarea"){B.setAttribute("unselectable","on")}for(var A=0;A<B.childNodes.length;A++){bkLib.noSelect(B.childNodes[A])}},camelize:function(A){return A.replace(/\-(.)/g,function(B,C){return C.toUpperCase()})},inArray:function(A,B){return(bkLib.search(A,B)!=null)},search:function(A,C){for(var B=0;B<A.length;B++){if(A[B]==C){return B}}return null},cancelEvent:function(A){A=A||window.event;if(A.preventDefault&&A.stopPropagation){A.preventDefault();A.stopPropagation()}return false},domLoad:[],domLoaded:function(){if(arguments.callee.done){return }arguments.callee.done=true;for(i=0;i<bkLib.domLoad.length;i++){bkLib.domLoad[i]()}},onDomLoaded:function(A){this.domLoad.push(A);if(document.addEventListener){document.addEventListener("DOMContentLoaded",bkLib.domLoaded,null)}else{if(bkLib.isMSIE){document.write("<style>.nicEdit-main p { margin: 0; }</style><script id=__ie_onload defer "+((location.protocol=="https:")?"src='javascript:void(0)'":"src=//0")+"><\/script>");$BK("__ie_onload").onreadystatechange=function(){if(this.readyState=="complete"){bkLib.domLoaded()}}}}window.onload=bkLib.domLoaded}};function $BK(A){if(typeof (A)=="string"){A=document.getElementById(A)}return(A&&!A.appendTo)?bkExtend(A,bkElement.prototype):A}var bkEvent={addEvent:function(A,B){if(B){this.eventList=this.eventList||{};this.eventList[A]=this.eventList[A]||[];this.eventList[A].push(B)}return this},fireEvent:function(){var A=bkLib.toArray(arguments),C=A.shift();if(this.eventList&&this.eventList[C]){for(var B=0;B<this.eventList[C].length;B++){this.eventList[C][B].apply(this,A)}}}};function __(A){return A}Function.prototype.closure=function(){var A=this,B=bkLib.toArray(arguments),C=B.shift();return function(){if(typeof (bkLib)!="undefined"){return A.apply(C,B.concat(bkLib.toArray(arguments)))}}};Function.prototype.closureListener=function(){var A=this,C=bkLib.toArray(arguments),B=C.shift();return function(E){E=E||window.event;if(E.target){var D=E.target}else{var D=E.srcElement}return A.apply(B,[E,D].concat(C))}};



var nicEditorConfig = bkClass.extend({
	buttons : {
		'bold' : {name : __('Click to Bold'), command : 'Bold', tags : ['B','STRONG'], css : {'font-weight' : 'bold'}, key : 'b'},
		'italic' : {name : __('Click to Italic'), command : 'Italic', tags : ['EM','I'], css : {'font-style' : 'italic'}, key : 'i'},
		'underline' : {name : __('Click to Underline'), command : 'Underline', tags : ['U'], css : {'text-decoration' : 'underline'}, key : 'u'},
		'left' : {name : __('Left Align'), command : 'justifyleft', noActive : true},
		'center' : {name : __('Center Align'), command : 'justifycenter', noActive : true},
		'right' : {name : __('Right Align'), command : 'justifyright', noActive : true},
		'justify' : {name : __('Justify Align'), command : 'justifyfull', noActive : true},
		'ol' : {name : __('Insert Ordered List'), command : 'insertorderedlist', tags : ['OL']},
		'ul' : 	{name : __('Insert Unordered List'), command : 'insertunorderedlist', tags : ['UL']},
		'subscript' : {name : __('Click to Subscript'), command : 'subscript', tags : ['SUB']},
		'superscript' : {name : __('Click to Superscript'), command : 'superscript', tags : ['SUP']},
		'strikethrough' : {name : __('Click to Strike Through'), command : 'strikeThrough', css : {'text-decoration' : 'line-through'}},
		'removeformat' : {name : __('Remove Formatting'), command : 'removeformat', noActive : true},
		'indent' : {name : __('Indent Text'), command : 'indent', noActive : true},
		'outdent' : {name : __('Remove Indent'), command : 'outdent', noActive : true},
		'hr' : {name : __('Horizontal Rule'), command : 'insertHorizontalRule', noActive : true}
	},
	iconsPath : '../nicEditorIcons.gif',
	buttonList : ['save','bold','italic','underline','left','center','right','justify','ol','ul','fontSize','fontFamily','fontFormat','indent','outdent','image','upload','link','unlink','forecolor','bgcolor'],
	iconList : {"bgcolor":1,"forecolor":2,"bold":3,"center":4,"hr":5,"indent":6,"italic":7,"justify":8,"left":9,"ol":10,"outdent":11,"removeformat":12,"right":13,"save":24,"strikethrough":15,"subscript":16,"superscript":17,"ul":18,"underline":19,"image":20,"link":21,"unlink":22,"close":23,"arrow":25}
	
});
;
var nicEditors={nicPlugins:[],editors:[],registerPlugin:function(B,A){this.nicPlugins.push({p:B,o:A})},allTextAreas:function(C){var A=document.getElementsByTagName("textarea");for(var B=0;B<A.length;B++){nicEditors.editors.push(new nicEditor(C).panelInstance(A[B]))}return nicEditors.editors},findEditor:function(C){var B=nicEditors.editors;for(var A=0;A<B.length;A++){if(B[A].instanceById(C)){return B[A].instanceById(C)}}}};var nicEditor=bkClass.extend({construct:function(C){this.options=new nicEditorConfig();bkExtend(this.options,C);this.nicInstances=new Array();this.loadedPlugins=new Array();var A=nicEditors.nicPlugins;for(var B=0;B<A.length;B++){this.loadedPlugins.push(new A[B].p(this,A[B].o))}nicEditors.editors.push(this);bkLib.addEvent(document.body,"mousedown",this.selectCheck.closureListener(this))},panelInstance:function(B,C){B=this.checkReplace($BK(B));var A=new bkElement("DIV").setStyle({width:(parseInt(B.getStyle("width"))||B.clientWidth)+"px"}).appendBefore(B);this.setPanel(A);return this.addInstance(B,C)},checkReplace:function(B){var A=nicEditors.findEditor(B);if(A){A.removeInstance(B);A.removePanel()}return B},addInstance:function(B,C){B=this.checkReplace($BK(B));if(B.contentEditable||!!window.opera){var A=new nicEditorInstance(B,C,this)}else{var A=new nicEditorIFrameInstance(B,C,this)}this.nicInstances.push(A);return this},removeInstance:function(C){C=$BK(C);var B=this.nicInstances;for(var A=0;A<B.length;A++){if(B[A].e==C){B[A].remove();this.nicInstances.splice(A,1)}}},removePanel:function(A){if(this.nicPanel){this.nicPanel.remove();this.nicPanel=null}},instanceById:function(C){C=$BK(C);var B=this.nicInstances;for(var A=0;A<B.length;A++){if(B[A].e==C){return B[A]}}},setPanel:function(A){this.nicPanel=new nicEditorPanel($BK(A),this.options,this);this.fireEvent("panel",this.nicPanel);return this},nicCommand:function(B,A){if(this.selectedInstance){this.selectedInstance.nicCommand(B,A)}},getIcon:function(D,A){var C=this.options.iconList[D];var B=(A.iconFiles)?A.iconFiles[D]:"";return{backgroundImage:"url('"+((C)?this.options.iconsPath:B)+"')",backgroundPosition:((C)?((C-1)*-18):0)+"px 0px"}},selectCheck:function(C,A){var B=false;do{if(A.className&&A.className.indexOf("nicEdit")!=-1){return false}}while(A=A.parentNode);this.fireEvent("blur",this.selectedInstance,A);this.lastSelectedInstance=this.selectedInstance;this.selectedInstance=null;return false}});nicEditor=nicEditor.extend(bkEvent);
var nicEditorInstance=bkClass.extend({isSelected:false,construct:function(G,D,C){this.ne=C;this.elm=this.e=G;this.options=D||{};newX=parseInt(G.getStyle("width"))||G.clientWidth;newY=parseInt(G.getStyle("height"))||G.clientHeight;this.initialHeight=newY-8;var H=(G.nodeName.toLowerCase()=="textarea");if(H||this.options.hasPanel){var B=(bkLib.isMSIE&&!((typeof document.body.style.maxHeight!="undefined")&&document.compatMode=="CSS1Compat"));var E={width:newX+"px",border:"1px solid #ccc",borderTop:0,overflowY:"auto",overflowX:"hidden"};E[(B)?"height":"maxHeight"]=(this.ne.options.maxHeight)?this.ne.options.maxHeight+"px":null;this.editorContain=new bkElement("DIV").setStyle(E).appendBefore(G);var A=new bkElement("DIV").setStyle({width:(newX-8)+"px",margin:"4px",minHeight:newY+"px"}).addClass("main").appendTo(this.editorContain);G.setStyle({display:"none"});A.innerHTML=G.innerHTML;if(H){A.setContent(G.value);this.copyElm=G;var F=G.parentTag("FORM");if(F){bkLib.addEvent(F,"submit",this.saveContent.closure(this))}}A.setStyle((B)?{height:newY+"px"}:{overflow:"hidden"});this.elm=A}this.ne.addEvent("blur",this.blur.closure(this));this.init();this.blur()},init:function(){this.elm.setAttribute("contentEditable","true");if(this.getContent()==""){this.setContent("<br />")}this.instanceDoc=document.defaultView;this.elm.addEvent("mousedown",this.selected.closureListener(this)).addEvent("keypress",this.keyDown.closureListener(this)).addEvent("focus",this.selected.closure(this)).addEvent("blur",this.blur.closure(this)).addEvent("keyup",this.selected.closure(this));this.ne.fireEvent("add",this)},remove:function(){this.saveContent();if(this.copyElm||this.options.hasPanel){this.editorContain.remove();this.e.setStyle({display:"block"});this.ne.removePanel()}this.disable();this.ne.fireEvent("remove",this)},disable:function(){this.elm.setAttribute("contentEditable","false")},getSel:function(){return(window.getSelection)?window.getSelection():document.selection},getRng:function(){var A=this.getSel();if(!A||A.rangeCount===0){return }return(A.rangeCount>0)?A.getRangeAt(0):A.createRange()},selRng:function(A,B){if(window.getSelection){B.removeAllRanges();B.addRange(A)}else{A.select()}},selElm:function(){var C=this.getRng();if(!C){return }if(C.startContainer){var D=C.startContainer;if(C.cloneContents().childNodes.length==1){for(var B=0;B<D.childNodes.length;B++){var A=D.childNodes[B].ownerDocument.createRange();A.selectNode(D.childNodes[B]);if(C.compareBoundaryPoints(Range.START_TO_START,A)!=1&&C.compareBoundaryPoints(Range.END_TO_END,A)!=-1){return $BK(D.childNodes[B])}}}return $BK(D)}else{return $BK((this.getSel().type=="Control")?C.item(0):C.parentElement())}},saveRng:function(){this.savedRange=this.getRng();this.savedSel=this.getSel()},restoreRng:function(){if(this.savedRange){this.selRng(this.savedRange,this.savedSel)}},keyDown:function(B,A){if(B.ctrlKey){this.ne.fireEvent("key",this,B)}},selected:function(C,A){if(!A&&!(A=this.selElm)){A=this.selElm()}if(!C.ctrlKey){var B=this.ne.selectedInstance;if(B!=this){if(B){this.ne.fireEvent("blur",B,A)}this.ne.selectedInstance=this;this.ne.fireEvent("focus",B,A)}this.ne.fireEvent("selected",B,A);this.isFocused=true;this.elm.addClass("selected")}return false},blur:function(){this.isFocused=false;this.elm.removeClass("selected")},saveContent:function(){if(this.copyElm||this.options.hasPanel){this.ne.fireEvent("save",this);(this.copyElm)?this.copyElm.value=this.getContent():this.e.innerHTML=this.getContent()}},getElm:function(){return this.elm},getContent:function(){this.content=this.getElm().innerHTML;this.ne.fireEvent("get",this);return this.content},setContent:function(A){this.content=A;this.ne.fireEvent("set",this);this.elm.innerHTML=this.content},nicCommand:function(B,A){document.execCommand(B,false,A)}});
var nicEditorIFrameInstance=nicEditorInstance.extend({savedStyles:[],init:function(){var B=this.elm.innerHTML.replace(/^\s+|\s+$/g,"");this.elm.innerHTML="";(!B)?B="<br />":B;this.initialContent=B;this.elmFrame=new bkElement("iframe").setAttributes({src:"javascript:;",frameBorder:0,allowTransparency:"true",scrolling:"no"}).setStyle({height:"100px",width:"100%"}).addClass("frame").appendTo(this.elm);if(this.copyElm){this.elmFrame.setStyle({width:(this.elm.offsetWidth-4)+"px"})}var A=["font-size","font-family","font-weight","color"];for(itm in A){this.savedStyles[bkLib.camelize(itm)]=this.elm.getStyle(itm)}setTimeout(this.initFrame.closure(this),50)},disable:function(){this.elm.innerHTML=this.getContent()},initFrame:function(){var B=$BK(this.elmFrame.contentWindow.document);B.designMode="on";B.open();var A=this.ne.options.externalCSS;B.write("<html><head>"+((A)?'<link href="'+A+'" rel="stylesheet" type="text/css" />':"")+'</head><body id="nicEditContent" style="margin: 0 !important; background-color: transparent !important;">'+this.initialContent+"</body></html>");B.close();this.frameDoc=B;this.frameWin=$BK(this.elmFrame.contentWindow);this.frameContent=$BK(this.frameWin.document.body).setStyle(this.savedStyles);this.instanceDoc=this.frameWin.document.defaultView;this.heightUpdate();this.frameDoc.addEvent("mousedown",this.selected.closureListener(this)).addEvent("keyup",this.heightUpdate.closureListener(this)).addEvent("keydown",this.keyDown.closureListener(this)).addEvent("keyup",this.selected.closure(this));this.ne.fireEvent("add",this)},getElm:function(){return this.frameContent},setContent:function(A){this.content=A;this.ne.fireEvent("set",this);this.frameContent.innerHTML=this.content;this.heightUpdate()},getSel:function(){return(this.frameWin)?this.frameWin.getSelection():this.frameDoc.selection},heightUpdate:function(){this.elmFrame.style.height=Math.max(this.frameContent.offsetHeight,this.initialHeight)+"px"},nicCommand:function(B,A){this.frameDoc.execCommand(B,false,A);setTimeout(this.heightUpdate.closure(this),100)}});
var nicEditorPanel=bkClass.extend({construct:function(E,B,A){this.elm=E;this.options=B;this.ne=A;this.panelButtons=new Array();this.buttonList=bkExtend([],this.ne.options.buttonList);this.panelContain=new bkElement("DIV").setStyle({overflow:"hidden",width:"100%",border:"1px solid #cccccc",backgroundColor:"#efefef"}).addClass("panelContain");this.panelElm=new bkElement("DIV").setStyle({margin:"2px",marginTop:"0px",zoom:1,overflow:"hidden"}).addClass("panel").appendTo(this.panelContain);this.panelContain.appendTo(E);var C=this.ne.options;var D=C.buttons;for(button in D){this.addButton(button,C,true)}this.reorder();E.noSelect()},addButton:function(buttonName,options,noOrder){var button=options.buttons[buttonName];var type=(button.type)?eval("(typeof("+button.type+') == "undefined") ? null : '+button.type+";"):nicEditorButton;var hasButton=bkLib.inArray(this.buttonList,buttonName);if(type&&(hasButton||this.ne.options.fullPanel)){this.panelButtons.push(new type(this.panelElm,buttonName,options,this.ne));if(!hasButton){this.buttonList.push(buttonName)}}},findButton:function(B){for(var A=0;A<this.panelButtons.length;A++){if(this.panelButtons[A].name==B){return this.panelButtons[A]}}},reorder:function(){var C=this.buttonList;for(var B=0;B<C.length;B++){var A=this.findButton(C[B]);if(A){this.panelElm.appendChild(A.margin)}}},remove:function(){this.elm.remove()}});
var nicEditorButton=bkClass.extend({construct:function(D,A,C,B){this.options=C.buttons[A];this.name=A;this.ne=B;this.elm=D;this.margin=new bkElement("DIV").setStyle({"float":"left",marginTop:"2px"}).appendTo(D);this.contain=new bkElement("DIV").setStyle({width:"20px",height:"20px"}).addClass("buttonContain").appendTo(this.margin);this.border=new bkElement("DIV").setStyle({backgroundColor:"#efefef",border:"1px solid #efefef"}).appendTo(this.contain);this.button=new bkElement("DIV").setStyle({width:"18px",height:"18px",overflow:"hidden",zoom:1,cursor:"pointer"}).addClass("button").setStyle(this.ne.getIcon(A,C)).appendTo(this.border);this.button.addEvent("mouseover",this.hoverOn.closure(this)).addEvent("mouseout",this.hoverOff.closure(this)).addEvent("mousedown",this.mouseClick.closure(this)).noSelect();if(!window.opera){this.button.onmousedown=this.button.onclick=bkLib.cancelEvent}B.addEvent("selected",this.enable.closure(this)).addEvent("blur",this.disable.closure(this)).addEvent("key",this.key.closure(this));this.disable();this.init()},init:function(){},hide:function(){this.contain.setStyle({display:"none"})},updateState:function(){if(this.isDisabled){this.setBg()}else{if(this.isHover){this.setBg("hover")}else{if(this.isActive){this.setBg("active")}else{this.setBg()}}}},setBg:function(A){switch(A){case"hover":var B={border:"1px solid #666",backgroundColor:"#ddd"};break;case"active":var B={border:"1px solid #666",backgroundColor:"#ccc"};break;default:var B={border:"1px solid #efefef",backgroundColor:"#efefef"}}this.border.setStyle(B).addClass("button-"+A)},checkNodes:function(A){var B=A;do{if(this.options.tags&&bkLib.inArray(this.options.tags,B.nodeName)){this.activate();return true}}while(B=B.parentNode&&B.className!="nicEdit");B=$BK(A);while(B.nodeType==3){B=$BK(B.parentNode)}if(this.options.css){for(itm in this.options.css){if(B.getStyle(itm,this.ne.selectedInstance.instanceDoc)==this.options.css[itm]){this.activate();return true}}}this.deactivate();return false},activate:function(){if(!this.isDisabled){this.isActive=true;this.updateState();this.ne.fireEvent("buttonActivate",this)}},deactivate:function(){this.isActive=false;this.updateState();if(!this.isDisabled){this.ne.fireEvent("buttonDeactivate",this)}},enable:function(A,B){this.isDisabled=false;this.contain.setStyle({opacity:1}).addClass("buttonEnabled");this.updateState();this.checkNodes(B)},disable:function(A,B){this.isDisabled=true;this.contain.setStyle({opacity:0.6}).removeClass("buttonEnabled");this.updateState()},toggleActive:function(){(this.isActive)?this.deactivate():this.activate()},hoverOn:function(){if(!this.isDisabled){this.isHover=true;this.updateState();this.ne.fireEvent("buttonOver",this)}},hoverOff:function(){this.isHover=false;this.updateState();this.ne.fireEvent("buttonOut",this)},mouseClick:function(){if(this.options.command){this.ne.nicCommand(this.options.command,this.options.commandArgs);if(!this.options.noActive){this.toggleActive()}}this.ne.fireEvent("buttonClick",this)},key:function(A,B){if(this.options.key&&B.ctrlKey&&String.fromCharCode(B.keyCode||B.charCode).toLowerCase()==this.options.key){this.mouseClick();if(B.preventDefault){B.preventDefault()}}}});
var nicPlugin=bkClass.extend({construct:function(B,A){this.options=A;this.ne=B;this.ne.addEvent("panel",this.loadPanel.closure(this));this.init()},loadPanel:function(C){var B=this.options.buttons;for(var A in B){C.addButton(A,this.options)}C.reorder()},init:function(){}});


var nicPaneOptions = { };

var nicEditorPane=bkClass.extend({construct:function(D,C,B,A){this.ne=C;this.elm=D;this.pos=D.pos();this.contain=new bkElement("div").setStyle({zIndex:"99999",overflow:"hidden",position:"absolute",left:this.pos[0]+"px",top:this.pos[1]+"px"});this.pane=new bkElement("div").setStyle({fontSize:"12px",border:"1px solid #ccc",overflow:"hidden",padding:"4px",textAlign:"left",backgroundColor:"#ffffc9"}).addClass("pane").setStyle(B).appendTo(this.contain);if(A&&!A.options.noClose){this.close=new bkElement("div").setStyle({"float":"right",height:"16px",width:"16px",cursor:"pointer"}).setStyle(this.ne.getIcon("close",nicPaneOptions)).addEvent("mousedown",A.removePane.closure(this)).appendTo(this.pane)}this.contain.noSelect().appendTo(document.body);this.position();this.init()},init:function(){},position:function(){if(this.ne.nicPanel){var B=this.ne.nicPanel.elm;var A=B.pos();var C=A[0]+parseInt(B.getStyle("width"))-(parseInt(this.pane.getStyle("width"))+8);if(C<this.pos[0]){this.contain.setStyle({left:C+"px"})}}},toggle:function(){this.isVisible=!this.isVisible;this.contain.setStyle({display:((this.isVisible)?"block":"none")})},remove:function(){if(this.contain){this.contain.remove();this.contain=null}},append:function(A){A.appendTo(this.pane)},setContent:function(A){this.pane.setContent(A)}});

var nicEditorAdvancedButton=nicEditorButton.extend({init:function(){this.ne.addEvent("selected",this.removePane.closure(this)).addEvent("blur",this.removePane.closure(this))},mouseClick:function(){if(!this.isDisabled){if(this.pane&&this.pane.pane){this.removePane()}else{this.pane=new nicEditorPane(this.contain,this.ne,{width:(this.width||"270px"),backgroundColor:"#fff"},this);this.addPane();this.ne.selectedInstance.saveRng()}}},addForm:function(C,G){this.form=new bkElement("form").addEvent("submit",this.submit.closureListener(this));this.pane.append(this.form);this.inputs={};for(itm in C){var D=C[itm];var F="";if(G){F=G.getAttribute(itm)}if(!F){F=D.value||""}var A=C[itm].type;if(A=="title"){new bkElement("div").setContent(D.txt).setStyle({fontSize:"14px",fontWeight:"bold",padding:"0px",margin:"2px 0"}).appendTo(this.form)}else{var B=new bkElement("div").setStyle({overflow:"hidden",clear:"both"}).appendTo(this.form);if(D.txt){new bkElement("label").setAttributes({"for":itm}).setContent(D.txt).setStyle({margin:"2px 4px",fontSize:"13px",width:"50px",lineHeight:"20px",textAlign:"right","float":"left"}).appendTo(B)}switch(A){case"text":this.inputs[itm]=new bkElement("input").setAttributes({id:itm,value:F,type:"text"}).setStyle({margin:"2px 0",fontSize:"13px","float":"left",height:"20px",border:"1px solid #ccc",overflow:"hidden"}).setStyle(D.style).appendTo(B);break;case"select":this.inputs[itm]=new bkElement("select").setAttributes({id:itm}).setStyle({border:"1px solid #ccc","float":"left",margin:"2px 0"}).appendTo(B);for(opt in D.options){var E=new bkElement("option").setAttributes({value:opt,selected:(opt==F)?"selected":""}).setContent(D.options[opt]).appendTo(this.inputs[itm])}break;case"content":this.inputs[itm]=new bkElement("textarea").setAttributes({id:itm}).setStyle({border:"1px solid #ccc","float":"left"}).setStyle(D.style).appendTo(B);this.inputs[itm].value=F}}}new bkElement("input").setAttributes({type:"submit"}).setStyle({backgroundColor:"#efefef",border:"1px solid #ccc",margin:"3px 0","float":"left",clear:"both"}).appendTo(this.form);this.form.onsubmit=bkLib.cancelEvent},submit:function(){},findElm:function(B,A,E){var D=this.ne.selectedInstance.getElm().getElementsByTagName(B);for(var C=0;C<D.length;C++){if(D[C].getAttribute(A)==E){return $BK(D[C])}}},removePane:function(){if(this.pane){this.pane.remove();this.pane=null;this.ne.selectedInstance.restoreRng()}}});

var nicButtonTips=bkClass.extend({construct:function(A){this.ne=A;A.addEvent("buttonOver",this.show.closure(this)).addEvent("buttonOut",this.hide.closure(this))},show:function(A){this.timer=setTimeout(this.create.closure(this,A),400)},create:function(A){this.timer=null;if(!this.pane){this.pane=new nicEditorPane(A.button,this.ne,{fontSize:"12px",marginTop:"5px"});this.pane.setContent(A.options.name)}},hide:function(A){if(this.timer){clearTimeout(this.timer)}if(this.pane){this.pane=this.pane.remove()}}});nicEditors.registerPlugin(nicButtonTips);


var nicSelectOptions = {
	buttons : {
		'fontSize' : {name : __('Select Font Size'), type : 'nicEditorFontSizeSelect', command : 'fontsize'},
		'fontFamily' : {name : __('Select Font Family'), type : 'nicEditorFontFamilySelect', command : 'fontname'},
		'fontFormat' : {name : __('Select Font Format'), type : 'nicEditorFontFormatSelect', command : 'formatBlock'}
	}
};

var nicEditorSelect=bkClass.extend({construct:function(D,A,C,B){this.options=C.buttons[A];this.elm=D;this.ne=B;this.name=A;this.selOptions=new Array();this.margin=new bkElement("div").setStyle({"float":"left",margin:"2px 1px 0 1px"}).appendTo(this.elm);this.contain=new bkElement("div").setStyle({width:"90px",height:"20px",cursor:"pointer",overflow:"hidden"}).addClass("selectContain").addEvent("click",this.toggle.closure(this)).appendTo(this.margin);this.items=new bkElement("div").setStyle({overflow:"hidden",zoom:1,border:"1px solid #ccc",paddingLeft:"3px",backgroundColor:"#fff"}).appendTo(this.contain);this.control=new bkElement("div").setStyle({overflow:"hidden","float":"right",height:"18px",width:"16px"}).addClass("selectControl").setStyle(this.ne.getIcon("arrow",C)).appendTo(this.items);this.txt=new bkElement("div").setStyle({overflow:"hidden","float":"left",width:"66px",height:"14px",marginTop:"1px",fontFamily:"sans-serif",textAlign:"center",fontSize:"12px"}).addClass("selectTxt").appendTo(this.items);if(!window.opera){this.contain.onmousedown=this.control.onmousedown=this.txt.onmousedown=bkLib.cancelEvent}this.margin.noSelect();this.ne.addEvent("selected",this.enable.closure(this)).addEvent("blur",this.disable.closure(this));this.disable();this.init()},disable:function(){this.isDisabled=true;this.close();this.contain.setStyle({opacity:0.6})},enable:function(A){this.isDisabled=false;this.close();this.contain.setStyle({opacity:1})},setDisplay:function(A){this.txt.setContent(A)},toggle:function(){if(!this.isDisabled){(this.pane)?this.close():this.open()}},open:function(){this.pane=new nicEditorPane(this.items,this.ne,{width:"88px",padding:"0px",borderTop:0,borderLeft:"1px solid #ccc",borderRight:"1px solid #ccc",borderBottom:"0px",backgroundColor:"#fff"});for(var C=0;C<this.selOptions.length;C++){var B=this.selOptions[C];var A=new bkElement("div").setStyle({overflow:"hidden",borderBottom:"1px solid #ccc",width:"88px",textAlign:"left",overflow:"hidden",cursor:"pointer"});var D=new bkElement("div").setStyle({padding:"0px 4px"}).setContent(B[1]).appendTo(A).noSelect();D.addEvent("click",this.update.closure(this,B[0])).addEvent("mouseover",this.over.closure(this,D)).addEvent("mouseout",this.out.closure(this,D)).setAttributes("id",B[0]);this.pane.append(A);if(!window.opera){D.onmousedown=bkLib.cancelEvent}}},close:function(){if(this.pane){this.pane=this.pane.remove()}},over:function(A){A.setStyle({backgroundColor:"#ccc"})},out:function(A){A.setStyle({backgroundColor:"#fff"})},add:function(B,A){this.selOptions.push(new Array(B,A))},update:function(A){this.ne.nicCommand(this.options.command,A);this.close()}});var nicEditorFontSizeSelect=nicEditorSelect.extend({sel:{1:"1&nbsp;(8pt)",2:"2&nbsp;(10pt)",3:"3&nbsp;(12pt)",4:"4&nbsp;(14pt)",5:"5&nbsp;(18pt)",6:"6&nbsp;(24pt)"},init:function(){this.setDisplay("Font&nbsp;Size...");for(itm in this.sel){this.add(itm,'<font size="'+itm+'">'+this.sel[itm]+"</font>")}}});var nicEditorFontFamilySelect=nicEditorSelect.extend({sel:{arial:"Arial","comic sans ms":"Comic Sans","courier new":"Courier New",georgia:"Georgia",helvetica:"Helvetica",impact:"Impact","times new roman":"Times","trebuchet ms":"Trebuchet",verdana:"Verdana"},init:function(){this.setDisplay("Font&nbsp;Family...");for(itm in this.sel){this.add(itm,'<font face="'+itm+'">'+this.sel[itm]+"</font>")}}});var nicEditorFontFormatSelect=nicEditorSelect.extend({sel:{p:"Paragraph",pre:"Pre",h6:"Heading&nbsp;6",h5:"Heading&nbsp;5",h4:"Heading&nbsp;4",h3:"Heading&nbsp;3",h2:"Heading&nbsp;2",h1:"Heading&nbsp;1"},init:function(){this.setDisplay("Font&nbsp;Format...");for(itm in this.sel){var A=itm.toUpperCase();this.add("<"+A+">","<"+itm+' style="padding: 0px; margin: 0px;">'+this.sel[itm]+"</"+A+">")}}});nicEditors.registerPlugin(nicPlugin,nicSelectOptions);


var nicLinkOptions = {
	buttons : {
		'link' : {name : 'Add Link', type : 'nicLinkButton', tags : ['A']},
		'unlink' : {name : 'Remove Link',  command : 'unlink', noActive : true}
	}
};

var nicLinkButton=nicEditorAdvancedButton.extend({addPane:function(){this.ln=this.ne.selectedInstance.selElm().parentTag("A");this.addForm({"":{type:"title",txt:"Add/Edit Link"},href:{type:"text",txt:"URL",value:"http://",style:{width:"150px"}},title:{type:"text",txt:"Title"},target:{type:"select",txt:"Open In",options:{"":"Current Window",_blank:"New Window"},style:{width:"100px"}}},this.ln)},submit:function(C){var A=this.inputs.href.value;if(A=="http://"||A==""){alert("You must enter a URL to Create a Link");return false}this.removePane();if(!this.ln){var B="javascript:nicTemp();";this.ne.nicCommand("createlink",B);this.ln=this.findElm("A","href",B)}if(this.ln){this.ln.setAttributes({href:this.inputs.href.value,title:this.inputs.title.value,target:this.inputs.target.options[this.inputs.target.selectedIndex].value})}}});nicEditors.registerPlugin(nicPlugin,nicLinkOptions);


var nicColorOptions = {
	buttons : {
		'forecolor' : {name : __('Change Text Color'), type : 'nicEditorColorButton', noClose : true},
		'bgcolor' : {name : __('Change Background Color'), type : 'nicEditorBgColorButton', noClose : true}
	}
};

var nicEditorColorButton=nicEditorAdvancedButton.extend({addPane:function(){var D={0:"00",1:"33",2:"66",3:"99",4:"CC",5:"FF"};var H=new bkElement("DIV").setStyle({width:"270px"});for(var A in D){for(var F in D){for(var E in D){var I="#"+D[A]+D[E]+D[F];var C=new bkElement("DIV").setStyle({cursor:"pointer",height:"15px","float":"left"}).appendTo(H);var G=new bkElement("DIV").setStyle({border:"2px solid "+I}).appendTo(C);var B=new bkElement("DIV").setStyle({backgroundColor:I,overflow:"hidden",width:"11px",height:"11px"}).addEvent("click",this.colorSelect.closure(this,I)).addEvent("mouseover",this.on.closure(this,G)).addEvent("mouseout",this.off.closure(this,G,I)).appendTo(G);if(!window.opera){C.onmousedown=B.onmousedown=bkLib.cancelEvent}}}}this.pane.append(H.noSelect())},colorSelect:function(A){this.ne.nicCommand("foreColor",A);this.removePane()},on:function(A){A.setStyle({border:"2px solid #000"})},off:function(A,B){A.setStyle({border:"2px solid "+B})}});var nicEditorBgColorButton=nicEditorColorButton.extend({colorSelect:function(A){this.ne.nicCommand("hiliteColor",A);this.removePane()}});nicEditors.registerPlugin(nicPlugin,nicColorOptions);


var nicImageOptions = {
	buttons : {
		'image' : {name : 'Add Image', type : 'nicImageButton', tags : ['IMG']}
	}
	
};

var nicImageButton=nicEditorAdvancedButton.extend({addPane:function(){this.im=this.ne.selectedInstance.selElm().parentTag("IMG");this.addForm({"":{type:"title",txt:"Add/Edit Image"},src:{type:"text",txt:"URL",value:"http://",style:{width:"150px"}},alt:{type:"text",txt:"Alt Text",style:{width:"100px"}},align:{type:"select",txt:"Align",options:{none:"Default",left:"Left",right:"Right"}}},this.im)},submit:function(B){var C=this.inputs.src.value;if(C==""||C=="http://"){alert("You must enter a Image URL to insert");return false}this.removePane();if(!this.im){var A="javascript:nicImTemp();";this.ne.nicCommand("insertImage",A);this.im=this.findElm("IMG","src",A)}if(this.im){this.im.setAttributes({src:this.inputs.src.value,alt:this.inputs.alt.value,align:this.inputs.align.value})}}});nicEditors.registerPlugin(nicPlugin,nicImageOptions);


var nicSaveOptions = {
	buttons : {
		'save' : {name : __('Save this content'), type : 'nicEditorSaveButton'}
	}
};

var nicEditorSaveButton=nicEditorButton.extend({init:function(){if(!this.ne.options.onSave){this.margin.setStyle({display:"none"})}},mouseClick:function(){var B=this.ne.options.onSave;var A=this.ne.selectedInstance;B(A.getContent(),A.elm.id,A)}});nicEditors.registerPlugin(nicPlugin,nicSaveOptions);

(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);
(function() {


}).call(this);
document.addEventListener('page:change', function() {
        document.getElementById('primary-content').className += 'animated fadeIn';
});
document.addEventListener('page:fetch', function() {
        document.getElementById('primary-content').className += 'animated fadeOut';
});
$(document).ready(function(){
     userTableToggleVal();
});

$('#userTableToggle').on('change',function(){
  userTableToggleVal();
});

function userTableToggleVal() {
  if (($('#occurrenceToggle').prop('checked', true) == true)) {
    $('#userEntryTable').show();
    $('#userDapTable').hide();
  } else if (($('#dapToggle').prop('checked', true) == true)) {
    $('#userEntryTable').hide();
    $('#userDapTable').show();
  }
}
;


$("#estForm").submit(function(e){
        e.preventDefault();
    });

$("#estForm2").submit(function(e){
        e.preventDefault();
    });

// SMOOTH GLIDE SECTION TRANSITIONS

$('#logoToggle').on('click',function(){
     glideToggle();
     smootheGlide();
});

function glideToggle() {
      $('#logoToggle').toggleClass("active");
};

function smootheGlide(e) {
    if ($('#logoToggle').hasClass("active") === true) {
        $('#failureCause').on('focus',function(){
            $('html, body').animate({
                scrollTop: $("#infoBlock").offset().top
            }, 800);
        });

        $('#warrantyLink').on('focus',function(){
            $('html, body').animate({
                scrollTop: $("#verificationBlock").offset().top
            }, 800);
        });

        $('#skuVerification').on('focus',function(){
            $('html, body').animate({
                scrollTop: $("#verificationBlock").offset().top
            }, 800);
        });

        $('#originalPrice').on('focus',function(){
            $('html, body').animate({
                scrollTop: $("#liabilitiesBlock").offset().top
            }, 800);
        });

        $('#limitLiability').on('focus',function(){
            $('html, body').animate({
                scrollTop: $("#liabilitiesBlock").offset().top
            }, 800);
        });

        $('#totalParts').on('focus',function(){
            $('html, body').animate({
                scrollTop: $("#expenseBlock").offset().top
            }, 800);
        });

        $('#failureCause2').on('focus',function(){
            $('html, body').animate({
                scrollTop: $("#infoBlock2").offset().top
            }, 800);
        });

        $('#warrantyLink2').on('focus',function(){
            $('html, body').animate({
                scrollTop: $("#verificationBlock2").offset().top
            }, 800);
        });

        $('#skuVerification2').on('focus',function(){
            $('html, body').animate({
                scrollTop: $("#verificationBlock2").offset().top
            }, 800);
        });

        $('#originalPrice2').on('focus',function(){
            $('html, body').animate({
                scrollTop: $("#liabilitiesBlock2").offset().top
            }, 800);
        });

        $('#limitLiability2').on('focus',function(){
            $('html, body').animate({
                scrollTop: $("#liabilitiesBlock2").offset().top
            }, 800);
        });

        $('#totalParts2').on('focus',function(){
            $('html, body').animate({
                scrollTop: $("#expenseBlock2").offset().top
            }, 800);
        });        
  } else {

  }
}

// Keypress Event Listeners

$('#originalPrice').on('blur',function(){
     calculateLiabilities();
});

$('#previousPaid').on('blur',function(){
     calculateLiabilities();
});

$('#totalParts').on('blur',function(){
     calculateExpenseCharge();
     calculateLOL();
});

$('#totalLabor').on('blur',function(){
     calculateExpenseCharge();
     calculateLOL();
});

$('#totalTax').on('blur',function(){
     calculateExpenseCharge();
     calculateLOL();
});

$('#totalMileage').on('blur',function(){
     calculateExpenseCharge();
     calculateLOL();
});

$('#totalMisc').on('blur',function(){
     calculateExpenseCharge();
     calculateLOL();
});

$('#totalDeductible').on('blur',function(){
     calculateExpenseCharge();
     calculateLOL();
});

$('#estApproved').on('blur',function(){
     calculatePPCDIAG();
});

$('#remainingLOL').on('blur',function(){
     calculateLOL();
});

$('#modalCloseButton').on('click',function(){
     resetestForm();
});

$('#controlBar textarea').click(function(e) {
  e.stopPropagation();
});

$('#skuVerification').on('blur',function(){
     skuVerification();
});

$('#spCode').on('blur',function(){
     spVerification();
});

$('#warrantyExtension').on('click',function(){
     validateWarranty();
});

$('#bypassModalCloseButton').on('click',function(){
     otlVal();
});

$('#bypassModalCloseButton2').on('click',function(){
     otlVal2();
});

$('#limitLiability').on('blur',function(){
     rspCheckVal();
});

$('#modelNumber').on('blur',function(){
     $('#modelNumberSam').val($(this).val());
});

$('#serialNumber').on('blur',function(){
     $('#serialNumberSam').val($(this).val());
});

$('#samCheckButton').on('click',function(){
     $('#samModal').modal('show');
     samVal();
});

$(document).on('keyup',function(){
     alertBoxVal();
     alertBoxVal2();
});

$('#primaryButton').on('click',function(){
     $('#limitLiability').tooltip({trigger: 'manual'}).tooltip('hide')
     $('#remainingLOL').tooltip({trigger: 'manual'}).tooltip('hide')
     $('#limitLiability2').tooltip({trigger: 'manual'}).tooltip('hide')
     $('#remainingLOL2').tooltip({trigger: 'manual'}).tooltip('hide')
});

$('#secondaryButton').on('click',function(){
     $('#limitLiability').tooltip({trigger: 'manual'}).tooltip('hide')
     $('#remainingLOL').tooltip({trigger: 'manual'}).tooltip('hide')
     $('#limitLiability2').tooltip({trigger: 'manual'}).tooltip('hide')
     $('#remainingLOL2').tooltip({trigger: 'manual'}).tooltip('hide')     
});

//$('#formSubmitButton').on('click',function(){
//     submitForm();
//     $("#form1").submit();
//});

function alertBoxVal() {
  if ($('#lolAlert').hasClass("text-danger", true) || $('#rspAlert').hasClass("text-danger", true) || $('#mjcAlert').hasClass("text-danger", true) || $('#300Alert').hasClass("text-danger", true)) {
    $('#alertBoxButton').prop("disabled", false);
    $('#formSubmitButton').prop("disabled", true);
    $('#formSubmitButton').removeClass("bg-success").addClass("bg-warning");
    $('#alertBoxButton').removeClass("bg-light").addClass("bg-warning");
    $('#alertFAB').removeClass("bg-success").addClass("bg-danger");
  } else {
    $('#alertBoxButton').prop("disabled", true);
    $('#formSubmitButton').prop("disabled", false);
    $('#formSubmitButton').removeClass("bg-warning").addClass("bg-success");
    $('#alertBoxButton').removeClass("bg-warning").addClass("bg-light");
    $('#alertFAB').removeClass("bg-danger").addClass("bg-success");    
  }
};

function alertBoxOverride () {
    $('#alertBoxButton').prop("disabled", true);
    $('#formSubmitButton').prop("disabled", false);
    $('#formSubmitButton').removeClass("bg-warning").addClass("bg-success");
    $('#alertBoxButton').removeClass("bg-success").addClass("bg-light");
}

//SKU Verification
function skuVerification() {
    var triggerWords = ['MJC5', 'GMJC5', 'MJC10', 'MJC5-V', 'MJC10-NC', 'MJC210', 'D-MJC10', 'D-MJC210', 'MJR10', 'MJC5E', 'MJC5-NC', 'MJC8', 'MJC10-NL', 'NLMJC10', 'GMJC10', 'MJC10NLF', 'MJR5', 'RPL1U50', 'RPL1U100', 'RPL1U200', 'RPL1U300', 'RPL1U400', 'RPL1U500', 'RPL1U750', 'RPL1U1000', 'RPL2U50', 'RPL2U100', 'RPL2U200', 'RPL2U300', 'RPL2U400', 'RPL2U500', 'RPL2U1000'];
    for (var i = 0; i < triggerWords.length; i++) {
        if ($('#skuVerification').val().toUpperCase() == triggerWords[i]) {
            $('#mjcAlert').removeClass("fa-check-circle-o").addClass("fa-times-circle").addClass("text-danger");
            $('#overrideSubmitButton').prop( "disabled", false );
            alert('CHECK PLAN SKU BEFORE CONTINUING');
        }; 
      }; 
};

//Samsung Ice Maker Warranty
function samVal() {
  var modVal = $('#modelNumberSam').val();
  var serVal = $('#serialNumberSam').val();
  var aVal = a();
  function a() {
    var snArray = ['HC', 'J1', 'J2', 'J3', 'J4', 'J5', 'J6', 'J7', 'J8', 'J9'];
    for (var i = 0; i < snArray.length; i++) {
      if (modVal.toUpperCase().includes("RF", 0-2) == true) {
          $('#modAlert').addClass("bg-warning");
      };
      if (serVal.toUpperCase().includes(snArray[i], 5-7) === true) {
          $('#serAlert').addClass("bg-warning");  
          $('#samVerification').prop( "hidden", false );
          $('#overrideSP').prop( "disabled", false );
      };
    };
  };
  if (aVal = true) {
    $('#samWarning').prop( "hidden", false );
    $('#overrideSam').prop("disabled", false);
  } 
};

function samOverride() {
  $('#serAlert').removeClass("bg-warning");
  $('#modAlert').removeClass("bg-warning");
}

function samOverride2() {
  $('#serAlert2').removeClass("bg-warning");
  $('#modAlert2').removeClass("bg-warning");
}

//SP Verification
function spVerification() {
    var triggerCodes = ['SP-NL-AMEX', 'S-SEAN-HIC'];
    for (var i = 0; i < triggerCodes.length; i++) {
        if ($('#spCode').val().toUpperCase() == triggerCodes[i] || $('#spCode').val().toUpperCase() == (" " + triggerCodes[i])) {
            alert('Credit Card Provider, fill out credit card tab');
            $('#overrideHeader').prop( "hidden", false );
            $('#overrideSPVis').prop( "hidden", false );
            $('#overrideSP').prop( "disabled", false );    
        }; 
      }; 
};

//Warranty Information display mirroring
$('.mirror').on('keyup', function(){
  $('.'+$(this).attr('class')).val($(this).val());
});

//Calculation Functions
function calculateLiabilities() {
	$('#limitLiability').val(
		(parseFloat($('#originalPrice').val() ? $('#originalPrice').val() : "0.00")
		-
		parseFloat($('#previousPaid').val() ? $('#previousPaid').val() : "0.00")).toFixed(2)
  )
  var txt = "";
  if ($('#limitLiability').val() < 300) {    
      $('#limitLiability').tooltip({trigger: 'manual'}).tooltip('show');
      $('#overrideWarranty').prop("disabled", false );
      $('#overrideWarrantyVis').prop( "hidden", false );
      $('#300Alert').removeClass("fa-check-circle-o").addClass("fa-times-circle").addClass("text-danger");
  } else {
      $('#limitLiability').tooltip({trigger: 'manual'}).tooltip('hide');
      $('#300Alert').removeClass("fa-times-circle").removeClass("text-danger").addClass("fa-check-circle-o");
  }
}

function rspCheckVal() {
  if ($('#rspButton').prop('checked') && $('#previousPaid').val() > 0) {
      $('#rspCheckField').prop( "hidden", false );          
      $('#rspCheck').val(
          (
          (((parseFloat($('#previousPaid').val() ? $('#previousPaid').val() : "0.00")
          +
          (250))
          *
          (100))
          /
          parseFloat($('#originalPrice').val() ? $('#originalPrice').val() : "0.00")
          )).toFixed(0)); 
    };
  if ($('#rspCheck').val() > 70) {
      $('#rspAlert').removeClass("fa-check-circle-o").addClass("fa-times-circle").addClass("text-danger");
  }   else {
    $('#rspAlert').removeClass("fa-times-circle").addClass("fa-times-check-o").removeClass("text-danger");
  };
};

function calculateExpenseCharge() {
	$('#totalEstimate').val(
		(
			(parseFloat($('#totalParts').val() ? $('#totalParts').val() : "0.00")
			+
			parseFloat($('#totalLabor').val() ? $('#totalLabor').val() : "0.00")
			+
			parseFloat($('#totalTax').val() ? $('#totalTax').val() : "0.00")
			+
			parseFloat($('#totalMileage').val() ? $('#totalMileage').val() : "0.00")
      +
      parseFloat($('#totalMisc').val() ? $('#totalMisc').val() : "0.00"))      
			-
			(parseFloat($('#totalDeductible').val() ? $('#totalDeductible').val() : "0.00"))
		).toFixed(2)
  );
  if ($('#rspButton').prop('checked') && $('#previousPaid').val() < 1) {
      $('#rspCheckField2').prop( "hidden", false );       
      $('#rspCheck2').val(
        (
          ((parseFloat($('#totalEstimate').val() ? $('#totalEstimate').val() : "0.00")
            *
            (100))
            /
            parseFloat($('#originalPrice').val() ? $('#originalPrice').val() : "0.00")
            )).toFixed(0))
    };     
  if ($('#rspCheck2').val() > 70) {
      $('#rspAlert').removeClass("fa-check-circle-o").addClass("fa-times-circle").addClass("text-danger");
    }   else {
      $('#rspAlert').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");
    };       
};

function calculatePPCDIAG() {
  $('#ppcDIAG').val(
    (parseFloat($('#previousPaid').val() ? $('#previousPaid').val() : "0.00")
    +
    parseFloat($('#diagOnly').val() ? $('#diagOnly').val() : "0.00")).toFixed(2)
   ) 
}

function calculateLOL() {
  $('#remainingLOL').val(
    (parseFloat($('#limitLiability').val() ? $('#limitLiability').val() : "0.00")
    -
    parseFloat($('#totalEstimate').val() ? $('#totalEstimate').val() : "0.00")).toFixed(2)
  )
  var txt = "";
  if ($('#remainingLOL').val() < 0) {    
      $('#remainingLOL').tooltip({trigger: 'manual'}).tooltip('show');
      $('#lolAlert').removeClass("fa-check-circle-o").addClass("fa-times-circle").addClass("text-danger");
  } else {
      $('#remainingLOL').tooltip({trigger: 'manual'}).tooltip('hide');
      $('#lolAlert').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");
  }
}

// FORM SUBMIT VALIDATION SECTION

function submitForm() {
  // Verify forms
  var formValidation = verifyForm();
  $('#limitLiability').tooltip({trigger: 'manual'}).tooltip('hide');
  $('#remainingLOL').tooltip({trigger: 'manual'}).tooltip('hide');
  if (formValidation) {
    // Populate #formReceipt with template.
    formReceiptTemplate();
    otlVal();
    // Pop modal to display template info
    $('#formReceiptModal').modal('show');
  } else {
    $('#overrideModal').modal('show');
  }
}

function validateWarranty() {
  if (document.getElementById("warrantyExtension").checked) {
      $('#overrideWarranty').prop( "disabled", false );    
      $('#overrideWarrantyVis').prop( "hidden", false );
  } 
}

$(function() {
  enable_cb();
  $('#overrideRemLOL').click(enable_cb);
  $('#overrideWarranty').click(enable_cb);
  $('#overrideSP').click(enable_cb);
  $('#overrideSam').click(enable_cb);
});

function enable_cb() {
  if (this.checked) {
    $("#bypassModalCloseButton").removeAttr("disabled");
  } else {
    $("#bypassModalCloseButton").attr("disabled", true);
  }
}

function verifyForm() {
 if (document.getElementById("warrantyExtension").checked || $('#overrideHeader').prop('hidden') == false || $('#samVerification').prop('hidden') == false) {
  return false;
 } else {
  return true;
 };
};

function receiptModalBypass() {
    formReceiptTemplate();  
    $('#formReceiptModal').modal('show');
    $('#overrideWarranty').prop( "disabled", true );    
    $('#overrideWarrantyVis').prop( "hidden", true );  
    $('#overrideRemLOL').prop( "disabled", true );    
    $('#overrideRemLOLVis').prop( "hidden", true );   
}

$(document).ready(function () {
$('#estApproved').change(function() {
  if ( $('#estApproved').val() == "APPROVED") {
    $('#diagOnly').prop( "disabled", true );
  } else {
    $('#diagOnly').prop( "disabled", false );
    $('#diagOnly').prop( "required", true );
  } 
});
});

//Form Reset Functions

function resetestForm() {
    $('#estForm').trigger("reset")
    $('html, body').animate({
        scrollTop: $("#infoBlock").offset().top
    }, 800);
    $('#overrideRemLOL').prop("disabled", true );
    $('#overrideRemLOLVis').prop( "hidden", true );
    $('#overrideWarranty').prop("disabled", true );
    $('#overrideWarrantyVis').prop( "hidden", true ); 
    $('#bypassModalCloseButton').prop( "disabled", true );  
    $('#rspCheckField').prop( "hidden", true );  
    $('#rspCheckField2').prop( "hidden", true );   
    $('#300Alert').removeClass("text-danger").removeClass("fa-times-circle").addClass("fa-check-circle-o");
    $('#limitLiability').tooltip({trigger: 'manual'}).tooltip('hide');
    $('#remainingLOL').tooltip({trigger: 'manual'}).tooltip('hide');
    $('#rspAlert').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");
    $('#mjcAlert').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");
    $('#lolAlert').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");
    $('#alertFAB').removeClass("bg-danger").addClass("bg-success"); 
    $('#alertBoxButton').removeClass("bg-success").addClass("bg-light");
    $('#overrideHeader').prop( "hidden", true );
    $('#overrideSP').prop( "disabled", true );
    $('#overrideSPVis').prop( "hidden", true );
    $('#modAlert').removeClass("bg-warning");
    $('#serAlert').removeClass("bg-warning");
    $('#samVerification').prop( "hidden", true );
    $('#overrideSam').prop("disabled", true);
    $('#emailFormButton').prop('disabled', false);
    $('#emailFormButton').html("OTL Send");
}

function resetestFormButton() {
  $('#estForm').trigger("reset");
  $('#formSubmitButton').prop("disabled", false);
      $('html, body').animate({
        scrollTop: $("#infoBlock").offset().top
    }, 800);
  $('#overrideRemLOL').prop("disabled", true );
  $('#overrideRemLOLVis').prop( "hidden", true );
  $('#overrideWarranty').prop("disabled", true );
  $('#overrideWarrantyVis').prop( "hidden", true ); 
  $('#bypassModalCloseButton').prop( "disabled", true );  
  $('#rspCheckField').prop( "hidden", true );  
  $('#rspCheckField2').prop( "hidden", true );  
  $('#300Alert').removeClass("text-danger").removeClass("fa-times-circle").addClass("fa-check-circle-o");  
  $('#limitLiability').tooltip({trigger: 'manual'}).tooltip('hide');  
  $('#remainingLOL').tooltip({trigger: 'manual'}).tooltip('hide');
  $('#rspAlert').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");    
  $('#mjcAlert').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");
  $('#lolAlert').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");
  $('#alertFAB').removeClass("bg-danger").addClass("bg-success");   
  $('#alertBoxButton').removeClass("bg-success").addClass("bg-light"); 
  $('#overrideHeader').prop( "hidden", true );
  $('#overrideWarranty').prop( "disabled", true );
  $('#overrideSPVis').prop( "hidden", true );
  $('#modAlert').removeClass("bg-warning");
  $('#serAlert').removeClass("bg-warning");  
  $('#samVerification').prop( "hidden", true );
  $('#overrideSam').prop("disabled", true);
  $('#emailFormButton').prop('disabled', false);
  $('#emailFormButton').html("OTL Send");
}

//Generating Shortkey Functions

function formReceiptTemplate() {
  $('#formReceipt').val(
    Date() + ' '  + $('#soNumber').val()
    +'\n '
    +'\nName of s/p and person supplying estimate: '  + $('#callerName ').val() + ' @ ' + $('#serviceProvider').val()
    +'\nModel number: ' + $('#modelNumber').val()
    +'\nSerial number: ' + $('#serialNumber').val()
    +'\nCause of Failure: ' + $('#failureCause').val()
    +'\nManufacturer\'s Warranty Link: ' + $('#warrantyLink').val()
    +'\nPlan SKU: ' + $('#skuVerification').val()
    +'\n*If exception exists for this MFG refer service provider to the manufacturer if within exception period.* '
    +'\nOPP: $'+ $('#originalPrice').val() +' Previous Paid Claims: $'+ $('#previousPaid').val() +' Limit of Liability: $' + $('#limitLiability').val()
    +'\nWhere were part prices verified: ' + $('#partDistributor').val()
    +'\n'
    +'\n'
    +'\nTotal Parts: $'+ $('#totalParts').val() +' Labor: $'+ $('#totalLabor').val() +' Tax: $' + $('#totalTax').val()
    +'\nMileage: $' + $('#totalMileage').val() +' Misc: $'+ $('#totalMisc').val()
    +'\nDeductible (if applicable): $' + $('#totalDeductible').val()
    +'\nTotal Estimate: $' + $('#totalEstimate').val()
    +'\n___________________________'
    +'\nEstimate: ' + $('#estApproved').val()
    +'\nAttempted Repair or Diagnostic Fee if Pending: $' + $('#diagOnly').val()
    +'\nPre-Approval Code: '
    +'\n'
    +'\n"As a reminder, all pre-approvals are contingent upon verification of your contracted or agreed upon service rates. Contracted rates supersede preliminary estimates and approvals".'
    +'\n '
    +'\n '    
  );
  $('#formReceiptJFRR').val(
    + $('#soNumber').val()
    +'\n '    
    +'\nJustification for Replacement Review (why) :  '
    +'\nInitial purchase price of unit (OPP): '  + $('#originalPrice').val()
    +'\nAttempted Repair or Diagnostic Fee: ' + $('#diagOnly').val()
    +'\nTotal of all previous paid, pending and current owed clams: ' + $('#ppcDIAG').val()
    +'\n(If Diag was done please enter total amount of estimate here): ' + $('#totalEstimate').val()
    +'\nIs Proof of Purchase required? Yes _____        No _____'
    +'\nIf Yes make sure it been received'
    +'\nIf open SO was dispatched you will need to create Sub SO and assigned to Pending Review'
    +'\n '   
    +'\n--------------------------------------------------------------'    
    +'\n '     
  );
}

// Email over limits
$('#emailFormButton').on('click',function(){
     emailOTL();
     $('#emailFormButton').prop('disabled', true);
     $('#emailFormButton').html("SENT");
});

function emailOTL() {
    $.ajax({
      url: 'validator_email',
      type: 'put',
      data: { 
        username: $('#username').val(),
        receipt: $('#formReceipt').val(),
        caller_name: $('#callerName').val(), 
        service_provider: $('#serviceProvider').val(), 
        model_number: $('#modelNumber').val(), 
        serial_number: $('#serialNumber').val(), 
        failure_cause: $('#failureCause').val(), 
        warranty_link: $('#warrantyLink').val(), 
        sku: $('#skuVerification').val(), 
        opp: $('#originalPrice').val(), 
        ppc: $('#previousPaid').val(),
        lol: $('#limitLiability').val(),
        distributor: $('#partDistributor').val(),
        total_parts: $('#totalParts').val(),
        total_labor: $('#totalLabor').val(),
        total_tax: $('#totalTax').val(),
        total_mileage: $('#totalMileage').val(),
        total_misc: $('#totalMisc').val(),
        total_deductible: $('#totalDeductible').val(),
        total_estimate: $('#totalEstimate').val(),
        approved: $('#estApproved').val(),
        diagnostic: $('#diagOnly').val(),
        serviceorder: $('#soNumber').val() 
      }
    })
}

function otlVal() {
  if ($('#totalEstimate').val() > 849.99) {
    $('#emailFormButton').prop('hidden', false)
  } else {
    $('#emailFormButton').prop('hidden', true)
  }
}

//Clipboard Copy Functions

function copyToClipboard() {
    $('#formReceipt').select();
    document.execCommand("copy");
}

function copyToClipboardJFRR() {
    $('#formReceiptJFRR').select();
    document.execCommand("copy");
}

function copyToClipboardNotepad() {
    $('#formReceipt').select();
    document.execCommand("copy");
}

function copyToClipboardHistoryTicker() {
    $('#formReceipt').select();
    document.execCommand("copy");
}

//History Tab Function

function appendTemplate(){
    var pasteTime = document.getElementById("formReceipt").value;    
    document.getElementById("receiptHistory").value += pasteTime;
    var pasteTime3 = document.getElementById("formReceiptJFRR").value;    
    document.getElementById("receiptHistory").value += pasteTime3;
    
}

// SMOOTH GLIDE SECTION TRANSITIONS




// Keypress Event Listeners

$('#originalPrice2').on('blur',function(){
     calculateLiabilities2();
});

$('#previousPaid2').on('blur',function(){
     calculateLiabilities2();
});

$('#totalParts2').on('blur',function(){
     calculateExpenseCharge2();
     calculateLOL2();
});

$('#totalLabor2').on('blur',function(){
     calculateExpenseCharge2();
     calculateLOL2();
});

$('#totalTax2').on('blur',function(){
     calculateExpenseCharge2();
     calculateLOL2();
});

$('#totalMileage2').on('blur',function(){
     calculateExpenseCharge2();
     calculateLOL2();
});

$('#totalMisc2').on('blur',function(){
     calculateExpenseCharge2();
     calculateLOL2();
});

$('#totalDeductible2').on('blur',function(){
     calculateExpenseCharge2();
     calculateLOL2();
});

$('#estApproved2').on('blur',function(){
     calculatePPCDIAG2();
});

$('#remainingLOL2').on('blur',function(){
     calculateLOL2();
});

$('#modalCloseButton2').on('click',function(){
     resetestForm2();
});

$('#controlBar2 textarea').click(function(e) {
  e.stopPropagation2();
});

$('#skuVerification2').on('blur',function(){
     skuVerification2();
});

$('#spCode2').on('blur',function(){
     spVerification2();
});

$('#warrantyExtension2').on('click',function(){
     validateWarranty2();
});

$('#limitLiability2').on('blur',function(){
     rspCheckVal2();
});

$('#modelNumber2').on('blur',function(){
     $('#modelNumberSam2').val($(this).val());
});

$('#serialNumber2').on('blur',function(){
     $('#serialNumberSam2').val($(this).val());
});

$('#samCheckButton2').on('click',function(){
     $('#samModal2').modal('show');
     samVal2();
});

function alertBoxVal2() {
  if ($('#lolAlert2').hasClass("text-danger", true) || $('#rspAlert2').hasClass("text-danger", true) || $('#mjcAlert2').hasClass("text-danger", true) || $('#300Alert2').hasClass("text-danger", true)) {
    $('#alertBoxButton2').prop("disabled", false);
    $('#formSubmitButton2').prop("disabled", true);
    $('#formSubmitButton2').removeClass("bg-success").addClass("bg-warning");
    $('#alertBoxButton2').removeClass("bg-light").addClass("bg-warning");
    $('#alertFAB2').removeClass("bg-success").addClass("bg-danger");
  } else {
    $('#alertBoxButton2').prop("disabled", true);
    $('#formSubmitButton2').prop("disabled", false);
    $('#formSubmitButton2').removeClass("bg-warning").addClass("bg-success");
    $('#alertBoxButton2').removeClass("bg-warning").addClass("bg-light");
    $('#alertFAB2').removeClass("bg-danger").addClass("bg-success");    
  }
};

function alertBoxOverride2 () {
    $('#alertBoxButton2').prop("disabled", true);
    $('#formSubmitButton2').prop("disabled", false);
    $('#formSubmitButton2').removeClass("bg-warning").addClass("bg-success");
    $('#alertBoxButton2').removeClass("bg-success").addClass("bg-light");
}

//SKU Verification
function skuVerification2() {
    var triggerWords2 = ['MJC5', 'GMJC5', 'MJC10', 'MJC5-V', 'MJC10-NC', 'MJC210', 'D-MJC10', 'D-MJC210', 'MJR10', 'MJC5E', 'MJC5-NC', 'MJC8', 'MJC10-NL', 'NLMJC10', 'GMJC10', 'MJC10NLF', 'MJR5', 'RPL1U50', 'RPL1U100', 'RPL1U200', 'RPL1U300', 'RPL1U400', 'RPL1U500', 'RPL1U750', 'RPL1U1000', 'RPL2U50', 'RPL2U100', 'RPL2U200', 'RPL2U300', 'RPL2U400', 'RPL2U500', 'RPL2U1000'];
    for (var i = 0; i < triggerWords2.length; i++) {
        if ($('#skuVerification2').val().toUpperCase() == triggerWords2[i]) {
            $('#mjcAlert2').removeClass("fa-check-circle-o").addClass("fa-times-circle").addClass("text-danger");
            $('#overrideSubmitButton2').prop( "disabled", false );
            alert('CHECK PLAN SKU BEFORE CONTINUING');
        } 
      } 
}

//Samsung Ice Maker Warranty
function samVal2() {
  var modVal2 = $('#modelNumberSam2').val();
  var serVal2 = $('#serialNumberSam2').val();
  var aVal2 = a2();
  function a2() {
    var snArray2 = ['HC', 'J1', 'J2', 'J3', 'J4', 'J5', 'J6', 'J7', 'J8', 'J9'];
    for (var i = 0; i < snArray2.length; i++) {
      if (modVal2.toUpperCase().includes("RF", 0-2) == true) {
          $('#modAlert2').addClass("bg-warning");
      };
      if (serVal2.toUpperCase().includes(snArray2[i], 5-7) == true) {
          $('#serAlert2').addClass("bg-warning"); 
          $('#samVerification2').prop( "hidden", false );
          $('#overrideSP2').prop( "disabled", false ); 
      };
    };
  };
  if (aVal2 = true) {
    $('#samWarning2').prop( "hidden", false );
    $('#overrideSam2').prop("disabled", false);
  } 
};

//SP Verification
function spVerification2() {
    var triggerCodes2 = ['SP-NL-AMEX', 'S-SEAN-HIC'];
    for (var i = 0; i < triggerCodes2.length; i++) {
        if ($('#spCode2').val().toUpperCase() == triggerCodes2[i]) {
            alert('Credit Card Provider, fill out credit card tab');
            $('#overrideHeader2').prop( "hidden", false );
            $('#overrideSPVis2').prop( "hidden", false );
            $('#overrideSP2').prop( "disabled", false );  
        }; 
      }; 
};

//Warranty Information display mirroring
$('.mirror2').on('keyup', function(){
  $('.'+$(this).attr('class')).val($(this).val());
});

//Warranty Information display mirroring
$('.mirror3').on('keyup', function(){
  $('.'+$(this).attr('class')).val($(this).val());
});

//Calculation Functions
function calculateLiabilities2() {
  $('#limitLiability2').val(
    (parseFloat($('#originalPrice2').val() ? $('#originalPrice2').val() : "0.00")
    -
    parseFloat($('#previousPaid2').val() ? $('#previousPaid2').val() : "0.00")).toFixed(2)
  )
  var txt = "";
  if ($('#limitLiability2').val() < 300) {    
      $('#limitLiability2').tooltip({trigger: 'manual'}).tooltip('show');
      $('#overrideWarranty2').prop("disabled", false );
      $('#overrideWarrantyVis2').prop( "hidden", false );
      $('#300Alert2').removeClass("fa-check-circle-o").addClass("fa-times-circle").addClass("text-danger");
  } else {
      $('#limitLiability2').tooltip({trigger: 'manual'}).tooltip('hide')
      $('#300Alert2').removeClass("fa-times-circle").removeClass("text-danger").addClass("fa-check-circle-o");
  }
}

function rspCheckVal2() {
  if ($('#rspButton2').prop('checked') && $('#previousPaid2').val() > 0) {
      $('#rspCheckField3').prop( "hidden", false );          
      $('#rspCheck3').val(
          (
          (((parseFloat($('#previousPaid2').val() ? $('#previousPaid2').val() : "0.00")
          +
          (250))
          *
          (100))
          /
          parseFloat($('#originalPrice2').val() ? $('#originalPrice2').val() : "0.00")
          )).toFixed(0)); 
    };
  if ($('#rspCheck2').val() > 70) {
      $('#rspAlert2').removeClass("fa-check-circle-o").addClass("fa-times-circle").addClass("text-danger");
  }   else {
    $('#rspAlert2').removeClass("fa-times-circle").addClass("fa-times-check-o").removeClass("text-danger");
  };    
};

function calculateExpenseCharge2() {
  $('#totalEstimate2').val(
    (
      (parseFloat($('#totalParts2').val() ? $('#totalParts2').val() : "0.00")
      +
      parseFloat($('#totalLabor2').val() ? $('#totalLabor2').val() : "0.00")
      +
      parseFloat($('#totalTax2').val() ? $('#totalTax2').val() : "0.00")
      +
      parseFloat($('#totalMileage2').val() ? $('#totalMileage2').val() : "0.00")
      +
      parseFloat($('#totalMisc2').val() ? $('#totalMisc2').val() : "0.00"))      
      -
      (parseFloat($('#totalDeductible2').val() ? $('#totalDeductible2').val() : "0.00"))
    ).toFixed(2)
  );
  if ($('#rspButton2').prop('checked') && $('#previousPaid2').val() < 1) {
      $('#rspCheckField4').prop( "hidden", false );       
      $('#rspCheck4').val(
        (
          ((parseFloat($('#totalEstimate2').val() ? $('#totalEstimate2').val() : "0.00")
            *
            (100))
            /
            parseFloat($('#originalPrice2').val() ? $('#originalPrice2').val() : "0.00")
            )).toFixed(0))
    };    
  if ($('#rspCheck4').val() > 70) {
      $('#rspAlert2').removeClass("fa-check-circle-o").addClass("fa-times-circle").addClass("text-danger");
    }   else {
      $('#rspAlert2').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");
    };            
};

function calculatePPCDIAG2() {
  $('#ppcDIAG2').val(
    (parseFloat($('#previousPaid2').val() ? $('#previousPaid2').val() : "0.00")
    +
    parseFloat($('#diagOnly2').val() ? $('#diagOnly2').val() : "0.00")).toFixed(2)
   ) 
}

function calculateLOL2() {
  $('#remainingLOL2').val(
    (parseFloat($('#limitLiability2').val() ? $('#limitLiability2').val() : "0.00")
    -
    parseFloat($('#totalEstimate2').val() ? $('#totalEstimate2').val() : "0.00")).toFixed(2)
  )
  var txt = "";
  if ($('#remainingLOL2').val() < 0) {    
      $('#remainingLOL2').tooltip({trigger: 'manual'}).tooltip('show');
      $('#lolAlert2').removeClass("fa-check-circle-o").addClass("fa-times-circle").addClass("text-danger");
  } else {
      $('#remainingLOL2').tooltip({trigger: 'manual'}).tooltip('hide')
      $('#lolAlert2').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");
  }
}

// FORM SUBMIT VALIDATION SECTION

function submitForm2() {
  // Verify forms
  var formValidation2 = verifyForm2();
  $('#limitLiability2').tooltip({trigger: 'manual'}).tooltip('hide');
  $('#remainingLOL2').tooltip({trigger: 'manual'}).tooltip('hide');
  if (formValidation2) {
    // Populate #formReceipt with template.
    formReceiptTemplate2();
    otlVal2()
    // Pop modal to display template info
    $('#formReceiptModal2').modal('show');
  } else {
    $('#overrideModal2').modal('show');
  }
}

function validateWarranty2() {
  if (document.getElementById("warrantyExtension2").checked) {
      $('#overrideWarranty2').prop( "disabled", false );    
      $('#overrideWarrantyVis2').prop( "hidden", false );
  } 
}

$(function() {
  enable_cb2();
  $('#overrideRemLOL2').click(enable_cb2);
  $('#overrideWarranty2').click(enable_cb2);
  $('#overrideSP2').click(enable_cb2); 
  $('#overrideSam2').click(enable_cb2); 
});

function enable_cb2() {
  if (this.checked) {
    $("#bypassModalCloseButton2").removeAttr("disabled");
  } else {
    $("#bypassModalCloseButton2").attr("disabled", true);
  }
}

function verifyForm2() {
 if (document.getElementById("warrantyExtension2").checked || $('#overrideHeader2').prop('hidden') == false || $('#samVerification2').prop('hidden') == false) {
  return false;
 } else {
  return true;
 };
};

function receiptModalBypass2() {
    formReceiptTemplate2();  
    $('#formReceiptModal2').modal('show');
    $('#overrideWarranty2').prop( "disabled", true );    
    $('#overrideWarrantyVis2').prop( "hidden", true );  
    $('#overrideRemLOL2').prop( "disabled", true );    
    $('#overrideRemLOLVis2').prop( "hidden", true );      
}

$(document).ready(function () {
$('#estApproved2').change(function() {
  if ( $('#estApproved2').val() == "APPROVED") {
    $('#diagOnly2').prop( "disabled", true );
  } else {
    $('#diagOnly2').prop( "disabled", false );
    $('#diagOnly2').prop( "required", true );
  } 
});
});

//Form Reset Functions

function resetestForm2() {
    $('#estForm2').trigger("reset")
    $('html, body').animate({
        scrollTop: $("#infoBlock2").offset().top
    }, 800);
    $('#overrideRemLOL2').prop("disabled", true );
    $('#overrideRemLOLVis2').prop( "hidden", true );
    $('#overrideWarranty2').prop("disabled", true );
    $('#overrideWarrantyVis2').prop( "hidden", true ); 
    $('#bypassModalCloseButton2').prop( "disabled", true );
    $('#rspCheckField3').prop( "hidden", true );  
    $('#rspCheckField4').prop( "hidden", true );           
    $('#300Alert2').removeClass("text-danger").removeClass("fa-times-circle").addClass("fa-check-circle-o");
    $('#limitLiability2').tooltip({trigger: 'manual'}).tooltip('hide');
    $('#remainingLOL2').tooltip({trigger: 'manual'}).tooltip('hide');
    $('#rspAlert2').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");
    $('#mjcAlert2').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");
    $('#lolAlert2').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");
    $('#alertFAB2').removeClass("bg-danger").addClass("bg-success"); 
    $('#alertBoxButton2').removeClass("bg-success").addClass("bg-light");
    $('#overrideHeader2').prop( "hidden", true );
    $('#overrideWarranty2').prop( "disabled", true );
    $('#overrideSPVis2').prop( "hidden", true );    
    $('#modAlert2').removeClass("bg-warning");
    $('#serAlert2').removeClass("bg-warning"); 
    $('#samVerification2').prop( "hidden", true );
    $('#overrideSam2').prop("disabled", true);  
    $('#emailFormButton2').prop('disabled', false); 
    $('#emailFormButton2').html("OTL Send");
}

function resetSetForm() {
  $('#setForm').trigger("reset");
};

function resetestFormButton2() {
  $('#estForm2').trigger("reset");
  $('#formSubmitButton2').prop("disabled", false);
      $('html, body').animate({
        scrollTop: $("#infoBlock2").offset().top
    }, 800);
  $('#overrideRemLOL2').prop("disabled", true );
  $('#overrideRemLOLVis2').prop( "hidden", true );
  $('#overrideWarranty2').prop("disabled", true );
  $('#overrideWarrantyVis2').prop( "hidden", true ); 
  $('#bypassModalCloseButton2').prop( "disabled", true );
  $('#rspCheckField3').prop( "hidden", true );  
  $('#rspCheckField4').prop( "hidden", true );   
  $('#300Alert2').removeClass("text-danger").removeClass("fa-times-circle").addClass("fa-check-circle-o");  
  $('#limitLiability2').tooltip({trigger: 'manual'}).tooltip('hide');  
  $('#remainingLOL2').tooltip({trigger: 'manual'}).tooltip('hide');
  $('#rspAlert2').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");    
  $('#mjcAlert2').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");
  $('#lolAlert2').removeClass("fa-times-circle").addClass("fa-check-circle-o").removeClass("text-danger");
  $('#alertFAB2').removeClass("bg-danger").addClass("bg-success");   
  $('#alertBoxButton2').removeClass("bg-success").addClass("bg-light"); 
  $('#overrideHeader2').prop( "hidden", true );
  $('#overrideWarranty2').prop( "disabled", true );
  $('#overrideSPVis2').prop( "hidden", true ); 
  $('#modAlert2').removeClass("bg-warning");
  $('#serAlert2').removeClass("bg-warning");  
  $('#samVerification2').prop( "hidden", true );
  $('#overrideSam2').prop("disabled", true);
  $('#emailFormButton2').prop('disabled', false);
  $('#emailFormButton2').html("OTL Send");
}

//Generating Shortkey Functions

function formReceiptTemplate2() {
  $('#formReceipt2').val(
    '\n '
    +Date() + ' '  + $('#soNumber2').val()
    +'\n '
    +'\nName of s/p and person supplying estimate: '  + $('#callerName2 ').val() + ' @ ' + $('#serviceProvider2').val()
    +'\nModel number: ' + $('#modelNumber2').val()
    +'\nSerial number: ' + $('#serialNumber2').val()
    +'\nCause of Failure: ' + $('#failureCause2').val()
    +'\nManufacturer\'s Warranty Link: ' + $('#warrantyLink2').val()
    +'\nPlan SKU: ' + $('#skuVerification2').val()
    +'\n*If exception exists for this MFG refer service provider to the manufacturer if within exception period.* '
    +'\nOPP: $'+ $('#originalPrice2').val() +' Previous Paid Claims: $'+ $('#previousPaid2').val() +' Limit of Liability: $' + $('#limitLiability2').val()
    +'\nWhere were part prices verified: ' + $('#partDistributor2').val()
    +'\n'
    +'\n'
    +'\nTotal Parts: $'+ $('#totalParts2').val() +' Labor: $'+ $('#totalLabor2').val() +' Tax: $' + $('#totalTax2').val()
    +'\nMileage: $' + $('#totalMileage2').val() +' Misc: $'+ $('#totalMisc2').val()
    +'\nDeductible (if applicable): $' + $('#totalDeductible2').val()
    +'\nTotal Estimate: $' + $('#totalEstimate2').val()
    +'\n___________________________'
    +'\nEstimate: ' + $('#estApproved2').val()
    +'\nAttempted Repair or Diagnostic Fee if Pending: $' + $('#diagOnly2').val()
    +'\nPre-Approval Code: '
    +'\n'
    +'\n"As a reminder, all pre-approvals are contingent upon verification of your contracted or agreed upon service rates. Contracted rates supersede preliminary estimates and approvals".'
    +'\n '
    +'\n '    
  );
  $('#formReceiptJFRR2').val(
    '\n '
    + $('#soNumber2').val()
    +'\n '    
    +'\nJustification for Replacement Review (why) :  '
    +'\nInitial purchase price of unit (OPP): '  + $('#originalPrice2').val()
    +'\nAttempted Repair or Diagnostic Fee: ' + $('#diagOnly2').val()
    +'\nTotal of all previous paid, pending and current owed clams: ' + $('#ppcDIAG2').val()
    +'\n(If Diag was done please enter total amount of estimate here): ' + $('#totalEstimate2').val()
    +'\nIs Proof of Purchase required? Yes _____        No _____'
    +'\nIf Yes make sure it been received'
    +'\nIf open SO was dispatched you will need to create Sub SO and assigned to Pending Review'
    +'\n '    
    +'\n--------------------------------------------------------------' 
    +'\n '    
  );
}

// Email over limits
$('#emailFormButton2').on('click',function(){
     emailOTL2();
     $('#emailFormButton2').prop('disabled', true);
     $('#emailFormButton2').html("SENT");
});

function emailOTL2() {
    $.ajax({
      url: 'validator_email',
      type: 'put',
      data: { 
        username: $('#username').val(),
        receipt: $('#formReceipt2').val(),
        caller_name: $('#callerName2').val(), 
        service_provider: $('#serviceProvider2').val(), 
        model_number: $('#modelNumber2').val(), 
        serial_number: $('#serialNumber2').val(), 
        failure_cause: $('#failureCause2').val(), 
        warranty_link: $('#warrantyLink2').val(), 
        sku: $('#skuVerification2').val(), 
        opp: $('#originalPrice2').val(), 
        ppc: $('#previousPaid2').val(),
        lol: $('#limitLiability2').val(),
        distributor: $('#partDistributor2').val(),
        total_parts: $('#totalParts2').val(),
        total_labor: $('#totalLabor2').val(),
        total_tax: $('#totalTax2').val(),
        total_mileage: $('#totalMileage2').val(),
        total_misc: $('#totalMisc2').val(),
        total_deductible: $('#totalDeductible2').val(),
        total_estimate: $('#totalEstimate2').val(),
        approved: $('#estApproved2').val(),
        diagnostic: $('#diagOnly2').val(),
        serviceorder: $('#soNumber2').val() 
      }
    })
}

function otlVal2() {
  if ($('#totalEstimate2').val() > 849.99) {
    $('#emailFormButton2').prop('hidden', false)
  } else {
    $('#emailFormButton2').prop('hidden', true)
  }
}

//Clipboard Copy Functions

function copyToClipboard2() {
    $('#formReceipt2').select();
    document.execCommand("copy");
}

function copyToClipboardJFRR2() {
    $('#formReceiptJFRR2').select();
    document.execCommand("copy");
}

function copyToClipboardNotepad2() {
    $('#formReceipt2').select();
    document.execCommand("copy");
}

function copyToClipboardHistoryTicker2() {
    $('#formReceipt2').select();
    document.execCommand("copy");
}

//History Tab Function

function appendTemplate2(){
    var pasteTime2 = document.getElementById("formReceipt2").value;    
    document.getElementById("receiptHistory").value += pasteTime2;
    var pasteTime4 = document.getElementById("formReceiptJFRR2").value;    
    document.getElementById("receiptHistory").value += pasteTime4;
    
}

;
(function() {


}).call(this);
(function() {


}).call(this);
// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, or any plugin's
// vendor/assets/javascripts directory can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file. JavaScript code in this file should be added after the last require_* statement.
//
// Read Sprockets README (https://github.com/rails/sprockets#sprockets-directives) for details
// about supported directives.
//





// require bootstrap









;
